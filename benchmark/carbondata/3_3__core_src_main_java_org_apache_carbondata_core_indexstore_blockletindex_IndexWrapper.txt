1:b681244: /*
1:b681244:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b681244:  * contributor license agreements.  See the NOTICE file distributed with
1:b681244:  * this work for additional information regarding copyright ownership.
1:b681244:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b681244:  * (the "License"); you may not use this file except in compliance with
1:b681244:  * the License.  You may obtain a copy of the License at
1:b681244:  *
1:b681244:  *    http://www.apache.org/licenses/LICENSE-2.0
1:b681244:  *
1:b681244:  * Unless required by applicable law or agreed to in writing, software
1:b681244:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b681244:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b681244:  * See the License for the specific language governing permissions and
1:b681244:  * limitations under the License.
1:b681244:  */
1:b681244: package org.apache.carbondata.core.indexstore.blockletindex;
1:b681244: 
1:b681244: import java.util.List;
1:b681244: 
1:b681244: import org.apache.carbondata.core.datastore.block.AbstractIndex;
1:b681244: import org.apache.carbondata.core.datastore.block.SegmentProperties;
1:b681244: import org.apache.carbondata.core.datastore.block.TableBlockInfo;
1:d35fbaf: import org.apache.carbondata.core.datastore.filesystem.CarbonFile;
1:d35fbaf: import org.apache.carbondata.core.datastore.impl.FileFactory;
1:b681244: import org.apache.carbondata.core.metadata.blocklet.DataFileFooter;
1:b681244: 
1:b681244: /**
1:b681244:  * Wrapper of abstract index
1:b681244:  * TODO it could be removed after refactor
1:b681244:  */
1:b681244: public class IndexWrapper extends AbstractIndex {
1:b681244: 
1:d35fbaf:   private List<TableBlockInfo> blockInfos;
1:d35fbaf: 
1:316e9de:   public IndexWrapper(List<TableBlockInfo> blockInfos, SegmentProperties segmentProperties) {
1:d35fbaf:     this.blockInfos = blockInfos;
1:316e9de:     this.segmentProperties = segmentProperties;
1:daa6465:     dataRefNode = new BlockletDataRefNode(blockInfos, 0,
1:316e9de:         this.segmentProperties.getDimensionColumnsValueSize());
2:b681244:   }
1:b681244: 
1:b681244:   @Override public void buildIndex(List<DataFileFooter> footerList) {
1:b681244:   }
1:d35fbaf: 
1:d35fbaf:   @Override public void clear() {
1:d35fbaf:     super.clear();
1:d35fbaf:     if (blockInfos != null) {
1:d35fbaf:       for (TableBlockInfo blockInfo : blockInfos) {
1:d35fbaf:         String dataMapWriterPath = blockInfo.getDataMapWriterPath();
1:d35fbaf:         if (dataMapWriterPath != null) {
1:d35fbaf:           CarbonFile file = FileFactory.getCarbonFile(dataMapWriterPath);
1:d35fbaf:           FileFactory.deleteAllCarbonFilesOfDir(file);
1:d35fbaf:         }
1:d35fbaf:       }
1:d35fbaf:     }
1:d35fbaf:   }
1:b681244: }
============================================================================
author:kumarvishal09
-------------------------------------------------------------------------------
commit:316e9de
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:   public IndexWrapper(List<TableBlockInfo> blockInfos, SegmentProperties segmentProperties) {
1:     this.segmentProperties = segmentProperties;
1:         this.segmentProperties.getDimensionColumnsValueSize());
author:Jacky Li
-------------------------------------------------------------------------------
commit:df5d7a9
/////////////////////////////////////////////////////////////////////////
0: import java.io.IOException;
/////////////////////////////////////////////////////////////////////////
0:   public IndexWrapper(List<TableBlockInfo> blockInfos) throws IOException {
commit:daa6465
/////////////////////////////////////////////////////////////////////////
1:     dataRefNode = new BlockletDataRefNode(blockInfos, 0,
author:ravipesala
-------------------------------------------------------------------------------
commit:d35fbaf
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.datastore.filesystem.CarbonFile;
1: import org.apache.carbondata.core.datastore.impl.FileFactory;
/////////////////////////////////////////////////////////////////////////
1:   private List<TableBlockInfo> blockInfos;
1: 
1:     this.blockInfos = blockInfos;
/////////////////////////////////////////////////////////////////////////
1: 
1:   @Override public void clear() {
1:     super.clear();
1:     if (blockInfos != null) {
1:       for (TableBlockInfo blockInfo : blockInfos) {
1:         String dataMapWriterPath = blockInfo.getDataMapWriterPath();
1:         if (dataMapWriterPath != null) {
1:           CarbonFile file = FileFactory.getCarbonFile(dataMapWriterPath);
1:           FileFactory.deleteAllCarbonFilesOfDir(file);
1:         }
1:       }
1:     }
1:   }
commit:6094af6
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:     segmentProperties = new SegmentProperties(blockInfos.get(0).getDetailInfo().getColumnSchemas(),
0:         blockInfos.get(0).getDetailInfo().getDimLens());
commit:b681244
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.indexstore.blockletindex;
1: 
0: import java.io.IOException;
1: import java.util.List;
1: 
1: import org.apache.carbondata.core.datastore.block.AbstractIndex;
1: import org.apache.carbondata.core.datastore.block.SegmentProperties;
1: import org.apache.carbondata.core.datastore.block.TableBlockInfo;
1: import org.apache.carbondata.core.metadata.blocklet.DataFileFooter;
0: import org.apache.carbondata.core.util.CarbonUtil;
1: 
1: /**
1:  * Wrapper of abstract index
1:  * TODO it could be removed after refactor
1:  */
1: public class IndexWrapper extends AbstractIndex {
1: 
0:   public IndexWrapper(List<TableBlockInfo> blockInfos) {
0:     DataFileFooter fileFooter = null;
0:     try {
0:       fileFooter = CarbonUtil.readMetadatFile(blockInfos.get(0));
0:     } catch (IOException e) {
0:       throw new RuntimeException(e);
1:     }
0:     segmentProperties = new SegmentProperties(fileFooter.getColumnInTable(),
0:         fileFooter.getSegmentInfo().getColumnCardinality());
0:     dataRefNode = new BlockletDataRefNodeWrapper(blockInfos, 0,
0:         segmentProperties.getDimensionColumnsValueSize());
1:   }
1: 
1:   @Override public void buildIndex(List<DataFileFooter> footerList) {
1:   }
1: }
============================================================================