1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: package org.apache.carbondata.hadoop;
1:cd6a4ff: 
1:590ecce: import java.io.Serializable;
1:cd6a4ff: import java.util.LinkedHashSet;
1:df5d7a9: import java.util.Objects;
1:cd6a4ff: import java.util.Set;
1:cd6a4ff: 
1:cd6a4ff: /**
1:cd6a4ff:  * User can add required columns
1:cd6a4ff:  */
1:590ecce: public class CarbonProjection implements Serializable {
1:590ecce: 
1:590ecce:   private static final long serialVersionUID = -4328676723039530713L;
1:cd6a4ff: 
1:cd6a4ff:   private Set<String> columns = new LinkedHashSet<>();
1:cd6a4ff: 
1:df5d7a9:   public CarbonProjection() {
1:df5d7a9:   }
1:df5d7a9: 
1:df5d7a9:   public CarbonProjection(String[] columnNames) {
1:df5d7a9:     Objects.requireNonNull(columnNames);
1:df5d7a9:     for (String columnName : columnNames) {
1:df5d7a9:       columns.add(columnName);
1:df5d7a9:     }
1:df5d7a9:   }
1:df5d7a9: 
1:cd6a4ff:   public void addColumn(String column) {
1:cd6a4ff:     columns.add(column);
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   public String[] getAllColumns() {
1:cd6a4ff:     return columns.toArray(new String[columns.size()]);
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   public boolean isEmpty() {
1:cd6a4ff:     return columns.isEmpty();
1:cd6a4ff:   }
1:cd6a4ff: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:df5d7a9
/////////////////////////////////////////////////////////////////////////
1: import java.util.Objects;
/////////////////////////////////////////////////////////////////////////
1:   public CarbonProjection() {
1:   }
1: 
1:   public CarbonProjection(String[] columnNames) {
1:     Objects.requireNonNull(columnNames);
1:     for (String columnName : columnNames) {
1:       columns.add(columnName);
1:     }
1:   }
1: 
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:jackylk
-------------------------------------------------------------------------------
commit:590ecce
/////////////////////////////////////////////////////////////////////////
1: import java.io.Serializable;
1: public class CarbonProjection implements Serializable {
1: 
1:   private static final long serialVersionUID = -4328676723039530713L;
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.hadoop;
1: 
1: import java.util.LinkedHashSet;
1: import java.util.Set;
1: 
1: /**
1:  * User can add required columns
1:  */
0: public class CarbonProjection {
1: 
1:   private Set<String> columns = new LinkedHashSet<>();
1: 
1:   public void addColumn(String column) {
1:     columns.add(column);
1:   }
1: 
1:   public String[] getAllColumns() {
1:     return columns.toArray(new String[columns.size()]);
1:   }
1: 
1:   public boolean isEmpty() {
1:     return columns.isEmpty();
1:   }
1: }
============================================================================