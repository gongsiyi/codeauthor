1:5ef67ac: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:5ef67ac:  *
1:5ef67ac:  *    http://www.apache.org/licenses/LICENSE-2.0
1:5ef67ac:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:5ef67ac:  */
1:5ef67ac: 
1:5ef67ac: package org.apache.carbondata.core.keygenerator.factory;
1:5ef67ac: 
1:5ef67ac: import org.apache.carbondata.core.keygenerator.KeyGenerator;
1:5ef67ac: 
1:5ef67ac: import org.junit.Test;
1:5ef67ac: 
1:5ef67ac: import static junit.framework.Assert.assertEquals;
1:5ef67ac: 
1:5ef67ac: import static org.apache.carbondata.core.keygenerator.factory.KeyGeneratorFactory.getKeyGenerator;
1:5ef67ac: 
1:5ef67ac: public class KeyGeneratorFactoryUnitTest {
1:5ef67ac: 
1:5ef67ac:   @Test public void testGetKeyGenerator() throws Exception {
1:5ef67ac: 
1:5ef67ac:     int expected = 3;
1:5ef67ac:     int[] dimension = new int[] { 1, 2, 3 };
1:5ef67ac:     KeyGenerator result = getKeyGenerator(dimension);
1:5ef67ac:     assertEquals(expected, result.getDimCount());
1:5ef67ac:   }
1:5ef67ac: 
1:5ef67ac:   /**
1:5ef67ac:    * Return 0 when we provide empty int[] in method.
1:5ef67ac:    *
1:5ef67ac:    * @throws Exception
1:5ef67ac:    */
1:5ef67ac: 
1:5ef67ac:   @Test public void testGetKeyGeneratorNegative() throws Exception {
1:5ef67ac: 
1:5ef67ac:     int expected = 0;
1:5ef67ac:     int[] dimension = new int[] {};
1:5ef67ac:     KeyGenerator result = getKeyGenerator(dimension);
1:5ef67ac:     assertEquals(expected, result.getDimCount());
1:5ef67ac:   }
1:5ef67ac: 
1:5ef67ac:   @Test public void testGetKeyGenerato() throws Exception {
1:5ef67ac: 
1:5ef67ac:     int expected = 9;
1:5ef67ac:     int[] dimCardinality = new int[] { 10, 20, 30, 11, 26, 52, 85, 65, 12 };
1:5ef67ac:     int[] columnSplits = new int[] { 2 };
1:5ef67ac:     KeyGenerator result = getKeyGenerator(dimCardinality, columnSplits);
1:5ef67ac:     assertEquals(expected, result.getDimCount());
1:5ef67ac:   }
1:5ef67ac: 
1:5ef67ac: }
============================================================================
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:Anurag
-------------------------------------------------------------------------------
commit:5ef67ac
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: 
1: package org.apache.carbondata.core.keygenerator.factory;
1: 
1: import org.apache.carbondata.core.keygenerator.KeyGenerator;
1: 
1: import org.junit.Test;
1: 
1: import static junit.framework.Assert.assertEquals;
1: 
1: import static org.apache.carbondata.core.keygenerator.factory.KeyGeneratorFactory.getKeyGenerator;
1: 
1: public class KeyGeneratorFactoryUnitTest {
1: 
1:   @Test public void testGetKeyGenerator() throws Exception {
1: 
1:     int expected = 3;
1:     int[] dimension = new int[] { 1, 2, 3 };
1:     KeyGenerator result = getKeyGenerator(dimension);
1:     assertEquals(expected, result.getDimCount());
1:   }
1: 
1:   /**
1:    * Return 0 when we provide empty int[] in method.
1:    *
1:    * @throws Exception
1:    */
1: 
1:   @Test public void testGetKeyGeneratorNegative() throws Exception {
1: 
1:     int expected = 0;
1:     int[] dimension = new int[] {};
1:     KeyGenerator result = getKeyGenerator(dimension);
1:     assertEquals(expected, result.getDimCount());
1:   }
1: 
1:   @Test public void testGetKeyGenerato() throws Exception {
1: 
1:     int expected = 9;
1:     int[] dimCardinality = new int[] { 10, 20, 30, 11, 26, 52, 85, 65, 12 };
1:     int[] columnSplits = new int[] { 2 };
1:     KeyGenerator result = getKeyGenerator(dimCardinality, columnSplits);
1:     assertEquals(expected, result.getDimCount());
1:   }
1: 
1: }
============================================================================