1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: 
1:349c59c: package org.apache.carbondata.processing.sort.sortdata;
1:cd6a4ff: 
1:82741c1: import java.io.Serializable;
1:82741c1: 
1:82741c1: public class SortObserver implements Serializable {
1:cd6a4ff:   /**
1:cd6a4ff:    * is failed
1:cd6a4ff:    */
1:cd6a4ff:   private boolean isFailed;
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * @return the isFailed
1:cd6a4ff:    */
1:cd6a4ff:   public boolean isFailed() {
1:cd6a4ff:     return isFailed;
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * @param isFailed the isFailed to set
1:cd6a4ff:    */
1:cd6a4ff:   public void setFailed(boolean isFailed) {
1:cd6a4ff:     this.isFailed = isFailed;
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:349c59c
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.processing.sort.sortdata;
author:Yadong Qi
-------------------------------------------------------------------------------
commit:82741c1
/////////////////////////////////////////////////////////////////////////
1: import java.io.Serializable;
1: 
1: public class SortObserver implements Serializable {
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: 
0: package org.apache.carbondata.processing.schema.metadata;
1: 
0: public class SortObserver {
1:   /**
1:    * is failed
1:    */
1:   private boolean isFailed;
1: 
1:   /**
1:    * @return the isFailed
1:    */
1:   public boolean isFailed() {
1:     return isFailed;
1:   }
1: 
1:   /**
1:    * @param isFailed the isFailed to set
1:    */
1:   public void setFailed(boolean isFailed) {
1:     this.isFailed = isFailed;
1:   }
1: 
1: }
============================================================================