1:95ce1da: /*
1:95ce1da:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:95ce1da:  * contributor license agreements.  See the NOTICE file distributed with
1:95ce1da:  * this work for additional information regarding copyright ownership.
1:95ce1da:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:95ce1da:  * (the "License"); you may not use this file except in compliance with
1:95ce1da:  * the License.  You may obtain a copy of the License at
1:95ce1da:  *
1:95ce1da:  *    http://www.apache.org/licenses/LICENSE-2.0
1:95ce1da:  *
1:95ce1da:  * Unless required by applicable law or agreed to in writing, software
1:95ce1da:  * distributed under the License is distributed on an "AS IS" BASIS,
1:95ce1da:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:95ce1da:  * See the License for the specific language governing permissions and
1:95ce1da:  * limitations under the License.
1:95ce1da:  */
1:95ce1da: 
1:95ce1da: package org.apache.carbondata.core.util;
1:95ce1da: 
1:2a9604c: import org.apache.hadoop.conf.Configuration;
1:2a9604c: 
1:95ce1da: /**
1:95ce1da:  * This class maintains ThreadLocal session params
1:95ce1da:  */
1:39644b5: public class ThreadLocalSessionInfo {
1:39644b5:   static final InheritableThreadLocal<CarbonSessionInfo> threadLocal =
1:39644b5:       new InheritableThreadLocal<CarbonSessionInfo>();
1:95ce1da: 
1:39644b5:   public static void setCarbonSessionInfo(CarbonSessionInfo carbonSessionInfo) {
1:39644b5:     threadLocal.set(carbonSessionInfo);
1:95ce1da:   }
1:95ce1da: 
1:39644b5:   public static CarbonSessionInfo getCarbonSessionInfo() {
1:95ce1da:     return threadLocal.get();
1:95ce1da:   }
1:2a9604c: 
1:2a9604c:   public static synchronized CarbonSessionInfo getOrCreateCarbonSessionInfo() {
1:2a9604c:     CarbonSessionInfo info = threadLocal.get();
1:2a9604c:     if (info == null || info.getSessionParams() == null) {
1:2a9604c:       info = new CarbonSessionInfo();
1:2a9604c:       info.setSessionParams(new SessionParams());
1:2a9604c:       threadLocal.set(info);
1:2a9604c:     }
1:2a9604c:     return info;
1:2a9604c:   }
1:2a9604c: 
1:2a9604c:   public static void setConfigurationToCurrentThread(Configuration configuration) {
1:2a9604c:     getOrCreateCarbonSessionInfo().getNonSerializableExtraInfo().put("carbonConf", configuration);
1:2a9604c:   }
1:2a9604c: 
1:2a9604c:   public static void unsetAll() {
1:2a9604c:     threadLocal.remove();
1:2a9604c:   }
1:95ce1da: }
============================================================================
author:kunal642
-------------------------------------------------------------------------------
commit:2a9604c
/////////////////////////////////////////////////////////////////////////
1: import org.apache.hadoop.conf.Configuration;
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:   public static synchronized CarbonSessionInfo getOrCreateCarbonSessionInfo() {
1:     CarbonSessionInfo info = threadLocal.get();
1:     if (info == null || info.getSessionParams() == null) {
1:       info = new CarbonSessionInfo();
1:       info.setSessionParams(new SessionParams());
1:       threadLocal.set(info);
1:     }
1:     return info;
1:   }
1: 
1:   public static void setConfigurationToCurrentThread(Configuration configuration) {
1:     getOrCreateCarbonSessionInfo().getNonSerializableExtraInfo().put("carbonConf", configuration);
1:   }
1: 
1:   public static void unsetAll() {
1:     threadLocal.remove();
1:   }
author:mohammadshahidkhan
-------------------------------------------------------------------------------
commit:39644b5
/////////////////////////////////////////////////////////////////////////
1: public class ThreadLocalSessionInfo {
1:   static final InheritableThreadLocal<CarbonSessionInfo> threadLocal =
1:       new InheritableThreadLocal<CarbonSessionInfo>();
1:   public static void setCarbonSessionInfo(CarbonSessionInfo carbonSessionInfo) {
1:     threadLocal.set(carbonSessionInfo);
1:   public static CarbonSessionInfo getCarbonSessionInfo() {
author:Manohar
-------------------------------------------------------------------------------
commit:95ce1da
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.util;
1: 
1: /**
1:  * This class maintains ThreadLocal session params
1:  */
0: public class ThreadLocalSessionParams {
0:   static final InheritableThreadLocal<SessionParams> threadLocal =
0:       new InheritableThreadLocal<SessionParams>();
1: 
0:   public static void setSessionParams(SessionParams sessionParams) {
0:     threadLocal.set(sessionParams);
1:   }
1: 
0:   public static SessionParams getSessionParams() {
1:     return threadLocal.get();
1:   }
1: }
============================================================================