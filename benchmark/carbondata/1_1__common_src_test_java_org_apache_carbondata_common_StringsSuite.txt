1:1d827c7: /*
1:1d827c7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1d827c7:  * contributor license agreements.  See the NOTICE file distributed with
1:1d827c7:  * this work for additional information regarding copyright ownership.
1:1d827c7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1d827c7:  * (the "License"); you may not use this file except in compliance with
1:1d827c7:  * the License.  You may obtain a copy of the License at
1:1d827c7:  *
1:1d827c7:  *    http://www.apache.org/licenses/LICENSE-2.0
1:1d827c7:  *
1:1d827c7:  * Unless required by applicable law or agreed to in writing, software
1:1d827c7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1d827c7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1d827c7:  * See the License for the specific language governing permissions and
1:1d827c7:  * limitations under the License.
1:1d827c7:  */
1:1d827c7: 
1:1d827c7: package org.apache.carbondata.common;
1:1d827c7: 
1:1d827c7: import org.junit.Assert;
1:1d827c7: import org.junit.Test;
1:1d827c7: 
1:1d827c7: public class StringsSuite {
1:1d827c7: 
1:1d827c7:   @Test(expected = NullPointerException.class)
1:1d827c7:   public void testMkStringNullString() {
1:1d827c7:     Strings.mkString(null, ",");
1:1d827c7:   }
1:1d827c7: 
1:1d827c7:   @Test(expected = NullPointerException.class)
1:1d827c7:   public void testMkStringNullDelimeter() {
1:1d827c7:     Strings.mkString(new String[]{"abc"}, null);
1:1d827c7:   }
1:1d827c7:   
1:1d827c7:   @Test
1:1d827c7:   public void testMkString() {
1:1d827c7:     String[] strings = new String[]{};
1:1d827c7:     String output = Strings.mkString(strings, ",");
1:1d827c7:     Assert.assertTrue(output.length() == 0);
1:1d827c7: 
1:1d827c7:     strings = new String[]{"abc"};
1:1d827c7:     output = Strings.mkString(strings, ",");
1:1d827c7:     Assert.assertEquals("abc", output);
1:1d827c7: 
1:1d827c7:     strings = new String[]{"abc", "def"};
1:1d827c7:     output = Strings.mkString(strings, ",");
1:1d827c7:     Assert.assertEquals("abc,def", output);
1:1d827c7: 
1:1d827c7:     strings = new String[]{"abc", "def", "ghj"};
1:1d827c7:     output = Strings.mkString(strings, ",");
1:1d827c7:     Assert.assertEquals("abc,def,ghj", output);
1:1d827c7:   }
1:1d827c7: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:1d827c7
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.common;
1: 
1: import org.junit.Assert;
1: import org.junit.Test;
1: 
1: public class StringsSuite {
1: 
1:   @Test(expected = NullPointerException.class)
1:   public void testMkStringNullString() {
1:     Strings.mkString(null, ",");
1:   }
1: 
1:   @Test(expected = NullPointerException.class)
1:   public void testMkStringNullDelimeter() {
1:     Strings.mkString(new String[]{"abc"}, null);
1:   }
1:   
1:   @Test
1:   public void testMkString() {
1:     String[] strings = new String[]{};
1:     String output = Strings.mkString(strings, ",");
1:     Assert.assertTrue(output.length() == 0);
1: 
1:     strings = new String[]{"abc"};
1:     output = Strings.mkString(strings, ",");
1:     Assert.assertEquals("abc", output);
1: 
1:     strings = new String[]{"abc", "def"};
1:     output = Strings.mkString(strings, ",");
1:     Assert.assertEquals("abc,def", output);
1: 
1:     strings = new String[]{"abc", "def", "ghj"};
1:     output = Strings.mkString(strings, ",");
1:     Assert.assertEquals("abc,def,ghj", output);
1:   }
1: }
commit:1d827c7
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  *    http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.apache.carbondata.common;
0: 
0: import org.junit.Assert;
0: import org.junit.Test;
0: 
0: public class StringsSuite {
0: 
0:   @Test(expected = NullPointerException.class)
0:   public void testMkStringNullString() {
0:     Strings.mkString(null, ",");
0:   }
0: 
0:   @Test(expected = NullPointerException.class)
0:   public void testMkStringNullDelimeter() {
0:     Strings.mkString(new String[]{"abc"}, null);
0:   }
0:   
0:   @Test
0:   public void testMkString() {
0:     String[] strings = new String[]{};
0:     String output = Strings.mkString(strings, ",");
0:     Assert.assertTrue(output.length() == 0);
0: 
0:     strings = new String[]{"abc"};
0:     output = Strings.mkString(strings, ",");
0:     Assert.assertEquals("abc", output);
0: 
0:     strings = new String[]{"abc", "def"};
0:     output = Strings.mkString(strings, ",");
0:     Assert.assertEquals("abc,def", output);
0: 
0:     strings = new String[]{"abc", "def", "ghj"};
0:     output = Strings.mkString(strings, ",");
0:     Assert.assertEquals("abc,def,ghj", output);
0:   }
0: }
============================================================================