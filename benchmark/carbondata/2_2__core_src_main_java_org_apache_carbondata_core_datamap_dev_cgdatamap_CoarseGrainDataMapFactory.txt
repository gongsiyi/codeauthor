1:d35fbaf: /*
1:d35fbaf:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d35fbaf:  * contributor license agreements.  See the NOTICE file distributed with
1:d35fbaf:  * this work for additional information regarding copyright ownership.
1:d35fbaf:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d35fbaf:  * (the "License"); you may not use this file except in compliance with
1:d35fbaf:  * the License.  You may obtain a copy of the License at
1:d35fbaf:  *
1:d35fbaf:  *    http://www.apache.org/licenses/LICENSE-2.0
1:d35fbaf:  *
1:d35fbaf:  * Unless required by applicable law or agreed to in writing, software
1:d35fbaf:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d35fbaf:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d35fbaf:  * See the License for the specific language governing permissions and
1:d35fbaf:  * limitations under the License.
1:d35fbaf:  */
1:bbb1092: 
1:d35fbaf: package org.apache.carbondata.core.datamap.dev.cgdatamap;
1:d35fbaf: 
1:fc2a7eb: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:fc2a7eb: import org.apache.carbondata.common.annotations.InterfaceStability;
1:fc2a7eb: import org.apache.carbondata.core.datamap.DataMapLevel;
1:fc2a7eb: import org.apache.carbondata.core.datamap.dev.DataMapFactory;
1:9db662a: import org.apache.carbondata.core.metadata.schema.table.CarbonTable;
1:9db662a: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
1:d35fbaf: 
1:d35fbaf: /**
1:fc2a7eb:  *  Factory for {@link CoarseGrainDataMap}
1:d35fbaf:  *  1. Any filter query which hits the table with datamap will call prune method of CGdatamap.
1:d35fbaf:  *  2. The prune method of CGDatamap return list Blocklet , these blocklets contain the
1:d35fbaf:  *     information of block and blocklet.
1:d35fbaf:  *  3. Based on the splits scanrdd schedule the tasks.
1:d35fbaf:  */
1:fc2a7eb: @InterfaceAudience.Developer("DataMap")
1:fc2a7eb: @InterfaceStability.Evolving
1:9db662a: public abstract class CoarseGrainDataMapFactory extends DataMapFactory<CoarseGrainDataMap> {
1:d35fbaf: 
1:9db662a:   public CoarseGrainDataMapFactory(CarbonTable carbonTable, DataMapSchema dataMapSchema) {
1:9db662a:     super(carbonTable, dataMapSchema);
1:9db662a:   }
1:9db662a: 
1:9db662a:   @Override
1:9db662a:   public DataMapLevel getDataMapLevel() {
1:fc2a7eb:     return DataMapLevel.CG;
1:d35fbaf:   }
1:d35fbaf: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:9db662a
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.schema.table.CarbonTable;
1: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
/////////////////////////////////////////////////////////////////////////
1: public abstract class CoarseGrainDataMapFactory extends DataMapFactory<CoarseGrainDataMap> {
1:   public CoarseGrainDataMapFactory(CarbonTable carbonTable, DataMapSchema dataMapSchema) {
1:     super(carbonTable, dataMapSchema);
1:   }
1: 
1:   @Override
1:   public DataMapLevel getDataMapLevel() {
commit:bbb1092
/////////////////////////////////////////////////////////////////////////
1: 
commit:fc2a7eb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: import org.apache.carbondata.common.annotations.InterfaceStability;
1: import org.apache.carbondata.core.datamap.DataMapLevel;
1: import org.apache.carbondata.core.datamap.dev.DataMapFactory;
1:  *  Factory for {@link CoarseGrainDataMap}
1: @InterfaceAudience.Developer("DataMap")
1: @InterfaceStability.Evolving
0: public abstract class CoarseGrainDataMapFactory implements DataMapFactory<CoarseGrainDataMap> {
0:   @Override public DataMapLevel getDataMapType() {
1:     return DataMapLevel.CG;
commit:89a12af
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.datamap.dev.IndexDataMapFactory;
/////////////////////////////////////////////////////////////////////////
0: public abstract class AbstractCoarseGrainIndexDataMapFactory
0:     implements IndexDataMapFactory<AbstractCoarseGrainIndexDataMap> {
author:ravipesala
-------------------------------------------------------------------------------
commit:d35fbaf
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.datamap.dev.cgdatamap;
1: 
0: import org.apache.carbondata.core.datamap.DataMapType;
0: import org.apache.carbondata.core.datamap.dev.DataMapFactory;
1: 
1: /**
1:  *  1. Any filter query which hits the table with datamap will call prune method of CGdatamap.
1:  *  2. The prune method of CGDatamap return list Blocklet , these blocklets contain the
1:  *     information of block and blocklet.
1:  *  3. Based on the splits scanrdd schedule the tasks.
1:  */
0: public abstract class AbstractCoarseGrainDataMapFactory
0:     implements DataMapFactory<AbstractCoarseGrainDataMap> {
1: 
0:   @Override public DataMapType getDataMapType() {
0:     return DataMapType.CG;
1:   }
1: }
============================================================================