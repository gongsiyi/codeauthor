1:f089287: /*
1:f089287:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f089287:  * contributor license agreements.  See the NOTICE file distributed with
1:f089287:  * this work for additional information regarding copyright ownership.
1:f089287:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f089287:  * (the "License"); you may not use this file except in compliance with
1:f089287:  * the License.  You may obtain a copy of the License at
1:f089287:  *
1:f089287:  *    http://www.apache.org/licenses/LICENSE-2.0
1:f089287:  *
1:f089287:  * Unless required by applicable law or agreed to in writing, software
1:f089287:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f089287:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f089287:  * See the License for the specific language governing permissions and
1:f089287:  * limitations under the License.
1:f089287:  */
1:f089287: 
1:f089287: package org.apache.carbondata.core.datamap;
1:f089287: 
1:f089287: import java.util.List;
1:f089287: 
1:fc2a7eb: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:fc2a7eb: import org.apache.carbondata.common.annotations.InterfaceStability;
1:9db662a: import org.apache.carbondata.core.metadata.schema.table.column.CarbonColumn;
1:d35fbaf: import org.apache.carbondata.core.scan.filter.intf.ExpressionType;
1:f089287: 
1:9db662a: import org.apache.commons.collections.CollectionUtils;
1:9db662a: import org.apache.commons.collections.Transformer;
1:98c7581: import org.apache.commons.lang3.StringUtils;
1:9db662a: 
1:fc2a7eb: /**
1:fc2a7eb:  * Metadata of the datamap, set by DataMap developer
1:fc2a7eb:  */
1:fc2a7eb: @InterfaceAudience.Developer("DataMap")
1:fc2a7eb: @InterfaceStability.Evolving
1:f089287: public class DataMapMeta {
1:b86ff92:   private String dataMapName;
1:f089287: 
1:9db662a:   private List<CarbonColumn> indexedColumns;
1:f089287: 
1:d35fbaf:   private List<ExpressionType> optimizedOperation;
1:f089287: 
1:9db662a:   public DataMapMeta(List<CarbonColumn> indexedColumns,
1:9db662a:       List<ExpressionType> optimizedOperation) {
1:f089287:     this.indexedColumns = indexedColumns;
1:f089287:     this.optimizedOperation = optimizedOperation;
1:f089287:   }
1:f089287: 
1:9db662a:   public DataMapMeta(String dataMapName, List<CarbonColumn> indexedColumns,
1:b86ff92:       List<ExpressionType> optimizedOperation) {
1:b86ff92:     this(indexedColumns, optimizedOperation);
1:b86ff92:     this.dataMapName = dataMapName;
1:b86ff92:   }
1:b86ff92: 
1:b86ff92:   public String getDataMapName() {
1:b86ff92:     return dataMapName;
1:b86ff92:   }
1:b86ff92: 
1:9db662a:   public List<CarbonColumn> getIndexedColumns() {
1:f089287:     return indexedColumns;
1:f089287:   }
1:f089287: 
1:9db662a:   public List<String> getIndexedColumnNames() {
1:9db662a:     return (List<String>) CollectionUtils.collect(indexedColumns, new Transformer() {
1:9db662a:       @Override public Object transform(Object input) {
1:9db662a:         return ((CarbonColumn) input).getColName();
1:9db662a:       }
1:9db662a:     });
1:9db662a:   }
1:9db662a: 
1:d35fbaf:   public List<ExpressionType> getOptimizedOperation() {
1:f089287:     return optimizedOperation;
1:b86ff92:   }
1:b86ff92: 
1:98c7581:   @Override public String toString() {
1:98c7581:     return new StringBuilder("DataMapMeta{")
1:98c7581:         .append("dataMapName='").append(dataMapName).append('\'')
1:98c7581:         .append(", indexedColumns=[")
1:98c7581:         .append(StringUtils.join(getIndexedColumnNames(), ", ")).append("]\'")
1:98c7581:         .append(", optimizedOperation=").append(optimizedOperation)
1:98c7581:         .append('}')
1:98c7581:         .toString();
1:f089287:   }
1:f089287: }
============================================================================
author:xuchuanyin
-------------------------------------------------------------------------------
commit:98c7581
/////////////////////////////////////////////////////////////////////////
1: import org.apache.commons.lang3.StringUtils;
/////////////////////////////////////////////////////////////////////////
1:   @Override public String toString() {
1:     return new StringBuilder("DataMapMeta{")
1:         .append("dataMapName='").append(dataMapName).append('\'')
1:         .append(", indexedColumns=[")
1:         .append(StringUtils.join(getIndexedColumnNames(), ", ")).append("]\'")
1:         .append(", optimizedOperation=").append(optimizedOperation)
1:         .append('}')
1:         .toString();
commit:b86ff92
/////////////////////////////////////////////////////////////////////////
1:   private String dataMapName;
/////////////////////////////////////////////////////////////////////////
0:   public DataMapMeta(String dataMapName, List<String> indexedColumns,
1:       List<ExpressionType> optimizedOperation) {
1:     this(indexedColumns, optimizedOperation);
1:     this.dataMapName = dataMapName;
1:   }
1: 
1:   public String getDataMapName() {
1:     return dataMapName;
1:   }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
0:   @Override
0:   public String toString() {
0:     return "DataMapMeta{" + "dataMapName='" + dataMapName + '\'' + ", indexedColumns="
0:         + indexedColumns + ", optimizedOperation=" + optimizedOperation + '}';
1:   }
author:Jacky Li
-------------------------------------------------------------------------------
commit:9db662a
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.schema.table.column.CarbonColumn;
1: import org.apache.commons.collections.CollectionUtils;
1: import org.apache.commons.collections.Transformer;
1: 
/////////////////////////////////////////////////////////////////////////
1:   private List<CarbonColumn> indexedColumns;
1:   public DataMapMeta(List<CarbonColumn> indexedColumns,
1:       List<ExpressionType> optimizedOperation) {
1:   public DataMapMeta(String dataMapName, List<CarbonColumn> indexedColumns,
/////////////////////////////////////////////////////////////////////////
1:   public List<CarbonColumn> getIndexedColumns() {
1:   public List<String> getIndexedColumnNames() {
1:     return (List<String>) CollectionUtils.collect(indexedColumns, new Transformer() {
1:       @Override public Object transform(Object input) {
1:         return ((CarbonColumn) input).getColName();
1:       }
1:     });
1:   }
1: 
commit:fc2a7eb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: import org.apache.carbondata.common.annotations.InterfaceStability;
1: /**
1:  * Metadata of the datamap, set by DataMap developer
1:  */
1: @InterfaceAudience.Developer("DataMap")
1: @InterfaceStability.Evolving
commit:f089287
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.datamap;
1: 
1: import java.util.List;
1: 
0: import org.apache.carbondata.core.indexstore.schema.FilterType;
1: 
1: public class DataMapMeta {
1: 
0:   private List<String> indexedColumns;
1: 
0:   private FilterType optimizedOperation;
1: 
0:   public DataMapMeta(List<String> indexedColumns, FilterType optimizedOperation) {
1:     this.indexedColumns = indexedColumns;
1:     this.optimizedOperation = optimizedOperation;
1:   }
1: 
0:   public List<String> getIndexedColumns() {
1:     return indexedColumns;
1:   }
1: 
0:   public FilterType getOptimizedOperation() {
1:     return optimizedOperation;
1:   }
1: }
author:ravipesala
-------------------------------------------------------------------------------
commit:d35fbaf
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.scan.filter.intf.ExpressionType;
1:   private List<ExpressionType> optimizedOperation;
0:   public DataMapMeta(List<String> indexedColumns, List<ExpressionType> optimizedOperation) {
/////////////////////////////////////////////////////////////////////////
1:   public List<ExpressionType> getOptimizedOperation() {
============================================================================