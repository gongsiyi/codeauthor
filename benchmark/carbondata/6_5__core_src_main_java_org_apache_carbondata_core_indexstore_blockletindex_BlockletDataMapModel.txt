1:0586146: /*
1:0586146:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:0586146:  * contributor license agreements.  See the NOTICE file distributed with
1:0586146:  * this work for additional information regarding copyright ownership.
1:0586146:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:0586146:  * (the "License"); you may not use this file except in compliance with
1:0586146:  * the License.  You may obtain a copy of the License at
1:0586146:  *
1:0586146:  *    http://www.apache.org/licenses/LICENSE-2.0
1:0586146:  *
1:0586146:  * Unless required by applicable law or agreed to in writing, software
1:0586146:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0586146:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0586146:  * See the License for the specific language governing permissions and
1:0586146:  * limitations under the License.
1:0586146:  */
1:0586146: package org.apache.carbondata.core.indexstore.blockletindex;
1:3ff55a2: 
1:41b0074: import java.util.Map;
1:41b0074: 
1:0586146: import org.apache.carbondata.core.datamap.dev.DataMapModel;
1:44ffaf5: import org.apache.carbondata.core.indexstore.BlockMetaInfo;
1:f4a58c5: import org.apache.carbondata.core.metadata.schema.table.CarbonTable;
1:b8a02f3: 
1:8f1a029: import org.apache.hadoop.conf.Configuration;
1:8f1a029: 
1:3ff55a2: /**
1:fc2a7eb:  * It is the model object to keep the information to build or initialize BlockletDataMap.
1:3ff55a2:  */
1:0586146: public class BlockletDataMapModel extends DataMapModel {
1:b8a02f3: 
1:0586146:   private byte[] fileData;
1:3ff55a2: 
1:8d3c774:   private Map<String, BlockMetaInfo> blockMetaInfoMap;
1:f4a58c5: 
1:f4a58c5:   private CarbonTable carbonTable;
1:dc29319: 
1:8d3c774:   private String segmentId;
1:b8a02f3: 
1:531ecdf:   private boolean addToUnsafe = true;
1:531ecdf: 
1:8f1a029:   public BlockletDataMapModel(CarbonTable carbonTable, String filePath, byte[] fileData,
1:8f1a029:       Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId, Configuration configuration) {
1:8f1a029:     super(filePath, configuration);
1:0586146:     this.fileData = fileData;
1:44ffaf5:     this.blockMetaInfoMap = blockMetaInfoMap;
1:8d3c774:     this.segmentId = segmentId;
1:f4a58c5:     this.carbonTable = carbonTable;
1:b8a02f3:   }
1:dc29319: 
2:f4a58c5:   public BlockletDataMapModel(CarbonTable carbonTable, String filePath,
1:f4a58c5:       byte[] fileData, Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId,
1:8f1a029:       boolean addToUnsafe, Configuration configuration) {
1:8f1a029:     this(carbonTable, filePath, fileData, blockMetaInfoMap, segmentId, configuration);
1:531ecdf:     this.addToUnsafe = addToUnsafe;
1:531ecdf:   }
1:531ecdf: 
1:0586146:   public byte[] getFileData() {
1:0586146:     return fileData;
1:41b0074:   }
1:41b0074: 
1:44ffaf5:   public Map<String, BlockMetaInfo> getBlockMetaInfoMap() {
1:44ffaf5:     return blockMetaInfoMap;
1:3ff55a2:   }
1:8d3c774: 
1:8d3c774:   public String getSegmentId() {
1:8d3c774:     return segmentId;
1:8d3c774:   }
1:531ecdf: 
1:531ecdf:   public boolean isAddToUnsafe() {
1:531ecdf:     return addToUnsafe;
1:531ecdf:   }
1:f4a58c5: 
1:f4a58c5:   public CarbonTable getCarbonTable() {
1:f4a58c5:     return carbonTable;
1:dc29319:   }
1:f4a58c5: }
============================================================================
author:kunal642
-------------------------------------------------------------------------------
commit:8f1a029
/////////////////////////////////////////////////////////////////////////
1: import org.apache.hadoop.conf.Configuration;
1: 
/////////////////////////////////////////////////////////////////////////
1:   public BlockletDataMapModel(CarbonTable carbonTable, String filePath, byte[] fileData,
1:       Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId, Configuration configuration) {
1:     super(filePath, configuration);
/////////////////////////////////////////////////////////////////////////
1:       boolean addToUnsafe, Configuration configuration) {
1:     this(carbonTable, filePath, fileData, blockMetaInfoMap, segmentId, configuration);
author:m00258959
-------------------------------------------------------------------------------
commit:8e78957
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:manishgupta88
-------------------------------------------------------------------------------
commit:dc29319
/////////////////////////////////////////////////////////////////////////
0: import java.util.List;
0: import org.apache.carbondata.core.metadata.schema.table.column.CarbonColumn;
/////////////////////////////////////////////////////////////////////////
0:   private List<CarbonColumn> minMaxCacheColumns;
1: 
/////////////////////////////////////////////////////////////////////////
0:     this.minMaxCacheColumns = carbonTable.getMinMaxCacheColumns();
/////////////////////////////////////////////////////////////////////////
1: 
0:   public List<CarbonColumn> getMinMaxCacheColumns() {
0:     return minMaxCacheColumns;
1:   }
commit:f4a58c5
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.schema.table.CarbonTable;
/////////////////////////////////////////////////////////////////////////
1:   private CarbonTable carbonTable;
1: 
1:   public BlockletDataMapModel(CarbonTable carbonTable, String filePath,
0:       byte[] fileData, Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId) {
1:     this.carbonTable = carbonTable;
1:   public BlockletDataMapModel(CarbonTable carbonTable, String filePath,
1:       byte[] fileData, Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId,
0:       boolean addToUnsafe) {
0:     this(carbonTable, filePath, fileData, blockMetaInfoMap, segmentId);
/////////////////////////////////////////////////////////////////////////
1: 
1:   public CarbonTable getCarbonTable() {
1:     return carbonTable;
1:   }
author:dhatchayani
-------------------------------------------------------------------------------
commit:531ecdf
/////////////////////////////////////////////////////////////////////////
1:   private boolean addToUnsafe = true;
1: 
/////////////////////////////////////////////////////////////////////////
0:   public BlockletDataMapModel(String filePath, byte[] fileData,
0:       Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId, boolean addToUnsafe) {
0:     this(filePath, fileData, blockMetaInfoMap, segmentId);
1:     this.addToUnsafe = addToUnsafe;
1:   }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:   public boolean isAddToUnsafe() {
1:     return addToUnsafe;
1:   }
author:Jacky Li
-------------------------------------------------------------------------------
commit:fc2a7eb
/////////////////////////////////////////////////////////////////////////
1:  * It is the model object to keep the information to build or initialize BlockletDataMap.
commit:89a12af
/////////////////////////////////////////////////////////////////////////
0:  * It is the model object to keep the information to build or initialize BlockletIndexDataMap.
author:ravipesala
-------------------------------------------------------------------------------
commit:8d3c774
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:   private Map<String, BlockMetaInfo> blockMetaInfoMap;
1:   private String segmentId;
0:   public BlockletDataMapModel(String filePath, byte[] fileData,
0:       Map<String, BlockMetaInfo> blockMetaInfoMap, String segmentId) {
1:     this.segmentId = segmentId;
1: 
1:   public String getSegmentId() {
1:     return segmentId;
1:   }
commit:44ffaf5
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.indexstore.BlockMetaInfo;
/////////////////////////////////////////////////////////////////////////
0:   Map<String, BlockMetaInfo> blockMetaInfoMap;
0:       boolean partitionedSegment,
0:       Map<String, BlockMetaInfo> blockMetaInfoMap) {
1:     this.blockMetaInfoMap = blockMetaInfoMap;
/////////////////////////////////////////////////////////////////////////
1:   public Map<String, BlockMetaInfo> getBlockMetaInfoMap() {
1:     return blockMetaInfoMap;
commit:41b0074
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
/////////////////////////////////////////////////////////////////////////
0:   private Map<String, String[]> locationMap;
1: 
0:       boolean partitionedSegment, Map<String, String[]> locationMap) {
0:     this.locationMap = locationMap;
/////////////////////////////////////////////////////////////////////////
1: 
0:   public Map<String, String[]> getLocationMap() {
0:     return locationMap;
1:   }
commit:3ff55a2
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * It is the model object to keep the information to build or initialize BlockletDataMap.
1:  */
0:   private boolean partitionedSegment;
1: 
0:   public BlockletDataMapModel(String filePath, byte[] fileData, List<String> partitions,
0:       boolean partitionedSegment) {
0:     this.partitionedSegment = partitionedSegment;
/////////////////////////////////////////////////////////////////////////
1: 
0:   public boolean isPartitionedSegment() {
0:     return partitionedSegment;
1:   }
commit:b8a02f3
/////////////////////////////////////////////////////////////////////////
0: import java.util.List;
1: 
0:   private List<String> partitions;
1: 
0:   public BlockletDataMapModel(String filePath, byte[] fileData, List<String> partitions) {
0:     this.partitions = partitions;
1: 
0:   public List<String> getPartitions() {
0:     return partitions;
1:   }
commit:0586146
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.indexstore.blockletindex;
0: 
1: import org.apache.carbondata.core.datamap.dev.DataMapModel;
0: 
1: public class BlockletDataMapModel extends DataMapModel {
0: 
1:   private byte[] fileData;
0: 
0:   public BlockletDataMapModel(String filePath, byte[] fileData) {
0:     super(filePath);
1:     this.fileData = fileData;
0:   }
0: 
1:   public byte[] getFileData() {
1:     return fileData;
0:   }
0: }
============================================================================