1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: package org.apache.carbondata.core.writer;
1:cd6a4ff: 
1:cd6a4ff: import java.io.IOException;
1:cd6a4ff: 
1:cd6a4ff: import org.apache.thrift.TBase;
1:cd6a4ff: 
1:cd6a4ff: /**
1:cd6a4ff:  * Reader class which will be used to read the index file
1:cd6a4ff:  */
1:cd6a4ff: public class CarbonIndexFileWriter {
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * thrift writer object
1:cd6a4ff:    */
1:cd6a4ff:   private ThriftWriter thriftWriter;
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * It writes thrift object to file
1:cd6a4ff:    *
1:cd6a4ff:    * @throws IOException
1:cd6a4ff:    */
1:cd6a4ff:   public void writeThrift(TBase indexObject) throws IOException {
1:cd6a4ff:     thriftWriter.write(indexObject);
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * Below method will be used to open the thrift writer
1:cd6a4ff:    *
1:cd6a4ff:    * @param filePath file path where data need to be written
1:cd6a4ff:    * @throws IOException throws io exception in case of any failure
1:cd6a4ff:    */
1:cd6a4ff:   public void openThriftWriter(String filePath) throws IOException {
1:cd6a4ff:     // create thrift writer instance
1:cd6a4ff:     thriftWriter = new ThriftWriter(filePath, true);
1:cd6a4ff:     // open the file stream
1:cd6a4ff:     thriftWriter.open();
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * Below method will be used to close the thrift object
1:cd6a4ff:    */
1:70256e7:   public void close() throws IOException {
1:cd6a4ff:     thriftWriter.close();
1:cd6a4ff:   }
1:cd6a4ff: }
============================================================================
author:manishgupta88
-------------------------------------------------------------------------------
commit:70256e7
/////////////////////////////////////////////////////////////////////////
1:   public void close() throws IOException {
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:jackylk
-------------------------------------------------------------------------------
commit:eaadc88
/////////////////////////////////////////////////////////////////////////
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.core.writer;
1: 
1: import java.io.IOException;
1: 
1: import org.apache.thrift.TBase;
1: 
1: /**
1:  * Reader class which will be used to read the index file
1:  */
1: public class CarbonIndexFileWriter {
1: 
1:   /**
1:    * thrift writer object
1:    */
1:   private ThriftWriter thriftWriter;
1: 
1:   /**
1:    * It writes thrift object to file
1:    *
0:    * @param footer
1:    * @throws IOException
1:    */
1:   public void writeThrift(TBase indexObject) throws IOException {
1:     thriftWriter.write(indexObject);
1:   }
1: 
1:   /**
1:    * Below method will be used to open the thrift writer
1:    *
1:    * @param filePath file path where data need to be written
1:    * @throws IOException throws io exception in case of any failure
1:    */
1:   public void openThriftWriter(String filePath) throws IOException {
1:     // create thrift writer instance
1:     thriftWriter = new ThriftWriter(filePath, true);
1:     // open the file stream
1:     thriftWriter.open();
1:   }
1: 
1:   /**
1:    * Below method will be used to close the thrift object
1:    */
0:   public void close() {
1:     thriftWriter.close();
1:   }
1: }
============================================================================