1:89a12af: /*
1:89a12af:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:89a12af:  * contributor license agreements.  See the NOTICE file distributed with
1:89a12af:  * this work for additional information regarding copyright ownership.
1:89a12af:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:89a12af:  * (the "License"); you may not use this file except in compliance with
1:89a12af:  * the License.  You may obtain a copy of the License at
1:89a12af:  *
1:89a12af:  *    http://www.apache.org/licenses/LICENSE-2.0
1:89a12af:  *
1:89a12af:  * Unless required by applicable law or agreed to in writing, software
1:89a12af:  * distributed under the License is distributed on an "AS IS" BASIS,
1:89a12af:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:89a12af:  * See the License for the specific language governing permissions and
1:89a12af:  * limitations under the License.
1:89a12af:  */
1:89a12af: 
1:89a12af: package org.apache.carbondata.datamap;
1:89a12af: 
1:89a12af: import java.util.Map;
1:89a12af: 
1:89a12af: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:89a12af: import org.apache.carbondata.core.metadata.schema.table.CarbonTable;
1:89a12af: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
1:89a12af: 
1:89a12af: import org.apache.spark.sql.SparkSession;
1:89a12af: import org.apache.spark.sql.execution.command.preaaggregate.PreAggregateTableHelper;
1:89a12af: import org.apache.spark.sql.execution.command.timeseries.TimeSeriesUtil;
1:89a12af: import scala.Some;
1:89a12af: import scala.Tuple2;
1:89a12af: 
1:89a12af: @InterfaceAudience.Internal
1:89a12af: public class TimeseriesDataMapProvider extends PreAggregateDataMapProvider {
1:89a12af: 
1:9db662a:   TimeseriesDataMapProvider(CarbonTable mainTable, DataMapSchema dataMapSchema,
1:9db662a:       SparkSession sparkSession) {
1:9db662a:     super(mainTable, dataMapSchema, sparkSession);
1:05086e5:   }
1:05086e5: 
1:89a12af:   @Override
1:9db662a:   public void initMeta(String ctasSqlStatement) {
1:9db662a:     DataMapSchema dataMapSchema = getDataMapSchema();
1:9db662a:     CarbonTable mainTable = getMainTable();
1:89a12af:     Map<String, String> dmProperties = dataMapSchema.getProperties();
1:d23f7fa:     String dmProviderName = dataMapSchema.getProviderName();
1:89a12af:     TimeSeriesUtil.validateTimeSeriesGranularity(dmProperties, dmProviderName);
1:89a12af:     Tuple2<String, String> details =
1:89a12af:         TimeSeriesUtil.getTimeSeriesGranularityDetails(dmProperties, dmProviderName);
1:89a12af:     dmProperties.remove(details._1());
1:89a12af:     helper = new PreAggregateTableHelper(
1:d23f7fa:         mainTable, dataMapSchema.getDataMapName(), dataMapSchema.getProviderName(),
1:89a12af:         dmProperties, ctasSqlStatement, new Some(details._1()), false);
1:89a12af:     helper.initMeta(sparkSession);
1:89a12af:   }
1:89a12af: 
1:89a12af: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:9db662a
/////////////////////////////////////////////////////////////////////////
1:   TimeseriesDataMapProvider(CarbonTable mainTable, DataMapSchema dataMapSchema,
1:       SparkSession sparkSession) {
1:     super(mainTable, dataMapSchema, sparkSession);
1:   public void initMeta(String ctasSqlStatement) {
1:     DataMapSchema dataMapSchema = getDataMapSchema();
1:     CarbonTable mainTable = getMainTable();
commit:89a12af
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.datamap;
1: 
1: import java.util.Map;
1: 
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: import org.apache.carbondata.core.metadata.schema.table.CarbonTable;
1: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
1: 
1: import org.apache.spark.sql.SparkSession;
1: import org.apache.spark.sql.execution.command.preaaggregate.PreAggregateTableHelper;
1: import org.apache.spark.sql.execution.command.timeseries.TimeSeriesUtil;
1: import scala.Some;
1: import scala.Tuple2;
1: 
1: @InterfaceAudience.Internal
1: public class TimeseriesDataMapProvider extends PreAggregateDataMapProvider {
1: 
1:   @Override
0:   public void initMeta(CarbonTable mainTable, DataMapSchema dataMapSchema, String ctasSqlStatement,
0:       SparkSession sparkSession) {
1:     Map<String, String> dmProperties = dataMapSchema.getProperties();
0:     String dmProviderName = dataMapSchema.getClassName();
1:     TimeSeriesUtil.validateTimeSeriesGranularity(dmProperties, dmProviderName);
1:     Tuple2<String, String> details =
1:         TimeSeriesUtil.getTimeSeriesGranularityDetails(dmProperties, dmProviderName);
1:     dmProperties.remove(details._1());
1:     helper = new PreAggregateTableHelper(
0:         mainTable, dataMapSchema.getDataMapName(), dataMapSchema.getClassName(),
1:         dmProperties, ctasSqlStatement, new Some(details._1()), false);
1:     helper.initMeta(sparkSession);
1:   }
1: 
1: }
author:ravipesala
-------------------------------------------------------------------------------
commit:05086e5
/////////////////////////////////////////////////////////////////////////
0:   public TimeseriesDataMapProvider(SparkSession sparkSession) {
0:     super(sparkSession);
1:   }
1: 
0:   public void initMeta(CarbonTable mainTable, DataMapSchema dataMapSchema,
0:       String ctasSqlStatement) {
author:QiangCai
-------------------------------------------------------------------------------
commit:d23f7fa
/////////////////////////////////////////////////////////////////////////
1:     String dmProviderName = dataMapSchema.getProviderName();
1:         mainTable, dataMapSchema.getDataMapName(), dataMapSchema.getProviderName(),
============================================================================