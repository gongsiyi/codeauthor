1:e44f7a9: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:e44f7a9:  *
1:e44f7a9:  *    http://www.apache.org/licenses/LICENSE-2.0
1:e44f7a9:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:e44f7a9:  */
1:e44f7a9: 
1:e44f7a9: package org.apache.carbondata.core.devapi;
1:e44f7a9: 
1:e44f7a9: public interface BiDictionary<K, V> {
1:e44f7a9: 
1:e44f7a9:   /**
1:e44f7a9:    * Get the dictionary key corresponding to the input value, generate a new key if value is
1:e44f7a9:    * not exist. The new key value pair will be added to this dictionary
1:e44f7a9:    * @param value dictionary value
1:e44f7a9:    * @return dictionary key
1:e44f7a9:    */
1:d96f09a:   K getOrGenerateKey(V value) throws DictionaryGenerationException;
1:e44f7a9: 
1:e44f7a9:   /**
1:e44f7a9:    * Get the dictionary key corresponding to the input value, return null if value is not exist in
1:e44f7a9:    * the dictionary.
1:e44f7a9:    * @param value dictionary value
1:e44f7a9:    * @return dictionary key
1:e44f7a9:    */
1:e44f7a9:   K getKey(V value);
1:e44f7a9: 
1:e44f7a9:   /**
1:e44f7a9:    * Get dictionary value corresponding to the input key, return null if key is not exist in the
1:e44f7a9:    * dictionary.
1:e44f7a9:    * @param key dictionary key
1:e44f7a9:    * @return dictionary value
1:e44f7a9:    */
1:e44f7a9:   V getValue(K key);
1:e44f7a9: 
1:e44f7a9:   /**
1:e44f7a9:    * Return the size of the dictionary
1:e44f7a9:    * @return size
1:e44f7a9:    */
1:e44f7a9:   int size();
1:e44f7a9: }
============================================================================
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:ravipesala
-------------------------------------------------------------------------------
commit:d96f09a
/////////////////////////////////////////////////////////////////////////
1:   K getOrGenerateKey(V value) throws DictionaryGenerationException;
author:jackylk
-------------------------------------------------------------------------------
commit:e44f7a9
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: 
1: package org.apache.carbondata.core.devapi;
1: 
1: public interface BiDictionary<K, V> {
1: 
1:   /**
1:    * Get the dictionary key corresponding to the input value, generate a new key if value is
1:    * not exist. The new key value pair will be added to this dictionary
1:    * @param value dictionary value
1:    * @return dictionary key
1:    */
0:   K getOrGenerateKey(V value) throws Exception;
1: 
1:   /**
1:    * Get the dictionary key corresponding to the input value, return null if value is not exist in
1:    * the dictionary.
1:    * @param value dictionary value
1:    * @return dictionary key
1:    */
1:   K getKey(V value);
1: 
1:   /**
1:    * Get dictionary value corresponding to the input key, return null if key is not exist in the
1:    * dictionary.
1:    * @param key dictionary key
1:    * @return dictionary value
1:    */
1:   V getValue(K key);
1: 
1:   /**
1:    * Return the size of the dictionary
1:    * @return size
1:    */
1:   int size();
1: }
============================================================================