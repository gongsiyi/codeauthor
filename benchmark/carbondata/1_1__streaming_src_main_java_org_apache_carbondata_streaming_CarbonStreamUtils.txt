1:bcef656: /*
1:bcef656:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:bcef656:  * contributor license agreements.  See the NOTICE file distributed with
1:bcef656:  * this work for additional information regarding copyright ownership.
1:bcef656:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:bcef656:  * (the "License"); you may not use this file except in compliance with
1:bcef656:  * the License.  You may obtain a copy of the License at
1:bcef656:  *
1:bcef656:  *    http://www.apache.org/licenses/LICENSE-2.0
1:bcef656:  *
1:bcef656:  * Unless required by applicable law or agreed to in writing, software
1:bcef656:  * distributed under the License is distributed on an "AS IS" BASIS,
1:bcef656:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bcef656:  * See the License for the specific language governing permissions and
1:bcef656:  * limitations under the License.
1:bcef656:  */
1:bcef656: package org.apache.carbondata.streaming;
1:bcef656: 
1:bcef656: import java.lang.reflect.Constructor;
1:bcef656: import java.lang.reflect.InvocationTargetException;
1:bcef656: 
1:bcef656: /**
1:bcef656:  * Util class which does utility function for stream module
1:bcef656:  */
1:bcef656: public class CarbonStreamUtils {
1:bcef656: 
1:bcef656:   public static Constructor getConstructorWithReflection(String className,
1:bcef656:                                                            Class<?>... parameterTypes)
1:bcef656:             throws ClassNotFoundException, NoSuchMethodException {
1:bcef656:     Class loadedClass = Class.forName(className);
1:bcef656:     return loadedClass.getConstructor(parameterTypes);
1:bcef656: 
1:bcef656:   }
1:bcef656: 
1:bcef656:   public static Object getInstanceWithReflection(Constructor cons, Object... initargs) throws
1:bcef656:           IllegalAccessException,
1:bcef656:           InvocationTargetException, InstantiationException {
1:bcef656:     return cons.newInstance(initargs);
1:bcef656:   }
1:bcef656: }
============================================================================
author:sujith71955
-------------------------------------------------------------------------------
commit:bcef656
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.streaming;
1: 
1: import java.lang.reflect.Constructor;
1: import java.lang.reflect.InvocationTargetException;
1: 
1: /**
1:  * Util class which does utility function for stream module
1:  */
1: public class CarbonStreamUtils {
1: 
1:   public static Constructor getConstructorWithReflection(String className,
1:                                                            Class<?>... parameterTypes)
1:             throws ClassNotFoundException, NoSuchMethodException {
1:     Class loadedClass = Class.forName(className);
1:     return loadedClass.getConstructor(parameterTypes);
1: 
1:   }
1: 
1:   public static Object getInstanceWithReflection(Constructor cons, Object... initargs) throws
1:           IllegalAccessException,
1:           InvocationTargetException, InstantiationException {
1:     return cons.newInstance(initargs);
1:   }
1: }
============================================================================