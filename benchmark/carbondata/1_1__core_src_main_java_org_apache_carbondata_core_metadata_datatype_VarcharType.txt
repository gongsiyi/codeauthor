1:dc53dee: /*
1:dc53dee:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:dc53dee:  * contributor license agreements.  See the NOTICE file distributed with
1:dc53dee:  * this work for additional information regarding copyright ownership.
1:dc53dee:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:dc53dee:  * (the "License"); you may not use this file except in compliance with
1:dc53dee:  * the License.  You may obtain a copy of the License at
1:dc53dee:  *
1:dc53dee:  *    http://www.apache.org/licenses/LICENSE-2.0
1:dc53dee:  *
1:dc53dee:  * Unless required by applicable law or agreed to in writing, software
1:dc53dee:  * distributed under the License is distributed on an "AS IS" BASIS,
1:dc53dee:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dc53dee:  * See the License for the specific language governing permissions and
1:dc53dee:  * limitations under the License.
1:dc53dee:  */
1:dc53dee: 
1:dc53dee: package org.apache.carbondata.core.metadata.datatype;
1:dc53dee: 
1:dc53dee: /**
1:dc53dee:  * This class is for internal use. It is used to support string that longer than 32000 characters
1:dc53dee:  */
1:dc53dee: public class VarcharType extends DataType {
1:dc53dee:   static final DataType VARCHAR = new VarcharType(DataTypes.VARCHAR_TYPE_ID, 0, "VARCHAR", -1);
1:dc53dee: 
1:dc53dee:   private VarcharType(int id, int precedenceOrder, String name, int sizeInBytes) {
1:dc53dee:     super(id, precedenceOrder, name, sizeInBytes);
1:dc53dee:   }
1:dc53dee: 
1:dc53dee:   // this function is needed to ensure singleton pattern while supporting java serialization
1:dc53dee:   private Object readResolve() {
1:dc53dee:     return DataTypes.VARCHAR;
1:dc53dee:   }
1:dc53dee: }
============================================================================
author:xuchuanyin
-------------------------------------------------------------------------------
commit:dc53dee
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.metadata.datatype;
1: 
1: /**
1:  * This class is for internal use. It is used to support string that longer than 32000 characters
1:  */
1: public class VarcharType extends DataType {
1:   static final DataType VARCHAR = new VarcharType(DataTypes.VARCHAR_TYPE_ID, 0, "VARCHAR", -1);
1: 
1:   private VarcharType(int id, int precedenceOrder, String name, int sizeInBytes) {
1:     super(id, precedenceOrder, name, sizeInBytes);
1:   }
1: 
1:   // this function is needed to ensure singleton pattern while supporting java serialization
1:   private Object readResolve() {
1:     return DataTypes.VARCHAR;
1:   }
1: }
============================================================================