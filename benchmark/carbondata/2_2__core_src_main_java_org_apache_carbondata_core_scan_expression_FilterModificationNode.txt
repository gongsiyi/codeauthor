1:c2e4eb2: /*
1:c2e4eb2:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c2e4eb2:  * contributor license agreements.  See the NOTICE file distributed with
1:c2e4eb2:  * this work for additional information regarding copyright ownership.
1:c2e4eb2:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c2e4eb2:  * (the "License"); you may not use this file except in compliance with
1:c2e4eb2:  * the License.  You may obtain a copy of the License at
1:c2e4eb2:  *
1:c2e4eb2:  *    http://www.apache.org/licenses/LICENSE-2.0
1:c2e4eb2:  *
1:c2e4eb2:  * Unless required by applicable law or agreed to in writing, software
1:c2e4eb2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c2e4eb2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c2e4eb2:  * See the License for the specific language governing permissions and
1:c2e4eb2:  * limitations under the License.
1:c2e4eb2:  */
7:c2e4eb2: 
1:c2e4eb2: package org.apache.carbondata.core.scan.expression;
1:c2e4eb2: 
1:c2e4eb2: import org.apache.carbondata.core.scan.filter.intf.ExpressionType;
1:c2e4eb2: 
1:c2e4eb2: public class FilterModificationNode {
1:c2e4eb2:   private Expression currentExp;
1:c2e4eb2:   private Expression parentExp;
1:c2e4eb2:   private ExpressionType expType;
1:c2e4eb2: 
1:daa6465:   FilterModificationNode(Expression currentNode, Expression parentNode, ExpressionType expType) {
1:c2e4eb2:     this.currentExp = currentNode;
1:c2e4eb2:     this.parentExp = parentNode;
2:c2e4eb2:     this.expType = expType;
8:c2e4eb2:   }
1:c2e4eb2: 
1:c2e4eb2:   public Expression getCurrentExp() {
1:c2e4eb2:     return currentExp;
1:c2e4eb2:   }
1:c2e4eb2: 
1:c2e4eb2:   public Expression getParentExp() {
1:c2e4eb2:     return parentExp;
1:c2e4eb2:   }
1:c2e4eb2: 
1:c2e4eb2:   public ExpressionType getExpType() {
1:c2e4eb2:     return expType;
1:c2e4eb2:   }
1:c2e4eb2: 
1:c2e4eb2: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:daa6465
/////////////////////////////////////////////////////////////////////////
1:   FilterModificationNode(Expression currentNode, Expression parentNode, ExpressionType expType) {
author:sounakr
-------------------------------------------------------------------------------
commit:c2e4eb2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.scan.expression;
1: 
0: import org.apache.carbondata.core.metadata.datatype.DataType;
1: import org.apache.carbondata.core.scan.filter.intf.ExpressionType;
1: 
1: public class FilterModificationNode {
1:   private Expression currentExp;
1:   private Expression parentExp;
1:   private ExpressionType expType;
0:   private ExpressionResult literalValue;
0:   private String columnName;
1: 
0:   public FilterModificationNode(Expression currentNode, Expression parentNode,
0:       ExpressionType expType, DataType dataType, Object literalVal, String colName) {
1:     this.currentExp = currentNode;
1:     this.parentExp = parentNode;
1:     this.expType = expType;
0:     this.columnName = colName;
0:     this.literalValue = new ExpressionResult(dataType, literalVal);
1:   }
1: 
1:   public Expression getCurrentExp() {
1:     return currentExp;
1:   }
1: 
0:   public void setCurrentExp(Expression currentExp) {
0:     this.currentExp = currentExp;
1:   }
1: 
1:   public Expression getParentExp() {
1:     return parentExp;
1:   }
1: 
0:   public void setParentExp(Expression parentExp) {
0:     this.parentExp = parentExp;
1:   }
1: 
1:   public ExpressionType getExpType() {
1:     return expType;
1:   }
1: 
0:   public void setExpType(ExpressionType expType) {
1:     this.expType = expType;
1:   }
1: 
0:   public ExpressionResult getLiteralValue() {
0:     return literalValue;
1:   }
1: 
0:   public void setLiteralValue(ExpressionResult literalValue) {
0:     this.literalValue = literalValue;
1:   }
1: 
0:   public String getColumnName() {
0:     return columnName;
1:   }
1: 
0:   public void setColumnName(String columnName) {
0:     this.columnName = columnName;
1:   }
1: }
============================================================================