1:53accb3: /*
1:53accb3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:53accb3:  * contributor license agreements.  See the NOTICE file distributed with
1:53accb3:  * this work for additional information regarding copyright ownership.
1:53accb3:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:53accb3:  * (the "License"); you may not use this file except in compliance with
1:53accb3:  * the License.  You may obtain a copy of the License at
1:53accb3:  *
1:53accb3:  *    http://www.apache.org/licenses/LICENSE-2.0
1:53accb3:  *
1:53accb3:  * Unless required by applicable law or agreed to in writing, software
1:53accb3:  * distributed under the License is distributed on an "AS IS" BASIS,
1:53accb3:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:53accb3:  * See the License for the specific language governing permissions and
1:53accb3:  * limitations under the License.
1:53accb3:  */
1:349c59c: package org.apache.carbondata.processing.loading.sort;
1:53accb3: 
1:349c59c: import org.apache.carbondata.processing.loading.exception.CarbonDataLoadingException;
1:349c59c: import org.apache.carbondata.processing.loading.sort.impl.ThreadStatusObserver;
1:53accb3: 
1:53accb3: /**
1:53accb3:  * The class defines the common methods used in across various type of sort
1:53accb3:  */
1:53accb3: public abstract class AbstractMergeSorter implements Sorter {
1:53accb3:   /**
1:53accb3:    * instance of thread status observer
1:53accb3:    */
1:53accb3:   protected ThreadStatusObserver threadStatusObserver;
1:53accb3: 
1:53accb3:   /**
1:53accb3:    * Below method will be used to check error in exception
1:53accb3:    */
1:53accb3:   public void checkError() {
1:53accb3:     if (threadStatusObserver.getThrowable() != null) {
1:53accb3:       if (threadStatusObserver.getThrowable() instanceof CarbonDataLoadingException) {
1:53accb3:         throw (CarbonDataLoadingException) threadStatusObserver.getThrowable();
1:53accb3:       } else {
1:53accb3:         throw new CarbonDataLoadingException(threadStatusObserver.getThrowable());
1:53accb3:       }
1:53accb3:     }
1:53accb3:   }
1:53accb3: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:349c59c
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.processing.loading.sort;
1: import org.apache.carbondata.processing.loading.exception.CarbonDataLoadingException;
1: import org.apache.carbondata.processing.loading.sort.impl.ThreadStatusObserver;
author:mohammadshahidkhan
-------------------------------------------------------------------------------
commit:53accb3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.carbondata.processing.newflow.sort;
1: 
0: import org.apache.carbondata.processing.newflow.exception.CarbonDataLoadingException;
0: import org.apache.carbondata.processing.newflow.sort.impl.ThreadStatusObserver;
1: 
1: /**
1:  * The class defines the common methods used in across various type of sort
1:  */
1: public abstract class AbstractMergeSorter implements Sorter {
1:   /**
1:    * instance of thread status observer
1:    */
1:   protected ThreadStatusObserver threadStatusObserver;
1: 
1:   /**
1:    * Below method will be used to check error in exception
1:    */
1:   public void checkError() {
1:     if (threadStatusObserver.getThrowable() != null) {
1:       if (threadStatusObserver.getThrowable() instanceof CarbonDataLoadingException) {
1:         throw (CarbonDataLoadingException) threadStatusObserver.getThrowable();
1:       } else {
1:         throw new CarbonDataLoadingException(threadStatusObserver.getThrowable());
1:       }
1:     }
1:   }
1: }
============================================================================