1:1d827c7: /*
1:1d827c7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1d827c7:  * contributor license agreements.  See the NOTICE file distributed with
1:1d827c7:  * this work for additional information regarding copyright ownership.
1:1d827c7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1d827c7:  * (the "License"); you may not use this file except in compliance with
1:1d827c7:  * the License.  You may obtain a copy of the License at
1:1d827c7:  *
1:1d827c7:  *    http://www.apache.org/licenses/LICENSE-2.0
1:1d827c7:  *
1:1d827c7:  * Unless required by applicable law or agreed to in writing, software
1:1d827c7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1d827c7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1d827c7:  * See the License for the specific language governing permissions and
1:1d827c7:  * limitations under the License.
1:1d827c7:  */
1:1d827c7: 
1:1d827c7: package org.apache.carbondata.core.metadata.schema.table;
1:1d827c7: 
1:1d827c7: import org.junit.Assert;
1:1d827c7: import org.junit.Test;
1:1d827c7: 
1:1d827c7: public class CarbonTableBuilderSuite {
1:1d827c7: 
1:1d827c7:   TableSchema schema = CarbonTableTest.getTableSchema("t1");
1:1d827c7: 
1:1d827c7:   @Test(expected = NullPointerException.class)
1:1d827c7:   public void testNullTableName() {
1:1d827c7:     TableSchema schema = CarbonTableTest.getTableSchema(null);
1:1d827c7:     CarbonTable table = CarbonTable.builder()
1:1d827c7:         .tableName(null)
1:1d827c7:         .databaseName("db1")
1:1d827c7:         .tableSchema(schema)
1:1d827c7:         .tablePath("_temp")
1:1d827c7:         .build();
1:1d827c7:   }
1:1d827c7: 
1:1d827c7:   @Test(expected = NullPointerException.class)
1:1d827c7:   public void testNullDbName() {
1:1d827c7:     CarbonTable table = CarbonTable.builder()
1:1d827c7:         .tableName(schema.getTableName())
1:1d827c7:         .databaseName(null)
1:1d827c7:         .tableSchema(schema)
1:1d827c7:         .tablePath("_temp")
1:1d827c7:         .build();
1:1d827c7:   }
1:1d827c7: 
1:1d827c7:   @Test(expected = NullPointerException.class)
1:1d827c7:   public void testNullSchema() {
1:1d827c7:     CarbonTable table = CarbonTable.builder()
1:1d827c7:         .tableName(schema.getTableName())
1:1d827c7:         .databaseName("db1")
1:1d827c7:         .tableSchema(null)
1:1d827c7:         .tablePath("_temp")
1:1d827c7:         .build();
1:1d827c7:   }
1:1d827c7: 
1:1d827c7:   @Test(expected = NullPointerException.class)
1:1d827c7:   public void testNullTablePath() {
1:1d827c7:     CarbonTable table = CarbonTable.builder()
1:1d827c7:         .tableName(schema.getTableName())
1:1d827c7:         .databaseName("db1")
1:1d827c7:         .tableSchema(schema)
1:1d827c7:         .tablePath(null)
1:1d827c7:         .build();
1:1d827c7:   }
1:1d827c7: 
1:1d827c7:   @Test
1:1d827c7:   public void testBuilder() {
1:1d827c7:     CarbonTable table = CarbonTable.builder()
1:1d827c7:         .tableName(schema.getTableName())
1:1d827c7:         .databaseName("db1")
1:1d827c7:         .tableSchema(schema)
1:1d827c7:         .tablePath("_temp")
1:1d827c7:         .build();
1:1d827c7:     Assert.assertEquals(schema.getTableName(), table.getTableName());
1:1d827c7:     Assert.assertEquals("db1", table.getDatabaseName());
1:1d827c7:     Assert.assertEquals("_temp", table.getTablePath());
1:1d827c7:     Assert.assertEquals(schema.getTableName(), table.getAbsoluteTableIdentifier().getTableName());
1:1d827c7:     Assert.assertEquals("db1", table.getAbsoluteTableIdentifier().getDatabaseName());
1:1d827c7:     Assert.assertEquals("_temp", table.getAbsoluteTableIdentifier().getTablePath());
1:1d827c7:     Assert.assertEquals("db1_t1", table.getTableUniqueName());
1:1d827c7:     Assert.assertEquals(schema, table.getTableInfo().getFactTable());
1:1d827c7:   }
1:1d827c7: 
1:1d827c7: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:1d827c7
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.metadata.schema.table;
1: 
1: import org.junit.Assert;
1: import org.junit.Test;
1: 
1: public class CarbonTableBuilderSuite {
1: 
1:   TableSchema schema = CarbonTableTest.getTableSchema("t1");
1: 
1:   @Test(expected = NullPointerException.class)
1:   public void testNullTableName() {
1:     TableSchema schema = CarbonTableTest.getTableSchema(null);
1:     CarbonTable table = CarbonTable.builder()
1:         .tableName(null)
1:         .databaseName("db1")
1:         .tableSchema(schema)
1:         .tablePath("_temp")
1:         .build();
1:   }
1: 
1:   @Test(expected = NullPointerException.class)
1:   public void testNullDbName() {
1:     CarbonTable table = CarbonTable.builder()
1:         .tableName(schema.getTableName())
1:         .databaseName(null)
1:         .tableSchema(schema)
1:         .tablePath("_temp")
1:         .build();
1:   }
1: 
1:   @Test(expected = NullPointerException.class)
1:   public void testNullSchema() {
1:     CarbonTable table = CarbonTable.builder()
1:         .tableName(schema.getTableName())
1:         .databaseName("db1")
1:         .tableSchema(null)
1:         .tablePath("_temp")
1:         .build();
1:   }
1: 
1:   @Test(expected = NullPointerException.class)
1:   public void testNullTablePath() {
1:     CarbonTable table = CarbonTable.builder()
1:         .tableName(schema.getTableName())
1:         .databaseName("db1")
1:         .tableSchema(schema)
1:         .tablePath(null)
1:         .build();
1:   }
1: 
1:   @Test
1:   public void testBuilder() {
1:     CarbonTable table = CarbonTable.builder()
1:         .tableName(schema.getTableName())
1:         .databaseName("db1")
1:         .tableSchema(schema)
1:         .tablePath("_temp")
1:         .build();
1:     Assert.assertEquals(schema.getTableName(), table.getTableName());
1:     Assert.assertEquals("db1", table.getDatabaseName());
1:     Assert.assertEquals("_temp", table.getTablePath());
1:     Assert.assertEquals(schema.getTableName(), table.getAbsoluteTableIdentifier().getTableName());
1:     Assert.assertEquals("db1", table.getAbsoluteTableIdentifier().getDatabaseName());
1:     Assert.assertEquals("_temp", table.getAbsoluteTableIdentifier().getTablePath());
1:     Assert.assertEquals("db1_t1", table.getTableUniqueName());
1:     Assert.assertEquals(schema, table.getTableInfo().getFactTable());
1:   }
1: 
1: }
============================================================================