1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: package org.apache.carbondata.core.keygenerator.directdictionary;
1:cd6a4ff: 
1:ce09aaa: import org.apache.carbondata.core.metadata.datatype.DataType;
1:376d69f: 
1:cd6a4ff: /**
1:cd6a4ff:  * The interface provides the method to generate dictionary key
1:cd6a4ff:  * and getting the actual value from the dictionaryKey for direct dictionary column.
1:cd6a4ff:  */
1:cd6a4ff: public interface DirectDictionaryGenerator {
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * The method generate and returns the dictionary / surrogate key for direct dictionary column
1:cd6a4ff:    *
2:cd6a4ff:    * @param member The member string value
1:cd6a4ff:    * @return returns dictionary/ surrogate value
1:cd6a4ff:    */
1:cd6a4ff:   int generateDirectSurrogateKey(String member);
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * The method returns the actual value of the requested dictionary / surrogate
1:cd6a4ff:    *
1:cd6a4ff:    * @param key
1:cd6a4ff:    * @return dictionary actual member
1:cd6a4ff:    */
1:cd6a4ff:   Object getValueFromSurrogate(int key);
1:cd6a4ff: 
1:2f23486:   int generateKey(long value);
1:2f23486: 
1:cd6a4ff:   /**
1:cd6a4ff:    * The method generate and returns the dictionary / surrogate key for direct dictionary column
1:cd6a4ff:    * This Method is called while executing filter queries for getting direct surrogate members.
1:cd6a4ff:    * Currently the query engine layer only supports yyyy-MM-dd HH:mm:ss date format no matter
1:cd6a4ff:    * in which format the data is been stored, so while retrieving the direct surrogate value for
1:cd6a4ff:    * filter member first it should be converted in date form as per above format and needs to
1:cd6a4ff:    * retrieve time stamp.
1:cd6a4ff:    *
1:d73f4bf:    * @param memberStr The member string value
1:cd6a4ff:    * @return returns dictionary/ surrogate value
1:cd6a4ff:    */
1:cd6a4ff:   int generateDirectSurrogateKey(String memberStr, String format);
1:cd6a4ff: 
1:72d076a:   void initialize();
1:72d076a: 
1:376d69f:   /**
1:376d69f:    * Return value datatype for this generator
1:ea04fce:    *
1:376d69f:    * @return
1:376d69f:    */
1:376d69f:   DataType getReturnType();
1:376d69f: 
1:cd6a4ff: }
============================================================================
author:kunal642
-------------------------------------------------------------------------------
commit:2f23486
/////////////////////////////////////////////////////////////////////////
1:   int generateKey(long value);
1: 
author:kumarvishal
-------------------------------------------------------------------------------
commit:ea04fce
/////////////////////////////////////////////////////////////////////////
1:    *
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
commit:d73f4bf
/////////////////////////////////////////////////////////////////////////
1:    * @param memberStr The member string value
author:jackylk
-------------------------------------------------------------------------------
commit:ce09aaa
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.datatype.DataType;
author:ravipesala
-------------------------------------------------------------------------------
commit:376d69f
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.carbon.metadata.datatype.DataType;
1: 
/////////////////////////////////////////////////////////////////////////
1:   /**
1:    * Return value datatype for this generator
1:    * @return
1:    */
1:   DataType getReturnType();
1: 
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.core.keygenerator.directdictionary;
1: 
1: /**
1:  * The interface provides the method to generate dictionary key
1:  * and getting the actual value from the dictionaryKey for direct dictionary column.
1:  */
1: public interface DirectDictionaryGenerator {
1: 
1:   /**
1:    * The method generate and returns the dictionary / surrogate key for direct dictionary column
1:    *
1:    * @param member The member string value
1:    * @return returns dictionary/ surrogate value
1:    */
1:   int generateDirectSurrogateKey(String member);
1: 
1:   /**
1:    * The method returns the actual value of the requested dictionary / surrogate
1:    *
1:    * @param key
1:    * @return dictionary actual member
1:    */
1:   Object getValueFromSurrogate(int key);
1: 
1:   /**
1:    * The method generate and returns the dictionary / surrogate key for direct dictionary column
1:    * This Method is called while executing filter queries for getting direct surrogate members.
1:    * Currently the query engine layer only supports yyyy-MM-dd HH:mm:ss date format no matter
1:    * in which format the data is been stored, so while retrieving the direct surrogate value for
1:    * filter member first it should be converted in date form as per above format and needs to
1:    * retrieve time stamp.
1:    *
1:    * @param member The member string value
1:    * @return returns dictionary/ surrogate value
1:    */
1:   int generateDirectSurrogateKey(String memberStr, String format);
1: 
1: }
author:X-Lion
-------------------------------------------------------------------------------
commit:72d076a
/////////////////////////////////////////////////////////////////////////
1:   void initialize();
1: 
============================================================================