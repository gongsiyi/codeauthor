1:a5af0ff: /*
1:a5af0ff:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a5af0ff:  * contributor license agreements.  See the NOTICE file distributed with
1:a5af0ff:  * this work for additional information regarding copyright ownership.
1:a5af0ff:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a5af0ff:  * (the "License"); you may not use this file except in compliance with
1:a5af0ff:  * the License.  You may obtain a copy of the License at
1:a5af0ff:  *
1:a5af0ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:a5af0ff:  *
1:a5af0ff:  * Unless required by applicable law or agreed to in writing, software
1:a5af0ff:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a5af0ff:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a5af0ff:  * See the License for the specific language governing permissions and
1:a5af0ff:  * limitations under the License.
1:a5af0ff:  */
2:a5af0ff: 
1:e6a4f64: package org.apache.carbondata.core.datastore.page.encoding.dimension.legacy;
1:a5af0ff: 
1:e6a4f64: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageCodec;
1:e6a4f64: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageDecoder;
1:e6a4f64: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageEncoderMeta;
1:a5af0ff: 
1:a5af0ff: public abstract class IndexStorageCodec implements ColumnPageCodec {
1:a5af0ff:   protected boolean isSort;
1:a5af0ff:   protected boolean isInvertedIndex;
1:a5af0ff: 
1:8f08c4a:   IndexStorageCodec(boolean isSort, boolean isInvertedIndex) {
1:a5af0ff:     this.isSort = isSort;
1:a5af0ff:     this.isInvertedIndex = isInvertedIndex;
2:a5af0ff:   }
1:a5af0ff: 
2:a5af0ff:   @Override
1:e6a4f64:   public ColumnPageDecoder createDecoder(ColumnPageEncoderMeta meta) {
2:a5af0ff:     throw new UnsupportedOperationException("internal error");
1:a5af0ff:   }
1:a5af0ff: }
============================================================================
author:xuchuanyin
-------------------------------------------------------------------------------
commit:8f08c4a
/////////////////////////////////////////////////////////////////////////
1:   IndexStorageCodec(boolean isSort, boolean isInvertedIndex) {
author:Raghunandan S
-------------------------------------------------------------------------------
commit:bb0b347
/////////////////////////////////////////////////////////////////////////
author:Jacky Li
-------------------------------------------------------------------------------
commit:e6a4f64
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.core.datastore.page.encoding.dimension.legacy;
1: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageCodec;
1: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageDecoder;
1: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageEncoderMeta;
/////////////////////////////////////////////////////////////////////////
1:   public ColumnPageDecoder createDecoder(ColumnPageEncoderMeta meta) {
author:jackylk
-------------------------------------------------------------------------------
commit:a5af0ff
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.carbondata.core.datastore.page.encoding;
1: 
0: import org.apache.carbondata.core.datastore.compression.Compressor;
0: import org.apache.carbondata.core.datastore.page.ColumnPage;
0: import org.apache.carbondata.core.datastore.page.ComplexColumnPage;
0: import org.apache.carbondata.core.memory.MemoryException;
0: import org.apache.carbondata.core.metadata.ColumnarFormatVersion;
0: import org.apache.carbondata.core.util.CarbonProperties;
1: 
1: public abstract class IndexStorageCodec implements ColumnPageCodec {
0:   protected ColumnarFormatVersion version = CarbonProperties.getInstance().getFormatVersion();
0:   protected Compressor compressor;
1:   protected boolean isSort;
1:   protected boolean isInvertedIndex;
1: 
0:   IndexStorageCodec(boolean isSort, boolean isInvertedIndex, Compressor compressor) {
1:     this.isSort = isSort;
1:     this.isInvertedIndex = isInvertedIndex;
0:     this.compressor = compressor;
1:   }
1: 
1:   @Override
0:   public EncodedColumnPage[] encodeComplexColumn(ComplexColumnPage input) {
1:     throw new UnsupportedOperationException("internal error");
1:   }
1: 
1:   @Override
0:   public ColumnPage decode(byte[] input, int offset, int length) throws MemoryException {
1:     throw new UnsupportedOperationException("internal error");
1:   }
1: }
============================================================================