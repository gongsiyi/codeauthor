1:4422c52: /*
1:4422c52:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4422c52:  * contributor license agreements.  See the NOTICE file distributed with
1:4422c52:  * this work for additional information regarding copyright ownership.
1:4422c52:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4422c52:  * (the "License"); you may not use this file except in compliance with
1:4422c52:  * the License.  You may obtain a copy of the License at
1:4422c52:  *
1:4422c52:  *    http://www.apache.org/licenses/LICENSE-2.0
1:4422c52:  *
1:4422c52:  * Unless required by applicable law or agreed to in writing, software
1:4422c52:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4422c52:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4422c52:  * See the License for the specific language governing permissions and
1:4422c52:  * limitations under the License.
1:4422c52:  */
2:4422c52: 
1:4422c52: package org.apache.carbondata.presto;
1:4422c52: 
1:d4a1577: import java.util.Objects;
1:d4a1577: import java.util.Optional;
1:d4a1577: 
1:d4a1577: import static java.util.Objects.requireNonNull;
1:d4a1577: 
1:4422c52: import com.facebook.presto.spi.predicate.Domain;
1:4422c52: import com.fasterxml.jackson.annotation.JsonCreator;
1:4422c52: import com.fasterxml.jackson.annotation.JsonProperty;
1:4422c52: import com.fasterxml.jackson.annotation.JsonSetter;
1:4422c52: 
1:ccb6560: import static com.google.common.base.MoreObjects.toStringHelper;
1:d4a1577: 
1:4422c52: 
1:4422c52: /**
1:4422c52:  * Encapsulating presto Tuple-domain
1:4422c52:  */
1:4422c52: public class CarbondataColumnConstraint {
1:4422c52:   private final String name;
1:4422c52:   private final boolean invertedindexed;
1:4422c52:   private Optional<Domain> domain;
1:4422c52: 
1:4422c52:   @JsonCreator public CarbondataColumnConstraint(@JsonProperty("name") String name,
1:4422c52:       @JsonProperty("domain") Optional<Domain> domain,
1:4422c52:       @JsonProperty("invertedindexed") boolean invertedindexed) {
1:4422c52:     this.name = requireNonNull(name, "name is null");
1:4422c52:     this.invertedindexed = requireNonNull(invertedindexed, "invertedIndexed is null");
1:4422c52:     this.domain = requireNonNull(domain, "domain is null");
1:4422c52:   }
1:4422c52: 
1:4422c52:   @JsonProperty public boolean isInvertedindexed() {
1:4422c52:     return invertedindexed;
1:4422c52:   }
1:4422c52: 
1:4422c52:   @JsonProperty public String getName() {
1:4422c52:     return name;
1:4422c52:   }
1:4422c52: 
1:4422c52:   @JsonProperty public Optional<Domain> getDomain() {
1:4422c52:     return domain;
1:4422c52:   }
1:4422c52: 
1:4422c52:   @JsonSetter public void setDomain(Optional<Domain> domain) {
1:4422c52:     this.domain = domain;
1:4422c52:   }
1:4422c52: 
1:4422c52:   @Override public int hashCode() {
1:4422c52:     return Objects.hash(name, domain, invertedindexed);
1:4422c52:   }
1:4422c52: 
1:4422c52:   @Override public boolean equals(Object obj) {
1:4422c52:     if (this == obj) {
1:4422c52:       return true;
1:4422c52:     }
1:4422c52: 
1:4422c52:     if ((obj == null) || (getClass() != obj.getClass())) {
1:4422c52:       return false;
1:4422c52:     }
1:4422c52: 
1:4422c52:     CarbondataColumnConstraint other = (CarbondataColumnConstraint) obj;
1:4422c52:     return Objects.equals(this.name, other.name) && Objects.equals(this.domain, other.domain)
1:4422c52:         && Objects.equals(this.invertedindexed, other.invertedindexed);
1:4422c52:   }
1:4422c52: 
1:4422c52:   @Override public String toString() {
1:4422c52:     return toStringHelper(this).add("name", this.name).add("invertedindexed", this.invertedindexed)
1:4422c52:         .add("domain", this.domain).toString();
1:4422c52:   }
1:4422c52: }
============================================================================
author:ajantha-bhat
-------------------------------------------------------------------------------
commit:d4a1577
/////////////////////////////////////////////////////////////////////////
1: import java.util.Objects;
1: import java.util.Optional;
1: 
1: import static java.util.Objects.requireNonNull;
1: 
1: 
author:Bhavya
-------------------------------------------------------------------------------
commit:ccb6560
/////////////////////////////////////////////////////////////////////////
1: import static com.google.common.base.MoreObjects.toStringHelper;
author:ffpeng90
-------------------------------------------------------------------------------
commit:4422c52
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.presto;
1: 
1: import com.facebook.presto.spi.predicate.Domain;
1: import com.fasterxml.jackson.annotation.JsonCreator;
1: import com.fasterxml.jackson.annotation.JsonProperty;
1: import com.fasterxml.jackson.annotation.JsonSetter;
1: 
0: import java.util.Objects;
0: import java.util.Optional;
1: 
0: //import static com.google.common.base.MoreObjects.toStringHelper;
0: import static com.google.common.base.Objects.toStringHelper;
0: import static java.util.Objects.requireNonNull;
1: 
1: /**
1:  * Encapsulating presto Tuple-domain
1:  */
1: public class CarbondataColumnConstraint {
1:   private final String name;
1:   private final boolean invertedindexed;
1:   private Optional<Domain> domain;
1: 
1:   @JsonCreator public CarbondataColumnConstraint(@JsonProperty("name") String name,
1:       @JsonProperty("domain") Optional<Domain> domain,
1:       @JsonProperty("invertedindexed") boolean invertedindexed) {
1:     this.name = requireNonNull(name, "name is null");
1:     this.invertedindexed = requireNonNull(invertedindexed, "invertedIndexed is null");
1:     this.domain = requireNonNull(domain, "domain is null");
1:   }
1: 
1:   @JsonProperty public boolean isInvertedindexed() {
1:     return invertedindexed;
1:   }
1: 
1:   @JsonProperty public String getName() {
1:     return name;
1:   }
1: 
1:   @JsonProperty public Optional<Domain> getDomain() {
1:     return domain;
1:   }
1: 
1:   @JsonSetter public void setDomain(Optional<Domain> domain) {
1:     this.domain = domain;
1:   }
1: 
1:   @Override public int hashCode() {
1:     return Objects.hash(name, domain, invertedindexed);
1:   }
1: 
1:   @Override public boolean equals(Object obj) {
1:     if (this == obj) {
1:       return true;
1:     }
1: 
1:     if ((obj == null) || (getClass() != obj.getClass())) {
1:       return false;
1:     }
1: 
1:     CarbondataColumnConstraint other = (CarbondataColumnConstraint) obj;
1:     return Objects.equals(this.name, other.name) && Objects.equals(this.domain, other.domain)
1:         && Objects.equals(this.invertedindexed, other.invertedindexed);
1:   }
1: 
1:   @Override public String toString() {
1:     return toStringHelper(this).add("name", this.name).add("invertedindexed", this.invertedindexed)
1:         .add("domain", this.domain).toString();
1:   }
1: }
author:chenliang613
-------------------------------------------------------------------------------
commit:7ee8e27
/////////////////////////////////////////////////////////////////////////
commit:2712330
/////////////////////////////////////////////////////////////////////////
0:   private final String name;
0:   private final boolean invertedindexed;
0:   private Optional<Domain> domain;
0:   @JsonCreator public CarbondataColumnConstraint(@JsonProperty("name") String name,
0:       @JsonProperty("domain") Optional<Domain> domain,
0:       @JsonProperty("invertedindexed") boolean invertedindexed) {
0:     this.name = requireNonNull(name, "name is null");
0:     this.invertedindexed = requireNonNull(invertedindexed, "invertedIndexed is null");
0:     this.domain = requireNonNull(domain, "domain is null");
0:   }
0: 
0:   @JsonProperty public boolean isInvertedindexed() {
0:     return invertedindexed;
0:   }
0: 
0:   @JsonProperty public String getName() {
0:     return name;
0:   }
0: 
0:   @JsonProperty public Optional<Domain> getDomain() {
0:     return domain;
0:   }
0: 
0:   @JsonSetter public void setDomain(Optional<Domain> domain) {
0:     this.domain = domain;
0:   }
0: 
0:   @Override public int hashCode() {
0:     return Objects.hash(name, domain, invertedindexed);
0:   }
0: 
0:   @Override public boolean equals(Object obj) {
0:     if (this == obj) {
0:       return true;
0:     if ((obj == null) || (getClass() != obj.getClass())) {
0:       return false;
0:     CarbondataColumnConstraint other = (CarbondataColumnConstraint) obj;
0:     return Objects.equals(this.name, other.name) && Objects.equals(this.domain, other.domain)
0:         && Objects.equals(this.invertedindexed, other.invertedindexed);
0:   }
0:   @Override public String toString() {
0:     return toStringHelper(this).add("name", this.name).add("invertedindexed", this.invertedindexed)
0:         .add("domain", this.domain).toString();
0:   }
commit:9e3818e
/////////////////////////////////////////////////////////////////////////
0: //import static com.google.common.base.MoreObjects.toStringHelper;
0: import static com.google.common.base.Objects.toStringHelper;
commit:32bf296
/////////////////////////////////////////////////////////////////////////
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *    http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
0: 
0: package org.apache.carbondata.presto;
commit:9d7dbea
============================================================================