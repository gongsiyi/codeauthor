1:ce6e71c: /*
1:ce6e71c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:ce6e71c:  * contributor license agreements.  See the NOTICE file distributed with
1:ce6e71c:  * this work for additional information regarding copyright ownership.
1:ce6e71c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:ce6e71c:  * (the "License"); you may not use this file except in compliance with
1:ce6e71c:  * the License.  You may obtain a copy of the License at
1:ce6e71c:  *
1:ce6e71c:  *    http://www.apache.org/licenses/LICENSE-2.0
1:ce6e71c:  *
1:ce6e71c:  * Unless required by applicable law or agreed to in writing, software
1:ce6e71c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:ce6e71c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ce6e71c:  * See the License for the specific language governing permissions and
1:ce6e71c:  * limitations under the License.
1:ce6e71c:  */
1:ce6e71c: 
1:ce6e71c: package org.apache.carbondata.common.annotations;
1:ce6e71c: 
1:ce6e71c: import java.lang.annotation.Documented;
1:ce6e71c: import java.lang.annotation.Retention;
1:ce6e71c: import java.lang.annotation.RetentionPolicy;
1:ce6e71c: 
1:ce6e71c: import org.apache.carbondata.common.annotations.InterfaceAudience.*;
1:ce6e71c: 
1:ce6e71c: /**
1:ce6e71c:  * This annotation is ported and modified from Apache Hadoop project.
1:ce6e71c:  *
1:ce6e71c:  * Annotation to inform users of how much to rely on a particular package,
1:ce6e71c:  * class or method not changing over time. Currently the stability can be
1:ce6e71c:  * {@link Stable}, {@link Evolving} or {@link Unstable}. <br>
1:ce6e71c:  *
1:ce6e71c:  * 1. {@link Stable} means compatibility can break only at major release (m.0)
1:ce6e71c:  * 2. {@link Evolving} means compatibility can break at minor release (m.x)
1:ce6e71c:  * 3. {@link Unstable} means compatibility can break at any release
1:ce6e71c:  *
1:ce6e71c:  * <ul><li>All classes that are annotated with {@link User} or
1:ce6e71c:  * {@link Developer} must have InterfaceStability annotation. </li>
1:e72bfd1:  * <li>Classes that are {@link Internal} are to be considered unstable unless
1:ce6e71c:  * a different InterfaceStability annotation states otherwise.</li>
1:ce6e71c:  * <li>Incompatible changes must not be made to classes marked as stable.</li>
1:ce6e71c:  * </ul>
1:ce6e71c:  */
1:ce6e71c: @InterfaceAudience.User
1:ce6e71c: @org.apache.hadoop.classification.InterfaceStability.Evolving
1:ce6e71c: public class InterfaceStability {
1:ce6e71c:   /**
1:ce6e71c:    * Can evolve while retaining compatibility for minor release boundaries.;
1:ce6e71c:    * can break compatibility only at major release (ie. at m.0).
1:ce6e71c:    */
1:ce6e71c:   @Documented
1:ce6e71c:   @Retention(RetentionPolicy.RUNTIME)
1:ce6e71c:   public @interface Stable { }
1:ce6e71c: 
1:ce6e71c:   /**
1:ce6e71c:    * Evolving, but can break compatibility at minor release (i.e. m.x)
1:ce6e71c:    */
1:ce6e71c:   @Documented
1:ce6e71c:   @Retention(RetentionPolicy.RUNTIME)
1:ce6e71c:   public @interface Evolving { }
1:ce6e71c: 
1:ce6e71c:   /**
1:ce6e71c:    * No guarantee is provided as to reliability or stability across any
1:ce6e71c:    * level of release granularity.
1:ce6e71c:    */
1:ce6e71c:   @Documented
1:ce6e71c:   @Retention(RetentionPolicy.RUNTIME)
1:ce6e71c:   public @interface Unstable { }
1:ce6e71c: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:e72bfd1
/////////////////////////////////////////////////////////////////////////
1:  * <li>Classes that are {@link Internal} are to be considered unstable unless
commit:ce6e71c
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.common.annotations;
1: 
1: import java.lang.annotation.Documented;
1: import java.lang.annotation.Retention;
1: import java.lang.annotation.RetentionPolicy;
1: 
1: import org.apache.carbondata.common.annotations.InterfaceAudience.*;
1: 
1: /**
1:  * This annotation is ported and modified from Apache Hadoop project.
1:  *
1:  * Annotation to inform users of how much to rely on a particular package,
1:  * class or method not changing over time. Currently the stability can be
1:  * {@link Stable}, {@link Evolving} or {@link Unstable}. <br>
1:  *
1:  * 1. {@link Stable} means compatibility can break only at major release (m.0)
1:  * 2. {@link Evolving} means compatibility can break at minor release (m.x)
1:  * 3. {@link Unstable} means compatibility can break at any release
1:  *
1:  * <ul><li>All classes that are annotated with {@link User} or
1:  * {@link Developer} must have InterfaceStability annotation. </li>
0:  * <li>Classes that are {@link Private} are to be considered unstable unless
1:  * a different InterfaceStability annotation states otherwise.</li>
1:  * <li>Incompatible changes must not be made to classes marked as stable.</li>
1:  * </ul>
1:  */
1: @InterfaceAudience.User
1: @org.apache.hadoop.classification.InterfaceStability.Evolving
1: public class InterfaceStability {
1:   /**
1:    * Can evolve while retaining compatibility for minor release boundaries.;
1:    * can break compatibility only at major release (ie. at m.0).
1:    */
1:   @Documented
1:   @Retention(RetentionPolicy.RUNTIME)
1:   public @interface Stable { }
1: 
1:   /**
1:    * Evolving, but can break compatibility at minor release (i.e. m.x)
1:    */
1:   @Documented
1:   @Retention(RetentionPolicy.RUNTIME)
1:   public @interface Evolving { }
1: 
1:   /**
1:    * No guarantee is provided as to reliability or stability across any
1:    * level of release granularity.
1:    */
1:   @Documented
1:   @Retention(RetentionPolicy.RUNTIME)
1:   public @interface Unstable { }
1: }
commit:e72bfd1
/////////////////////////////////////////////////////////////////////////
0:  * <li>Classes that are {@link Internal} are to be considered unstable unless
commit:ce6e71c
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  *    http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.apache.carbondata.common.annotations;
0: 
0: import java.lang.annotation.Documented;
0: import java.lang.annotation.Retention;
0: import java.lang.annotation.RetentionPolicy;
0: 
0: import org.apache.carbondata.common.annotations.InterfaceAudience.*;
0: 
0: /**
0:  * This annotation is ported and modified from Apache Hadoop project.
0:  *
0:  * Annotation to inform users of how much to rely on a particular package,
0:  * class or method not changing over time. Currently the stability can be
0:  * {@link Stable}, {@link Evolving} or {@link Unstable}. <br>
0:  *
0:  * 1. {@link Stable} means compatibility can break only at major release (m.0)
0:  * 2. {@link Evolving} means compatibility can break at minor release (m.x)
0:  * 3. {@link Unstable} means compatibility can break at any release
0:  *
0:  * <ul><li>All classes that are annotated with {@link User} or
0:  * {@link Developer} must have InterfaceStability annotation. </li>
0:  * <li>Classes that are {@link Private} are to be considered unstable unless
0:  * a different InterfaceStability annotation states otherwise.</li>
0:  * <li>Incompatible changes must not be made to classes marked as stable.</li>
0:  * </ul>
0:  */
0: @InterfaceAudience.User
0: @org.apache.hadoop.classification.InterfaceStability.Evolving
0: public class InterfaceStability {
0:   /**
0:    * Can evolve while retaining compatibility for minor release boundaries.;
0:    * can break compatibility only at major release (ie. at m.0).
0:    */
0:   @Documented
0:   @Retention(RetentionPolicy.RUNTIME)
0:   public @interface Stable { }
0: 
0:   /**
0:    * Evolving, but can break compatibility at minor release (i.e. m.x)
0:    */
0:   @Documented
0:   @Retention(RetentionPolicy.RUNTIME)
0:   public @interface Evolving { }
0: 
0:   /**
0:    * No guarantee is provided as to reliability or stability across any
0:    * level of release granularity.
0:    */
0:   @Documented
0:   @Retention(RetentionPolicy.RUNTIME)
0:   public @interface Unstable { }
0: }
============================================================================