1:e4f2843: /*
1:e4f2843:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e4f2843:  * contributor license agreements.  See the NOTICE file distributed with
1:e4f2843:  * this work for additional information regarding copyright ownership.
1:e4f2843:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e4f2843:  * (the "License"); you may not use this file except in compliance with
1:e4f2843:  * the License.  You may obtain a copy of the License at
1:e4f2843:  *
1:e4f2843:  *    http://www.apache.org/licenses/LICENSE-2.0
1:e4f2843:  *
1:e4f2843:  * Unless required by applicable law or agreed to in writing, software
1:e4f2843:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e4f2843:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e4f2843:  * See the License for the specific language governing permissions and
1:e4f2843:  * limitations under the License.
3:e4f2843:  */
5:e4f2843: 
1:e4f2843: package org.apache.carbondata.core.preagg;
1:e4f2843: 
1:e4f2843: import org.apache.carbondata.core.metadata.schema.table.column.ColumnSchema;
1:e4f2843: 
3:e4f2843: /**
1:e4f2843:  * column present in query
1:e4f2843:  */
1:e4f2843: public class QueryColumn {
1:e4f2843: 
1:e4f2843:   /**
1:e4f2843:    * parent column schema
1:e4f2843:    */
1:e4f2843:   private ColumnSchema columnSchema;
1:e4f2843: 
1:e4f2843:   /**
1:e4f2843:    * is filter column
1:e4f2843:    */
1:e4f2843:   private boolean isFilterColumn;
1:e4f2843: 
1:e2a79ee:   /**
1:e2a79ee:    * timeseries udf applied on column
1:e2a79ee:    */
1:e2a79ee:   private String timeseriesFunction;
1:e2a79ee: 
1:c70e73f:   public QueryColumn(ColumnSchema columnSchema, boolean isFilterColumn, String timeseriesFunction) {
1:e4f2843:     this.columnSchema = columnSchema;
1:e4f2843:     this.isFilterColumn = isFilterColumn;
1:e2a79ee:     this.timeseriesFunction = timeseriesFunction;
4:e4f2843:   }
1:e4f2843: 
1:e4f2843:   public ColumnSchema getColumnSchema() {
1:e4f2843:     return columnSchema;
1:e4f2843:   }
1:e4f2843: 
1:e4f2843:   public boolean isFilterColumn() {
1:e4f2843:     return isFilterColumn;
1:f70e6d7:   }
1:f70e6d7: 
1:e2a79ee:   public String getTimeseriesFunction() {
1:e2a79ee:     return timeseriesFunction;
1:e2a79ee:   }
1:e2a79ee: 
1:f70e6d7:   @Override public boolean equals(Object o) {
1:f70e6d7:     if (this == o) {
1:f70e6d7:       return true;
1:f70e6d7:     }
1:f70e6d7:     if (o == null || getClass() != o.getClass()) {
2:f70e6d7:       return false;
1:f70e6d7:     }
1:f70e6d7:     QueryColumn that = (QueryColumn) o;
1:f70e6d7:     if (isFilterColumn != that.isFilterColumn) {
1:f70e6d7:       return false;
1:f70e6d7:     }
1:f70e6d7:     if (!columnSchema.equals(that.columnSchema)) {
1:e2a79ee:       return false;
1:e2a79ee:     }
1:e2a79ee:     return timeseriesFunction != null ?
1:e2a79ee:         timeseriesFunction.equals(that.timeseriesFunction) :
1:e2a79ee:         that.timeseriesFunction == null;
1:f70e6d7:   }
1:f70e6d7: 
1:f70e6d7:   @Override public int hashCode() {
1:f70e6d7:     int result = columnSchema.hashCode();
1:e2a79ee:     result = 31 * result + (timeseriesFunction != null ? timeseriesFunction.hashCode() : 0);
1:f70e6d7:     result = 31 * result + (isFilterColumn ? 1 : 0);
1:f70e6d7:     return result;
1:f70e6d7:   }
1:e4f2843: }
============================================================================
author:kumarvishal
-------------------------------------------------------------------------------
commit:c70e73f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:   public QueryColumn(ColumnSchema columnSchema, boolean isFilterColumn, String timeseriesFunction) {
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:e2a79ee
/////////////////////////////////////////////////////////////////////////
1:   /**
1:    * timeseries udf applied on column
1:    */
1:   private String timeseriesFunction;
1: 
0:       boolean isFilterColumn, String timeseriesFunction) {
1:     this.timeseriesFunction = timeseriesFunction;
/////////////////////////////////////////////////////////////////////////
1:   public String getTimeseriesFunction() {
1:     return timeseriesFunction;
1:   }
1: 
/////////////////////////////////////////////////////////////////////////
0:     if (!(aggFunction != null ? aggFunction.equals(that.aggFunction) : that.aggFunction == null)) {
1:       return false;
1:     }
1:     return timeseriesFunction != null ?
1:         timeseriesFunction.equals(that.timeseriesFunction) :
1:         that.timeseriesFunction == null;
1:     result = 31 * result + (timeseriesFunction != null ? timeseriesFunction.hashCode() : 0);
commit:f70e6d7
/////////////////////////////////////////////////////////////////////////
1: 
1:   @Override public boolean equals(Object o) {
1:     if (this == o) {
1:       return true;
1:     }
1:     if (o == null || getClass() != o.getClass()) {
1:       return false;
1:     }
1:     QueryColumn that = (QueryColumn) o;
1:     if (isFilterColumn != that.isFilterColumn) {
1:       return false;
1:     }
1:     if (!columnSchema.equals(that.columnSchema)) {
1:       return false;
1:     }
0:     return aggFunction != null ? aggFunction.equals(that.aggFunction) : that.aggFunction == null;
1:   }
1: 
1:   @Override public int hashCode() {
1:     int result = columnSchema.hashCode();
0:     result = 31 * result + (aggFunction != null ? aggFunction.hashCode() : 0);
1:     result = 31 * result + (isFilterColumn ? 1 : 0);
1:     return result;
1:   }
commit:e4f2843
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.preagg;
1: 
1: import org.apache.carbondata.core.metadata.schema.table.column.ColumnSchema;
1: 
1: /**
1:  * column present in query
1:  */
1: public class QueryColumn {
1: 
1:   /**
1:    * parent column schema
1:    */
1:   private ColumnSchema columnSchema;
1: 
1:   /**
0:    * to store the change data type in case of cast
1:    */
0:   private String changedDataType;
1: 
1:   /**
0:    * aggregation function applied
1:    */
0:   private String aggFunction;
1: 
1:   /**
1:    * is filter column
1:    */
1:   private boolean isFilterColumn;
1: 
0:   public QueryColumn(ColumnSchema columnSchema, String changedDataType, String aggFunction,
0:       boolean isFilterColumn) {
1:     this.columnSchema = columnSchema;
0:     this.changedDataType = changedDataType;
0:     this.aggFunction = aggFunction;
1:     this.isFilterColumn = isFilterColumn;
1:   }
1: 
1:   public ColumnSchema getColumnSchema() {
1:     return columnSchema;
1:   }
1: 
0:   public String getChangedDataType() {
0:     return changedDataType;
1:   }
1: 
0:   public String getAggFunction() {
0:     return aggFunction;
1:   }
1: 
1:   public boolean isFilterColumn() {
1:     return isFilterColumn;
1:   }
1: }
============================================================================