1:b434346: /*
1:b434346:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b434346:  * contributor license agreements.  See the NOTICE file distributed with
1:b434346:  * this work for additional information regarding copyright ownership.
1:b434346:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b434346:  * (the "License"); you may not use this file except in compliance with
1:b434346:  * the License.  You may obtain a copy of the License at
1:b434346:  *
1:b434346:  *    http://www.apache.org/licenses/LICENSE-2.0
1:b434346:  *
1:b434346:  * Unless required by applicable law or agreed to in writing, software
1:b434346:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b434346:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b434346:  * See the License for the specific language governing permissions and
1:b434346:  * limitations under the License.
1:b434346:  */
1:f089287: package org.apache.carbondata.core.datamap;
4:b434346: 
1:1e21cd1: import java.io.IOException;
1:1e21cd1: import java.io.Serializable;
1:1e21cd1: 
1:fc2a7eb: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:b434346: import org.apache.carbondata.core.datastore.block.Distributable;
1:56330ae: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
1:b434346: 
1:1e21cd1: import org.apache.hadoop.mapreduce.InputSplit;
1:1e21cd1: 
1:b434346: /**
1:b434346:  * Distributable class for datamap.
1:b434346:  */
1:fc2a7eb: @InterfaceAudience.Internal
1:1e21cd1: public abstract class DataMapDistributable extends InputSplit
1:1e21cd1:     implements Distributable, Serializable {
1:b434346: 
1:b434346:   private String tablePath;
1:b434346: 
1:8d3c774:   private Segment segment;
1:b434346: 
1:1e21cd1:   private String[] locations;
1:1e21cd1: 
1:56330ae:   private DataMapSchema dataMapSchema;
1:1e21cd1: 
1:b434346:   public String getTablePath() {
1:b434346:     return tablePath;
3:b434346:   }
1:1e21cd1: 
1:b434346:   public void setTablePath(String tablePath) {
1:b434346:     this.tablePath = tablePath;
1:1e21cd1:   }
1:1e21cd1: 
1:8d3c774:   public Segment getSegment() {
1:8d3c774:     return segment;
1:1e21cd1:   }
1:b434346: 
1:8d3c774:   public void setSegment(Segment segment) {
1:8d3c774:     this.segment = segment;
1:b434346:   }
1:b434346: 
1:56330ae:   public DataMapSchema getDataMapSchema() {
1:56330ae:     return dataMapSchema;
1:b434346:   }
1:b434346: 
1:56330ae:   public void setDataMapSchema(DataMapSchema dataMapSchema) {
1:56330ae:     this.dataMapSchema = dataMapSchema;
1:b434346:   }
1:b434346: 
1:1e21cd1:   public void setLocations(String[] locations) {
1:1e21cd1:     this.locations = locations;
1:1e21cd1:   }
1:1e21cd1: 
1:1e21cd1:   @Override
1:1e21cd1:   public String[] getLocations() throws IOException {
1:1e21cd1:     return locations;
1:1e21cd1:   }
1:1e21cd1: 
1:1e21cd1:   @Override
1:1e21cd1:   public int compareTo(Distributable o) {
1:1e21cd1:     return 0;
1:1e21cd1:   }
1:1e21cd1: 
1:1e21cd1:   @Override
1:1e21cd1:   public long getLength() throws IOException, InterruptedException {
1:1e21cd1:     return 0;
1:1e21cd1:   }
1:b434346: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:fc2a7eb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
/////////////////////////////////////////////////////////////////////////
1: @InterfaceAudience.Internal
commit:f089287
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.core.datamap;
author:Ravindra Pesala
-------------------------------------------------------------------------------
commit:56330ae
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
/////////////////////////////////////////////////////////////////////////
1:   private DataMapSchema dataMapSchema;
/////////////////////////////////////////////////////////////////////////
1:   public DataMapSchema getDataMapSchema() {
1:     return dataMapSchema;
1:   public void setDataMapSchema(DataMapSchema dataMapSchema) {
1:     this.dataMapSchema = dataMapSchema;
commit:1e21cd1
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1: import java.io.Serializable;
1: 
1: import org.apache.hadoop.mapreduce.InputSplit;
1: 
1: public abstract class DataMapDistributable extends InputSplit
1:     implements Distributable, Serializable {
/////////////////////////////////////////////////////////////////////////
1:   private String[] locations;
1: 
0:   private String dataMapFactoryClass;
1: 
/////////////////////////////////////////////////////////////////////////
0:   public String getDataMapFactoryClass() {
0:     return dataMapFactoryClass;
1:   }
1: 
0:   public void setDataMapFactoryClass(String dataMapFactoryClass) {
0:     this.dataMapFactoryClass = dataMapFactoryClass;
1:   }
1: 
1:   public void setLocations(String[] locations) {
1:     this.locations = locations;
1:   }
1: 
1:   @Override
1:   public String[] getLocations() throws IOException {
1:     return locations;
1:   }
1: 
1:   @Override
1:   public int compareTo(Distributable o) {
1:     return 0;
1:   }
1: 
1:   @Override
1:   public long getLength() throws IOException, InterruptedException {
1:     return 0;
1:   }
author:ravipesala
-------------------------------------------------------------------------------
commit:8d3c774
/////////////////////////////////////////////////////////////////////////
1:   private Segment segment;
/////////////////////////////////////////////////////////////////////////
1:   public Segment getSegment() {
1:     return segment;
1:   public void setSegment(Segment segment) {
1:     this.segment = segment;
commit:b434346
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.carbondata.core.indexstore;
1: 
1: import org.apache.carbondata.core.datastore.block.Distributable;
1: 
1: /**
1:  * Distributable class for datamap.
1:  */
0: public abstract class DataMapDistributable implements Distributable {
1: 
1:   private String tablePath;
1: 
0:   private String segmentId;
1: 
0:   private String dataMapName;
1: 
1:   public String getTablePath() {
1:     return tablePath;
1:   }
1: 
1:   public void setTablePath(String tablePath) {
1:     this.tablePath = tablePath;
1:   }
1: 
0:   public String getSegmentId() {
0:     return segmentId;
1:   }
1: 
0:   public void setSegmentId(String segmentId) {
0:     this.segmentId = segmentId;
1:   }
1: 
0:   public String getDataMapName() {
0:     return dataMapName;
1:   }
1: 
0:   public void setDataMapName(String dataMapName) {
0:     this.dataMapName = dataMapName;
1:   }
1: 
1: }
============================================================================