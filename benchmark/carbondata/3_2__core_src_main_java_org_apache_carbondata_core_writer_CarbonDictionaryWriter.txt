1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
2:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
2:cd6a4ff:  */
1:cd6a4ff: package org.apache.carbondata.core.writer;
2:cd6a4ff: 
1:cd6a4ff: import java.io.Closeable;
1:cd6a4ff: import java.io.IOException;
1:cd6a4ff: import java.util.List;
1:cd6a4ff: 
2:cd6a4ff: /**
1:cd6a4ff:  * dictionary writer interface
1:cd6a4ff:  */
1:cd6a4ff: public interface CarbonDictionaryWriter extends Closeable {
1:cd6a4ff:   /**
2:cd6a4ff:    * write method that accepts one value at a time
2:cd6a4ff:    * This method can be used when data is huge and memory is les. In that
2:cd6a4ff:    * case data can be stored to a file and an iterator can iterate over it and
2:cd6a4ff:    * pass one value at a time
1:cd6a4ff:    *
2:cd6a4ff:    * @param value unique dictionary value
2:cd6a4ff:    * @throws IOException if an I/O error occurs
1:cd6a4ff:    */
1:cd6a4ff:   void write(String value) throws IOException;
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * write method that accepts list of byte arrays as value
1:cd6a4ff:    * This can be used when data is less, then string can be converted
1:cd6a4ff:    * to byte array for each value and added to a list
1:cd6a4ff:    *
1:cd6a4ff:    * @param valueList list of byte array. Each byte array is unique dictionary value
1:cd6a4ff:    * @throws IOException if an I/O error occurs
1:cd6a4ff:    */
1:cd6a4ff:   void write(List<byte[]> valueList) throws IOException;
1:cd6a4ff: 
1:cd6a4ff: 
1:cd6a4ff:   void commit() throws IOException;
1:cd6a4ff: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:daa6465
/////////////////////////////////////////////////////////////////////////
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.core.writer;
1: 
1: import java.io.Closeable;
1: import java.io.IOException;
1: import java.util.List;
1: 
1: /**
1:  * dictionary writer interface
1:  */
1: public interface CarbonDictionaryWriter extends Closeable {
1:   /**
1:    * write method that accepts one value at a time
1:    * This method can be used when data is huge and memory is les. In that
1:    * case data can be stored to a file and an iterator can iterate over it and
1:    * pass one value at a time
1:    *
1:    * @param value unique dictionary value
1:    * @throws IOException if an I/O error occurs
1:    */
1:   void write(String value) throws IOException;
1: 
1:   /**
1:    * write method that accepts one value at a time
1:    * This method can be used when data is huge and memory is les. In that
1:    * case data can be stored to a file and an iterator can iterate over it and
1:    * pass one value at a time
1:    *
1:    * @param value unique dictionary value
1:    * @throws IOException if an I/O error occurs
1:    */
0:   void write(byte[] value) throws IOException;
1: 
1:   /**
1:    * write method that accepts list of byte arrays as value
1:    * This can be used when data is less, then string can be converted
1:    * to byte array for each value and added to a list
1:    *
1:    * @param valueList list of byte array. Each byte array is unique dictionary value
1:    * @throws IOException if an I/O error occurs
1:    */
1:   void write(List<byte[]> valueList) throws IOException;
1: 
1: 
1:   void commit() throws IOException;
1: }
============================================================================