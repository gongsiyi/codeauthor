1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: package org.apache.carbondata.core.keygenerator.directdictionary;
3:cd6a4ff: 
1:d73f4bf: import org.apache.carbondata.core.keygenerator.directdictionary.timestamp.DateDirectDictionaryGenerator;
1:cd6a4ff: import org.apache.carbondata.core.keygenerator.directdictionary.timestamp.TimeStampDirectDictionaryGenerator;
1:ce09aaa: import org.apache.carbondata.core.metadata.datatype.DataType;
1:956833e: import org.apache.carbondata.core.metadata.datatype.DataTypes;
1:ea04fce: import org.apache.carbondata.core.util.CarbonUtil;
1:cd6a4ff: 
1:cd6a4ff: /**
1:cd6a4ff:  * Factory for DirectDictionary Key generator
1:cd6a4ff:  */
1:cd6a4ff: public final class DirectDictionaryKeyGeneratorFactory {
1:cd6a4ff:   /**
1:cd6a4ff:    * private constructor
1:cd6a4ff:    */
1:cd6a4ff:   private DirectDictionaryKeyGeneratorFactory() {
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   /**
1:cd6a4ff:    * The method returns the DirectDictionaryGenerator based for direct dictionary
1:cd6a4ff:    * column based on dataType
1:cd6a4ff:    *
1:cd6a4ff:    * @param dataType DataType
1:cd6a4ff:    * @return the generator instance
1:cd6a4ff:    */
1:72d076a:   public static DirectDictionaryGenerator getDirectDictionaryGenerator(DataType dataType,
1:72d076a:       String dateFormat) {
1:cd6a4ff:     DirectDictionaryGenerator directDictionaryGenerator = null;
1:956833e:     if (dataType == DataTypes.DATE) {
1:956833e:       directDictionaryGenerator = new DateDirectDictionaryGenerator(dateFormat);
1:956833e:     } else if (dataType == DataTypes.TIMESTAMP) {
1:956833e:       directDictionaryGenerator = new TimeStampDirectDictionaryGenerator(dateFormat);
1:cd6a4ff:     }
1:cd6a4ff:     return directDictionaryGenerator;
1:cd6a4ff:   }
1:72d076a: 
1:72d076a:   public static DirectDictionaryGenerator getDirectDictionaryGenerator(DataType dataType) {
1:ea04fce:     return getDirectDictionaryGenerator(dataType, CarbonUtil.getFormatFromProperty(dataType));
1:72d076a:   }
1:cd6a4ff: }
============================================================================
author:sraghunandan
-------------------------------------------------------------------------------
commit:f911403
/////////////////////////////////////////////////////////////////////////
author:Jacky Li
-------------------------------------------------------------------------------
commit:956833e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.datatype.DataTypes;
/////////////////////////////////////////////////////////////////////////
1:     if (dataType == DataTypes.DATE) {
1:       directDictionaryGenerator = new DateDirectDictionaryGenerator(dateFormat);
1:     } else if (dataType == DataTypes.TIMESTAMP) {
1:       directDictionaryGenerator = new TimeStampDirectDictionaryGenerator(dateFormat);
author:kumarvishal
-------------------------------------------------------------------------------
commit:ea04fce
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.util.CarbonUtil;
/////////////////////////////////////////////////////////////////////////
1:     return getDirectDictionaryGenerator(dataType, CarbonUtil.getFormatFromProperty(dataType));
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
commit:d73f4bf
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.keygenerator.directdictionary.timestamp.DateDirectDictionaryGenerator;
/////////////////////////////////////////////////////////////////////////
0:       case DATE:
0:         directDictionaryGenerator = new DateDirectDictionaryGenerator(dateFormat);
0:         break;
author:jackylk
-------------------------------------------------------------------------------
commit:ce09aaa
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.datatype.DataType;
author:X-Lion
-------------------------------------------------------------------------------
commit:72d076a
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.constants.CarbonCommonConstants;
0: import org.apache.carbondata.core.util.CarbonProperties;
/////////////////////////////////////////////////////////////////////////
1:   public static DirectDictionaryGenerator getDirectDictionaryGenerator(DataType dataType,
1:       String dateFormat) {
0:         directDictionaryGenerator = new TimeStampDirectDictionaryGenerator(dateFormat);
1: 
1:   public static DirectDictionaryGenerator getDirectDictionaryGenerator(DataType dataType) {
0:     return getDirectDictionaryGenerator(dataType,
0:         CarbonProperties.getInstance()
0:             .getProperty(CarbonCommonConstants.CARBON_TIMESTAMP_FORMAT,
0:                 CarbonCommonConstants.CARBON_TIMESTAMP_DEFAULT_FORMAT));
1:   }
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.core.keygenerator.directdictionary;
1: 
0: import org.apache.carbondata.core.carbon.metadata.datatype.DataType;
1: import org.apache.carbondata.core.keygenerator.directdictionary.timestamp.TimeStampDirectDictionaryGenerator;
1: 
1: /**
1:  * Factory for DirectDictionary Key generator
1:  */
1: public final class DirectDictionaryKeyGeneratorFactory {
1:   /**
1:    * private constructor
1:    */
1:   private DirectDictionaryKeyGeneratorFactory() {
1: 
1:   }
1: 
1:   /**
1:    * The method returns the DirectDictionaryGenerator based for direct dictionary
1:    * column based on dataType
1:    *
1:    * @param dataType DataType
1:    * @return the generator instance
1:    */
0:   public static DirectDictionaryGenerator getDirectDictionaryGenerator(DataType dataType) {
1:     DirectDictionaryGenerator directDictionaryGenerator = null;
0:     switch (dataType) {
0:       case TIMESTAMP:
0:         directDictionaryGenerator = TimeStampDirectDictionaryGenerator.instance;
0:         break;
0:       default:
1: 
1:     }
1:     return directDictionaryGenerator;
1:   }
1: }
============================================================================