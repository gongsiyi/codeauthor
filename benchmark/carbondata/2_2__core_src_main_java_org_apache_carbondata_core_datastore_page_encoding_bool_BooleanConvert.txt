1:6abdd97: /*
1:6abdd97:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6abdd97:  * contributor license agreements.  See the NOTICE file distributed with
1:6abdd97:  * this work for additional information regarding copyright ownership.
1:6abdd97:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6abdd97:  * (the "License"); you may not use this file except in compliance with
1:6abdd97:  * the License.  You may obtain a copy of the License at
1:6abdd97:  *
1:6abdd97:  *    http://www.apache.org/licenses/LICENSE-2.0
1:6abdd97:  *
1:6abdd97:  * Unless required by applicable law or agreed to in writing, software
1:6abdd97:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6abdd97:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6abdd97:  * See the License for the specific language governing permissions and
1:6abdd97:  * limitations under the License.
1:6abdd97:  */
1:6abdd97: 
1:6abdd97: package org.apache.carbondata.core.datastore.page.encoding.bool;
1:6abdd97: 
1:0f46ef0: import java.util.Locale;
1:0f46ef0: 
1:6abdd97: /**
1:6abdd97:  * convert tools for boolean data type
1:6abdd97:  */
1:6abdd97: public class BooleanConvert {
1:6abdd97: 
1:6abdd97:   public static final byte TRUE_VALUE = 1;
1:6abdd97:   public static final byte FALSE_VALUE = 0;
1:6abdd97:   /**
1:6abdd97:    * convert boolean to byte
1:6abdd97:    *
1:6abdd97:    * @param data data of boolean data type
1:6abdd97:    * @return byte type data by convert
1:6abdd97:    */
1:6abdd97:   public static byte boolean2Byte(boolean data) {
1:6abdd97:     return data ? TRUE_VALUE : FALSE_VALUE;
1:6abdd97:   }
1:6abdd97: 
1:6abdd97:   /**
1:6abdd97:    * convert byte to boolean
1:6abdd97:    *
1:6abdd97:    * @param data byte type data
1:6abdd97:    * @return boolean type data
1:6abdd97:    */
1:6abdd97:   public static boolean byte2Boolean(int data) {
1:6abdd97:     return data == TRUE_VALUE;
1:6abdd97:   }
1:6abdd97: 
1:6abdd97:   /**
1:6abdd97:    * parse boolean, true and false to boolean
1:6abdd97:    *
1:6abdd97:    * @param input string type data
1:6abdd97:    * @return Boolean type data
1:6abdd97:    */
1:6abdd97:   public static Boolean parseBoolean(String input) {
1:0f46ef0:     String value = input.toLowerCase(Locale.getDefault());
1:6abdd97:     if (("false").equals(value)) {
1:6abdd97:       return Boolean.FALSE;
1:6abdd97:     } else if (("true").equals(value)) {
1:6abdd97:       return Boolean.TRUE;
1:6abdd97:     } else {
1:6abdd97:       throw new NumberFormatException("Not a valid Boolean type");
1:6abdd97:     }
1:6abdd97:   }
1:6abdd97: }
============================================================================
author:dhatchayani
-------------------------------------------------------------------------------
commit:0f46ef0
/////////////////////////////////////////////////////////////////////////
1: import java.util.Locale;
1: 
/////////////////////////////////////////////////////////////////////////
1:     String value = input.toLowerCase(Locale.getDefault());
author:xubo245
-------------------------------------------------------------------------------
commit:6abdd97
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.datastore.page.encoding.bool;
1: 
1: /**
1:  * convert tools for boolean data type
1:  */
1: public class BooleanConvert {
1: 
1:   public static final byte TRUE_VALUE = 1;
1:   public static final byte FALSE_VALUE = 0;
1:   /**
1:    * convert boolean to byte
1:    *
1:    * @param data data of boolean data type
1:    * @return byte type data by convert
1:    */
1:   public static byte boolean2Byte(boolean data) {
1:     return data ? TRUE_VALUE : FALSE_VALUE;
1:   }
1: 
1:   /**
1:    * convert byte to boolean
1:    *
1:    * @param data byte type data
1:    * @return boolean type data
1:    */
1:   public static boolean byte2Boolean(int data) {
1:     return data == TRUE_VALUE;
1:   }
1: 
1:   /**
1:    * parse boolean, true and false to boolean
1:    *
1:    * @param input string type data
1:    * @return Boolean type data
1:    */
1:   public static Boolean parseBoolean(String input) {
0:     String value = input.toLowerCase();
1:     if (("false").equals(value)) {
1:       return Boolean.FALSE;
1:     } else if (("true").equals(value)) {
1:       return Boolean.TRUE;
1:     } else {
1:       throw new NumberFormatException("Not a valid Boolean type");
1:     }
1:   }
1: }
============================================================================