1:425f820: /*
1:425f820:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:425f820:  * contributor license agreements.  See the NOTICE file distributed with
1:425f820:  * this work for additional information regarding copyright ownership.
1:425f820:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:425f820:  * (the "License"); you may not use this file except in compliance with
1:425f820:  * the License.  You may obtain a copy of the License at
1:425f820:  *
1:425f820:  *    http://www.apache.org/licenses/LICENSE-2.0
1:425f820:  *
1:425f820:  * Unless required by applicable law or agreed to in writing, software
1:425f820:  * distributed under the License is distributed on an "AS IS" BASIS,
1:425f820:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:425f820:  * See the License for the specific language governing permissions and
1:425f820:  * limitations under the License.
1:425f820:  */
1:425f820: package org.apache.carbondata.core.keygenerator.directdictionary;
1:425f820: 
1:425f820: import org.apache.carbondata.core.constants.CarbonCommonConstants;
1:425f820: import org.apache.carbondata.core.keygenerator.directdictionary.timestamp.TimeStampDirectDictionaryGenerator;
1:425f820: import org.apache.carbondata.core.metadata.datatype.DataType;
1:425f820: import org.apache.carbondata.core.metadata.datatype.DataTypes;
1:425f820: 
1:425f820: import org.junit.After;
1:425f820: import org.junit.Assert;
1:425f820: import org.junit.Before;
1:425f820: import org.junit.Test;
1:425f820: 
1:425f820: /**
1:425f820:  * Unit test case for the DateDirectDictionaryGenerator
1:425f820:  */
1:425f820: public class DateDirectDictionaryGeneratorTest {
1:425f820:   private DirectDictionaryGenerator dictionaryGenerator = null;
1:425f820: 
1:425f820:   @Before public void setUp() throws Exception {
1:425f820:     TimeStampDirectDictionaryGenerator generator = new TimeStampDirectDictionaryGenerator();
1:425f820:     dictionaryGenerator = DirectDictionaryKeyGeneratorFactory
1:425f820:         .getDirectDictionaryGenerator(DataTypes.DATE,
1:425f820:             CarbonCommonConstants.CARBON_DATE_DEFAULT_FORMAT);
1:425f820:   }
1:425f820: 
1:425f820:   /**
1:425f820:    * The generated surrogateKey must be greater than 1
1:425f820:    *
1:425f820:    * @throws Exception
1:425f820:    */
1:425f820:   @Test public void lowerBoundaryValueTest() {
1:425f820:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("0001-01-01");
1:425f820:     Assert.assertTrue(surrogateKey > 1);
1:425f820:   }
1:425f820:   /**
1:425f820:    * The generated surrogateKey must be greater than 1
1:425f820:    *
1:425f820:    * @throws Exception
1:425f820:    */
1:425f820:   @Test public void lowerBoundaryInvalidValueTest() {
1:425f820:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("0001-01-00");
1:425f820:     Assert.assertTrue(surrogateKey == 1);
1:425f820:   }
1:425f820: 
1:425f820:   /**
1:425f820:    * The generated surrogateKey must be greater than 1
1:425f820:    *
1:425f820:    * @throws Exception
1:425f820:    */
1:425f820:   @Test public void upperBoundaryValueTest() {
1:425f820:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("9999-12-31");
1:425f820:     Assert.assertTrue(surrogateKey > 1);
1:425f820:   }
1:425f820: 
1:425f820:   /**
1:425f820:    * The generated surrogateKey must be greater than 1
1:425f820:    *
1:425f820:    * @throws Exception
1:425f820:    */
1:425f820:   @Test public void upperBoundaryInvalidValueTest() {
1:425f820:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("10000-12-31");
1:425f820:     Assert.assertTrue(surrogateKey == 1);
1:425f820:   }
1:425f820: 
1:425f820:   @After public void tearDown() throws Exception {
1:425f820:     dictionaryGenerator = null;
1:425f820:   }
1:425f820: }
============================================================================
author:mohammadshahidkhan
-------------------------------------------------------------------------------
commit:425f820
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.keygenerator.directdictionary;
1: 
1: import org.apache.carbondata.core.constants.CarbonCommonConstants;
1: import org.apache.carbondata.core.keygenerator.directdictionary.timestamp.TimeStampDirectDictionaryGenerator;
1: import org.apache.carbondata.core.metadata.datatype.DataType;
1: import org.apache.carbondata.core.metadata.datatype.DataTypes;
1: 
1: import org.junit.After;
1: import org.junit.Assert;
1: import org.junit.Before;
1: import org.junit.Test;
1: 
1: /**
1:  * Unit test case for the DateDirectDictionaryGenerator
1:  */
1: public class DateDirectDictionaryGeneratorTest {
1:   private DirectDictionaryGenerator dictionaryGenerator = null;
1: 
1:   @Before public void setUp() throws Exception {
1:     TimeStampDirectDictionaryGenerator generator = new TimeStampDirectDictionaryGenerator();
1:     dictionaryGenerator = DirectDictionaryKeyGeneratorFactory
1:         .getDirectDictionaryGenerator(DataTypes.DATE,
1:             CarbonCommonConstants.CARBON_DATE_DEFAULT_FORMAT);
1:   }
1: 
1:   /**
1:    * The generated surrogateKey must be greater than 1
1:    *
1:    * @throws Exception
1:    */
1:   @Test public void lowerBoundaryValueTest() {
1:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("0001-01-01");
1:     Assert.assertTrue(surrogateKey > 1);
1:   }
1:   /**
1:    * The generated surrogateKey must be greater than 1
1:    *
1:    * @throws Exception
1:    */
1:   @Test public void lowerBoundaryInvalidValueTest() {
1:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("0001-01-00");
1:     Assert.assertTrue(surrogateKey == 1);
1:   }
1: 
1:   /**
1:    * The generated surrogateKey must be greater than 1
1:    *
1:    * @throws Exception
1:    */
1:   @Test public void upperBoundaryValueTest() {
1:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("9999-12-31");
1:     Assert.assertTrue(surrogateKey > 1);
1:   }
1: 
1:   /**
1:    * The generated surrogateKey must be greater than 1
1:    *
1:    * @throws Exception
1:    */
1:   @Test public void upperBoundaryInvalidValueTest() {
1:     int surrogateKey = dictionaryGenerator.generateDirectSurrogateKey("10000-12-31");
1:     Assert.assertTrue(surrogateKey == 1);
1:   }
1: 
1:   @After public void tearDown() throws Exception {
1:     dictionaryGenerator = null;
1:   }
1: }
============================================================================