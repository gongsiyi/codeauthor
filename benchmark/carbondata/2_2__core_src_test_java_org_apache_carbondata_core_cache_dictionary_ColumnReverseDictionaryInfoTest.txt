1:6828c4f: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:6828c4f:  *
1:6828c4f:  *    http://www.apache.org/licenses/LICENSE-2.0
1:6828c4f:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:6828c4f:  */
1:6828c4f: package org.apache.carbondata.core.cache.dictionary;
1:6828c4f: 
1:6828c4f: import java.util.Arrays;
1:6828c4f: 
1:6828c4f: import org.junit.BeforeClass;
1:6828c4f: import org.junit.Test;
1:6828c4f: 
1:6828c4f: import static org.hamcrest.CoreMatchers.equalTo;
1:6828c4f: import static org.hamcrest.core.Is.is;
1:6828c4f: import static org.junit.Assert.assertThat;
1:6828c4f: 
1:6828c4f: public class ColumnReverseDictionaryInfoTest {
1:6828c4f: 
1:6828c4f:   private static ColumnReverseDictionaryInfo columnReverseDictionaryInfo;
1:6828c4f: 
1:6828c4f:   @BeforeClass public static void setUp() {
1:6828c4f:     columnReverseDictionaryInfo = new ColumnReverseDictionaryInfo();
1:6828c4f:     columnReverseDictionaryInfo.addDictionaryChunk(Arrays.asList("a".getBytes()));
1:6828c4f:     columnReverseDictionaryInfo.addDictionaryChunk(Arrays.asList("b".getBytes()));
1:6828c4f:   }
1:6828c4f: 
1:6828c4f:   @Test public void testToGetSurrogateKey() {
1:6828c4f:     int key1 = columnReverseDictionaryInfo.getSurrogateKey("a".getBytes());
1:6828c4f:     int key2 = columnReverseDictionaryInfo.getSurrogateKey("b".getBytes());
1:6828c4f:     int[] surrogateKey = { key1, key2 };
1:6828c4f:     int[] expectedKeys = { 1, 2 };
1:6828c4f:     assertThat(surrogateKey, is(equalTo(expectedKeys)));
1:6828c4f:   }
1:6828c4f: 
1:6828c4f:   @Test public void testToGetSurrogateKeyForInvalidKey() {
1:6828c4f:     int key = columnReverseDictionaryInfo.getSurrogateKey("c".getBytes());
1:6828c4f:     int expectedKey = -1;
1:6828c4f:     assertThat(key, is(equalTo(expectedKey)));
1:6828c4f:   }
1:6828c4f: }
============================================================================
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:kunal642
-------------------------------------------------------------------------------
commit:6828c4f
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.core.cache.dictionary;
1: 
1: import java.util.Arrays;
1: 
1: import org.junit.BeforeClass;
1: import org.junit.Test;
1: 
1: import static org.hamcrest.CoreMatchers.equalTo;
1: import static org.hamcrest.core.Is.is;
1: import static org.junit.Assert.assertThat;
1: 
1: public class ColumnReverseDictionaryInfoTest {
1: 
1:   private static ColumnReverseDictionaryInfo columnReverseDictionaryInfo;
1: 
1:   @BeforeClass public static void setUp() {
1:     columnReverseDictionaryInfo = new ColumnReverseDictionaryInfo();
1:     columnReverseDictionaryInfo.addDictionaryChunk(Arrays.asList("a".getBytes()));
1:     columnReverseDictionaryInfo.addDictionaryChunk(Arrays.asList("b".getBytes()));
1:   }
1: 
1:   @Test public void testToGetSurrogateKey() {
1:     int key1 = columnReverseDictionaryInfo.getSurrogateKey("a".getBytes());
1:     int key2 = columnReverseDictionaryInfo.getSurrogateKey("b".getBytes());
1:     int[] surrogateKey = { key1, key2 };
1:     int[] expectedKeys = { 1, 2 };
1:     assertThat(surrogateKey, is(equalTo(expectedKeys)));
1:   }
1: 
1:   @Test public void testToGetSurrogateKeyForInvalidKey() {
1:     int key = columnReverseDictionaryInfo.getSurrogateKey("c".getBytes());
1:     int expectedKey = -1;
1:     assertThat(key, is(equalTo(expectedKey)));
1:   }
1: }
============================================================================