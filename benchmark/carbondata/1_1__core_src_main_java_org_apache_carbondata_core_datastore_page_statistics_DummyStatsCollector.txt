1:e710339: /*
1:e710339:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e710339:  * contributor license agreements.  See the NOTICE file distributed with
1:e710339:  * this work for additional information regarding copyright ownership.
1:e710339:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e710339:  * (the "License"); you may not use this file except in compliance with
1:e710339:  * the License.  You may obtain a copy of the License at
1:e710339:  *
1:e710339:  *    http://www.apache.org/licenses/LICENSE-2.0
1:e710339:  *
1:e710339:  * Unless required by applicable law or agreed to in writing, software
1:e710339:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e710339:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e710339:  * See the License for the specific language governing permissions and
1:e710339:  * limitations under the License.
1:e710339:  */
1:e710339: package org.apache.carbondata.core.datastore.page.statistics;
1:e710339: 
1:e710339: import java.math.BigDecimal;
1:e710339: 
1:e710339: import org.apache.carbondata.core.metadata.datatype.DataType;
1:e710339: 
1:e710339: import static org.apache.carbondata.core.metadata.datatype.DataTypes.BYTE_ARRAY;
1:e710339: 
1:e710339: /**
1:e710339:  * Column Page dummy stats collector. This will be used for which stats generation
1:e710339:  * is not required for example complex type column
1:e710339:  */
1:e710339: public class DummyStatsCollector implements ColumnPageStatsCollector {
1:e710339: 
1:e710339:   /**
1:e710339:    * dummy stats used to sync with encoder
1:e710339:    */
1:e710339:   protected static final SimpleStatsResult DUMMY_STATS = new SimpleStatsResult() {
1:e710339:     @Override public Object getMin() {
1:e710339:       return new byte[0];
1:e710339:     }
1:e710339: 
1:e710339:     @Override public Object getMax() {
1:e710339:       return new byte[0];
1:e710339:     }
1:e710339: 
1:e710339:     @Override public int getDecimalCount() {
1:e710339:       return 0;
1:e710339:     }
1:e710339: 
1:e710339:     @Override public DataType getDataType() {
1:e710339:       return BYTE_ARRAY;
1:e710339:     }
1:e710339: 
1:e710339:   };
1:e710339: 
1:e710339:   @Override public void updateNull(int rowId) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(byte value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(short value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(int value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(long value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(double value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(BigDecimal value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public void update(byte[] value) {
1:e710339: 
1:e710339:   }
1:e710339: 
1:e710339:   @Override public SimpleStatsResult getPageStats() {
1:e710339:     return DUMMY_STATS;
1:e710339:   }
1:e710339: }
============================================================================
author:kumarvishal09
-------------------------------------------------------------------------------
commit:e710339
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.datastore.page.statistics;
1: 
1: import java.math.BigDecimal;
1: 
1: import org.apache.carbondata.core.metadata.datatype.DataType;
1: 
1: import static org.apache.carbondata.core.metadata.datatype.DataTypes.BYTE_ARRAY;
1: 
1: /**
1:  * Column Page dummy stats collector. This will be used for which stats generation
1:  * is not required for example complex type column
1:  */
1: public class DummyStatsCollector implements ColumnPageStatsCollector {
1: 
1:   /**
1:    * dummy stats used to sync with encoder
1:    */
1:   protected static final SimpleStatsResult DUMMY_STATS = new SimpleStatsResult() {
1:     @Override public Object getMin() {
1:       return new byte[0];
1:     }
1: 
1:     @Override public Object getMax() {
1:       return new byte[0];
1:     }
1: 
1:     @Override public int getDecimalCount() {
1:       return 0;
1:     }
1: 
1:     @Override public DataType getDataType() {
1:       return BYTE_ARRAY;
1:     }
1: 
1:   };
1: 
1:   @Override public void updateNull(int rowId) {
1: 
1:   }
1: 
1:   @Override public void update(byte value) {
1: 
1:   }
1: 
1:   @Override public void update(short value) {
1: 
1:   }
1: 
1:   @Override public void update(int value) {
1: 
1:   }
1: 
1:   @Override public void update(long value) {
1: 
1:   }
1: 
1:   @Override public void update(double value) {
1: 
1:   }
1: 
1:   @Override public void update(BigDecimal value) {
1: 
1:   }
1: 
1:   @Override public void update(byte[] value) {
1: 
1:   }
1: 
1:   @Override public SimpleStatsResult getPageStats() {
1:     return DUMMY_STATS;
1:   }
1: }
============================================================================