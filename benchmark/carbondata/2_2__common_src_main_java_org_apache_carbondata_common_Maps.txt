1:94011c3: /*
1:94011c3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:94011c3:  * contributor license agreements.  See the NOTICE file distributed with
1:94011c3:  * this work for additional information regarding copyright ownership.
1:94011c3:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:94011c3:  * (the "License"); you may not use this file except in compliance with
1:94011c3:  * the License.  You may obtain a copy of the License at
1:94011c3:  *
1:94011c3:  *    http://www.apache.org/licenses/LICENSE-2.0
1:94011c3:  *
1:94011c3:  * Unless required by applicable law or agreed to in writing, software
1:94011c3:  * distributed under the License is distributed on an "AS IS" BASIS,
1:94011c3:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:94011c3:  * See the License for the specific language governing permissions and
1:94011c3:  * limitations under the License.
2:94011c3:  */
4:94011c3: 
1:89cfd8e: package org.apache.carbondata.common;
1:89cfd8e: 
1:89cfd8e: import java.util.Map;
1:89cfd8e: 
1:89cfd8e: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:89cfd8e: 
1:e72bfd1: @InterfaceAudience.Internal
1:89cfd8e: public class Maps {
1:89cfd8e: 
2:94011c3:   /**
1:89cfd8e:    * Return value if key is contained in the map, else return defauleValue.
1:89cfd8e:    * This is added to avoid JDK 8 dependency
1:94011c3:    */
1:89cfd8e:   public static <K, V> V getOrDefault(Map<K, V> map, K key, V defaultValue) {
1:89cfd8e:     V value = map.get(key);
1:89cfd8e:     if (value != null) {
1:89cfd8e:       return value;
1:89cfd8e:     } else {
1:89cfd8e:       return defaultValue;
1:89cfd8e:     }
1:89cfd8e:   }
2:94011c3: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:e72bfd1
/////////////////////////////////////////////////////////////////////////
1: @InterfaceAudience.Internal
commit:89cfd8e
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.common;
1: import java.util.Map;
1: 
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: 
0: @InterfaceAudience.Developer
1: public class Maps {
1:    * Return value if key is contained in the map, else return defauleValue.
1:    * This is added to avoid JDK 8 dependency
1:   public static <K, V> V getOrDefault(Map<K, V> map, K key, V defaultValue) {
1:     V value = map.get(key);
1:     if (value != null) {
1:       return value;
1:     } else {
1:       return defaultValue;
1:     }
commit:e72bfd1
/////////////////////////////////////////////////////////////////////////
0: @InterfaceAudience.Internal
commit:89cfd8e
/////////////////////////////////////////////////////////////////////////
0: package org.apache.carbondata.common;
0: import java.util.Map;
1: 
0: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: 
0: @InterfaceAudience.Developer
0: public class Maps {
0:    * Return value if key is contained in the map, else return defauleValue.
0:    * This is added to avoid JDK 8 dependency
0:   public static <K, V> V getOrDefault(Map<K, V> map, K key, V defaultValue) {
0:     V value = map.get(key);
0:     if (value != null) {
0:       return value;
0:     } else {
0:       return defaultValue;
1:     }
author:xubo245
-------------------------------------------------------------------------------
commit:94011c3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.carbondata.spark.exception;
1: 
1: /**
0:  * if the dataMap does not exist, carbon should throw NoSuchDataMapException
1:  */
0: public class NoSuchDataMapException extends MalformedCarbonCommandException {
1: 
1:   /**
0:    * default serial version ID.
1:    */
0:   private static final long serialVersionUID = 1L;
1: 
0:   public NoSuchDataMapException(String dataMapName, String tableName) {
0:     super("Datamap with name " + dataMapName + " does not exist under table " + tableName);
1:   }
1: }
commit:94011c3
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  *    http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.apache.carbondata.spark.exception;
0: 
0: /**
0:  * if the dataMap does not exist, carbon should throw NoSuchDataMapException
0:  */
0: public class NoSuchDataMapException extends MalformedCarbonCommandException {
0: 
0:   /**
0:    * default serial version ID.
0:    */
0:   private static final long serialVersionUID = 1L;
0: 
0:   public NoSuchDataMapException(String dataMapName, String tableName) {
0:     super("Datamap with name " + dataMapName + " does not exist under table " + tableName);
0:   }
0: }
============================================================================