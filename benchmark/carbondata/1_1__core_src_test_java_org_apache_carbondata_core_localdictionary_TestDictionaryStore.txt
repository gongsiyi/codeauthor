1:b0d24ea: /*
1:b0d24ea:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b0d24ea:  * contributor license agreements.  See the NOTICE file distributed with
1:b0d24ea:  * this work for additional information regarding copyright ownership.
1:b0d24ea:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b0d24ea:  * (the "License"); you may not use this file except in compliance with
1:b0d24ea:  * the License.  You may obtain a copy of the License at
1:b0d24ea:  *
1:b0d24ea:  *    http://www.apache.org/licenses/LICENSE-2.0
1:b0d24ea:  *
1:b0d24ea:  * Unless required by applicable law or agreed to in writing, software
1:b0d24ea:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b0d24ea:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b0d24ea:  * See the License for the specific language governing permissions and
1:b0d24ea:  * limitations under the License.
1:b0d24ea:  */
1:b0d24ea: package org.apache.carbondata.core.localdictionary;
1:b0d24ea: 
1:b0d24ea: import org.apache.carbondata.core.localdictionary.dictionaryholder.DictionaryStore;
1:b0d24ea: import org.apache.carbondata.core.localdictionary.dictionaryholder.MapBasedDictionaryStore;
1:b0d24ea: import org.apache.carbondata.core.localdictionary.exception.DictionaryThresholdReachedException;
1:b0d24ea: 
1:b0d24ea: import org.junit.Assert;
1:b0d24ea: import org.junit.Test;
1:b0d24ea: 
1:b0d24ea: public class TestDictionaryStore {
1:b0d24ea: 
1:b0d24ea:   @Test
1:b0d24ea:   public void testDictionaryStoreWithinThreshold() {
1:b0d24ea:     DictionaryStore dictionaryStore = new MapBasedDictionaryStore(10);
1:b0d24ea:     for (int i = 0; i < 10; i++) {
1:b0d24ea:       try {
1:b0d24ea:         dictionaryStore.putIfAbsent((i+"").getBytes());
1:b0d24ea:         Assert.assertTrue(true);
1:b0d24ea:       } catch (DictionaryThresholdReachedException e) {
1:b0d24ea:         Assert.assertTrue(false);
1:b0d24ea:         break;
1:b0d24ea:       }
1:b0d24ea:     }
1:b0d24ea:   }
1:b0d24ea: 
1:b0d24ea:   @Test
1:b0d24ea:   public void testDictionaryStoreWithMoreThanThreshold() {
1:b0d24ea:     DictionaryStore dictionaryStore = new MapBasedDictionaryStore(10);
1:b0d24ea:     boolean isException = false;
1:b0d24ea:     for (int i = 0; i < 15; i++) {
1:b0d24ea:       try {
1:b0d24ea:         dictionaryStore.putIfAbsent((i+"").getBytes());
1:b0d24ea:       } catch (DictionaryThresholdReachedException e) {
1:b0d24ea:         isException = true;
1:b0d24ea:         break;
1:b0d24ea:       }
1:b0d24ea:     }
1:b0d24ea:     Assert.assertTrue(isException);
1:b0d24ea:     Assert.assertTrue(dictionaryStore.isThresholdReached());
1:b0d24ea:   }
1:b0d24ea: }
============================================================================
author:akashrn5
-------------------------------------------------------------------------------
commit:b0d24ea
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.localdictionary;
1: 
1: import org.apache.carbondata.core.localdictionary.dictionaryholder.DictionaryStore;
1: import org.apache.carbondata.core.localdictionary.dictionaryholder.MapBasedDictionaryStore;
1: import org.apache.carbondata.core.localdictionary.exception.DictionaryThresholdReachedException;
1: 
1: import org.junit.Assert;
1: import org.junit.Test;
1: 
1: public class TestDictionaryStore {
1: 
1:   @Test
1:   public void testDictionaryStoreWithinThreshold() {
1:     DictionaryStore dictionaryStore = new MapBasedDictionaryStore(10);
1:     for (int i = 0; i < 10; i++) {
1:       try {
1:         dictionaryStore.putIfAbsent((i+"").getBytes());
1:         Assert.assertTrue(true);
1:       } catch (DictionaryThresholdReachedException e) {
1:         Assert.assertTrue(false);
1:         break;
1:       }
1:     }
1:   }
1: 
1:   @Test
1:   public void testDictionaryStoreWithMoreThanThreshold() {
1:     DictionaryStore dictionaryStore = new MapBasedDictionaryStore(10);
1:     boolean isException = false;
1:     for (int i = 0; i < 15; i++) {
1:       try {
1:         dictionaryStore.putIfAbsent((i+"").getBytes());
1:       } catch (DictionaryThresholdReachedException e) {
1:         isException = true;
1:         break;
1:       }
1:     }
1:     Assert.assertTrue(isException);
1:     Assert.assertTrue(dictionaryStore.isThresholdReached());
1:   }
1: }
============================================================================