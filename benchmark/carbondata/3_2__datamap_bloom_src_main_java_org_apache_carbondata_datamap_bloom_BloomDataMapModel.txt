1:047c502: /*
1:047c502:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:047c502:  * contributor license agreements.  See the NOTICE file distributed with
1:047c502:  * this work for additional information regarding copyright ownership.
1:047c502:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:047c502:  * (the "License"); you may not use this file except in compliance with
1:047c502:  * the License.  You may obtain a copy of the License at
1:047c502:  *
1:047c502:  *    http://www.apache.org/licenses/LICENSE-2.0
1:047c502:  *
1:047c502:  * Unless required by applicable law or agreed to in writing, software
1:047c502:  * distributed under the License is distributed on an "AS IS" BASIS,
1:047c502:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:047c502:  * See the License for the specific language governing permissions and
1:047c502:  * limitations under the License.
1:047c502:  */
1:047c502: package org.apache.carbondata.datamap.bloom;
4:047c502: 
1:047c502: import org.apache.carbondata.core.cache.Cache;
1:047c502: import org.apache.carbondata.core.datamap.dev.DataMapModel;
1:047c502: 
1:8f1a029: import org.apache.hadoop.conf.Configuration;
1:8f1a029: 
1:047c502: public class BloomDataMapModel extends DataMapModel {
1:047c502: 
1:047c502:   private Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> cache;
1:047c502: 
1:047c502:   public BloomDataMapModel(String filePath,
1:8f1a029:       Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> cache,
1:8f1a029:       Configuration configuration) {
1:8f1a029:     super(filePath, configuration);
1:047c502:     this.cache = cache;
2:047c502:   }
1:047c502: 
1:047c502:   public Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> getCache() {
1:047c502:     return cache;
1:047c502:   }
1:047c502: }
============================================================================
author:kunal642
-------------------------------------------------------------------------------
commit:8f1a029
/////////////////////////////////////////////////////////////////////////
1: import org.apache.hadoop.conf.Configuration;
1: 
1:       Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> cache,
1:       Configuration configuration) {
1:     super(filePath, configuration);
author:xuchuanyin
-------------------------------------------------------------------------------
commit:cd7c210
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:       Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> cache) {
author:ravipesala
-------------------------------------------------------------------------------
commit:047c502
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.datamap.bloom;
1: 
0: import java.util.Set;
1: 
1: import org.apache.carbondata.core.cache.Cache;
1: import org.apache.carbondata.core.datamap.dev.DataMapModel;
1: 
1: public class BloomDataMapModel extends DataMapModel {
1: 
1:   private Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> cache;
1: 
0:   private Set<String> indexedColumnNames;
1: 
1:   public BloomDataMapModel(String filePath,
0:       Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> cache,
0:       Set<String> indexedColumnNames) {
0:     super(filePath);
1:     this.cache = cache;
0:     this.indexedColumnNames = indexedColumnNames;
1:   }
1: 
1:   public Cache<BloomCacheKeyValue.CacheKey, BloomCacheKeyValue.CacheValue> getCache() {
1:     return cache;
1:   }
1: 
0:   public Set<String> getIndexedColumnNames() {
0:     return indexedColumnNames;
1:   }
1: }
============================================================================