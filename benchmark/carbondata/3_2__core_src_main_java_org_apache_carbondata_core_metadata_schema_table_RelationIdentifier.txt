1:3169918: /*
1:3169918:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3169918:  * contributor license agreements.  See the NOTICE file distributed with
1:3169918:  * this work for additional information regarding copyright ownership.
1:3169918:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3169918:  * (the "License"); you may not use this file except in compliance with
1:3169918:  * the License.  You may obtain a copy of the License at
1:3169918:  *
1:3169918:  *    http://www.apache.org/licenses/LICENSE-2.0
1:3169918:  *
1:3169918:  * Unless required by applicable law or agreed to in writing, software
1:3169918:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3169918:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3169918:  * See the License for the specific language governing permissions and
1:3169918:  * limitations under the License.
1:3169918:  */
1:3169918: package org.apache.carbondata.core.metadata.schema.table;
5:3169918: 
1:3169918: import java.io.DataInput;
1:3169918: import java.io.DataOutput;
1:3169918: import java.io.IOException;
1:3169918: import java.io.Serializable;
1:3169918: 
1:3169918: /**
1:3169918:  * class to maintain the relation between parent and child
1:3169918:  */
1:3169918: public class RelationIdentifier implements Serializable, Writable {
1:2b5faef: 
1:3169918:   private String databaseName;
1:3169918: 
1:3169918:   private String tableName;
1:3169918: 
1:3169918:   private String tableId;
1:3169918: 
1:3169918:   public RelationIdentifier(String databaseName, String tableName, String tableId) {
1:2b5faef:     this.databaseName = databaseName;
1:2b5faef:     this.tableName = tableName;
1:2b5faef:     this.tableId = tableId;
1:2b5faef:   }
1:2b5faef: 
1:3169918:   public String getDatabaseName() {
1:3169918:     return databaseName;
1:2b5faef:   }
1:2b5faef: 
1:3169918:   public String getTableName() {
1:3169918:     return tableName;
1:2b5faef:   }
1:cc0e6f1: 
1:3169918:   public String getTableId() {
1:3169918:     return tableId;
1:cc0e6f1:   }
1:3169918: 
1:3169918:   @Override public void write(DataOutput out) throws IOException {
1:3169918:     out.writeUTF(databaseName);
1:3169918:     out.writeUTF(tableName);
1:3169918:     out.writeUTF(tableId);
5:3169918:   }
1:3169918: 
1:3169918:   @Override public void readFields(DataInput in) throws IOException {
1:3169918:     this.databaseName = in.readUTF();
1:3169918:     this.tableName = in.readUTF();
1:3169918:     this.tableId = in.readUTF();
1:3169918:   }
1:3169918: 
1:3169918:   @Override public boolean equals(Object o) {
1:3169918:     if (this == o) return true;
1:3169918:     if (o == null || getClass() != o.getClass()) return false;
1:3169918: 
1:3169918:     RelationIdentifier that = (RelationIdentifier) o;
1:3169918: 
1:3169918:     if (databaseName != null ?
1:3169918:         !databaseName.equals(that.databaseName) :
1:3169918:         that.databaseName != null) {
1:3169918:       return false;
1:3169918:     }
1:3169918:     if (tableName != null ? !tableName.equals(that.tableName) : that.tableName != null) {
1:3169918:       return false;
1:3169918:     }
1:3169918:     return tableId != null ? tableId.equals(that.tableId) : that.tableId == null;
1:3169918:   }
1:3169918: 
1:3169918:   @Override public int hashCode() {
1:3169918:     int result = databaseName != null ? databaseName.hashCode() : 0;
1:3169918:     result = 31 * result + (tableName != null ? tableName.hashCode() : 0);
1:3169918:     result = 31 * result + (tableId != null ? tableId.hashCode() : 0);
1:3169918:     return result;
1:3169918:   }
1:fab102b: 
1:fab102b:   @Override public String toString() {
1:fab102b:     return databaseName + "." + tableName;
1:fab102b:   }
1:3169918: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:daa6465
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:kunal642
-------------------------------------------------------------------------------
commit:fab102b
/////////////////////////////////////////////////////////////////////////
1: 
1:   @Override public String toString() {
1:     return databaseName + "." + tableName;
1:   }
commit:2b5faef
/////////////////////////////////////////////////////////////////////////
0:   public void setDatabaseName(String databaseName) {
1:     this.databaseName = databaseName;
1:   }
1: 
0:   public void setTableName(String tableName) {
1:     this.tableName = tableName;
1:   }
1: 
0:   public void setTableId(String tableId) {
1:     this.tableId = tableId;
1:   }
1: 
commit:cc0e6f1
/////////////////////////////////////////////////////////////////////////
0:   public RelationIdentifier() {
0:     this(null, null, null);
1:   }
1: 
author:kumarvishal
-------------------------------------------------------------------------------
commit:3169918
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.metadata.schema.table;
1: 
1: import java.io.DataInput;
1: import java.io.DataOutput;
1: import java.io.IOException;
1: import java.io.Serializable;
1: 
1: /**
1:  * class to maintain the relation between parent and child
1:  */
1: public class RelationIdentifier implements Serializable, Writable {
1: 
1:   private String databaseName;
1: 
1:   private String tableName;
1: 
1:   private String tableId;
1: 
1:   public RelationIdentifier(String databaseName, String tableName, String tableId) {
0:     this.databaseName = databaseName;
0:     this.tableName = tableName;
0:     this.tableId = tableId;
1:   }
1: 
1:   public String getDatabaseName() {
1:     return databaseName;
1:   }
1: 
1:   public String getTableName() {
1:     return tableName;
1:   }
1: 
1:   public String getTableId() {
1:     return tableId;
1:   }
1: 
1:   @Override public void write(DataOutput out) throws IOException {
1:     out.writeUTF(databaseName);
1:     out.writeUTF(tableName);
1:     out.writeUTF(tableId);
1:   }
1: 
1:   @Override public void readFields(DataInput in) throws IOException {
1:     this.databaseName = in.readUTF();
1:     this.tableName = in.readUTF();
1:     this.tableId = in.readUTF();
1:   }
1: 
1:   @Override public boolean equals(Object o) {
1:     if (this == o) return true;
1:     if (o == null || getClass() != o.getClass()) return false;
1: 
1:     RelationIdentifier that = (RelationIdentifier) o;
1: 
1:     if (databaseName != null ?
1:         !databaseName.equals(that.databaseName) :
1:         that.databaseName != null) {
1:       return false;
1:     }
1:     if (tableName != null ? !tableName.equals(that.tableName) : that.tableName != null) {
1:       return false;
1:     }
1:     return tableId != null ? tableId.equals(that.tableId) : that.tableId == null;
1:   }
1: 
1:   @Override public int hashCode() {
1:     int result = databaseName != null ? databaseName.hashCode() : 0;
1:     result = 31 * result + (tableName != null ? tableName.hashCode() : 0);
1:     result = 31 * result + (tableId != null ? tableId.hashCode() : 0);
1:     return result;
1:   }
1: }
============================================================================