1:266c473: /*
1:266c473:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:266c473:  * contributor license agreements.  See the NOTICE file distributed with
1:266c473:  * this work for additional information regarding copyright ownership.
1:266c473:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:266c473:  * (the "License"); you may not use this file except in compliance with
1:266c473:  * the License.  You may obtain a copy of the License at
1:266c473:  *
1:266c473:  *    http://www.apache.org/licenses/LICENSE-2.0
1:266c473:  *
1:266c473:  * Unless required by applicable law or agreed to in writing, software
1:266c473:  * distributed under the License is distributed on an "AS IS" BASIS,
1:266c473:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:266c473:  * See the License for the specific language governing permissions and
1:266c473:  * limitations under the License.
1:266c473:  */
1:266c473: 
1:266c473: package org.apache.carbondata.core.scan.filter.resolver.resolverinfo;
1:266c473: 
1:dc29319: import org.apache.carbondata.core.metadata.schema.table.column.CarbonDimension;
1:dc29319: import org.apache.carbondata.core.metadata.schema.table.column.CarbonMeasure;
1:266c473: 
1:dc29319: public abstract class ColumnResolvedFilterInfo {
1:dc29319: 
1:dc29319:   /**
1:dc29319:    * in case column min/max cache is configured then this index will map the filter column to
1:dc29319:    * its index in min/max byte array. For example
1:dc29319:    * Total columns = 10
1:dc29319:    * Columns to Be cached = 3
1:dc29319:    * Column ordinals to be cached = 1,5,7
1:dc29319:    * then when checking for isScanRequired column if we consider the above ordinal 5 and 7 then
1:dc29319:    * ArrayIndexOutOfBoundException will be thrown although the min/max value for the ordinal 5
1:dc29319:    * is present at array index 1 and for ordinal 7 at array index 2. To avoid these scenario this
1:dc29319:    * index is maintained
1:dc29319:    */
1:dc29319:   protected int columnIndexInMinMaxByteArray = -1;
1:dc29319:   /**
1:dc29319:    * column index in file
1:dc29319:    */
1:dc29319:   protected int columnIndex = -1;
1:dc29319: 
1:dc29319:   public void setColumnIndexInMinMaxByteArray(int columnIndexInMinMaxByteArray) {
1:dc29319:     this.columnIndexInMinMaxByteArray = columnIndexInMinMaxByteArray;
1:dc29319:   }
1:dc29319: 
1:dc29319:   public int getColumnIndexInMinMaxByteArray() {
1:dc29319:     // -1 means
1:dc29319:     // 1. On driver side either the filter dimension does not exist in the cached min/max columns
1:dc29319:     // or columns min/max to be cached are not specified
1:dc29319:     // 2. For RowFilterExecutorImpl and ExcludeFilterExecutorImpl this value will be -1
1:dc29319:     if (columnIndexInMinMaxByteArray == -1) {
1:dc29319:       return columnIndex;
1:dc29319:     }
1:dc29319:     return columnIndexInMinMaxByteArray;
1:dc29319:   }
1:dc29319: 
1:dc29319:   public abstract CarbonMeasure getMeasure();
1:dc29319: 
1:dc29319:   public abstract CarbonDimension getDimension();
1:266c473: }
============================================================================
author:manishgupta88
-------------------------------------------------------------------------------
commit:dc29319
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.schema.table.column.CarbonDimension;
1: import org.apache.carbondata.core.metadata.schema.table.column.CarbonMeasure;
1: public abstract class ColumnResolvedFilterInfo {
1: 
1:   /**
1:    * in case column min/max cache is configured then this index will map the filter column to
1:    * its index in min/max byte array. For example
1:    * Total columns = 10
1:    * Columns to Be cached = 3
1:    * Column ordinals to be cached = 1,5,7
1:    * then when checking for isScanRequired column if we consider the above ordinal 5 and 7 then
1:    * ArrayIndexOutOfBoundException will be thrown although the min/max value for the ordinal 5
1:    * is present at array index 1 and for ordinal 7 at array index 2. To avoid these scenario this
1:    * index is maintained
1:    */
1:   protected int columnIndexInMinMaxByteArray = -1;
1:   /**
1:    * column index in file
1:    */
1:   protected int columnIndex = -1;
1: 
1:   public void setColumnIndexInMinMaxByteArray(int columnIndexInMinMaxByteArray) {
1:     this.columnIndexInMinMaxByteArray = columnIndexInMinMaxByteArray;
1:   }
1: 
1:   public int getColumnIndexInMinMaxByteArray() {
1:     // -1 means
1:     // 1. On driver side either the filter dimension does not exist in the cached min/max columns
1:     // or columns min/max to be cached are not specified
1:     // 2. For RowFilterExecutorImpl and ExcludeFilterExecutorImpl this value will be -1
1:     if (columnIndexInMinMaxByteArray == -1) {
1:       return columnIndex;
1:     }
1:     return columnIndexInMinMaxByteArray;
1:   }
1: 
1:   public abstract CarbonMeasure getMeasure();
1: 
1:   public abstract CarbonDimension getDimension();
author:sounakr
-------------------------------------------------------------------------------
commit:266c473
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.scan.filter.resolver.resolverinfo;
1: 
1: 
0: public class ColumnResolvedFilterInfo {
1: }
============================================================================