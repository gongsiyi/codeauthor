1:3f23733: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:3f23733:  *
1:3f23733:  *    http://www.apache.org/licenses/LICENSE-2.0
1:3f23733:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:3f23733:  */
1:3f23733: package org.apache.carbondata.core.carbon;
1:3f23733: 
1:ce09aaa: import org.apache.carbondata.core.metadata.CarbonTableIdentifier;
1:ce09aaa: 
1:29be1d0: import org.junit.Assert;
1:3f23733: import org.junit.BeforeClass;
1:3f23733: import org.junit.Test;
1:3f23733: 
1:3f23733: public class CarbonTableIdentifierTest {
1:3f23733: 
1:3f23733:   static CarbonTableIdentifier carbonTableIdentifier;
1:3f23733:   static CarbonTableIdentifier carbonTableIdentifier2;
1:3f23733: 
1:3f23733:   @BeforeClass public static void setup() {
1:3f23733:     carbonTableIdentifier = new CarbonTableIdentifier("DatabseName", "tableName", "tableId");
1:3f23733: 
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithSameObject() {
1:3f23733:     Boolean res = carbonTableIdentifier.equals(carbonTableIdentifier);
1:29be1d0:     Assert.assertTrue(res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithSimilarObject() {
1:3f23733:     CarbonTableIdentifier carbonTableIdentifierTest =
1:3f23733:         new CarbonTableIdentifier("DatabseName", "tableName", "tableId");
1:3f23733:     Boolean res = carbonTableIdentifier.equals(carbonTableIdentifierTest);
1:29be1d0:     Assert.assertTrue(res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithNullrObject() {
1:3f23733:     Boolean res = carbonTableIdentifier.equals(carbonTableIdentifier2);
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithStringrObject() {
1:3f23733:     Boolean res = carbonTableIdentifier.equals("different class object");
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithoutDatabaseName() {
1:3f23733:     CarbonTableIdentifier carbonTableIdentifierTest =
1:3f23733:         new CarbonTableIdentifier(null, "tableName", "tableId");
1:3f23733:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithoutTableId() {
1:3f23733:     CarbonTableIdentifier carbonTableIdentifierTest =
1:3f23733:         new CarbonTableIdentifier("DatabseName", "tableName", null);
1:3f23733:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithDifferentTableId() {
1:3f23733:     CarbonTableIdentifier carbonTableIdentifierTest =
1:3f23733:         new CarbonTableIdentifier("DatabseName", "tableName", "diffTableId");
1:3f23733:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithNullTableName() {
1:3f23733:     CarbonTableIdentifier carbonTableIdentifierTest =
1:3f23733:         new CarbonTableIdentifier("DatabseName", null, "tableId");
1:3f23733:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void equalsTestWithDifferentTableName() {
1:3f23733:     CarbonTableIdentifier carbonTableIdentifierTest =
1:3f23733:         new CarbonTableIdentifier("DatabseName", "diffTableName", "tableId");
1:3f23733:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
1:29be1d0:     Assert.assertTrue(!res);
1:3f23733:   }
1:3f23733: 
1:3f23733:   @Test public void toStringTest() {
1:3f23733:     String res = carbonTableIdentifier.toString();
1:3f23733:     System.out.printf("sfdsdf " + res);
1:29be1d0:     Assert.assertTrue(res.equals("DatabseName_tableName"));
1:3f23733:   }
1:3f23733: }
============================================================================
author:xuchuanyin
-------------------------------------------------------------------------------
commit:29be1d0
/////////////////////////////////////////////////////////////////////////
1: import org.junit.Assert;
/////////////////////////////////////////////////////////////////////////
1:     Assert.assertTrue(res);
1:     Assert.assertTrue(res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(!res);
1:     Assert.assertTrue(res.equals("DatabseName_tableName"));
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:jackylk
-------------------------------------------------------------------------------
commit:ce09aaa
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.CarbonTableIdentifier;
1: 
author:rahulforallp
-------------------------------------------------------------------------------
commit:3f23733
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.core.carbon;
1: 
1: import org.junit.BeforeClass;
1: import org.junit.Test;
1: 
1: public class CarbonTableIdentifierTest {
1: 
1:   static CarbonTableIdentifier carbonTableIdentifier;
1:   static CarbonTableIdentifier carbonTableIdentifier2;
1: 
1:   @BeforeClass public static void setup() {
1:     carbonTableIdentifier = new CarbonTableIdentifier("DatabseName", "tableName", "tableId");
1: 
1:   }
1: 
1:   @Test public void equalsTestWithSameObject() {
1:     Boolean res = carbonTableIdentifier.equals(carbonTableIdentifier);
0:     assert (res);
1:   }
1: 
1:   @Test public void equalsTestWithSimilarObject() {
1:     CarbonTableIdentifier carbonTableIdentifierTest =
1:         new CarbonTableIdentifier("DatabseName", "tableName", "tableId");
1:     Boolean res = carbonTableIdentifier.equals(carbonTableIdentifierTest);
0:     assert (res);
1:   }
1: 
1:   @Test public void equalsTestWithNullrObject() {
1:     Boolean res = carbonTableIdentifier.equals(carbonTableIdentifier2);
0:     assert (!res);
1:   }
1: 
1:   @Test public void equalsTestWithStringrObject() {
1:     Boolean res = carbonTableIdentifier.equals("different class object");
0:     assert (!res);
1:   }
1: 
1:   @Test public void equalsTestWithoutDatabaseName() {
1:     CarbonTableIdentifier carbonTableIdentifierTest =
1:         new CarbonTableIdentifier(null, "tableName", "tableId");
1:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
0:     assert (!res);
1:   }
1: 
1:   @Test public void equalsTestWithoutTableId() {
1:     CarbonTableIdentifier carbonTableIdentifierTest =
1:         new CarbonTableIdentifier("DatabseName", "tableName", null);
1:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
0:     assert (!res);
1:   }
1: 
1:   @Test public void equalsTestWithDifferentTableId() {
1:     CarbonTableIdentifier carbonTableIdentifierTest =
1:         new CarbonTableIdentifier("DatabseName", "tableName", "diffTableId");
1:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
0:     assert (!res);
1:   }
1: 
1:   @Test public void equalsTestWithNullTableName() {
1:     CarbonTableIdentifier carbonTableIdentifierTest =
1:         new CarbonTableIdentifier("DatabseName", null, "tableId");
1:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
0:     assert (!res);
1:   }
1: 
1:   @Test public void equalsTestWithDifferentTableName() {
1:     CarbonTableIdentifier carbonTableIdentifierTest =
1:         new CarbonTableIdentifier("DatabseName", "diffTableName", "tableId");
1:     Boolean res = carbonTableIdentifierTest.equals(carbonTableIdentifier);
0:     assert (!res);
1:   }
1: 
1:   @Test public void toStringTest() {
1:     String res = carbonTableIdentifier.toString();
1:     System.out.printf("sfdsdf " + res);
0:     assert (res.equals("DatabseName_tableName"));
1:   }
1: }
============================================================================