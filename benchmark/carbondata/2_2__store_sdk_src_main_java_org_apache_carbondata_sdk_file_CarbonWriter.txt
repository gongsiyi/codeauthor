1:1d827c7: /*
1:1d827c7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1d827c7:  * contributor license agreements.  See the NOTICE file distributed with
1:1d827c7:  * this work for additional information regarding copyright ownership.
1:1d827c7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1d827c7:  * (the "License"); you may not use this file except in compliance with
1:1d827c7:  * the License.  You may obtain a copy of the License at
1:1d827c7:  *
1:1d827c7:  *    http://www.apache.org/licenses/LICENSE-2.0
1:1d827c7:  *
1:1d827c7:  * Unless required by applicable law or agreed to in writing, software
1:1d827c7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1d827c7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1d827c7:  * See the License for the specific language governing permissions and
1:1d827c7:  * limitations under the License.
1:1d827c7:  */
1:1d827c7: 
1:1d827c7: package org.apache.carbondata.sdk.file;
1:1d827c7: 
1:1d827c7: import java.io.IOException;
1:1d827c7: 
1:1d827c7: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:1d827c7: import org.apache.carbondata.common.annotations.InterfaceStability;
1:1d827c7: 
1:1d827c7: /**
1:1d827c7:  * Writer to write row data to carbondata file. Call {@link #builder()} to get
1:1d827c7:  * a build to create instance of writer.
1:1d827c7:  */
1:1d827c7: @InterfaceAudience.User
1:1d827c7: @InterfaceStability.Unstable
1:1d827c7: public abstract class CarbonWriter {
1:1d827c7: 
1:1d827c7:   /**
1:1d827c7:    * Write an object to the file, the format of the object depends on the
1:fe436c3:    * implementation.
1:fe436c3:    * Note: This API is not thread safe
1:1d827c7:    */
1:1d827c7:   public abstract void write(Object object) throws IOException;
1:1d827c7: 
1:1d827c7:   /**
1:1d827c7:    * Flush and close the writer
1:1d827c7:    */
1:1d827c7:   public abstract void close() throws IOException;
1:1d827c7: 
1:1d827c7:   /**
1:1d827c7:    * Create a {@link CarbonWriterBuilder} to build a {@link CarbonWriter}
1:1d827c7:    */
1:1d827c7:   public static CarbonWriterBuilder builder() {
1:1d827c7:     return new CarbonWriterBuilder();
1:1d827c7:   }
1:1d827c7: 
1:1d827c7: }
============================================================================
author:manishgupta88
-------------------------------------------------------------------------------
commit:fe436c3
/////////////////////////////////////////////////////////////////////////
1:    * implementation.
1:    * Note: This API is not thread safe
author:Jacky Li
-------------------------------------------------------------------------------
commit:1d827c7
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.sdk.file;
1: 
1: import java.io.IOException;
1: 
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: import org.apache.carbondata.common.annotations.InterfaceStability;
1: 
1: /**
1:  * Writer to write row data to carbondata file. Call {@link #builder()} to get
1:  * a build to create instance of writer.
1:  */
1: @InterfaceAudience.User
1: @InterfaceStability.Unstable
1: public abstract class CarbonWriter {
1: 
1:   /**
1:    * Write an object to the file, the format of the object depends on the
0:    * implementation
1:    */
1:   public abstract void write(Object object) throws IOException;
1: 
1:   /**
1:    * Flush and close the writer
1:    */
1:   public abstract void close() throws IOException;
1: 
1:   /**
1:    * Create a {@link CarbonWriterBuilder} to build a {@link CarbonWriter}
1:    */
1:   public static CarbonWriterBuilder builder() {
1:     return new CarbonWriterBuilder();
1:   }
1: 
1: }
============================================================================