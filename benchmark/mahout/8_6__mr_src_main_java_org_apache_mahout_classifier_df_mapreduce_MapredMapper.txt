2:a8f9f88: /**
1:a8f9f88:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a8f9f88:  * contributor license agreements.  See the NOTICE file distributed with
1:a8f9f88:  * this work for additional information regarding copyright ownership.
1:a8f9f88:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a8f9f88:  * (the "License"); you may not use this file except in compliance with
1:a8f9f88:  * the License.  You may obtain a copy of the License at
3:a8f9f88:  *
1:a8f9f88:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a8f9f88:  *
1:a8f9f88:  * Unless required by applicable law or agreed to in writing, software
1:a8f9f88:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a8f9f88:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a8f9f88:  * See the License for the specific language governing permissions and
1:a8f9f88:  * limitations under the License.
2:a8f9f88:  */
7:a8f9f88: 
1:52ce412: package org.apache.mahout.classifier.df.mapreduce;
1:a8f9f88: 
1:d6aba1a: import com.google.common.base.Preconditions;
1:a8f9f88: import org.apache.hadoop.conf.Configuration;
1:a8f9f88: import org.apache.hadoop.mapreduce.Mapper;
1:52ce412: import org.apache.mahout.classifier.df.builder.TreeBuilder;
1:52ce412: import org.apache.mahout.classifier.df.data.Dataset;
1:a8f9f88: 
1:d6aba1a: import java.io.IOException;
1:a8f9f88: 
1:a8f9f88: /**
1:a8f9f88:  * Base class for Mapred mappers. Loads common parameters from the job
1:a8f9f88:  */
1:1ffa3a4: @Deprecated
1:ad11134: public class MapredMapper<KEYIN,VALUEIN,KEYOUT,VALUEOUT> extends Mapper<KEYIN,VALUEIN,KEYOUT,VALUEOUT> {
1:a8f9f88:   
1:a8f9f88:   private boolean noOutput;
1:a8f9f88:   
1:a8f9f88:   private TreeBuilder treeBuilder;
1:a8f9f88:   
1:a8f9f88:   private Dataset dataset;
1:a8f9f88:   
1:a8f9f88:   /**
1:a8f9f88:    * 
1:210b265:    * @return whether the mapper does estimate and output predictions
1:a8f9f88:    */
1:210b265:   protected boolean isOutput() {
1:210b265:     return !noOutput;
4:a8f9f88:   }
1:a8f9f88:   
1:a8f9f88:   protected TreeBuilder getTreeBuilder() {
1:a8f9f88:     return treeBuilder;
1:a8f9f88:   }
1:a8f9f88:   
1:a8f9f88:   protected Dataset getDataset() {
1:a8f9f88:     return dataset;
1:a8f9f88:   }
1:a8f9f88:   
1:a8f9f88:   @Override
1:a8f9f88:   protected void setup(Context context) throws IOException, InterruptedException {
1:a8f9f88:     super.setup(context);
1:a8f9f88:     
1:a8f9f88:     Configuration conf = context.getConfiguration();
1:a8f9f88:     
1:ac83cf3:     configure(!Builder.isOutput(conf), Builder.getTreeBuilder(conf), Builder
1:ad11134:         .loadDataset(conf));
1:a8f9f88:   }
1:a8f9f88:   
1:a8f9f88:   /**
1:a8f9f88:    * Useful for testing
1:a8f9f88:    */
1:ac83cf3:   protected void configure(boolean noOutput, TreeBuilder treeBuilder, Dataset dataset) {
1:69ba194:     Preconditions.checkArgument(treeBuilder != null, "TreeBuilder not found in the Job parameters");
1:a8f9f88:     this.noOutput = noOutput;
1:a8f9f88:     this.treeBuilder = treeBuilder;
1:a8f9f88:     this.dataset = dataset;
1:a8f9f88:   }
1:a8f9f88: }
============================================================================
author:smarthi
-------------------------------------------------------------------------------
commit:1ffa3a4
/////////////////////////////////////////////////////////////////////////
1: @Deprecated
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:210b265
/////////////////////////////////////////////////////////////////////////
1:    * @return whether the mapper does estimate and output predictions
1:   protected boolean isOutput() {
1:     return !noOutput;
author:Abdel Hakim Deneche
-------------------------------------------------------------------------------
commit:d6aba1a
/////////////////////////////////////////////////////////////////////////
1: import com.google.common.base.Preconditions;
1: import java.io.IOException;
commit:ac83cf3
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     configure(!Builder.isOutput(conf), Builder.getTreeBuilder(conf), Builder
1:   protected void configure(boolean noOutput, TreeBuilder treeBuilder, Dataset dataset) {
commit:a8f9f88
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.mahout.df.mapreduce;
1: 
0: import java.io.IOException;
1: 
1: import org.apache.hadoop.conf.Configuration;
1: import org.apache.hadoop.mapreduce.Mapper;
0: import org.apache.mahout.df.builder.TreeBuilder;
0: import org.apache.mahout.df.data.Dataset;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
1: 
1: /**
1:  * Base class for Mapred mappers. Loads common parameters from the job
1:  */
0: public class MapredMapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT> extends
0:     Mapper<KEYIN, VALUEIN, KEYOUT, VALUEOUT> {
1: 
0:   protected final static Logger log = LoggerFactory.getLogger(MapredMapper.class);
1: 
1:   private boolean noOutput;
1: 
0:   private boolean oobEstimate;
1: 
1:   private TreeBuilder treeBuilder;
1: 
1:   private Dataset dataset;
1: 
1:   /**
1:    * 
0:    * @return if false, the mapper does not output
1:    */
0:   protected boolean isOobEstimate() {
0:     return oobEstimate;
1:   }
1: 
1:   /**
1:    * 
0:    * @return if false, the mapper does not estimate and output predictions
1:    */
0:   protected boolean isNoOutput() {
0:     return noOutput;
1:   }
1: 
1:   protected TreeBuilder getTreeBuilder() {
1:     return treeBuilder;
1:   }
1: 
1:   protected Dataset getDataset() {
1:     return dataset;
1:   }
1: 
1:   
1:   @Override
1:   protected void setup(Context context) throws IOException, InterruptedException {
1:     super.setup(context);
1:     
1:     Configuration conf = context.getConfiguration();
1:     
0:     try {
0:       configure(!Builder.isOutput(conf), Builder.isOobEstimate(conf), Builder
0:           .getTreeBuilder(conf), Builder.loadDataset(conf));
0:     } catch (IOException e) {
0:       throw new RuntimeException(
0:           "Exception caught while configuring the mapper: " + e.getMessage());
1:     }
1:   }
1: 
1:   /**
1:    * Useful for testing
1:    * 
0:    * @param noOutput
0:    * @param oobEstimate
0:    * @param treeBuilder
0:    * @param dataset
1:    */
0:   protected void configure(boolean noOutput, boolean oobEstimate,
0:       TreeBuilder treeBuilder, Dataset dataset) {
1:     this.noOutput = noOutput;
0:     this.oobEstimate = oobEstimate;
1: 
0:     if (treeBuilder == null) {
0:       throw new RuntimeException("TreeBuilder not found in the Job parameters");
1:     }
1:     this.treeBuilder = treeBuilder;
1: 
1:     this.dataset = dataset;
1:   }
1: }
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:52ce412
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.classifier.df.mapreduce;
1: import org.apache.mahout.classifier.df.builder.TreeBuilder;
1: import org.apache.mahout.classifier.df.data.Dataset;
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:69ba194
/////////////////////////////////////////////////////////////////////////
0: import com.google.common.base.Preconditions;
0: 
/////////////////////////////////////////////////////////////////////////
1:     Preconditions.checkArgument(treeBuilder != null, "TreeBuilder not found in the Job parameters");
commit:2f0cdab
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:acafdc0
/////////////////////////////////////////////////////////////////////////
0:   private static final Logger log = LoggerFactory.getLogger(MapredMapper.class);
/////////////////////////////////////////////////////////////////////////
0:     configure(!Builder.isOutput(conf), Builder.isOobEstimate(conf), Builder
/////////////////////////////////////////////////////////////////////////
0:       throw new IllegalArgumentException("TreeBuilder not found in the Job parameters");
commit:8547de7
/////////////////////////////////////////////////////////////////////////
0:   protected static final Logger log = LoggerFactory.getLogger(MapredMapper.class);
author:Robin Anil
-------------------------------------------------------------------------------
commit:ad11134
/////////////////////////////////////////////////////////////////////////
1: public class MapredMapper<KEYIN,VALUEIN,KEYOUT,VALUEOUT> extends Mapper<KEYIN,VALUEIN,KEYOUT,VALUEOUT> {
0:   
0:   
0:   
0:   
0:   
/////////////////////////////////////////////////////////////////////////
0:   
/////////////////////////////////////////////////////////////////////////
0:   
0:   
/////////////////////////////////////////////////////////////////////////
0:     configure(!Builder.isOutput(conf), Builder.isOobEstimate(conf), Builder.getTreeBuilder(conf), Builder
1:         .loadDataset(conf));
0:   
/////////////////////////////////////////////////////////////////////////
0:   protected void configure(boolean noOutput, boolean oobEstimate, TreeBuilder treeBuilder, Dataset dataset) {
0:     
0:     
============================================================================