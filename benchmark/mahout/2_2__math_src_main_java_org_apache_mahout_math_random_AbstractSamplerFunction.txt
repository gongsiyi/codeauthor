1:a07bfc3: /*
1:a07bfc3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a07bfc3:  * contributor license agreements.  See the NOTICE file distributed with
1:a07bfc3:  * this work for additional information regarding copyright ownership.
1:a07bfc3:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a07bfc3:  * (the "License"); you may not use this file except in compliance with
1:a07bfc3:  * the License.  You may obtain a copy of the License at
1:a07bfc3:  *
1:a07bfc3:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a07bfc3:  *
1:a07bfc3:  * Unless required by applicable law or agreed to in writing, software
1:a07bfc3:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a07bfc3:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a07bfc3:  * See the License for the specific language governing permissions and
1:a07bfc3:  * limitations under the License.
1:a07bfc3:  */
1:a07bfc3: 
1:a07bfc3: package org.apache.mahout.math.random;
1:a07bfc3: 
1:a07bfc3: import org.apache.mahout.math.function.DoubleFunction;
1:a07bfc3: 
1:a07bfc3: /**
1:a07bfc3:  * This shim allows samplers to be used to initialize vectors.
1:a07bfc3:  */
1:f95d551: public abstract class AbstractSamplerFunction extends DoubleFunction implements Sampler<Double> {
1:a07bfc3:   /**
1:a07bfc3:    * Apply the function to the argument and return the result
1:a07bfc3:    *
1:a07bfc3:    * @param ignored Ignored argument
1:a07bfc3:    * @return A sample from this distribution.
1:a07bfc3:    */
1:a07bfc3:   @Override
1:a07bfc3:   public double apply(double ignored) {
1:a07bfc3:     return sample();
1:a07bfc3:   }
1:a07bfc3: 
1:a07bfc3:   @Override
1:a07bfc3:   public abstract Double sample();
1:a07bfc3: }
============================================================================
author:dfilimon
-------------------------------------------------------------------------------
commit:f95d551
/////////////////////////////////////////////////////////////////////////
1: public abstract class AbstractSamplerFunction extends DoubleFunction implements Sampler<Double> {
author:Ted Dunning
-------------------------------------------------------------------------------
commit:a07bfc3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.math.random;
1: 
1: import org.apache.mahout.math.function.DoubleFunction;
1: 
1: /**
1:  * This shim allows samplers to be used to initialize vectors.
1:  */
0: public abstract class AbstractSamplerFunction implements Sampler<Double>, DoubleFunction {
1:   /**
1:    * Apply the function to the argument and return the result
1:    *
1:    * @param ignored Ignored argument
1:    * @return A sample from this distribution.
1:    */
1:   @Override
1:   public double apply(double ignored) {
1:     return sample();
1:   }
1: 
1:   @Override
1:   public abstract Double sample();
1: }
============================================================================