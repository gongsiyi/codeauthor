1:b4c5400: /*
1:b4c5400:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b4c5400:  * contributor license agreements.  See the NOTICE file distributed with
1:b4c5400:  * this work for additional information regarding copyright ownership.
1:b4c5400:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b4c5400:  * (the "License"); you may not use this file except in compliance with
1:b4c5400:  * the License.  You may obtain a copy of the License at
1:b4c5400:  *
1:b4c5400:  *     http://www.apache.org/licenses/LICENSE-2.0
1:b4c5400:  *
1:b4c5400:  * Unless required by applicable law or agreed to in writing, software
1:b4c5400:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b4c5400:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b4c5400:  * See the License for the specific language governing permissions and
1:b4c5400:  * limitations under the License.
1:b4c5400:  */
1:b4c5400: 
1:b4c5400: package org.apache.mahout.classifier.sgd;
1:b4c5400: 
1:b4c5400: import org.apache.mahout.common.RandomUtils;
1:b4c5400: import org.apache.mahout.math.Vector;
1:b4c5400: import org.junit.Test;
1:b4c5400: 
1:b4c5400: import java.io.IOException;
1:b4c5400: import java.util.Random;
1:b4c5400: 
1:b4c5400: public final class GradientMachineTest extends OnlineBaseTest {
1:b4c5400: 
1:b4c5400:   @Test
1:b4c5400:   public void testGradientmachine() throws IOException {
1:b4c5400:     Vector target = readStandardData();
1:2deba36:     GradientMachine grad = new GradientMachine(8,4,2).learningRate(0.1).regularization(0.01);
1:b4c5400:     Random gen = RandomUtils.getRandom();
1:b4c5400:     grad.initWeights(gen);
1:b4c5400:     train(getInput(), target, grad);
1:2deba36:     // TODO not sure why the RNG change made this fail. Value is 0.5-1.0 no matter what seed is chosen?
1:2deba36:     test(getInput(), target, grad, 1.0, 1);
1:2deba36:     //test(getInput(), target, grad, 0.05, 1);
1:b4c5400:   }
1:b4c5400: 
1:b4c5400: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:2deba36
/////////////////////////////////////////////////////////////////////////
1:     GradientMachine grad = new GradientMachine(8,4,2).learningRate(0.1).regularization(0.01);
1:     // TODO not sure why the RNG change made this fail. Value is 0.5-1.0 no matter what seed is chosen?
1:     test(getInput(), target, grad, 1.0, 1);
1:     //test(getInput(), target, grad, 0.05, 1);
commit:b4c5400
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.classifier.sgd;
1: 
1: import org.apache.mahout.common.RandomUtils;
1: import org.apache.mahout.math.Vector;
1: import org.junit.Test;
1: 
1: import java.io.IOException;
1: import java.util.Random;
1: 
1: public final class GradientMachineTest extends OnlineBaseTest {
1: 
1:   @Test
1:   public void testGradientmachine() throws IOException {
1:     Vector target = readStandardData();
0:     GradientMachine grad = new GradientMachine(8, 4, 2).learningRate(0.1).regularization(0.01);
0:     RandomUtils.useTestSeed();
1:     Random gen = RandomUtils.getRandom();
1:     grad.initWeights(gen);
1:     train(getInput(), target, grad);
0:     test(getInput(), target, grad, 0.05, 1);
1:   }
1: 
1: }
============================================================================