1:96117d3: /*
1:96117d3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f55276b:  * contributor license agreements.  See the NOTICE file distributed with
1:f55276b:  * this work for additional information regarding copyright ownership.
1:f55276b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f55276b:  * (the "License"); you may not use this file except in compliance with
1:f55276b:  * the License.  You may obtain a copy of the License at
1:075ea19:  *
1:f55276b:  *     http://www.apache.org/licenses/LICENSE-2.0
2:f55276b:  *
1:f55276b:  * Unless required by applicable law or agreed to in writing, software
1:f55276b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f55276b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f55276b:  * See the License for the specific language governing permissions and
1:f55276b:  * limitations under the License.
1:f55276b:  */
2:075ea19: 
1:075ea19: package org.apache.mahout.utils.vectors.io;
1:075ea19: 
1:075ea19: import java.io.IOException;
1:075ea19: import java.io.Writer;
1:075ea19: import java.util.Iterator;
1:075ea19: 
1:d608a88: import com.google.common.io.Closeables;
1:075ea19: import org.apache.mahout.utils.vectors.TermEntry;
1:075ea19: import org.apache.mahout.utils.vectors.TermInfo;
1:075ea19: 
1:075ea19: /**
1:4641c87:  * Write {@link TermInfo} to a {@link Writer} in a textual, delimited format with header.
1:758cc1b:  */
1:4641c87: public class DelimitedTermInfoWriter implements TermInfoWriter {
1:075ea19:   
1:758cc1b:   private final Writer writer;
1:758cc1b:   private final String delimiter;
1:758cc1b:   private final String field;
1:075ea19:   
1:4641c87:   public DelimitedTermInfoWriter(Writer writer, String delimiter, String field) {
1:075ea19:     this.writer = writer;
1:075ea19:     this.delimiter = delimiter;
1:075ea19:     this.field = field;
1:075ea19:   }
1:075ea19:   
1:075ea19:   @Override
1:075ea19:   public void write(TermInfo ti) throws IOException {
1:075ea19:     
1:075ea19:     Iterator<TermEntry> entIter = ti.getAllEntries();
1:d608a88:     try {
1:075ea19:       writer.write(String.valueOf(ti.totalTerms(field)));
1:4641c87:       writer.write('\n');
1:075ea19:       writer.write("#term" + delimiter + "doc freq" + delimiter + "idx");
1:4641c87:       writer.write('\n');
1:075ea19:       while (entIter.hasNext()) {
1:075ea19:         TermEntry entry = entIter.next();
1:d61a0ee:         writer.write(entry.getTerm());
1:075ea19:         writer.write(delimiter);
1:d61a0ee:         writer.write(String.valueOf(entry.getDocFreq()));
1:075ea19:         writer.write(delimiter);
1:d61a0ee:         writer.write(String.valueOf(entry.getTermIdx()));
1:4641c87:         writer.write('\n');
1:075ea19:       }
1:d608a88:     } finally {
1:87d4b2e:       Closeables.close(writer, false);
1:075ea19:     }
1:075ea19:   }
1:075ea19:   
1:075ea19:   /**
1:075ea19:    * Does NOT close the underlying writer
1:075ea19:    */
1:f55276b:   @Override
1:254af09:   public void close() {
1:075ea19: 
1:075ea19:   }
1:d608a88: }
============================================================================
author:dfilimon
-------------------------------------------------------------------------------
commit:87d4b2e
/////////////////////////////////////////////////////////////////////////
1:       Closeables.close(writer, false);
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:31cb292
/////////////////////////////////////////////////////////////////////////
0:       Closeables.close(writer, true);
commit:075ea19
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.utils.vectors.io;
1: 
1: import org.apache.mahout.utils.vectors.TermEntry;
1: import org.apache.mahout.utils.vectors.TermInfo;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
1: 
1: import java.io.IOException;
1: import java.io.Writer;
1: import java.util.Iterator;
1: 
1: 
1: /**
0:  * Write ther TermInfo out to a {@link java.io.Writer}
1:  *
0:  **/
0: public class JWriterTermInfoWriter implements TermInfoWriter {
0:   private transient static Logger log = LoggerFactory.getLogger(JWriterTermInfoWriter.class);
1: 
0:   protected Writer writer;
0:   protected String delimiter;
0:   protected String field;
1: 
0:   public JWriterTermInfoWriter(Writer writer, String delimiter, String field) {
1:     this.writer = writer;
1:     this.delimiter = delimiter;
1:     this.field = field;
1:   }
1: 
1:   @Override
1:   public void write(TermInfo ti) throws IOException {
1: 
1:     Iterator<TermEntry> entIter = ti.getAllEntries();
1: 
1:     writer.write(String.valueOf(ti.totalTerms(field)));
0:     writer.write("\n");
1:     writer.write("#term" + delimiter + "doc freq" + delimiter + "idx");
0:     writer.write("\n");
1:     while (entIter.hasNext()) {
1:       TermEntry entry = entIter.next();
0:       writer.write(entry.term);
1:       writer.write(delimiter);
0:       writer.write(String.valueOf(entry.docFreq));
1:       writer.write(delimiter);
0:       writer.write(String.valueOf(entry.termIdx));
0:       writer.write("\n");
1:     }
0:     writer.flush();
0:     writer.close();
1:   }
1: 
1:   /**
1:    * Does NOT close the underlying writer
0:    * @throws IOException
1:    */
0:   public void close() throws IOException {
1: 
1:   }
1: }
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:96117d3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
commit:50fd693
commit:4641c87
/////////////////////////////////////////////////////////////////////////
1:  * Write {@link TermInfo} to a {@link Writer} in a textual, delimited format with header.
1: public class DelimitedTermInfoWriter implements TermInfoWriter {
1:   public DelimitedTermInfoWriter(Writer writer, String delimiter, String field) {
/////////////////////////////////////////////////////////////////////////
1:     writer.write('\n');
1:     writer.write('\n');
/////////////////////////////////////////////////////////////////////////
1:       writer.write('\n');
commit:d61a0ee
/////////////////////////////////////////////////////////////////////////
1:       writer.write(entry.getTerm());
1:       writer.write(String.valueOf(entry.getDocFreq()));
1:       writer.write(String.valueOf(entry.getTermIdx()));
commit:254af09
/////////////////////////////////////////////////////////////////////////
1:   public void close() {
commit:758cc1b
/////////////////////////////////////////////////////////////////////////
1:  */
1:   private final Writer writer;
1:   private final String delimiter;
1:   private final String field;
commit:f55276b
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: 
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:   @Override
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:d608a88
/////////////////////////////////////////////////////////////////////////
1: import com.google.common.io.Closeables;
/////////////////////////////////////////////////////////////////////////
1:     try {
0:       writer.write(String.valueOf(ti.totalTerms(field)));
0:       writer.write("#term" + delimiter + "doc freq" + delimiter + "idx");
0:       writer.write('\n');
0:       while (entIter.hasNext()) {
0:         TermEntry entry = entIter.next();
0:         writer.write(entry.getTerm());
0:         writer.write(delimiter);
0:         writer.write(String.valueOf(entry.getDocFreq()));
0:         writer.write(delimiter);
0:         writer.write(String.valueOf(entry.getTermIdx()));
0:         writer.write('\n');
1:       }
1:     } finally {
0:       Closeables.closeQuietly(writer);
author:Robin Anil
-------------------------------------------------------------------------------
commit:233d93d
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0: import org.apache.mahout.utils.vectors.TermEntry;
0: import org.apache.mahout.utils.vectors.TermInfo;
0:   
0:   
0:   
0:     
0:     
/////////////////////////////////////////////////////////////////////////
0:   
============================================================================