1:07d3d5f: /*
1:07d3d5f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:07d3d5f:  * contributor license agreements.  See the NOTICE file distributed with
1:07d3d5f:  * this work for additional information regarding copyright ownership.
1:07d3d5f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:07d3d5f:  * (the "License"); you may not use this file except in compliance with
1:07d3d5f:  * the License.  You may obtain a copy of the License at
1:07d3d5f:  *
1:07d3d5f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:07d3d5f:  *
1:07d3d5f:  * Unless required by applicable law or agreed to in writing, software
1:07d3d5f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07d3d5f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07d3d5f:  * See the License for the specific language governing permissions and
1:07d3d5f:  * limitations under the License.
1:07d3d5f:  */
1:07d3d5f: 
1:07d3d5f: package org.apache.mahout.cf.taste.impl.similarity.file;
1:07d3d5f: 
1:07d3d5f: import org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity;
1:07d3d5f: 
1:07d3d5f: import java.io.File;
1:07d3d5f: import java.io.IOException;
1:07d3d5f: import java.util.Iterator;
1:07d3d5f: 
1:07d3d5f: /**
1:07d3d5f:  * {@link Iterable} to be able to read a file linewise into a {@link GenericItemSimilarity}
1:07d3d5f:  */
1:07d3d5f: final class FileItemItemSimilarityIterable implements Iterable<GenericItemSimilarity.ItemItemSimilarity> {
1:07d3d5f: 
1:07d3d5f:   private final File similaritiesFile;
1:07d3d5f: 
1:07d3d5f:   FileItemItemSimilarityIterable(File similaritiesFile) {
1:07d3d5f:     this.similaritiesFile = similaritiesFile;
1:07d3d5f:   }
1:07d3d5f: 
1:07d3d5f:   @Override
1:07d3d5f:   public Iterator<GenericItemSimilarity.ItemItemSimilarity> iterator() {
1:07d3d5f:     try {
1:07d3d5f:       return new FileItemItemSimilarityIterator(similaritiesFile);
1:07d3d5f:     } catch (IOException ioe) {
1:e23728d:       throw new IllegalStateException("Can't read " + similaritiesFile, ioe);
1:07d3d5f:     }
1:07d3d5f:   }
1:07d3d5f: 
1:07d3d5f: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:e23728d
/////////////////////////////////////////////////////////////////////////
1:       throw new IllegalStateException("Can't read " + similaritiesFile, ioe);
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:07d3d5f
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.impl.similarity.file;
1: 
1: import org.apache.mahout.cf.taste.impl.similarity.GenericItemSimilarity;
1: 
1: import java.io.File;
1: import java.io.IOException;
1: import java.util.Iterator;
1: 
1: /**
1:  * {@link Iterable} to be able to read a file linewise into a {@link GenericItemSimilarity}
1:  */
1: final class FileItemItemSimilarityIterable implements Iterable<GenericItemSimilarity.ItemItemSimilarity> {
1: 
1:   private final File similaritiesFile;
1: 
1:   FileItemItemSimilarityIterable(File similaritiesFile) {
1:     this.similaritiesFile = similaritiesFile;
1:   }
1: 
1:   @Override
1:   public Iterator<GenericItemSimilarity.ItemItemSimilarity> iterator() {
1:     try {
1:       return new FileItemItemSimilarityIterator(similaritiesFile);
1:     } catch (IOException ioe) {
0:       throw new IllegalStateException("Can't read " + similaritiesFile);
1:     }
1:   }
1: 
1: }
============================================================================