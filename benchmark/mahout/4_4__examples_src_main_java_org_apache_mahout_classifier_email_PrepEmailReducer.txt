2:29a7f38: /**
1:29a7f38:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:29a7f38:  * contributor license agreements.  See the NOTICE file distributed with
1:29a7f38:  * this work for additional information regarding copyright ownership.
1:29a7f38:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:29a7f38:  * (the "License"); you may not use this file except in compliance with
1:29a7f38:  * the License.  You may obtain a copy of the License at
3:29a7f38:  *
1:29a7f38:  *     http://www.apache.org/licenses/LICENSE-2.0
1:29a7f38:  *
1:29a7f38:  * Unless required by applicable law or agreed to in writing, software
1:29a7f38:  * distributed under the License is distributed on an "AS IS" BASIS,
1:29a7f38:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:29a7f38:  * See the License for the specific language governing permissions and
1:29a7f38:  * limitations under the License.
1:29a7f38:  */
1:29a7f38: 
1:4194a28: package org.apache.mahout.classifier.email;
1:29a7f38: 
1:29a7f38: import org.apache.hadoop.io.Text;
1:29a7f38: import org.apache.hadoop.mapreduce.Reducer;
1:29a7f38: import org.apache.mahout.math.VectorWritable;
1:29a7f38: 
1:29a7f38: import java.io.IOException;
1:29a7f38: import java.util.Iterator;
1:4194a28: 
1:3c22856: public class PrepEmailReducer extends Reducer<Text, VectorWritable, Text, VectorWritable> {
1:29a7f38: 
1:4194a28:   private long maxItemsPerLabel = 10000;
1:4194a28: 
1:29a7f38:   @Override
1:29a7f38:   protected void setup(Context context) throws IOException, InterruptedException {
1:29a7f38:     maxItemsPerLabel = Long.parseLong(context.getConfiguration().get(PrepEmailVectorsDriver.ITEMS_PER_CLASS));
1:29a7f38:   }
1:29a7f38: 
1:29a7f38:   @Override
1:4194a28:   protected void reduce(Text key, Iterable<VectorWritable> values, Context context)
1:4194a28:     throws IOException, InterruptedException {
1:29a7f38:     //TODO: support randomization?  Likely not needed due to the SplitInput utility which does random selection
1:29a7f38:     long i = 0;
1:29a7f38:     Iterator<VectorWritable> iterator = values.iterator();
1:e64dd36:     while (i < maxItemsPerLabel && iterator.hasNext()) {
1:29a7f38:       context.write(key, iterator.next());
1:29a7f38:       i++;
1:29a7f38:     }
1:29a7f38:   }
1:29a7f38: }
============================================================================
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:3c22856
/////////////////////////////////////////////////////////////////////////
1: public class PrepEmailReducer extends Reducer<Text, VectorWritable, Text, VectorWritable> {
author:tcp
-------------------------------------------------------------------------------
commit:e64dd36
/////////////////////////////////////////////////////////////////////////
1:     while (i < maxItemsPerLabel && iterator.hasNext()) {
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:4194a28
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.classifier.email;
/////////////////////////////////////////////////////////////////////////
1: 
1:   private long maxItemsPerLabel = 10000;
1: 
1:   protected void reduce(Text key, Iterable<VectorWritable> values, Context context)
1:     throws IOException, InterruptedException {
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:29a7f38
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.classifier.email;
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: 
1: import org.apache.hadoop.io.Text;
1: import org.apache.hadoop.mapreduce.Reducer;
1: import org.apache.mahout.math.VectorWritable;
1: 
1: import java.io.IOException;
1: import java.util.Iterator;
1: 
1: /**
1:  *
1:  *
0:  **/
0: public class PrepEmailReducer extends Reducer<Text, VectorWritable, Text, VectorWritable>{
0:   long maxItemsPerLabel = 10000;
1:   @Override
1:   protected void setup(Context context) throws IOException, InterruptedException {
1:     maxItemsPerLabel = Long.parseLong(context.getConfiguration().get(PrepEmailVectorsDriver.ITEMS_PER_CLASS));
1:   }
1: 
1:   @Override
0:   protected void reduce(Text key, Iterable<VectorWritable> values, Context context) throws IOException, InterruptedException {
1:     //TODO: support randomization?  Likely not needed due to the SplitInput utility which does random selection
1:     long i = 0;
1:     Iterator<VectorWritable> iterator = values.iterator();
0:     while (i < maxItemsPerLabel && iterator.hasNext()){
1:       context.write(key, iterator.next());
1:       i++;
1:     }
1:   }
1: }
============================================================================