1:6aa2bdb: /*
1:6aa2bdb:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6aa2bdb:  * contributor license agreements.  See the NOTICE file distributed with
1:6aa2bdb:  * this work for additional information regarding copyright ownership.
1:6aa2bdb:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6aa2bdb:  * (the "License"); you may not use this file except in compliance with
1:6aa2bdb:  * the License.  You may obtain a copy of the License at
1:6aa2bdb:  *
1:6aa2bdb:  *     http://www.apache.org/licenses/LICENSE-2.0
1:6aa2bdb:  *
1:6aa2bdb:  * Unless required by applicable law or agreed to in writing, software
1:6aa2bdb:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6aa2bdb:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6aa2bdb:  * See the License for the specific language governing permissions and
1:6aa2bdb:  * limitations under the License.
1:6aa2bdb:  */
1:6aa2bdb: 
1:6aa2bdb: package org.apache.mahout.cf.taste.hadoop.item;
1:6aa2bdb: 
1:a8fb97e: import org.apache.hadoop.mapreduce.Counter;
1:6aa2bdb: import org.apache.hadoop.mapreduce.Reducer;
1:6aa2bdb: import org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils;
1:6aa2bdb: import org.apache.mahout.cf.taste.impl.TasteTestCase;
1:6aa2bdb: import org.apache.mahout.math.VarLongWritable;
1:6aa2bdb: import org.apache.mahout.math.VectorWritable;
1:6aa2bdb: import org.apache.mahout.math.hadoop.MathHelper;
1:055f4ab: import org.easymock.EasyMock;
1:6aa2bdb: import org.junit.Test;
1:6aa2bdb: 
1:6aa2bdb: import java.util.Arrays;
1:4ca6b86: import java.util.Collections;
1:6aa2bdb: 
1:6aa2bdb: /**
1:845cbcd:  * tests {@link ToUserVectorsReducer}
1:6aa2bdb:  */
1:845cbcd: public class ToUserVectorsReducerTest extends TasteTestCase {
1:6aa2bdb: 
1:6aa2bdb:   @Test
1:6aa2bdb:   public void testToUsersReducerMinPreferencesUserIgnored() throws Exception {
1:6aa2bdb:     Reducer<VarLongWritable,VarLongWritable,VarLongWritable,VectorWritable>.Context context =
1:6aa2bdb:         EasyMock.createMock(Reducer.Context.class);
1:6aa2bdb: 
1:845cbcd:     ToUserVectorsReducer reducer = new ToUserVectorsReducer();
1:6aa2bdb:     setField(reducer, "minPreferences", 2);
1:6aa2bdb: 
2:6aa2bdb:     EasyMock.replay(context);
1:6aa2bdb: 
1:4ca6b86:     reducer.reduce(new VarLongWritable(123), Collections.singletonList(new VarLongWritable(456)), context);
1:6aa2bdb: 
2:6aa2bdb:     EasyMock.verify(context);
1:6aa2bdb:   }
1:6aa2bdb: 
1:6aa2bdb:   @Test
1:6aa2bdb:   public void testToUsersReducerMinPreferencesUserPasses() throws Exception {
1:6aa2bdb:     Reducer<VarLongWritable,VarLongWritable,VarLongWritable,VectorWritable>.Context context =
1:6aa2bdb:         EasyMock.createMock(Reducer.Context.class);
1:a8fb97e:     Counter userCounters = EasyMock.createMock(Counter.class);
1:6aa2bdb: 
1:845cbcd:     ToUserVectorsReducer reducer = new ToUserVectorsReducer();
1:6aa2bdb:     setField(reducer, "minPreferences", 2);
1:6aa2bdb: 
1:845cbcd:     EasyMock.expect(context.getCounter(ToUserVectorsReducer.Counters.USERS)).andReturn(userCounters);
1:a8fb97e:     userCounters.increment(1);
1:6aa2bdb:     context.write(EasyMock.eq(new VarLongWritable(123)), MathHelper.vectorMatches(
1:6aa2bdb:         MathHelper.elem(TasteHadoopUtils.idToIndex(456L), 1.0), MathHelper.elem(TasteHadoopUtils.idToIndex(789L), 1.0)));
1:6aa2bdb: 
1:a8fb97e:     EasyMock.replay(context, userCounters);
1:6aa2bdb: 
1:6aa2bdb:     reducer.reduce(new VarLongWritable(123), Arrays.asList(new VarLongWritable(456), new VarLongWritable(789)), context);
1:6aa2bdb: 
1:a8fb97e:     EasyMock.verify(context, userCounters);
1:6aa2bdb:   }
1:6aa2bdb: 
1:6aa2bdb: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:4ca6b86
/////////////////////////////////////////////////////////////////////////
1: import java.util.Collections;
/////////////////////////////////////////////////////////////////////////
1:     reducer.reduce(new VarLongWritable(123), Collections.singletonList(new VarLongWritable(456)), context);
commit:055f4ab
/////////////////////////////////////////////////////////////////////////
1: import org.easymock.EasyMock;
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:845cbcd
/////////////////////////////////////////////////////////////////////////
1:  * tests {@link ToUserVectorsReducer}
1: public class ToUserVectorsReducerTest extends TasteTestCase {
1:     ToUserVectorsReducer reducer = new ToUserVectorsReducer();
/////////////////////////////////////////////////////////////////////////
1:     ToUserVectorsReducer reducer = new ToUserVectorsReducer();
1:     EasyMock.expect(context.getCounter(ToUserVectorsReducer.Counters.USERS)).andReturn(userCounters);
commit:a8fb97e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.hadoop.mapreduce.Counter;
/////////////////////////////////////////////////////////////////////////
1:     Counter userCounters = EasyMock.createMock(Counter.class);
0:     EasyMock.expect(context.getCounter(ToUserVectorReducer.Counters.USERS)).andReturn(userCounters);
1:     userCounters.increment(1);
1:     EasyMock.replay(context, userCounters);
1:     EasyMock.verify(context, userCounters);
commit:6aa2bdb
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.hadoop.item;
1: 
1: import org.apache.hadoop.mapreduce.Reducer;
1: import org.apache.mahout.cf.taste.hadoop.TasteHadoopUtils;
1: import org.apache.mahout.cf.taste.impl.TasteTestCase;
1: import org.apache.mahout.math.VarLongWritable;
1: import org.apache.mahout.math.VectorWritable;
1: import org.apache.mahout.math.hadoop.MathHelper;
0: import org.easymock.classextension.EasyMock;
1: import org.junit.Test;
1: 
1: import java.util.Arrays;
1: 
1: /**
0:  * tests {@link org.apache.mahout.cf.taste.hadoop.item.ToUserVectorReducer}
1:  */
0: public class ToUserVectorReducerTest extends TasteTestCase {
1: 
1:   @Test
1:   public void testToUsersReducerMinPreferencesUserIgnored() throws Exception {
1:     Reducer<VarLongWritable,VarLongWritable,VarLongWritable,VectorWritable>.Context context =
1:         EasyMock.createMock(Reducer.Context.class);
1: 
0:     ToUserVectorReducer reducer = new ToUserVectorReducer();
1:     setField(reducer, "minPreferences", 2);
1: 
1:     EasyMock.replay(context);
1: 
0:     reducer.reduce(new VarLongWritable(123), Arrays.asList(new VarLongWritable(456)), context);
1: 
1:     EasyMock.verify(context);
1:   }
1: 
1:   @Test
1:   public void testToUsersReducerMinPreferencesUserPasses() throws Exception {
1:     Reducer<VarLongWritable,VarLongWritable,VarLongWritable,VectorWritable>.Context context =
1:         EasyMock.createMock(Reducer.Context.class);
1: 
0:     ToUserVectorReducer reducer = new ToUserVectorReducer();
1:     setField(reducer, "minPreferences", 2);
1: 
1:     context.write(EasyMock.eq(new VarLongWritable(123)), MathHelper.vectorMatches(
1:         MathHelper.elem(TasteHadoopUtils.idToIndex(456L), 1.0), MathHelper.elem(TasteHadoopUtils.idToIndex(789L), 1.0)));
1: 
1:     EasyMock.replay(context);
1: 
1:     reducer.reduce(new VarLongWritable(123), Arrays.asList(new VarLongWritable(456), new VarLongWritable(789)), context);
1: 
1:     EasyMock.verify(context);
1:   }
1: 
1: }
============================================================================