1:29a7f38: /**
1:29a7f38:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:29a7f38:  * contributor license agreements.  See the NOTICE file distributed with
1:29a7f38:  * this work for additional information regarding copyright ownership.
1:29a7f38:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:29a7f38:  * (the "License"); you may not use this file except in compliance with
1:29a7f38:  * the License.  You may obtain a copy of the License at
1:29a7f38:  *
1:29a7f38:  *     http://www.apache.org/licenses/LICENSE-2.0
1:29a7f38:  *
1:29a7f38:  * Unless required by applicable law or agreed to in writing, software
1:29a7f38:  * distributed under the License is distributed on an "AS IS" BASIS,
1:29a7f38:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:29a7f38:  * See the License for the specific language governing permissions and
1:29a7f38:  * limitations under the License.
1:29a7f38:  */
1:29a7f38: 
1:4194a28: package org.apache.mahout.classifier.email;
1:29a7f38: 
1:29a7f38: import org.apache.hadoop.io.Text;
1:29a7f38: import org.apache.hadoop.io.WritableComparable;
1:29a7f38: import org.apache.hadoop.mapreduce.Mapper;
1:29a7f38: import org.apache.mahout.math.VectorWritable;
1:29a7f38: 
1:29a7f38: import java.io.IOException;
1:4194a28: import java.util.Locale;
1:4194a28: import java.util.regex.Pattern;
1:29a7f38: 
1:29a7f38: /**
1:3c22856:  * Convert the labels created by the {@link org.apache.mahout.utils.email.MailProcessor} to one consumable
1:3c22856:  * by the classifiers
1:29a7f38:  */
1:29a7f38: public class PrepEmailMapper extends Mapper<WritableComparable<?>, VectorWritable, Text, VectorWritable> {
1:4194a28: 
1:4194a28:   private static final Pattern DASH_DOT = Pattern.compile("-|\\.");
1:4194a28:   private static final Pattern SLASH = Pattern.compile("\\/");
1:4194a28: 
1:44459bd:   private boolean useListName = false; //if true, use the project name and the list name in label creation
1:29a7f38:   @Override
1:29a7f38:   protected void setup(Context context) throws IOException, InterruptedException {
1:29a7f38:     useListName = Boolean.parseBoolean(context.getConfiguration().get(PrepEmailVectorsDriver.USE_LIST_NAME));
1:29a7f38:   }
1:29a7f38: 
1:29a7f38:   @Override
1:4194a28:   protected void map(WritableComparable<?> key, VectorWritable value, Context context)
1:4194a28:     throws IOException, InterruptedException {
1:29a7f38:     String input = key.toString();
1:29a7f38:     ///Example: /cocoon.apache.org/dev/200307.gz/001401c3414f$8394e160$1e01a8c0@WRPO
1:4194a28:     String[] splits = SLASH.split(input);
1:29a7f38:     //we need the first two splits;
1:29a7f38:     if (splits.length >= 3) {
1:4194a28:       StringBuilder bldr = new StringBuilder();
1:4194a28:       bldr.append(escape(splits[1]));
1:4194a28:       if (useListName) {
1:4194a28:         bldr.append('_').append(escape(splits[2]));
1:29a7f38:       }
1:29a7f38:       context.write(new Text(bldr.toString()), value);
1:29a7f38:     }
1:4194a28: 
1:29a7f38:   }
1:29a7f38:   
1:4194a28:   private static String escape(CharSequence value) {
1:4194a28:     return DASH_DOT.matcher(value).replaceAll("_").toLowerCase(Locale.ENGLISH);
1:4194a28:   }
1:29a7f38: }
============================================================================
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:3c22856
/////////////////////////////////////////////////////////////////////////
1:  * Convert the labels created by the {@link org.apache.mahout.utils.email.MailProcessor} to one consumable
1:  * by the classifiers
author:tcp
-------------------------------------------------------------------------------
commit:44459bd
/////////////////////////////////////////////////////////////////////////
1:   private boolean useListName = false; //if true, use the project name and the list name in label creation
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:4194a28
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.classifier.email;
0: import org.apache.mahout.utils.email.MailProcessor;
1: import java.util.Locale;
1: import java.util.regex.Pattern;
0:  * Convert the labels created by the {@link MailProcessor} to one consumable by the classifiers
1: 
1:   private static final Pattern DASH_DOT = Pattern.compile("-|\\.");
1:   private static final Pattern SLASH = Pattern.compile("\\/");
1: 
/////////////////////////////////////////////////////////////////////////
1:   protected void map(WritableComparable<?> key, VectorWritable value, Context context)
1:     throws IOException, InterruptedException {
1:     String[] splits = SLASH.split(input);
1:       StringBuilder bldr = new StringBuilder();
1:       bldr.append(escape(splits[1]));
1:       if (useListName) {
1:         bldr.append('_').append(escape(splits[2]));
1:   
1:   private static String escape(CharSequence value) {
1:     return DASH_DOT.matcher(value).replaceAll("_").toLowerCase(Locale.ENGLISH);
1:   }
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:29a7f38
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.classifier.email;
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: 
1: import org.apache.hadoop.io.Text;
1: import org.apache.hadoop.io.WritableComparable;
1: import org.apache.hadoop.mapreduce.Mapper;
1: import org.apache.mahout.math.VectorWritable;
1: 
1: import java.io.IOException;
1: 
1: /**
0:  * Convert the labels created by the {@link org.apache.mahout.utils.email.MailProcessor} to one consumable by the classifiers
1:  */
1: public class PrepEmailMapper extends Mapper<WritableComparable<?>, VectorWritable, Text, VectorWritable> {
0:   private boolean useListName = false;//if true, use the project name and the list name in label creation
1:   @Override
1:   protected void setup(Context context) throws IOException, InterruptedException {
1:     useListName = Boolean.parseBoolean(context.getConfiguration().get(PrepEmailVectorsDriver.USE_LIST_NAME));
1:   }
1: 
1:   @Override
0:   protected void map(WritableComparable<?> key, VectorWritable value, Context context) throws IOException, InterruptedException {
1:     String input = key.toString();
1:     ///Example: /cocoon.apache.org/dev/200307.gz/001401c3414f$8394e160$1e01a8c0@WRPO
0:     String[] splits = input.split("\\/");
1:     //we need the first two splits;
1:     if (splits.length >= 3) {
0:       StringBuilder bldr = new StringBuilder(splits[1].replaceAll("-|\\.", "_").toLowerCase());
0:       if (useListName == true) {
0:         bldr.append("_").append(splits[2].replaceAll("-|\\.", "_").toLowerCase());
1:       }
1:       context.write(new Text(bldr.toString()), value);
1:     }
1: 
1:   }
1: }
============================================================================