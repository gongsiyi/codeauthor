2:346c98c: /**
1:346c98c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:346c98c:  * contributor license agreements.  See the NOTICE file distributed with
1:346c98c:  * this work for additional information regarding copyright ownership.
1:346c98c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:346c98c:  * (the "License"); you may not use this file except in compliance with
1:346c98c:  * the License.  You may obtain a copy of the License at
1:346c98c:  *
1:346c98c:  *     http://www.apache.org/licenses/LICENSE-2.0
1:346c98c:  *
1:346c98c:  * Unless required by applicable law or agreed to in writing, software
1:346c98c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:346c98c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:346c98c:  * See the License for the specific language governing permissions and
1:346c98c:  * limitations under the License.
2:346c98c:  */
1:346c98c: 
1:346c98c: package org.apache.mahout.common.mapreduce;
1:346c98c: 
1:346c98c: import org.apache.hadoop.io.WritableComparable;
1:346c98c: import org.apache.hadoop.mapreduce.Reducer;
1:346c98c: import org.apache.mahout.math.VectorWritable;
1:e90d901: import org.apache.mahout.math.hadoop.similarity.cooccurrence.Vectors;
1:346c98c: 
1:346c98c: import java.io.IOException;
1:346c98c: 
1:346c98c: public class VectorSumReducer
1:346c98c:     extends Reducer<WritableComparable<?>, VectorWritable, WritableComparable<?>, VectorWritable> {
1:346c98c: 
1:346c98c:   @Override
1:81d64c0:   protected void reduce(WritableComparable<?> key, Iterable<VectorWritable> values, Context ctx)
1:346c98c:     throws IOException, InterruptedException {
1:e90d901:     ctx.write(key, new VectorWritable(Vectors.sum(values.iterator())));
3:346c98c:   }
1:346c98c: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:e90d901
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.math.hadoop.similarity.cooccurrence.Vectors;
/////////////////////////////////////////////////////////////////////////
1:     ctx.write(key, new VectorWritable(Vectors.sum(values.iterator())));
commit:81d64c0
/////////////////////////////////////////////////////////////////////////
1:   protected void reduce(WritableComparable<?> key, Iterable<VectorWritable> values, Context ctx)
/////////////////////////////////////////////////////////////////////////
0:     ctx.write(key, new VectorWritable(vector));
commit:346c98c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.common.mapreduce;
1: 
1: import org.apache.hadoop.io.WritableComparable;
1: import org.apache.hadoop.mapreduce.Reducer;
0: import org.apache.mahout.math.Vector;
1: import org.apache.mahout.math.VectorWritable;
1: 
1: import java.io.IOException;
1: 
1: /**
0:  * Can also be used as a local combiner.
1:  */
1: public class VectorSumReducer
1:     extends Reducer<WritableComparable<?>, VectorWritable, WritableComparable<?>, VectorWritable> {
1: 
1:   @Override
0:   protected void reduce(WritableComparable<?> key, Iterable<VectorWritable> values, Context context)
1:     throws IOException, InterruptedException {
0:     Vector vector = null;
0:     for (VectorWritable v : values) {
0:       if (vector == null) {
0:         vector = v.get();
0:       } else {
0:         v.get().addTo(vector);
1:       }
1:     }
0:     context.write(key, new VectorWritable(vector));
1:   }
1: }
author:Ted Dunning
-------------------------------------------------------------------------------
commit:528ffcd
/////////////////////////////////////////////////////////////////////////
0: import org.apache.mahout.math.function.Functions;
/////////////////////////////////////////////////////////////////////////
0:         vector.assign(v.get(), Functions.PLUS);
============================================================================