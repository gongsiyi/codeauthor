1:48d069f: /**
1:48d069f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:48d069f:  * contributor license agreements.  See the NOTICE file distributed with
1:48d069f:  * this work for additional information regarding copyright ownership.
1:48d069f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:48d069f:  * (the "License"); you may not use this file except in compliance with
1:48d069f:  * the License.  You may obtain a copy of the License at
1:48d069f:  *
1:48d069f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:48d069f:  *
1:48d069f:  * Unless required by applicable law or agreed to in writing, software
1:48d069f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:48d069f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:48d069f:  * See the License for the specific language governing permissions and
1:48d069f:  * limitations under the License.
1:48d069f:  */
1:48d069f: 
1:b60c909: package org.apache.mahout.clustering.spectral;
1:48d069f: 
1:48d069f: import java.io.DataInput;
1:48d069f: import java.io.DataOutput;
1:48d069f: import java.io.IOException;
1:48d069f: 
1:48d069f: import org.apache.hadoop.io.Writable;
1:48d069f: 
1:48d069f: /**
1:48d069f:  * Represents a vertex within the affinity graph for Eigencuts.
1:48d069f:  */
1:48d069f: public class VertexWritable implements Writable {
1:48d069f:   
1:48d069f:   /** the row */
1:48d069f:   private int i;
1:48d069f:   
1:48d069f:   /** the column */
1:48d069f:   private int j;
1:48d069f:   
1:48d069f:   /** the value at this vertex */
1:48d069f:   private double value;
1:48d069f:   
1:48d069f:   /** an extra type delimeter, can probably be null */
1:48d069f:   private String type;
1:48d069f:   
1:d61a0ee:   public VertexWritable() {
1:d61a0ee:   }
1:48d069f: 
1:48d069f:   public VertexWritable(int i, int j, double v, String t) {
1:48d069f:     this.i = i;
1:48d069f:     this.j = j;
1:48d069f:     this.value = v;
1:48d069f:     this.type = t;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public int getRow() {
1:48d069f:     return i;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public void setRow(int i) {
1:48d069f:     this.i = i;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public int getCol() {
1:48d069f:     return j;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public void setCol(int j) { 
1:48d069f:     this.j = j;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public double getValue() {
1:48d069f:     return value;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public void setValue(double v) {
1:48d069f:     this.value = v;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public String getType() {
1:48d069f:     return type;
1:48d069f:   }
1:48d069f:   
1:48d069f:   public void setType(String t) {
1:48d069f:     this.type = t;
1:48d069f:   }
1:48d069f:   
1:48d069f:   @Override
1:48d069f:   public void readFields(DataInput arg0) throws IOException {
1:48d069f:     this.i = arg0.readInt();
1:48d069f:     this.j = arg0.readInt();
1:48d069f:     this.value = arg0.readDouble();
1:48d069f:     this.type = arg0.readUTF();
1:48d069f:   }
1:48d069f: 
1:48d069f:   @Override
1:48d069f:   public void write(DataOutput arg0) throws IOException {
1:48d069f:     arg0.writeInt(i);
1:48d069f:     arg0.writeInt(j);
1:48d069f:     arg0.writeDouble(value);
1:48d069f:     arg0.writeUTF(type);
1:48d069f:   }
1:48d069f: 
1:48d069f: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:b60c909
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.clustering.spectral;
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:d61a0ee
/////////////////////////////////////////////////////////////////////////
1:   public VertexWritable() {
1:   }
author:Jeff Eastman
-------------------------------------------------------------------------------
commit:48d069f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.mahout.clustering.spectral.common;
1: 
1: import java.io.DataInput;
1: import java.io.DataOutput;
1: import java.io.IOException;
1: 
1: import org.apache.hadoop.io.Writable;
1: 
1: /**
1:  * Represents a vertex within the affinity graph for Eigencuts.
1:  */
1: public class VertexWritable implements Writable {
1:   
1:   /** the row */
1:   private int i;
1:   
1:   /** the column */
1:   private int j;
1:   
1:   /** the value at this vertex */
1:   private double value;
1:   
1:   /** an extra type delimeter, can probably be null */
1:   private String type;
1:   
0:   public VertexWritable() {}
1: 
1:   public VertexWritable(int i, int j, double v, String t) {
1:     this.i = i;
1:     this.j = j;
1:     this.value = v;
1:     this.type = t;
1:   }
1:   
1:   public int getRow() {
1:     return i;
1:   }
1:   
1:   public void setRow(int i) {
1:     this.i = i;
1:   }
1:   
1:   public int getCol() {
1:     return j;
1:   }
1:   
1:   public void setCol(int j) { 
1:     this.j = j;
1:   }
1:   
1:   public double getValue() {
1:     return value;
1:   }
1:   
1:   public void setValue(double v) {
1:     this.value = v;
1:   }
1:   
1:   public String getType() {
1:     return type;
1:   }
1:   
1:   public void setType(String t) {
1:     this.type = t;
1:   }
1:   
1:   @Override
1:   public void readFields(DataInput arg0) throws IOException {
1:     this.i = arg0.readInt();
1:     this.j = arg0.readInt();
1:     this.value = arg0.readDouble();
1:     this.type = arg0.readUTF();
1:   }
1: 
1:   @Override
1:   public void write(DataOutput arg0) throws IOException {
1:     arg0.writeInt(i);
1:     arg0.writeInt(j);
1:     arg0.writeDouble(value);
1:     arg0.writeUTF(type);
1:   }
1: 
1: }
============================================================================