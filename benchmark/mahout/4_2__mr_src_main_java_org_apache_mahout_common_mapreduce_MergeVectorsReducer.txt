1:81d64c0: /**
1:81d64c0:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:81d64c0:  * contributor license agreements.  See the NOTICE file distributed with
1:81d64c0:  * this work for additional information regarding copyright ownership.
1:81d64c0:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:81d64c0:  * (the "License"); you may not use this file except in compliance with
1:81d64c0:  * the License.  You may obtain a copy of the License at
1:81d64c0:  *
1:81d64c0:  *     http://www.apache.org/licenses/LICENSE-2.0
1:81d64c0:  *
1:81d64c0:  * Unless required by applicable law or agreed to in writing, software
1:81d64c0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:81d64c0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:81d64c0:  * See the License for the specific language governing permissions and
1:81d64c0:  * limitations under the License.
1:81d64c0:  */
1:81d64c0: 
1:81d64c0: package org.apache.mahout.common.mapreduce;
1:81d64c0: 
1:81d64c0: import org.apache.hadoop.io.WritableComparable;
1:81d64c0: import org.apache.hadoop.mapreduce.Reducer;
1:81d64c0: import org.apache.mahout.math.SequentialAccessSparseVector;
1:81d64c0: import org.apache.mahout.math.Vector;
1:81d64c0: import org.apache.mahout.math.VectorWritable;
1:81d64c0: 
1:81d64c0: import java.io.IOException;
1:81d64c0: 
1:81d64c0: public class MergeVectorsReducer extends
1:81d64c0:     Reducer<WritableComparable<?>,VectorWritable,WritableComparable<?>,VectorWritable> {
1:e200147: 
1:10c535c:   private final VectorWritable result = new VectorWritable();
1:81d64c0: 
1:81d64c0:   @Override
1:81d64c0:   public void reduce(WritableComparable<?> key, Iterable<VectorWritable> vectors, Context ctx)
1:6d16230:     throws IOException, InterruptedException {
1:81d64c0:     Vector merged = VectorWritable.merge(vectors.iterator()).get();
1:e200147:     result.set(new SequentialAccessSparseVector(merged));
1:e200147:     ctx.write(key, result);
1:81d64c0:   }
1:81d64c0: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:6d16230
/////////////////////////////////////////////////////////////////////////
1:     throws IOException, InterruptedException {
commit:e200147
/////////////////////////////////////////////////////////////////////////
0:   private VectorWritable result = new VectorWritable();
1: 
1:     result.set(new SequentialAccessSparseVector(merged));
1:     ctx.write(key, result);
commit:81d64c0
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.common.mapreduce;
1: 
1: import org.apache.hadoop.io.WritableComparable;
1: import org.apache.hadoop.mapreduce.Reducer;
1: import org.apache.mahout.math.SequentialAccessSparseVector;
1: import org.apache.mahout.math.Vector;
1: import org.apache.mahout.math.VectorWritable;
1: 
1: import java.io.IOException;
1: 
1: public class MergeVectorsReducer extends
1:     Reducer<WritableComparable<?>,VectorWritable,WritableComparable<?>,VectorWritable> {
1: 
1:   @Override
1:   public void reduce(WritableComparable<?> key, Iterable<VectorWritable> vectors, Context ctx)
0:       throws IOException, InterruptedException {
1:     Vector merged = VectorWritable.merge(vectors.iterator()).get();
0:     ctx.write(key, new VectorWritable(new SequentialAccessSparseVector(merged)));
1:   }
1: }
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:10c535c
/////////////////////////////////////////////////////////////////////////
1:   private final VectorWritable result = new VectorWritable();
============================================================================