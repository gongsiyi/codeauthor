1:4fbfbc6: /*
1:4fbfbc6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4fbfbc6:  * contributor license agreements.  See the NOTICE file distributed with
1:4fbfbc6:  * this work for additional information regarding copyright ownership.
1:4fbfbc6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4fbfbc6:  * (the "License"); you may not use this file except in compliance with
1:4fbfbc6:  * the License.  You may obtain a copy of the License at
1:4fbfbc6:  *
1:4fbfbc6:  *     http://www.apache.org/licenses/LICENSE-2.0
1:4fbfbc6:  *
1:4fbfbc6:  * Unless required by applicable law or agreed to in writing, software
1:4fbfbc6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4fbfbc6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4fbfbc6:  * See the License for the specific language governing permissions and
1:4fbfbc6:  * limitations under the License.
1:4fbfbc6:  */
1:2e4d306: 
1:4fbfbc6: package org.apache.mahout.utils.regex;
1:2e4d306: 
1:210b265: import com.google.common.collect.Lists;
1:210b265: 
1:2e4d306: import java.util.List;
1:2e4d306: 
1:2e4d306: /**
1:2e4d306:  * Chain together several {@link org.apache.mahout.utils.regex.RegexTransformer} and apply them to the match
1:2e4d306:  * in succession
1:4fbfbc6:  */
1:2e4d306: public class ChainTransformer implements RegexTransformer {
1:2e4d306: 
1:210b265:   private List<RegexTransformer> chain = Lists.newArrayList();
1:2e4d306: 
1:2e4d306:   public ChainTransformer() {
1:2e4d306:   }
1:2e4d306: 
1:2e4d306:   public ChainTransformer(List<RegexTransformer> chain) {
1:2e4d306:     this.chain = chain;
1:2e4d306:   }
1:2e4d306: 
1:2e4d306:   @Override
1:2e4d306:   public String transformMatch(String match) {
1:2e4d306:     String result = match;
1:2e4d306:     for (RegexTransformer transformer : chain) {
1:2e4d306:       result = transformer.transformMatch(result);
1:2e4d306:     }
1:2e4d306:     return result;
1:2e4d306:   }
1:2e4d306: 
1:2e4d306:   public List<RegexTransformer> getChain() {
1:2e4d306:     return chain;
1:2e4d306:   }
1:2e4d306: 
1:2e4d306:   public void setChain(List<RegexTransformer> chain) {
1:2e4d306:     this.chain = chain;
1:2e4d306:   }
1:2e4d306: }
============================================================================
author:Ted Dunning
-------------------------------------------------------------------------------
commit:402e296
/////////////////////////////////////////////////////////////////////////
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:210b265
/////////////////////////////////////////////////////////////////////////
1: import com.google.common.collect.Lists;
1: 
/////////////////////////////////////////////////////////////////////////
1:   private List<RegexTransformer> chain = Lists.newArrayList();
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:4fbfbc6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.mahout.utils.regex;
/////////////////////////////////////////////////////////////////////////
1:  */
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:2e4d306
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.utils.regex;
1: 
1: 
0: import java.util.ArrayList;
1: import java.util.List;
1: 
1: /**
1:  * Chain together several {@link org.apache.mahout.utils.regex.RegexTransformer} and apply them to the match
1:  * in succession
0:  *
0:  **/
1: public class ChainTransformer implements RegexTransformer {
1: 
0:   private List<RegexTransformer> chain = new ArrayList<RegexTransformer>();
1: 
1:   public ChainTransformer() {
1:   }
1: 
1:   public ChainTransformer(List<RegexTransformer> chain) {
1:     this.chain = chain;
1:   }
1: 
1:   @Override
1:   public String transformMatch(String match) {
1:     String result = match;
1:     for (RegexTransformer transformer : chain) {
1:       result = transformer.transformMatch(result);
1:     }
1:     return result;
1:   }
1: 
1:   public List<RegexTransformer> getChain() {
1:     return chain;
1:   }
1: 
1:   public void setChain(List<RegexTransformer> chain) {
1:     this.chain = chain;
1:   }
1: }
============================================================================