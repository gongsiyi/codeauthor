1:336f0e7: /*
1:336f0e7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:336f0e7:  * contributor license agreements.  See the NOTICE file distributed with
1:336f0e7:  * this work for additional information regarding copyright ownership.
1:336f0e7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:336f0e7:  * (the "License"); you may not use this file except in compliance with
1:336f0e7:  * the License.  You may obtain a copy of the License at
1:336f0e7:  *
1:336f0e7:  *     http://www.apache.org/licenses/LICENSE-2.0
1:336f0e7:  *
1:336f0e7:  * Unless required by applicable law or agreed to in writing, software
1:336f0e7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:336f0e7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:336f0e7:  * See the License for the specific language governing permissions and
1:336f0e7:  * limitations under the License.
1:336f0e7:  */
4:336f0e7: 
1:0b564c7: package org.apache.mahout.math.flavor;
1:336f0e7: 
1:0b564c7: /** STRUCTURE HINT */
1:0b564c7: public enum TraversingStructureEnum {
1:336f0e7: 
1:0b564c7:   UNKNOWN,
1:336f0e7: 
1:0b564c7:   /**
1:0b564c7:    * Backing vectors are directly available as row views.
1:0b564c7:    */
1:0b564c7:   ROWWISE,
1:336f0e7: 
1:0b564c7:   /**
1:0b564c7:    * Column vectors are directly available as column views.
1:0b564c7:    */
1:0b564c7:   COLWISE,
1:336f0e7: 
1:0b564c7:   /**
1:0b564c7:    * Only some row-wise vectors are really present (can use iterateNonEmpty). Corresponds to
1:0b564c7:    * [[org.apache.mahout.math.SparseMatrix]].
1:0b564c7:    */
1:0b564c7:   SPARSEROWWISE,
1:336f0e7: 
1:0b564c7:   SPARSECOLWISE,
1:336f0e7: 
1:0b564c7:   SPARSEHASH,
1:336f0e7: 
1:0b564c7:   VECTORBACKED,
1:336f0e7: 
1:0b564c7:   BLOCKIFIED
1:336f0e7: }
============================================================================
author:Dmitriy Lyubimov
-------------------------------------------------------------------------------
commit:0b564c7
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.math.flavor;
1: /** STRUCTURE HINT */
1: public enum TraversingStructureEnum {
1:   UNKNOWN,
1:   /**
1:    * Backing vectors are directly available as row views.
1:    */
1:   ROWWISE,
1:   /**
1:    * Column vectors are directly available as column views.
1:    */
1:   COLWISE,
1:   /**
1:    * Only some row-wise vectors are really present (can use iterateNonEmpty). Corresponds to
1:    * [[org.apache.mahout.math.SparseMatrix]].
1:    */
1:   SPARSEROWWISE,
1:   SPARSECOLWISE,
1:   SPARSEHASH,
1:   VECTORBACKED,
1:   BLOCKIFIED
commit:336f0e7
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.mahout.math.scalabindings
1: 
0: import org.apache.mahout.math._
1: 
0: class DoubleScalarOps(val x:Double) extends AnyVal{
1: 
0:   import RLikeOps._
1: 
0:   def +(that:Matrix) = that + x
1: 
0:   def +(that:Vector) = that + x
1: 
0:   def *(that:Matrix) = that * x
1: 
0:   def *(that:Vector) = that * x
1: 
0:   def -(that:Matrix) = x -: that
1: 
0:   def -(that:Vector) = x -: that
1: 
0:   def /(that:Matrix) = x /: that
1: 
0:   def /(that:Vector) = x /: that
1: 
1: }
author:Stevo Slavic
-------------------------------------------------------------------------------
commit:ef6d93a
commit:f7b69fa
============================================================================