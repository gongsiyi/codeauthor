1:f3a9cc1: /**
1:f3a9cc1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f3a9cc1:  * contributor license agreements.  See the NOTICE file distributed with
1:f3a9cc1:  * this work for additional information regarding copyright ownership.
1:f3a9cc1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f3a9cc1:  * (the "License"); you may not use this file except in compliance with
1:f3a9cc1:  * the License.  You may obtain a copy of the License at
1:f3a9cc1:  *
1:f3a9cc1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:f3a9cc1:  *
1:f3a9cc1:  * Unless required by applicable law or agreed to in writing, software
1:f3a9cc1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f3a9cc1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f3a9cc1:  * See the License for the specific language governing permissions and
1:f3a9cc1:  * limitations under the License.
1:f3a9cc1:  */
1:f3a9cc1: 
1:10d6663: package org.apache.mahout.vectorizer;
1:22d7d31: 
1:22d7d31: import java.util.Random;
1:22d7d31: 
1:22d7d31: import org.apache.mahout.common.RandomUtils;
1:22d7d31: 
1:22d7d31: public class RandomDocumentGenerator {
1:22d7d31:   
1:22d7d31:   private static final int AVG_DOCUMENT_LENGTH = 20;
1:22d7d31:   private static final int AVG_SENTENCE_LENGTH = 8;
1:22d7d31:   private static final int AVG_WORD_LENGTH = 6;
1:22d7d31:   private static final String CHARSET = "abcdef";
1:22d7d31:   private static final String DELIM = " .,?;:!\t\n\r";
1:22d7d31:   private static final String ERRORSET = "`1234567890" + "-=~@#$%^&*()_+[]{}'\"/<>|\\";
1:22d7d31: 
1:22d7d31:   private final Random random = RandomUtils.getRandom();
1:22d7d31:   
1:22d7d31:   private char getRandomDelimiter() {
1:22d7d31:     return DELIM.charAt(random.nextInt(DELIM.length()));
1:22d7d31:   }
1:22d7d31: 
1:22d7d31:   public String getRandomDocument() {
1:22d7d31:     int length = (AVG_DOCUMENT_LENGTH >> 1) + random.nextInt(AVG_DOCUMENT_LENGTH);
1:22d7d31:     StringBuilder sb = new StringBuilder(length * AVG_SENTENCE_LENGTH * AVG_WORD_LENGTH);
1:22d7d31:     for (int i = 0; i < length; i++) {
1:22d7d31:       sb.append(getRandomSentence());
1:22d7d31:     }
1:22d7d31:     return sb.toString();
1:22d7d31:   }
1:22d7d31: 
1:22d7d31:   public String getRandomSentence() {
1:22d7d31:     int length = (AVG_SENTENCE_LENGTH >> 1) + random.nextInt(AVG_SENTENCE_LENGTH);
1:22d7d31:     StringBuilder sb = new StringBuilder(length * AVG_WORD_LENGTH);
1:22d7d31:     for (int i = 0; i < length; i++) {
1:22d7d31:       sb.append(getRandomString()).append(' ');
1:22d7d31:     }
1:22d7d31:     sb.append(getRandomDelimiter());
1:22d7d31:     return sb.toString();
1:22d7d31:   }
1:22d7d31: 
1:22d7d31:   public String getRandomString() {
1:22d7d31:     int length = (AVG_WORD_LENGTH >> 1) + random.nextInt(AVG_WORD_LENGTH);
1:22d7d31:     StringBuilder sb = new StringBuilder(length);
1:22d7d31:     for (int i = 0; i < length; i++) {
1:22d7d31:       sb.append(CHARSET.charAt(random.nextInt(CHARSET.length())));
1:22d7d31:     }
1:22d7d31:     if (random.nextInt(10) == 0) {
1:22d7d31:       sb.append(ERRORSET.charAt(random.nextInt(ERRORSET.length())));
1:22d7d31:     }
1:22d7d31:     return sb.toString();
1:22d7d31:   }
1:22d7d31: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:f3a9cc1
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
author:Robin Anil
-------------------------------------------------------------------------------
commit:10d6663
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.vectorizer;
author:Andrew L. Farris
-------------------------------------------------------------------------------
commit:22d7d31
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.utils.vectors.text;
1: 
1: import java.util.Random;
1: 
1: import org.apache.mahout.common.RandomUtils;
1: 
1: public class RandomDocumentGenerator {
1:   
1:   private static final int AVG_DOCUMENT_LENGTH = 20;
1:   private static final int AVG_SENTENCE_LENGTH = 8;
1:   private static final int AVG_WORD_LENGTH = 6;
1:   private static final String CHARSET = "abcdef";
1:   private static final String DELIM = " .,?;:!\t\n\r";
1:   private static final String ERRORSET = "`1234567890" + "-=~@#$%^&*()_+[]{}'\"/<>|\\";
1: 
1:   private final Random random = RandomUtils.getRandom();
1:   
1:   private char getRandomDelimiter() {
1:     return DELIM.charAt(random.nextInt(DELIM.length()));
1:   }
1: 
1:   public String getRandomDocument() {
1:     int length = (AVG_DOCUMENT_LENGTH >> 1) + random.nextInt(AVG_DOCUMENT_LENGTH);
1:     StringBuilder sb = new StringBuilder(length * AVG_SENTENCE_LENGTH * AVG_WORD_LENGTH);
1:     for (int i = 0; i < length; i++) {
1:       sb.append(getRandomSentence());
1:     }
1:     return sb.toString();
1:   }
1: 
1:   public String getRandomSentence() {
1:     int length = (AVG_SENTENCE_LENGTH >> 1) + random.nextInt(AVG_SENTENCE_LENGTH);
1:     StringBuilder sb = new StringBuilder(length * AVG_WORD_LENGTH);
1:     for (int i = 0; i < length; i++) {
1:       sb.append(getRandomString()).append(' ');
1:     }
1:     sb.append(getRandomDelimiter());
1:     return sb.toString();
1:   }
1: 
1:   public String getRandomString() {
1:     int length = (AVG_WORD_LENGTH >> 1) + random.nextInt(AVG_WORD_LENGTH);
1:     StringBuilder sb = new StringBuilder(length);
1:     for (int i = 0; i < length; i++) {
1:       sb.append(CHARSET.charAt(random.nextInt(CHARSET.length())));
1:     }
1:     if (random.nextInt(10) == 0) {
1:       sb.append(ERRORSET.charAt(random.nextInt(ERRORSET.length())));
1:     }
1:     return sb.toString();
1:   }
1: }
============================================================================