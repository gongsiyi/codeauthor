1:a13b4b7: /**
1:a13b4b7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a13b4b7:  * contributor license agreements.  See the NOTICE file distributed with
1:a13b4b7:  * this work for additional information regarding copyright ownership.
1:a13b4b7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a13b4b7:  * (the "License"); you may not use this file except in compliance with
1:a13b4b7:  * the License.  You may obtain a copy of the License at
1:a13b4b7:  *
1:a13b4b7:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a13b4b7:  *
1:a13b4b7:  * Unless required by applicable law or agreed to in writing, software
1:a13b4b7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a13b4b7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a13b4b7:  * See the License for the specific language governing permissions and
1:a13b4b7:  * limitations under the License.
1:a13b4b7:  */
1:a13b4b7: 
1:a13b4b7: package org.apache.mahout.common.iterator;
1:a13b4b7: 
1:a13b4b7: import java.util.Iterator;
1:a13b4b7: 
1:a13b4b7: import org.apache.mahout.common.MahoutTestCase;
1:a13b4b7: import org.junit.Test;
1:a13b4b7: 
1:80366ee: public final class CountingIteratorTest extends MahoutTestCase {
1:a13b4b7: 
1:a13b4b7:   @Test
1:80366ee:   public void testEmptyCase() {
1:80366ee:     assertFalse(new CountingIterator(0).hasNext());
1:a13b4b7:   }
1:a13b4b7: 
1:a13b4b7:   @Test
1:80366ee:   public void testCount() {
1:80366ee:     Iterator<Integer> it = new CountingIterator(3);
1:a13b4b7:     assertTrue(it.hasNext());
2:a13b4b7:     assertEquals(0, (int) it.next());
1:80366ee:     assertTrue(it.hasNext());
1:a13b4b7:     assertEquals(1, (int) it.next());
1:80366ee:     assertTrue(it.hasNext());
1:a13b4b7:     assertEquals(2, (int) it.next());
1:a13b4b7:     assertFalse(it.hasNext());
1:a13b4b7:   }
1:a13b4b7: 
1:a13b4b7: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:80366ee
/////////////////////////////////////////////////////////////////////////
1: public final class CountingIteratorTest extends MahoutTestCase {
1:   public void testEmptyCase() {
1:     assertFalse(new CountingIterator(0).hasNext());
1:   public void testCount() {
1:     Iterator<Integer> it = new CountingIterator(3);
1:     assertTrue(it.hasNext());
1:     assertTrue(it.hasNext());
commit:a13b4b7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.common.iterator;
1: 
0: import java.util.Arrays;
0: import java.util.Collections;
1: import java.util.Iterator;
1: 
1: import org.apache.mahout.common.MahoutTestCase;
1: import org.junit.Test;
1: 
0: public final class IteratorsIteratorTest extends MahoutTestCase {
1: 
1:   @Test
0:   public void testEmpty() {
0:     assertFalse(new IteratorsIterator<Object>(Collections.<Iterator<Object>>emptyList()).hasNext());
1:   }
1: 
1:   @Test
0:   public void testSequences() {
0:     Iterator<Integer> it = new IteratorsIterator<Integer>(Arrays.asList(
0:       Integers.iterator(3), Integers.iterator(0), Integers.iterator(1)
0:     ));
1:     assertTrue(it.hasNext());
1:     assertEquals(0, (int) it.next());
1:     assertEquals(1, (int) it.next());
1:     assertEquals(2, (int) it.next());
1:     assertEquals(0, (int) it.next());
1:     assertFalse(it.hasNext());
1:   }
1: 
1: }
============================================================================