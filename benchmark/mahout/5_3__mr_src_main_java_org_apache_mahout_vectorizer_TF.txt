1:98a79f4: /**
1:98a79f4:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:98a79f4:  * contributor license agreements.  See the NOTICE file distributed with
1:98a79f4:  * this work for additional information regarding copyright ownership.
1:98a79f4:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:98a79f4:  * (the "License"); you may not use this file except in compliance with
1:98a79f4:  * the License.  You may obtain a copy of the License at
2:98a79f4:  *
1:98a79f4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:98a79f4:  *
1:98a79f4:  * Unless required by applicable law or agreed to in writing, software
1:98a79f4:  * distributed under the License is distributed on an "AS IS" BASIS,
1:98a79f4:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:98a79f4:  * See the License for the specific language governing permissions and
1:98a79f4:  * limitations under the License.
1:98a79f4:  */
4:98a79f4: 
1:10d6663: package org.apache.mahout.vectorizer;
1:98a79f4: 
1:98a79f4: /**
1:939ac30:  * {@link Weight} based on term frequency only
1:758cc1b:  */
1:98a79f4: public class TF implements Weight {
1:233d93d:   
1:98a79f4:   @Override
1:98a79f4:   public double calculate(int tf, int df, int length, int numDocs) {
1:98a79f4:     //ignore length
1:98a79f4:     return tf;
1:98a79f4:   }
1:98a79f4: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:939ac30
/////////////////////////////////////////////////////////////////////////
1:  * {@link Weight} based on term frequency only
commit:758cc1b
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.utils.vectors;
1:  */
author:Robin Anil
-------------------------------------------------------------------------------
commit:10d6663
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.vectorizer;
commit:233d93d
/////////////////////////////////////////////////////////////////////////
0:  * {@link org.apache.mahout.utils.vectors.Weight} based on term frequency only
1:   
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:98a79f4
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.utils.vectors;
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: 
0: import org.apache.lucene.search.DefaultSimilarity;
0: import org.apache.lucene.search.Similarity;
1: 
1: 
1: /**
0:  * {@link org.apache.mahout.utils.vectors.Weight} based on term frequency only 
1:  *
0:  **/
1: public class TF implements Weight {
1: 
1:   @Override
1:   public double calculate(int tf, int df, int length, int numDocs) {
1:     //ignore length
1:     return tf;
1:   }
1: }
============================================================================