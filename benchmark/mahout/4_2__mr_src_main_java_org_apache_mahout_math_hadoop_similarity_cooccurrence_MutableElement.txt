1:1cdd095: /*
1:1cdd095:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1cdd095:  * contributor license agreements.  See the NOTICE file distributed with
1:1cdd095:  * this work for additional information regarding copyright ownership.
1:1cdd095:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1cdd095:  * (the "License"); you may not use this file except in compliance with
1:1cdd095:  * the License.  You may obtain a copy of the License at
1:1cdd095:  *
1:1cdd095:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1cdd095:  *
1:1cdd095:  * Unless required by applicable law or agreed to in writing, software
1:1cdd095:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1cdd095:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1cdd095:  * See the License for the specific language governing permissions and
1:1cdd095:  * limitations under the License.
1:1cdd095:  */
1:1cdd095: 
1:d95bdda: package org.apache.mahout.math.hadoop.similarity.cooccurrence;
1:d95bdda: 
1:d95bdda: import org.apache.mahout.math.Vector;
1:d95bdda: 
1:d95bdda: public class MutableElement implements Vector.Element {
1:d95bdda: 
1:d95bdda:   private int index;
1:d95bdda:   private double value;
1:d95bdda: 
1:d95bdda:   MutableElement(int index, double value) {
1:d95bdda:     this.index = index;
1:d95bdda:     this.value = value;
1:d95bdda:   }
1:d95bdda: 
1:d95bdda:   @Override
1:d95bdda:   public double get() {
1:d95bdda:     return value;
1:d95bdda:   }
1:d95bdda: 
1:d95bdda:   @Override
1:d95bdda:   public int index() {
1:d95bdda:     return index;
1:d95bdda:   }
1:d95bdda: 
1:d95bdda:   public void setIndex(int index) {
1:d95bdda:     this.index = index;
1:d95bdda:   }
1:d95bdda: 
1:d95bdda:   @Override
1:d95bdda:   public void set(double value) {
1:d95bdda:     this.value = value;
1:d95bdda:   }
1:d95bdda: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:1cdd095
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:d95bdda
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.math.hadoop.similarity.cooccurrence;
1: 
1: import org.apache.mahout.math.Vector;
1: 
1: public class MutableElement implements Vector.Element {
1: 
1:   private int index;
1:   private double value;
1: 
1:   MutableElement(int index, double value) {
1:     this.index = index;
1:     this.value = value;
1:   }
1: 
1:   @Override
1:   public double get() {
1:     return value;
1:   }
1: 
1:   @Override
1:   public int index() {
1:     return index;
1:   }
1: 
1:   public void setIndex(int index) {
1:     this.index = index;
1:   }
1: 
1:   @Override
1:   public void set(double value) {
1:     this.value = value;
1:   }
1: }
============================================================================