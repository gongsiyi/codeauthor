1:049e7dc: /**
1:049e7dc:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:049e7dc:  * contributor license agreements.  See the NOTICE file distributed with
1:049e7dc:  * this work for additional information regarding copyright ownership.
1:049e7dc:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:049e7dc:  * (the "License"); you may not use this file except in compliance with
1:049e7dc:  * the License.  You may obtain a copy of the License at
1:4b25f31:  *
1:049e7dc:  *     http://www.apache.org/licenses/LICENSE-2.0
2:049e7dc:  *
1:049e7dc:  * Unless required by applicable law or agreed to in writing, software
1:049e7dc:  * distributed under the License is distributed on an "AS IS" BASIS,
1:049e7dc:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:049e7dc:  * See the License for the specific language governing permissions and
1:049e7dc:  * limitations under the License.
1:049e7dc:  */
1:049e7dc: 
1:4b25f31: package org.apache.mahout.ep;
1:4b25f31: 
1:02f8694: import org.apache.hadoop.io.Writable;
1:02f8694: 
1:4b25f31: /**
1:02f8694:  * Payloads for evolutionary state must be copyable and updatable.  The copy should be a deep copy
1:02f8694:  * unless some aspect of the state is sharable or immutable.
1:02f8694:  * <p/>
1:02f8694:  * During mutation, a copy is first made and then after the parameters in the State structure are
1:02f8694:  * suitably modified, update is called with the scaled versions of the parameters.
1:4b25f31:  *
1:4b25f31:  * @param <T>
1:02f8694:  * @see State
1:4b25f31:  */
1:02f8694: public interface Payload<T> extends Writable {
1:02f8694:   Payload<T> copy();
1:02f8694: 
1:049e7dc:   void update(double[] params);
1:4b25f31: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Ted Dunning
-------------------------------------------------------------------------------
commit:02f8694
/////////////////////////////////////////////////////////////////////////
1: import org.apache.hadoop.io.Writable;
1: 
1:  * Payloads for evolutionary state must be copyable and updatable.  The copy should be a deep copy
1:  * unless some aspect of the state is sharable or immutable.
1:  * <p/>
1:  * During mutation, a copy is first made and then after the parameters in the State structure are
1:  * suitably modified, update is called with the scaled versions of the parameters.
1:  * @see State
1: public interface Payload<T> extends Writable {
1:   Payload<T> copy();
1: 
commit:4b25f31
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.ep;
1: 
1: /**
0:  * Payloads for evolutionary state must be copyable and updatable.  The copy should be
0:  * a deep copy unless some aspect of the state is sharable or immutable.
1:  *
0:  * During mutation, a copy is first made and then after the parameters in the State
0:  * structure are suitably modified, update is called with the scaled versions of the
0:  * parameters.
1:  *
0:  * @see State
1:  * @param <T>
1:  */
0: public interface Payload<T> {
0:   public T copy();
0:   public void update(double[] params);
1: }
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:049e7dc
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
/////////////////////////////////////////////////////////////////////////
0:   T copy();
1:   void update(double[] params);
============================================================================