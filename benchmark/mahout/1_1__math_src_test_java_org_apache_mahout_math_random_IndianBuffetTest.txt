1:a07bfc3: /*
1:a07bfc3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a07bfc3:  * contributor license agreements.  See the NOTICE file distributed with
1:a07bfc3:  * this work for additional information regarding copyright ownership.
1:a07bfc3:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a07bfc3:  * (the "License"); you may not use this file except in compliance with
1:a07bfc3:  * the License.  You may obtain a copy of the License at
1:a07bfc3:  *
1:a07bfc3:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a07bfc3:  *
1:a07bfc3:  * Unless required by applicable law or agreed to in writing, software
1:a07bfc3:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a07bfc3:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a07bfc3:  * See the License for the specific language governing permissions and
1:a07bfc3:  * limitations under the License.
1:a07bfc3:  */
1:a07bfc3: 
1:a07bfc3: package org.apache.mahout.math.random;
1:a07bfc3: 
1:a07bfc3: import com.google.common.collect.HashMultiset;
1:a07bfc3: import com.google.common.collect.Multiset;
1:a07bfc3: import org.apache.mahout.common.RandomUtils;
1:a07bfc3: import org.junit.Test;
1:a07bfc3: 
1:a07bfc3: import java.util.List;
1:a07bfc3: 
1:a07bfc3: public class IndianBuffetTest {
1:a07bfc3:   @Test
1:a07bfc3:   public void testBasicText() {
1:a07bfc3:       RandomUtils.useTestSeed();
1:a07bfc3:       IndianBuffet<String> sampler = IndianBuffet.createTextDocumentSampler(30);
1:a07bfc3:       Multiset<String> counts = HashMultiset.create();
1:a07bfc3:       int[] lengths = new int[100];
1:a07bfc3:       for (int i = 0; i < 30; i++) {
1:a07bfc3:           final List<String> doc = sampler.sample();
1:a07bfc3:           lengths[doc.size()]++;
1:a07bfc3:           for (String w : doc) {
1:a07bfc3:               counts.add(w);
1:a07bfc3:           }
1:a07bfc3:           System.out.printf("%s\n", doc);
1:a07bfc3:       }
1:a07bfc3:   }
1:a07bfc3: }
============================================================================
author:Ted Dunning
-------------------------------------------------------------------------------
commit:a07bfc3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.math.random;
1: 
1: import com.google.common.collect.HashMultiset;
1: import com.google.common.collect.Multiset;
1: import org.apache.mahout.common.RandomUtils;
1: import org.junit.Test;
1: 
1: import java.util.List;
1: 
1: public class IndianBuffetTest {
1:   @Test
1:   public void testBasicText() {
1:       RandomUtils.useTestSeed();
1:       IndianBuffet<String> sampler = IndianBuffet.createTextDocumentSampler(30);
1:       Multiset<String> counts = HashMultiset.create();
1:       int[] lengths = new int[100];
1:       for (int i = 0; i < 30; i++) {
1:           final List<String> doc = sampler.sample();
1:           lengths[doc.size()]++;
1:           for (String w : doc) {
1:               counts.add(w);
1:           }
1:           System.out.printf("%s\n", doc);
1:       }
1:   }
1: }
============================================================================