1:7a9e99e: /**
1:7a9e99e:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7a9e99e:  * contributor license agreements.  See the NOTICE file distributed with
1:7a9e99e:  * this work for additional information regarding copyright ownership.
1:7a9e99e:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7a9e99e:  * (the "License"); you may not use this file except in compliance with
1:7a9e99e:  * the License.  You may obtain a copy of the License at
1:7a9e99e:  *
1:7a9e99e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:7a9e99e:  *
1:7a9e99e:  * Unless required by applicable law or agreed to in writing, software
1:7a9e99e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7a9e99e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7a9e99e:  * See the License for the specific language governing permissions and
1:7a9e99e:  * limitations under the License.
1:7a9e99e:  */
1:7a9e99e: 
1:d25dd20: package org.apache.mahout.cf.taste.example.kddcup.track2;
1:7a9e99e: 
1:7a9e99e: import org.apache.mahout.cf.taste.common.TasteException;
1:7a9e99e: import org.apache.mahout.cf.taste.eval.RecommenderBuilder;
1:d25dd20: import org.apache.mahout.cf.taste.example.kddcup.KDDCupDataModel;
1:7a9e99e: import org.apache.mahout.cf.taste.model.DataModel;
1:7a9e99e: import org.apache.mahout.cf.taste.recommender.Recommender;
1:7a9e99e: 
1:d25dd20: final class Track2RecommenderBuilder implements RecommenderBuilder {
1:7a9e99e:   
1:7a9e99e:   @Override
1:7a9e99e:   public Recommender buildRecommender(DataModel dataModel) throws TasteException {
1:d25dd20:     return new Track2Recommender(dataModel, ((KDDCupDataModel) dataModel).getDataFileDirectory());
2:7a9e99e:   }
1:7a9e99e:   
1:3c22856: }
============================================================================
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:3c22856
/////////////////////////////////////////////////////////////////////////
1: }
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:d25dd20
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.cf.taste.example.kddcup.track2;
1: import org.apache.mahout.cf.taste.example.kddcup.KDDCupDataModel;
1: final class Track2RecommenderBuilder implements RecommenderBuilder {
1:     return new Track2Recommender(dataModel, ((KDDCupDataModel) dataModel).getDataFileDirectory());
commit:7a9e99e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.mahout.cf.taste.example.kddcup;
1: 
1: import org.apache.mahout.cf.taste.common.TasteException;
1: import org.apache.mahout.cf.taste.eval.RecommenderBuilder;
1: import org.apache.mahout.cf.taste.model.DataModel;
1: import org.apache.mahout.cf.taste.recommender.Recommender;
1: 
0: public final class KDDCupRecommenderBuilder implements RecommenderBuilder {
1:   
1:   @Override
1:   public Recommender buildRecommender(DataModel dataModel) throws TasteException {
0:     return new KDDCupRecommender(dataModel);
1:   }
1:   
1: }
============================================================================