1:1e898e7: /**
1:1e898e7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1e898e7:  * contributor license agreements.  See the NOTICE file distributed with
1:1e898e7:  * this work for additional information regarding copyright ownership.
1:1e898e7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1e898e7:  * (the "License"); you may not use this file except in compliance with
1:1e898e7:  * the License.  You may obtain a copy of the License at
1:1e898e7:  *
1:1e898e7:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1e898e7:  *
1:1e898e7:  * Unless required by applicable law or agreed to in writing, software
1:1e898e7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1e898e7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1e898e7:  * See the License for the specific language governing permissions and
1:1e898e7:  * limitations under the License.
1:1e898e7:  */
1:1e898e7: 
1:1e898e7: package org.apache.mahout.cf.taste.similarity.precompute;
1:1e898e7: 
1:1e898e7: import org.apache.mahout.cf.taste.recommender.ItemBasedRecommender;
1:1e898e7: 
1:1e898e7: import java.io.IOException;
1:1e898e7: 
1:1e898e7: public abstract class BatchItemSimilarities {
1:1e898e7: 
1:5d66758:   private final ItemBasedRecommender recommender;
1:5d66758:   private final int similarItemsPerItem;
1:1e898e7: 
1:1e898e7:   /**
1:1e898e7:    * @param recommender recommender to use
1:1e898e7:    * @param similarItemsPerItem number of similar items to compute per item
1:1e898e7:    */
1:1e898e7:   protected BatchItemSimilarities(ItemBasedRecommender recommender, int similarItemsPerItem) {
1:1e898e7:     this.recommender = recommender;
1:1e898e7:     this.similarItemsPerItem = similarItemsPerItem;
1:1e898e7:   }
1:1e898e7: 
1:1e898e7:   protected ItemBasedRecommender getRecommender() {
1:1e898e7:     return recommender;
1:1e898e7:   }
1:1e898e7: 
1:1e898e7:   protected int getSimilarItemsPerItem() {
1:1e898e7:     return similarItemsPerItem;
1:1e898e7:   }
1:1e898e7: 
1:1e898e7:   /**
1:1e898e7:    * @param degreeOfParallelism number of threads to use for the computation
1:1e898e7:    * @param maxDurationInHours  maximum duration of the computation
1:1e898e7:    * @param writer  {@link SimilarItemsWriter} used to persist the results
1:1e898e7:    * @return  the number of similarities precomputed
1:1e898e7:    * @throws IOException
1:1e898e7:    * @throws RuntimeException if the computation takes longer than maxDurationInHours
1:1e898e7:    */
1:1e898e7:   public abstract int computeItemSimilarities(int degreeOfParallelism, int maxDurationInHours,
1:1e898e7:       SimilarItemsWriter writer) throws IOException;
1:1e898e7: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:5d66758
/////////////////////////////////////////////////////////////////////////
1:   private final ItemBasedRecommender recommender;
1:   private final int similarItemsPerItem;
commit:1e898e7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.similarity.precompute;
1: 
1: import org.apache.mahout.cf.taste.recommender.ItemBasedRecommender;
1: 
1: import java.io.IOException;
1: 
1: public abstract class BatchItemSimilarities {
1: 
0:   private ItemBasedRecommender recommender;
0:   private int similarItemsPerItem;
1: 
1:   /**
1:    * @param recommender recommender to use
1:    * @param similarItemsPerItem number of similar items to compute per item
1:    */
1:   protected BatchItemSimilarities(ItemBasedRecommender recommender, int similarItemsPerItem) {
1:     this.recommender = recommender;
1:     this.similarItemsPerItem = similarItemsPerItem;
1:   }
1: 
1:   protected ItemBasedRecommender getRecommender() {
1:     return recommender;
1:   }
1: 
1:   protected int getSimilarItemsPerItem() {
1:     return similarItemsPerItem;
1:   }
1: 
1:   /**
1:    * @param degreeOfParallelism number of threads to use for the computation
1:    * @param maxDurationInHours  maximum duration of the computation
1:    * @param writer  {@link SimilarItemsWriter} used to persist the results
1:    * @return  the number of similarities precomputed
1:    * @throws IOException
1:    * @throws RuntimeException if the computation takes longer than maxDurationInHours
1:    */
1:   public abstract int computeItemSimilarities(int degreeOfParallelism, int maxDurationInHours,
1:       SimilarItemsWriter writer) throws IOException;
1: }
============================================================================