1:e23728d: /**
1:e23728d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e23728d:  * contributor license agreements.  See the NOTICE file distributed with
1:e23728d:  * this work for additional information regarding copyright ownership.
1:e23728d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e23728d:  * (the "License"); you may not use this file except in compliance with
1:e23728d:  * the License.  You may obtain a copy of the License at
1:e23728d:  *
1:e23728d:  *     http://www.apache.org/licenses/LICENSE-2.0
1:e23728d:  *
1:e23728d:  * Unless required by applicable law or agreed to in writing, software
1:e23728d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e23728d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e23728d:  * See the License for the specific language governing permissions and
1:e23728d:  * limitations under the License.
1:e23728d:  */
1:e23728d: 
1:e23728d: package org.apache.mahout.cf.taste.impl.recommender;
1:e23728d: 
1:e23728d: import com.google.common.base.Preconditions;
1:e23728d: import org.apache.mahout.cf.taste.common.TasteException;
1:e23728d: import org.apache.mahout.cf.taste.impl.common.FastIDSet;
1:e23728d: import org.apache.mahout.cf.taste.model.DataModel;
1:e23728d: import org.apache.mahout.cf.taste.similarity.ItemSimilarity;
1:e23728d: 
1:e23728d: /**
1:e23728d:  * returns the result of {@link ItemSimilarity#allSimilarItemIDs(long)} as candidate items
1:e23728d:  */
1:e23728d: public class AllSimilarItemsCandidateItemsStrategy extends AbstractCandidateItemsStrategy {
1:e23728d: 
1:e23728d:   private final ItemSimilarity similarity;
1:e23728d: 
1:e23728d:   public AllSimilarItemsCandidateItemsStrategy(ItemSimilarity similarity) {
1:e23728d:     Preconditions.checkArgument(similarity != null, "similarity is null");
1:e23728d:     this.similarity = similarity;
1:e23728d:   }
1:e23728d: 
1:e23728d:   @Override
1:d141c8e:   protected FastIDSet doGetCandidateItems(long[] preferredItemIDs, DataModel dataModel, boolean includeKnownItems)
1:d141c8e:     throws TasteException {
1:e23728d:     FastIDSet candidateItemIDs = new FastIDSet();
1:e23728d:     for (long itemID : preferredItemIDs) {
1:e23728d:       candidateItemIDs.addAll(similarity.allSimilarItemIDs(itemID));
1:e23728d:     }
1:d141c8e:     if (!includeKnownItems) {
1:d141c8e:       candidateItemIDs.removeAll(preferredItemIDs);
1:d141c8e:     }
1:e23728d:     return candidateItemIDs;
1:e23728d:   }
1:e23728d: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:d141c8e
/////////////////////////////////////////////////////////////////////////
1:   protected FastIDSet doGetCandidateItems(long[] preferredItemIDs, DataModel dataModel, boolean includeKnownItems)
1:     throws TasteException {
1:     if (!includeKnownItems) {
1:       candidateItemIDs.removeAll(preferredItemIDs);
1:     }
commit:e23728d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.impl.recommender;
1: 
1: import com.google.common.base.Preconditions;
1: import org.apache.mahout.cf.taste.common.TasteException;
1: import org.apache.mahout.cf.taste.impl.common.FastIDSet;
1: import org.apache.mahout.cf.taste.model.DataModel;
1: import org.apache.mahout.cf.taste.similarity.ItemSimilarity;
1: 
1: /**
1:  * returns the result of {@link ItemSimilarity#allSimilarItemIDs(long)} as candidate items
1:  */
1: public class AllSimilarItemsCandidateItemsStrategy extends AbstractCandidateItemsStrategy {
1: 
1:   private final ItemSimilarity similarity;
1: 
1:   public AllSimilarItemsCandidateItemsStrategy(ItemSimilarity similarity) {
1:     Preconditions.checkArgument(similarity != null, "similarity is null");
1:     this.similarity = similarity;
1:   }
1: 
1:   @Override
0:   FastIDSet doGetCandidateItems(long[] preferredItemIDs, DataModel dataModel) throws TasteException {
1:     FastIDSet candidateItemIDs = new FastIDSet();
1:     for (long itemID : preferredItemIDs) {
1:       candidateItemIDs.addAll(similarity.allSimilarItemIDs(itemID));
1:     }
0:     candidateItemIDs.removeAll(preferredItemIDs);
1:     return candidateItemIDs;
1:   }
1: }
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:smarthi
-------------------------------------------------------------------------------
commit:2e7c319
/////////////////////////////////////////////////////////////////////////
0:   protected FastIDSet doGetCandidateItems(long[] preferredItemIDs, DataModel dataModel) throws TasteException {
============================================================================