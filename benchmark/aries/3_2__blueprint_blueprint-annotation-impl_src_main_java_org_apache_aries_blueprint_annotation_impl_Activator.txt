1:dd9325e: /**
1:dd9325e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:dd9325e:  *  contributor license agreements.  See the NOTICE file distributed with
1:dd9325e:  *  this work for additional information regarding copyright ownership.
1:dd9325e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:dd9325e:  *  (the "License"); you may not use this file except in compliance with
1:dd9325e:  *  the License.  You may obtain a copy of the License at
1:dd9325e:  *
1:dd9325e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dd9325e:  *
1:dd9325e:  *  Unless required by applicable law or agreed to in writing, software
1:dd9325e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:dd9325e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dd9325e:  *  See the License for the specific language governing permissions and
1:dd9325e:  *  limitations under the License.
1:dd9325e:  */
1:dd9325e: package org.apache.aries.blueprint.annotation.impl;
1:dd9325e: 
1:dd9325e: import java.util.Dictionary;
1:dd9325e: import java.util.Hashtable;
1:dd9325e: 
1:047a2ae: import org.apache.aries.blueprint.annotation.service.BlueprintAnnotationScanner;
1:047a2ae: import org.apache.aries.util.AriesFrameworkUtil;
1:dd9325e: import org.osgi.framework.BundleActivator;
1:dd9325e: import org.osgi.framework.BundleContext;
1:dd9325e: import org.osgi.framework.Constants;
1:dd9325e: import org.osgi.framework.ServiceRegistration;
1:dd9325e: 
1:dd9325e: public class Activator implements BundleActivator {
1:dd9325e: 
1:dd9325e:     ServiceRegistration sr;
1:dd9325e:     
1:dd9325e:     public void start(BundleContext context) {
1:dd9325e:         Dictionary dict = new Hashtable();
1:dd9325e:         dict.put(Constants.SERVICE_RANKING, 0);
1:dd9325e:         sr = context.registerService(BlueprintAnnotationScanner.class.getName(), new BlueprintAnnotationScannerImpl(context), dict);
2:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public void stop(BundleContext context) {
1:047a2ae:       AriesFrameworkUtil.safeUnregisterService(sr);
1:dd9325e:     }
1:dd9325e:    
1:dd9325e: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:047a2ae
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.annotation.service.BlueprintAnnotationScanner;
1: import org.apache.aries.util.AriesFrameworkUtil;
/////////////////////////////////////////////////////////////////////////
1:       AriesFrameworkUtil.safeUnregisterService(sr);
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:caaf291
/////////////////////////////////////////////////////////////////////////
author:Lin Sun
-------------------------------------------------------------------------------
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.annotation.impl;
1: 
1: import java.util.Dictionary;
1: import java.util.Hashtable;
1: 
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.Constants;
1: import org.osgi.framework.ServiceRegistration;
0: import org.apache.aries.blueprint.annotation.service.BlueprintAnnotationScanner;
1: 
1: public class Activator implements BundleActivator {
1: 
1:     ServiceRegistration sr;
1:     
1:     public void start(BundleContext context) {
0:         System.out.println("Annotation Scanner Impl Bundle start");
1:         Dictionary dict = new Hashtable();
1:         dict.put(Constants.SERVICE_RANKING, 0);
1:         sr = context.registerService(BlueprintAnnotationScanner.class.getName(), new BlueprintAnnotationScannerImpl(context), dict);
0:         System.out.println("finish register service");
1:     }
1: 
1:     public void stop(BundleContext context) {
0:         System.out.println("Annotation Scanner Impl Bundle stop");
0:         if (sr != null) {
0:             sr.unregister();
1:         }
1:     }
1:    
1: }
============================================================================