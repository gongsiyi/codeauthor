1:8f852b6: /*
1:8f852b6:  * Licensed to the Apache Software Foundation (ASF) under one
1:8f852b6:  * or more contributor license agreements.  See the NOTICE file
1:8f852b6:  * distributed with this work for additional information
1:8f852b6:  * regarding copyright ownership.  The ASF licenses this file
1:8f852b6:  * to you under the Apache License, Version 2.0 (the
1:8f852b6:  * "License"); you may not use this file except in compliance
1:8f852b6:  * with the License.  You may obtain a copy of the License at
1:8f852b6:  *
1:8f852b6:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8f852b6:  *
1:8f852b6:  * Unless required by applicable law or agreed to in writing,
1:8f852b6:  * software distributed under the License is distributed on an
1:8f852b6:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8f852b6:  * KIND, either express or implied.  See the License for the
1:8f852b6:  * specific language governing permissions and limitations
1:8f852b6:  * under the License.
1:8f852b6:  */
1:8f852b6: package org.apache.aries.blueprint.proxy;
1:8f852b6: 
1:8f852b6: public class ProxyTestClassGeneralWithNoDefaultOrProtectedAccess extends ProxyTestClassSuperWithNoDefaultOrProtectedAccess
1:8f852b6: {
1:8f852b6: 
1:8f852b6:   public String testMethod(String x, int y, Object z)
1:8f852b6:   {
1:8f852b6:     somePrivateMethod();
1:8f852b6:     return x;
1:8f852b6:   }
1:8f852b6: 
1:8f852b6:   public String testArgs(double a, short b, long c, char d, byte e, boolean f)
1:8f852b6:   {
1:8f852b6:     return Character.toString(d);
1:8f852b6:   }
1:8f852b6: 
1:8f852b6:   public void testReturnVoid()
1:8f852b6:   {
1:8f852b6:   }
1:8f852b6: 
1:8f852b6:   public int testReturnInt()
1:8f852b6:   {
1:8f852b6:     return 17;
1:8f852b6:   }
1:8f852b6: 
1:8f852b6:   public Integer testReturnInteger()
1:8f852b6:   {
1:8f852b6:     return Integer.valueOf(1);
1:8f852b6:   }
1:8f852b6: 
1:8f852b6:   private void somePrivateMethod()
1:8f852b6:   {
1:8f852b6: 
1:8f852b6:   }
1:8f852b6: 
1:8f852b6:   public boolean equals(Object o) {
1:8f852b6:     return o == this;
1:8f852b6:   }
1:8f852b6:   
1:8f852b6:   public void testException() {
1:8f852b6:     throw new RuntimeException();
1:8f852b6:   }
1:8f852b6:   
1:8f852b6:   public void testInternallyCaughtException() {
1:8f852b6:     try {
1:8f852b6:       try {
1:8f852b6:         throw new RuntimeException();
1:8f852b6:       } catch (RuntimeException re) {
1:8f852b6:         // no op
1:8f852b6:       }
1:8f852b6:     } catch (Exception e) {
1:8f852b6:       
1:8f852b6:     }
1:8f852b6:   }
1:8f852b6: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:8f852b6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.proxy;
1: 
1: public class ProxyTestClassGeneralWithNoDefaultOrProtectedAccess extends ProxyTestClassSuperWithNoDefaultOrProtectedAccess
1: {
1: 
1:   public String testMethod(String x, int y, Object z)
1:   {
1:     somePrivateMethod();
1:     return x;
1:   }
1: 
1:   public String testArgs(double a, short b, long c, char d, byte e, boolean f)
1:   {
1:     return Character.toString(d);
1:   }
1: 
1:   public void testReturnVoid()
1:   {
1:   }
1: 
1:   public int testReturnInt()
1:   {
1:     return 17;
1:   }
1: 
1:   public Integer testReturnInteger()
1:   {
1:     return Integer.valueOf(1);
1:   }
1: 
1:   private void somePrivateMethod()
1:   {
1: 
1:   }
1: 
1:   public boolean equals(Object o) {
1:     return o == this;
1:   }
1:   
1:   public void testException() {
1:     throw new RuntimeException();
1:   }
1:   
1:   public void testInternallyCaughtException() {
1:     try {
1:       try {
1:         throw new RuntimeException();
1:       } catch (RuntimeException re) {
1:         // no op
1:       }
1:     } catch (Exception e) {
1:       
1:     }
1:   }
1: }
============================================================================