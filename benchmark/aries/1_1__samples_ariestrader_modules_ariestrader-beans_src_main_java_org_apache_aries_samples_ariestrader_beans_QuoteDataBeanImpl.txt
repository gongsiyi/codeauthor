1:628add4: /**
1:628add4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:628add4:  *  contributor license agreements.  See the NOTICE file distributed with
1:628add4:  *  this work for additional information regarding copyright ownership.
1:628add4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:628add4:  *  (the "License"); you may not use this file except in compliance with
1:628add4:  *  the License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.beans;
2:628add4: 
1:628add4: import java.io.Serializable;
1:628add4: import java.math.BigDecimal;
1:56a6860: import org.apache.aries.samples.ariestrader.util.Log;
1:56a6860: import org.apache.aries.samples.ariestrader.util.TradeConfig;
1:880e087: import org.apache.aries.samples.ariestrader.api.persistence.QuoteDataBean;
1:628add4: 
1:628add4: 
1:628add4: public class QuoteDataBeanImpl implements QuoteDataBean, Serializable {
1:628add4:     
1:628add4:     private String symbol;          /* symbol */
1:628add4:     
1:628add4:    
1:628add4:     private String companyName;     /* companyName */
1:628add4:     
1:628add4:     
1:628add4:     private double volume;          /* volume */
1:628add4:     
1:628add4:     
1:628add4:     private BigDecimal price;       /* price */
1:628add4:     
1:628add4:     
1:628add4:     private BigDecimal open1;       /* open1 price */
1:628add4:     
1:628add4:     
1:628add4:     private BigDecimal low;         /* low price */
1:628add4:     
1:628add4:     
1:628add4:     private BigDecimal high;        /* high price */
1:628add4:     
1:628add4:     
1:628add4:     private double change1;         /* price change */
1:628add4:     
1:628add4:     
1:628add4:     
1:628add4:     public QuoteDataBeanImpl() {
1:628add4:     }
1:628add4: 
1:628add4:     public QuoteDataBeanImpl(String symbol, String companyName, double volume,
1:628add4:             BigDecimal price, BigDecimal open, BigDecimal low,
1:628add4:             BigDecimal high, double change) {
1:628add4:         setSymbol(symbol);
1:628add4:         setCompanyName(companyName);
1:628add4:         setVolume(volume);
1:628add4:         setPrice(price);
1:628add4:         setOpen(open);
1:628add4:         setLow(low);
1:628add4:         setHigh(high);
1:628add4:         setChange(change);
1:628add4:     }
1:628add4: 
1:628add4:     public static QuoteDataBean getRandomInstance() {
1:628add4:         return new QuoteDataBeanImpl(
1:628add4:                 TradeConfig.rndSymbol(),                 //symbol
1:628add4:                 TradeConfig.rndSymbol() + " Incorporated",         //Company Name
1:628add4:                 TradeConfig.rndFloat(100000),            //volume
1:628add4:                 TradeConfig.rndBigDecimal(1000.0f),     //price
1:628add4:                 TradeConfig.rndBigDecimal(1000.0f),     //open1
1:628add4:                 TradeConfig.rndBigDecimal(1000.0f),     //low
1:628add4:                 TradeConfig.rndBigDecimal(1000.0f),     //high
1:628add4:                 TradeConfig.rndFloat(100000)            //volume
1:628add4:         );
1:628add4:     }
1:628add4: 
1:628add4:     //Create a "zero" value QuoteDataBeanImpl for the given symbol
1:628add4:     public QuoteDataBeanImpl(String symbol) {
1:628add4:         setSymbol(symbol);
1:628add4:     }
1:628add4: 
1:628add4:     public String toString() {
1:628add4:         return "\n\tQuote Data for: " + getSymbol()
1:628add4:                 + "\n\t\t companyName: " + getCompanyName()
1:628add4:                 + "\n\t\t      volume: " + getVolume()
1:628add4:                 + "\n\t\t       price: " + getPrice()
1:628add4:                 + "\n\t\t        open1: " + getOpen()
1:628add4:                 + "\n\t\t         low: " + getLow()
1:628add4:                 + "\n\t\t        high: " + getHigh()
1:628add4:                 + "\n\t\t      change1: " + getChange()
1:628add4:                 ;
1:628add4:     }
1:628add4: 
1:628add4:     public String toHTML() {
1:628add4:         return "<BR>Quote Data for: " + getSymbol()
1:628add4:                 + "<LI> companyName: " + getCompanyName() + "</LI>"
1:628add4:                 + "<LI>      volume: " + getVolume() + "</LI>"
1:628add4:                 + "<LI>       price: " + getPrice() + "</LI>"
1:628add4:                 + "<LI>        open1: " + getOpen() + "</LI>"
1:628add4:                 + "<LI>         low: " + getLow() + "</LI>"
1:628add4:                 + "<LI>        high: " + getHigh() + "</LI>"
1:628add4:                 + "<LI>      change1: " + getChange() + "</LI>"
1:628add4:                 ;
1:628add4:     }
1:628add4: 
1:628add4:     public void print() {
1:628add4:         Log.log(this.toString());
1:628add4:     }
1:628add4: 
1:628add4:     public String getSymbol() {
1:628add4:         return symbol;
1:628add4:     }
1:628add4: 
1:628add4:     public void setSymbol(String symbol) {
1:628add4:         this.symbol = symbol;
1:628add4:     }
1:628add4: 
1:628add4:     public String getCompanyName() {
1:628add4:         return companyName;
1:628add4:     }
1:628add4: 
1:628add4:     public void setCompanyName(String companyName) {
1:628add4:         this.companyName = companyName;
1:628add4:     }
1:628add4: 
1:628add4:     public BigDecimal getPrice() {
1:628add4:         return price;
1:628add4:     }
1:628add4: 
1:628add4:     public void setPrice(BigDecimal price) {
1:628add4:         this.price = price;
1:628add4:     }
1:628add4: 
1:628add4:     public BigDecimal getOpen() {
1:628add4:         return open1;
1:628add4:     }
1:628add4: 
1:628add4:     public void setOpen(BigDecimal open) {
1:628add4:         this.open1 = open;
1:628add4:     }
1:628add4: 
1:628add4:     public BigDecimal getLow() {
1:628add4:         return low;
1:628add4:     }
1:628add4: 
1:628add4:     public void setLow(BigDecimal low) {
1:628add4:         this.low = low;
1:628add4:     }
1:628add4: 
1:628add4:     public BigDecimal getHigh() {
1:628add4:         return high;
1:628add4:     }
1:628add4: 
1:628add4:     public void setHigh(BigDecimal high) {
1:628add4:         this.high = high;
1:628add4:     }
1:628add4: 
1:628add4:     public double getChange() {
1:628add4:         return change1;
1:628add4:     }
1:628add4: 
1:628add4:     public void setChange(double change) {
1:628add4:         this.change1 = change;
1:628add4:     }
1:628add4: 
1:628add4:     public double getVolume() {
1:628add4:         return volume;
1:628add4:     }
1:628add4: 
1:628add4:     public void setVolume(double volume) {
1:628add4:         this.volume = volume;
1:628add4:     }
1:628add4: 
1:628add4:     @Override
1:628add4:     public int hashCode() {
1:628add4:         int hash = 0;
1:628add4:         hash += (this.symbol != null ? this.symbol.hashCode() : 0);
1:628add4:         return hash;
1:628add4:     }
1:628add4:     
1:628add4:     @Override
1:628add4:     public boolean equals(Object object) {
1:628add4:         // TODO: Warning - this method won't work in the case the id fields are not set
1:628add4:         if (!(object instanceof QuoteDataBeanImpl)) {
1:628add4:             return false;
1:628add4:         }
1:628add4:         QuoteDataBeanImpl other = (QuoteDataBeanImpl)object;
1:628add4:         if (this.symbol != other.symbol && (this.symbol == null || !this.symbol.equals(other.symbol))) return false;
1:628add4:         return true;
1:628add4:     }
1:628add4: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:b8c0170
/////////////////////////////////////////////////////////////////////////
commit:880e087
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.ariestrader.api.persistence.QuoteDataBean;
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.beans;
1: import org.apache.aries.samples.ariestrader.util.Log;
1: import org.apache.aries.samples.ariestrader.util.TradeConfig;
0: import org.apache.aries.samples.ariestrader.persistence.api.QuoteDataBean;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.beans;
0: import org.apache.aries.samples.daytrader.util.Log;
0: import org.apache.aries.samples.daytrader.util.TradeConfig;
0: import org.apache.aries.samples.daytrader.persistence.api.QuoteDataBean;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.beans;
1: 
1: import java.io.Serializable;
1: import java.math.BigDecimal;
0: import java.util.Collection;
1: 
0: import org.apache.geronimo.samples.daytrader.util.Log;
0: import org.apache.geronimo.samples.daytrader.util.TradeConfig;
0: import org.apache.geronimo.samples.daytrader.persistence.api.QuoteDataBean;
1: 
1: 
1: public class QuoteDataBeanImpl implements QuoteDataBean, Serializable {
1:     
1:     private String symbol;          /* symbol */
1:     
1:    
1:     private String companyName;     /* companyName */
1:     
1:     
1:     private double volume;          /* volume */
1:     
1:     
1:     private BigDecimal price;       /* price */
1:     
1:     
1:     private BigDecimal open1;       /* open1 price */
1:     
1:     
1:     private BigDecimal low;         /* low price */
1:     
1:     
1:     private BigDecimal high;        /* high price */
1:     
1:     
1:     private double change1;         /* price change */
1:     
1:     
1:     
1:     public QuoteDataBeanImpl() {
1:     }
1: 
1:     public QuoteDataBeanImpl(String symbol, String companyName, double volume,
1:             BigDecimal price, BigDecimal open, BigDecimal low,
1:             BigDecimal high, double change) {
1:         setSymbol(symbol);
1:         setCompanyName(companyName);
1:         setVolume(volume);
1:         setPrice(price);
1:         setOpen(open);
1:         setLow(low);
1:         setHigh(high);
1:         setChange(change);
1:     }
1: 
1:     public static QuoteDataBean getRandomInstance() {
1:         return new QuoteDataBeanImpl(
1:                 TradeConfig.rndSymbol(),                 //symbol
1:                 TradeConfig.rndSymbol() + " Incorporated",         //Company Name
1:                 TradeConfig.rndFloat(100000),            //volume
1:                 TradeConfig.rndBigDecimal(1000.0f),     //price
1:                 TradeConfig.rndBigDecimal(1000.0f),     //open1
1:                 TradeConfig.rndBigDecimal(1000.0f),     //low
1:                 TradeConfig.rndBigDecimal(1000.0f),     //high
1:                 TradeConfig.rndFloat(100000)            //volume
1:         );
1:     }
1: 
1:     //Create a "zero" value QuoteDataBeanImpl for the given symbol
1:     public QuoteDataBeanImpl(String symbol) {
1:         setSymbol(symbol);
1:     }
1: 
1:     public String toString() {
1:         return "\n\tQuote Data for: " + getSymbol()
1:                 + "\n\t\t companyName: " + getCompanyName()
1:                 + "\n\t\t      volume: " + getVolume()
1:                 + "\n\t\t       price: " + getPrice()
1:                 + "\n\t\t        open1: " + getOpen()
1:                 + "\n\t\t         low: " + getLow()
1:                 + "\n\t\t        high: " + getHigh()
1:                 + "\n\t\t      change1: " + getChange()
1:                 ;
1:     }
1: 
1:     public String toHTML() {
1:         return "<BR>Quote Data for: " + getSymbol()
1:                 + "<LI> companyName: " + getCompanyName() + "</LI>"
1:                 + "<LI>      volume: " + getVolume() + "</LI>"
1:                 + "<LI>       price: " + getPrice() + "</LI>"
1:                 + "<LI>        open1: " + getOpen() + "</LI>"
1:                 + "<LI>         low: " + getLow() + "</LI>"
1:                 + "<LI>        high: " + getHigh() + "</LI>"
1:                 + "<LI>      change1: " + getChange() + "</LI>"
1:                 ;
1:     }
1: 
1:     public void print() {
1:         Log.log(this.toString());
1:     }
1: 
1:     public String getSymbol() {
1:         return symbol;
1:     }
1: 
1:     public void setSymbol(String symbol) {
1:         this.symbol = symbol;
1:     }
1: 
1:     public String getCompanyName() {
1:         return companyName;
1:     }
1: 
1:     public void setCompanyName(String companyName) {
1:         this.companyName = companyName;
1:     }
1: 
1:     public BigDecimal getPrice() {
1:         return price;
1:     }
1: 
1:     public void setPrice(BigDecimal price) {
1:         this.price = price;
1:     }
1: 
1:     public BigDecimal getOpen() {
1:         return open1;
1:     }
1: 
1:     public void setOpen(BigDecimal open) {
1:         this.open1 = open;
1:     }
1: 
1:     public BigDecimal getLow() {
1:         return low;
1:     }
1: 
1:     public void setLow(BigDecimal low) {
1:         this.low = low;
1:     }
1: 
1:     public BigDecimal getHigh() {
1:         return high;
1:     }
1: 
1:     public void setHigh(BigDecimal high) {
1:         this.high = high;
1:     }
1: 
1:     public double getChange() {
1:         return change1;
1:     }
1: 
1:     public void setChange(double change) {
1:         this.change1 = change;
1:     }
1: 
1:     public double getVolume() {
1:         return volume;
1:     }
1: 
1:     public void setVolume(double volume) {
1:         this.volume = volume;
1:     }
1: 
1:     @Override
1:     public int hashCode() {
1:         int hash = 0;
1:         hash += (this.symbol != null ? this.symbol.hashCode() : 0);
1:         return hash;
1:     }
1:     
1:     @Override
1:     public boolean equals(Object object) {
1:         // TODO: Warning - this method won't work in the case the id fields are not set
1:         if (!(object instanceof QuoteDataBeanImpl)) {
1:             return false;
1:         }
1:         QuoteDataBeanImpl other = (QuoteDataBeanImpl)object;
1:         if (this.symbol != other.symbol && (this.symbol == null || !this.symbol.equals(other.symbol))) return false;
1:         return true;
1:     }
1: }
============================================================================