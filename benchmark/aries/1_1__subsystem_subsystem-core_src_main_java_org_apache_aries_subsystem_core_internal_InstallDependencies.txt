1:a990e32: package org.apache.aries.subsystem.core.internal;
1:a990e32: 
1:a990e32: import java.util.ArrayList;
1:a990e32: import java.util.Collections;
1:a990e32: import java.util.List;
1:a990e32: 
1:a990e32: import org.osgi.resource.Resource;
1:a990e32: import org.osgi.service.coordinator.Coordination;
1:a990e32: 
1:a990e32: public class InstallDependencies {
1:a990e32:     public void install(BasicSubsystem subsystem, BasicSubsystem parent, Coordination coordination) throws Exception{
1:a990e32:         // Install dependencies first...
1:a990e32:         List<Resource> dependencies = new ArrayList<Resource>(subsystem.getResource().getInstallableDependencies());
1:a990e32:         Collections.sort(dependencies, new InstallResourceComparator());
1:a990e32:         for (Resource dependency : dependencies)
1:a990e32:             ResourceInstaller.newInstance(coordination, dependency, subsystem).install();
1:a990e32:         for (Resource dependency : subsystem.getResource().getSharedDependencies()) {
1:a990e32:             // TODO This needs some more thought. The following check
1:a990e32:             // protects against a child subsystem that has its parent as a
1:a990e32:             // dependency. Are there other places of concern as well? Is it
1:a990e32:             // only the current parent that is of concern or should all
1:a990e32:             // parents be checked?
1:a990e32:             if (parent==null || !dependency.equals(parent))
1:a990e32:                 ResourceInstaller.newInstance(coordination, dependency, subsystem).install();
1:a990e32:         }
1:a990e32:     }
1:a990e32: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:a990e32
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.core.internal;
1: 
1: import java.util.ArrayList;
1: import java.util.Collections;
1: import java.util.List;
1: 
1: import org.osgi.resource.Resource;
1: import org.osgi.service.coordinator.Coordination;
1: 
1: public class InstallDependencies {
1:     public void install(BasicSubsystem subsystem, BasicSubsystem parent, Coordination coordination) throws Exception{
1:         // Install dependencies first...
1:         List<Resource> dependencies = new ArrayList<Resource>(subsystem.getResource().getInstallableDependencies());
1:         Collections.sort(dependencies, new InstallResourceComparator());
1:         for (Resource dependency : dependencies)
1:             ResourceInstaller.newInstance(coordination, dependency, subsystem).install();
1:         for (Resource dependency : subsystem.getResource().getSharedDependencies()) {
1:             // TODO This needs some more thought. The following check
1:             // protects against a child subsystem that has its parent as a
1:             // dependency. Are there other places of concern as well? Is it
1:             // only the current parent that is of concern or should all
1:             // parents be checked?
1:             if (parent==null || !dependency.equals(parent))
1:                 ResourceInstaller.newInstance(coordination, dependency, subsystem).install();
1:         }
1:     }
1: }
============================================================================