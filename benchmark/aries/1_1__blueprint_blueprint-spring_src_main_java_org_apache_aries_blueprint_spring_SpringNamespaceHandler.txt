1:09b7171: /**
1:09b7171:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:09b7171:  *  contributor license agreements.  See the NOTICE file distributed with
1:09b7171:  *  this work for additional information regarding copyright ownership.
1:09b7171:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:09b7171:  *  (the "License"); you may not use this file except in compliance with
1:09b7171:  *  the License.  You may obtain a copy of the License at
1:09b7171:  *
1:09b7171:  *     http://www.apache.org/licenses/LICENSE-2.0
1:09b7171:  *
1:09b7171:  *  Unless required by applicable law or agreed to in writing, software
1:09b7171:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:09b7171:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:09b7171:  *  See the License for the specific language governing permissions and
1:09b7171:  *  limitations under the License.
1:09b7171:  */
1:09b7171: package org.apache.aries.blueprint.spring;
1:09b7171: 
1:09b7171: import org.apache.aries.blueprint.NamespaceHandler;
1:09b7171: import org.apache.aries.blueprint.ParserContext;
1:09b7171: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1:09b7171: import org.osgi.service.blueprint.reflect.Metadata;
1:09b7171: import org.springframework.beans.factory.config.BeanDefinition;
1:09b7171: import org.springframework.beans.factory.config.BeanDefinitionHolder;
1:09b7171: import org.w3c.dom.Element;
1:09b7171: import org.w3c.dom.Node;
1:09b7171: 
1:09b7171: public class SpringNamespaceHandler implements org.springframework.beans.factory.xml.NamespaceHandler {
1:09b7171: 
1:09b7171:     private final NamespaceHandler handler;
1:09b7171:     private final ParserContext parserContext;
1:09b7171: 
1:09b7171:     public SpringNamespaceHandler(ParserContext parserContext, NamespaceHandler handler) {
1:09b7171:         this.parserContext = parserContext;
1:09b7171:         this.handler = handler;
1:09b7171:     }
1:09b7171: 
1:09b7171:     @Override
1:09b7171:     public void init() {
1:09b7171:     }
1:09b7171: 
1:09b7171:     @Override
1:09b7171:     public BeanDefinition parse(Element element, org.springframework.beans.factory.xml.ParserContext parserContext) {
1:09b7171:         Metadata metadata = handler.parse(element, this.parserContext);
1:09b7171:         if (metadata instanceof ComponentMetadata) {
1:09b7171:             this.parserContext.getComponentDefinitionRegistry().registerComponentDefinition(
1:09b7171:                     (ComponentMetadata) metadata);
1:09b7171:         }
1:09b7171:         return null;
1:09b7171:     }
1:09b7171: 
1:09b7171:     @Override
1:09b7171:     public BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, org.springframework.beans.factory.xml.ParserContext parserContext) {
1:09b7171:         return definition;
1:09b7171:     }
1:09b7171: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:09b7171
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.spring;
1: 
1: import org.apache.aries.blueprint.NamespaceHandler;
1: import org.apache.aries.blueprint.ParserContext;
1: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1: import org.osgi.service.blueprint.reflect.Metadata;
1: import org.springframework.beans.factory.config.BeanDefinition;
1: import org.springframework.beans.factory.config.BeanDefinitionHolder;
1: import org.w3c.dom.Element;
1: import org.w3c.dom.Node;
1: 
1: public class SpringNamespaceHandler implements org.springframework.beans.factory.xml.NamespaceHandler {
1: 
1:     private final NamespaceHandler handler;
1:     private final ParserContext parserContext;
1: 
1:     public SpringNamespaceHandler(ParserContext parserContext, NamespaceHandler handler) {
1:         this.parserContext = parserContext;
1:         this.handler = handler;
1:     }
1: 
1:     @Override
1:     public void init() {
1:     }
1: 
1:     @Override
1:     public BeanDefinition parse(Element element, org.springframework.beans.factory.xml.ParserContext parserContext) {
1:         Metadata metadata = handler.parse(element, this.parserContext);
1:         if (metadata instanceof ComponentMetadata) {
1:             this.parserContext.getComponentDefinitionRegistry().registerComponentDefinition(
1:                     (ComponentMetadata) metadata);
1:         }
1:         return null;
1:     }
1: 
1:     @Override
1:     public BeanDefinitionHolder decorate(Node source, BeanDefinitionHolder definition, org.springframework.beans.factory.xml.ParserContext parserContext) {
1:         return definition;
1:     }
1: }
============================================================================