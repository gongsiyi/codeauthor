1:2816200: /*
1:2816200:  * Licensed to the Apache Software Foundation (ASF) under one
1:2816200:  * or more contributor license agreements.  See the NOTICE file
1:2816200:  * distributed with this work for additional information
1:2816200:  * regarding copyright ownership.  The ASF licenses this file
1:2816200:  * to you under the Apache License, Version 2.0 (the
1:2816200:  * "License"); you may not use this file except in compliance
1:2816200:  * with the License.  You may obtain a copy of the License at
2:2816200:  *
1:2816200:  *   http://www.apache.org/licenses/LICENSE-2.0
1:2816200:  *
1:2816200:  * Unless required by applicable law or agreed to in writing,
1:2816200:  * software distributed under the License is distributed on an
1:2816200:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:2816200:  * KIND, either express or implied.  See the License for the
1:2816200:  * specific language governing permissions and limitations
1:2816200:  * under the License.
1:2816200:  */
1:a99b257: 
1:2816200: package org.apache.aries.application;
1:2816200: 
1:0e0fd84: import java.io.File;
1:b05ae71: import java.io.IOException;
1:0e0fd84: import java.io.OutputStream;
1:a99b257: import java.util.Collection;
1:2816200: import java.util.List;
1:a5079e5: import java.util.Map;
1:2816200: 
1:a5079e5: import org.osgi.framework.Filter;
1:2816200: import org.osgi.framework.Version;
1:2816200: 
1:a99b257: /**
1:2816200:  * Represents the parsed contents of a DEPLOYMENT.MF file
1:2816200:  *
1:2816200:  */
1:2816200: public interface DeploymentMetadata {
1:2816200: 
1:2816200:   /**
1:2816200:    * get the value of the Application-SymbolicName header
1:2816200:    * @return the value of the Application-SymbolicName header
1:2816200:    */
1:2816200:   public String getApplicationSymbolicName();
1:2816200:   
1:2816200:   /**
1:2816200:    * get the value of the Application-Version header
1:2816200:    * @return the value of the Application-Version header
1:2816200:    */
1:2816200:   public Version getApplicationVersion();
1:2816200:   
1:2816200:   /**
1:2816200:    * get the value of the Deployed-Content header 
1:2816200:    * @return the list of the deployed content 
1:2816200:    */
1:2816200:   public List<DeploymentContent> getApplicationDeploymentContents();
1:2816200:   
1:2816200:   /**
1:ad46961:    * get the value of the Provision-Bundle header
1:7ceb4ac:    * @return the list of non-app bundles to provision.
1:ad46961:    */
1:ad46961:   public List<DeploymentContent> getApplicationProvisionBundles();
1:ad46961:   
1:ad46961:   /**
1:a5079e5:    * get the value of Deployed-UseBundle header
1:a5079e5:    * 
1:7ceb4ac:    * @return the list of bundles to use from the deployment.
1:a99b257:    */
1:a99b257:   public Collection<DeploymentContent> getDeployedUseBundle();
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * get the value of Import-Package
1:7ceb4ac:    * @return all the packages to import from non-app content.
1:a99b257:    */
1:a99b257:   public Collection<Content> getImportPackage();
1:2816200: 
1:2816200:   /**
1:a5079e5:    * Get the list of DeployedService-Import
1:a5079e5:    * @return DeployedService-Import
1:a5079e5:    */
1:6d76129:   public Collection<Filter> getDeployedServiceImport();
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * get the contents of deployment manifest in a map
1:a5079e5:    * @return    the required feature map
1:a5079e5:    */
1:a5079e5:   public Map<String, String> getHeaders();
1:a5079e5:   /**
1:43be66f:    * Obtain the associated 
1:43be66f:    * {@link org.apache.aries.application.ApplicationMetadata ApplicationMetadata}. 
1:43be66f:    * @return The application metadata.
1:2816200:    */
1:2816200:   public ApplicationMetadata getApplicationMetadata();
1:0e0fd84:   
1:43be66f:   /** 
1:43be66f:    * Persist this metadata as Manifest-formatted text. 
1:43be66f:    * @param f The file to store this metadata to
1:43be66f:    * @throws IOException
1:43be66f:    */
1:b05ae71:   public void store(File f) throws IOException;
1:43be66f:   
1:43be66f:   /** 
1:43be66f:    * Persist this metadata.  
1:43be66f:    * @param out The OutputStream to store this metadata to. 
1:43be66f:    * @throws IOException
1:43be66f:    */
1:43be66f: 
1:43be66f:   public void store(OutputStream out) throws IOException;
1:ad46961: 
1:2816200: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return the list of non-app bundles to provision.
1:    * @return the list of bundles to use from the deployment.
1:    * @return all the packages to import from non-app content.
commit:ad46961
/////////////////////////////////////////////////////////////////////////
1:    * get the value of the Provision-Bundle header
0:    * @return
1:    */
1:   public List<DeploymentContent> getApplicationProvisionBundles();
1: 
1:   /**
/////////////////////////////////////////////////////////////////////////
1: 
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:6d76129
/////////////////////////////////////////////////////////////////////////
1:   public Collection<Filter> getDeployedServiceImport();
commit:a5079e5
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
0: import org.apache.aries.application.management.InvalidAttributeException;
1: import org.osgi.framework.Filter;
/////////////////////////////////////////////////////////////////////////
1:    * get the value of Deployed-UseBundle header
1:    * 
/////////////////////////////////////////////////////////////////////////
1:    * Get the list of DeployedService-Import
1:    * @return DeployedService-Import
1:    */
0:   public Collection<Filter> getDeployedServiceImport() throws InvalidAttributeException;
1:   
1:   /**
1:    * get the contents of deployment manifest in a map
1:    * @return    the required feature map
1:    */
1:   public Map<String, String> getHeaders();
1:   /**
commit:a99b257
/////////////////////////////////////////////////////////////////////////
1: import java.util.Collection;
0: import java.util.Set;
/////////////////////////////////////////////////////////////////////////
1:   
1:   /**
0:    * get the value of Deployed-Use-Bundle
0:    * the bundle here can contain a range
0:    * @return
1:    */
1:   public Collection<DeploymentContent> getDeployedUseBundle();
1:   
1:   /**
1:    * get the value of Import-Package
0:    * @return
1:    */
1:   public Collection<Content> getImportPackage();
commit:43be66f
/////////////////////////////////////////////////////////////////////////
1:    * Obtain the associated 
1:    * {@link org.apache.aries.application.ApplicationMetadata ApplicationMetadata}. 
1:    * @return The application metadata.
1:   /** 
1:    * Persist this metadata as Manifest-formatted text. 
1:    * @param f The file to store this metadata to
1:    * @throws IOException
1:    */
1:   
1:   /** 
1:    * Persist this metadata.  
1:    * @param out The OutputStream to store this metadata to. 
1:    * @throws IOException
1:    */
1: 
1:   public void store(OutputStream out) throws IOException;
commit:b05ae71
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
/////////////////////////////////////////////////////////////////////////
1:   public void store(File f) throws IOException;
0:   public void store(OutputStream in) throws IOException;
commit:0e0fd84
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: import java.io.OutputStream;
/////////////////////////////////////////////////////////////////////////
1:   
0:   /** Stores any changes to disk using this implementation's storage form */
0:   public void store(File f);
0:   public void store(OutputStream in);
commit:2816200
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.application;
1: 
1: import java.util.List;
1: 
1: import org.osgi.framework.Version;
1: 
1: /**
1:  * Represents the parsed contents of a DEPLOYMENT.MF file
1:  *
1:  */
1: public interface DeploymentMetadata {
1: 
1:   /**
1:    * get the value of the Application-SymbolicName header
1:    * @return the value of the Application-SymbolicName header
1:    */
1:   public String getApplicationSymbolicName();
1:   
1:   /**
1:    * get the value of the Application-Version header
1:    * @return the value of the Application-Version header
1:    */
1:   public Version getApplicationVersion();
1:   
1:   /**
1:    * get the value of the Deployed-Content header 
1:    * @return the list of the deployed content 
1:    */
1:   public List<DeploymentContent> getApplicationDeploymentContents();
1:   
1:   /**
0:    * return the application this deployment metadata is associated with.
1:    * 
0:    * @return the application.
1:    */
1:   public ApplicationMetadata getApplicationMetadata();
1: }
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:8914925
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: 
0: package org.apache.aries.application;
0: 
0: import java.io.File;
0: import java.io.IOException;
0: import java.io.OutputStream;
0: import java.util.List;
0: 
0: import org.osgi.framework.Version;
0: 
0: /**
0:  * Represents the parsed contents of a DEPLOYMENT.MF file
0:  *
0:  */
0: public interface DeploymentMetadata {
0: 
0:   /**
0:    * get the value of the Application-SymbolicName header
0:    * @return the value of the Application-SymbolicName header
0:    */
0:   public String getApplicationSymbolicName();
0:   
0:   /**
0:    * get the value of the Application-Version header
0:    * @return the value of the Application-Version header
0:    */
0:   public Version getApplicationVersion();
0:   
0:   /**
0:    * get the value of the Deployed-Content header 
0:    * @return the list of the deployed content 
0:    */
0:   public List<DeploymentContent> getApplicationDeploymentContents();
0:   
0:   /**
0:    * return the application this deployment metadata is associated with.
0:    * 
0:    * @return the application.
0:    */
0:   public ApplicationMetadata getApplicationMetadata();
0:   
0:   /** Stores any changes to disk using this implementation's storage form */
0:   public void store(File f) throws IOException;
0:   public void store(OutputStream in) throws IOException;
0: }
============================================================================