1:d6eb080: /*
1:d6eb080:  * Licensed under the Apache License, Version 2.0 (the "License");
1:d6eb080:  * you may not use this file except in compliance with the License.
1:d6eb080:  * You may obtain a copy of the License at
1:d6eb080:  *
1:d6eb080:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d6eb080:  *
1:d6eb080:  * Unless required by applicable law or agreed to in writing, software
1:d6eb080:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d6eb080:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d6eb080:  * See the License for the specific language governing permissions and
1:d6eb080:  * limitations under the License.
1:d6eb080:  */
1:d6eb080: package org.apache.aries.subsystem.core.internal;
1:d6eb080: 
1:d6eb080: import java.security.PrivilegedAction;
1:d6eb080: import java.util.HashMap;
1:d6eb080: import java.util.Map;
1:d6eb080: import java.util.Map.Entry;
1:d6eb080: 
1:d6eb080: import org.apache.aries.subsystem.core.archive.Header;
1:d6eb080: 
1:d6eb080: public class GetDeploymentHeadersAction implements PrivilegedAction<Map<String, String>> {
1:d6eb080: 	private final BasicSubsystem subsystem;
1:d6eb080: 	
1:d6eb080: 	public GetDeploymentHeadersAction(BasicSubsystem subsystem) {
1:d6eb080: 		this.subsystem = subsystem;
1:d6eb080: 	}
1:d6eb080: 	
1:d6eb080: 	@Override
1:d6eb080: 	public Map<String, String> run() {
1:d6eb080: 		Map<String, Header<?>> headers = subsystem.getDeploymentManifest().getHeaders();
1:d6eb080: 		Map<String, String> result = new HashMap<String, String>(headers.size());
1:d6eb080: 		for (Entry<String, Header<?>> entry: headers.entrySet()) {
1:d6eb080: 			Header<?> value = entry.getValue();
1:d6eb080: 			result.put(entry.getKey(), value.getValue());
1:d6eb080: 		}
1:d6eb080: 		return result;
1:d6eb080: 	}
1:d6eb080: }
============================================================================
author:Tom Watson
-------------------------------------------------------------------------------
commit:d6eb080
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.core.internal;
1: 
1: import java.security.PrivilegedAction;
1: import java.util.HashMap;
1: import java.util.Map;
1: import java.util.Map.Entry;
1: 
1: import org.apache.aries.subsystem.core.archive.Header;
1: 
1: public class GetDeploymentHeadersAction implements PrivilegedAction<Map<String, String>> {
1: 	private final BasicSubsystem subsystem;
1: 	
1: 	public GetDeploymentHeadersAction(BasicSubsystem subsystem) {
1: 		this.subsystem = subsystem;
1: 	}
1: 	
1: 	@Override
1: 	public Map<String, String> run() {
1: 		Map<String, Header<?>> headers = subsystem.getDeploymentManifest().getHeaders();
1: 		Map<String, String> result = new HashMap<String, String>(headers.size());
1: 		for (Entry<String, Header<?>> entry: headers.entrySet()) {
1: 			Header<?> value = entry.getValue();
1: 			result.put(entry.getKey(), value.getValue());
1: 		}
1: 		return result;
1: 	}
1: }
============================================================================