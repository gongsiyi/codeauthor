1:7c388cb: /*
1:7c388cb:  * Licensed to the Apache Software Foundation (ASF) under one
1:7c388cb:  * or more contributor license agreements.  See the NOTICE file
1:7c388cb:  * distributed with this work for additional information
1:7c388cb:  * regarding copyright ownership.  The ASF licenses this file
1:7c388cb:  * to you under the Apache License, Version 2.0 (the
1:7c388cb:  * "License"); you may not use this file except in compliance
1:7c388cb:  * with the License.  You may obtain a copy of the License at
1:7c388cb:  *
1:7c388cb:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7c388cb:  *
1:7c388cb:  * Unless required by applicable law or agreed to in writing,
1:7c388cb:  * software distributed under the License is distributed on an
1:7c388cb:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:7c388cb:  * KIND, either express or implied.  See the License for the
1:7c388cb:  * specific language governing permissions and limitations
1:7c388cb:  * under the License.
1:7c388cb:  */
1:7c388cb: package org.apache.aries.tx.control.resource.common.impl;
1:7c388cb: 
1:7c388cb: import java.util.Map;
1:7c388cb: 
1:7c388cb: /**
1:7c388cb:  * This interface is used to control the lifecycle of configuration driven
1:7c388cb:  * resources
1:7c388cb:  */
1:7c388cb: public interface LifecycleAware {
1:7c388cb: 
1:7c388cb: 	/**
1:7c388cb: 	 * Start the configuration-driven resource. This method will
1:7c388cb: 	 * be called once, and must fail if the resource has already
1:7c388cb: 	 * started or been stopped.
1:7c388cb: 	 * @throws Exception
1:7c388cb: 	 */
1:7c388cb: 	public void start() throws Exception;
1:7c388cb: 	
1:7c388cb: 	/**
1:7c388cb: 	 * Update the configuration-driven resource. Must fail
1:7c388cb: 	 * (either with false or an exception) if the resource
1:7c388cb: 	 * is closed.
1:7c388cb: 	 * 
1:7c388cb: 	 * @return false if the configuration driven resource could
1:7c388cb: 	 *  not be updated and should be destroyed/recreated
1:7c388cb: 	 * @throws Exception
1:7c388cb: 	 */
1:7c388cb: 	public default boolean update(Map<String, Object> properties) throws Exception {
1:7c388cb: 		return false;
1:7c388cb: 	};
1:7c388cb: 	
1:7c388cb: 	/**
1:7c388cb: 	 * Close the configuration driven resource, either because the 
1:7c388cb: 	 * configuration was deleted, the bundle is stopping, or an update 
1:7c388cb: 	 * could not be dynamically applied.
1:7c388cb: 	 * 
1:7c388cb: 	 * Repeated calls to close should have no effect
1:7c388cb: 	 * 
1:7c388cb: 	 * @throws Exception
1:7c388cb: 	 */
1:7c388cb: 	public void stop() throws Exception;
1:7c388cb: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:7c388cb
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.tx.control.resource.common.impl;
1: 
1: import java.util.Map;
1: 
1: /**
1:  * This interface is used to control the lifecycle of configuration driven
1:  * resources
1:  */
1: public interface LifecycleAware {
1: 
1: 	/**
1: 	 * Start the configuration-driven resource. This method will
1: 	 * be called once, and must fail if the resource has already
1: 	 * started or been stopped.
1: 	 * @throws Exception
1: 	 */
1: 	public void start() throws Exception;
1: 	
1: 	/**
1: 	 * Update the configuration-driven resource. Must fail
1: 	 * (either with false or an exception) if the resource
1: 	 * is closed.
1: 	 * 
1: 	 * @return false if the configuration driven resource could
1: 	 *  not be updated and should be destroyed/recreated
1: 	 * @throws Exception
1: 	 */
1: 	public default boolean update(Map<String, Object> properties) throws Exception {
1: 		return false;
1: 	};
1: 	
1: 	/**
1: 	 * Close the configuration driven resource, either because the 
1: 	 * configuration was deleted, the bundle is stopping, or an update 
1: 	 * could not be dynamically applied.
1: 	 * 
1: 	 * Repeated calls to close should have no effect
1: 	 * 
1: 	 * @throws Exception
1: 	 */
1: 	public void stop() throws Exception;
1: }
============================================================================