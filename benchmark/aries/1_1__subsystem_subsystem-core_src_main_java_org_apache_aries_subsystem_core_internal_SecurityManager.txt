1:a14f2fd: /*
1:a14f2fd:  * Licensed under the Apache License, Version 2.0 (the "License");
1:a14f2fd:  * you may not use this file except in compliance with the License.
1:a14f2fd:  * You may obtain a copy of the License at
1:a14f2fd:  *
1:a14f2fd:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a14f2fd:  *
1:a14f2fd:  * Unless required by applicable law or agreed to in writing, software
1:a14f2fd:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a14f2fd:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a14f2fd:  * See the License for the specific language governing permissions and
1:a14f2fd:  * limitations under the License.
1:a14f2fd:  */
1:dc5d52f: package org.apache.aries.subsystem.core.internal;
1:dc5d52f: 
1:dc5d52f: import org.osgi.service.subsystem.Subsystem;
1:dc5d52f: import org.osgi.service.subsystem.SubsystemPermission;
1:dc5d52f: 
1:dc5d52f: public class SecurityManager {
1:dc5d52f: 	public static void checkContextPermission(Subsystem subsystem) {
1:dc5d52f: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.CONTEXT));
1:dc5d52f: 	}
1:dc5d52f: 	
1:dc5d52f: 	public static void checkExecutePermission(Subsystem subsystem) {
1:dc5d52f: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.EXECUTE));
1:dc5d52f: 	}
1:dc5d52f: 	
1:dc5d52f: 	public static void checkLifecyclePermission(Subsystem subsystem) {
1:dc5d52f: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.LIFECYCLE));
1:dc5d52f: 	}
1:dc5d52f: 	
1:dc5d52f: 	public static void checkMetadataPermission(Subsystem subsystem) {
1:dc5d52f: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.METADATA));
1:dc5d52f: 	}
1:dc5d52f: 	
1:dc5d52f: 	public static void checkPermission(SubsystemPermission permission) {
1:dc5d52f: 		java.lang.SecurityManager sm = System.getSecurityManager();
1:dc5d52f: 		if (sm == null)
1:dc5d52f: 			return;
1:dc5d52f: 		sm.checkPermission(permission);
1:dc5d52f: 	}
1:dc5d52f: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:a14f2fd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:dc5d52f
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.core.internal;
1: 
1: import org.osgi.service.subsystem.Subsystem;
1: import org.osgi.service.subsystem.SubsystemPermission;
1: 
1: public class SecurityManager {
1: 	public static void checkContextPermission(Subsystem subsystem) {
1: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.CONTEXT));
1: 	}
1: 	
1: 	public static void checkExecutePermission(Subsystem subsystem) {
1: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.EXECUTE));
1: 	}
1: 	
1: 	public static void checkLifecyclePermission(Subsystem subsystem) {
1: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.LIFECYCLE));
1: 	}
1: 	
1: 	public static void checkMetadataPermission(Subsystem subsystem) {
1: 		checkPermission(new SubsystemPermission(subsystem, SubsystemPermission.METADATA));
1: 	}
1: 	
1: 	public static void checkPermission(SubsystemPermission permission) {
1: 		java.lang.SecurityManager sm = System.getSecurityManager();
1: 		if (sm == null)
1: 			return;
1: 		sm.checkPermission(permission);
1: 	}
1: }
============================================================================