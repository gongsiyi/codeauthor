1:a8ccbc9: /**
1:a8ccbc9:  * Licensed to the Apache Software Foundation (ASF) under one
1:a8ccbc9:  * or more contributor license agreements.  See the NOTICE file
1:a8ccbc9:  * distributed with this work for additional information
1:a8ccbc9:  * regarding copyright ownership.  The ASF licenses this file
1:a8ccbc9:  * to you under the Apache License, Version 2.0 (the
1:a8ccbc9:  * "License"); you may not use this file except in compliance
1:a8ccbc9:  * with the License.  You may obtain a copy of the License at
1:a8ccbc9:  *
1:a8ccbc9:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a8ccbc9:  *
1:a8ccbc9:  * Unless required by applicable law or agreed to in writing,
1:a8ccbc9:  * software distributed under the License is distributed on an
1:a8ccbc9:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:a8ccbc9:  * KIND, either express or implied.  See the License for the
1:a8ccbc9:  * specific language governing permissions and limitations
1:a8ccbc9:  * under the License.
1:a8ccbc9:  */
1:b1379cb: package org.apache.aries.spifly.dynamic;
3:b1379cb: 
1:b1379cb: import org.apache.aries.spifly.BaseActivator;
1:e9a5257: import org.apache.aries.spifly.SpiFlyConstants;
1:b1379cb: import org.osgi.framework.BundleActivator;
1:b1379cb: import org.osgi.framework.BundleContext;
1:b1379cb: import org.osgi.framework.ServiceRegistration;
1:b1379cb: import org.osgi.framework.hooks.weaving.WeavingHook;
1:b1379cb: 
1:b1379cb: public class DynamicWeavingActivator extends BaseActivator implements BundleActivator {
1:c144094:     @SuppressWarnings("rawtypes")
1:a8ccbc9:     private ServiceRegistration weavingHookService;
1:b1379cb: 
1:b1379cb:     @Override
1:b1379cb:     public synchronized void start(BundleContext context) throws Exception {
1:b1379cb:         WeavingHook wh = new ClientWeavingHook(context, this);
1:a8ccbc9:         weavingHookService = context.registerService(WeavingHook.class.getName(), wh, null);
1:c144094: 
1:b1379cb:         super.start(context, SpiFlyConstants.SPI_CONSUMER_HEADER);
1:b1379cb:     }
1:b1379cb: 
1:b1379cb:     @Override
1:b1379cb:     public synchronized void stop(BundleContext context) throws Exception {
1:b1379cb:         weavingHookService.unregister();
1:c144094: 
1:b1379cb:         super.stop(context);
1:b1379cb:     }
1:b1379cb: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:e9a5257
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.spifly.SpiFlyConstants;
commit:c144094
/////////////////////////////////////////////////////////////////////////
1:     @SuppressWarnings("rawtypes")
1: 
1: 
commit:a8ccbc9
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
/////////////////////////////////////////////////////////////////////////
1:     private ServiceRegistration weavingHookService;
1:         weavingHookService = context.registerService(WeavingHook.class.getName(), wh, null);
commit:b1379cb
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.spifly.dynamic;
1: 
1: import org.apache.aries.spifly.BaseActivator;
0: import org.apache.aries.spifly.api.SpiFlyConstants;
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.ServiceRegistration;
1: import org.osgi.framework.hooks.weaving.WeavingHook;
1: 
1: public class DynamicWeavingActivator extends BaseActivator implements BundleActivator {
0:     private ServiceRegistration<WeavingHook> weavingHookService;
1: 
1:     @Override
1:     public synchronized void start(BundleContext context) throws Exception {
1:         WeavingHook wh = new ClientWeavingHook(context, this);
0:         weavingHookService = context.registerService(WeavingHook.class, wh, null);
1:         
1:         super.start(context, SpiFlyConstants.SPI_CONSUMER_HEADER);
1:     }
1: 
1:     @Override
1:     public synchronized void stop(BundleContext context) throws Exception {
1:         weavingHookService.unregister();
1:         
1:         super.stop(context);
1:     }
1: }
============================================================================