1:2e9d097: /*
1:2e9d097:  * Licensed to the Apache Software Foundation (ASF) under one
1:2e9d097:  * or more contributor license agreements.  See the NOTICE file
1:2e9d097:  * distributed with this work for additional information
1:2e9d097:  * regarding copyright ownership.  The ASF licenses this file
1:2e9d097:  * to you under the Apache License, Version 2.0 (the
1:2e9d097:  * "License"); you may not use this file except in compliance
1:2e9d097:  * with the License.  You may obtain a copy of the License at
1:2e9d097:  *
1:2e9d097:  *   http://www.apache.org/licenses/LICENSE-2.0
1:2e9d097:  *
1:2e9d097:  * Unless required by applicable law or agreed to in writing,
1:2e9d097:  * software distributed under the License is distributed on an
1:2e9d097:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:2e9d097:  * KIND, either express or implied.  See the License for the
1:2e9d097:  * specific language governing permissions and limitations
1:2e9d097:  * under the License.
1:2e9d097:  */
1:2e9d097: package org.apache.aries.blueprint.itests;
1:2e9d097: 
1:2e9d097: import org.apache.aries.blueprint.testbundlee.BeanCItf;
1:2e9d097: import org.junit.Test;
1:2e9d097: import org.ops4j.pax.exam.Option;
1:2e9d097: import org.osgi.framework.Bundle;
1:2e9d097: import org.osgi.service.blueprint.container.BlueprintContainer;
1:2e9d097: 
1:2e9d097: import static org.apache.aries.blueprint.itests.Helper.mvnBundle;
1:2e9d097: import static org.junit.Assert.assertEquals;
1:2e9d097: import static org.junit.Assert.assertNotNull;
1:2e9d097: import static org.junit.Assert.fail;
1:2e9d097: 
1:2e9d097: public class SpringExtenderTest extends AbstractBlueprintIntegrationTest {
1:2e9d097: 
1:2e9d097:     @Test
1:2e9d097:     public void testSpringBundle() throws Exception {
1:2e9d097:         try {
1:2e9d097:             context().getService(BeanCItf.class, 1);
1:2e9d097:             fail("The service should not be registered");
1:2e9d097:         } catch (RuntimeException e) {
1:2e9d097:             // Expected
1:2e9d097:         }
1:2e9d097: 
1:2e9d097:         Bundle bundles = context().getBundleByName("org.apache.aries.blueprint.testbundlee");
1:2e9d097:         assertNotNull(bundles);
1:2e9d097:         bundles.start();
1:2e9d097: 
1:2e9d097:         BlueprintContainer container = startBundleBlueprint("org.apache.aries.blueprint.testbundlee");
1:2e9d097:         assertNotNull(container);
1:2e9d097:         BeanCItf beanC1 = context().getService(BeanCItf.class, "(name=BeanC-1)");
1:2e9d097:         assertEquals(1, beanC1.getInitialized());
1:2e9d097:         BeanCItf beanC2 = context().getService(BeanCItf.class, "(name=BeanC-2)");
1:2e9d097:         assertEquals(1, beanC2.getInitialized());
1:2e9d097:     }
1:2e9d097: 
1:2e9d097:     @org.ops4j.pax.exam.Configuration
1:2e9d097:     public Option[] configuration() {
1:2e9d097:         return new Option[] {
1:2e9d097:             baseOptions(),
1:2e9d097:             Helper.blueprintBundles(),
1:2e9d097:             // Blueprint spring
1:2e9d097:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.spring"),
1:2e9d097:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.spring.extender"),
1:2e9d097:             // Spring
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.aopalliance"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-core"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-context"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-context-support"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-beans"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-aop"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-expression"),
1:2e9d097:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-tx"),
1:2e9d097:             // test bundle
1:2e9d097:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.testbundlee", false),
1:2e9d097:         };
1:2e9d097:     }
1:2e9d097: 
1:2e9d097: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:2e9d097
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.itests;
1: 
1: import org.apache.aries.blueprint.testbundlee.BeanCItf;
1: import org.junit.Test;
1: import org.ops4j.pax.exam.Option;
1: import org.osgi.framework.Bundle;
1: import org.osgi.service.blueprint.container.BlueprintContainer;
1: 
1: import static org.apache.aries.blueprint.itests.Helper.mvnBundle;
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertNotNull;
1: import static org.junit.Assert.fail;
1: 
1: public class SpringExtenderTest extends AbstractBlueprintIntegrationTest {
1: 
1:     @Test
1:     public void testSpringBundle() throws Exception {
1:         try {
1:             context().getService(BeanCItf.class, 1);
1:             fail("The service should not be registered");
1:         } catch (RuntimeException e) {
1:             // Expected
1:         }
1: 
1:         Bundle bundles = context().getBundleByName("org.apache.aries.blueprint.testbundlee");
1:         assertNotNull(bundles);
1:         bundles.start();
1: 
1:         BlueprintContainer container = startBundleBlueprint("org.apache.aries.blueprint.testbundlee");
1:         assertNotNull(container);
1:         BeanCItf beanC1 = context().getService(BeanCItf.class, "(name=BeanC-1)");
1:         assertEquals(1, beanC1.getInitialized());
1:         BeanCItf beanC2 = context().getService(BeanCItf.class, "(name=BeanC-2)");
1:         assertEquals(1, beanC2.getInitialized());
1:     }
1: 
1:     @org.ops4j.pax.exam.Configuration
1:     public Option[] configuration() {
1:         return new Option[] {
1:             baseOptions(),
1:             Helper.blueprintBundles(),
1:             // Blueprint spring
1:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.spring"),
1:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.spring.extender"),
1:             // Spring
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.aopalliance"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-core"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-context"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-context-support"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-beans"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-aop"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-expression"),
1:             mvnBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.spring-tx"),
1:             // test bundle
1:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.testbundlee", false),
1:         };
1:     }
1: 
1: }
============================================================================