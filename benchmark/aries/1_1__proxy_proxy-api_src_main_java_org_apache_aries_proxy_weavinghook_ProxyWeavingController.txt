1:bfc9463: /*
1:bfc9463:  * Licensed to the Apache Software Foundation (ASF) under one
1:bfc9463:  * or more contributor license agreements.  See the NOTICE file
1:bfc9463:  * distributed with this work for additional information
1:bfc9463:  * regarding copyright ownership.  The ASF licenses this file
1:bfc9463:  * to you under the Apache License, Version 2.0 (the
1:bfc9463:  * "License"); you may not use this file except in compliance
1:bfc9463:  * with the License.  You may obtain a copy of the License at
1:bfc9463:  *
1:bfc9463:  *   http://www.apache.org/licenses/LICENSE-2.0
1:bfc9463:  *
1:bfc9463:  * Unless required by applicable law or agreed to in writing,
1:bfc9463:  * software distributed under the License is distributed on an
1:bfc9463:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:bfc9463:  * KIND, either express or implied.  See the License for the
1:bfc9463:  * specific language governing permissions and limitations
1:bfc9463:  * under the License.
1:bfc9463:  */
1:bfc9463: package org.apache.aries.proxy.weavinghook;
1:bfc9463: 
1:bfc9463: import org.osgi.framework.hooks.weaving.WovenClass;
1:bfc9463: 
1:bfc9463: /**
1:bfc9463:  * Services of this interface are used by the ProxyManager's weaving implementation to
1:bfc9463:  * decide if a specific bundle should be subject to weaving. 
1:bfc9463:  * 
1:bfc9463:  * <p>If multiple ProxyWeavingController are registered all will be consulted to decide 
1:bfc9463:  *   whether to weave or not. As soon as one service says to weave a class then
1:bfc9463:  *   it will be woven and following services may not be consulted.
1:bfc9463:  * </p>
1:bfc9463:  */
1:bfc9463: public interface ProxyWeavingController
1:bfc9463: {
1:bfc9463:   /**
1:bfc9463:    * Returns true if the class should be subject to proxy weaving. If it returns
1:bfc9463:    * false then the class will not be weaved. The result of this method is immutable
1:bfc9463:    * for a given bundle. That means repeated calls given the same bundle MUST 
1:bfc9463:    * return the same response.
1:bfc9463:    * 
1:bfc9463:    * @param classToWeave the class that is a candidate to be weaved.
1:bfc9463:    * @param helper       a helper calss to allow the implementation to make intelligent weaving decisions.
1:bfc9463:    * @return true if it should be woven, false otherwise.
1:bfc9463:    */
1:bfc9463:   public boolean shouldWeave(WovenClass classToWeave, WeavingHelper helper);
1:bfc9463: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:bfc9463
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.proxy.weavinghook;
1: 
1: import org.osgi.framework.hooks.weaving.WovenClass;
1: 
1: /**
1:  * Services of this interface are used by the ProxyManager's weaving implementation to
1:  * decide if a specific bundle should be subject to weaving. 
1:  * 
1:  * <p>If multiple ProxyWeavingController are registered all will be consulted to decide 
1:  *   whether to weave or not. As soon as one service says to weave a class then
1:  *   it will be woven and following services may not be consulted.
1:  * </p>
1:  */
1: public interface ProxyWeavingController
1: {
1:   /**
1:    * Returns true if the class should be subject to proxy weaving. If it returns
1:    * false then the class will not be weaved. The result of this method is immutable
1:    * for a given bundle. That means repeated calls given the same bundle MUST 
1:    * return the same response.
1:    * 
1:    * @param classToWeave the class that is a candidate to be weaved.
1:    * @param helper       a helper calss to allow the implementation to make intelligent weaving decisions.
1:    * @return true if it should be woven, false otherwise.
1:    */
1:   public boolean shouldWeave(WovenClass classToWeave, WeavingHelper helper);
1: }
============================================================================