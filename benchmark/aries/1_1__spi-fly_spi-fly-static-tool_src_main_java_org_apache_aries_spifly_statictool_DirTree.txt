1:43cb4c6: /**
1:43cb4c6:  * Licensed to the Apache Software Foundation (ASF) under one
1:43cb4c6:  * or more contributor license agreements.  See the NOTICE file
1:43cb4c6:  * distributed with this work for additional information
1:43cb4c6:  * regarding copyright ownership.  The ASF licenses this file
1:43cb4c6:  * to you under the Apache License, Version 2.0 (the
1:43cb4c6:  * "License"); you may not use this file except in compliance
1:43cb4c6:  * with the License.  You may obtain a copy of the License at
1:43cb4c6:  *
1:43cb4c6:  *   http://www.apache.org/licenses/LICENSE-2.0
1:43cb4c6:  *
1:43cb4c6:  * Unless required by applicable law or agreed to in writing,
1:43cb4c6:  * software distributed under the License is distributed on an
1:43cb4c6:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:43cb4c6:  * KIND, either express or implied.  See the License for the
1:43cb4c6:  * specific language governing permissions and limitations
1:43cb4c6:  * under the License.
1:43cb4c6:  */
1:43cb4c6: package org.apache.aries.spifly.statictool;
1:43cb4c6: 
1:43cb4c6: import java.io.File;
1:43cb4c6: import java.util.ArrayList;
1:43cb4c6: import java.util.List;
1:43cb4c6: 
1:43cb4c6: public class DirTree {
1:43cb4c6:     List<File> fileList = new ArrayList<File>();
1:43cb4c6: 
1:43cb4c6:     public DirTree(File f) {
1:43cb4c6:         String[] names = f.list();
1:43cb4c6: 
1:43cb4c6:         if (names == null) {
1:43cb4c6:             fileList.add(f);
1:43cb4c6:             return;
1:43cb4c6:         }
1:43cb4c6: 
1:43cb4c6:         for (String name : names) {
1:43cb4c6:             File curFile = new File(f, name);
1:43cb4c6: 
1:43cb4c6:             if (curFile.isDirectory()) {
1:43cb4c6:                 fileList.addAll(new DirTree(curFile).getFiles());
1:43cb4c6:             } else {
1:43cb4c6:                 fileList.add(curFile);
1:43cb4c6:             }
1:43cb4c6:         }
1:43cb4c6:         fileList.add(f);
1:43cb4c6:     }
1:43cb4c6: 
1:43cb4c6:     public List<File> getFiles() {
1:43cb4c6:         return fileList;
1:43cb4c6:     }
1:43cb4c6: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:b1379cb
commit:43cb4c6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.spifly.statictool;
1: 
1: import java.io.File;
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: public class DirTree {
1:     List<File> fileList = new ArrayList<File>();
1: 
1:     public DirTree(File f) {
1:         String[] names = f.list();
1: 
1:         if (names == null) {
1:             fileList.add(f);
1:             return;
1:         }
1: 
1:         for (String name : names) {
1:             File curFile = new File(f, name);
1: 
1:             if (curFile.isDirectory()) {
1:                 fileList.addAll(new DirTree(curFile).getFiles());
1:             } else {
1:                 fileList.add(curFile);
1:             }
1:         }
1:         fileList.add(f);
1:     }
1: 
1:     public List<File> getFiles() {
1:         return fileList;
1:     }
1: }
============================================================================