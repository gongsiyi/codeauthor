1:628add4: /**
1:628add4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:628add4:  *  contributor license agreements.  See the NOTICE file distributed with
1:628add4:  *  this work for additional information regarding copyright ownership.
1:628add4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:628add4:  *  (the "License"); you may not use this file except in compliance with
1:628add4:  *  the License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.web.prims;
1:628add4: 
1:628add4: import java.io.*;
1:628add4: import javax.servlet.*;
1:628add4: import javax.servlet.http.*;
1:628add4: 
1:56a6860: import org.apache.aries.samples.ariestrader.util.*;
1:628add4: 
1:628add4: /**
1:628add4:  *
1:628add4:  * PingHTTPSession2 session create/destroy further extends the previous test by
1:628add4:  * invalidating the HTTP Session on every 5th user access. This results in testing
1:628add4:  * HTTPSession create and destroy
1:628add4:  *
1:628add4:  */
1:628add4: public class PingSession2 extends HttpServlet {
1:628add4: 
1:628add4: 	private static String initTime;
1:628add4: 	private static int hitCount;
1:628add4: 
1:628add4: /**
1:628add4:  * forwards post requests to the doGet method
1:628add4:  * Creation date: (11/6/2000 10:52:39 AM)
1:628add4:  * @param res javax.servlet.http.HttpServletRequest
1:628add4:  * @param res2 javax.servlet.http.HttpServletResponse
1:628add4:  */
1:628add4: public void doPost(HttpServletRequest req, HttpServletResponse res)
1:628add4: 	throws ServletException, IOException {
1:628add4: 	doGet(req, res);
1:628add4: }
1:628add4: /**
1:628add4: * this is the main method of the servlet that will service all get requests.
1:628add4: * @param request HttpServletRequest
1:628add4: * @param responce HttpServletResponce
1:628add4: **/
1:628add4: public void doGet(HttpServletRequest request, HttpServletResponse response)
1:628add4: 	throws ServletException, IOException {
1:628add4: 	HttpSession session = null;
1:628add4: 	try
1:628add4: 	{
1:628add4: 		try
1:628add4: 		{
1:628add4: 			session = request.getSession(true);
1:628add4: 		}
1:628add4: 		catch (Exception e)
1:628add4: 		{
1:628add4: 			Log.error(e, "PingSession2.doGet(...): error getting session"); 
1:628add4: 			//rethrow the exception for handling in one place.
1:628add4: 			throw e;
1:628add4: 
1:628add4: 		}
1:628add4: 
1:628add4: 		// Get the session data value
1:628add4: 		Integer ival = (Integer) session.getAttribute("sessiontest.counter");
1:628add4: 		//if there is not a counter then create one.
1:628add4: 		if (ival == null)
1:628add4: 		{
1:628add4: 			ival = new Integer(1);
1:628add4: 		}
1:628add4: 		else
1:628add4: 		{
1:628add4: 			ival = new Integer(ival.intValue() + 1);
1:628add4: 		}
1:628add4: 		session.setAttribute("sessiontest.counter", ival);
1:628add4: 		//if the session count is equal to five invalidate the session
1:628add4: 		if (ival.intValue() == 5)
1:628add4: 		{
1:628add4: 			session.invalidate();
1:628add4: 		}
1:628add4: 
1:628add4: 		try
1:628add4: 		{
1:628add4: 			// Output the page
1:628add4: 			response.setContentType("text/html");
1:628add4: 			response.setHeader("SessionTrackingTest-counter", ival.toString());
1:628add4: 
1:628add4: 			PrintWriter out = response.getWriter();
1:628add4: 			out.println(
1:628add4: 				"<html><head><title>Session Tracking Test 2</title></head><body><HR><BR><FONT size=\"+2\" color=\"#000066\">HTTP Session Test 2: Session create/invalidate <BR></FONT><FONT size=\"+1\" color=\"#000066\">Init time: "
1:628add4: 					+ initTime
1:628add4: 					+ "</FONT><BR><BR>");
1:628add4:                         hitCount++;
1:628add4: 			out.println(
1:628add4: 				"<B>Hit Count: "
1:628add4: 					+ hitCount
1:628add4: 					+ "<BR>Session hits: "
1:628add4: 					+ ival
1:628add4: 					+ "</B></body></html>"); 
1:628add4: 		}
1:628add4: 		catch (Exception e)
1:628add4: 		{
1:628add4: 			Log.error(e, "PingSession2.doGet(...): error getting session information"); 
1:628add4: 			//rethrow the exception for handling in one place.
1:628add4: 			throw e;
1:628add4: 		}
1:628add4: 
1:628add4: 	}
1:628add4: 
1:628add4: 	catch (Exception e)
1:628add4: 	{
1:b8c0170: 		//log the exception
1:628add4: 		Log.error(e, "PingSession2.doGet(...): error."); 
1:b8c0170: 		//set the server response to 500 and forward to the web app defined error page 
1:628add4: 		response.sendError(
1:628add4: 			500, 
1:628add4: 			"PingSession2.doGet(...): error. " + e.toString()); 
1:628add4: 	}
1:628add4: } //end of the method
1:628add4: /** 
1:628add4:  * returns a string of information about the servlet
1:628add4:  * @return info String: contains info about the servlet
1:628add4:  **/
1:628add4: public String getServletInfo()
1:628add4: {
1:628add4: 	return "HTTP Session Key: Tests management of a read/write unique id";
1:628add4: }
1:628add4: /**
1:628add4: * called when the class is loaded to initialize the servlet
1:628add4: * @param config ServletConfig:
1:628add4: **/
1:628add4: public void init(ServletConfig config) throws ServletException {
1:628add4: 	super.init(config);
1:628add4: 	hitCount = 0;
1:628add4: 	initTime = new java.util.Date().toString();
1:628add4: 
1:628add4: }
1:628add4: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:b8c0170
/////////////////////////////////////////////////////////////////////////
1: 		//log the exception
1: 		//set the server response to 500 and forward to the web app defined error page 
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.web.prims;
1: import org.apache.aries.samples.ariestrader.util.*;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.web.prims;
0: import org.apache.aries.samples.daytrader.util.*;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.web.prims;
1: 
1: import java.io.*;
1: import javax.servlet.*;
1: import javax.servlet.http.*;
1: 
0: import org.apache.geronimo.samples.daytrader.util.*;
1: 
1: /**
1:  *
1:  * PingHTTPSession2 session create/destroy further extends the previous test by
1:  * invalidating the HTTP Session on every 5th user access. This results in testing
1:  * HTTPSession create and destroy
1:  *
1:  */
1: public class PingSession2 extends HttpServlet {
1: 
1: 	private static String initTime;
1: 	private static int hitCount;
1: 
1: /**
1:  * forwards post requests to the doGet method
1:  * Creation date: (11/6/2000 10:52:39 AM)
1:  * @param res javax.servlet.http.HttpServletRequest
1:  * @param res2 javax.servlet.http.HttpServletResponse
1:  */
1: public void doPost(HttpServletRequest req, HttpServletResponse res)
1: 	throws ServletException, IOException {
1: 	doGet(req, res);
1: }
1: /**
1: * this is the main method of the servlet that will service all get requests.
1: * @param request HttpServletRequest
1: * @param responce HttpServletResponce
1: **/
1: public void doGet(HttpServletRequest request, HttpServletResponse response)
1: 	throws ServletException, IOException {
1: 	HttpSession session = null;
1: 	try
1: 	{
1: 		try
1: 		{
1: 			session = request.getSession(true);
1: 		}
1: 		catch (Exception e)
1: 		{
1: 			Log.error(e, "PingSession2.doGet(...): error getting session"); 
1: 			//rethrow the exception for handling in one place.
1: 			throw e;
1: 
1: 		}
1: 
1: 		// Get the session data value
1: 		Integer ival = (Integer) session.getAttribute("sessiontest.counter");
1: 		//if there is not a counter then create one.
1: 		if (ival == null)
1: 		{
1: 			ival = new Integer(1);
1: 		}
1: 		else
1: 		{
1: 			ival = new Integer(ival.intValue() + 1);
1: 		}
1: 		session.setAttribute("sessiontest.counter", ival);
1: 		//if the session count is equal to five invalidate the session
1: 		if (ival.intValue() == 5)
1: 		{
1: 			session.invalidate();
1: 		}
1: 
1: 		try
1: 		{
1: 			// Output the page
1: 			response.setContentType("text/html");
1: 			response.setHeader("SessionTrackingTest-counter", ival.toString());
1: 
1: 			PrintWriter out = response.getWriter();
1: 			out.println(
1: 				"<html><head><title>Session Tracking Test 2</title></head><body><HR><BR><FONT size=\"+2\" color=\"#000066\">HTTP Session Test 2: Session create/invalidate <BR></FONT><FONT size=\"+1\" color=\"#000066\">Init time: "
1: 					+ initTime
1: 					+ "</FONT><BR><BR>");
1:                         hitCount++;
1: 			out.println(
1: 				"<B>Hit Count: "
1: 					+ hitCount
1: 					+ "<BR>Session hits: "
1: 					+ ival
1: 					+ "</B></body></html>"); 
1: 		}
1: 		catch (Exception e)
1: 		{
1: 			Log.error(e, "PingSession2.doGet(...): error getting session information"); 
1: 			//rethrow the exception for handling in one place.
1: 			throw e;
1: 		}
1: 
1: 	}
1: 
1: 	catch (Exception e)
1: 	{
0: 		//log the excecption
1: 		Log.error(e, "PingSession2.doGet(...): error."); 
0: 		//set the server responce to 500 and forward to the web app defined error page 
1: 		response.sendError(
1: 			500, 
1: 			"PingSession2.doGet(...): error. " + e.toString()); 
1: 	}
1: } //end of the method
1: /** 
1:  * returns a string of information about the servlet
1:  * @return info String: contains info about the servlet
1:  **/
1: public String getServletInfo()
1: {
1: 	return "HTTP Session Key: Tests management of a read/write unique id";
1: }
1: /**
1: * called when the class is loaded to initialize the servlet
1: * @param config ServletConfig:
1: **/
1: public void init(ServletConfig config) throws ServletException {
1: 	super.init(config);
1: 	hitCount = 0;
1: 	initTime = new java.util.Date().toString();
1: 
1: }
1: }
============================================================================