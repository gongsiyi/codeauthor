1:d6eb080: /*
1:d6eb080:  * Copyright (c) OSGi Alliance (2006, 2012). All Rights Reserved.
1:d6eb080:  *
1:d6eb080:  * Licensed under the Apache License, Version 2.0 (the "License");
1:d6eb080:  * you may not use this file except in compliance with the License.
1:d6eb080:  * You may obtain a copy of the License at
1:d6eb080:  *
1:d6eb080:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d6eb080:  *
1:d6eb080:  * Unless required by applicable law or agreed to in writing, software
1:d6eb080:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d6eb080:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d6eb080:  * See the License for the specific language governing permissions and
1:d6eb080:  * limitations under the License.
1:d6eb080:  */
1:d6eb080: 
1:d6eb080: // This document is an experimental draft to enable interoperability
1:d6eb080: // between bundle repositories. There is currently no commitment to 
1:d6eb080: // turn this draft into an official specification.  
1:d6eb080: 
1:d6eb080: package org.apache.aries.subsystem.core.repository;
1:d6eb080: 
1:d6eb080: import java.util.Collection;
1:d6eb080: import java.util.Map;
1:d6eb080: import org.osgi.resource.Capability;
1:d6eb080: import org.osgi.resource.Requirement;
1:d6eb080: import org.osgi.resource.Resource;
1:d6eb080: 
1:d6eb080: /**
1:d6eb080:  * A repository service that contains {@link Resource resources}.
1:d6eb080:  * 
1:d6eb080:  * <p>
1:d6eb080:  * Repositories may be registered as services and may be used as by a resolve
1:d6eb080:  * context during resolver operations.
1:d6eb080:  * 
1:d6eb080:  * <p>
1:d6eb080:  * Repositories registered as services may be filtered using standard service
1:d6eb080:  * properties.
1:d6eb080:  * 
1:d6eb080:  * @ThreadSafe
1:d6eb080:  * @noimplement
1:d6eb080:  * @version $Id$
1:d6eb080:  */
1:d6eb080: public interface Repository {
1:d6eb080: 	/**
1:d6eb080: 	 * Service property to provide URLs related to this repository.
1:d6eb080: 	 * 
1:d6eb080: 	 * <p>
1:d6eb080: 	 * The value of this property must be of type {@code String},
1:d6eb080: 	 * {@code String[]}, or {@code Collection<String>}.
1:d6eb080: 	 */
1:d6eb080: 	String	URL	= "repository.url";
1:d6eb080: 
1:d6eb080: 	/**
1:d6eb080: 	 * Find the capabilities that match the specified requirements.
1:d6eb080: 	 * 
1:d6eb080: 	 * @param requirements The requirements for which matching capabilities
1:d6eb080: 	 *        should be returned. Must not be {@code null}.
1:d6eb080: 	 * @return A map of matching capabilities for the specified requirements.
1:d6eb080: 	 *         Each specified requirement must appear as a key in the map. If
1:d6eb080: 	 *         there are no matching capabilities for a specified requirement,
1:d6eb080: 	 *         then the value in the map for the specified requirement must be
1:d6eb080: 	 *         an empty collection. The returned map is the property of the
1:d6eb080: 	 *         caller and can be modified by the caller.
1:d6eb080: 	 */
1:d6eb080: 	Map<Requirement, Collection<Capability>> findProviders(Collection<? extends Requirement> requirements);
1:d6eb080: }
============================================================================
author:Tom Watson
-------------------------------------------------------------------------------
commit:d6eb080
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Copyright (c) OSGi Alliance (2006, 2012). All Rights Reserved.
1:  *
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: // This document is an experimental draft to enable interoperability
1: // between bundle repositories. There is currently no commitment to 
1: // turn this draft into an official specification.  
1: 
1: package org.apache.aries.subsystem.core.repository;
1: 
1: import java.util.Collection;
1: import java.util.Map;
1: import org.osgi.resource.Capability;
1: import org.osgi.resource.Requirement;
1: import org.osgi.resource.Resource;
1: 
1: /**
1:  * A repository service that contains {@link Resource resources}.
1:  * 
1:  * <p>
1:  * Repositories may be registered as services and may be used as by a resolve
1:  * context during resolver operations.
1:  * 
1:  * <p>
1:  * Repositories registered as services may be filtered using standard service
1:  * properties.
1:  * 
1:  * @ThreadSafe
1:  * @noimplement
1:  * @version $Id$
1:  */
1: public interface Repository {
1: 	/**
1: 	 * Service property to provide URLs related to this repository.
1: 	 * 
1: 	 * <p>
1: 	 * The value of this property must be of type {@code String},
1: 	 * {@code String[]}, or {@code Collection<String>}.
1: 	 */
1: 	String	URL	= "repository.url";
1: 
1: 	/**
1: 	 * Find the capabilities that match the specified requirements.
1: 	 * 
1: 	 * @param requirements The requirements for which matching capabilities
1: 	 *        should be returned. Must not be {@code null}.
1: 	 * @return A map of matching capabilities for the specified requirements.
1: 	 *         Each specified requirement must appear as a key in the map. If
1: 	 *         there are no matching capabilities for a specified requirement,
1: 	 *         then the value in the map for the specified requirement must be
1: 	 *         an empty collection. The returned map is the property of the
1: 	 *         caller and can be modified by the caller.
1: 	 */
1: 	Map<Requirement, Collection<Capability>> findProviders(Collection<? extends Requirement> requirements);
1: }
============================================================================