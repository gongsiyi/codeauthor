1:0d59ccb: /*
1:0d59ccb:  * Licensed to the Apache Software Foundation (ASF) under one
1:0d59ccb:  * or more contributor license agreements.  See the NOTICE file
1:0d59ccb:  * distributed with this work for additional information
1:0d59ccb:  * regarding copyright ownership.  The ASF licenses this file
1:0d59ccb:  * to you under the Apache License, Version 2.0 (the
1:0d59ccb:  * "License"); you may not use this file except in compliance
1:0d59ccb:  * with the License.  You may obtain a copy of the License at
1:0d59ccb:  *
1:0d59ccb:  *   http://www.apache.org/licenses/LICENSE-2.0
1:0d59ccb:  *
1:0d59ccb:  * Unless required by applicable law or agreed to in writing,
1:0d59ccb:  * software distributed under the License is distributed on an
1:0d59ccb:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:0d59ccb:  * KIND, either express or implied.  See the License for the
1:0d59ccb:  * specific language governing permissions and limitations
1:0d59ccb:  * under the License.
1:0d59ccb:  */
1:0d59ccb: package org.apache.aries.jpa.support.osgi.impl;
1:0d59ccb: 
1:0d59ccb: import java.lang.reflect.InvocationHandler;
1:6b01678: import java.lang.reflect.InvocationTargetException;
1:0d59ccb: import java.lang.reflect.Method;
1:0d59ccb: 
1:0d59ccb: import javax.persistence.EntityManager;
1:0d59ccb: 
1:0d59ccb: import org.apache.aries.jpa.supplier.EmSupplier;
1:0d59ccb: 
1:0d59ccb: public class EmProxy implements InvocationHandler {
1:0d59ccb:     EmSupplier emSupplier;
1:0d59ccb: 
1:0d59ccb:     public EmProxy(EmSupplier emSupplier) {
1:0d59ccb:         this.emSupplier = emSupplier;
1:0d59ccb:     }
1:0d59ccb: 
1:0d59ccb:     @Override
1:0d59ccb:     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
1:0d59ccb:         EntityManager em = emSupplier.get();
1:0d59ccb:         if (em == null) {
1:0d59ccb:             throw new IllegalStateException("EntityManager not available. Make sure you run in an @Transactional method");
1:0d59ccb:         }
1:6b01678:         try {
1:6b01678:             return method.invoke(em, args);
1:ec3ea65:         } catch (InvocationTargetException ex) { // NOSONAR
1:ec3ea65:             throw ex.getTargetException();
1:6b01678:         }
1:0d59ccb:     }
1:0d59ccb: 
1:0d59ccb: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:ec3ea65
/////////////////////////////////////////////////////////////////////////
1:         } catch (InvocationTargetException ex) { // NOSONAR
1:             throw ex.getTargetException();
commit:6b01678
/////////////////////////////////////////////////////////////////////////
1: import java.lang.reflect.InvocationTargetException;
/////////////////////////////////////////////////////////////////////////
1:         try {
1:             return method.invoke(em, args);
0:         } catch (InvocationTargetException ex) {
0:             InvocationTargetException iex = (InvocationTargetException)ex;
0:             throw iex.getTargetException();
1:         }
commit:0d59ccb
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.jpa.support.osgi.impl;
1: 
1: import java.lang.reflect.InvocationHandler;
1: import java.lang.reflect.Method;
1: 
1: import javax.persistence.EntityManager;
1: 
1: import org.apache.aries.jpa.supplier.EmSupplier;
1: 
1: public class EmProxy implements InvocationHandler {
1:     EmSupplier emSupplier;
1: 
1:     public EmProxy(EmSupplier emSupplier) {
1:         this.emSupplier = emSupplier;
1:     }
1: 
1:     @Override
1:     public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {
1:         EntityManager em = emSupplier.get();
1:         if (em == null) {
1:             throw new IllegalStateException("EntityManager not available. Make sure you run in an @Transactional method");
1:         }
0:         return method.invoke(em, args);
1:     }
1: 
1: }
============================================================================