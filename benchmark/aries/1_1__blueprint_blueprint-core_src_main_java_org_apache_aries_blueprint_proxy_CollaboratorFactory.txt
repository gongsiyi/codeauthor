1:285f3a8: /**
1:285f3a8:  * Licensed to the Apache Software Foundation (ASF) under one
1:285f3a8:  * or more contributor license agreements.  See the NOTICE file
1:285f3a8:  * distributed with this work for additional information
1:285f3a8:  * regarding copyright ownership.  The ASF licenses this file
1:285f3a8:  * to you under the Apache License, Version 2.0 (the
1:285f3a8:  * "License"); you may not use this file except in compliance
1:285f3a8:  * with the License.  You may obtain a copy of the License at
1:285f3a8:  *
1:285f3a8:  *   http://www.apache.org/licenses/LICENSE-2.0
1:285f3a8:  *
1:285f3a8:  * Unless required by applicable law or agreed to in writing,
1:285f3a8:  * software distributed under the License is distributed on an
1:285f3a8:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:285f3a8:  * KIND, either express or implied.  See the License for the
1:285f3a8:  * specific language governing permissions and limitations
1:285f3a8:  * under the License.
1:285f3a8:  */
1:285f3a8: package org.apache.aries.blueprint.proxy;
1:285f3a8: 
1:285f3a8: import org.apache.aries.blueprint.Interceptor;
1:285f3a8: import org.apache.aries.proxy.InvocationListener;
1:285f3a8: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1:285f3a8: 
1:285f3a8: import java.util.List;
1:285f3a8: 
1:285f3a8: public class CollaboratorFactory {
1:285f3a8:     public static InvocationListener create(ComponentMetadata componentMetadata, List<Interceptor> interceptors) {
1:285f3a8:         if (interceptors.size() == 1) {
1:285f3a8:             return new SingleInterceptorCollaborator(componentMetadata, interceptors.get(0));
1:285f3a8:         } else {
1:285f3a8:             return new Collaborator(componentMetadata, interceptors);
1:285f3a8:         }
1:285f3a8:     }
1:285f3a8: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:285f3a8
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.proxy;
1: 
1: import org.apache.aries.blueprint.Interceptor;
1: import org.apache.aries.proxy.InvocationListener;
1: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1: 
1: import java.util.List;
1: 
1: public class CollaboratorFactory {
1:     public static InvocationListener create(ComponentMetadata componentMetadata, List<Interceptor> interceptors) {
1:         if (interceptors.size() == 1) {
1:             return new SingleInterceptorCollaborator(componentMetadata, interceptors.get(0));
1:         } else {
1:             return new Collaborator(componentMetadata, interceptors);
1:         }
1:     }
1: }
============================================================================