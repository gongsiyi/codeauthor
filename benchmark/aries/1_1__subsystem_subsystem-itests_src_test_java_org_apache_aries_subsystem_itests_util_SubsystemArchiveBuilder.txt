1:a990e32: package org.apache.aries.subsystem.itests.util;
1:a990e32: 
1:a990e32: import java.io.ByteArrayInputStream;
1:a990e32: import java.io.ByteArrayOutputStream;
1:a990e32: import java.io.IOException;
1:a990e32: import java.io.InputStream;
1:a990e32: import java.util.jar.Attributes;
1:a990e32: import java.util.jar.Manifest;
1:a990e32: 
1:a990e32: import org.ops4j.pax.tinybundles.core.TinyBundle;
1:a990e32: import org.ops4j.pax.tinybundles.core.TinyBundles;
1:a990e32: import org.osgi.service.subsystem.SubsystemConstants;
1:a990e32: 
1:a990e32: import aQute.bnd.osgi.Constants;
1:a990e32: 
1:a990e32: public class SubsystemArchiveBuilder {
1:a990e32: 	public static final String ESA_EXTENSION = ".esa";
1:a990e32: 	public static final String JAR_EXTENSION = ".jar";
1:a990e32: 	public static final String SUBSYSTEM_MANIFEST_FILE = "OSGI-INF/SUBSYSTEM.MF";
1:a990e32: 	
1:a990e32: 	private final TinyBundle bundle;
1:a990e32: 	private final Manifest manifest;
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder() {
1:a990e32: 		bundle = TinyBundles.bundle();
1:a990e32: 		manifest = new Manifest();
1:a990e32: 		Attributes attributes = manifest.getMainAttributes();
1:a990e32: 		attributes.putValue(Attributes.Name.MANIFEST_VERSION.toString(), "1.0");
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public InputStream build() throws IOException {
1:a990e32: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
1:a990e32: 		manifest.write(baos);
1:a990e32: 		baos.close();
1:a990e32: 		return bundle
1:a990e32: 				.add(SUBSYSTEM_MANIFEST_FILE, new ByteArrayInputStream(baos.toByteArray()))
1:a990e32: 				.build();
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder bundle(String name, InputStream value) {
1:a990e32: 		return file(name + JAR_EXTENSION, value);
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder content(String value) {
1:a990e32: 		return header(SubsystemConstants.SUBSYSTEM_CONTENT, value);
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder exportPackage(String value) {
1:a990e32: 		return header(Constants.EXPORT_PACKAGE, value);
1:a990e32: 	}
1:a990e32: 	
1:b66ad7c: 	public SubsystemArchiveBuilder exportService(String value) {
1:b66ad7c: 		return header(SubsystemConstants.SUBSYSTEM_EXPORTSERVICE, value);
1:b66ad7c: 	}
1:b66ad7c: 	
1:a990e32: 	public SubsystemArchiveBuilder file(String name, InputStream value) {
1:a990e32: 		bundle.add(name, value);
1:a990e32: 		return this;
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder header(String name, String value) {
1:a990e32: 		manifest.getMainAttributes().putValue(name, value);
1:a990e32: 		return this;
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder importPackage(String value) {
1:a990e32: 		return header(Constants.IMPORT_PACKAGE, value);
1:afe81b7: 	}
1:afe81b7: 	
1:b66ad7c: 	public SubsystemArchiveBuilder importService(String value) {
1:b66ad7c: 		return header(SubsystemConstants.SUBSYSTEM_IMPORTSERVICE, value);
1:a990e32: 	}
1:a990e32: 	
1:645a92b: 	public SubsystemArchiveBuilder provideCapability(String value) {
1:645a92b: 		return header(Constants.PROVIDE_CAPABILITY, value);
1:645a92b: 	}
1:645a92b: 	
1:b66ad7c: 	public SubsystemArchiveBuilder requireBundle(String value) {
1:b66ad7c: 		return header(Constants.REQUIRE_BUNDLE, value);
1:b66ad7c: 	}
1:b66ad7c: 	
1:b66ad7c: 	public SubsystemArchiveBuilder requireCapability(String value) {
1:b66ad7c: 		return header(Constants.REQUIRE_CAPABILITY, value);
1:b66ad7c: 	}
1:b66ad7c: 	
1:a990e32: 	public SubsystemArchiveBuilder subsystem(String name, InputStream value) {
1:a990e32: 		return file(name + ESA_EXTENSION, value);
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder symbolicName(String value) {
1:a990e32: 		return header(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME, value);
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public SubsystemArchiveBuilder type(String value) {
1:a990e32: 		return header(SubsystemConstants.SUBSYSTEM_TYPE, value);
1:a990e32: 	}
1:a990e32: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:b66ad7c
/////////////////////////////////////////////////////////////////////////
1: 	public SubsystemArchiveBuilder exportService(String value) {
1: 		return header(SubsystemConstants.SUBSYSTEM_EXPORTSERVICE, value);
1: 	}
1: 	
/////////////////////////////////////////////////////////////////////////
1: 	public SubsystemArchiveBuilder importService(String value) {
1: 		return header(SubsystemConstants.SUBSYSTEM_IMPORTSERVICE, value);
1: 	public SubsystemArchiveBuilder requireBundle(String value) {
1: 		return header(Constants.REQUIRE_BUNDLE, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder requireCapability(String value) {
1: 		return header(Constants.REQUIRE_CAPABILITY, value);
1: 	}
1: 	
commit:afe81b7
/////////////////////////////////////////////////////////////////////////
0: 	public SubsystemArchiveBuilder requireBundle(String value) {
0: 		return header(Constants.REQUIRE_BUNDLE, value);
1: 	}
1: 	
commit:645a92b
/////////////////////////////////////////////////////////////////////////
1: 	public SubsystemArchiveBuilder provideCapability(String value) {
1: 		return header(Constants.PROVIDE_CAPABILITY, value);
1: 	}
1: 	
commit:a990e32
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.itests.util;
1: 
1: import java.io.ByteArrayInputStream;
1: import java.io.ByteArrayOutputStream;
1: import java.io.IOException;
1: import java.io.InputStream;
1: import java.util.jar.Attributes;
1: import java.util.jar.Manifest;
1: 
1: import org.ops4j.pax.tinybundles.core.TinyBundle;
1: import org.ops4j.pax.tinybundles.core.TinyBundles;
1: import org.osgi.service.subsystem.SubsystemConstants;
1: 
1: import aQute.bnd.osgi.Constants;
1: 
1: public class SubsystemArchiveBuilder {
1: 	public static final String ESA_EXTENSION = ".esa";
1: 	public static final String JAR_EXTENSION = ".jar";
1: 	public static final String SUBSYSTEM_MANIFEST_FILE = "OSGI-INF/SUBSYSTEM.MF";
1: 	
1: 	private final TinyBundle bundle;
1: 	private final Manifest manifest;
1: 	
1: 	public SubsystemArchiveBuilder() {
1: 		bundle = TinyBundles.bundle();
1: 		manifest = new Manifest();
1: 		Attributes attributes = manifest.getMainAttributes();
1: 		attributes.putValue(Attributes.Name.MANIFEST_VERSION.toString(), "1.0");
1: 	}
1: 	
1: 	public InputStream build() throws IOException {
1: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
1: 		manifest.write(baos);
1: 		baos.close();
1: 		return bundle
1: 				.add(SUBSYSTEM_MANIFEST_FILE, new ByteArrayInputStream(baos.toByteArray()))
1: 				.build();
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder bundle(String name, InputStream value) {
1: 		return file(name + JAR_EXTENSION, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder content(String value) {
1: 		return header(SubsystemConstants.SUBSYSTEM_CONTENT, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder exportPackage(String value) {
1: 		return header(Constants.EXPORT_PACKAGE, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder file(String name, InputStream value) {
1: 		bundle.add(name, value);
1: 		return this;
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder header(String name, String value) {
1: 		manifest.getMainAttributes().putValue(name, value);
1: 		return this;
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder importPackage(String value) {
1: 		return header(Constants.IMPORT_PACKAGE, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder subsystem(String name, InputStream value) {
1: 		return file(name + ESA_EXTENSION, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder symbolicName(String value) {
1: 		return header(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME, value);
1: 	}
1: 	
1: 	public SubsystemArchiveBuilder type(String value) {
1: 		return header(SubsystemConstants.SUBSYSTEM_TYPE, value);
1: 	}
1: }
============================================================================