1:76bff89: /*
1:76bff89:  * Licensed to the Apache Software Foundation (ASF) under one
1:76bff89:  * or more contributor license agreements.  See the NOTICE file
1:76bff89:  * distributed with this work for additional information
1:76bff89:  * regarding copyright ownership.  The ASF licenses this file
1:76bff89:  * to you under the Apache License, Version 2.0 (the
1:76bff89:  * "License"); you may not use this file except in compliance
1:76bff89:  * with the License.  You may obtain a copy of the License at
1:76bff89:  *
1:76bff89:  *   http://www.apache.org/licenses/LICENSE-2.0
1:76bff89:  *
1:76bff89:  * Unless required by applicable law or agreed to in writing,
1:76bff89:  * software distributed under the License is distributed on an
1:76bff89:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:76bff89:  * KIND, either express or implied.  See the License for the
1:76bff89:  * specific language governing permissions and limitations
1:76bff89:  * under the License.
1:76bff89:  */
1:76bff89: package org.apache.aries.transaction;
1:94cf93b: 
1:76bff89: import static org.junit.Assert.assertEquals;
1:76bff89: import static org.junit.Assert.assertNotNull;
1:76bff89: import static org.junit.Assert.assertNull;
1:94cf93b: 
1:76bff89: import org.apache.aries.blueprint.ComponentDefinitionRegistry;
1:76bff89: import org.apache.aries.blueprint.PassThroughMetadata;
1:0bfefd9: import org.apache.aries.transaction.parsing.TxNamespaceHandler;
1:76bff89: import org.junit.Test;
1:76bff89: import org.osgi.service.blueprint.reflect.BeanMetadata;
1:94cf93b: 
1:76bff89: public class AnnotationEnablingNameSpaceHandlerTest extends BaseNameSpaceHandlerSetup {
1:94cf93b:     
1:76bff89:     @Test
1:76bff89:     public void testAnnotationEnabled() throws Exception
1:76bff89:     {
1:76bff89:       ComponentDefinitionRegistry cdr = parseCDR("enable-annotations.xml");
1:febc5c2:       checkCompTop(cdr);
1:94cf93b:       BeanMetadata pmd = (BeanMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
1:76bff89:       assertNotNull(pmd);
1:94cf93b:       assertEquals(3, pmd.getArguments().size());
1:94cf93b:       assertEquals(cdr, ((PassThroughMetadata)pmd.getArguments().get(0).getValue()).getObject());
1:bd98451: //      assertEquals(tm, ((PassThroughMetadata) pmd.getArguments().get(2).getValue()).getObject());
1:76bff89:     }
15:76bff89:     
1:76bff89:     @Test
1:76bff89:     public void testAnnotationDisabled() throws Exception
1:76bff89:     {
1:76bff89:         ComponentDefinitionRegistry cdr = parseCDR("enable-annotations2.xml");
1:febc5c2:         checkCompTop(cdr);
1:febc5c2:         BeanMetadata pmd = (BeanMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
1:febc5c2:         assertNull(pmd);
1:febc5c2:     }
1:febc5c2: 
1:febc5c2:     private void checkCompTop(ComponentDefinitionRegistry cdr) {
2:76bff89:         BeanMetadata compTop = (BeanMetadata) cdr.getComponentDefinition("top");
2:76bff89:         assertNotNull(compTop);
2:76bff89:         assertEquals(0, cdr.getInterceptors(compTop).size());
1:bd98451:         //assertNull(txenhancer.getComponentMethodTxAttribute(compTop, "increment"));
1:76bff89:     }
1:76bff89: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:bd98451
/////////////////////////////////////////////////////////////////////////
1: //      assertEquals(tm, ((PassThroughMetadata) pmd.getArguments().get(2).getValue()).getObject());
/////////////////////////////////////////////////////////////////////////
1:         //assertNull(txenhancer.getComponentMethodTxAttribute(compTop, "increment"));
commit:febc5c2
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:       checkCompTop(cdr);
/////////////////////////////////////////////////////////////////////////
1:         checkCompTop(cdr);
1:         BeanMetadata pmd = (BeanMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
1:         assertNull(pmd);
1:     }
1: 
1:     private void checkCompTop(ComponentDefinitionRegistry cdr) {
commit:94cf93b
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.blueprint.container.BeanRecipe;
0: import org.apache.aries.blueprint.container.BlueprintContainerImpl;
0: import org.osgi.service.blueprint.reflect.Metadata;
/////////////////////////////////////////////////////////////////////////
1: 
1:       BeanMetadata pmd = (BeanMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
1: 
1:       assertEquals(3, pmd.getArguments().size());
1:       assertEquals(cdr, ((PassThroughMetadata)pmd.getArguments().get(0).getValue()).getObject());
0:       assertEquals(txenhancer, ((PassThroughMetadata) pmd.getArguments().get(2).getValue()).getObject());
/////////////////////////////////////////////////////////////////////////
1: 
1: 
0:         BeanMetadata pmd = (BeanMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
commit:0bfefd9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.transaction.parsing.TxNamespaceHandler;
/////////////////////////////////////////////////////////////////////////
0:       PassThroughMetadata pmd = (PassThroughMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
/////////////////////////////////////////////////////////////////////////
0:         PassThroughMetadata pmd = (PassThroughMetadata) cdr.getComponentDefinition(TxNamespaceHandler.ANNOTATION_PARSER_BEAN_NAME);
commit:aa15c54
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.transaction.annotations.TransactionPropagationType;
/////////////////////////////////////////////////////////////////////////
0:       assertEquals(TransactionPropagationType.Required, txenhancer.getComponentMethodTxAttribute(compTop, "increment"));
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:76bff89
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.transaction;
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertNotNull;
1: import static org.junit.Assert.assertNull;
1: 
1: import org.apache.aries.blueprint.ComponentDefinitionRegistry;
1: import org.apache.aries.blueprint.PassThroughMetadata;
0: import org.apache.aries.transaction.parsing.AnnotationParser;
0: import org.apache.aries.transaction.pojo.AnnotatedPojo;
1: import org.junit.Test;
1: import org.osgi.service.blueprint.reflect.BeanMetadata;
1: 
1: public class AnnotationEnablingNameSpaceHandlerTest extends BaseNameSpaceHandlerSetup {
1:     
1:     @Test
1:     public void testAnnotationEnabled() throws Exception
1:     {
1:       ComponentDefinitionRegistry cdr = parseCDR("enable-annotations.xml");
1:             
1:       BeanMetadata compTop = (BeanMetadata) cdr.getComponentDefinition("top");
1:       
1:       assertNotNull(compTop);
1:       assertEquals(0, cdr.getInterceptors(compTop).size());
0:       assertNull(txenhancer.getComponentMethodTxAttribute(compTop, "increment"));
1:       
1:       
0:       PassThroughMetadata pmd = (PassThroughMetadata) cdr.getComponentDefinition(Constants.ANNOTATION_PARSER_BEAN_NAME);
1:       assertNotNull(pmd);
1:       
0:       AnnotationParser parser  = (AnnotationParser) pmd.getObject();
0:       parser.beforeInit(new AnnotatedPojo(), "top", null, compTop);
1:       
0:       assertEquals("Required", txenhancer.getComponentMethodTxAttribute(compTop, "increment"));
0:       assertEquals(1, cdr.getInterceptors(compTop).size());
1:     }
1:     
1:     @Test
1:     public void testAnnotationDisabled() throws Exception
1:     {
1:         ComponentDefinitionRegistry cdr = parseCDR("enable-annotations2.xml");
1:               
1:         BeanMetadata compTop = (BeanMetadata) cdr.getComponentDefinition("top");
1:         
1:         assertNotNull(compTop);
1:         assertEquals(0, cdr.getInterceptors(compTop).size());
0:         assertNull(txenhancer.getComponentMethodTxAttribute(compTop, "increment"));
1:         
1:         
0:         PassThroughMetadata pmd = (PassThroughMetadata) cdr.getComponentDefinition(Constants.ANNOTATION_PARSER_BEAN_NAME);
0:         assertNull(pmd);
1:     }
1: }
============================================================================