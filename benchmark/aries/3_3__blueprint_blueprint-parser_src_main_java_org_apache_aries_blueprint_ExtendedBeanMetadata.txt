1:f13c6ac: /**
1:f13c6ac:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:f13c6ac:  *  contributor license agreements.  See the NOTICE file distributed with
1:f13c6ac:  *  this work for additional information regarding copyright ownership.
1:f13c6ac:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:f13c6ac:  *  (the "License"); you may not use this file except in compliance with
1:f13c6ac:  *  the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *     http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  *  Unless required by applicable law or agreed to in writing, software
1:f13c6ac:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:f13c6ac:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f13c6ac:  *  See the License for the specific language governing permissions and
1:f13c6ac:  *  limitations under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint;
1:f13c6ac: 
1:f13c6ac: import org.osgi.service.blueprint.reflect.BeanMetadata;
1:f13c6ac: 
1:f13c6ac: /**
1:f13c6ac:  * An extended <code>BeanMetadata</code> that allows specifying if
1:f13c6ac:  * the bean instances are processors or not.
1:f13c6ac:  * 
1:f13c6ac:  * Such processors have to be instantiated before instantiating all
1:f13c6ac:  * other singletons, but to avoid breaking the lazy activation of
1:f13c6ac:  * bundles, the Blueprint container needs to be aware of those and not
1:f13c6ac:  * try to load the class to perform some introspection.
1:f13c6ac:  */
1:f13c6ac: public interface ExtendedBeanMetadata extends BeanMetadata {
1:f13c6ac: 
1:f13c6ac:     boolean isProcessor();
1:f13c6ac:     
1:f13c6ac:     /**
1:f13c6ac:      * Provide an actual class, this overrides the class name if set. This is
1:f13c6ac:      * useful for Namespace Handler services that do not want to force the
1:f13c6ac:      * Blueprint bundle to import implementation classes.
1:f13c6ac:      *
1:f13c6ac:      * @return Return the class to use in runtime or <code>null</code>.
1:f13c6ac:      */
1:f13c6ac:     
1:f13c6ac:     Class<?> getRuntimeClass();
1:f13c6ac: 
1:d08aba3:     /**
1:d08aba3:      * Whether the bean allows properties to be injected directly into its fields in the case
1:d08aba3:      * where an appropriate setter method is not available.
1:d08aba3:      * @return Whether field injection is allowed
1:d08aba3:      */
1:d08aba3:     boolean getFieldInjection();
1:f13c6ac: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:09a7647
commit:d08aba3
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Whether the bean allows properties to be injected directly into its fields in the case
1:      * where an appropriate setter method is not available.
1:      * @return Whether field injection is allowed
1:      */
1:     boolean getFieldInjection();
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.blueprint;
1: 
1: import org.osgi.service.blueprint.reflect.BeanMetadata;
1: 
1: /**
1:  * An extended <code>BeanMetadata</code> that allows specifying if
1:  * the bean instances are processors or not.
1:  * 
1:  * Such processors have to be instantiated before instantiating all
1:  * other singletons, but to avoid breaking the lazy activation of
1:  * bundles, the Blueprint container needs to be aware of those and not
1:  * try to load the class to perform some introspection.
1:  */
1: public interface ExtendedBeanMetadata extends BeanMetadata {
1: 
1:     boolean isProcessor();
1:     
1:     /**
1:      * Provide an actual class, this overrides the class name if set. This is
1:      * useful for Namespace Handler services that do not want to force the
1:      * Blueprint bundle to import implementation classes.
1:      *
1:      * @return Return the class to use in runtime or <code>null</code>.
1:      */
1:     
1:     Class<?> getRuntimeClass();
1: 
1: }
============================================================================