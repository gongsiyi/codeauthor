1:4243a2b: /**
1:4243a2b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4243a2b:  * contributor license agreements.  See the NOTICE file distributed with
1:4243a2b:  * this work for additional information regarding copyright ownership.
1:4243a2b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4243a2b:  * (the "License"); you may not use this file except in compliance with
1:4243a2b:  * the License.  You may obtain a copy of the License at
1:4243a2b:  *
1:4243a2b:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4243a2b:  *
1:4243a2b:  * Unless required by applicable law or agreed to in writing, software
1:4243a2b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4243a2b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4243a2b:  * See the License for the specific language governing permissions and
1:4243a2b:  * limitations under the License.
1:4243a2b:  */
1:4243a2b: package org.apache.aries.transaction.jms.internal;
1:4243a2b: 
1:4243a2b: /**
1:4243a2b:  * A cache key for the connection details
1:4243a2b:  * 
1:4243a2b:  * 
1:4243a2b:  */
1:4243a2b: public class ConnectionKey {
1:4243a2b:     private String userName;
1:4243a2b:     private String password;
1:4243a2b:     private int hash;
1:4243a2b: 
1:4243a2b:     public ConnectionKey(String userName, String password) {
1:4243a2b:         this.password = password;
1:4243a2b:         this.userName = userName;
1:4243a2b:         hash = 31;
1:4243a2b:         if (userName != null) {
1:4243a2b:             hash += userName.hashCode();
1:4243a2b:         }
1:4243a2b:         hash *= 31;
1:4243a2b:         if (password != null) {
1:4243a2b:             hash += password.hashCode();
1:4243a2b:         }
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public int hashCode() {
1:4243a2b:         return hash;
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public boolean equals(Object that) {
1:4243a2b:         if (this == that) {
1:4243a2b:             return true;
1:4243a2b:         }
1:4243a2b:         if (that instanceof ConnectionKey) {
1:4243a2b:             return equals((ConnectionKey)that);
1:4243a2b:         }
1:4243a2b:         return false;
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public boolean equals(ConnectionKey that) {
1:4243a2b:         return isEqual(this.userName, that.userName) && isEqual(this.password, that.password);
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public String getPassword() {
1:4243a2b:         return password;
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public String getUserName() {
1:4243a2b:         return userName;
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public static boolean isEqual(Object o1, Object o2) {
1:4243a2b:         if (o1 == o2) {
1:4243a2b:             return true;
1:4243a2b:         }
1:4243a2b:         return o1 != null && o2 != null && o1.equals(o2);
1:4243a2b:     }
1:4243a2b: 
1:4243a2b: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:4243a2b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.transaction.jms.internal;
1: 
1: /**
1:  * A cache key for the connection details
1:  * 
1:  * 
1:  */
1: public class ConnectionKey {
1:     private String userName;
1:     private String password;
1:     private int hash;
1: 
1:     public ConnectionKey(String userName, String password) {
1:         this.password = password;
1:         this.userName = userName;
1:         hash = 31;
1:         if (userName != null) {
1:             hash += userName.hashCode();
1:         }
1:         hash *= 31;
1:         if (password != null) {
1:             hash += password.hashCode();
1:         }
1:     }
1: 
1:     public int hashCode() {
1:         return hash;
1:     }
1: 
1:     public boolean equals(Object that) {
1:         if (this == that) {
1:             return true;
1:         }
1:         if (that instanceof ConnectionKey) {
1:             return equals((ConnectionKey)that);
1:         }
1:         return false;
1:     }
1: 
1:     public boolean equals(ConnectionKey that) {
1:         return isEqual(this.userName, that.userName) && isEqual(this.password, that.password);
1:     }
1: 
1:     public String getPassword() {
1:         return password;
1:     }
1: 
1:     public String getUserName() {
1:         return userName;
1:     }
1: 
1:     public static boolean isEqual(Object o1, Object o2) {
1:         if (o1 == o2) {
1:             return true;
1:         }
1:         return o1 != null && o2 != null && o1.equals(o2);
1:     }
1: 
1: }
============================================================================