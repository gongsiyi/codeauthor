1:51d13b3: /**
1:51d13b3:  * Licensed to the Apache Software Foundation (ASF) under one
1:51d13b3:  * or more contributor license agreements.  See the NOTICE file
1:51d13b3:  * distributed with this work for additional information
1:51d13b3:  * regarding copyright ownership.  The ASF licenses this file
1:51d13b3:  * to you under the Apache License, Version 2.0 (the
1:51d13b3:  * "License"); you may not use this file except in compliance
1:51d13b3:  * with the License.  You may obtain a copy of the License at
1:51d13b3:  *
1:51d13b3:  *   http://www.apache.org/licenses/LICENSE-2.0
1:51d13b3:  *
1:51d13b3:  * Unless required by applicable law or agreed to in writing,
1:51d13b3:  * software distributed under the License is distributed on an
1:51d13b3:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:51d13b3:  * KIND, either express or implied.  See the License for the
1:51d13b3:  * specific language governing permissions and limitations
1:51d13b3:  * under the License.
1:51d13b3:  */
1:51d13b3: package org.apache.aries.samples.blog.comment.ejb;
1:51d13b3: 
1:51d13b3: import java.util.Date;
1:51d13b3: 
1:51d13b3: import javax.naming.InitialContext;
1:51d13b3: import javax.naming.NamingException;
1:51d13b3: import javax.persistence.Entity;
1:51d13b3: import javax.persistence.GeneratedValue;
1:51d13b3: import javax.persistence.Id;
1:51d13b3: import javax.persistence.Temporal;
1:51d13b3: import javax.persistence.TemporalType;
1:51d13b3: 
1:51d13b3: import org.apache.aries.samples.blog.api.comment.persistence.Comment;
1:51d13b3: import org.apache.aries.samples.blog.api.persistence.Author;
1:51d13b3: import org.apache.aries.samples.blog.api.persistence.BlogPersistenceService;
1:51d13b3: import org.apache.aries.samples.blog.api.persistence.Entry;
1:51d13b3: 
1:51d13b3: @Entity(name="Comment")
1:51d13b3: public class CommentImpl implements Comment{
1:51d13b3: 
1:51d13b3:   @Id
1:51d13b3:   @GeneratedValue
1:51d13b3:   private int id;
1:51d13b3:   
1:51d13b3:   private String comment;
1:51d13b3:   
1:51d13b3:   @Temporal(TemporalType.TIMESTAMP)
1:51d13b3:   private Date creationDate;
1:51d13b3:   
1:51d13b3:   //Details for author
1:51d13b3:   private String authorId;
1:51d13b3:   
1:51d13b3:   //Details for entry
1:51d13b3:   private long entryId;
1:51d13b3:   
1:51d13b3:   public CommentImpl(String comment, String authorId, long entryId) {
1:51d13b3:     this.comment = comment;
1:51d13b3:     this.authorId = authorId;
1:51d13b3:     this.entryId = entryId;
1:51d13b3:     this.creationDate = new Date();
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public String getComment() {
1:51d13b3:     return comment;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public Date getCreationDate() {
1:51d13b3:     return creationDate;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public int getId() {
1:51d13b3:     return id;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public Author getAuthor() {
1:51d13b3:     try {
1:51d13b3:       BlogPersistenceService bps = (BlogPersistenceService) new InitialContext().lookup(
1:51d13b3:           "osgi:service/" + BlogPersistenceService.class.getName());
1:51d13b3:       return bps.getAuthor(authorId);
1:51d13b3:     } catch (NamingException e) {
1:51d13b3:       throw new RuntimeException(e);
1:51d13b3:     }
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public Entry getEntry() {
1:51d13b3:     try {
1:51d13b3:       BlogPersistenceService bps = (BlogPersistenceService) new InitialContext().lookup(
1:51d13b3:           "osgi:service/" + BlogPersistenceService.class.getName());
1:51d13b3:       return bps.getBlogEntryById(entryId);
1:51d13b3:     } catch (NamingException e) {
1:51d13b3:       throw new RuntimeException(e);
1:51d13b3:     }
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public String getAuthorId() {
1:51d13b3:     return authorId;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public void setAuthorId(String authorId) {
1:51d13b3:     this.authorId = authorId;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public long getEntryId() {
1:51d13b3:     return entryId;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public void setEntryId(long entryId) {
1:51d13b3:     this.entryId = entryId;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public void setId(int id) {
1:51d13b3:     this.id = id;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public void setComment(String comment) {
1:51d13b3:     this.comment = comment;
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public void setCreationDate(Date creationDate) {
1:51d13b3:     this.creationDate = creationDate;
1:51d13b3:   }
1:51d13b3: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:51d13b3
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.blog.comment.ejb;
1: 
1: import java.util.Date;
1: 
1: import javax.naming.InitialContext;
1: import javax.naming.NamingException;
1: import javax.persistence.Entity;
1: import javax.persistence.GeneratedValue;
1: import javax.persistence.Id;
1: import javax.persistence.Temporal;
1: import javax.persistence.TemporalType;
1: 
1: import org.apache.aries.samples.blog.api.comment.persistence.Comment;
1: import org.apache.aries.samples.blog.api.persistence.Author;
1: import org.apache.aries.samples.blog.api.persistence.BlogPersistenceService;
1: import org.apache.aries.samples.blog.api.persistence.Entry;
1: 
1: @Entity(name="Comment")
1: public class CommentImpl implements Comment{
1: 
1:   @Id
1:   @GeneratedValue
1:   private int id;
1:   
1:   private String comment;
1:   
1:   @Temporal(TemporalType.TIMESTAMP)
1:   private Date creationDate;
1:   
1:   //Details for author
1:   private String authorId;
1:   
1:   //Details for entry
1:   private long entryId;
1:   
1:   public CommentImpl(String comment, String authorId, long entryId) {
1:     this.comment = comment;
1:     this.authorId = authorId;
1:     this.entryId = entryId;
1:     this.creationDate = new Date();
1:   }
1: 
1:   public String getComment() {
1:     return comment;
1:   }
1: 
1:   public Date getCreationDate() {
1:     return creationDate;
1:   }
1: 
1:   public int getId() {
1:     return id;
1:   }
1: 
1:   public Author getAuthor() {
1:     try {
1:       BlogPersistenceService bps = (BlogPersistenceService) new InitialContext().lookup(
1:           "osgi:service/" + BlogPersistenceService.class.getName());
1:       return bps.getAuthor(authorId);
1:     } catch (NamingException e) {
1:       throw new RuntimeException(e);
1:     }
1:   }
1: 
1:   public Entry getEntry() {
1:     try {
1:       BlogPersistenceService bps = (BlogPersistenceService) new InitialContext().lookup(
1:           "osgi:service/" + BlogPersistenceService.class.getName());
1:       return bps.getBlogEntryById(entryId);
1:     } catch (NamingException e) {
1:       throw new RuntimeException(e);
1:     }
1:   }
1: 
1:   public String getAuthorId() {
1:     return authorId;
1:   }
1: 
1:   public void setAuthorId(String authorId) {
1:     this.authorId = authorId;
1:   }
1: 
1:   public long getEntryId() {
1:     return entryId;
1:   }
1: 
1:   public void setEntryId(long entryId) {
1:     this.entryId = entryId;
1:   }
1: 
1:   public void setId(int id) {
1:     this.id = id;
1:   }
1: 
1:   public void setComment(String comment) {
1:     this.comment = comment;
1:   }
1: 
1:   public void setCreationDate(Date creationDate) {
1:     this.creationDate = creationDate;
1:   }
1: }
============================================================================