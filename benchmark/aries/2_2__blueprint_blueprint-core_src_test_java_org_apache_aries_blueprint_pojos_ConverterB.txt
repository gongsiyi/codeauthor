1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.pojos;
1:f13c6ac: 
1:f13c6ac: import java.net.URI;
1:f13c6ac: 
1:f13c6ac: import org.osgi.service.blueprint.container.ReifiedType;
1:f13c6ac: import org.osgi.service.blueprint.container.Converter;
1:f13c6ac: 
1:f13c6ac: public class ConverterB implements Converter {
1:f13c6ac: 
1:f13c6ac:     public boolean canConvert(Object fromValue, ReifiedType toType) {
1:f13c6ac:         return fromValue instanceof String && toType.getRawClass() == URI.class;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Object convert(Object source, ReifiedType toType) throws Exception {
1:f13c6ac:         if (source instanceof String) {
1:f13c6ac:             return new URI((String) source);
1:f13c6ac:         }
1:f13c6ac:         throw new Exception("Unable to convert from " + (source != null ? source.getClass().getName() : "<null>") + " to " + URI.class.getName());
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.pojos;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint.pojos;
1: 
1: import java.net.URI;
1: 
1: import org.osgi.service.blueprint.container.ReifiedType;
1: import org.osgi.service.blueprint.container.Converter;
1: 
1: public class ConverterB implements Converter {
1: 
1:     public boolean canConvert(Object fromValue, ReifiedType toType) {
1:         return fromValue instanceof String && toType.getRawClass() == URI.class;
1:     }
1: 
1:     public Object convert(Object source, ReifiedType toType) throws Exception {
1:         if (source instanceof String) {
1:             return new URI((String) source);
1:         }
1:         throw new Exception("Unable to convert from " + (source != null ? source.getClass().getName() : "<null>") + " to " + URI.class.getName());
1:     }
1: 
1: }
============================================================================