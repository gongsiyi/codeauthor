1:6aa0635: /*
1:6aa0635:  * Licensed to the Apache Software Foundation (ASF) under one
1:6aa0635:  * or more contributor license agreements.  See the NOTICE file
1:6aa0635:  * distributed with this work for additional information
1:6aa0635:  * regarding copyright ownership.  The ASF licenses this file
1:6aa0635:  * to you under the Apache License, Version 2.0 (the
1:6aa0635:  * "License"); you may not use this file except in compliance
1:6aa0635:  * with the License.  You may obtain a copy of the License at
1:6aa0635:  *
1:6aa0635:  *   http://www.apache.org/licenses/LICENSE-2.0
1:6aa0635:  *
1:6aa0635:  * Unless required by applicable law or agreed to in writing,
1:6aa0635:  * software distributed under the License is distributed on an
1:6aa0635:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6aa0635:  * KIND, either express or implied.  See the License for the
1:6aa0635:  * specific language governing permissions and limitations
1:6aa0635:  * under the License.
1:6aa0635:  */
1:6aa0635: package org.apache.aries.versioning.utils;
1:f9b43fb: 
1:490f397: import java.util.ArrayList;
2:f9b43fb: 
1:490f397: public class BinaryCompatibilityStatus extends ArrayList<String> {
1:490f397: 
1:490f397: 
1:490f397:     public BinaryCompatibilityStatus() {
3:9822203:     }
1:9822203: 
1:9822203:     public boolean isCompatible() {
1:490f397:         return isEmpty();
1:9822203:     }
1:9822203: 
1:9822203: }
============================================================================
author:David Jencks
-------------------------------------------------------------------------------
commit:490f397
/////////////////////////////////////////////////////////////////////////
1: import java.util.ArrayList;
1: public class BinaryCompatibilityStatus extends ArrayList<String> {
1: 
1: 
1:     public BinaryCompatibilityStatus() {
1:         return isEmpty();
commit:9822203
/////////////////////////////////////////////////////////////////////////
0: public class BinaryCompatibilityStatus {
0:     private final boolean compatible;
0:     private final String reason;
0:     public BinaryCompatibilityStatus(boolean compatible, String reason) {
0:         this.compatible = compatible;
0:         this.reason = reason;
1:     }
1:     public boolean isCompatible() {
0:         return compatible;
1:     }
0:     public String getReason() {
0:         return reason;
1:     }
0:     @Override
0:     public int hashCode() {
0:         final int prime = 31;
0:         int result = 1;
0:         result = prime * result + (compatible ? 1231 : 1237);
0:         result = prime * result + ((reason == null) ? 0 : reason.hashCode());
0:         return result;
1:     }
1: 
0:     @Override
0:     public boolean equals(Object obj) {
0:         if (this == obj) return true;
0:         if (obj == null) return false;
0:         if (getClass() != obj.getClass()) return false;
0:         BinaryCompatibilityStatus other = (BinaryCompatibilityStatus) obj;
0:         if (compatible != other.compatible) return false;
0:         if (reason == null) {
0:             if (other.reason != null) return false;
0:         } else if (!reason.equals(other.reason)) return false;
0:         return true;
1:     }
1: 
author:Emily Jiang
-------------------------------------------------------------------------------
commit:f9b43fb
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1: 
0:   @Override
0:   public int hashCode()
0:   {
0:     final int prime = 31;
0:     int result = 1;
0:     result = prime * result + (compatible ? 1231 : 1237);
0:     result = prime * result + ((reason == null) ? 0 : reason.hashCode());
0:     return result;
0:   }
1: 
0:   @Override
0:   public boolean equals(Object obj)
0:   {
0:     if (this == obj) return true;
0:     if (obj == null) return false;
0:     if (getClass() != obj.getClass()) return false;
0:     BinaryCompatibilityStatus other = (BinaryCompatibilityStatus) obj;
0:     if (compatible != other.compatible) return false;
0:     if (reason == null) {
0:       if (other.reason != null) return false;
0:     } else if (!reason.equals(other.reason)) return false;
0:     return true;
0:   }
commit:6aa0635
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.versioning.utils;
0: public class BinaryCompatibilityStatus
0: {
0:   private final boolean compatible;
0:   private final String reason;
0:   
0:   public BinaryCompatibilityStatus(boolean compatible, String reason) {
0:     this.compatible = compatible;
0:     this.reason = reason;
0:   }
0: 
0:   public boolean isCompatible()
0:   {
0:     return compatible;
0:   }
0: 
0:   public String getReason()
0:   {
0:     return reason;
0:   }
0:   
0: 
0: }
============================================================================