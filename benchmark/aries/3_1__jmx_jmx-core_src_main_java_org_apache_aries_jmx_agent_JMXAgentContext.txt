3:fdf3952: /**
1:fdf3952:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:fdf3952:  *  contributor license agreements.  See the NOTICE file distributed with
1:fdf3952:  *  this work for additional information regarding copyright ownership.
1:fdf3952:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:fdf3952:  *  (the "License"); you may not use this file except in compliance with
1:fdf3952:  *  the License.  You may obtain a copy of the License at
3:fdf3952:  *
1:fdf3952:  *     http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  *  Unless required by applicable law or agreed to in writing, software
1:fdf3952:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:fdf3952:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fdf3952:  *  See the License for the specific language governing permissions and
1:fdf3952:  *  limitations under the License.
3:fdf3952:  */
1:fdf3952: package org.apache.aries.jmx.agent;
3:fdf3952: 
1:fdf3952: import javax.management.MBeanServer;
1:fdf3952: 
1:fdf3952: import org.apache.aries.jmx.Logger;
1:fdf3952: import org.apache.aries.jmx.MBeanHandler;
1:fdf3952: import org.osgi.framework.BundleContext;
1:fdf3952: 
1:fdf3952: /**
1:fdf3952:  * <p>This class <tt>JMXAgentContext</tt> represents context of JMXAgent.
1:fdf3952:  * Delegates registration and unregistration methods to {@link JMXAgent}.</p>
1:fdf3952:  * @see JMXAgent
1:7871c8f:  *
1:fdf3952:  * @version $Rev$ $Date$
1:fdf3952:  */
1:fdf3952: public class JMXAgentContext {
1:fdf3952: 
1:fdf3952:     private JMXAgent agent;
1:fdf3952:     private BundleContext bundleContext;
1:fdf3952:     private Logger logger;
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * Constructs new JMXAgentContext.
1:fdf3952:      * @param bundleContext bundle context @see {@link BundleContext}.
1:fdf3952:      * @param agent {@link JMXAgent}.
1:fdf3952:      * @param log logger represents by @see {@link Logger}.
1:fdf3952:      */
1:fdf3952:     public JMXAgentContext(BundleContext bundleContext, JMXAgent agent, Logger log) {
1:fdf3952:         this.bundleContext = bundleContext;
1:fdf3952:         this.agent = agent;
1:fdf3952:         this.logger = log;
3:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
3:fdf3952:      * Delegates invocation to JMX agent.
1:fdf3952:      * @see org.apache.aries.jmx.agent.JMXAgent#registerMBeans(MBeanServer)
1:7871c8f:      *
1:7871c8f:      */
1:fdf3952:     public void registerMBeans(final MBeanServer server) {
1:fdf3952:         agent.registerMBeans(server);
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:7871c8f:      * Delegates invocation to JMX agent.
1:fdf3952:      * @see org.apache.aries.jmx.agent.JMXAgent#unregisterMBeans(MBeanServer)
1:fdf3952:      */
1:fdf3952:     public void unregisterMBeans(final MBeanServer server) {
1:fdf3952:         agent.unregisterMBeans(server);
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * Delegates invocation to JMX agent.
1:7871c8f:      * @see org.apache.aries.jmx.agent.JMXAgent#registerMBean(MBeanHandler)
1:fdf3952:      */
1:fdf3952:     public void registerMBean(final MBeanHandler mbeanData) {
1:fdf3952:         agent.registerMBean(mbeanData);
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * Delegates invocation to JMX agent.
1:7871c8f:      * @see org.apache.aries.jmx.agent.JMXAgent#unregisterMBean(MBeanHandler)
1:fdf3952:      */
1:7871c8f:     public void unregisterMBean(final MBeanHandler mBeanHandler) {
1:7871c8f:         agent.unregisterMBean(mBeanHandler);
1:7871c8f:     }
1:7871c8f: 
1:7871c8f:     /**
1:fdf3952:      * Gets bundle context.
1:fdf3952:      * @return bundle context.
1:fdf3952:      */
1:fdf3952:     public BundleContext getBundleContext() {
1:fdf3952:         return bundleContext;
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * Gets a logger represents by @see {@link Logger}.
1:fdf3952:      * @return LogService tracker.
1:fdf3952:      */
1:fdf3952:     public Logger getLogger() {
1:fdf3952:         return logger;
1:fdf3952:     }
1:fdf3952: 
1:fdf3952: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:0a8778f
/////////////////////////////////////////////////////////////////////////
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f5398b2
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:7871c8f
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:      *
/////////////////////////////////////////////////////////////////////////
1:      * @see org.apache.aries.jmx.agent.JMXAgent#registerMBean(MBeanHandler)
/////////////////////////////////////////////////////////////////////////
1:      * @see org.apache.aries.jmx.agent.JMXAgent#unregisterMBean(MBeanHandler)
1:      */
1:     public void unregisterMBean(final MBeanHandler mBeanHandler) {
1:         agent.unregisterMBean(mBeanHandler);
1:     }
1: 
1:     /**
1:      * Delegates invocation to JMX agent.
0:      * @deprecated
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jmx.agent;
1: 
0: import java.util.concurrent.ExecutorService;
1: 
1: import javax.management.MBeanServer;
1: 
1: import org.apache.aries.jmx.Logger;
1: import org.apache.aries.jmx.MBeanHandler;
1: import org.osgi.framework.BundleContext;
1: 
1: /**
1:  * <p>This class <tt>JMXAgentContext</tt> represents context of JMXAgent.
1:  * Delegates registration and unregistration methods to {@link JMXAgent}.</p>
1:  * @see JMXAgent
1:  * 
1:  * @version $Rev$ $Date$
1:  */
1: public class JMXAgentContext {
1: 
1:     private JMXAgent agent;
1:     private BundleContext bundleContext;
1:     private Logger logger;
1: 
1:     /**
1:      * Constructs new JMXAgentContext.
1:      * @param bundleContext bundle context @see {@link BundleContext}.
1:      * @param agent {@link JMXAgent}.
1:      * @param log logger represents by @see {@link Logger}.
1:      */
1:     public JMXAgentContext(BundleContext bundleContext, JMXAgent agent, Logger log) {
1:         this.bundleContext = bundleContext;
1:         this.agent = agent;
1:         this.logger = log;
1:     }
1: 
1:     /**
1:      * Delegates invocation to JMX agent.
1:      * @see org.apache.aries.jmx.agent.JMXAgent#registerMBeans(MBeanServer)
1:      * 
1:      */
1:     public void registerMBeans(final MBeanServer server) {
1:         agent.registerMBeans(server);
1:     }
1: 
1:     /**
1:      * Delegates invocation to JMX agent.
1:      * @see org.apache.aries.jmx.agent.JMXAgent#unregisterMBeans(MBeanServer)
1:      */
1:     public void unregisterMBeans(final MBeanServer server) {
1:         agent.unregisterMBeans(server);
1:     }
1: 
1:     /**
1:      * Delegates invocation to JMX agent.
0:      * @see org.apache.aries.jmx.agent.JMXAgentl#registerMBean(MBeanHandler)
1:      */
1:     public void registerMBean(final MBeanHandler mbeanData) {
1:         agent.registerMBean(mbeanData);
1:     }
1: 
1:     /**
1:      * Delegates invocation to JMX agent.
0:      * @see org.apache.aries.jmx.agent.JMXAgent#unregisterMBean(String)
1:      */
0:     public void unregisterMBean(final String name) {
0:         agent.unregisterMBean(name);
1:     }
1: 
1:     /**
1:      * Gets bundle context.
1:      * @return bundle context.
1:      */
1:     public BundleContext getBundleContext() {
1:         return bundleContext;
1:     }
1: 
1:     /**
1:      * Gets a logger represents by @see {@link Logger}.
1:      * @return LogService tracker.
1:      */
1:     public Logger getLogger() {
1:         return logger;
1:     }
1: 
1:     /**
1:      * Delegates invocation to JMX agent.
0:      * @see org.apache.aries.jmx.agent.JMXAgent#getRegistrationExecutor()
1:      */
0:     public ExecutorService getRegistrationExecutor() {
0:         return agent.getRegistrationExecutor();
1:     }
1: }
============================================================================