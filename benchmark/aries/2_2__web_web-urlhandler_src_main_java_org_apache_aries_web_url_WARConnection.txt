1:d80741a: /*
1:d80741a:  * Licensed to the Apache Software Foundation (ASF) under one
1:d80741a:  * or more contributor license agreements.  See the NOTICE file
1:d80741a:  * distributed with this work for additional information
1:d80741a:  * regarding copyright ownership.  The ASF licenses this file
1:d80741a:  * to you under the Apache License, Version 2.0 (the
1:d80741a:  * "License"); you may not use this file except in compliance
1:d80741a:  * with the License.  You may obtain a copy of the License at
1:d80741a:  *
1:d80741a:  *   http://www.apache.org/licenses/LICENSE-2.0
1:d80741a:  *
1:d80741a:  * Unless required by applicable law or agreed to in writing,
1:d80741a:  * software distributed under the License is distributed on an
1:d80741a:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:d80741a:  * KIND, either express or implied.  See the License for the
1:d80741a:  * specific language governing permissions and limitations
1:d80741a:  * under the License.
1:d80741a:  */
1:d80741a: package org.apache.aries.web.url;
4:d80741a: 
1:d80741a: import java.io.IOException;
1:d80741a: import java.io.InputStream;
1:d80741a: import java.net.MalformedURLException;
1:d80741a: import java.net.URL;
1:d80741a: import java.net.URLConnection;
1:d80741a: 
1:d80741a: import org.apache.aries.web.converter.WarToWabConverter.InputStreamProvider;
1:50ca3da: import org.apache.aries.web.converter.impl.CaseInsensitiveMap;
1:d80741a: import org.apache.aries.web.converter.impl.WarToWabConverterImpl;
1:d80741a: 
1:d80741a: public class WARConnection extends URLConnection
1:d80741a: {
1:d80741a:   private WarToWabConverterImpl converter = null;
1:50ca3da:   private CaseInsensitiveMap properties;
1:d80741a:   
1:50ca3da:   protected WARConnection(URL url, CaseInsensitiveMap properties) throws MalformedURLException
1:d80741a:   {
1:d80741a:     super(url);
1:d80741a:     this.properties = properties;
1:5fca10e:   }
1:d80741a: 
1:d80741a:   @Override
1:d80741a:   public void connect() throws IOException
1:d80741a:   {
1:d80741a:     int fileNameIndex = url.getFile().lastIndexOf("/") + 1;
1:d80741a:     String warName;
1:d80741a:     if (fileNameIndex != 0)
1:d80741a:       warName = url.getFile().substring(fileNameIndex);
1:d80741a:     else
1:d80741a:       warName = url.getFile();
1:d80741a: 
1:d80741a:     converter = new WarToWabConverterImpl(new InputStreamProvider() {
1:d80741a:       public InputStream getInputStream() throws IOException {
1:d80741a:         return url.openStream();
2:d80741a:       }
1:d80741a:     }, warName, properties);
1:d80741a:   }
1:d80741a: 
1:d80741a:   @Override
1:d80741a:   public InputStream getInputStream() throws IOException
1:d80741a:   {
1:d80741a:     if (converter == null)
1:d80741a:       connect();
1:d80741a:     
1:d80741a:     return converter.getWAB();
1:d80741a:   }
1:d80741a: 
1:d80741a:   @Override
1:d80741a:   public int getContentLength()
1:d80741a:   {
1:d80741a:     try {
1:d80741a:       if (converter == null)
1:d80741a:         connect();
1:d80741a:       return converter.getWabLength();
1:d80741a:     } catch (IOException e) {
1:d80741a:       return -1;
1:d80741a:     }
1:d80741a:   }
1:d80741a: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:50ca3da
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.web.converter.impl.CaseInsensitiveMap;
1:   private CaseInsensitiveMap properties;
1:   protected WARConnection(URL url, CaseInsensitiveMap properties) throws MalformedURLException
commit:9af03a3
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:5fca10e
/////////////////////////////////////////////////////////////////////////
0:     String bundleManifestVersion = (String) properties.get(Constants.BUNDLE_MANIFESTVERSION);
0:     if (bundleManifestVersion != null && !bundleManifestVersion.equals("2")) {
0:       throw new MalformedURLException("Incorrect bundle version supplied in URL : " + bundleManifestVersion);
1:     }
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:d80741a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.web.url;
1: 
1: import java.io.IOException;
1: import java.io.InputStream;
1: import java.net.MalformedURLException;
1: import java.net.URL;
1: import java.net.URLConnection;
0: import java.util.Properties;
1: 
1: import org.apache.aries.web.converter.WarToWabConverter.InputStreamProvider;
1: import org.apache.aries.web.converter.impl.WarToWabConverterImpl;
0: import org.osgi.framework.Constants;
1: 
1: public class WARConnection extends URLConnection
1: {
1:   private WarToWabConverterImpl converter = null;
0:   private Properties properties;
1:   
0:   protected WARConnection(URL url, Properties properties) throws MalformedURLException
1:   {
1:     super(url);
1:     this.properties = properties;
1:     
0:     // Validate properties
1:     
0:     String bundleManifestVersion = (String)properties.get(Constants.BUNDLE_VERSION);
0:     if (bundleManifestVersion != null && !bundleManifestVersion.equals("2"))
0:       throw new MalformedURLException("Incorrect bundle version supplied in URL : "+bundleManifestVersion);
1:     
1:   }
1: 
1:   @Override
1:   public void connect() throws IOException
1:   {
1:     int fileNameIndex = url.getFile().lastIndexOf("/") + 1;
1:     String warName;
1:     if (fileNameIndex != 0)
1:       warName = url.getFile().substring(fileNameIndex);
1:     else
1:       warName = url.getFile();
1: 
1:     converter = new WarToWabConverterImpl(new InputStreamProvider() {
1:       public InputStream getInputStream() throws IOException {
1:         return url.openStream();
1:       }
1:     }, warName, properties);
1:   }
1: 
1:   @Override
1:   public InputStream getInputStream() throws IOException
1:   {
1:     if (converter == null)
1:       connect();
1:     
1:     return converter.getWAB();
1:   }
1: 
1:   @Override
1:   public int getContentLength()
1:   {
1:     try {
1:       if (converter == null)
1:         connect();
1:       return converter.getWabLength();
1:     } catch (IOException e) {
1:       return -1;
1:     }
1:   }
1: }
============================================================================