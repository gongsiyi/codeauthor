1:cb0f3ab: /*
1:cb0f3ab:  * Licensed to the Apache Software Foundation (ASF) under one
1:cb0f3ab:  * or more contributor license agreements.  See the NOTICE file
1:cb0f3ab:  * distributed with this work for additional information
1:cb0f3ab:  * regarding copyright ownership.  The ASF licenses this file
1:cb0f3ab:  * to you under the Apache License, Version 2.0 (the
1:cb0f3ab:  * "License"); you may not use this file except in compliance
1:cb0f3ab:  * with the License.  You may obtain a copy of the License at
1:cb0f3ab:  *
1:cb0f3ab:  *   http://www.apache.org/licenses/LICENSE-2.0
1:cb0f3ab:  *
1:cb0f3ab:  * Unless required by applicable law or agreed to in writing,
1:cb0f3ab:  * software distributed under the License is distributed on an
1:cb0f3ab:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:cb0f3ab:  * KIND, either express or implied.  See the License for the
1:cb0f3ab:  * specific language governing permissions and limitations
1:cb0f3ab:  * under the License.
1:cb0f3ab:  */
2:cb0f3ab: 
1:cb0f3ab: package org.apache.aries.application.runtime.framework;
1:cb0f3ab: 
1:89f804e: import org.apache.aries.application.management.spi.framework.BundleFramework;
1:06621c5: import org.apache.aries.application.management.spi.framework.BundleFrameworkConfiguration;
1:89f804e: import org.apache.aries.application.management.spi.framework.BundleFrameworkFactory;
1:cb0f3ab: import org.osgi.framework.BundleContext;
1:cb0f3ab: import org.osgi.framework.BundleException;
1:cb0f3ab: import org.osgi.framework.ServiceReference;
1:cb0f3ab: import org.osgi.service.framework.CompositeBundle;
1:cb0f3ab: import org.osgi.service.framework.CompositeBundleFactory;
1:cb0f3ab: 
1:cb0f3ab: public class BundleFrameworkFactoryImpl implements BundleFrameworkFactory
1:cb0f3ab: {  
1:06621c5:   public BundleFramework createBundleFramework(BundleContext bc, BundleFrameworkConfiguration config) throws BundleException
1:cb0f3ab:   {
1:cb0f3ab:     BundleFramework framework = null;
1:cb0f3ab:     ServiceReference sr = bc.getServiceReference(CompositeBundleFactory.class.getName());
1:cb0f3ab: 
1:cb0f3ab:     if (sr != null) {
1:cb0f3ab:       CompositeBundleFactory cbf = (CompositeBundleFactory) bc.getService(sr);
1:cb0f3ab: 
1:cb0f3ab:       CompositeBundle compositeBundle = cbf.installCompositeBundle(
1:06621c5:           config.getFrameworkProperties(), 
1:06621c5:           config.getFrameworkID(),
1:06621c5:           config.getFrameworkManifest());
1:cb0f3ab: 
1:cb0f3ab:       framework = new BundleFrameworkImpl(compositeBundle);
1:cb0f3ab:     } else throw new BundleException("Failed to obtain framework factory service");
1:cb0f3ab: 
1:cb0f3ab:     return framework;
1:cb0f3ab:   }
1:cb0f3ab: }
============================================================================
author:Chris Wilkinson
-------------------------------------------------------------------------------
commit:06621c5
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.spi.framework.BundleFrameworkConfiguration;
/////////////////////////////////////////////////////////////////////////
1:   public BundleFramework createBundleFramework(BundleContext bc, BundleFrameworkConfiguration config) throws BundleException
/////////////////////////////////////////////////////////////////////////
1:           config.getFrameworkProperties(), 
1:           config.getFrameworkID(),
1:           config.getFrameworkManifest());
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.spi.framework.BundleFramework;
1: import org.apache.aries.application.management.spi.framework.BundleFrameworkFactory;
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:cb0f3ab
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.application.runtime.framework;
1: 
0: import java.util.Properties;
1: 
0: import org.apache.aries.application.management.BundleFramework;
0: import org.apache.aries.application.management.BundleFrameworkFactory;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.BundleException;
1: import org.osgi.framework.ServiceReference;
1: import org.osgi.service.framework.CompositeBundle;
1: import org.osgi.service.framework.CompositeBundleFactory;
1: 
1: public class BundleFrameworkFactoryImpl implements BundleFrameworkFactory
1: {  
0:   public BundleFramework createBundleFramework(BundleContext bc, String frameworkId,
0:       Properties frameworkConfig, Properties frameworkManifest) throws BundleException
1:   {
1:     BundleFramework framework = null;
1:     ServiceReference sr = bc.getServiceReference(CompositeBundleFactory.class.getName());
1: 
1:     if (sr != null) {
1:       CompositeBundleFactory cbf = (CompositeBundleFactory) bc.getService(sr);
1: 
1:       CompositeBundle compositeBundle = cbf.installCompositeBundle(
0:           frameworkConfig, 
0:           frameworkId,
0:           frameworkManifest);
1: 
1:       framework = new BundleFrameworkImpl(compositeBundle);
1:     } else throw new BundleException("Failed to obtain framework factory service");
1: 
1:     return framework;
1:   }
1: }
============================================================================