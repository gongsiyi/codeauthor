1:a680609: /**
1:a680609:  * Licensed to the Apache Software Foundation (ASF) under one
1:a680609:  * or more contributor license agreements.  See the NOTICE file
1:a680609:  * distributed with this work for additional information
1:a680609:  * regarding copyright ownership.  The ASF licenses this file
1:a680609:  * to you under the Apache License, Version 2.0 (the
1:a680609:  * "License"); you may not use this file except in compliance
1:a680609:  * with the License.  You may obtain a copy of the License at
1:a680609:  * <p/>
1:a680609:  * http://www.apache.org/licenses/LICENSE-2.0
1:a680609:  * <p/>
1:a680609:  * Unless required by applicable law or agreed to in writing,
1:a680609:  * software distributed under the License is distributed on an
1:a680609:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:a680609:  * KIND, either express or implied.  See the License for the
1:a680609:  * specific language governing permissions and limitations
1:a680609:  * under the License.
1:a680609:  */
1:a680609: package org.apache.aries.blueprint.plugin.javax;
1:a680609: 
1:a680609: import java.util.Set;
1:a680609: 
1:a680609: class Namespaces {
1:a680609:     static final String PATTERN_NS_JPA1 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/jpa\\/v1\\.(.)\\.(.)";
1:a680609:     static final String PATTERN_NS_JPA2 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/jpa\\/v2\\.(.)\\.(.)";
1:a680609:     static final String PATTERN_NS_TX1 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/transactions\\/v1\\.(.)\\.(.)";
1:a680609:     static final String PATTERN_NS_TX2 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/transactions\\/v2\\.(.)\\.(.)";
1:a680609: 
1:a680609:     static String getNamespaceByPattern(Set<String> namespaces, String pattern) {
1:a680609:         for (String namespace : namespaces) {
1:a680609:             if (namespace.matches(pattern)) {
1:a680609:                 return namespace;
1:a680609:             }
1:a680609:         }
1:a680609:         return null;
1:a680609:     }
1:a680609: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:a680609
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * <p/>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p/>
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.javax;
1: 
1: import java.util.Set;
1: 
1: class Namespaces {
1:     static final String PATTERN_NS_JPA1 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/jpa\\/v1\\.(.)\\.(.)";
1:     static final String PATTERN_NS_JPA2 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/jpa\\/v2\\.(.)\\.(.)";
1:     static final String PATTERN_NS_TX1 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/transactions\\/v1\\.(.)\\.(.)";
1:     static final String PATTERN_NS_TX2 = "http\\:\\/\\/aries\\.apache\\.org\\/xmlns\\/transactions\\/v2\\.(.)\\.(.)";
1: 
1:     static String getNamespaceByPattern(Set<String> namespaces, String pattern) {
1:         for (String namespace : namespaces) {
1:             if (namespace.matches(pattern)) {
1:                 return namespace;
1:             }
1:         }
1:         return null;
1:     }
1: }
============================================================================