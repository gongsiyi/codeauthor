1:4fec049: /*
1:4fec049:  * Licensed to the Apache Software Foundation (ASF) under one
1:4fec049:  * or more contributor license agreements.  See the NOTICE file
1:4fec049:  * distributed with this work for additional information
1:4fec049:  * regarding copyright ownership.  The ASF licenses this file
1:4fec049:  * to you under the Apache License, Version 2.0 (the
1:4fec049:  * "License"); you may not use this file except in compliance
1:4fec049:  * with the License.  You may obtain a copy of the License at
1:4fec049:  *
1:4fec049:  *   http://www.apache.org/licenses/LICENSE-2.0
1:4fec049:  *
1:4fec049:  * Unless required by applicable law or agreed to in writing,
1:4fec049:  * software distributed under the License is distributed on an
1:4fec049:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:4fec049:  * KIND, either express or implied.  See the License for the
1:4fec049:  * specific language governing permissions and limitations
1:4fec049:  * under the License.
1:4fec049:  */
1:4fec049: package org.apache.aries.application.modelling.utils;
1:4fec049: import static org.junit.Assert.assertFalse;
1:4fec049: import static org.junit.Assert.assertTrue;
1:4fec049: 
1:4fec049: import java.util.Arrays;
1:4fec049: import java.util.HashMap;
1:4fec049: import java.util.Map;
1:4fec049: 
1:4fec049: import org.apache.aries.application.modelling.WrappedServiceMetadata;
1:4fec049: import org.apache.aries.application.modelling.impl.ExportedServiceImpl;
1:4fec049: import org.junit.Test;
1:4fec049: public class ExportedServiceTest
1:4fec049: {
1:4fec049: 
1:4fec049:   
1:4fec049:   @Test
1:4fec049:   public void checkEquality() { 
1:4fec049:     
1:4fec049:     //   public ExportedService (String name, int ranking, Collection<String> ifaces, 
1:4fec049:     // Map<String, String> serviceProperties ) { 
1:4fec049:     Map<String, Object> props = new HashMap<String, Object>();
1:4fec049:     props.put ("away", "www.away.com");
1:4fec049:     props.put ("home", "www.home.net");
1:4fec049:     WrappedServiceMetadata wsm1 = new ExportedServiceImpl (null, 0, Arrays.asList("a.b.c", "d.e.f"), props); 
1:4fec049:     WrappedServiceMetadata wsm2 = new ExportedServiceImpl (null, 0, Arrays.asList("d.e.f", "a.b.c"), props);
1:4fec049:     
1:4fec049:     assertTrue ("Basic equality test", wsm1.equals(wsm2));
1:4fec049:     assertTrue ("Basic equality test", wsm2.equals(wsm1));
1:4fec049:     assertTrue ("Hashcodes equal", wsm1.hashCode() == wsm2.hashCode());
1:4fec049: 
1:4fec049:     
1:4fec049:         
1:4fec049:     wsm2 = new ExportedServiceImpl (null, 0, Arrays.asList("d.e.f", "a.b.c", "g.e.f"), props);
1:4fec049:     assertFalse ("Adding an interface makes them different", wsm1.equals(wsm2));
1:4fec049:     assertFalse ("Adding an interface makes them different", wsm2.equals(wsm1));
1:4fec049:     assertFalse ("Hashcodes should differ", wsm1.hashCode() == wsm2.hashCode());
1:4fec049:     
1:4fec049:     props = new HashMap<String, Object>(props);
1:4fec049:     props.put("interim", "w3.interim.org");
1:4fec049:     
1:4fec049:     wsm1 = new ExportedServiceImpl (null, 0, Arrays.asList("a.b.c","d.e.f", "g.e.f"), props);
1:4fec049:     
1:4fec049:     assertFalse ("Adding a service property makes them different", wsm1.equals(wsm2));
1:4fec049:     assertFalse ("Adding a service property makes them different", wsm2.equals(wsm1));
1:4fec049:     assertFalse ("Hashcodes still different", wsm1.hashCode() == wsm2.hashCode());
1:4fec049:   }
1:4fec049: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:26ae47b
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:4fec049
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application.modelling.utils;
1: import static org.junit.Assert.assertFalse;
1: import static org.junit.Assert.assertTrue;
1: 
1: import java.util.Arrays;
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import org.apache.aries.application.modelling.WrappedServiceMetadata;
1: import org.apache.aries.application.modelling.impl.ExportedServiceImpl;
1: import org.junit.Test;
1: public class ExportedServiceTest
1: {
1: 
1:   
1:   @Test
1:   public void checkEquality() { 
1:     
1:     //   public ExportedService (String name, int ranking, Collection<String> ifaces, 
1:     // Map<String, String> serviceProperties ) { 
1:     Map<String, Object> props = new HashMap<String, Object>();
1:     props.put ("away", "www.away.com");
1:     props.put ("home", "www.home.net");
1:     WrappedServiceMetadata wsm1 = new ExportedServiceImpl (null, 0, Arrays.asList("a.b.c", "d.e.f"), props); 
1:     WrappedServiceMetadata wsm2 = new ExportedServiceImpl (null, 0, Arrays.asList("d.e.f", "a.b.c"), props);
1:     
1:     assertTrue ("Basic equality test", wsm1.equals(wsm2));
1:     assertTrue ("Basic equality test", wsm2.equals(wsm1));
1:     assertTrue ("Hashcodes equal", wsm1.hashCode() == wsm2.hashCode());
1: 
1:     
1:         
1:     wsm2 = new ExportedServiceImpl (null, 0, Arrays.asList("d.e.f", "a.b.c", "g.e.f"), props);
1:     assertFalse ("Adding an interface makes them different", wsm1.equals(wsm2));
1:     assertFalse ("Adding an interface makes them different", wsm2.equals(wsm1));
1:     assertFalse ("Hashcodes should differ", wsm1.hashCode() == wsm2.hashCode());
1:     
1:     props = new HashMap<String, Object>(props);
1:     props.put("interim", "w3.interim.org");
1:     
1:     wsm1 = new ExportedServiceImpl (null, 0, Arrays.asList("a.b.c","d.e.f", "g.e.f"), props);
1:     
1:     assertFalse ("Adding a service property makes them different", wsm1.equals(wsm2));
1:     assertFalse ("Adding a service property makes them different", wsm2.equals(wsm1));
1:     assertFalse ("Hashcodes still different", wsm1.hashCode() == wsm2.hashCode());
1:   }
1: }
============================================================================