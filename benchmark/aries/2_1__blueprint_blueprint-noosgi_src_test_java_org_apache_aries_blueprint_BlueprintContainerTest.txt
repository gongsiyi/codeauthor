1:cd603d2: /*
1:cd603d2:  * Licensed to the Apache Software Foundation (ASF) under one
1:cd603d2:  * or more contributor license agreements.  See the NOTICE file
1:cd603d2:  * distributed with this work for additional information
1:cd603d2:  * regarding copyright ownership.  The ASF licenses this file
1:cd603d2:  * to you under the Apache License, Version 2.0 (the
1:cd603d2:  * "License"); you may not use this file except in compliance
1:cd603d2:  * with the License.  You may obtain a copy of the License at
1:cd603d2:  *
1:cd603d2:  *   http://www.apache.org/licenses/LICENSE-2.0
1:cd603d2:  *
1:cd603d2:  * Unless required by applicable law or agreed to in writing,
1:cd603d2:  * software distributed under the License is distributed on an
1:cd603d2:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:cd603d2:  * KIND, either express or implied.  See the License for the
1:cd603d2:  * specific language governing permissions and limitations
1:cd603d2:  * under the License.
1:cd603d2:  */
1:cd603d2: package org.apache.aries.blueprint;
1:cd603d2: 
1:cd603d2: import org.apache.aries.blueprint.container.BlueprintContainerImpl;
1:cd603d2: import org.apache.aries.blueprint.sample.Foo;
1:cd603d2: import org.junit.Test;
1:cd603d2: 
1:cd603d2: import java.net.URL;
1:cd603d2: import java.util.Arrays;
1:cd603d2: 
1:cd603d2: import static org.junit.Assert.*;
1:cd603d2: 
1:cd603d2: public class BlueprintContainerTest {
1:cd603d2: 
1:cd603d2:     @Test
1:cd603d2:     public void testSimple() throws Exception {
1:cd603d2:         URL url = getClass().getClassLoader().getResource("test.xml");
1:cd603d2:         BlueprintContainerImpl container = new BlueprintContainerImpl(getClass().getClassLoader(), Arrays.asList(url));
1:cd603d2: 
1:cd603d2:         Foo foo = (Foo) container.getComponentInstance("foo");
1:28d2e82:         System.out.println(foo);
1:cd603d2:         assertNotNull(foo);
1:cd603d2:         assertEquals(5, foo.getA());
1:28d2e82:         assertEquals(1, foo.getB());
1:cd603d2: 
1:cd603d2:         container.destroy();
1:cd603d2:     }
1:cd603d2: 
1:bd82987:     @Test
1:bd82987:     public void testPlaceholders() throws Exception {
1:bd82987:         URL url1 = getClass().getClassLoader().getResource("test.xml");
1:bd82987:         URL url2 = getClass().getClassLoader().getResource("test2.xml");
1:bd82987:         BlueprintContainerImpl container = new BlueprintContainerImpl(getClass().getClassLoader(), Arrays.asList(url1, url2));
1:bd82987: 
1:bd82987:         Foo foo = (Foo) container.getComponentInstance("foo");
1:bd82987:         System.out.println(foo);
1:bd82987:         assertNotNull(foo);
1:bd82987:         assertEquals(5, foo.getA());
1:bd82987:         assertEquals(1, foo.getB());
1:bd82987: 
1:bd82987:         container.destroy();
1:bd82987:     }
1:bd82987: 
1:cd603d2:     public static void main(String[] args) throws Exception {
1:cd603d2:         URL url = BlueprintContainerTest.class.getClassLoader().getResource("test.xml");
1:cd603d2:         BlueprintContainerImpl container = new BlueprintContainerImpl(BlueprintContainerTest.class.getClassLoader(), Arrays.asList(url));
1:cd603d2:         System.out.println(container.getComponentInstance("foo"));
1:cd603d2:         container.destroy();
1:cd603d2:     }
1:cd603d2: }
============================================================================
author:Daniel Kulp
-------------------------------------------------------------------------------
commit:8847d60
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:bd82987
/////////////////////////////////////////////////////////////////////////
1:     @Test
1:     public void testPlaceholders() throws Exception {
1:         URL url1 = getClass().getClassLoader().getResource("test.xml");
1:         URL url2 = getClass().getClassLoader().getResource("test2.xml");
1:         BlueprintContainerImpl container = new BlueprintContainerImpl(getClass().getClassLoader(), Arrays.asList(url1, url2));
1: 
1:         Foo foo = (Foo) container.getComponentInstance("foo");
1:         System.out.println(foo);
1:         assertNotNull(foo);
1:         assertEquals(5, foo.getA());
1:         assertEquals(1, foo.getB());
1: 
1:         container.destroy();
1:     }
1: 
commit:28d2e82
/////////////////////////////////////////////////////////////////////////
1:         System.out.println(foo);
1:         assertEquals(1, foo.getB());
commit:cd603d2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint;
1: 
1: import org.apache.aries.blueprint.container.BlueprintContainerImpl;
1: import org.apache.aries.blueprint.sample.Foo;
1: import org.junit.Test;
1: 
1: import java.net.URL;
1: import java.util.Arrays;
1: 
1: import static org.junit.Assert.*;
1: 
1: public class BlueprintContainerTest {
1: 
1:     @Test
1:     public void testSimple() throws Exception {
1:         URL url = getClass().getClassLoader().getResource("test.xml");
1:         BlueprintContainerImpl container = new BlueprintContainerImpl(getClass().getClassLoader(), Arrays.asList(url));
1: 
1:         Foo foo = (Foo) container.getComponentInstance("foo");
1:         assertNotNull(foo);
1:         assertEquals(5, foo.getA());
0:         assertEquals(-1, foo.getB());
1: 
1:         container.destroy();
1:     }
1: 
1:     public static void main(String[] args) throws Exception {
1:         URL url = BlueprintContainerTest.class.getClassLoader().getResource("test.xml");
1:         BlueprintContainerImpl container = new BlueprintContainerImpl(BlueprintContainerTest.class.getClassLoader(), Arrays.asList(url));
1:         System.out.println(container.getComponentInstance("foo"));
1:         container.destroy();
1:     }
1: }
============================================================================