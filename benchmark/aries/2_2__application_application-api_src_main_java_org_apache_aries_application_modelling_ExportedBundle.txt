1:a5079e5: /*
1:a5079e5:  * Licensed to the Apache Software Foundation (ASF) under one
1:a5079e5:  * or more contributor license agreements.  See the NOTICE file
1:a5079e5:  * distributed with this work for additional information
1:a5079e5:  * regarding copyright ownership.  The ASF licenses this file
1:a5079e5:  * to you under the Apache License, Version 2.0 (the
1:a5079e5:  * "License"); you may not use this file except in compliance
1:a5079e5:  * with the License.  You may obtain a copy of the License at
1:a5079e5:  *
1:a5079e5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a5079e5:  *
1:a5079e5:  * Unless required by applicable law or agreed to in writing,
1:a5079e5:  * software distributed under the License is distributed on an
1:a5079e5:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:a5079e5:  * KIND, either express or implied.  See the License for the
1:a5079e5:  * specific language governing permissions and limitations
1:a5079e5:  * under the License.
1:a5079e5:  */
1:a5079e5: package org.apache.aries.application.modelling;
1:a5079e5: /**
1:a5079e5:  * Model a bundle, required by another bundle.
1:a5079e5:  *
1:a5079e5:  */
1:a5079e5: public interface ExportedBundle extends Provider, DeploymentMFElement
1:a5079e5: {
1:a5079e5:   /**
1:a5079e5:    * The bundle symbolic name
1:a5079e5:    * @return the bundle symbolic name
1:a5079e5:    */
1:a5079e5:   String getSymbolicName();
1:a5079e5:   /**
1:a5079e5:    * The bundle version
1:a5079e5:    * @return the bundle version
1:a5079e5:    */
1:a5079e5:   String getVersion();
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Whether the bundle is fragment
1:7ceb4ac:    * @return true if it is a fragment.
1:a5079e5:    */
1:a5079e5:   boolean isFragment();
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Get the fragment host.
1:a5079e5:    * @return The fragment host that the bundle attaches.
1:a5079e5:    */
1:a5079e5:   ImportedBundle getFragmentHost();
1:a5079e5: 
1:a5079e5: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return true if it is a fragment.
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:a5079e5
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application.modelling;
1: /**
1:  * Model a bundle, required by another bundle.
1:  *
1:  */
1: public interface ExportedBundle extends Provider, DeploymentMFElement
1: {
1:   /**
1:    * The bundle symbolic name
1:    * @return the bundle symbolic name
1:    */
1:   String getSymbolicName();
1:   /**
1:    * The bundle version
1:    * @return the bundle version
1:    */
1:   String getVersion();
1:   
1:   /**
1:    * Whether the bundle is fragment
0:    * @return
1:    */
1:   boolean isFragment();
1:   
1:   /**
1:    * Get the fragment host.
1:    * @return The fragment host that the bundle attaches.
1:    */
1:   ImportedBundle getFragmentHost();
1: 
1: }
============================================================================