1:69d4847: package org.apache.aries.subsystem.itests;
2:69d4847: 
1:69d4847: import static org.junit.Assert.assertEquals;
1:69d4847: 
1:7c69962: import java.io.InputStream;
1:7c69962: 
1:57b6627: import org.apache.aries.itest.RichBundleContext;
1:7c69962: import org.apache.aries.subsystem.itests.bundles.blueprint.BPHelloImpl;
1:69d4847: import org.apache.aries.subsystem.itests.hello.api.Hello;
1:69d4847: import org.junit.Test;
1:7c69962: import org.ops4j.pax.tinybundles.core.TinyBundles;
1:69d4847: import org.osgi.framework.BundleContext;
1:7c69962: import org.osgi.framework.Constants;
1:69d4847: import org.osgi.service.subsystem.Subsystem;
1:69d4847: 
1:69d4847: /*
1:69d4847:  * iTest for blueprint with subsystems
1:69d4847:  */
1:69d4847: public class BlueprintTest extends SubsystemTest 
3:69d4847: {
1:7c69962:     private static final String BLUEPRINT_ESA = "target/blueprint.esa";
1:7c69962: 
1:7c69962:     protected void init() throws Exception {
1:7c69962:         writeToFile(createBlueprintEsa(), BLUEPRINT_ESA);
1:7c69962:     }
1:69d4847: 
1:69d4847: 	@Test
1:69d4847: 	public void checkBlueprint() throws Exception
1:69d4847: 	{
1:7c69962: 	    Subsystem subsystem = installSubsystemFromFile(BLUEPRINT_ESA);
1:69d4847: 		try { 
1:69d4847: 			startSubsystem(subsystem);
1:69d4847: 			BundleContext bc = subsystem.getBundleContext();
1:57b6627: 			Hello h = new RichBundleContext(bc).getService(Hello.class);
1:69d4847: 			String message = h.saySomething();
1:69d4847: 			assertEquals("Wrong message back", "messageFromBlueprint", message);
1:69d4847: 		} finally { 
1:69d4847: 			stopSubsystem(subsystem);
1:69d4847: 			uninstallSubsystem(subsystem);
4:69d4847: 		}
1:69d4847: 	}
1:7c69962: 
1:7c69962:     private InputStream createBlueprintEsa() throws Exception {
1:7c69962: 	    return TinyBundles.bundle()
1:7c69962: 	        .add("OSGI-INF/SUBSYSTEM.MF", getResource("blueprint/OSGI-INF/SUBSYSTEM.MF"))
1:7c69962: 	        .add("blueprint.jar", createBlueprintTestBundle())
1:7c69962: 	        .build(TinyBundles.withBnd());
1:7c69962:     }
1:7c69962: 
1:7c69962:     private InputStream createBlueprintTestBundle() {
1:7c69962:         return TinyBundles.bundle()
1:7c69962: 	        .add(BPHelloImpl.class)
1:7c69962: 	        .add("OSGI-INF/blueprint/blueprint.xml", getResource("blueprint/OSGI-INF/blueprint/blueprint.xml"))
1:7c69962: 	        .set(Constants.BUNDLE_SYMBOLICNAME, "org.apache.aries.subsystem.itests.blueprint")
1:7c69962: 	        .build(TinyBundles.withBnd());
1:7c69962:     }
1:69d4847: 	
1:69d4847: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:7c69962
/////////////////////////////////////////////////////////////////////////
1: import java.io.InputStream;
1: 
1: import org.apache.aries.subsystem.itests.bundles.blueprint.BPHelloImpl;
1: import org.ops4j.pax.tinybundles.core.TinyBundles;
1: import org.osgi.framework.Constants;
/////////////////////////////////////////////////////////////////////////
1:     private static final String BLUEPRINT_ESA = "target/blueprint.esa";
1: 
1:     protected void init() throws Exception {
1:         writeToFile(createBlueprintEsa(), BLUEPRINT_ESA);
1:     }
1: 	    Subsystem subsystem = installSubsystemFromFile(BLUEPRINT_ESA);
/////////////////////////////////////////////////////////////////////////
1: 
1:     private InputStream createBlueprintEsa() throws Exception {
1: 	    return TinyBundles.bundle()
1: 	        .add("OSGI-INF/SUBSYSTEM.MF", getResource("blueprint/OSGI-INF/SUBSYSTEM.MF"))
1: 	        .add("blueprint.jar", createBlueprintTestBundle())
1: 	        .build(TinyBundles.withBnd());
1:     }
1: 
1:     private InputStream createBlueprintTestBundle() {
1:         return TinyBundles.bundle()
1: 	        .add(BPHelloImpl.class)
1: 	        .add("OSGI-INF/blueprint/blueprint.xml", getResource("blueprint/OSGI-INF/blueprint/blueprint.xml"))
1: 	        .set(Constants.BUNDLE_SYMBOLICNAME, "org.apache.aries.subsystem.itests.blueprint")
1: 	        .build(TinyBundles.withBnd());
1:     }
commit:57b6627
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.itest.RichBundleContext;
0: 	@Override
0: 	public void createApplications() throws Exception {
0: 		createApplication("blueprint", "blueprint.jar");
/////////////////////////////////////////////////////////////////////////
1: 			Hello h = new RichBundleContext(bc).getService(Hello.class);
/////////////////////////////////////////////////////////////////////////
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:95d5f02
/////////////////////////////////////////////////////////////////////////
0: import org.ops4j.pax.exam.junit.MavenConfiguredJUnit4TestRunner;
0: @RunWith(MavenConfiguredJUnit4TestRunner.class)
commit:69d4847
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.itests;
1: 
1: import static org.junit.Assert.assertEquals;
0: import static org.ops4j.pax.exam.CoreOptions.options;
1: 
1: import org.apache.aries.subsystem.itests.hello.api.Hello;
0: import org.junit.Before;
1: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.junit.Configuration;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.service.subsystem.Subsystem;
1: 
1: /*
1:  * iTest for blueprint with subsystems
1:  */
0: @RunWith(JUnit4TestRunner.class)
1: public class BlueprintTest extends SubsystemTest 
1: {
0: 	private static boolean _testAppCreated = false;
1: 	
0: 	@Before
0: 	public void setUp() throws Exception 
1: 	{
0: 		super.setUp();
0: 		if (!_testAppCreated) { 
0: 			createApplication("blueprint", new String[]{"blueprint.jar"});
0: 			_testAppCreated = true;
1: 		}
1: 	}
1: 
1: 	@Test
1: 	public void checkBlueprint() throws Exception
1: 	{
0: 		Subsystem subsystem = installSubsystemFromFile ("blueprint.esa");
1: 		try { 
1: 			startSubsystem(subsystem);
1: 			BundleContext bc = subsystem.getBundleContext();
0: 			Hello h = getOsgiService(bc, Hello.class, null, DEFAULT_TIMEOUT);
1: 			String message = h.saySomething();
1: 			assertEquals("Wrong message back", "messageFromBlueprint", message);
1: 		} finally { 
1: 			stopSubsystem(subsystem);
1: 			uninstallSubsystem(subsystem);
1: 		}
1: 	}
1: 	
0: 	@Configuration
0: 	public static Option[] extraBundles() 
1: 	{
0: 		return options(
0: 				mavenBundle("org.apache.aries.subsystem", "org.apache.aries.subsystem.itest.interfaces"),
0: 		        mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"), 
0: 		        mavenBundle("org.ow2.asm", "asm-all"),
0: 		        mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy")
0: //				org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption("-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=7777")
0: 		);
1: 	}
1: }
commit:294aae2
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.subsystem.itests;
0: 
0: import static org.apache.aries.itest.ExtraOptions.mavenBundle;
0: import static org.junit.Assert.assertEquals;
0: import static org.junit.Assert.assertTrue;
0: import static org.junit.Assert.fail;
0: import static org.ops4j.pax.exam.CoreOptions.options;
0: import static org.ops4j.pax.exam.OptionUtils.combine;
0: 
0: import java.util.Dictionary;
0: import java.util.Hashtable;
0: 
0: import org.apache.aries.subsystem.itests.hello.api.Hello;
0: import org.junit.Before;
0: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.junit.Configuration;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
0: import org.osgi.framework.Bundle;
0: import org.osgi.framework.BundleContext;
0: import org.osgi.framework.BundleException;
0: import org.osgi.framework.ServiceRegistration;
0: import org.osgi.framework.hooks.weaving.WeavingHook;
0: import org.osgi.framework.hooks.weaving.WovenClass;
0: import org.osgi.service.subsystem.Subsystem;
0: import org.osgi.service.subsystem.SubsystemException;
0: 
0: /*
0:  * iTest for blueprint with subsystems
0:  */
0: @RunWith(JUnit4TestRunner.class)
0: public class BlueprintTest extends SubsystemTest 
0: {
0: 	private static boolean _testAppCreated = false;
0: 	
0: 	@Before
0: 	public void setUp() throws Exception 
0: 	{
0: 		super.setUp();
0: 		if (!_testAppCreated) { 
0: 			createApplication("blueprint", new String[]{"blueprint.jar"});
0: 			_testAppCreated = true;
0: 		}
0: 	}
0: 
0: 	@Test
0: 	public void checkBlueprint() throws Exception
0: 	{
0: 		Subsystem subsystem = installSubsystemFromFile ("blueprint.esa");
0: 		try { 
0: 			startSubsystem(subsystem);
0: 			BundleContext bc = subsystem.getBundleContext();
0: 			Hello h = getOsgiService(bc, Hello.class, null, DEFAULT_TIMEOUT);
0: 			String message = h.saySomething();
0: 			assertEquals("Wrong message back", "messageFromBlueprint", message);
0: 		} finally { 
0: 			stopSubsystem(subsystem);
0: 			uninstallSubsystem(subsystem);
0: 		}
0: 	}
0: 	
0: 	@Configuration
0: 	public static Option[] extraBundles() 
0: 	{
0: 		return options(
0: 				mavenBundle("org.apache.aries.subsystem", "org.apache.aries.subsystem.itest.interfaces"),
0: 				mavenBundle("org.apache.aries", "org.apache.aries.util"),
0: 		        mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"), 
0: 		        mavenBundle("org.ow2.asm", "asm-all"),
0: 		        mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy")
0: //				org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption("-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=7777")
0: 		);
0: 	}
0: }
============================================================================