1:8702237: /*
1:8702237:  * Licensed to the Apache Software Foundation (ASF) under one
1:8702237:  * or more contributor license agreements.  See the NOTICE file
1:8702237:  * distributed with this work for additional information
1:8702237:  * regarding copyright ownership.  The ASF licenses this file
1:8702237:  * to you under the Apache License, Version 2.0 (the
1:8702237:  * "License"); you may not use this file except in compliance
1:8702237:  * with the License.  You may obtain a copy of the License at
1:8702237:  *
1:8702237:  *  http://www.apache.org/licenses/LICENSE-2.0
1:8702237:  *
1:8702237:  * Unless required by applicable law or agreed to in writing,
1:8702237:  * software distributed under the License is distributed on an
1:8702237:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8702237:  * KIND, either express or implied.  See the License for the
1:8702237:  * specific language governing permissions and limitations
1:8702237:  * under the License.
1:8702237:  */
1:8702237: 
1:8702237: package org.apache.aries.application.resolver.obr.impl;
1:8702237: 
1:8702237: import java.util.Map;
1:8702237: 
1:8702237: import org.apache.felix.bundlerepository.Capability;
1:8702237: import org.apache.felix.bundlerepository.Requirement;
1:8702237: import org.apache.felix.bundlerepository.Resource;
1:8702237: import org.osgi.framework.Version;
1:8702237: 
1:8702237: /**
1:8702237:  * @version $Rev$ $Date$
1:8702237:  */
1:8702237: public class ResourceWrapper implements Resource {
1:8702237: 
1:8702237:     private final Resource resource;
1:8702237:     
1:8702237:     public ResourceWrapper(Resource resource) {
1:8702237:         this.resource = resource;
1:8702237:     }
1:8702237:     
1:8702237:     public Capability[] getCapabilities() {
1:8702237:         return resource.getCapabilities();
1:8702237:     }
1:8702237: 
1:8702237:     public String[] getCategories() {
1:8702237:         return resource.getCategories();
1:8702237:     }
1:8702237: 
1:8702237:     public String getId() {
1:8702237:         return resource.getId();
1:8702237:     }
1:8702237: 
1:8702237:     public String getPresentationName() {
1:8702237:         return resource.getPresentationName();
1:8702237:     }
1:8702237: 
1:8702237:     public Map getProperties() {
1:8702237:         return resource.getProperties();
1:8702237:     }
1:8702237: 
1:8702237:     public Requirement[] getRequirements() {
1:8702237:         return resource.getRequirements();
1:8702237:     }
1:8702237: 
1:8702237:     public Long getSize() {
1:8702237:         return resource.getSize();
1:8702237:     }
1:8702237: 
1:8702237:     public String getSymbolicName() {
1:8702237:         return resource.getSymbolicName();
1:8702237:     }
1:8702237: 
1:8702237:     public String getURI() {
1:8702237:         return resource.getURI();
1:8702237:     }
1:8702237: 
1:8702237:     public Version getVersion() {
1:8702237:         return resource.getVersion();
1:8702237:     }
1:8702237: 
1:8702237:     public boolean isLocal() {
1:8702237:         return false;
1:8702237:     }
1:8702237: 
1:c199482:     public String toString() {
1:c199482:         return resource.toString();
1:c199482:     }
1:8702237: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:c199482
/////////////////////////////////////////////////////////////////////////
1:     public String toString() {
1:         return resource.toString();
1:     }
commit:8702237
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *  http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.application.resolver.obr.impl;
1: 
1: import java.util.Map;
1: 
1: import org.apache.felix.bundlerepository.Capability;
1: import org.apache.felix.bundlerepository.Requirement;
1: import org.apache.felix.bundlerepository.Resource;
1: import org.osgi.framework.Version;
1: 
1: /**
1:  * @version $Rev$ $Date$
1:  */
1: public class ResourceWrapper implements Resource {
1: 
1:     private final Resource resource;
1:     
1:     public ResourceWrapper(Resource resource) {
1:         this.resource = resource;
1:     }
1:     
1:     public Capability[] getCapabilities() {
1:         return resource.getCapabilities();
1:     }
1: 
1:     public String[] getCategories() {
1:         return resource.getCategories();
1:     }
1: 
1:     public String getId() {
1:         return resource.getId();
1:     }
1: 
1:     public String getPresentationName() {
1:         return resource.getPresentationName();
1:     }
1: 
1:     public Map getProperties() {
1:         return resource.getProperties();
1:     }
1: 
1:     public Requirement[] getRequirements() {
1:         return resource.getRequirements();
1:     }
1: 
1:     public Long getSize() {
1:         return resource.getSize();
1:     }
1: 
1:     public String getSymbolicName() {
1:         return resource.getSymbolicName();
1:     }
1: 
1:     public String getURI() {
1:         return resource.getURI();
1:     }
1: 
1:     public Version getVersion() {
1:         return resource.getVersion();
1:     }
1: 
1:     public boolean isLocal() {
1:         return false;
1:     }
1: 
1: }
============================================================================