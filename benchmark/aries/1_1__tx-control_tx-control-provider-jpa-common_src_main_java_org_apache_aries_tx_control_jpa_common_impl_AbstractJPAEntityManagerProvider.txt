1:e55f0fd: /*
1:e55f0fd:  * Licensed to the Apache Software Foundation (ASF) under one
1:e55f0fd:  * or more contributor license agreements.  See the NOTICE file
1:e55f0fd:  * distributed with this work for additional information
1:e55f0fd:  * regarding copyright ownership.  The ASF licenses this file
1:e55f0fd:  * to you under the Apache License, Version 2.0 (the
1:e55f0fd:  * "License"); you may not use this file except in compliance
1:e55f0fd:  * with the License.  You may obtain a copy of the License at
1:e55f0fd:  *
1:e55f0fd:  *   http://www.apache.org/licenses/LICENSE-2.0
1:e55f0fd:  *
1:e55f0fd:  * Unless required by applicable law or agreed to in writing,
1:e55f0fd:  * software distributed under the License is distributed on an
1:e55f0fd:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:e55f0fd:  * KIND, either express or implied.  See the License for the
1:e55f0fd:  * specific language governing permissions and limitations
1:e55f0fd:  * under the License.
1:e55f0fd:  */
1:e55f0fd: package org.apache.aries.tx.control.jpa.common.impl;
1:e55f0fd: 
1:e55f0fd: import javax.persistence.EntityManager;
1:e55f0fd: import javax.persistence.EntityManagerFactory;
1:e55f0fd: 
1:e55f0fd: import org.osgi.service.transaction.control.TransactionControl;
1:e55f0fd: import org.osgi.service.transaction.control.TransactionException;
1:e55f0fd: import org.osgi.service.transaction.control.jpa.JPAEntityManagerProvider;
1:e55f0fd: import org.slf4j.Logger;
1:e55f0fd: import org.slf4j.LoggerFactory;
1:e55f0fd: 
1:0e20712: public abstract class AbstractJPAEntityManagerProvider implements JPAEntityManagerProvider, AutoCloseable {
1:e55f0fd: 
1:e55f0fd: 	private static final Logger LOG = LoggerFactory.getLogger(AbstractJPAEntityManagerProvider.class);
1:e55f0fd: 	
1:e55f0fd: 	protected final EntityManagerFactory emf;
1:e55f0fd: 
1:e55f0fd: 	private final Runnable onClose;
1:e55f0fd: 	
1:e55f0fd: 	public AbstractJPAEntityManagerProvider(EntityManagerFactory emf, Runnable onClose) {
1:e55f0fd: 		this.emf = emf;
1:e55f0fd: 		this.onClose = onClose;
1:e55f0fd: 	}
1:e55f0fd: 
1:e55f0fd: 	@Override
1:e55f0fd: 	public abstract EntityManager getResource(TransactionControl txControl)
1:e55f0fd: 			throws TransactionException;
1:e55f0fd: 
1:e55f0fd: 	
1:e55f0fd: 	public void close() {
1:e55f0fd: 		if(onClose != null) {
1:e55f0fd: 			try {
1:e55f0fd: 				onClose.run();
1:e55f0fd: 			} catch (Exception e) {
1:e55f0fd: 				LOG.warn("An error occurred shutting down the JPAEntityManagerProvider {}", emf, e);
1:e55f0fd: 			}
1:e55f0fd: 		}
1:e55f0fd: 	}
1:e55f0fd: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:0e20712
/////////////////////////////////////////////////////////////////////////
1: public abstract class AbstractJPAEntityManagerProvider implements JPAEntityManagerProvider, AutoCloseable {
commit:e55f0fd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.tx.control.jpa.common.impl;
1: 
1: import javax.persistence.EntityManager;
1: import javax.persistence.EntityManagerFactory;
1: 
1: import org.osgi.service.transaction.control.TransactionControl;
1: import org.osgi.service.transaction.control.TransactionException;
1: import org.osgi.service.transaction.control.jpa.JPAEntityManagerProvider;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
0: public abstract class AbstractJPAEntityManagerProvider implements JPAEntityManagerProvider {
1: 
1: 	private static final Logger LOG = LoggerFactory.getLogger(AbstractJPAEntityManagerProvider.class);
1: 	
1: 	protected final EntityManagerFactory emf;
1: 
1: 	private final Runnable onClose;
1: 	
1: 	public AbstractJPAEntityManagerProvider(EntityManagerFactory emf, Runnable onClose) {
1: 		this.emf = emf;
1: 		this.onClose = onClose;
1: 	}
1: 
1: 	@Override
1: 	public abstract EntityManager getResource(TransactionControl txControl)
1: 			throws TransactionException;
1: 
1: 	
1: 	public void close() {
1: 		if(onClose != null) {
1: 			try {
1: 				onClose.run();
1: 			} catch (Exception e) {
1: 				LOG.warn("An error occurred shutting down the JPAEntityManagerProvider {}", emf, e);
1: 			}
1: 		}
1: 	}
1: }
============================================================================