1:a5517f3: /**
1:a5517f3:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:a5517f3:  *  contributor license agreements.  See the NOTICE file distributed with
1:a5517f3:  *  this work for additional information regarding copyright ownership.
1:a5517f3:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:a5517f3:  *  (the "License"); you may not use this file except in compliance with
1:a5517f3:  *  the License.  You may obtain a copy of the License at
1:a5517f3:  *
1:a5517f3:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a5517f3:  *
1:a5517f3:  *  Unless required by applicable law or agreed to in writing, software
1:a5517f3:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:a5517f3:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a5517f3:  *  See the License for the specific language governing permissions and
1:a5517f3:  *  limitations under the License.
1:a5517f3:  */
1:4115fb2: package org.apache.aries.ejb.openejb.extender.itest;
2:4115fb2: 
1:8beabf0: import static org.ops4j.pax.exam.CoreOptions.*;
1:4115fb2: 
1:4115fb2: import java.io.IOException;
1:4115fb2: import java.util.zip.ZipEntry;
1:4115fb2: import java.util.zip.ZipOutputStream;
1:4115fb2: 
1:4115fb2: import org.apache.aries.itest.AbstractIntegrationTest;
1:4115fb2: import org.apache.aries.util.io.IOUtils;
1:8beabf0: import org.ops4j.pax.exam.Configuration;
1:4115fb2: import org.ops4j.pax.exam.Option;
1:4115fb2: 
1:8beabf0: public abstract class AbstractOpenEJBTest extends AbstractIntegrationTest {
1:4115fb2: 
1:8beabf0:     @Configuration
1:8beabf0:     public static Option[] configuration() {
1:8beabf0:         return options(
1:8beabf0:                 junitBundles(),
1:8beabf0:                 mavenBundle("org.ops4j.pax.logging", "pax-logging-api", "1.7.2"),
1:8beabf0:                 mavenBundle("org.ops4j.pax.logging", "pax-logging-service", "1.7.2"),
1:4115fb2: 
1:8beabf0:                 frameworkProperty("org.osgi.framework.system.packages")
1:8beabf0:                         .value("javax.accessibility,javax.activation,javax.activity,javax.annotation,javax.annotation.processing,javax.crypto,javax.crypto.interfaces,javax.crypto.spec,javax.imageio,javax.imageio.event,javax.imageio.metadata,javax.imageio.plugins.bmp,javax.imageio.plugins.jpeg,javax.imageio.spi,javax.imageio.stream,javax.jws,javax.jws.soap,javax.lang.model,javax.lang.model.element,javax.lang.model.type,javax.lang.model.util,javax.management,javax.management.loading,javax.management.modelmbean,javax.management.monitor,javax.management.openmbean,javax.management.relation,javax.management.remote,javax.management.remote.rmi,javax.management.timer,javax.naming,javax.naming.directory,javax.naming.event,javax.naming.ldap,javax.naming.spi,javax.net,javax.net.ssl,javax.print,javax.print.attribute,javax.print.attribute.standard,javax.print.event,javax.rmi,javax.rmi.CORBA,javax.rmi.ssl,javax.script,javax.security.auth,javax.security.auth.callback,javax.security.auth.kerberos,javax.security.auth.login,javax.security.auth.spi,javax.security.auth.x500,javax.security.cert,javax.security.sasl,javax.sound.midi,javax.sound.midi.spi,javax.sound.sampled,javax.sound.sampled.spi,javax.sql,javax.sql.rowset,javax.sql.rowset.serial,javax.sql.rowset.spi,javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.plaf.metal,javax.swing.plaf.multi,javax.swing.plaf.synth,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.text.html.parser,javax.swing.text.rtf,javax.swing.tree,javax.swing.undo,javax.tools,javax.xml,javax.xml.bind,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.bind.helpers,javax.xml.bind.util,javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,javax.xml.crypto.dsig.dom,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec,javax.xml.datatype,javax.xml.namespace,javax.xml.parsers,javax.xml.soap,javax.xml.stream,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stax,javax.xml.transform.stream,javax.xml.validation,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.handler.soap,javax.xml.ws.http,javax.xml.ws.soap,javax.xml.ws.spi,javax.xml.xpath,org.ietf.jgss,org.omg.CORBA,org.omg.CORBA.DynAnyPackage,org.omg.CORBA.ORBPackage,org.omg.CORBA.TypeCodePackage,org.omg.CORBA.portable,org.omg.CORBA_2_3,org.omg.CORBA_2_3.portable,org.omg.CosNaming,org.omg.CosNaming.NamingContextExtPackage,org.omg.CosNaming.NamingContextPackage,org.omg.Dynamic,org.omg.DynamicAny,org.omg.DynamicAny.DynAnyFactoryPackage,org.omg.DynamicAny.DynAnyPackage,org.omg.IOP,org.omg.IOP.CodecFactoryPackage,org.omg.IOP.CodecPackage,org.omg.Messaging,org.omg.PortableInterceptor,org.omg.PortableInterceptor.ORBInitInfoPackage,org.omg.PortableServer,org.omg.PortableServer.CurrentPackage,org.omg.PortableServer.POAManagerPackage,org.omg.PortableServer.POAPackage,org.omg.PortableServer.ServantLocatorPackage,org.omg.PortableServer.portable,org.omg.SendingContext,org.omg.stub.java.rmi,org.w3c.dom,org.w3c.dom.bootstrap,org.w3c.dom.css,org.w3c.dom.events,org.w3c.dom.html,org.w3c.dom.ls,org.w3c.dom.ranges,org.w3c.dom.stylesheets,org.w3c.dom.traversal,org.w3c.dom.views,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"),
1:4115fb2: 
1:8beabf0:                 systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),
1:8beabf0: 
1:8beabf0:                 // Bundles
1:8beabf0:                 mavenBundle("org.apache.aries", "org.apache.aries.util").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.ow2.asm", "asm-all").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.aries.transaction", "org.apache.aries.transaction.manager").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.osgi", "org.osgi.enterprise").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.aries.ejb", "org.apache.aries.ejb.openejb.extender").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openejb", "openejb-core").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openejb", "openejb-api").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openejb", "openejb-javaagent").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openejb", "openejb-jee").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openejb", "openejb-loader").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-impl").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-spi").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-ee").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-ejb").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-web").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.javassist").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.wsdl4j-1.6.1").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.jaxb-impl").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-annotation_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-ejb_3.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jcdi_1.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-el_2.2_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jta_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxrpc_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-atinject_1.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-servlet_3.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jsp_2.2_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-interceptor_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-saaj_1.3_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-activation_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-j2ee-management_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jpa_2.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-j2ee-connector_1.6_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jacc_1.4_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-validation_1.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxrs_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-ws-metadata_2.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaspic_1.0_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxb_2.2_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-stax-api_1.2_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxws_2.2_spec").versionAsInProject(),
1:8beabf0:                 // JMS is non optional if *any* EJBs are going to work, not just ones that use it :/
1:8beabf0:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jms_1.1_spec").versionAsInProject(),
1:8beabf0:                 mavenBundle("commons-cli", "commons-cli").versionAsInProject(),
1:8beabf0:                 mavenBundle("commons-lang", "commons-lang").versionAsInProject(),
1:8beabf0:                 mavenBundle("commons-beanutils", "commons-beanutils").versionAsInProject(),
1:8beabf0:                 mavenBundle("commons-collections", "commons-collections").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.components", "geronimo-connector").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.components", "geronimo-transaction").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.geronimo.bundles", "scannotation").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.xbean", "xbean-asm-shaded").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.xbean", "xbean-finder-shaded").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.xbean", "xbean-naming").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.apache.xbean", "xbean-reflect").versionAsInProject(),
1:8beabf0:                 mavenBundle("org.hsqldb", "hsqldb").versionAsInProject(),
1:8beabf0: 
1:8beabf0:                 mavenBundle("org.apache.aries.testsupport", "org.apache.aries.testsupport.unit").versionAsInProject()
1:8beabf0:         );
1:8beabf0:     }
1:8beabf0: 
1:8beabf0:     protected void addToZip(ZipOutputStream zos, String src) throws IOException {
1:8beabf0:         addToZip(zos, src, src);
1:8beabf0:     }
1:8beabf0: 
1:8beabf0:     protected void addToZip(ZipOutputStream zos, String src, String outLocation)
1:8beabf0:             throws IOException {
1:4115fb2:         zos.putNextEntry(new ZipEntry(outLocation));
1:4115fb2:         IOUtils.copy(getClass().getClassLoader().
1:8beabf0:                 getResourceAsStream(src), zos);
1:4115fb2:         zos.closeEntry();
1:8beabf0:     }
4:4115fb2: }
============================================================================
author:Jean-Baptiste Onofre
-------------------------------------------------------------------------------
commit:8beabf0
/////////////////////////////////////////////////////////////////////////
1: import static org.ops4j.pax.exam.CoreOptions.*;
/////////////////////////////////////////////////////////////////////////
1: import org.ops4j.pax.exam.Configuration;
1: public abstract class AbstractOpenEJBTest extends AbstractIntegrationTest {
1:     @Configuration
1:     public static Option[] configuration() {
1:         return options(
1:                 junitBundles(),
1:                 mavenBundle("org.ops4j.pax.logging", "pax-logging-api", "1.7.2"),
1:                 mavenBundle("org.ops4j.pax.logging", "pax-logging-service", "1.7.2"),
1:                 frameworkProperty("org.osgi.framework.system.packages")
1:                         .value("javax.accessibility,javax.activation,javax.activity,javax.annotation,javax.annotation.processing,javax.crypto,javax.crypto.interfaces,javax.crypto.spec,javax.imageio,javax.imageio.event,javax.imageio.metadata,javax.imageio.plugins.bmp,javax.imageio.plugins.jpeg,javax.imageio.spi,javax.imageio.stream,javax.jws,javax.jws.soap,javax.lang.model,javax.lang.model.element,javax.lang.model.type,javax.lang.model.util,javax.management,javax.management.loading,javax.management.modelmbean,javax.management.monitor,javax.management.openmbean,javax.management.relation,javax.management.remote,javax.management.remote.rmi,javax.management.timer,javax.naming,javax.naming.directory,javax.naming.event,javax.naming.ldap,javax.naming.spi,javax.net,javax.net.ssl,javax.print,javax.print.attribute,javax.print.attribute.standard,javax.print.event,javax.rmi,javax.rmi.CORBA,javax.rmi.ssl,javax.script,javax.security.auth,javax.security.auth.callback,javax.security.auth.kerberos,javax.security.auth.login,javax.security.auth.spi,javax.security.auth.x500,javax.security.cert,javax.security.sasl,javax.sound.midi,javax.sound.midi.spi,javax.sound.sampled,javax.sound.sampled.spi,javax.sql,javax.sql.rowset,javax.sql.rowset.serial,javax.sql.rowset.spi,javax.swing,javax.swing.border,javax.swing.colorchooser,javax.swing.event,javax.swing.filechooser,javax.swing.plaf,javax.swing.plaf.basic,javax.swing.plaf.metal,javax.swing.plaf.multi,javax.swing.plaf.synth,javax.swing.table,javax.swing.text,javax.swing.text.html,javax.swing.text.html.parser,javax.swing.text.rtf,javax.swing.tree,javax.swing.undo,javax.tools,javax.xml,javax.xml.bind,javax.xml.bind.annotation,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.bind.helpers,javax.xml.bind.util,javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,javax.xml.crypto.dsig.dom,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec,javax.xml.datatype,javax.xml.namespace,javax.xml.parsers,javax.xml.soap,javax.xml.stream,javax.xml.stream.events,javax.xml.stream.util,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.transform.stax,javax.xml.transform.stream,javax.xml.validation,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.handler.soap,javax.xml.ws.http,javax.xml.ws.soap,javax.xml.ws.spi,javax.xml.xpath,org.ietf.jgss,org.omg.CORBA,org.omg.CORBA.DynAnyPackage,org.omg.CORBA.ORBPackage,org.omg.CORBA.TypeCodePackage,org.omg.CORBA.portable,org.omg.CORBA_2_3,org.omg.CORBA_2_3.portable,org.omg.CosNaming,org.omg.CosNaming.NamingContextExtPackage,org.omg.CosNaming.NamingContextPackage,org.omg.Dynamic,org.omg.DynamicAny,org.omg.DynamicAny.DynAnyFactoryPackage,org.omg.DynamicAny.DynAnyPackage,org.omg.IOP,org.omg.IOP.CodecFactoryPackage,org.omg.IOP.CodecPackage,org.omg.Messaging,org.omg.PortableInterceptor,org.omg.PortableInterceptor.ORBInitInfoPackage,org.omg.PortableServer,org.omg.PortableServer.CurrentPackage,org.omg.PortableServer.POAManagerPackage,org.omg.PortableServer.POAPackage,org.omg.PortableServer.ServantLocatorPackage,org.omg.PortableServer.portable,org.omg.SendingContext,org.omg.stub.java.rmi,org.w3c.dom,org.w3c.dom.bootstrap,org.w3c.dom.css,org.w3c.dom.events,org.w3c.dom.html,org.w3c.dom.ls,org.w3c.dom.ranges,org.w3c.dom.stylesheets,org.w3c.dom.traversal,org.w3c.dom.views,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers"),
1:                 systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("INFO"),
1: 
1:                 // Bundles
1:                 mavenBundle("org.apache.aries", "org.apache.aries.util").versionAsInProject(),
1:                 mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint").versionAsInProject(),
1:                 mavenBundle("org.ow2.asm", "asm-all").versionAsInProject(),
1:                 mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy").versionAsInProject(),
1:                 mavenBundle("org.apache.aries.transaction", "org.apache.aries.transaction.manager").versionAsInProject(),
1:                 mavenBundle("org.osgi", "org.osgi.enterprise").versionAsInProject(),
1:                 mavenBundle("org.apache.aries.ejb", "org.apache.aries.ejb.openejb.extender").versionAsInProject(),
1:                 mavenBundle("org.apache.openejb", "openejb-core").versionAsInProject(),
1:                 mavenBundle("org.apache.openejb", "openejb-api").versionAsInProject(),
1:                 mavenBundle("org.apache.openejb", "openejb-javaagent").versionAsInProject(),
1:                 mavenBundle("org.apache.openejb", "openejb-jee").versionAsInProject(),
1:                 mavenBundle("org.apache.openejb", "openejb-loader").versionAsInProject(),
1:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-impl").versionAsInProject(),
1:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-spi").versionAsInProject(),
1:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-ee").versionAsInProject(),
1:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-ejb").versionAsInProject(),
1:                 mavenBundle("org.apache.openwebbeans", "openwebbeans-web").versionAsInProject(),
1:                 mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.javassist").versionAsInProject(),
1:                 mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.wsdl4j-1.6.1").versionAsInProject(),
1:                 mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.jaxb-impl").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-annotation_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-ejb_3.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jcdi_1.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-el_2.2_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jta_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxrpc_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-atinject_1.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-servlet_3.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jsp_2.2_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-interceptor_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-saaj_1.3_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-activation_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-j2ee-management_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jpa_2.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-j2ee-connector_1.6_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jacc_1.4_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-validation_1.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxrs_1.1_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-ws-metadata_2.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaspic_1.0_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxb_2.2_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-stax-api_1.2_spec").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jaxws_2.2_spec").versionAsInProject(),
1:                 // JMS is non optional if *any* EJBs are going to work, not just ones that use it :/
1:                 mavenBundle("org.apache.geronimo.specs", "geronimo-jms_1.1_spec").versionAsInProject(),
1:                 mavenBundle("commons-cli", "commons-cli").versionAsInProject(),
1:                 mavenBundle("commons-lang", "commons-lang").versionAsInProject(),
1:                 mavenBundle("commons-beanutils", "commons-beanutils").versionAsInProject(),
1:                 mavenBundle("commons-collections", "commons-collections").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.components", "geronimo-connector").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.components", "geronimo-transaction").versionAsInProject(),
1:                 mavenBundle("org.apache.geronimo.bundles", "scannotation").versionAsInProject(),
1:                 mavenBundle("org.apache.xbean", "xbean-asm-shaded").versionAsInProject(),
1:                 mavenBundle("org.apache.xbean", "xbean-finder-shaded").versionAsInProject(),
1:                 mavenBundle("org.apache.xbean", "xbean-naming").versionAsInProject(),
1:                 mavenBundle("org.apache.xbean", "xbean-reflect").versionAsInProject(),
1:                 mavenBundle("org.hsqldb", "hsqldb").versionAsInProject(),
1: 
1:                 mavenBundle("org.apache.aries.testsupport", "org.apache.aries.testsupport.unit").versionAsInProject()
1:         );
1:     }
1: 
1:     protected void addToZip(ZipOutputStream zos, String src) throws IOException {
1:         addToZip(zos, src, src);
1:     }
1: 
1:     protected void addToZip(ZipOutputStream zos, String src, String outLocation)
1:             throws IOException {
1:                 getResourceAsStream(src), zos);
1:     }
author:Emily Jiang
-------------------------------------------------------------------------------
commit:71e1cec
/////////////////////////////////////////////////////////////////////////
0:         mavenBundle("org.ow2.asm", "asm-all"),
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:a5517f3
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
commit:4115fb2
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.ejb.openejb.extender.itest;
1: 
0: import static org.apache.aries.itest.ExtraOptions.mavenBundle;
0: import static org.apache.aries.itest.ExtraOptions.paxLogging;
0: import static org.apache.aries.itest.ExtraOptions.testOptions;
0: import static org.apache.aries.itest.ExtraOptions.transactionBootDelegation;
0: import static org.ops4j.pax.exam.CoreOptions.equinox;
0: import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
1: 
1: import java.io.IOException;
1: import java.util.zip.ZipEntry;
1: import java.util.zip.ZipOutputStream;
1: 
1: import org.apache.aries.itest.AbstractIntegrationTest;
1: import org.apache.aries.util.io.IOUtils;
1: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
1: 
0: public abstract class AbstractOpenEJBTest extends AbstractIntegrationTest{
0:   @org.ops4j.pax.exam.junit.Configuration
0:   public static Option[] configuration() {
0:     return testOptions(
0:         paxLogging("DEBUG"),
0:         transactionBootDelegation(),
0:         vmOption("-Dorg.osgi.framework.system.packages.extra=sun.misc,javax.xml.namespace;version=1.1"),
0:         // Bundles
0:         mavenBundle("org.apache.aries", "org.apache.aries.util"),
0:         mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint"),
0:         mavenBundle("asm", "asm-all"),
0:         mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy"),
0:         mavenBundle("org.apache.aries.transaction", "org.apache.aries.transaction.manager"),
0:         mavenBundle("org.osgi", "org.osgi.compendium"),
0:         mavenBundle("org.apache.aries.ejb", "org.apache.aries.ejb.openejb.extender"),
0:         mavenBundle("org.apache.openejb", "openejb-core"),
0:         mavenBundle("org.apache.openejb", "openejb-api"),
0:         mavenBundle("org.apache.openejb", "openejb-javaagent"),
0:         mavenBundle("org.apache.openejb", "openejb-jee"),
0:         mavenBundle("org.apache.openejb", "openejb-loader"),
0:         mavenBundle("org.apache.openwebbeans", "openwebbeans-impl"),
0:         mavenBundle("org.apache.openwebbeans", "openwebbeans-spi"),
0:         mavenBundle("org.apache.openwebbeans", "openwebbeans-ee"),
0:         mavenBundle("org.apache.openwebbeans", "openwebbeans-ejb"),
0:         mavenBundle("org.apache.openwebbeans", "openwebbeans-web"),
0:         mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.javassist"),
0:         mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.wsdl4j-1.6.1"),
0:         mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.jaxb-impl"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-annotation_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-ejb_3.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jcdi_1.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-el_2.2_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jta_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jaxrpc_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-atinject_1.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-servlet_3.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jsp_2.2_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-interceptor_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-saaj_1.3_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-activation_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-j2ee-management_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jpa_2.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-j2ee-connector_1.6_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jacc_1.4_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-validation_1.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jaxrs_1.1_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-ws-metadata_2.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jaspic_1.0_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jaxb_2.2_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-stax-api_1.2_spec"),
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jaxws_2.2_spec"),
0:         //JMS is non optional if *any* EJBs are going to work, not just ones that use it :/
0:         mavenBundle("org.apache.geronimo.specs", "geronimo-jms_1.1_spec"),
0:         mavenBundle("commons-cli", "commons-cli"),
0:         mavenBundle("commons-lang", "commons-lang"),
0:         mavenBundle("commons-beanutils", "commons-beanutils"),
0:         mavenBundle("commons-collections", "commons-collections"),
0:         mavenBundle("org.apache.geronimo.components", "geronimo-connector"),
0:         mavenBundle("org.apache.geronimo.components", "geronimo-transaction"),
0:         mavenBundle("org.apache.geronimo.bundles", "scannotation"),
0:         mavenBundle("org.apache.xbean", "xbean-asm-shaded"),
0:         mavenBundle("org.apache.xbean", "xbean-finder-shaded"),
0:         mavenBundle("org.apache.xbean", "xbean-naming"),
0:         mavenBundle("org.apache.xbean", "xbean-reflect"),
0:         mavenBundle("org.hsqldb", "hsqldb"),
0: //        vmOption ("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006"),
0: //        waitForFrameworkStartup(),
1:         
1: 
0:         PaxRunnerOptions.rawPaxRunnerOption("config", "classpath:ss-runner.properties"),
0:         equinox().version("3.7.0.v20110613"));
1:   }
1: 
0:   protected void addToZip(ZipOutputStream zos, String src) throws IOException {
0:     addToZip(zos, src, src);
1:   }
1: 
0:   protected void addToZip(ZipOutputStream zos, String src, String outLocation)
0:       throws IOException {
1:         zos.putNextEntry(new ZipEntry(outLocation));
1:         IOUtils.copy(getClass().getClassLoader().
0:             getResourceAsStream(src), zos);
1:         zos.closeEntry();
1:       }
1: }
============================================================================