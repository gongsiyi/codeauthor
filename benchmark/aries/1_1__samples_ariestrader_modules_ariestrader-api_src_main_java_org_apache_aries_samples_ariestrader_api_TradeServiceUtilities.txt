1:628add4: /**
1:628add4:  *  Licensed to4the Apache Software Foundation (ASF) under one
1:628add4:  *  or more contributor license agreements.  See the NOTICE file
1:628add4:  *  distributed with this work for additional information
1:628add4:  *  regarding copyright ownership. The ASF licenses this file to
1:628add4:  *  You under the Apache License, Version 2.0 (the "License");
1:628add4:  *  you may not use this file except in compliance with the
1:628add4:  *  License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.api;
1:628add4: 
1:56a6860: import org.apache.aries.samples.ariestrader.util.Log;
1:56a6860: import org.apache.aries.samples.ariestrader.util.ServiceUtilities;
1:628add4: 
1:628add4: 
1:628add4: /**
1:628add4:  * TradeServiceUtilities provides servlet specific client side
1:628add4:  * utility functions.
1:628add4:  */
1:628add4: public class TradeServiceUtilities {
1:628add4: 
1:628add4:     /**
1:628add4:      * Lookup and return the TradeServices osgi service
1:628add4:      * 
1:628add4:      * @return TradeServices
1:628add4:      * 
1:628add4:      */
1:628add4:     public static final TradeServices getTradeServices() {
1:628add4:         if (Log.doTrace())
1:628add4:             Log.trace("TradeServiceUtilities:getTradeServices()");
1:628add4:         return getTradeServices(null);
1:628add4:     }
1:628add4: 
1:628add4:     /**
1:628add4:      * Lookup and return the TradeServices osgi service with filter
1:628add4:      * 
1:628add4:      * @return TradeServices
1:628add4:      * 
1:628add4:      */
1:628add4:     public static final TradeServices getTradeServices(String filter) {
1:628add4:         if (Log.doTrace())
1:628add4:             Log.trace("TradeServiceUtilities:getTradeServices()" , filter);
1:628add4:         return (TradeServices) ServiceUtilities.getOSGIService(TradeServices.class.getName(), filter);
1:628add4:     }
1:628add4: 
1:628add4:     /**
1:628add4:      * Lookup and return the TradeServicesManager osgi service
1:628add4:      * 
1:628add4:      * @return TradeServicesManager
1:628add4:      * 
1:628add4:      */
1:628add4:     public static final TradeServicesManager getTradeServicesManager() {
1:628add4:         if (Log.doTrace())
1:628add4:             Log.trace("TradeServiceUtilities:getTradeServicesManager()");
1:628add4:         return (TradeServicesManager) ServiceUtilities.getOSGIService(TradeServicesManager.class.getName());
1:628add4:     }
1:628add4: 
1:628add4:     /**
1:628add4:      * Lookup and return the TradeDBManager osgi service
1:628add4:      * 
1:628add4:      * @return TradeDBManager
1:628add4:      * 
1:628add4:      */
1:628add4:     public static final TradeDBManager getTradeDBManager() {
1:628add4:         if (Log.doTrace())
1:628add4:             Log.trace("TradeServiceUtilities:getTradeDBManager()");
1:628add4:         return (TradeDBManager) ServiceUtilities.getOSGIService(TradeDBManager.class.getName());
1:628add4:     }
1:628add4: 
1:628add4: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.api;
1: import org.apache.aries.samples.ariestrader.util.Log;
1: import org.apache.aries.samples.ariestrader.util.ServiceUtilities;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.api;
0: import org.apache.aries.samples.daytrader.util.Log;
0: import org.apache.aries.samples.daytrader.util.ServiceUtilities;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to4the Apache Software Foundation (ASF) under one
1:  *  or more contributor license agreements.  See the NOTICE file
1:  *  distributed with this work for additional information
1:  *  regarding copyright ownership. The ASF licenses this file to
1:  *  You under the Apache License, Version 2.0 (the "License");
1:  *  you may not use this file except in compliance with the
1:  *  License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.api;
1: 
0: import org.apache.geronimo.samples.daytrader.util.Log;
0: import org.apache.geronimo.samples.daytrader.util.ServiceUtilities;
1: 
1: 
1: /**
1:  * TradeServiceUtilities provides servlet specific client side
1:  * utility functions.
1:  */
1: public class TradeServiceUtilities {
1: 
1:     /**
1:      * Lookup and return the TradeServices osgi service
1:      * 
1:      * @return TradeServices
1:      * 
1:      */
1:     public static final TradeServices getTradeServices() {
1:         if (Log.doTrace())
1:             Log.trace("TradeServiceUtilities:getTradeServices()");
1:         return getTradeServices(null);
1:     }
1: 
1:     /**
1:      * Lookup and return the TradeServices osgi service with filter
1:      * 
1:      * @return TradeServices
1:      * 
1:      */
1:     public static final TradeServices getTradeServices(String filter) {
1:         if (Log.doTrace())
1:             Log.trace("TradeServiceUtilities:getTradeServices()" , filter);
1:         return (TradeServices) ServiceUtilities.getOSGIService(TradeServices.class.getName(), filter);
1:     }
1: 
1:     /**
1:      * Lookup and return the TradeServicesManager osgi service
1:      * 
1:      * @return TradeServicesManager
1:      * 
1:      */
1:     public static final TradeServicesManager getTradeServicesManager() {
1:         if (Log.doTrace())
1:             Log.trace("TradeServiceUtilities:getTradeServicesManager()");
1:         return (TradeServicesManager) ServiceUtilities.getOSGIService(TradeServicesManager.class.getName());
1:     }
1: 
1:     /**
1:      * Lookup and return the TradeDBManager osgi service
1:      * 
1:      * @return TradeDBManager
1:      * 
1:      */
1:     public static final TradeDBManager getTradeDBManager() {
1:         if (Log.doTrace())
1:             Log.trace("TradeServiceUtilities:getTradeDBManager()");
1:         return (TradeDBManager) ServiceUtilities.getOSGIService(TradeDBManager.class.getName());
1:     }
1: 
1: }
============================================================================