1:dd9325e: /**
1:dd9325e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:dd9325e:  *  contributor license agreements.  See the NOTICE file distributed with
1:dd9325e:  *  this work for additional information regarding copyright ownership.
1:dd9325e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:dd9325e:  *  (the "License"); you may not use this file except in compliance with
1:dd9325e:  *  the License.  You may obtain a copy of the License at
1:dd9325e:  *
1:dd9325e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dd9325e:  *
1:dd9325e:  *  Unless required by applicable law or agreed to in writing, software
1:dd9325e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:dd9325e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dd9325e:  *  See the License for the specific language governing permissions and
1:dd9325e:  *  limitations under the License.
1:dd9325e:  */
1:dd9325e: package org.apache.aries.blueprint.annotation;
1:dd9325e: 
1:dd9325e: import java.lang.annotation.ElementType;
1:dd9325e: import java.lang.annotation.Retention;
1:dd9325e: import java.lang.annotation.RetentionPolicy;
1:dd9325e: import java.lang.annotation.Target;
1:dd9325e: 
1:dd9325e: /**
1:dd9325e:  * this is really bundle level declaration
1:be22f12:  * It is possible we want to eliminate this annotation and move the configuration to the bundle manifest header.
1:dd9325e:  *
1:dd9325e:  */
1:dd9325e: @Target(ElementType.TYPE)
1:dd9325e: @Retention(RetentionPolicy.RUNTIME)
1:dd9325e: public @interface Blueprint {
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * Specifies the default activation setting that will be defined
1:dd9325e:      * for components.  If not specified, the global default is "eager".
1:dd9325e:      * Individual components may override the default value.
1:dd9325e:      */
1:dd9325e:     String defaultActivation() default "eager";
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * Specifies the default timeout value to be used when operations
1:dd9325e:      * are invoked on unsatisfied service references.  If the
1:dd9325e:      * reference does not change to a satisfied state within the timeout
1:dd9325e:      * window, an error is raised on the method invocation.  The
1:dd9325e:      * default timeout value is 300 seconds and individual
1:dd9325e:      * <reference> element can override the specified configuration default.
1:dd9325e:      */   
1:dd9325e:     int defaultTimeout() default 300;
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * Specifies the default availability value to be used for
1:dd9325e:      * <reference>, and <reference-list> components.  The
1:dd9325e:      * normal default is "mandatory", and can be changed by individual
1:dd9325e:      * service reference components. 
1:dd9325e:      */
1:dd9325e:     String defaultAvailability() default "mandatory";
1:dd9325e:     
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:be22f12
/////////////////////////////////////////////////////////////////////////
1:  * It is possible we want to eliminate this annotation and move the configuration to the bundle manifest header.
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.annotation;
1: 
1: import java.lang.annotation.ElementType;
1: import java.lang.annotation.Retention;
1: import java.lang.annotation.RetentionPolicy;
1: import java.lang.annotation.Target;
1: 
1: /**
1:  * this is really bundle level declaration
1:  *
1:  */
1: @Target(ElementType.TYPE)
1: @Retention(RetentionPolicy.RUNTIME)
1: public @interface Blueprint {
1:     
1:     /**
1:      * Specifies the default activation setting that will be defined
1:      * for components.  If not specified, the global default is "eager".
1:      * Individual components may override the default value.
1:      */
1:     String defaultActivation() default "eager";
1:     
1:     /**
1:      * Specifies the default timeout value to be used when operations
1:      * are invoked on unsatisfied service references.  If the
1:      * reference does not change to a satisfied state within the timeout
1:      * window, an error is raised on the method invocation.  The
1:      * default timeout value is 300 seconds and individual
1:      * <reference> element can override the specified configuration default.
1:      */   
1:     int defaultTimeout() default 300;
1:     
1:     /**
1:      * Specifies the default availability value to be used for
1:      * <reference>, and <reference-list> components.  The
1:      * normal default is "mandatory", and can be changed by individual
1:      * service reference components. 
1:      */
1:     String defaultAvailability() default "mandatory";
1:     
1: }
============================================================================