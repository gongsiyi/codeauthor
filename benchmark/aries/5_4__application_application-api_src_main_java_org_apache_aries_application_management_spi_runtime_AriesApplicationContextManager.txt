1:8914925: /*
1:8914925:  * Licensed to the Apache Software Foundation (ASF) under one
1:8914925:  * or more contributor license agreements.  See the NOTICE file
1:8914925:  * distributed with this work for additional information
1:8914925:  * regarding copyright ownership.  The ASF licenses this file
1:8914925:  * to you under the Apache License, Version 2.0 (the
1:8914925:  * "License"); you may not use this file except in compliance
1:8914925:  * with the License.  You may obtain a copy of the License at
1:8914925:  *
1:8914925:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8914925:  *
1:8914925:  * Unless required by applicable law or agreed to in writing,
1:8914925:  * software distributed under the License is distributed on an
1:8914925:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:8914925:  * KIND, either express or implied.  See the License for the
1:8914925:  * specific language governing permissions and limitations
1:8914925:  * under the License.
1:8914925:  */
1:8914925: 
1:89f804e: package org.apache.aries.application.management.spi.runtime;
1:8914925: 
1:8914925: import java.util.Set;
1:8914925: 
1:8151f8c: import org.apache.aries.application.DeploymentMetadata;
1:89f804e: import org.apache.aries.application.management.AriesApplication;
1:89f804e: import org.apache.aries.application.management.AriesApplicationContext;
1:89f804e: import org.apache.aries.application.management.ManagementException;
1:89f804e: import org.apache.aries.application.management.UpdateException;
1:55a9b56: import org.osgi.framework.BundleException;
1:8914925: 
1:1caf596: /**
1:43be66f:  * An ApplicationContextManager is responsible for managing Aries applications in the 
1:43be66f:  * server's OSGi runtime. We expect that many projects consuming this code will provide
1:43be66f:  * their own implementation of this service. 
1:43be66f:  */
1:948b72b: public interface AriesApplicationContextManager {
1:8914925: 
1:43be66f:   /**
1:43be66f:    * Obtain an ApplicationContext for an AriesApplication. Applications are stopped and
1:43be66f:    * started via an ApplicationContext. 
1:43be66f:    * @param app The applicaton for which to obtain an ApplicationContext. 
1:948b72b:    * @return AriesApplicationContext
1:55a9b56:    * @throws BundleException 
1:55a9b56:    * @throws ManagementException 
1:43be66f:    */
1:948b72b:   public AriesApplicationContext getApplicationContext(AriesApplication app) throws BundleException, ManagementException;
1:1caf596: 
1:43be66f:   /**
1:948b72b:    * @return The set of all AriesApplicationContexts.
1:43be66f:    */
1:948b72b:   public Set<AriesApplicationContext> getApplicationContexts();
1:55a9b56: 
1:43be66f:   /**
1:8151f8c:    * Update the AriesApplication and return an updated application context.
1:8151f8c:    * @throws UpdateException if the update failed
1:8151f8c:    * @throws IllegalArgumentException if the app is not currently installed
1:8151f8c:    */
1:8151f8c:   public AriesApplicationContext update(AriesApplication app, DeploymentMetadata oldMetadata) throws UpdateException;
1:8151f8c:   
1:8151f8c:   /**
1:948b72b:    * Remove the provided AriesApplicationContext from the running system.
1:1caf596:    * 
1:1caf596:    * @param app the application to remove.
1:1caf596:    */
1:948b72b:   public void remove(AriesApplicationContext app) throws BundleException;
1:8914925: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.management.spi.runtime;
1: import org.apache.aries.application.management.AriesApplication;
1: import org.apache.aries.application.management.AriesApplicationContext;
1: import org.apache.aries.application.management.ManagementException;
1: import org.apache.aries.application.management.UpdateException;
commit:8151f8c
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.DeploymentMetadata;
/////////////////////////////////////////////////////////////////////////
1:    * Update the AriesApplication and return an updated application context.
1:    * @throws UpdateException if the update failed
1:    * @throws IllegalArgumentException if the app is not currently installed
1:    */
1:   public AriesApplicationContext update(AriesApplication app, DeploymentMetadata oldMetadata) throws UpdateException;
1:   
1:   /**
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:948b72b
/////////////////////////////////////////////////////////////////////////
1: public interface AriesApplicationContextManager {
1:    * @return AriesApplicationContext
1:   public AriesApplicationContext getApplicationContext(AriesApplication app) throws BundleException, ManagementException;
1:    * @return The set of all AriesApplicationContexts.
1:   public Set<AriesApplicationContext> getApplicationContexts();
1:    * Remove the provided AriesApplicationContext from the running system.
1:   public void remove(AriesApplicationContext app) throws BundleException;
commit:8914925
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
0: package org.apache.aries.application.management;
1: 
1: import java.util.Set;
1: 
0: /* We'll use this interface as a plug-point to the application-runtime */
0: public interface ApplicationContextManager {
1: 
0:   // Moved from AriesApplicationManager
0:   public ApplicationContext getApplicationContext(AriesApplication app);
1:   
0:   // Not sure who needs this or for what, so don't yet know if it'll need to 
0:   // be an immutable copy, or a live reference. 
0:   public Set<ApplicationContext> getApplicationContexts();
1: }
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:d9bfe63
/////////////////////////////////////////////////////////////////////////
0:   public void remove(ApplicationContext app) throws BundleException;
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:1caf596
/////////////////////////////////////////////////////////////////////////
1: 
1:   /**
0:    * Remove the provided ApplicationContext from the running system.
1:    * 
1:    * @param app the application to remove.
1:    */
0:   public void remove(ApplicationContext app);
commit:55a9b56
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.BundleException;
1: 
/////////////////////////////////////////////////////////////////////////
1:    * @throws BundleException 
1:    * @throws ManagementException 
0:   public ApplicationContext getApplicationContext(AriesApplication app) throws BundleException, ManagementException;
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:43be66f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * An ApplicationContextManager is responsible for managing Aries applications in the 
1:  * server's OSGi runtime. We expect that many projects consuming this code will provide
1:  * their own implementation of this service. 
1:  */
1:   /**
1:    * Obtain an ApplicationContext for an AriesApplication. Applications are stopped and
1:    * started via an ApplicationContext. 
1:    * @param app The applicaton for which to obtain an ApplicationContext. 
0:    * @return ApplicationContext
1:    */
0: 
1:   /**
0:    * @return The set of all ApplicationContexts.
1:    */
commit:be01f1d
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: 
0: package org.apache.aries.application.management;
0: 
0: import java.util.Set;
0: 
0: /* We'll use this interface as a plug-point to the application-runtime */
0: public interface ApplicationContextManager {
0: 
0:   // Moved from AriesApplicationManager
0:   public ApplicationContext getApplicationContext(AriesApplication app);
0:   
0:   // Not sure who needs this or for what, so don't yet know if it'll need to 
0:   // be an immutable copy, or a live reference. 
0:   public Set<ApplicationContext> getApplicationContexts();
0: }
============================================================================