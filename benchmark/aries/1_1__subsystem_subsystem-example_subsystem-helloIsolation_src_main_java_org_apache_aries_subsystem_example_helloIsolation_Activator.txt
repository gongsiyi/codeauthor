1:62c244e: /*
1:62c244e:  * Licensed under the Apache License, Version 2.0 (the "License");
1:62c244e:  * you may not use this file except in compliance with the License.
1:62c244e:  * You may obtain a copy of the License at
1:62c244e:  *
1:62c244e:  *      http://www.apache.org/licenses/LICENSE-2.0
1:62c244e:  *
1:62c244e:  * Unless required by applicable law or agreed to in writing, software
1:62c244e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:62c244e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:62c244e:  * See the License for the specific language governing permissions and
1:62c244e:  * limitations under the License.
1:62c244e:  */
1:62c244e: 
1:62c244e: package org.apache.aries.subsystem.example.helloIsolation;
1:62c244e: 
1:62c244e: import org.osgi.framework.Bundle;
1:62c244e: import org.osgi.framework.BundleActivator;
1:62c244e: import org.osgi.framework.BundleContext;
1:62c244e: import org.osgi.framework.BundleEvent;
1:62c244e: import org.osgi.framework.ServiceRegistration;
1:62c244e: import org.osgi.util.tracker.BundleTracker;
1:62c244e: import org.osgi.util.tracker.BundleTrackerCustomizer;
1:62c244e: 
1:62c244e: public class Activator implements BundleActivator {
1:62c244e: 
1:62c244e:     private ServiceRegistration sr;
1:62c244e:     private BundleTracker bt;
1:62c244e:     int addEventCount = 0;
1:62c244e:     int removeEventCount = 0;
1:62c244e:     int modifyEventCount = 0;
1:62c244e: 
1:62c244e:     /*
1:62c244e:      * (non-Javadoc)
1:62c244e:      * 
1:62c244e:      * @see
1:62c244e:      * org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext
1:62c244e:      * )
1:62c244e:      */
1:62c244e:     public void start(BundleContext context) throws Exception {
1:62c244e:         System.out.println("bundle helloIsolation start");
1:7f8a973:         
1:7f8a973:         SecurityManager security = System.getSecurityManager();
1:7f8a973:         if (security != null) {
1:7f8a973:             System.out.println("HelloIsolationImpl: system manager is not null");
1:7f8a973:         } else {
1:7f8a973:             System.out.println("HelloIsolationImpl: system manager is still null");
1:7f8a973:         }
1:7f8a973: 
1:7f8a973:         
1:62c244e:         sr = context.registerService(HelloIsolation.class.getName(),
1:62c244e:                 new HelloIsolationImpl(), null);
1:62c244e:         
1:62c244e:         bt = new BundleTracker(context, Bundle.INSTALLED | Bundle.UNINSTALLED | Bundle.ACTIVE, new BundleTrackerCustomizer() {
1:62c244e: 
1:62c244e:             public synchronized Object addingBundle(Bundle bundle, BundleEvent event) {
1:62c244e:                 if (event == null) {
1:62c244e:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - adding Bundle: " + bundle.getSymbolicName() + " event: null");
1:62c244e:                 } else {
1:62c244e:                     System.out.println("HelloIsolation  " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - adding Bundle: " + bundle.getSymbolicName() + " event: " + event.getType());
1:62c244e:                 }
1:62c244e:                 addEventCount++;
1:62c244e:                 return bundle;
1:62c244e:             }
1:62c244e: 
1:62c244e:             public synchronized void modifiedBundle(Bundle bundle, BundleEvent event,
1:62c244e:                     Object object) {
1:62c244e:                 if (event == null) {
1:62c244e:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + "  - modifying Bundle: " + bundle.getSymbolicName() + " event: null");
1:62c244e:                 } else {
1:62c244e:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - modifying Bundle: " + bundle.getSymbolicName() + " event: " + event.getType());
1:62c244e:                 }
1:62c244e:                 modifyEventCount++;
1:62c244e:                 
1:62c244e:             }
1:62c244e: 
1:62c244e:             public synchronized void removedBundle(Bundle bundle, BundleEvent event,
1:62c244e:                     Object object) {
1:62c244e:                 if (event == null) {
1:62c244e:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - removing Bundle: " + bundle.getSymbolicName() + " event: null");
1:62c244e:                 } else {
1:62c244e:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - removing Bundle: " + bundle.getSymbolicName() + " event: " + event.getType());
1:62c244e:                 }
1:62c244e:                 removeEventCount++;
1:62c244e:             }
1:62c244e:             
1:62c244e:         });
1:62c244e:         bt.open();
1:62c244e:     }
1:62c244e:     
1:62c244e:     public int getAddEventCount() {
1:62c244e:         return addEventCount;
1:62c244e:     }
1:62c244e: 
1:62c244e:     /*
1:62c244e:      * (non-Javadoc)
1:62c244e:      * 
1:62c244e:      * @see
1:62c244e:      * org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
1:62c244e:      */
1:62c244e:     public void stop(BundleContext context) throws Exception {
1:62c244e:         System.out.println("bundle helloIsolation stop");
1:62c244e:         if (sr != null) {
1:62c244e:             sr.unregister();
1:62c244e:         }
1:62c244e:         
1:62c244e:         if (bt != null) {
1:62c244e:             bt.close();
1:62c244e:         }
1:62c244e:     }
1:62c244e: 
1:62c244e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:7f8a973
/////////////////////////////////////////////////////////////////////////
1:         
1:         SecurityManager security = System.getSecurityManager();
1:         if (security != null) {
1:             System.out.println("HelloIsolationImpl: system manager is not null");
1:         } else {
1:             System.out.println("HelloIsolationImpl: system manager is still null");
1:         }
1: 
1:         
commit:62c244e
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.aries.subsystem.example.helloIsolation;
1: 
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.BundleEvent;
1: import org.osgi.framework.ServiceRegistration;
1: import org.osgi.util.tracker.BundleTracker;
1: import org.osgi.util.tracker.BundleTrackerCustomizer;
1: 
1: public class Activator implements BundleActivator {
1: 
1:     private ServiceRegistration sr;
1:     private BundleTracker bt;
1:     int addEventCount = 0;
1:     int removeEventCount = 0;
1:     int modifyEventCount = 0;
1: 
1:     /*
1:      * (non-Javadoc)
1:      * 
1:      * @see
1:      * org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext
1:      * )
1:      */
1:     public void start(BundleContext context) throws Exception {
1:         System.out.println("bundle helloIsolation start");
1:         sr = context.registerService(HelloIsolation.class.getName(),
1:                 new HelloIsolationImpl(), null);
1:         
1:         bt = new BundleTracker(context, Bundle.INSTALLED | Bundle.UNINSTALLED | Bundle.ACTIVE, new BundleTrackerCustomizer() {
1: 
1:             public synchronized Object addingBundle(Bundle bundle, BundleEvent event) {
1:                 if (event == null) {
1:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - adding Bundle: " + bundle.getSymbolicName() + " event: null");
1:                 } else {
1:                     System.out.println("HelloIsolation  " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - adding Bundle: " + bundle.getSymbolicName() + " event: " + event.getType());
1:                 }
1:                 addEventCount++;
1:                 return bundle;
1:             }
1: 
1:             public synchronized void modifiedBundle(Bundle bundle, BundleEvent event,
1:                     Object object) {
1:                 if (event == null) {
1:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + "  - modifying Bundle: " + bundle.getSymbolicName() + " event: null");
1:                 } else {
1:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - modifying Bundle: " + bundle.getSymbolicName() + " event: " + event.getType());
1:                 }
1:                 modifyEventCount++;
1:                 
1:             }
1: 
1:             public synchronized void removedBundle(Bundle bundle, BundleEvent event,
1:                     Object object) {
1:                 if (event == null) {
1:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - removing Bundle: " + bundle.getSymbolicName() + " event: null");
1:                 } else {
1:                     System.out.println("HelloIsolation " + bundle.getSymbolicName() + "_" + bundle.getVersion().toString() + " - removing Bundle: " + bundle.getSymbolicName() + " event: " + event.getType());
1:                 }
1:                 removeEventCount++;
1:             }
1:             
1:         });
1:         bt.open();
1:     }
1:     
1:     public int getAddEventCount() {
1:         return addEventCount;
1:     }
1: 
1:     /*
1:      * (non-Javadoc)
1:      * 
1:      * @see
1:      * org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
1:      */
1:     public void stop(BundleContext context) throws Exception {
1:         System.out.println("bundle helloIsolation stop");
1:         if (sr != null) {
1:             sr.unregister();
1:         }
1:         
1:         if (bt != null) {
1:             bt.close();
1:         }
1:     }
1: 
1: }
============================================================================