1:115b814: /*
1:115b814:  * Licensed to the Apache Software Foundation (ASF) under one
1:115b814:  * or more contributor license agreements.  See the NOTICE file
1:115b814:  * distributed with this work for additional information
1:115b814:  * regarding copyright ownership.  The ASF licenses this file
1:115b814:  * to you under the Apache License, Version 2.0 (the
1:115b814:  * "License"); you may not use this file except in compliance
1:115b814:  * with the License.  You may obtain a copy of the License at
1:115b814:  *
1:115b814:  *   http://www.apache.org/licenses/LICENSE-2.0
1:115b814:  *
1:115b814:  * Unless required by applicable law or agreed to in writing,
1:115b814:  * software distributed under the License is distributed on an
1:115b814:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:115b814:  * KIND, either express or implied.  See the License for the
1:115b814:  * specific language governing permissions and limitations
1:115b814:  * under the License.
1:115b814:  */
1:115b814: package org.apache.aries.blueprint.itests;
10:115b814: 
1:c185a5a: import static org.apache.aries.blueprint.itests.Helper.mvnBundle;
1:d251156: 
1:115b814: import org.junit.Test;
1:115b814: import org.junit.runner.RunWith;
1:115b814: import org.ops4j.pax.exam.Option;
1:d251156: import org.ops4j.pax.exam.junit.PaxExam;
1:115b814: import org.osgi.framework.Bundle;
1:86224ba: 
1:115b814: /**
1:115b814:  * this test is based on blueprint container test, but this test starts the
1:115b814:  * blueprint sample before the blueprint bundle is started so going a slightly 
1:115b814:  * different code path
1:115b814:  *
1:115b814:  */
1:d251156: @RunWith(PaxExam.class)
1:d251156: public class BlueprintContainer2Test extends AbstractBlueprintIntegrationTest {
1:115b814: 
1:115b814:     @Test
1:115b814:     public void test() throws Exception {
1:bc2c036:     	applyCommonConfiguration(context());
1:115b814: 
1:bc2c036:         Bundle bundle = getSampleBundle();
1:115b814:         bundle.start();
1:bc2c036:         startBlueprintBundles();
1:115b814:         
1:115b814:         // do the test
1:86224ba:         Helper.testBlueprintContainer(context(), bundle);
1:115b814:     }
1:86224ba: 
1:d251156:     @org.ops4j.pax.exam.Configuration
1:d251156:     public Option[] configuration() {
1:d251156:         return new Option[] {
1:d251156:             baseOptions(),
1:86224ba:             Helper.blueprintBundles(false),
1:c185a5a:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.sample", false)
1:d251156:         };
1:115b814:     }
1:115b814: 
1:115b814: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:bc2c036
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     	applyCommonConfiguration(context());
1:         Bundle bundle = getSampleBundle();
1:         startBlueprintBundles();
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:c185a5a
/////////////////////////////////////////////////////////////////////////
1: import static org.apache.aries.blueprint.itests.Helper.mvnBundle;
/////////////////////////////////////////////////////////////////////////
1:             mvnBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.sample", false)
author:Daniel Kulp
-------------------------------------------------------------------------------
commit:d251156
/////////////////////////////////////////////////////////////////////////
0: import static org.ops4j.pax.exam.CoreOptions.mavenBundle;
1: 
1: import org.ops4j.pax.exam.junit.PaxExam;
1: @RunWith(PaxExam.class)
1: public class BlueprintContainer2Test extends AbstractBlueprintIntegrationTest {
0:         Hashtable<String, String> props = new Hashtable<String, String>();
/////////////////////////////////////////////////////////////////////////
1:     @org.ops4j.pax.exam.Configuration
1:     public Option[] configuration() {
1:         return new Option[] {
1:             baseOptions(),
0:             mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.sample").noStart()
1:         };
commit:7647010
/////////////////////////////////////////////////////////////////////////
0:         Bundle blueprintBundle = context().getBundleByName("org.apache.aries.blueprint.core");
0:         Bundle blueprintCMBundle = context().getBundleByName("org.apache.aries.blueprint.cm");
0:         assertNotNull(bundle);
0:         blueprintCMBundle.start();
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:86224ba
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.itest.AbstractIntegrationTest;
/////////////////////////////////////////////////////////////////////////
0: import static org.apache.aries.itest.ExtraOptions.*;
1: 
/////////////////////////////////////////////////////////////////////////
0:         ConfigurationAdmin ca = context().getService(ConfigurationAdmin.class);
0:         Bundle bundle = context().getBundleByName("org.apache.aries.blueprint.sample");
0:         Bundle blueprintBundle = context().getBundleByName("org.apache.aries.blueprint");
1:         Helper.testBlueprintContainer(context(), bundle);
0:         return testOptions(
0:             paxLogging("DEBUG"),
1:             Helper.blueprintBundles(false),
1:             
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:5254613
/////////////////////////////////////////////////////////////////////////
0:             mavenBundle("org.apache.aries.proxy", "org.apache.aries.proxy"),
0:             mavenBundle("asm", "asm-all"),
author:Lin Sun
-------------------------------------------------------------------------------
commit:115b814
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.itests;
1: 
0: import static org.junit.Assert.assertNotNull;
0: import static org.ops4j.pax.exam.CoreOptions.equinox;
0: import static org.ops4j.pax.exam.CoreOptions.options;
0: import static org.ops4j.pax.exam.CoreOptions.systemProperty;
1: 
0: import java.util.Hashtable;
1: 
1: import org.junit.Test;
1: import org.junit.runner.RunWith;
1: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
1: import org.osgi.framework.Bundle;
0: import org.osgi.service.cm.Configuration;
0: import org.osgi.service.cm.ConfigurationAdmin;
1: 
1: /**
1:  * this test is based on blueprint container test, but this test starts the
1:  * blueprint sample before the blueprint bundle is started so going a slightly 
1:  * different code path
1:  *
1:  */
0: @RunWith(JUnit4TestRunner.class)
0: public class BlueprintContainer2Test extends AbstractIntegrationTest {
1: 
1:     @Test
1:     public void test() throws Exception {
0:         // Create a config to check the property placeholder
0:         ConfigurationAdmin ca = getOsgiService(ConfigurationAdmin.class);
0:         Configuration cf = ca.getConfiguration("blueprint-sample-placeholder", null);
0:         Hashtable props = new Hashtable();
0:         props.put("key.b", "10");
0:         cf.update(props);
1: 
0:         Bundle bundle = getInstalledBundle("org.apache.aries.blueprint.sample");
0:         Bundle blueprintBundle = getInstalledBundle("org.apache.aries.blueprint");
0:         assertNotNull(bundle);
1: 
1:         bundle.start();
0:         blueprintBundle.start();
1:         
1:         // do the test
0:         testBlueprintContainer(bundle);
1:     }
1: 
0:     @org.ops4j.pax.exam.junit.Configuration
0:     public static Option[] configuration() {
0:         Option[] options = options(
0:             // Log
0:             mavenBundle("org.ops4j.pax.logging", "pax-logging-api"),
0:             mavenBundle("org.ops4j.pax.logging", "pax-logging-service"),
0:             // Felix Config Admin
0:             mavenBundle("org.apache.felix", "org.apache.felix.configadmin"),
0:             // Felix mvn url handler
0:             mavenBundle("org.ops4j.pax.url", "pax-url-mvn"),
1: 
1: 
0:             // this is how you set the default log level when using pax logging (logProfile)
0:             systemProperty("org.ops4j.pax.logging.DefaultServiceLog.level").value("DEBUG"),
1: 
0:             // Bundles
0:             mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint.sample").noStart(),
0:             mavenBundle("org.apache.aries", "org.apache.aries.util"),
0:             mavenBundle("org.apache.aries.blueprint", "org.apache.aries.blueprint").noStart(),
0:             mavenBundle("org.osgi", "org.osgi.compendium"),
0: //            org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption("-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"),
1: 
0:             equinox().version("3.5.0")
0:         );
0:         options = updateOptions(options);
0:         return options;
1:     }
1: 
1: }
============================================================================