1:96d4e06: /*
1:96d4e06:  * Licensed to the Apache Software Foundation (ASF) under one
1:96d4e06:  * or more contributor license agreements.  See the NOTICE file
1:96d4e06:  * distributed with this work for additional information
1:96d4e06:  * regarding copyright ownership.  The ASF licenses this file
1:96d4e06:  * to you under the Apache License, Version 2.0 (the
1:96d4e06:  * "License"); you may not use this file except in compliance
1:96d4e06:  * with the License.  You may obtain a copy of the License at
1:96d4e06:  *
1:96d4e06:  *   http://www.apache.org/licenses/LICENSE-2.0
1:96d4e06:  *
1:96d4e06:  * Unless required by applicable law or agreed to in writing,
1:96d4e06:  * software distributed under the License is distributed on an
1:96d4e06:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:96d4e06:  * KIND, either express or implied.  See the License for the
1:96d4e06:  * specific language governing permissions and limitations
1:96d4e06:  * under the License.
1:96d4e06:  */
1:475ef33: package org.apache.aries.util;
2:96d4e06: 
1:475ef33: import org.osgi.framework.Bundle;
1:96d4e06: 
1:96d4e06: /**
1:475ef33:  * A fake class for testing
1:96d4e06:  */
1:475ef33: public final class AriesFrameworkUtil 
1:475ef33: {
1:475ef33:   /**
1:475ef33:    * Mock Classloader for testing
1:475ef33:    */
1:475ef33:   public static ClassLoader getClassLoader(Bundle b) 
1:475ef33:   {
1:23a140b:       if (b instanceof ClassLoaderProxy) return ((ClassLoaderProxy) b).getClassLoader();
1:23a140b:       return AriesFrameworkUtil.class.getClassLoader();
1:96d4e06:   }
1:ec0e1f2:   
1:ec0e1f2:   // Dummy implementation
1:ec0e1f2:   public static ClassLoader getClassLoaderForced(Bundle b) {
1:ec0e1f2:     return null;
1:ec0e1f2:   }
1:96d4e06: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:23a140b
/////////////////////////////////////////////////////////////////////////
1:       if (b instanceof ClassLoaderProxy) return ((ClassLoaderProxy) b).getClassLoader();
1:       return AriesFrameworkUtil.class.getClassLoader();
commit:ec0e1f2
/////////////////////////////////////////////////////////////////////////
1:   
1:   // Dummy implementation
1:   public static ClassLoader getClassLoaderForced(Bundle b) {
1:     return null;
1:   }
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:475ef33
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.util;
1: import org.osgi.framework.Bundle;
1:  * A fake class for testing
1: public final class AriesFrameworkUtil 
1: {
1:   /**
1:    * Mock Classloader for testing
1:    */
1:   public static ClassLoader getClassLoader(Bundle b) 
1:   {
0:     return AriesFrameworkUtil.class.getClassLoader();
commit:96d4e06
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.proxy.impl.weaving;
1: 
0: import org.objectweb.asm.Type;
0: import org.objectweb.asm.commons.Method;
1: 
1: /**
0:  * This object stores a {@link Method} and the class that declares it
1:  */
0: final class TypeMethod {
0:   final Type declaringClass;
0:   final Method method;
1:   
0:   public TypeMethod(Type declaringClass,
0:       Method method) {
0:     this.declaringClass = declaringClass;
0:     this.method = method;
1:   }
1: }
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:6715d3d
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
commit:5602448
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.proxy;
0: 
0: import java.lang.reflect.InvocationHandler;
0: import java.lang.reflect.Method;
0: 
0: public interface InvocationHandlerWrapper 
0: {
0:   public Object invoke(Object proxy, Method m, Object[] args, InvocationHandler delegate) throws Throwable;
0: }
============================================================================