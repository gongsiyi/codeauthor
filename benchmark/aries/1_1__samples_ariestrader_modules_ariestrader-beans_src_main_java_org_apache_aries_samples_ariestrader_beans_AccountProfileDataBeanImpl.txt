1:628add4: /**
1:628add4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:628add4:  *  contributor license agreements.  See the NOTICE file distributed with
1:628add4:  *  this work for additional information regarding copyright ownership.
1:628add4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:628add4:  *  (the "License"); you may not use this file except in compliance with
1:628add4:  *  the License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.beans;
2:628add4: 
1:56a6860: import org.apache.aries.samples.ariestrader.util.Log;
1:56a6860: import org.apache.aries.samples.ariestrader.util.TradeConfig;
1:880e087: import org.apache.aries.samples.ariestrader.api.persistence.AccountDataBean;
1:880e087: import org.apache.aries.samples.ariestrader.api.persistence.AccountProfileDataBean;
1:628add4: 
1:628add4: 
1:628add4: public class AccountProfileDataBeanImpl implements AccountProfileDataBean, java.io.Serializable {
1:628add4: 
1:628add4:     
1:628add4:     private String userID;              /* userID */
1:628add4:     
1:628add4:    
1:628add4:     private String passwd;              /* password */
1:628add4:     
1:628add4:     
1:628add4:     private String fullName;            /* fullName */
1:628add4:     
1:628add4:     
1:628add4:     private String address;             /* address */
1:628add4:     
1:628add4:     
1:628add4:     private String email;               /* email */
1:628add4:     
1:628add4:     
1:628add4:     private String creditCard;          /* creditCard */
1:628add4:     
1:628add4:     
1:628add4:     private AccountDataBean account;
1:628add4: 
1:628add4:     public AccountProfileDataBeanImpl() {
1:628add4:     }
1:628add4: 
1:628add4:     public AccountProfileDataBeanImpl(String userID,
1:628add4:             String password,
1:628add4:             String fullName,
1:628add4:             String address,
1:628add4:             String email,
1:628add4:             String creditCard) {
1:628add4:         setUserID(userID);
1:628add4:         setPassword(password);
1:628add4:         setFullName(fullName);
1:628add4:         setAddress(address);
1:628add4:         setEmail(email);
1:628add4:         setCreditCard(creditCard);
1:628add4:     }
1:628add4: 
1:628add4:     public static AccountProfileDataBean getRandomInstance() {
1:628add4:         return new AccountProfileDataBeanImpl(
1:628add4:                 TradeConfig.rndUserID(),                        // userID
1:628add4:                 TradeConfig.rndUserID(),                        // passwd
1:628add4:                 TradeConfig.rndFullName(),                      // fullname
1:628add4:                 TradeConfig.rndAddress(),                       // address
1:628add4:                 TradeConfig.rndEmail(TradeConfig.rndUserID()),  //email
1:628add4:                 TradeConfig.rndCreditCard()                     // creditCard
1:628add4:         );
1:628add4:     }
1:628add4: 
1:628add4:     public String toString() {
1:628add4:         return "\n\tAccount Profile Data for userID:" + getUserID()
1:628add4:                 + "\n\t\t   passwd:" + getPassword()
1:628add4:                 + "\n\t\t   fullName:" + getFullName()
1:628add4:                 + "\n\t\t    address:" + getAddress()
1:628add4:                 + "\n\t\t      email:" + getEmail()
1:628add4:                 + "\n\t\t creditCard:" + getCreditCard()
1:628add4:                 ;
1:628add4:     }
1:628add4: 
1:628add4:     public String toHTML() {
1:628add4:         return "<BR>Account Profile Data for userID: <B>" + getUserID() + "</B>"
1:628add4:                 + "<LI>   passwd:" + getPassword() + "</LI>"
1:628add4:                 + "<LI>   fullName:" + getFullName() + "</LI>"
1:628add4:                 + "<LI>    address:" + getAddress() + "</LI>"
1:628add4:                 + "<LI>      email:" + getEmail() + "</LI>"
1:628add4:                 + "<LI> creditCard:" + getCreditCard() + "</LI>"
1:628add4:                 ;
1:628add4:     }
1:628add4: 
1:628add4:     public void print() {
1:628add4:         Log.log(this.toString());
1:628add4:     }
1:628add4: 
1:628add4:     public String getUserID() {
1:628add4:         return userID;
1:628add4:     }
1:628add4: 
1:628add4:     public void setUserID(String userID) {
1:628add4:         this.userID = userID;
1:628add4:     }
1:628add4: 
1:628add4:     public String getPassword() {
1:628add4:         return passwd;
1:628add4:     }
1:628add4: 
1:628add4:     public void setPassword(String password) {
1:628add4:         this.passwd = password;
1:628add4:     }
1:628add4: 
1:628add4:     public String getFullName() {
1:628add4:         return fullName;
1:628add4:     }
1:628add4: 
1:628add4:     public void setFullName(String fullName) {
1:628add4:         this.fullName = fullName;
1:628add4:     }
1:628add4: 
1:628add4:     public String getAddress() {
1:628add4:         return address;
1:628add4:     }
1:628add4: 
1:628add4:     public void setAddress(String address) {
1:628add4:         this.address = address;
1:628add4:     }
1:628add4: 
1:628add4:     public String getEmail() {
1:628add4:         return email;
1:628add4:     }
1:628add4: 
1:628add4:     public void setEmail(String email) {
1:628add4:         this.email = email;
1:628add4:     }
1:628add4: 
1:628add4:     public String getCreditCard() {
1:628add4:         return creditCard;
1:628add4:     }
1:628add4: 
1:628add4:     public void setCreditCard(String creditCard) {
1:628add4:         this.creditCard = creditCard;
1:628add4:     }
1:628add4: 
1:628add4:     public AccountDataBean getAccount() {
1:628add4:         return account;
1:628add4:     }
1:628add4: 
1:628add4:     public void setAccount(AccountDataBean account) {
1:628add4:         this.account = account;
1:628add4:     }
1:628add4:     
1:628add4:     @Override
1:628add4:     public int hashCode() {
1:628add4:         int hash = 0;
1:628add4:         hash += (this.userID != null ? this.userID.hashCode() : 0);
1:628add4:         return hash;
1:628add4:     }
1:628add4: 
1:628add4:     @Override
1:628add4:     public boolean equals(Object object) {
1:628add4:         // TODO: Warning - this method won't work in the case the id fields are not set
1:628add4:         if (!(object instanceof AccountProfileDataBeanImpl)) {
1:628add4:             return false;
1:628add4:         }
1:628add4:         AccountProfileDataBeanImpl other = (AccountProfileDataBeanImpl)object;
1:628add4:         if (this.userID != other.userID && (this.userID == null || !this.userID.equals(other.userID))) return false;
1:628add4:         return true;
1:628add4:     }
1:628add4: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:b8c0170
/////////////////////////////////////////////////////////////////////////
commit:880e087
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.ariestrader.api.persistence.AccountDataBean;
1: import org.apache.aries.samples.ariestrader.api.persistence.AccountProfileDataBean;
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.beans;
1: import org.apache.aries.samples.ariestrader.util.Log;
1: import org.apache.aries.samples.ariestrader.util.TradeConfig;
0: import org.apache.aries.samples.ariestrader.persistence.api.AccountDataBean;
0: import org.apache.aries.samples.ariestrader.persistence.api.AccountProfileDataBean;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.beans;
0: import org.apache.aries.samples.daytrader.util.Log;
0: import org.apache.aries.samples.daytrader.util.TradeConfig;
0: import org.apache.aries.samples.daytrader.persistence.api.AccountDataBean;
0: import org.apache.aries.samples.daytrader.persistence.api.AccountProfileDataBean;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.beans;
1: 
0: import org.apache.geronimo.samples.daytrader.util.Log;
0: import org.apache.geronimo.samples.daytrader.util.TradeConfig;
0: import org.apache.geronimo.samples.daytrader.persistence.api.AccountDataBean;
0: import org.apache.geronimo.samples.daytrader.persistence.api.AccountProfileDataBean;
1: 
1: 
1: public class AccountProfileDataBeanImpl implements AccountProfileDataBean, java.io.Serializable {
1: 
1:     
1:     private String userID;              /* userID */
1:     
1:    
1:     private String passwd;              /* password */
1:     
1:     
1:     private String fullName;            /* fullName */
1:     
1:     
1:     private String address;             /* address */
1:     
1:     
1:     private String email;               /* email */
1:     
1:     
1:     private String creditCard;          /* creditCard */
1:     
1:     
1:     private AccountDataBean account;
1: 
0: //    @Version
0: //    private Integer optLock;
1: 
1:     public AccountProfileDataBeanImpl() {
1:     }
1: 
1:     public AccountProfileDataBeanImpl(String userID,
1:             String password,
1:             String fullName,
1:             String address,
1:             String email,
1:             String creditCard) {
1:         setUserID(userID);
1:         setPassword(password);
1:         setFullName(fullName);
1:         setAddress(address);
1:         setEmail(email);
1:         setCreditCard(creditCard);
1:     }
1: 
1:     public static AccountProfileDataBean getRandomInstance() {
1:         return new AccountProfileDataBeanImpl(
1:                 TradeConfig.rndUserID(),                        // userID
1:                 TradeConfig.rndUserID(),                        // passwd
1:                 TradeConfig.rndFullName(),                      // fullname
1:                 TradeConfig.rndAddress(),                       // address
1:                 TradeConfig.rndEmail(TradeConfig.rndUserID()),  //email
1:                 TradeConfig.rndCreditCard()                     // creditCard
1:         );
1:     }
1: 
1:     public String toString() {
1:         return "\n\tAccount Profile Data for userID:" + getUserID()
1:                 + "\n\t\t   passwd:" + getPassword()
1:                 + "\n\t\t   fullName:" + getFullName()
1:                 + "\n\t\t    address:" + getAddress()
1:                 + "\n\t\t      email:" + getEmail()
1:                 + "\n\t\t creditCard:" + getCreditCard()
1:                 ;
1:     }
1: 
1:     public String toHTML() {
1:         return "<BR>Account Profile Data for userID: <B>" + getUserID() + "</B>"
1:                 + "<LI>   passwd:" + getPassword() + "</LI>"
1:                 + "<LI>   fullName:" + getFullName() + "</LI>"
1:                 + "<LI>    address:" + getAddress() + "</LI>"
1:                 + "<LI>      email:" + getEmail() + "</LI>"
1:                 + "<LI> creditCard:" + getCreditCard() + "</LI>"
1:                 ;
1:     }
1: 
1:     public void print() {
1:         Log.log(this.toString());
1:     }
1: 
1:     public String getUserID() {
1:         return userID;
1:     }
1: 
1:     public void setUserID(String userID) {
1:         this.userID = userID;
1:     }
1: 
1:     public String getPassword() {
1:         return passwd;
1:     }
1: 
1:     public void setPassword(String password) {
1:         this.passwd = password;
1:     }
1: 
1:     public String getFullName() {
1:         return fullName;
1:     }
1: 
1:     public void setFullName(String fullName) {
1:         this.fullName = fullName;
1:     }
1: 
1:     public String getAddress() {
1:         return address;
1:     }
1: 
1:     public void setAddress(String address) {
1:         this.address = address;
1:     }
1: 
1:     public String getEmail() {
1:         return email;
1:     }
1: 
1:     public void setEmail(String email) {
1:         this.email = email;
1:     }
1: 
1:     public String getCreditCard() {
1:         return creditCard;
1:     }
1: 
1:     public void setCreditCard(String creditCard) {
1:         this.creditCard = creditCard;
1:     }
1: 
1:     public AccountDataBean getAccount() {
1:         return account;
1:     }
1: 
1:     public void setAccount(AccountDataBean account) {
1:         this.account = account;
1:     }
1:     
1:     @Override
1:     public int hashCode() {
1:         int hash = 0;
1:         hash += (this.userID != null ? this.userID.hashCode() : 0);
1:         return hash;
1:     }
1: 
1:     @Override
1:     public boolean equals(Object object) {
1:         // TODO: Warning - this method won't work in the case the id fields are not set
1:         if (!(object instanceof AccountProfileDataBeanImpl)) {
1:             return false;
1:         }
1:         AccountProfileDataBeanImpl other = (AccountProfileDataBeanImpl)object;
1:         if (this.userID != other.userID && (this.userID == null || !this.userID.equals(other.userID))) return false;
1:         return true;
1:     }
1: }
============================================================================