1:e104a3b: /*
1:e104a3b:  * Licensed to the Apache Software Foundation (ASF) under one
1:e104a3b:  * or more contributor license agreements.  See the NOTICE file
1:e104a3b:  * distributed with this work for additional information
1:e104a3b:  * regarding copyright ownership.  The ASF licenses this file
1:e104a3b:  * to you under the Apache License, Version 2.0 (the
1:e104a3b:  * "License"); you may not use this file except in compliance
1:e104a3b:  * with the License.  You may obtain a copy of the License at
1:e104a3b:  *
1:e104a3b:  *   http://www.apache.org/licenses/LICENSE-2.0
1:e104a3b:  *
1:e104a3b:  * Unless required by applicable law or agreed to in writing,
1:e104a3b:  * software distributed under the License is distributed on an
1:e104a3b:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:e104a3b:  * KIND, either express or implied.  See the License for the
1:e104a3b:  * specific language governing permissions and limitations
1:e104a3b:  * under the License.
1:e104a3b:  */
1:e104a3b: package org.apache.aries.blueprint.sample;
1:e104a3b: 
1:e104a3b: import java.util.concurrent.atomic.AtomicInteger;
1:e104a3b: 
1:e104a3b: public class DefaultRunnable implements Runnable 
1:e104a3b: {
1:e104a3b:   private static AtomicInteger count = new AtomicInteger();
1:e104a3b:   public void run() 
1:e104a3b:   {
1:e104a3b:     count.incrementAndGet();
1:e104a3b:   }
1:e104a3b:   
1:e104a3b:   public int getCount()
1:e104a3b:   {
1:e104a3b:     return count.get();
1:e104a3b:   }
1:e104a3b: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:e104a3b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.sample;
1: 
1: import java.util.concurrent.atomic.AtomicInteger;
1: 
1: public class DefaultRunnable implements Runnable 
1: {
1:   private static AtomicInteger count = new AtomicInteger();
1:   public void run() 
1:   {
1:     count.incrementAndGet();
1:   }
1:   
1:   public int getCount()
1:   {
1:     return count.get();
1:   }
1: }
============================================================================