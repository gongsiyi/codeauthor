1:628add4: /**
1:628add4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:628add4:  *  contributor license agreements.  See the NOTICE file distributed with
1:628add4:  *  this work for additional information regarding copyright ownership.
1:628add4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:628add4:  *  (the "License"); you may not use this file except in compliance with
1:628add4:  *  the License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:880e087: package org.apache.aries.samples.ariestrader.api.persistence;
1:628add4: 
1:628add4: 
1:628add4: import java.io.Serializable;
1:628add4: 
1:628add4: public class RunStatsDataBean implements Serializable
1:628add4: {
1:628add4: 	//Constructors
1:628add4: 	public RunStatsDataBean(){ }
1:628add4: 
1:628add4: 	// count of trade users in the database (users w/ userID like 'uid:%')
1:628add4: 	private int tradeUserCount;
1:628add4: 	// count of trade stocks in the database (stocks w/ symbol like 's:%')
1:628add4: 	private int tradeStockCount;
1:628add4: 	
1:628add4: 	// count of new registered users in this run (users w/ userID like 'ru:%') -- random user
1:628add4: 	private int newUserCount;
1:628add4: 	
1:628add4: 	// sum of logins by trade users
1:628add4: 	private int sumLoginCount;
1:628add4: 	// sum of logouts by trade users	
1:628add4: 	private int sumLogoutCount;
1:628add4: 
1:628add4: 	// count of holdings of trade users	
1:628add4: 	private int holdingCount;
1:628add4: 
1:628add4: 	// count of orders of trade users		
1:628add4: 	private int orderCount;	
1:628add4: 	// count of buy orders of trade users			
1:628add4: 	private int buyOrderCount;
1:628add4: 	// count of sell orders of trade users			
1:628add4: 	private int sellOrderCount;
1:b8c0170: 	// count of canceled orders of trade users			
1:628add4: 	private int cancelledOrderCount;
1:628add4: 	// count of open orders of trade users			
1:628add4: 	private int openOrderCount;
1:628add4: 	// count of orders deleted during this trade Reset
1:628add4: 	private int deletedOrderCount;
1:628add4: 
1:628add4: 	public String toString()
1:628add4: 	{
1:628add4: 		return "\n\tRunStatsData for reset at " + new java.util.Date()
1:628add4: 			+ "\n\t\t      tradeUserCount: " + getTradeUserCount()
1:628add4: 			+ "\n\t\t        newUserCount: " + getNewUserCount()
1:628add4: 			+ "\n\t\t       sumLoginCount: " + getSumLoginCount()
1:628add4: 			+ "\n\t\t      sumLogoutCount: " + getSumLogoutCount()
1:628add4: 			+ "\n\t\t        holdingCount: " + getHoldingCount()
1:628add4: 			+ "\n\t\t          orderCount: " + getOrderCount()
1:628add4: 			+ "\n\t\t       buyOrderCount: " + getBuyOrderCount()
1:628add4: 			+ "\n\t\t      sellOrderCount: " + getSellOrderCount()
1:628add4: 			+ "\n\t\t cancelledOrderCount: " + getCancelledOrderCount()
1:628add4: 			+ "\n\t\t      openOrderCount: " + getOpenOrderCount()
1:628add4: 			+ "\n\t\t   deletedOrderCount: " + getDeletedOrderCount()
1:628add4: 			;
1:628add4: 	}
1:628add4: 
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the tradeUserCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getTradeUserCount() {
1:628add4: 		return tradeUserCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the tradeUserCount
1:628add4: 	 * @param tradeUserCount The tradeUserCount to set
1:628add4: 	 */
1:628add4: 	public void setTradeUserCount(int tradeUserCount) {
1:628add4: 		this.tradeUserCount = tradeUserCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the newUserCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getNewUserCount() {
1:628add4: 		return newUserCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the newUserCount
1:628add4: 	 * @param newUserCount The newUserCount to set
1:628add4: 	 */
1:628add4: 	public void setNewUserCount(int newUserCount) {
1:628add4: 		this.newUserCount = newUserCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the sumLoginCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getSumLoginCount() {
1:628add4: 		return sumLoginCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the sumLoginCount
1:628add4: 	 * @param sumLoginCount The sumLoginCount to set
1:628add4: 	 */
1:628add4: 	public void setSumLoginCount(int sumLoginCount) {
1:628add4: 		this.sumLoginCount = sumLoginCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the sumLogoutCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getSumLogoutCount() {
1:628add4: 		return sumLogoutCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the sumLogoutCount
1:628add4: 	 * @param sumLogoutCount The sumLogoutCount to set
1:628add4: 	 */
1:628add4: 	public void setSumLogoutCount(int sumLogoutCount) {
1:628add4: 		this.sumLogoutCount = sumLogoutCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the holdingCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getHoldingCount() {
1:628add4: 		return holdingCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the holdingCount
1:628add4: 	 * @param holdingCount The holdingCount to set
1:628add4: 	 */
1:628add4: 	public void setHoldingCount(int holdingCount) {
1:628add4: 		this.holdingCount = holdingCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the buyOrderCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getBuyOrderCount() {
1:628add4: 		return buyOrderCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the buyOrderCount
1:628add4: 	 * @param buyOrderCount The buyOrderCount to set
1:628add4: 	 */
1:628add4: 	public void setBuyOrderCount(int buyOrderCount) {
1:628add4: 		this.buyOrderCount = buyOrderCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the sellOrderCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getSellOrderCount() {
1:628add4: 		return sellOrderCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the sellOrderCount
1:628add4: 	 * @param sellOrderCount The sellOrderCount to set
1:628add4: 	 */
1:628add4: 	public void setSellOrderCount(int sellOrderCount) {
1:628add4: 		this.sellOrderCount = sellOrderCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the cancelledOrderCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getCancelledOrderCount() {
1:628add4: 		return cancelledOrderCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the cancelledOrderCount
1:628add4: 	 * @param cancelledOrderCount The cancelledOrderCount to set
1:628add4: 	 */
1:628add4: 	public void setCancelledOrderCount(int cancelledOrderCount) {
1:628add4: 		this.cancelledOrderCount = cancelledOrderCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the openOrderCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getOpenOrderCount() {
1:628add4: 		return openOrderCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the openOrderCount
1:628add4: 	 * @param openOrderCount The openOrderCount to set
1:628add4: 	 */
1:628add4: 	public void setOpenOrderCount(int openOrderCount) {
1:628add4: 		this.openOrderCount = openOrderCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the deletedOrderCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getDeletedOrderCount() {
1:628add4: 		return deletedOrderCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the deletedOrderCount
1:628add4: 	 * @param deletedOrderCount The deletedOrderCount to set
1:628add4: 	 */
1:628add4: 	public void setDeletedOrderCount(int deletedOrderCount) {
1:628add4: 		this.deletedOrderCount = deletedOrderCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the orderCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getOrderCount() {
1:628add4: 		return orderCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the orderCount
1:628add4: 	 * @param orderCount The orderCount to set
1:628add4: 	 */
1:628add4: 	public void setOrderCount(int orderCount) {
1:628add4: 		this.orderCount = orderCount;
1:628add4: 	}
1:628add4: 
1:628add4: 	/**
1:628add4: 	 * Gets the tradeStockCount
1:628add4: 	 * @return Returns a int
1:628add4: 	 */
1:628add4: 	public int getTradeStockCount() {
1:628add4: 		return tradeStockCount;
1:628add4: 	}
1:628add4: 	/**
1:628add4: 	 * Sets the tradeStockCount
1:628add4: 	 * @param tradeStockCount The tradeStockCount to set
1:628add4: 	 */
1:628add4: 	public void setTradeStockCount(int tradeStockCount) {
1:628add4: 		this.tradeStockCount = tradeStockCount;
1:628add4: 	}
1:628add4: 
1:628add4: }
1:628add4: 
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:b8c0170
/////////////////////////////////////////////////////////////////////////
1: 	// count of canceled orders of trade users			
commit:880e087
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.api.persistence;
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.ariestrader.persistence.api;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.persistence.api;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.persistence.api;
1: 
1: 
1: import java.io.Serializable;
1: 
1: public class RunStatsDataBean implements Serializable
1: {
1: 	//Constructors
1: 	public RunStatsDataBean(){ }
1: 
1: 	// count of trade users in the database (users w/ userID like 'uid:%')
1: 	private int tradeUserCount;
1: 	// count of trade stocks in the database (stocks w/ symbol like 's:%')
1: 	private int tradeStockCount;
1: 	
1: 	// count of new registered users in this run (users w/ userID like 'ru:%') -- random user
1: 	private int newUserCount;
1: 	
1: 	// sum of logins by trade users
1: 	private int sumLoginCount;
1: 	// sum of logouts by trade users	
1: 	private int sumLogoutCount;
1: 
1: 	// count of holdings of trade users	
1: 	private int holdingCount;
1: 
1: 	// count of orders of trade users		
1: 	private int orderCount;	
1: 	// count of buy orders of trade users			
1: 	private int buyOrderCount;
1: 	// count of sell orders of trade users			
1: 	private int sellOrderCount;
0: 	// count of cancelled orders of trade users			
1: 	private int cancelledOrderCount;
1: 	// count of open orders of trade users			
1: 	private int openOrderCount;
1: 	// count of orders deleted during this trade Reset
1: 	private int deletedOrderCount;
1: 
1: 	public String toString()
1: 	{
1: 		return "\n\tRunStatsData for reset at " + new java.util.Date()
1: 			+ "\n\t\t      tradeUserCount: " + getTradeUserCount()
1: 			+ "\n\t\t        newUserCount: " + getNewUserCount()
1: 			+ "\n\t\t       sumLoginCount: " + getSumLoginCount()
1: 			+ "\n\t\t      sumLogoutCount: " + getSumLogoutCount()
1: 			+ "\n\t\t        holdingCount: " + getHoldingCount()
1: 			+ "\n\t\t          orderCount: " + getOrderCount()
1: 			+ "\n\t\t       buyOrderCount: " + getBuyOrderCount()
1: 			+ "\n\t\t      sellOrderCount: " + getSellOrderCount()
1: 			+ "\n\t\t cancelledOrderCount: " + getCancelledOrderCount()
1: 			+ "\n\t\t      openOrderCount: " + getOpenOrderCount()
1: 			+ "\n\t\t   deletedOrderCount: " + getDeletedOrderCount()
1: 			;
1: 	}
1: 
1: 
1: 	/**
1: 	 * Gets the tradeUserCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getTradeUserCount() {
1: 		return tradeUserCount;
1: 	}
1: 	/**
1: 	 * Sets the tradeUserCount
1: 	 * @param tradeUserCount The tradeUserCount to set
1: 	 */
1: 	public void setTradeUserCount(int tradeUserCount) {
1: 		this.tradeUserCount = tradeUserCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the newUserCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getNewUserCount() {
1: 		return newUserCount;
1: 	}
1: 	/**
1: 	 * Sets the newUserCount
1: 	 * @param newUserCount The newUserCount to set
1: 	 */
1: 	public void setNewUserCount(int newUserCount) {
1: 		this.newUserCount = newUserCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the sumLoginCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getSumLoginCount() {
1: 		return sumLoginCount;
1: 	}
1: 	/**
1: 	 * Sets the sumLoginCount
1: 	 * @param sumLoginCount The sumLoginCount to set
1: 	 */
1: 	public void setSumLoginCount(int sumLoginCount) {
1: 		this.sumLoginCount = sumLoginCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the sumLogoutCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getSumLogoutCount() {
1: 		return sumLogoutCount;
1: 	}
1: 	/**
1: 	 * Sets the sumLogoutCount
1: 	 * @param sumLogoutCount The sumLogoutCount to set
1: 	 */
1: 	public void setSumLogoutCount(int sumLogoutCount) {
1: 		this.sumLogoutCount = sumLogoutCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the holdingCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getHoldingCount() {
1: 		return holdingCount;
1: 	}
1: 	/**
1: 	 * Sets the holdingCount
1: 	 * @param holdingCount The holdingCount to set
1: 	 */
1: 	public void setHoldingCount(int holdingCount) {
1: 		this.holdingCount = holdingCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the buyOrderCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getBuyOrderCount() {
1: 		return buyOrderCount;
1: 	}
1: 	/**
1: 	 * Sets the buyOrderCount
1: 	 * @param buyOrderCount The buyOrderCount to set
1: 	 */
1: 	public void setBuyOrderCount(int buyOrderCount) {
1: 		this.buyOrderCount = buyOrderCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the sellOrderCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getSellOrderCount() {
1: 		return sellOrderCount;
1: 	}
1: 	/**
1: 	 * Sets the sellOrderCount
1: 	 * @param sellOrderCount The sellOrderCount to set
1: 	 */
1: 	public void setSellOrderCount(int sellOrderCount) {
1: 		this.sellOrderCount = sellOrderCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the cancelledOrderCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getCancelledOrderCount() {
1: 		return cancelledOrderCount;
1: 	}
1: 	/**
1: 	 * Sets the cancelledOrderCount
1: 	 * @param cancelledOrderCount The cancelledOrderCount to set
1: 	 */
1: 	public void setCancelledOrderCount(int cancelledOrderCount) {
1: 		this.cancelledOrderCount = cancelledOrderCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the openOrderCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getOpenOrderCount() {
1: 		return openOrderCount;
1: 	}
1: 	/**
1: 	 * Sets the openOrderCount
1: 	 * @param openOrderCount The openOrderCount to set
1: 	 */
1: 	public void setOpenOrderCount(int openOrderCount) {
1: 		this.openOrderCount = openOrderCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the deletedOrderCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getDeletedOrderCount() {
1: 		return deletedOrderCount;
1: 	}
1: 	/**
1: 	 * Sets the deletedOrderCount
1: 	 * @param deletedOrderCount The deletedOrderCount to set
1: 	 */
1: 	public void setDeletedOrderCount(int deletedOrderCount) {
1: 		this.deletedOrderCount = deletedOrderCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the orderCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getOrderCount() {
1: 		return orderCount;
1: 	}
1: 	/**
1: 	 * Sets the orderCount
1: 	 * @param orderCount The orderCount to set
1: 	 */
1: 	public void setOrderCount(int orderCount) {
1: 		this.orderCount = orderCount;
1: 	}
1: 
1: 	/**
1: 	 * Gets the tradeStockCount
1: 	 * @return Returns a int
1: 	 */
1: 	public int getTradeStockCount() {
1: 		return tradeStockCount;
1: 	}
1: 	/**
1: 	 * Sets the tradeStockCount
1: 	 * @param tradeStockCount The tradeStockCount to set
1: 	 */
1: 	public void setTradeStockCount(int tradeStockCount) {
1: 		this.tradeStockCount = tradeStockCount;
1: 	}
1: 
1: }
1: 
============================================================================