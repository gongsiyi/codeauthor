1:bfc9463: /*
1:bfc9463:  * Licensed to the Apache Software Foundation (ASF) under one
1:bfc9463:  * or more contributor license agreements.  See the NOTICE file
1:bfc9463:  * distributed with this work for additional information
1:bfc9463:  * regarding copyright ownership.  The ASF licenses this file
1:bfc9463:  * to you under the Apache License, Version 2.0 (the
1:bfc9463:  * "License"); you may not use this file except in compliance
1:bfc9463:  * with the License.  You may obtain a copy of the License at
1:bfc9463:  *
1:bfc9463:  *   http://www.apache.org/licenses/LICENSE-2.0
1:bfc9463:  *
1:bfc9463:  * Unless required by applicable law or agreed to in writing,
1:bfc9463:  * software distributed under the License is distributed on an
1:bfc9463:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:bfc9463:  * KIND, either express or implied.  See the License for the
1:bfc9463:  * specific language governing permissions and limitations
1:bfc9463:  * under the License.
1:bfc9463:  */
1:bfc9463: package org.apache.aries.proxy.weavinghook;
1:bfc9463: 
1:bfc9463: import org.osgi.framework.hooks.weaving.WovenClass;
1:bfc9463: 
1:bfc9463: /**
1:bfc9463:  * This provides helper methods to allow a ProxyWeavingController to make
1:bfc9463:  * sensible decisions without needing to know how the ProxyManager has implemented
1:bfc9463:  * the weaving support.
1:bfc9463:  * 
1:bfc9463:  * @noimplement
1:bfc9463:  */
1:bfc9463: public interface WeavingHelper
1:bfc9463: {
1:bfc9463:   /** 
1:bfc9463:    * Tests to see if the provided class has been woven for proxying.
1:bfc9463:    * 
1:bfc9463:    * @param c the class to test
1:bfc9463:    * @return true if it is woven, false otherwise.
1:bfc9463:    */
1:bfc9463:   public boolean isWoven(Class<?> c);
1:bfc9463:   /**
1:bfc9463:    * Tests to see if the super class of the provided WovenClass has
1:bfc9463:    * been woven to support proxying.
1:bfc9463:    * 
1:bfc9463:    * @param wovenClass the class whose parent should be tested.
1:bfc9463:    * @return true if it is woven, false otherwise.
1:bfc9463:    */
1:bfc9463:   public boolean isSuperClassWoven(WovenClass wovenClass);
1:bfc9463: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:bfc9463
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.proxy.weavinghook;
1: 
1: import org.osgi.framework.hooks.weaving.WovenClass;
1: 
1: /**
1:  * This provides helper methods to allow a ProxyWeavingController to make
1:  * sensible decisions without needing to know how the ProxyManager has implemented
1:  * the weaving support.
1:  * 
1:  * @noimplement
1:  */
1: public interface WeavingHelper
1: {
1:   /** 
1:    * Tests to see if the provided class has been woven for proxying.
1:    * 
1:    * @param c the class to test
1:    * @return true if it is woven, false otherwise.
1:    */
1:   public boolean isWoven(Class<?> c);
1:   /**
1:    * Tests to see if the super class of the provided WovenClass has
1:    * been woven to support proxying.
1:    * 
1:    * @param wovenClass the class whose parent should be tested.
1:    * @return true if it is woven, false otherwise.
1:    */
1:   public boolean isSuperClassWoven(WovenClass wovenClass);
1: }
============================================================================