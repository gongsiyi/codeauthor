1:a1623f0: /*
1:a1623f0:  * Licensed to the Apache Software Foundation (ASF) under one
1:a1623f0:  * or more contributor license agreements.  See the NOTICE file
1:a1623f0:  * distributed with this work for additional information
1:a1623f0:  * regarding copyright ownership.  The ASF licenses this file
1:a1623f0:  * to you under the Apache License, Version 2.0 (the
1:a1623f0:  * "License"); you may not use this file except in compliance
1:a1623f0:  * with the License.  You may obtain a copy of the License at
1:a1623f0:  *
1:a1623f0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a1623f0:  *
1:a1623f0:  * Unless required by applicable law or agreed to in writing,
1:a1623f0:  * software distributed under the License is distributed on an
1:a1623f0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:a1623f0:  * KIND, either express or implied.  See the License for the
1:a1623f0:  * specific language governing permissions and limitations
1:a1623f0:  * under the License.
1:a1623f0:  */
1:910fec0: package org.apache.aries.application.utils.manifest;
1:910fec0: 
1:de5b346: import java.util.Map;
1:de5b346: 
1:910fec0: import org.apache.aries.application.Content;
1:910fec0: import org.apache.aries.application.impl.ContentImpl;
1:910fec0: import org.apache.aries.util.manifest.ManifestHeaderProcessor;
1:910fec0: 
1:910fec0: 
1:910fec0: public class ContentFactory {
1:910fec0:   /**
1:910fec0:    * Parse a content object
1:910fec0:    * @param bundleSymbolicName bundle symbolic name
1:910fec0:    * @param versionRange version range in the String format
1:910fec0:    * @return Content object
1:910fec0:    */
1:910fec0:   public static Content parseContent(String bundleSymbolicName, String versionRange) {
1:910fec0:     return new ContentImpl(bundleSymbolicName, ManifestHeaderProcessor.parseVersionRange(versionRange));
1:910fec0:   }
1:910fec0:   
1:910fec0:   /**
1:910fec0:    * Parse a content
1:910fec0:    * @param contentName The content name
1:910fec0:    * @param nameValueMap The map containing the content attributes/directives
1:910fec0:    * @return a content object
1:910fec0:    */
1:de5b346:   public static Content parseContent(String contentName, Map<String, String> nameValueMap) {
1:910fec0:     return new ContentImpl(contentName, nameValueMap);
1:910fec0:   }
1:910fec0: }
============================================================================
author:Holly Cummins
-------------------------------------------------------------------------------
commit:a1623f0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:de5b346
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: 
/////////////////////////////////////////////////////////////////////////
1:   public static Content parseContent(String contentName, Map<String, String> nameValueMap) {
commit:910fec0
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.utils.manifest;
1: 
1: import org.apache.aries.application.Content;
1: import org.apache.aries.application.impl.ContentImpl;
1: import org.apache.aries.util.manifest.ManifestHeaderProcessor;
0: import org.apache.aries.util.manifest.ManifestHeaderProcessor.NameValueMap;
1: 
1: 
1: public class ContentFactory {
1:   /**
1:    * Parse a content object
1:    * @param bundleSymbolicName bundle symbolic name
1:    * @param versionRange version range in the String format
1:    * @return Content object
1:    */
1:   public static Content parseContent(String bundleSymbolicName, String versionRange) {
1:     return new ContentImpl(bundleSymbolicName, ManifestHeaderProcessor.parseVersionRange(versionRange));
1:   }
1:   
1:   /**
1:    * Parse a content
1:    * @param contentName The content name
1:    * @param nameValueMap The map containing the content attributes/directives
1:    * @return a content object
1:    */
0:   public static Content parseContent(String contentName, NameValueMap<String, String> nameValueMap) {
1:     return new ContentImpl(contentName, nameValueMap);
1:   }
1: }
============================================================================