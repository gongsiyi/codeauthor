1:3746469: /**
1:3746469:  * Licensed to the Apache Software Foundation (ASF) under one
1:3746469:  * or more contributor license agreements.  See the NOTICE file
1:3746469:  * distributed with this work for additional information
1:3746469:  * regarding copyright ownership.  The ASF licenses this file
1:3746469:  * to you under the Apache License, Version 2.0 (the
1:3746469:  * "License"); you may not use this file except in compliance
1:3746469:  * with the License.  You may obtain a copy of the License at
1:3746469:  *
1:3746469:  *   http://www.apache.org/licenses/LICENSE-2.0
1:3746469:  *
1:3746469:  * Unless required by applicable law or agreed to in writing,
1:3746469:  * software distributed under the License is distributed on an
1:3746469:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:3746469:  * KIND, either express or implied.  See the License for the
1:3746469:  * specific language governing permissions and limitations
1:3746469:  * under the License.
1:3746469:  */
1:3746469: package org.apache.aries.blueprint.itests.cm.handler;
1:3746469: 
1:3746469: import java.net.URL;
1:3746469: import java.util.Collections;
1:3746469: import java.util.HashSet;
1:3746469: import java.util.List;
1:3746469: import java.util.Set;
1:3746469: 
1:3746469: import org.apache.aries.blueprint.NamespaceHandler;
1:3746469: import org.apache.aries.blueprint.ParserContext;
1:3746469: import org.apache.aries.blueprint.PassThroughMetadata;
1:3746469: import org.apache.aries.blueprint.mutable.MutableBeanMetadata;
1:3746469: import org.osgi.framework.Bundle;
1:3746469: import org.osgi.framework.FrameworkUtil;
1:3746469: import org.osgi.service.blueprint.reflect.BeanMetadata;
1:3746469: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1:3746469: import org.osgi.service.blueprint.reflect.Metadata;
1:3746469: import org.w3c.dom.Element;
1:3746469: import org.w3c.dom.Node;
1:3746469: 
1:3746469: public class IncorrectNamespaceHandler implements NamespaceHandler {
1:3746469: 
1:3746469:     @Override
1:3746469:     public URL getSchemaLocation(String namespace) {
1:3746469:         if ("http://aries.apache.org/incorrect/v1.0.0".equals(namespace)) {
1:3746469:             return getClass().getResource("/incorrect-1.0.0.xsd");
1:3746469:         } else {
1:3746469:             return getClass().getResource("/incorrect-1.1.0.xsd");
1:3746469:         }
1:3746469:     }
1:3746469: 
1:3746469:     @Override
1:3746469:     public Set<Class> getManagedClasses() {
1:3746469:         return new HashSet<Class>(Collections.<Class>singletonList(String.class));
1:3746469:     }
1:3746469: 
1:3746469:     @Override
1:3746469:     public Metadata parse(Element element, ParserContext context) {
1:3746469:         MutableBeanMetadata metadata = context.createMetadata(MutableBeanMetadata.class);
1:3746469:         metadata.setProcessor(true);
1:3746469:         metadata.setId("aries-1503");
1:3746469:         metadata.setScope(BeanMetadata.SCOPE_SINGLETON);
1:3746469:         metadata.addArgument(new PassThroughMetadata() {
1:3746469:             @Override
1:3746469:             public Object getObject() {
1:3746469:                 return "ARIES-1503";
1:3746469:             }
1:3746469: 
1:3746469:             @Override
1:3746469:             public String getId() {
1:3746469:                 return "aries-1503-arg";
1:3746469:             }
1:3746469: 
1:3746469:             @Override
1:3746469:             public int getActivation() {
1:3746469:                 return 0;
1:3746469:             }
1:3746469: 
1:3746469:             @Override
1:3746469:             public List<String> getDependsOn() {
1:3746469:                 return null;
1:3746469:             }
1:3746469:         }, null, 0);
1:3746469:         metadata.setRuntimeClass(String.class);
1:3746469:         return metadata;
1:3746469:     }
1:3746469: 
1:3746469:     @Override
1:3746469:     public ComponentMetadata decorate(Node node, ComponentMetadata component, ParserContext context) {
1:3746469:         return null;
1:3746469:     }
1:3746469: 
1:3746469: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:3746469
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.itests.cm.handler;
1: 
1: import java.net.URL;
1: import java.util.Collections;
1: import java.util.HashSet;
1: import java.util.List;
1: import java.util.Set;
1: 
1: import org.apache.aries.blueprint.NamespaceHandler;
1: import org.apache.aries.blueprint.ParserContext;
1: import org.apache.aries.blueprint.PassThroughMetadata;
1: import org.apache.aries.blueprint.mutable.MutableBeanMetadata;
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.FrameworkUtil;
1: import org.osgi.service.blueprint.reflect.BeanMetadata;
1: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1: import org.osgi.service.blueprint.reflect.Metadata;
1: import org.w3c.dom.Element;
1: import org.w3c.dom.Node;
1: 
1: public class IncorrectNamespaceHandler implements NamespaceHandler {
1: 
1:     @Override
1:     public URL getSchemaLocation(String namespace) {
1:         if ("http://aries.apache.org/incorrect/v1.0.0".equals(namespace)) {
1:             return getClass().getResource("/incorrect-1.0.0.xsd");
1:         } else {
1:             return getClass().getResource("/incorrect-1.1.0.xsd");
1:         }
1:     }
1: 
1:     @Override
1:     public Set<Class> getManagedClasses() {
1:         return new HashSet<Class>(Collections.<Class>singletonList(String.class));
1:     }
1: 
1:     @Override
1:     public Metadata parse(Element element, ParserContext context) {
1:         MutableBeanMetadata metadata = context.createMetadata(MutableBeanMetadata.class);
1:         metadata.setProcessor(true);
1:         metadata.setId("aries-1503");
1:         metadata.setScope(BeanMetadata.SCOPE_SINGLETON);
1:         metadata.addArgument(new PassThroughMetadata() {
1:             @Override
1:             public Object getObject() {
1:                 return "ARIES-1503";
1:             }
1: 
1:             @Override
1:             public String getId() {
1:                 return "aries-1503-arg";
1:             }
1: 
1:             @Override
1:             public int getActivation() {
1:                 return 0;
1:             }
1: 
1:             @Override
1:             public List<String> getDependsOn() {
1:                 return null;
1:             }
1:         }, null, 0);
1:         metadata.setRuntimeClass(String.class);
1:         return metadata;
1:     }
1: 
1:     @Override
1:     public ComponentMetadata decorate(Node node, ComponentMetadata component, ParserContext context) {
1:         return null;
1:     }
1: 
1: }
============================================================================