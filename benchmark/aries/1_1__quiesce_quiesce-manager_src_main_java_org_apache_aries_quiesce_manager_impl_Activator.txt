1:74884c6: /*
1:74884c6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:74884c6:  * contributor license agreements.  See the NOTICE file distributed with
1:74884c6:  * this work for additional information regarding copyright ownership.
1:74884c6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:74884c6:  * (the "License"); you may not use this file except in compliance with
1:74884c6:  * the License.  You may obtain a copy of the License at
1:74884c6:  *
1:74884c6:  *      http://www.apache.org/licenses/LICENSE-2.0
1:74884c6:  *
1:74884c6:  * Unless required by applicable law or agreed to in writing, software
1:74884c6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:74884c6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:74884c6:  * See the License for the specific language governing permissions and
1:74884c6:  * limitations under the License.
1:74884c6:  */
1:74884c6: package org.apache.aries.quiesce.manager.impl;
2:74884c6: 
1:74884c6: import org.apache.aries.quiesce.manager.QuiesceManager;
1:047a2ae: import org.apache.aries.util.AriesFrameworkUtil;
1:74884c6: import org.osgi.framework.BundleActivator;
1:74884c6: import org.osgi.framework.BundleContext;
1:74884c6: import org.osgi.framework.ServiceRegistration;
1:74884c6: 
1:74884c6: public class Activator implements BundleActivator {
1:74884c6: 
1:74884c6:     private ServiceRegistration serviceReg;
1:74884c6: 
1:74884c6:     public void start(BundleContext bundleContext) throws Exception {
1:74884c6:         QuiesceManager manager = new QuiesceManagerImpl(bundleContext);
1:74884c6:         serviceReg = bundleContext.registerService(QuiesceManager.class.getName(), manager, null);
1:74884c6:     }
1:74884c6: 
1:74884c6:     public void stop(BundleContext bundleContext) throws Exception {
1:047a2ae:       AriesFrameworkUtil.safeUnregisterService(serviceReg);
1:74884c6:     }
1:74884c6: 
1:74884c6: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:047a2ae
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.util.AriesFrameworkUtil;
/////////////////////////////////////////////////////////////////////////
1:       AriesFrameworkUtil.safeUnregisterService(serviceReg);
commit:74884c6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.quiesce.manager.impl;
1: 
1: import org.apache.aries.quiesce.manager.QuiesceManager;
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.ServiceRegistration;
1: 
1: public class Activator implements BundleActivator {
1: 
1:     private ServiceRegistration serviceReg;
1: 
1:     public void start(BundleContext bundleContext) throws Exception {
1:         QuiesceManager manager = new QuiesceManagerImpl(bundleContext);
1:         serviceReg = bundleContext.registerService(QuiesceManager.class.getName(), manager, null);
1:     }
1: 
1: 
1:     public void stop(BundleContext bundleContext) throws Exception {
0:     	if (serviceReg != null)
0:     		serviceReg.unregister();
1:     }
1: 
1: }
============================================================================