1:a99b257: /*
1:a99b257:  * Licensed to the Apache Software Foundation (ASF) under one
1:a99b257:  * or more contributor license agreements.  See the NOTICE file
1:a99b257:  * distributed with this work for additional information
1:a99b257:  * regarding copyright ownership.  The ASF licenses this file
1:a99b257:  * to you under the Apache License, Version 2.0 (the
1:a99b257:  * "License"); you may not use this file except in compliance
1:a99b257:  * with the License.  You may obtain a copy of the License at
1:a99b257:  *
1:a99b257:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a99b257:  *
1:a99b257:  * Unless required by applicable law or agreed to in writing,
1:a99b257:  * software distributed under the License is distributed on an
1:a99b257:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:a99b257:  * KIND, either express or implied.  See the License for the
1:a99b257:  * specific language governing permissions and limitations
1:a99b257:  * under the License.
1:a99b257:  */
1:89f804e: package org.apache.aries.application.management.spi.repository;
1:a99b257: 
1:a99b257: import java.util.Collection;
1:a99b257: import java.util.Iterator;
1:a99b257: import java.util.Map;
1:a99b257: 
1:a99b257: import org.apache.aries.application.DeploymentContent;
1:89f804e: import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;
1:a99b257: 
1:a99b257: public interface BundleRepositoryManager
1:a99b257: {
1:a99b257:   /**
1:a99b257:    * Gets a collection of all bundle repositories which can provide bundles to
1:a99b257:    * the given application scope.
1:a99b257:    * @param applicationName
1:a99b257:    * @param applicationVersion
1:7ceb4ac:    * @return the collection of bundle repositories for an app.
1:a99b257:    */
1:a99b257:   public Collection<BundleRepository> getBundleRepositoryCollection(
1:a99b257:       String applicationName, String applicationVersion);
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Gets all known bundle repositories
1:7ceb4ac:    * @return all known bundle repositories.
1:a99b257:    */
1:a99b257:   public Collection<BundleRepository> getAllBundleRepositories();
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Get a collection of bundle installation suggestions from repositories
1:a99b257:    * suitable for the given application scope
1:a99b257:    * @param applicationName
1:a99b257:    * @param applicationVersion
1:a99b257:    * @param content
1:7ceb4ac:    * @return the bundle suggestions
1:a99b257:    * @throws ContextException
1:a99b257:    */
1:a99b257:   public Map<DeploymentContent, BundleSuggestion> getBundleSuggestions(
1:a99b257:       String applicationName,
1:a99b257:       String applicationVersion,
1:a99b257:       Collection<DeploymentContent> content) throws ContextException;
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Get a collection of bundle installation suggestions from all 
1:a99b257:    * known repositories
1:a99b257:    * @param content
1:7ceb4ac:    * @return the bundle suggestions
1:a99b257:    * @throws ContextException
1:a99b257:    */
1:a99b257:   public Map<DeploymentContent, BundleSuggestion> getBundleSuggestions(
1:a99b257:       Collection<DeploymentContent> content) throws ContextException;
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Get a collection of bundle installation suggestions from the collection of
1:a99b257:    * given repositories
1:a99b257:    * @param brs
1:a99b257:    * @param content
1:7ceb4ac:    * @return the bundle suggestions
1:a99b257:    * @throws ContextException
1:a99b257:    */
1:a99b257:   public Map<DeploymentContent, BundleSuggestion> getBundleSuggestions(
1:a99b257:       Collection<BundleRepository> brs,
1:a99b257:       Collection<DeploymentContent> content) throws ContextException;
1:a99b257:   
1:a99b257: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return the collection of bundle repositories for an app.
1:    * @return all known bundle repositories.
/////////////////////////////////////////////////////////////////////////
1:    * @return the bundle suggestions
/////////////////////////////////////////////////////////////////////////
1:    * @return the bundle suggestions
/////////////////////////////////////////////////////////////////////////
1:    * @return the bundle suggestions
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.management.spi.repository;
1: import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:a99b257
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.application.management;
1: 
1: import java.util.Collection;
1: import java.util.Iterator;
1: import java.util.Map;
1: 
1: import org.apache.aries.application.DeploymentContent;
0: import org.apache.aries.application.management.BundleRepository.BundleSuggestion;
1: 
1: public interface BundleRepositoryManager
1: {
1:   /**
1:    * Gets a collection of all bundle repositories which can provide bundles to
1:    * the given application scope.
1:    * @param applicationName
1:    * @param applicationVersion
0:    * @return
1:    */
1:   public Collection<BundleRepository> getBundleRepositoryCollection(
1:       String applicationName, String applicationVersion);
1:   
1:   /**
1:    * Gets all known bundle repositories
0:    * @return
1:    */
1:   public Collection<BundleRepository> getAllBundleRepositories();
1:   
1:   /**
1:    * Get a collection of bundle installation suggestions from repositories
1:    * suitable for the given application scope
1:    * @param applicationName
1:    * @param applicationVersion
1:    * @param content
0:    * @return
1:    * @throws ContextException
1:    */
1:   public Map<DeploymentContent, BundleSuggestion> getBundleSuggestions(
1:       String applicationName,
1:       String applicationVersion,
1:       Collection<DeploymentContent> content) throws ContextException;
1:   
1:   /**
1:    * Get a collection of bundle installation suggestions from all 
1:    * known repositories
1:    * @param content
0:    * @return
1:    * @throws ContextException
1:    */
1:   public Map<DeploymentContent, BundleSuggestion> getBundleSuggestions(
1:       Collection<DeploymentContent> content) throws ContextException;
1:   
1:   /**
1:    * Get a collection of bundle installation suggestions from the collection of
1:    * given repositories
1:    * @param brs
1:    * @param content
0:    * @return
1:    * @throws ContextException
1:    */
1:   public Map<DeploymentContent, BundleSuggestion> getBundleSuggestions(
1:       Collection<BundleRepository> brs,
1:       Collection<DeploymentContent> content) throws ContextException;
1:   
1: }
============================================================================