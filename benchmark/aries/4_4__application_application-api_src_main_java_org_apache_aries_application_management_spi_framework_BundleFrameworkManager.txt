1:a99b257: /*
1:a99b257:  * Licensed to the Apache Software Foundation (ASF) under one
1:a99b257:  * or more contributor license agreements.  See the NOTICE file
1:a99b257:  * distributed with this work for additional information
1:a99b257:  * regarding copyright ownership.  The ASF licenses this file
1:a99b257:  * to you under the Apache License, Version 2.0 (the
1:a99b257:  * "License"); you may not use this file except in compliance
1:a99b257:  * with the License.  You may obtain a copy of the License at
1:a99b257:  *
1:a99b257:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a99b257:  *
1:a99b257:  * Unless required by applicable law or agreed to in writing,
1:a99b257:  * software distributed under the License is distributed on an
1:a99b257:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:a99b257:  * KIND, either express or implied.  See the License for the
1:a99b257:  * specific language governing permissions and limitations
1:a99b257:  * under the License.
1:a99b257:  */
1:a99b257: 
1:89f804e: package org.apache.aries.application.management.spi.framework;
1:a99b257: 
1:a99b257: import java.util.Collection;
1:8151f8c: import java.util.Map;
1:8151f8c: import java.util.Set;
1:a99b257: 
1:a99b257: import org.osgi.framework.Bundle;
1:a99b257: import org.osgi.framework.BundleException;
1:8151f8c: import org.apache.aries.application.DeploymentContent;
1:8151f8c: import org.apache.aries.application.DeploymentMetadata;
1:89f804e: import org.apache.aries.application.management.AriesApplication;
1:89f804e: import org.apache.aries.application.management.UpdateException;
1:89f804e: import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;
1:a99b257: 
1:a99b257: public interface BundleFrameworkManager
1:a99b257: {
1:a99b257:   /**
1:06621c5:    * All additions/removals of frameworks and bundles from the shared bundle framework are
1:06621c5:    * performed under this object lock. Users bypassing this api and performing operations on 
1:06621c5:    * the underlying OSGi frameworks should be sure to hold this lock.
1:06621c5:    */
1:06621c5:   Object SHARED_FRAMEWORK_LOCK = new Object();
1:06621c5: 
1:06621c5:   /**
1:a99b257:    * Gets the BundleFramework object associated with the given bundle
1:a99b257:    * @param frameworkBundle - The bundle representing the bundle framework
1:7ceb4ac:    * @return the bundle framework
1:a99b257:    */
1:a99b257:   public BundleFramework getBundleFramework(Bundle frameworkBundle);
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Gets a reference to the single shared bundle framework. The Shared Bundle 
1:a99b257:    * Framework contains bundle shared between applications
1:7ceb4ac:    * @return the shared bundle framework
1:a99b257:    */
1:a99b257:   public BundleFramework getSharedBundleFramework();
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Creates a new framework inside the shared bundle framework and installs a 
1:a99b257:    * collection of bundles into the framework.
1:a99b257:    * @param bundlesToInstall The collection of bundles to be installed
1:a99b257:    * @param app The application associated with this install
1:7ceb4ac:    * @return the bundle of the framework
1:a99b257:    * @throws BundleException
1:a99b257:    */
1:a99b257:   public Bundle installIsolatedBundles(
1:a99b257:       Collection<BundleSuggestion> bundlesToInstall, 
1:a99b257:       AriesApplication app)
1:a99b257:     throws BundleException;
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Installs a collection of shared bundles to the shared bundle framework
1:a99b257:    * @param bundlesToInstall
1:a99b257:    * @param app
1:7ceb4ac:    * @return the collection of installed bundles.
1:a99b257:    * @throws BundleException
1:a99b257:    */
1:a99b257:   public Collection<Bundle> installSharedBundles(
1:a99b257:       Collection<BundleSuggestion> bundlesToInstall, 
1:a99b257:       AriesApplication app)
1:a99b257:     throws BundleException;
1:a99b257:   
1:8151f8c:   public boolean allowsUpdate(DeploymentMetadata newMetadata, DeploymentMetadata oldMetadata);
1:8151f8c:   
1:8151f8c:   public interface BundleLocator {
1:9db128e:     public Map<DeploymentContent, BundleSuggestion> suggestBundle(Collection<DeploymentContent> bundles) throws BundleException;    
1:8151f8c:   }
1:8151f8c:   
1:8151f8c:   public void updateBundles(
1:8151f8c:       DeploymentMetadata newMetadata, 
1:8151f8c:       DeploymentMetadata oldMetadata, 
1:8151f8c:       AriesApplication app, 
1:8151f8c:       BundleLocator locator,
1:8151f8c:       Set<Bundle> bundles,
1:8151f8c:       boolean startBundles) throws UpdateException;
1:8151f8c:   
1:a99b257:   /**
1:a99b257:    * Starts a previously installed bundle 
1:a99b257:    * @param b
1:a99b257:    * @throws BundleException
1:a99b257:    */
1:a99b257:   public void startBundle(Bundle b) throws BundleException;
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Stops a previously installed bundle   
1:a99b257:    * @param b
1:a99b257:    * @throws BundleException
1:a99b257:    */
1:a99b257:   public void stopBundle(Bundle b) throws BundleException;
1:a99b257:   
1:a99b257:   /**
1:a99b257:    * Removes a bundle from the runtime
1:a99b257:    * @param b
1:a99b257:    * @throws BundleException
1:a99b257:    */
1:a99b257:   public void uninstallBundle(Bundle b) throws BundleException;
1:a99b257:   
1:a99b257: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return the bundle framework
1:    * @return the shared bundle framework
/////////////////////////////////////////////////////////////////////////
1:    * @return the bundle of the framework
/////////////////////////////////////////////////////////////////////////
1:    * @return the collection of installed bundles.
author:Chris Wilkinson
-------------------------------------------------------------------------------
commit:06621c5
/////////////////////////////////////////////////////////////////////////
1:    * All additions/removals of frameworks and bundles from the shared bundle framework are
1:    * performed under this object lock. Users bypassing this api and performing operations on 
1:    * the underlying OSGi frameworks should be sure to hold this lock.
1:    */
1:   Object SHARED_FRAMEWORK_LOCK = new Object();
1: 
1:   /**
commit:9db128e
/////////////////////////////////////////////////////////////////////////
1:     public Map<DeploymentContent, BundleSuggestion> suggestBundle(Collection<DeploymentContent> bundles) throws BundleException;    
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.management.spi.framework;
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.AriesApplication;
1: import org.apache.aries.application.management.UpdateException;
0: import org.apache.aries.application.management.spi.repository.ContextException;
1: import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;
commit:8151f8c
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: import java.util.Set;
1: import org.apache.aries.application.DeploymentContent;
1: import org.apache.aries.application.DeploymentMetadata;
/////////////////////////////////////////////////////////////////////////
1:   public boolean allowsUpdate(DeploymentMetadata newMetadata, DeploymentMetadata oldMetadata);
1:   
1:   public interface BundleLocator {
0:     public Map<DeploymentContent, BundleSuggestion> suggestBundle(Collection<DeploymentContent> bundles) throws ContextException;    
1:   }
1:   
1:   public void updateBundles(
1:       DeploymentMetadata newMetadata, 
1:       DeploymentMetadata oldMetadata, 
1:       AriesApplication app, 
1:       BundleLocator locator,
1:       Set<Bundle> bundles,
1:       boolean startBundles) throws UpdateException;
1:   
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:a99b257
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
0: package org.apache.aries.application.management;
1: 
1: import java.util.Collection;
1: 
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleException;
0: import org.apache.aries.application.management.BundleRepository.BundleSuggestion;
1: 
1: public interface BundleFrameworkManager
1: {
1:   /**
1:    * Gets the BundleFramework object associated with the given bundle
1:    * @param frameworkBundle - The bundle representing the bundle framework
0:    * @return
1:    */
1:   public BundleFramework getBundleFramework(Bundle frameworkBundle);
1:   
1:   /**
1:    * Gets a reference to the single shared bundle framework. The Shared Bundle 
1:    * Framework contains bundle shared between applications
0:    * @return
1:    */
1:   public BundleFramework getSharedBundleFramework();
1:   
1:   /**
1:    * Creates a new framework inside the shared bundle framework and installs a 
1:    * collection of bundles into the framework.
1:    * @param bundlesToInstall The collection of bundles to be installed
1:    * @param app The application associated with this install
0:    * @return
1:    * @throws BundleException
1:    */
1:   public Bundle installIsolatedBundles(
1:       Collection<BundleSuggestion> bundlesToInstall, 
1:       AriesApplication app)
1:     throws BundleException;
1:   
1:   /**
1:    * Installs a collection of shared bundles to the shared bundle framework
1:    * @param bundlesToInstall
1:    * @param app
0:    * @return
1:    * @throws BundleException
1:    */
1:   public Collection<Bundle> installSharedBundles(
1:       Collection<BundleSuggestion> bundlesToInstall, 
1:       AriesApplication app)
1:     throws BundleException;
1:   
1:   /**
1:    * Starts a previously installed bundle 
1:    * @param b
1:    * @throws BundleException
1:    */
1:   public void startBundle(Bundle b) throws BundleException;
1:   
1:   /**
1:    * Stops a previously installed bundle   
1:    * @param b
1:    * @throws BundleException
1:    */
1:   public void stopBundle(Bundle b) throws BundleException;
1:   
1:   /**
1:    * Removes a bundle from the runtime
1:    * @param b
1:    * @throws BundleException
1:    */
1:   public void uninstallBundle(Bundle b) throws BundleException;
1:   
1: }
============================================================================