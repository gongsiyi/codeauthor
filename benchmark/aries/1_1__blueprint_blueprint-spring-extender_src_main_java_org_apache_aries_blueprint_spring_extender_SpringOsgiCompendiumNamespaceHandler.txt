1:1388916: /**
1:1388916:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:1388916:  *  contributor license agreements.  See the NOTICE file distributed with
1:1388916:  *  this work for additional information regarding copyright ownership.
1:1388916:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:1388916:  *  (the "License"); you may not use this file except in compliance with
1:1388916:  *  the License.  You may obtain a copy of the License at
1:1388916:  *
1:1388916:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1388916:  *
1:1388916:  *  Unless required by applicable law or agreed to in writing, software
1:1388916:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:1388916:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1388916:  *  See the License for the specific language governing permissions and
1:1388916:  *  limitations under the License.
1:1388916:  */
1:09b7171: package org.apache.aries.blueprint.spring.extender;
4:09b7171: 
1:2e9d097: import java.net.URI;
1:09b7171: import java.net.URL;
1:09b7171: import java.util.Set;
1:09b7171: 
1:09b7171: import org.apache.aries.blueprint.NamespaceHandler;
1:09b7171: import org.apache.aries.blueprint.ParserContext;
1:09b7171: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1:09b7171: import org.osgi.service.blueprint.reflect.Metadata;
1:09b7171: import org.w3c.dom.Element;
1:09b7171: import org.w3c.dom.Node;
1:2e9d097: import org.w3c.dom.NodeList;
1:09b7171: 
1:09b7171: public class SpringOsgiCompendiumNamespaceHandler implements NamespaceHandler {
1:09b7171: 
1:2e9d097:     public static final String CM_NAMESPACE = "http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0";
1:2e9d097: 
1:09b7171:     @Override
1:09b7171:     public URL getSchemaLocation(String namespace) {
1:09b7171:         if (namespace.startsWith("http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium")) {
1:09b7171:             String sub = namespace.substring("http://www.springframework.org/schema/osgi-compendium/".length());
1:09b7171:             if ("spring-osgi-compendium.xsd".equals(sub)) {
1:09b7171:                 sub = "spring-osgi-compendium-1.2.xsd";
4:09b7171:             }
1:09b7171:             return getClass().getResource(sub);
1:09b7171:         }
1:09b7171:         return null;
1:09b7171:     }
1:09b7171: 
1:09b7171:     @Override
1:09b7171:     public Set<Class> getManagedClasses() {
1:09b7171:         return null;
1:09b7171:     }
1:09b7171: 
1:09b7171:     @Override
1:09b7171:     public Metadata parse(Element element, ParserContext context) {
1:2e9d097:         fixDom(element, CM_NAMESPACE);
1:2e9d097:         NamespaceHandler handler = context.getNamespaceHandler(URI.create(CM_NAMESPACE));
1:2e9d097:         return handler.parse(element, context);
1:09b7171:     }
1:09b7171: 
1:09b7171:     @Override
1:09b7171:     public ComponentMetadata decorate(Node node, ComponentMetadata component, ParserContext context) {
1:09b7171:         return component;
1:09b7171:     }
1:2e9d097: 
1:2e9d097:     private static void fixDom(Node node, String namespace) {
1:2e9d097:         if (node.getNodeType() == Node.ELEMENT_NODE) {
1:2e9d097:             if (!namespace.equals(node.getNamespaceURI())) {
1:2e9d097:                 node.getOwnerDocument().renameNode(node, namespace, node.getLocalName());
1:2e9d097:             }
1:2e9d097:             NodeList children = node.getChildNodes();
1:2e9d097:             for (int i = 0; i < children.getLength(); i++) {
1:2e9d097:                 fixDom(children.item(i), namespace);
1:2e9d097:             }
1:2e9d097:         }
1:2e9d097:     }
1:2e9d097: 
1:09b7171: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:2e9d097
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
/////////////////////////////////////////////////////////////////////////
1: import org.w3c.dom.NodeList;
1:     public static final String CM_NAMESPACE = "http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0";
1: 
/////////////////////////////////////////////////////////////////////////
1:         fixDom(element, CM_NAMESPACE);
1:         NamespaceHandler handler = context.getNamespaceHandler(URI.create(CM_NAMESPACE));
1:         return handler.parse(element, context);
1: 
1:     private static void fixDom(Node node, String namespace) {
1:         if (node.getNodeType() == Node.ELEMENT_NODE) {
1:             if (!namespace.equals(node.getNamespaceURI())) {
1:                 node.getOwnerDocument().renameNode(node, namespace, node.getLocalName());
1:             }
1:             NodeList children = node.getChildNodes();
1:             for (int i = 0; i < children.getLength(); i++) {
1:                 fixDom(children.item(i), namespace);
1:             }
1:         }
1:     }
1: 
commit:1388916
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
commit:09b7171
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.spring.extender;
1: 
1: import java.net.URL;
1: import java.util.Set;
1: 
1: import org.apache.aries.blueprint.NamespaceHandler;
1: import org.apache.aries.blueprint.ParserContext;
1: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1: import org.osgi.service.blueprint.reflect.Metadata;
0: import org.osgi.service.blueprint.reflect.ReferenceMetadata;
0: import org.w3c.dom.Document;
1: import org.w3c.dom.Element;
1: import org.w3c.dom.Node;
1: 
1: public class SpringOsgiCompendiumNamespaceHandler implements NamespaceHandler {
1: 
1:     @Override
1:     public URL getSchemaLocation(String namespace) {
1:         if (namespace.startsWith("http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium")) {
1:             String sub = namespace.substring("http://www.springframework.org/schema/osgi-compendium/".length());
1:             if ("spring-osgi-compendium.xsd".equals(sub)) {
1:                 sub = "spring-osgi-compendium-1.2.xsd";
1:             }
1:             return getClass().getResource(sub);
1:         }
1:         return null;
1:     }
1: 
1:     @Override
1:     public Set<Class> getManagedClasses() {
1:         return null;
1:     }
1: 
1:     @Override
1:     public Metadata parse(Element element, ParserContext context) {
0:         if ("managed-properties".equals(element.getLocalName())) {
1: 
1:         }
0:         else if ("managed-service-factory".equals(element.getLocalName())) {
1: 
1:         }
0:         else if ("cm-properties".equals(element.getLocalName())) {
1: 
1:         }
0:         throw new UnsupportedOperationException();
1:     }
1: 
1:     @Override
1:     public ComponentMetadata decorate(Node node, ComponentMetadata component, ParserContext context) {
1:         return component;
1:     }
1: }
============================================================================