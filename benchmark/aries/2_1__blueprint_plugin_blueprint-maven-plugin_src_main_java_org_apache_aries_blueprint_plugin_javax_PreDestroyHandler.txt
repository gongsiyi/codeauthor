1:a04c623: /**
1:a04c623:  * Licensed to the Apache Software Foundation (ASF) under one
1:a04c623:  * or more contributor license agreements.  See the NOTICE file
1:a04c623:  * distributed with this work for additional information
1:a04c623:  * regarding copyright ownership.  The ASF licenses this file
1:a04c623:  * to you under the Apache License, Version 2.0 (the
1:a04c623:  * "License"); you may not use this file except in compliance
1:a04c623:  * with the License.  You may obtain a copy of the License at
1:a04c623:  *
1:a04c623:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a04c623:  *
1:a04c623:  * Unless required by applicable law or agreed to in writing,
1:a04c623:  * software distributed under the License is distributed on an
1:a04c623:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:a04c623:  * KIND, either express or implied.  See the License for the
1:a04c623:  * specific language governing permissions and limitations
1:a04c623:  * under the License.
1:a04c623:  */
1:a04c623: package org.apache.aries.blueprint.plugin.javax;
1:a04c623: 
1:a04c623: import org.apache.aries.blueprint.plugin.spi.BeanEnricher;
1:0d2c0ec: import org.apache.aries.blueprint.plugin.spi.ContextEnricher;
1:a04c623: import org.apache.aries.blueprint.plugin.spi.MethodAnnotationHandler;
1:a04c623: 
1:a04c623: import javax.annotation.PreDestroy;
1:a04c623: import java.lang.reflect.Method;
1:a04c623: import java.util.List;
1:a04c623: 
1:a04c623: public class PreDestroyHandler implements MethodAnnotationHandler<PreDestroy> {
1:a04c623:     @Override
1:a04c623:     public Class<PreDestroy> getAnnotation() {
1:a04c623:         return PreDestroy.class;
1:a04c623:     }
1:a04c623: 
1:a04c623:     @Override
1:0d2c0ec:     public void handleMethodAnnotation(Class<?> clazz, List<Method> methods, ContextEnricher contextEnricher, BeanEnricher beanEnricher) {
1:a04c623:         if(methods.size() > 1){
1:a04c623:             throw new IllegalArgumentException("There can be only one method annotated with @PreDestroy in bean");
1:a04c623:         }
1:a04c623:         beanEnricher.addAttribute("destroy-method", methods.get(0).getName());
1:a04c623:     }
1:a04c623: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:0d2c0ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.plugin.spi.ContextEnricher;
/////////////////////////////////////////////////////////////////////////
1:     public void handleMethodAnnotation(Class<?> clazz, List<Method> methods, ContextEnricher contextEnricher, BeanEnricher beanEnricher) {
commit:a04c623
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.javax;
1: 
1: import org.apache.aries.blueprint.plugin.spi.BeanEnricher;
1: import org.apache.aries.blueprint.plugin.spi.MethodAnnotationHandler;
1: 
1: import javax.annotation.PreDestroy;
1: import java.lang.reflect.Method;
1: import java.util.List;
1: 
1: public class PreDestroyHandler implements MethodAnnotationHandler<PreDestroy> {
1:     @Override
1:     public Class<PreDestroy> getAnnotation() {
1:         return PreDestroy.class;
1:     }
1: 
1:     @Override
0:     public void handleMethodAnnotation(Class<?> clazz, List<Method> methods, BeanEnricher beanEnricher) {
1:         if(methods.size() > 1){
1:             throw new IllegalArgumentException("There can be only one method annotated with @PreDestroy in bean");
1:         }
1:         beanEnricher.addAttribute("destroy-method", methods.get(0).getName());
1:     }
1: }
============================================================================