1:fdf3952: /**
1:fdf3952:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:fdf3952:  *  contributor license agreements.  See the NOTICE file distributed with
1:fdf3952:  *  this work for additional information regarding copyright ownership.
1:fdf3952:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:fdf3952:  *  (the "License"); you may not use this file except in compliance with
1:fdf3952:  *  the License.  You may obtain a copy of the License at
1:fdf3952:  *
1:fdf3952:  *     http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  *  Unless required by applicable law or agreed to in writing, software
1:fdf3952:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:fdf3952:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fdf3952:  *  See the License for the specific language governing permissions and
1:fdf3952:  *  limitations under the License.
1:fdf3952:  */
1:fdf3952: package org.apache.aries.jmx;
1:fdf3952: 
1:fdf3952: import org.apache.aries.jmx.agent.JMXAgent;
1:fdf3952: import org.apache.aries.jmx.agent.JMXAgentImpl;
1:a0df2a3: import org.apache.aries.jmx.framework.StateConfig;
1:fdf3952: import org.osgi.framework.BundleActivator;
1:fdf3952: import org.osgi.framework.BundleContext;
1:fdf3952: import org.osgi.service.log.LogService;
1:fdf3952: 
1:fdf3952: /**
1:fdf3952:  * <p>Activator for JMX OSGi bundle.</p>
1:fdf3952:  * 
1:fdf3952:  * @version $Rev$ $Date$
1:fdf3952:  */
1:fdf3952: public class Activator implements BundleActivator {
1:fdf3952: 
1:fdf3952:     private JMXAgent agent;
1:fdf3952:     private Logger logger;
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * <p>Called when JMX OSGi bundle starts.
1:fdf3952:      * This method creates and starts JMX agent.</p>
1:fdf3952:      * 
1:fdf3952:      * @see org.osgi.framework.BundleActivator#start(BundleContext)
1:fdf3952:      */
1:fdf3952:     public void start(BundleContext context) throws Exception {
1:a0df2a3:         StateConfig stateConfig = StateConfig.register(context);
1:fdf3952:         logger = new Logger(context);
1:fdf3952:         //starting logger
1:fdf3952:         logger.open();
1:fdf3952:         logger.log(LogService.LOG_DEBUG, "Starting JMX OSGi bundle");
1:a0df2a3:         agent = new JMXAgentImpl(context, stateConfig, logger);
1:fdf3952:         agent.start();
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * <p>Called when JMX OSGi bundle stops.
1:fdf3952:      * This method stops agent and logger @see {@link Logger}.</p>
1:fdf3952:      * 
1:fdf3952:      * @see org.osgi.framework.BundleActivator#stop(BundleContext)
1:fdf3952:      */
1:fdf3952:     public void stop(BundleContext bc) throws Exception {
1:fdf3952:         if (logger != null) {
1:fdf3952:             logger.log(LogService.LOG_DEBUG, "Stopping JMX OSGi bundle");
1:fdf3952:         }
1:fdf3952:         if (agent != null) {
1:fdf3952:             agent.stop();
1:fdf3952:         }
1:fdf3952:         if (logger != null) {
1:fdf3952:             logger.close();
1:fdf3952:         }
1:fdf3952:     }
1:fdf3952: 
1:fdf3952: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:a0df2a3
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.jmx.framework.StateConfig;
/////////////////////////////////////////////////////////////////////////
1:         StateConfig stateConfig = StateConfig.register(context);
1:         agent = new JMXAgentImpl(context, stateConfig, logger);
commit:0273964
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jmx;
1: 
1: import org.apache.aries.jmx.agent.JMXAgent;
1: import org.apache.aries.jmx.agent.JMXAgentImpl;
0: import org.apache.aries.jmx.agent.JMXAgentContext;
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.service.log.LogService;
1: 
1: /**
1:  * <p>Activator for JMX OSGi bundle.</p>
1:  * 
1:  * @version $Rev$ $Date$
1:  */
1: public class Activator implements BundleActivator {
1: 
1:     private JMXAgent agent;
1:     private Logger logger;
1: 
1:     /**
1:      * <p>Called when JMX OSGi bundle starts.
1:      * This method creates and starts JMX agent.</p>
1:      * 
1:      * @see org.osgi.framework.BundleActivator#start(BundleContext)
1:      */
1:     public void start(BundleContext context) throws Exception {
1:         logger = new Logger(context);
1:         //starting logger
1:         logger.open();
1:         logger.log(LogService.LOG_DEBUG, "Starting JMX OSGi bundle");
0:         agent = new JMXAgentImpl(logger);
0:         JMXAgentContext agentContext = new JMXAgentContext(context, agent, logger);
0:         agent.setAgentContext(agentContext);
1:         agent.start();
1:     }
1: 
1:     /**
1:      * <p>Called when JMX OSGi bundle stops.
1:      * This method stops agent and logger @see {@link Logger}.</p>
1:      * 
1:      * @see org.osgi.framework.BundleActivator#stop(BundleContext)
1:      */
1:     public void stop(BundleContext bc) throws Exception {
1:         if (logger != null) {
1:             logger.log(LogService.LOG_DEBUG, "Stopping JMX OSGi bundle");
1:         }
1:         if (agent != null) {
1:             agent.stop();
1:         }
1:         if (logger != null) {
1:             logger.close();
1:         }
1:     }
1: 
1: }
author:Christian Schneider
-------------------------------------------------------------------------------
commit:0a8778f
/////////////////////////////////////////////////////////////////////////
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f5398b2
/////////////////////////////////////////////////////////////////////////
0:         agent = new JMXAgentImpl(context, logger);
============================================================================