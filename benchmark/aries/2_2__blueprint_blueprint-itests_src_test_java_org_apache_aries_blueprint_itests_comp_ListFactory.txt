1:88a0e3f: /*
1:88a0e3f:  * Licensed to the Apache Software Foundation (ASF) under one
1:88a0e3f:  * or more contributor license agreements.  See the NOTICE file
1:88a0e3f:  * distributed with this work for additional information
1:88a0e3f:  * regarding copyright ownership.  The ASF licenses this file
1:88a0e3f:  * to you under the Apache License, Version 2.0 (the
1:88a0e3f:  * "License"); you may not use this file except in compliance
1:88a0e3f:  * with the License.  You may obtain a copy of the License at
1:88a0e3f:  *
1:88a0e3f:  *   http://www.apache.org/licenses/LICENSE-2.0
1:88a0e3f:  *
1:88a0e3f:  * Unless required by applicable law or agreed to in writing,
1:88a0e3f:  * software distributed under the License is distributed on an
1:88a0e3f:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:88a0e3f:  * KIND, either express or implied.  See the License for the
1:88a0e3f:  * specific language governing permissions and limitations
1:88a0e3f:  * under the License.
1:88a0e3f:  */
1:88a0e3f: package org.apache.aries.blueprint.itests.comp;
1:88a0e3f: 
1:88a0e3f: import java.util.Arrays;
1:88a0e3f: import java.util.List;
1:88a0e3f: import java.util.Random;
1:88a0e3f: 
1:88a0e3f: public class ListFactory {
1:88a0e3f:     public static List<Integer> create(int no) {
1:88a0e3f:         System.out.println(Thread.currentThread().getId()+": creating list");
1:88a0e3f:         try {
1:88a0e3f:             Thread.sleep(new Random().nextInt(100));
1:88a0e3f:         } catch (InterruptedException ie) {}
1:88a0e3f:         System.out.println(Thread.currentThread().getId()+": created");
1:f93a128:         return Arrays.asList(no);
1:88a0e3f:     }
1:88a0e3f: }
============================================================================
author:Lei Wang
-------------------------------------------------------------------------------
commit:f93a128
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         return Arrays.asList(no);
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:88a0e3f
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.itests.comp;
1: 
1: import java.util.Arrays;
0: import java.util.ArrayList;
1: import java.util.List;
1: import java.util.Random;
1: 
1: public class ListFactory {
1:     public static List<Integer> create(int no) {
1:         System.out.println(Thread.currentThread().getId()+": creating list");
1:         try {
1:             Thread.sleep(new Random().nextInt(100));
1:         } catch (InterruptedException ie) {}
1:         System.out.println(Thread.currentThread().getId()+": created");
0:         return new ArrayList<Integer>(Arrays.asList(no));
1:     }
1: }
============================================================================