2:628add4: /**
1:628add4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:628add4:  *  contributor license agreements.  See the NOTICE file distributed with
1:628add4:  *  this work for additional information regarding copyright ownership.
1:628add4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:628add4:  *  (the "License"); you may not use this file except in compliance with
1:628add4:  *  the License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
2:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.api;
3:628add4: 
1:628add4: import java.util.ArrayList;
1:628add4: import java.util.List;
1:628add4: 
1:880e087: import org.apache.aries.samples.ariestrader.api.persistence.MarketSummaryDataBean;
1:628add4: 
1:628add4: /**
1:628add4:   * TradeServicesManager interface provides an interface to be
1:628add4:   * used for managing the implementations of TradeServices that
1:628add4:   * are available.
1:628add4:   * 
1:628add4:   */ 
1:628add4: public interface TradeServicesManager {
1:628add4: 
1:628add4: 
1:628add4:     /**
1:628add4:       * Get CurrentModes that are registered
1:628add4:       */
1:628add4:     public ArrayList<Integer> getCurrentModes();
1:628add4: 
1:628add4:     /**
1:628add4:       * Get the currently selected TradeServices
1:628add4:       */
1:628add4:     public TradeServices getTradeServices();
1:628add4: 
1:628add4:     /**
1:628add4:       * Compute and return a snapshot of the current market
1:b8c0170:       * conditions.  This includes the TSIA - and index of the 
1:b8c0170:       * of the top 100 Trade stock quotes.  The openTSIA(the index
1:b8c0170:       * at the open), The volume of shares traded, Top Stocks gain
1:628add4:       * and loss.
1:628add4:       * 
1:628add4:       * This is a special version of this function which will cache
1:628add4:       * the results provided by the currently selected
1:628add4:       * TradeServices.
1:628add4:       * 
1:628add4:       * @return A snapshot of the current market summary
1:628add4:       */
1:628add4:     public MarketSummaryDataBean getMarketSummary() throws Exception;
1:628add4: 
1:628add4: 
1:628add4: }   
1:628add4: 
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:8ef753d
/////////////////////////////////////////////////////////////////////////
commit:39f53f6
commit:b8c0170
/////////////////////////////////////////////////////////////////////////
1:       * conditions.  This includes the TSIA - and index of the 
1:       * of the top 100 Trade stock quotes.  The openTSIA(the index
1:       * at the open), The volume of shares traded, Top Stocks gain
commit:880e087
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.ariestrader.api.persistence.MarketSummaryDataBean;
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.api;
0: import org.apache.aries.samples.ariestrader.persistence.api.MarketSummaryDataBean;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.api;
0: import org.apache.aries.samples.daytrader.persistence.api.MarketSummaryDataBean;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.api;
1: 
1: import java.util.ArrayList;
1: import java.util.List;
1: 
0: import org.apache.geronimo.samples.daytrader.persistence.api.MarketSummaryDataBean;
1: 
1: /**
1:   * TradeServicesManager interface provides an interface to be
1:   * used for managing the implementations of TradeServices that
1:   * are available.
1:   * 
1:   */ 
1: public interface TradeServicesManager {
1: 
1: 
1:     /**
1:       * Get CurrentModes that are registered
1:       */
1:     public ArrayList<Integer> getCurrentModes();
1: 
1:     /**
0:       * Set TradeServicesList reference
1:       */
0:     public void setTradeServicesList(List tradeList);
1: 
1: 
1:     /**
1:       * Get the currently selected TradeServices
1:       */
1:     public TradeServices getTradeServices();
1: 
1:     /**
1:       * Compute and return a snapshot of the current market
0:       * conditions.  This includes the TSIA - and index of the prive
0:       * of the top 100 Trade stock quotes.  Ths openTSIA(the index
0:       * at the open), The volune of shares traded, Top Stocks gain
1:       * and loss.
1:       * 
1:       * This is a special version of this function which will cache
1:       * the results provided by the currently selected
1:       * TradeServices.
1:       * 
1:       * @return A snapshot of the current market summary
1:       */
1:     public MarketSummaryDataBean getMarketSummary() throws Exception;
1: 
1: 
1: }   
1: 
============================================================================