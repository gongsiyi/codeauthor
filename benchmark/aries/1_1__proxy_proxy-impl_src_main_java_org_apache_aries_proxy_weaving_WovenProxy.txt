1:96d4e06: /*
1:96d4e06:  * Licensed to the Apache Software Foundation (ASF) under one
1:96d4e06:  * or more contributor license agreements.  See the NOTICE file
1:96d4e06:  * distributed with this work for additional information
1:96d4e06:  * regarding copyright ownership.  The ASF licenses this file
1:96d4e06:  * to you under the Apache License, Version 2.0 (the
1:96d4e06:  * "License"); you may not use this file except in compliance
1:96d4e06:  * with the License.  You may obtain a copy of the License at
1:96d4e06:  *
1:96d4e06:  *   http://www.apache.org/licenses/LICENSE-2.0
1:96d4e06:  *
1:96d4e06:  * Unless required by applicable law or agreed to in writing,
1:96d4e06:  * software distributed under the License is distributed on an
1:96d4e06:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:96d4e06:  * KIND, either express or implied.  See the License for the
1:96d4e06:  * specific language governing permissions and limitations
1:96d4e06:  * under the License.
1:96d4e06:  */
1:96d4e06: package org.apache.aries.proxy.weaving;
1:96d4e06: 
1:96d4e06: import java.util.concurrent.Callable;
1:96d4e06: 
1:96d4e06: import org.apache.aries.proxy.InvocationListener;
1:96d4e06: 
1:96d4e06: public interface WovenProxy {
1:96d4e06:   
1:96d4e06:   /**
1:96d4e06:    * @return true if this instance has a non null dispatcher or listener
1:96d4e06:    */
1:96d4e06:   public boolean org_apache_aries_proxy_weaving_WovenProxy_isProxyInstance();
1:96d4e06:   
1:96d4e06:   /**
1:96d4e06:    * @return the dispatcher, or null if no dispatcher is set
1:96d4e06:    */
1:96d4e06:   public Callable<Object> org_apache_aries_proxy_weaving_WovenProxy_unwrap();
1:96d4e06:   
1:96d4e06:   /**
1:96d4e06:    * @return A new proxy instance that can be used for delegation. Note that this object should
1:96d4e06:    *         not be used without setting a dispatcher!
1:96d4e06:    */
1:96d4e06:   public WovenProxy org_apache_aries_proxy_weaving_WovenProxy_createNewProxyInstance(
1:96d4e06:       Callable<Object> dispatcher, InvocationListener listener);
1:96d4e06: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:96d4e06
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.proxy.weaving;
1: 
1: import java.util.concurrent.Callable;
1: 
1: import org.apache.aries.proxy.InvocationListener;
1: 
1: public interface WovenProxy {
1:   
1:   /**
1:    * @return true if this instance has a non null dispatcher or listener
1:    */
1:   public boolean org_apache_aries_proxy_weaving_WovenProxy_isProxyInstance();
1:   
1:   /**
1:    * @return the dispatcher, or null if no dispatcher is set
1:    */
1:   public Callable<Object> org_apache_aries_proxy_weaving_WovenProxy_unwrap();
1:   
1:   /**
1:    * @return A new proxy instance that can be used for delegation. Note that this object should
1:    *         not be used without setting a dispatcher!
1:    */
1:   public WovenProxy org_apache_aries_proxy_weaving_WovenProxy_createNewProxyInstance(
1:       Callable<Object> dispatcher, InvocationListener listener);
1: }
============================================================================