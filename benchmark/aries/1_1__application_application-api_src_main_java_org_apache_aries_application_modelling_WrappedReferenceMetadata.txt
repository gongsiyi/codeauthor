1:58f55bd: /*
1:58f55bd:  * Licensed to the Apache Software Foundation (ASF) under one
1:58f55bd:  * or more contributor license agreements.  See the NOTICE file
1:58f55bd:  * distributed with this work for additional information
1:58f55bd:  * regarding copyright ownership.  The ASF licenses this file
1:58f55bd:  * to you under the Apache License, Version 2.0 (the
1:58f55bd:  * "License"); you may not use this file except in compliance
1:58f55bd:  * with the License.  You may obtain a copy of the License at
1:58f55bd:  *
1:58f55bd:  *   http://www.apache.org/licenses/LICENSE-2.0
1:58f55bd:  *
1:58f55bd:  * Unless required by applicable law or agreed to in writing,
1:58f55bd:  * software distributed under the License is distributed on an
1:58f55bd:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:58f55bd:  * KIND, either express or implied.  See the License for the
1:58f55bd:  * specific language governing permissions and limitations
1:58f55bd:  * under the License.
1:58f55bd:  */
1:58f55bd: 
1:a5079e5: package org.apache.aries.application.modelling;
1:a5079e5: 
1:a5079e5: 
1:a5079e5: /**
1:a5079e5:  * Information about a parsed blueprint reference
1:a5079e5:  */
1:a5079e5: public interface WrappedReferenceMetadata
1:a5079e5: {
1:a5079e5:   /**
1:a5079e5:    * Get the properties of the associated blueprint service
1:a5079e5:    * @return The filter, or null for no filter
1:a5079e5:    */
1:a5079e5:   String getFilter();
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Get the interface required by the reference
1:a5079e5:    * @return the interface, or null if unspecified
1:a5079e5:    */
1:a5079e5:   String getInterface();
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Get the component-name attribute.
1:a5079e5:    * @return Service name
1:a5079e5:    */
1:a5079e5:   String getComponentName();
1:a5079e5:  
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Is this a reference list or a reference
1:a5079e5:    * @return true if a reference list
1:a5079e5:    */
1:a5079e5:   boolean isList();
1:a5079e5: 
1:a5079e5:   /**
1:a5079e5:    * Is this an optional reference
1:a5079e5:    * @return true if optional
1:a5079e5:    */
1:a5079e5:   boolean isOptional();
1:a5079e5: 
1:a5079e5:   /**
1:a5079e5:    * Get the reference's id as defined in the blueprint
1:a5079e5:    * @return the blueprint reference id
1:a5079e5:    */
1:a5079e5:   String getId();
1:a5079e5: }
============================================================================
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:58f55bd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
commit:a5079e5
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.modelling;
1: 
1: 
1: /**
1:  * Information about a parsed blueprint reference
1:  */
1: public interface WrappedReferenceMetadata
1: {
1:   /**
1:    * Get the properties of the associated blueprint service
1:    * @return The filter, or null for no filter
1:    */
1:   String getFilter();
1:   
1:   /**
1:    * Get the interface required by the reference
1:    * @return the interface, or null if unspecified
1:    */
1:   String getInterface();
1:   
1:   /**
1:    * Get the component-name attribute.
1:    * @return Service name
1:    */
1:   String getComponentName();
1:  
1:   
1:   /**
1:    * Is this a reference list or a reference
1:    * @return true if a reference list
1:    */
1:   boolean isList();
1: 
1:   /**
1:    * Is this an optional reference
1:    * @return true if optional
1:    */
1:   boolean isOptional();
1: 
1:   /**
1:    * Get the reference's id as defined in the blueprint
1:    * @return the blueprint reference id
1:    */
1:   String getId();
1: }
============================================================================