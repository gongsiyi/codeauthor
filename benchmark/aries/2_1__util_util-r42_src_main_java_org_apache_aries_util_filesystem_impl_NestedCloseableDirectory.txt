1:72345ab: /*
1:72345ab:  * Licensed to the Apache Software Foundation (ASF) under one
1:72345ab:  * or more contributor license agreements.  See the NOTICE file
1:72345ab:  * distributed with this work for additional information
1:72345ab:  * regarding copyright ownership.  The ASF licenses this file
1:72345ab:  * to you under the Apache License, Version 2.0 (the
1:72345ab:  * "License"); you may not use this file except in compliance
1:72345ab:  * with the License.  You may obtain a copy of the License at
1:72345ab:  *
1:72345ab:  *   http://www.apache.org/licenses/LICENSE-2.0
1:72345ab:  *
1:72345ab:  * Unless required by applicable law or agreed to in writing,
1:72345ab:  * software distributed under the License is distributed on an
1:72345ab:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:72345ab:  * KIND, either express or implied.  See the License for the
1:72345ab:  * specific language governing permissions and limitations
1:72345ab:  * under the License.
1:72345ab:  */
1:910fec0: package org.apache.aries.util.filesystem.impl;
1:72345ab: 
1:72345ab: import java.io.File;
1:72345ab: import java.io.FileOutputStream;
1:72345ab: import java.io.IOException;
1:72345ab: import java.util.zip.ZipFile;
1:72345ab: 
1:910fec0: import org.apache.aries.util.filesystem.IFile;
1:c6cb34d: import org.apache.aries.util.io.IOUtils;
1:72345ab: 
1:72345ab: public class NestedCloseableDirectory extends CloseableDirectory {
1:72345ab: 
1:72345ab: 	private final File tempFile;
1:72345ab: 	private final ZipFile zip;
1:72345ab: 	
1:72345ab: 	public NestedCloseableDirectory(IFile archive, NestedZipDirectory delegate) throws IOException {
1:72345ab: 		super(delegate);
1:72345ab: 		
1:72345ab: 		tempFile = File.createTempFile("archiveExtract", ".jar");
1:72345ab: 
1:72345ab: 		FileOutputStream fos = null; 
1:72345ab: 		try {
1:72345ab: 			fos = new FileOutputStream(tempFile);
1:72345ab: 			IOUtils.copy(archive.open(), fos);	
1:72345ab: 			this.delegate = new NestedZipDirectory(delegate, this);
1:72345ab: 			
1:72345ab: 			zip = new ZipFile(tempFile);
1:72345ab: 		} catch (IOException e) {
1:72345ab: 			IOUtils.close(fos);
1:72345ab: 			tempFile.delete();
1:72345ab: 			throw e;
1:72345ab: 		}
1:72345ab: 	}
1:72345ab: 	
1:72345ab: 	public ZipFile getZipFile() {
1:72345ab: 		return zip;
1:72345ab: 	}
1:72345ab: 
1:72345ab: 	@Override
1:72345ab: 	protected void cleanup() {
1:72345ab: 		try {
1:72345ab: 			zip.close();
1:72345ab: 		} catch (IOException e) {}
1:72345ab: 		tempFile.delete();
1:72345ab: 	}
1:72345ab: }
============================================================================
author:David Jencks
-------------------------------------------------------------------------------
commit:6df3ad3
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:c6cb34d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.util.io.IOUtils;
commit:910fec0
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.util.filesystem.impl;
1: import org.apache.aries.util.filesystem.IFile;
0: import org.apache.aries.util.filesystem.IOUtils;
commit:72345ab
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.application.utils.filesystem.impl;
1: 
1: import java.io.File;
1: import java.io.FileOutputStream;
1: import java.io.IOException;
1: import java.util.zip.ZipFile;
1: 
0: import org.apache.aries.application.filesystem.IFile;
0: import org.apache.aries.application.utils.filesystem.IOUtils;
1: 
1: public class NestedCloseableDirectory extends CloseableDirectory {
1: 
1: 	private final File tempFile;
1: 	private final ZipFile zip;
1: 	
1: 	public NestedCloseableDirectory(IFile archive, NestedZipDirectory delegate) throws IOException {
1: 		super(delegate);
1: 		
1: 		tempFile = File.createTempFile("archiveExtract", ".jar");
1: 
1: 		FileOutputStream fos = null; 
1: 		try {
1: 			fos = new FileOutputStream(tempFile);
1: 			IOUtils.copy(archive.open(), fos);	
1: 			this.delegate = new NestedZipDirectory(delegate, this);
1: 			
1: 			zip = new ZipFile(tempFile);
1: 		} catch (IOException e) {
1: 			IOUtils.close(fos);
1: 			tempFile.delete();
1: 			throw e;
1: 		}
1: 	}
1: 	
1: 	public ZipFile getZipFile() {
1: 		return zip;
1: 	}
1: 
1: 	@Override
1: 	protected void cleanup() {
1: 		try {
1: 			zip.close();
1: 		} catch (IOException e) {}
1: 		tempFile.delete();
1: 	}
1: }
============================================================================