1:fdf3952: /**
1:fdf3952:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:fdf3952:  *  contributor license agreements.  See the NOTICE file distributed with
1:fdf3952:  *  this work for additional information regarding copyright ownership.
1:fdf3952:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:fdf3952:  *  (the "License"); you may not use this file except in compliance with
1:fdf3952:  *  the License.  You may obtain a copy of the License at
1:fdf3952:  *
1:fdf3952:  *     http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  *  Unless required by applicable law or agreed to in writing, software
1:fdf3952:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:fdf3952:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fdf3952:  *  See the License for the specific language governing permissions and
1:fdf3952:  *  limitations under the License.
1:fdf3952:  */
1:fdf3952: package org.apache.aries.jmx.test.bundlea;
1:fdf3952: 
1:fdf3952: import java.util.Dictionary;
1:fdf3952: import java.util.Hashtable;
1:fdf3952: 
1:fdf3952: import org.apache.aries.jmx.test.bundlea.api.InterfaceA;
1:fdf3952: import org.apache.aries.jmx.test.bundlea.impl.A;
1:fdf3952: import org.apache.aries.jmx.test.bundleb.api.InterfaceB;
1:fdf3952: import org.osgi.framework.BundleActivator;
1:fdf3952: import org.osgi.framework.BundleContext;
1:fdf3952: import org.osgi.framework.Constants;
1:fdf3952: import org.osgi.service.cm.ManagedService;
1:fdf3952: import org.osgi.util.tracker.ServiceTracker;
1:fdf3952: 
1:fdf3952: /**
1:fdf3952:  * 
1:fdf3952:  *
1:fdf3952:  * @version $Rev$ $Date$
1:fdf3952:  */
1:fdf3952: public class Activator implements BundleActivator {
1:fdf3952: 
1:fdf3952:     ServiceTracker tracker;
1:fdf3952:     
1:fdf3952:     /* (non-Javadoc)
1:fdf3952:      * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
1:fdf3952:      */
1:fdf3952:     public void start(BundleContext context) throws Exception {
1:fdf3952:         
1:fdf3952:         tracker = new ServiceTracker(context, InterfaceB.class.getName(), null);
1:fdf3952:         tracker.open();
1:fdf3952:         
1:fdf3952:         Dictionary<String, Object> props = new Hashtable<String, Object>();
1:fdf3952:         props.put(Constants.SERVICE_PID, "org.apache.aries.jmx.test.ServiceA");
1:0a8778f:         String[] interfaces = new String[] { InterfaceA.class.getName(), ManagedService.class.getName() };
1:0a8778f: 		context.registerService(interfaces, new A(tracker), props);
1:fdf3952:         
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /* (non-Javadoc)
1:fdf3952:      * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
1:fdf3952:      */
1:fdf3952:     public void stop(BundleContext context) throws Exception {
1:fdf3952:         tracker.close();
1:fdf3952:     }
1:fdf3952: 
1:fdf3952: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:0a8778f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         String[] interfaces = new String[] { InterfaceA.class.getName(), ManagedService.class.getName() };
1: 		context.registerService(interfaces, new A(tracker), props);
/////////////////////////////////////////////////////////////////////////
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jmx.test.bundlea;
1: 
1: import java.util.Dictionary;
1: import java.util.Hashtable;
1: 
1: import org.apache.aries.jmx.test.bundlea.api.InterfaceA;
1: import org.apache.aries.jmx.test.bundlea.impl.A;
1: import org.apache.aries.jmx.test.bundleb.api.InterfaceB;
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.Constants;
0: import org.osgi.framework.ServiceRegistration;
1: import org.osgi.service.cm.ManagedService;
1: import org.osgi.util.tracker.ServiceTracker;
1: 
1: /**
1:  * 
1:  *
1:  * @version $Rev$ $Date$
1:  */
1: public class Activator implements BundleActivator {
1: 
0:     ServiceRegistration registration;
1:     ServiceTracker tracker;
1:     
1:     /* (non-Javadoc)
1:      * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)
1:      */
1:     public void start(BundleContext context) throws Exception {
1:         
1:         tracker = new ServiceTracker(context, InterfaceB.class.getName(), null);
1:         tracker.open();
1:         
1:         Dictionary<String, Object> props = new Hashtable<String, Object>();
1:         props.put(Constants.SERVICE_PID, "org.apache.aries.jmx.test.ServiceA");
0:         registration = context.registerService(new String[] { InterfaceA.class.getName(), ManagedService.class.getName() }, new A(tracker), props);
1:         
1:     }
1: 
1:     /* (non-Javadoc)
1:      * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)
1:      */
1:     public void stop(BundleContext context) throws Exception {
0:         registration.unregister();
1:         tracker.close();
1:     }
1: 
1: }
============================================================================