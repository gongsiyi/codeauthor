1:a14f2fd: /*
1:a14f2fd:  * Licensed under the Apache License, Version 2.0 (the "License");
1:a14f2fd:  * you may not use this file except in compliance with the License.
1:a14f2fd:  * You may obtain a copy of the License at
1:a14f2fd:  *
1:a14f2fd:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a14f2fd:  *
1:a14f2fd:  * Unless required by applicable law or agreed to in writing, software
1:a14f2fd:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a14f2fd:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a14f2fd:  * See the License for the specific language governing permissions and
1:a14f2fd:  * limitations under the License.
1:a14f2fd:  */
1:5725f09: package org.apache.aries.subsystem.core.internal;
2:5725f09: 
1:5725f09: import java.io.ByteArrayInputStream;
1:5725f09: import java.io.ByteArrayOutputStream;
1:5725f09: import java.io.IOException;
1:5725f09: import java.io.InputStream;
1:5725f09: import java.util.jar.Attributes;
1:5725f09: import java.util.jar.JarOutputStream;
1:5725f09: import java.util.jar.Manifest;
1:5725f09: 
1:5725f09: import org.osgi.framework.Bundle;
1:5725f09: import org.osgi.framework.BundleException;
1:5725f09: import org.osgi.framework.Version;
1:590cf45: import org.osgi.framework.startlevel.BundleStartLevel;
1:225bcae: import org.osgi.framework.wiring.BundleRevision;
1:3c826b1: import org.osgi.service.coordinator.Coordination;
1:5725f09: 
1:5725f09: public class RegionContextBundleHelper {
1:7e004f1: 	public static final String SYMBOLICNAME_PREFIX = Constants.RegionContextBundleSymbolicNamePrefix;
1:5725f09: 	public static final Version VERSION = Version.parseVersion("1.0.0");
1:5725f09: 	
1:3c826b1: 	public static void installRegionContextBundle(final BasicSubsystem subsystem, Coordination coordination) throws Exception {
1:5725f09: 		String symbolicName = SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();
1:5725f09: 		String location = subsystem.getLocation() + '/' + subsystem.getSubsystemId();
1:5725f09: 		Bundle b = subsystem.getRegion().getBundle(symbolicName, VERSION);
1:777b216: 		if (b == null) {
1:777b216: 			b = subsystem.getRegion().installBundleAtLocation(location, createRegionContextBundle(symbolicName));
1:590cf45: 			// The start level of all managed bundles, including the region
1:590cf45: 			// context bundle, should be 1.
1:590cf45: 			b.adapt(BundleStartLevel.class).setStartLevel(1);
1:777b216: 		}
1:3c826b1: 		ResourceInstaller.newInstance(coordination, b.adapt(BundleRevision.class), subsystem).install();
1:f1ff8f8: 		// The region context bundle must be started persistently.
1:f1ff8f8: 		b.start();
1:3f524ae: 		subsystem.setRegionContextBundle(b);
1:f1ff8f8: 	}
1:f1ff8f8: 	
1:5bd3bf6: 	public static void uninstallRegionContextBundle(BasicSubsystem subsystem) {
1:f1ff8f8: 		String symbolicName = SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();
1:f1ff8f8: 		Bundle bundle = subsystem.getRegion().getBundle(symbolicName, VERSION);
1:f1ff8f8: 		if (bundle == null)
1:3c826b1: 			return;
1:225bcae: 		BundleRevision revision = bundle.adapt(BundleRevision.class);
1:f1ff8f8: 		try {
1:f1ff8f8: 			bundle.uninstall();
1:f1ff8f8: 		}
1:f1ff8f8: 		catch (BundleException e) {
1:f1ff8f8: 			// TODO Should we really eat this? At least log it?
1:f1ff8f8: 		}
1:225bcae: 		ResourceUninstaller.newInstance(revision, subsystem).uninstall();
1:3f524ae: 		subsystem.setRegionContextBundle(null);
5:5725f09: 	}
1:5725f09: 	
1:5725f09: 	private static Manifest createManifest(String symbolicName) {
2:5725f09: 		Manifest manifest = new Manifest();
2:5725f09: 		manifest.getMainAttributes().put(Attributes.Name.MANIFEST_VERSION, "1.0");
1:4792091: 		manifest.getMainAttributes().putValue(org.osgi.framework.Constants.BUNDLE_MANIFESTVERSION, "2");
1:7e004f1: 		manifest.getMainAttributes().putValue(Constants.BundleSymbolicName, symbolicName);
1:7e004f1: 		manifest.getMainAttributes().putValue(Constants.BundleVersion, VERSION.toString());
1:5725f09: 		return manifest;
1:5725f09: 	}
1:5725f09: 	
1:deca8ed: 	private static InputStream createRegionContextBundle(String symbolicName) throws IOException {
1:deca8ed: 		Manifest manifest = createManifest(symbolicName);
2:5725f09: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
2:5725f09: 		JarOutputStream jos = new JarOutputStream(baos, manifest);
2:5725f09: 		jos.close();
2:5725f09: 		return new ByteArrayInputStream(baos.toByteArray());
1:5725f09: 	}
1:5725f09: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:6ea98a2
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:3f524ae
/////////////////////////////////////////////////////////////////////////
1: 		subsystem.setRegionContextBundle(b);
/////////////////////////////////////////////////////////////////////////
1: 		subsystem.setRegionContextBundle(null);
commit:3c826b1
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.service.coordinator.Coordination;
1: 	public static void installRegionContextBundle(final BasicSubsystem subsystem, Coordination coordination) throws Exception {
/////////////////////////////////////////////////////////////////////////
1: 		ResourceInstaller.newInstance(coordination, b.adapt(BundleRevision.class), subsystem).install();
/////////////////////////////////////////////////////////////////////////
1: 			return;
commit:4792091
/////////////////////////////////////////////////////////////////////////
1: 		manifest.getMainAttributes().putValue(org.osgi.framework.Constants.BUNDLE_MANIFESTVERSION, "2");
commit:590cf45
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.startlevel.BundleStartLevel;
/////////////////////////////////////////////////////////////////////////
1: 			// The start level of all managed bundles, including the region
1: 			// context bundle, should be 1.
1: 			b.adapt(BundleStartLevel.class).setStartLevel(1);
commit:5bd3bf6
/////////////////////////////////////////////////////////////////////////
0: 	public static void installRegionContextBundle(BasicSubsystem subsystem) throws BundleException, IOException {
/////////////////////////////////////////////////////////////////////////
1: 	public static void uninstallRegionContextBundle(BasicSubsystem subsystem) {
commit:a14f2fd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:777b216
/////////////////////////////////////////////////////////////////////////
1: 		if (b == null) {
0: 			ThreadLocalSubsystem.set(subsystem);
1: 			b = subsystem.getRegion().installBundleAtLocation(location, createRegionContextBundle(symbolicName));
1: 		}
0: 		Utils.installResource(b.adapt(BundleRevision.class), subsystem);
commit:225bcae
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.wiring.BundleRevision;
/////////////////////////////////////////////////////////////////////////
0: 		subsystem.installResource(b.adapt(BundleRevision.class));
/////////////////////////////////////////////////////////////////////////
0: 		ThreadLocalSubsystem.set(subsystem);
1: 		BundleRevision revision = bundle.adapt(BundleRevision.class);
1: 		ResourceUninstaller.newInstance(revision, subsystem).uninstall();
commit:28c3eb7
/////////////////////////////////////////////////////////////////////////
0: 	public static void installRegionContextBundle(AriesSubsystem subsystem) throws BundleException, IOException {
0: 			return;
0: 		ThreadLocalSubsystem.set(subsystem);
0: 	public static void uninstallRegionContextBundle(AriesSubsystem subsystem) {
/////////////////////////////////////////////////////////////////////////
commit:7e004f1
/////////////////////////////////////////////////////////////////////////
1: 	public static final String SYMBOLICNAME_PREFIX = Constants.RegionContextBundleSymbolicNamePrefix;
/////////////////////////////////////////////////////////////////////////
1: 		manifest.getMainAttributes().putValue(Constants.BundleSymbolicName, symbolicName);
1: 		manifest.getMainAttributes().putValue(Constants.BundleVersion, VERSION.toString());
commit:deca8ed
/////////////////////////////////////////////////////////////////////////
0: 		b = subsystem.getRegion().installBundleAtLocation(location, createRegionContextBundle(symbolicName));
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 	private static InputStream createRegionContextBundle(String symbolicName) throws IOException {
1: 		Manifest manifest = createManifest(symbolicName);
commit:a677a53
/////////////////////////////////////////////////////////////////////////
0: import org.osgi.framework.wiring.BundleRevision;
0: 	public static BundleRevision installRegionContextBundle(AriesSubsystem subsystem) throws BundleException, IOException {
0: 			return b.adapt(BundleRevision.class);
/////////////////////////////////////////////////////////////////////////
0: 		return b.adapt(BundleRevision.class);
0: 	public static BundleRevision uninstallRegionContextBundle(AriesSubsystem subsystem) {
0: 			throw new IllegalStateException("Missing region context bundle: " + symbolicName);
0: 		return bundle.adapt(BundleRevision.class);
commit:f1ff8f8
/////////////////////////////////////////////////////////////////////////
1: 		// The region context bundle must be started persistently.
1: 		b.start();
1: 	}
1: 	
0: 	public static void uninstallRegionContextBundle(AriesSubsystem subsystem) {
1: 		String symbolicName = SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();
1: 		Bundle bundle = subsystem.getRegion().getBundle(symbolicName, VERSION);
1: 		if (bundle == null)
0: 			return;
1: 		try {
1: 			bundle.uninstall();
1: 		}
1: 		catch (BundleException e) {
1: 			// TODO Should we really eat this? At least log it?
1: 		}
commit:5725f09
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.core.internal;
1: 
1: import java.io.ByteArrayInputStream;
1: import java.io.ByteArrayOutputStream;
1: import java.io.IOException;
1: import java.io.InputStream;
1: import java.util.jar.Attributes;
1: import java.util.jar.JarOutputStream;
1: import java.util.jar.Manifest;
1: 
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleException;
0: import org.osgi.framework.Constants;
1: import org.osgi.framework.Version;
1: 
1: public class RegionContextBundleHelper {
0: 	public static final String SYMBOLICNAME_PREFIX = "org.osgi.service.subsystem.region.context.";
1: 	public static final Version VERSION = Version.parseVersion("1.0.0");
1: 	
0: 	public static void installRegionContextBundle(AriesSubsystem subsystem) throws BundleException, IOException {
1: 		String symbolicName = SYMBOLICNAME_PREFIX + subsystem.getSubsystemId();
1: 		String location = subsystem.getLocation() + '/' + subsystem.getSubsystemId();
1: 		Bundle b = subsystem.getRegion().getBundle(symbolicName, VERSION);
0: 		if (b != null)
0: 			return;
0: 		Bundle t = subsystem.getRegion().installBundle(location + "/temp", createTempBundle(symbolicName));
0: 		try {
0: 			t.start();
0: 			b = t.getBundleContext().installBundle(location, createRegionContextBundle(symbolicName));
1: 		}
0: 		finally {
0: 			try {
0: 				t.uninstall();
1: 			}
0: 			catch (BundleException e) {}
1: 		}
0: 		b.start(Bundle.START_TRANSIENT);
1: 	}
1: 	
0: 	private static InputStream createRegionContextBundle(String symbolicName) throws IOException {
0: 		Manifest manifest = createManifest(symbolicName);
1: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
1: 		JarOutputStream jos = new JarOutputStream(baos, manifest);
1: 		jos.close();
1: 		return new ByteArrayInputStream(baos.toByteArray());
1: 	}
1: 	
1: 	private static Manifest createManifest(String symbolicName) {
1: 		Manifest manifest = new Manifest();
1: 		manifest.getMainAttributes().put(Attributes.Name.MANIFEST_VERSION, "1.0");
0: 		manifest.getMainAttributes().putValue(Constants.BUNDLE_SYMBOLICNAME, symbolicName);
0: 		manifest.getMainAttributes().putValue(Constants.BUNDLE_VERSION, VERSION.toString());
1: 		return manifest;
1: 	}
1: 	
0: 	private static InputStream createTempBundle(String symbolicName) throws IOException {
1: 		Manifest manifest = new Manifest();
1: 		manifest.getMainAttributes().put(Attributes.Name.MANIFEST_VERSION, "1.0");
0: 		manifest.getMainAttributes().putValue(Constants.BUNDLE_SYMBOLICNAME, symbolicName + ".temp");
1: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
1: 		JarOutputStream jos = new JarOutputStream(baos, manifest);
1: 		jos.close();
1: 		return new ByteArrayInputStream(baos.toByteArray());
1: 	}
1: }
============================================================================