1:4fec049: /*
1:4fec049:  * Licensed to the Apache Software Foundation (ASF) under one
1:4fec049:  * or more contributor license agreements.  See the NOTICE file
1:4fec049:  * distributed with this work for additional information
1:4fec049:  * regarding copyright ownership.  The ASF licenses this file
1:4fec049:  * to you under the Apache License, Version 2.0 (the
1:4fec049:  * "License"); you may not use this file except in compliance
1:4fec049:  * with the License.  You may obtain a copy of the License at
1:4fec049:  *
1:4fec049:  *   http://www.apache.org/licenses/LICENSE-2.0
1:4fec049:  *
1:4fec049:  * Unless required by applicable law or agreed to in writing,
1:4fec049:  * software distributed under the License is distributed on an
1:4fec049:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:4fec049:  * KIND, either express or implied.  See the License for the
1:4fec049:  * specific language governing permissions and limitations
1:4fec049:  * under the License.
1:4fec049:  */
1:4fec049: package org.apache.aries.application.modelling.impl;
1:4fec049: 
1:4fec049: 
1:4fec049: import static org.apache.aries.application.utils.AppConstants.LOG_ENTRY;
1:4fec049: import static org.apache.aries.application.utils.AppConstants.LOG_EXIT;
1:4fec049: 
1:4fec049: import java.util.Collection;
1:4fec049: import java.util.Collections;
1:4fec049: import java.util.HashSet;
1:4fec049: import java.util.Set;
1:4fec049: 
1:4fec049: import org.apache.aries.application.modelling.ExportedService;
1:4fec049: import org.apache.aries.application.modelling.ImportedService;
1:4fec049: import org.apache.aries.application.modelling.ParsedServiceElements;
1:4fec049: import org.slf4j.Logger;
1:4fec049: import org.slf4j.LoggerFactory;
1:4fec049: 
1:4fec049: 
1:4fec049: /**
1:4fec049:  * A simple data structure containing two immutable Collections, 
1:4fec049:  * one each of ImportedServiceImpl and ExportedServiceImpl
1:4fec049:  */
1:4fec049: public final class ParsedServiceElementsImpl implements ParsedServiceElements
1:4fec049: {
1:4fec049:  
1:4fec049:   private final Logger logger = LoggerFactory.getLogger(ParsedServiceElementsImpl.class);
1:4fec049:   private final Set<ExportedService> _services;
1:4fec049:   private final Set<ImportedService> _references;
1:4fec049:   
1:4fec049:   /**
1:4fec049:    * Copy collections of Service and Reference metadata into a ParsedServiceElementsImpl
1:4fec049:    * @param services
1:4fec049:    * @param references
1:4fec049:    */
1:4fec049:   public ParsedServiceElementsImpl ( Collection<ExportedService> services, 
1:4fec049:       Collection<ImportedService> references) { 
1:4fec049:     logger.debug(LOG_ENTRY, "ParsedServiceElementsImpl", new Object[]{services, references});
1:4fec049:     _services = new HashSet<ExportedService>(services);
1:4fec049:     _references = new HashSet<ImportedService>(references);
1:4fec049:     logger.debug(LOG_ENTRY, "ParsedServiceElementsImpl");
1:4fec049:   }
1:4fec049: 
1:4fec049:   /**
1:4fec049:    * Get the ImportedServices
1:4fec049:    * @return imported services
1:4fec049:    */
1:4fec049:   public Collection<ImportedService> getReferences() {
1:4fec049:     logger.debug(LOG_ENTRY, "getReferences");
1:4fec049:     logger.debug(LOG_EXIT, "getReferences", _references);
1:4fec049:     return Collections.unmodifiableCollection(_references);
1:4fec049:   }
1:4fec049: 
1:4fec049:   /**
1:4fec049:    * Get the exported services
1:4fec049:    * @return exported services
1:4fec049:    */
1:4fec049:   public Collection<ExportedService> getServices() {
1:4fec049:     logger.debug(LOG_ENTRY, "getServices");
1:4fec049:     logger.debug(LOG_EXIT, "getServices", _services);
1:4fec049:     return Collections.unmodifiableCollection(_services);
1:4fec049:   }
1:4fec049: }
============================================================================
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:4fec049
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application.modelling.impl;
1: 
1: 
1: import static org.apache.aries.application.utils.AppConstants.LOG_ENTRY;
1: import static org.apache.aries.application.utils.AppConstants.LOG_EXIT;
1: 
1: import java.util.Collection;
1: import java.util.Collections;
1: import java.util.HashSet;
1: import java.util.Set;
1: 
1: import org.apache.aries.application.modelling.ExportedService;
1: import org.apache.aries.application.modelling.ImportedService;
1: import org.apache.aries.application.modelling.ParsedServiceElements;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: 
1: /**
1:  * A simple data structure containing two immutable Collections, 
1:  * one each of ImportedServiceImpl and ExportedServiceImpl
1:  */
1: public final class ParsedServiceElementsImpl implements ParsedServiceElements
1: {
1:  
1:   private final Logger logger = LoggerFactory.getLogger(ParsedServiceElementsImpl.class);
1:   private final Set<ExportedService> _services;
1:   private final Set<ImportedService> _references;
1:   
1:   /**
1:    * Copy collections of Service and Reference metadata into a ParsedServiceElementsImpl
1:    * @param services
1:    * @param references
1:    */
1:   public ParsedServiceElementsImpl ( Collection<ExportedService> services, 
1:       Collection<ImportedService> references) { 
1:     logger.debug(LOG_ENTRY, "ParsedServiceElementsImpl", new Object[]{services, references});
1:     _services = new HashSet<ExportedService>(services);
1:     _references = new HashSet<ImportedService>(references);
1:     logger.debug(LOG_ENTRY, "ParsedServiceElementsImpl");
1:   }
1: 
1:   /**
1:    * Get the ImportedServices
1:    * @return imported services
1:    */
1:   public Collection<ImportedService> getReferences() {
1:     logger.debug(LOG_ENTRY, "getReferences");
1:     logger.debug(LOG_EXIT, "getReferences", _references);
1:     return Collections.unmodifiableCollection(_references);
1:   }
1: 
1:   /**
1:    * Get the exported services
1:    * @return exported services
1:    */
1:   public Collection<ExportedService> getServices() {
1:     logger.debug(LOG_ENTRY, "getServices");
1:     logger.debug(LOG_EXIT, "getServices", _services);
1:     return Collections.unmodifiableCollection(_services);
1:   }
1: }
============================================================================