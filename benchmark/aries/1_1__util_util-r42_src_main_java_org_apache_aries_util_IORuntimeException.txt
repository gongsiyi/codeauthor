1:8ab18a7: /*
1:8ab18a7:  * Licensed to the Apache Software Foundation (ASF) under one
1:8ab18a7:  * or more contributor license agreements.  See the NOTICE file
1:8ab18a7:  * distributed with this work for additional information
1:8ab18a7:  * regarding copyright ownership.  The ASF licenses this file
1:8ab18a7:  * to you under the Apache License, Version 2.0 (the
1:8ab18a7:  * "License"); you may not use this file except in compliance
1:8ab18a7:  * with the License.  You may obtain a copy of the License at
1:8ab18a7:  *
1:8ab18a7:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8ab18a7:  *
1:8ab18a7:  * Unless required by applicable law or agreed to in writing,
1:8ab18a7:  * software distributed under the License is distributed on an
1:8ab18a7:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8ab18a7:  * KIND, either express or implied.  See the License for the
1:8ab18a7:  * specific language governing permissions and limitations
1:8ab18a7:  * under the License.
1:8ab18a7:  */
1:8ab18a7: package org.apache.aries.util;
1:8ab18a7: 
1:8ab18a7: import java.io.IOException;
1:8ab18a7: 
1:8ab18a7: /**
1:8ab18a7:  * This unchecked exception wraps an IOException.
1:8ab18a7:  */
1:8ab18a7: public class IORuntimeException extends RuntimeException {
1:8ab18a7:     private static final long serialVersionUID = 1L;
1:8ab18a7: 
1:8ab18a7:     /**
1:8ab18a7:      * @param message A detail message.
1:8ab18a7:      * @param cause The original IOException.
1:8ab18a7:      */
1:8ab18a7:     public IORuntimeException(String message, IOException cause) {
1:8ab18a7:         super(message, cause);
1:8ab18a7:     }
1:8ab18a7: 
1:8ab18a7:     /**
1:8ab18a7:      * @param cause The original IOException.
1:8ab18a7:      */
1:8ab18a7:     public IORuntimeException(IOException cause) {
1:8ab18a7:         super(cause);
1:8ab18a7:     }
1:8ab18a7: 
1:8ab18a7:     /**
1:8ab18a7:      * @see java.lang.Throwable#getCause()
1:8ab18a7:      */
1:8ab18a7:     @Override
1:8ab18a7:     public IOException getCause() {
1:8ab18a7:         return (IOException) super.getCause();
1:8ab18a7:     }
1:8ab18a7: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:8ab18a7
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.util;
1: 
1: import java.io.IOException;
1: 
1: /**
1:  * This unchecked exception wraps an IOException.
1:  */
1: public class IORuntimeException extends RuntimeException {
1:     private static final long serialVersionUID = 1L;
1: 
1:     /**
1:      * @param message A detail message.
1:      * @param cause The original IOException.
1:      */
1:     public IORuntimeException(String message, IOException cause) {
1:         super(message, cause);
1:     }
1: 
1:     /**
1:      * @param cause The original IOException.
1:      */
1:     public IORuntimeException(IOException cause) {
1:         super(cause);
1:     }
1: 
1:     /**
1:      * @see java.lang.Throwable#getCause()
1:      */
1:     @Override
1:     public IOException getCause() {
1:         return (IOException) super.getCause();
1:     }
1: }
============================================================================