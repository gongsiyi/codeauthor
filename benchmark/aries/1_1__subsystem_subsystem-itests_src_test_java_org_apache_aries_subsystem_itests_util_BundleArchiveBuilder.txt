1:a990e32: package org.apache.aries.subsystem.itests.util;
1:a990e32: 
1:a990e32: import java.io.ByteArrayOutputStream;
1:a990e32: import java.io.IOException;
1:a990e32: import java.io.InputStream;
1:a990e32: 
1:afe81b7: import org.ops4j.pax.tinybundles.core.InnerClassStrategy;
1:a990e32: import org.ops4j.pax.tinybundles.core.TinyBundle;
1:a990e32: import org.ops4j.pax.tinybundles.core.TinyBundles;
1:a990e32: 
1:a990e32: import aQute.bnd.osgi.Constants;
1:a990e32: 
1:a990e32: public class BundleArchiveBuilder {
1:a990e32: 	public static final String JAR_EXTENSION = ".jar";
1:a990e32: 	
1:a990e32: 	private final TinyBundle bundle;
1:a990e32: 	
1:a990e32: 	public BundleArchiveBuilder() {
1:a990e32: 		bundle = TinyBundles.bundle();
1:a990e32: 	}
1:a990e32: 	
1:afe81b7: 	public BundleArchiveBuilder activator(Class<?> clazz) {
1:afe81b7: 		bundle.set(Constants.BUNDLE_ACTIVATOR, clazz.getName());
1:afe81b7: 		bundle.add(clazz, InnerClassStrategy.NONE);
1:afe81b7: 		return this;
1:afe81b7: 	}
1:afe81b7: 	
1:a990e32: 	public InputStream build() {
1:a990e32: 		return bundle.build();
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public byte[] buildAsBytes() throws IOException {
1:a990e32: 		InputStream is = build();
1:a990e32: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
1:a990e32: 		byte[] bytes = new byte[2048];
1:a990e32: 		int count;
1:a990e32: 		while ((count = is.read(bytes)) != -1) {
1:a990e32: 			baos.write(bytes, 0, count);
1:a990e32: 		}
1:a990e32: 		is.close();
1:a990e32: 		baos.close();
1:a990e32: 		return baos.toByteArray();
1:a990e32: 	}
1:a990e32: 	
1:afe81b7: 	public BundleArchiveBuilder clazz(Class<?> clazz) {
1:afe81b7: 		bundle.add(clazz, InnerClassStrategy.NONE);
1:afe81b7: 		return this;
1:afe81b7: 	}
1:afe81b7: 	
1:a990e32: 	public BundleArchiveBuilder exportPackage(String value) {
1:a990e32: 		return header(Constants.EXPORT_PACKAGE, value);
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public BundleArchiveBuilder header(String name, String value) {
1:a990e32: 		bundle.set(name, value);
1:a990e32: 		return this;
1:a990e32: 	}
1:a990e32: 	
1:a990e32: 	public BundleArchiveBuilder importPackage(String value) {
1:a990e32: 		return header(Constants.IMPORT_PACKAGE, value);
1:a990e32: 	}
1:a990e32: 	
1:afe81b7: 	public BundleArchiveBuilder provideCapability(String value) {
1:afe81b7: 		return header(Constants.PROVIDE_CAPABILITY, value);
1:afe81b7: 	}
1:afe81b7: 	
1:afe81b7: 	public BundleArchiveBuilder requireBundle(String value) {
1:afe81b7: 		return header(Constants.REQUIRE_BUNDLE, value);
1:afe81b7: 	}
1:afe81b7: 	
1:afe81b7: 	public BundleArchiveBuilder requireCapability(String value) {
1:afe81b7: 		return header(Constants.REQUIRE_CAPABILITY, value);
1:afe81b7: 	}
1:afe81b7: 	
1:a990e32: 	public BundleArchiveBuilder symbolicName(String value) {
1:a990e32: 		return header(Constants.BUNDLE_SYMBOLICNAME, value);
1:a990e32: 	}
1:a990e32: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:afe81b7
/////////////////////////////////////////////////////////////////////////
1: import org.ops4j.pax.tinybundles.core.InnerClassStrategy;
/////////////////////////////////////////////////////////////////////////
1: 	public BundleArchiveBuilder activator(Class<?> clazz) {
1: 		bundle.set(Constants.BUNDLE_ACTIVATOR, clazz.getName());
1: 		bundle.add(clazz, InnerClassStrategy.NONE);
1: 		return this;
1: 	}
1: 	
/////////////////////////////////////////////////////////////////////////
1: 	public BundleArchiveBuilder clazz(Class<?> clazz) {
1: 		bundle.add(clazz, InnerClassStrategy.NONE);
1: 		return this;
1: 	}
1: 	
/////////////////////////////////////////////////////////////////////////
1: 	public BundleArchiveBuilder provideCapability(String value) {
1: 		return header(Constants.PROVIDE_CAPABILITY, value);
1: 	}
1: 	
1: 	public BundleArchiveBuilder requireBundle(String value) {
1: 		return header(Constants.REQUIRE_BUNDLE, value);
1: 	}
1: 	
1: 	public BundleArchiveBuilder requireCapability(String value) {
1: 		return header(Constants.REQUIRE_CAPABILITY, value);
1: 	}
1: 	
commit:a990e32
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.itests.util;
1: 
1: import java.io.ByteArrayOutputStream;
1: import java.io.IOException;
1: import java.io.InputStream;
1: 
1: import org.ops4j.pax.tinybundles.core.TinyBundle;
1: import org.ops4j.pax.tinybundles.core.TinyBundles;
1: 
1: import aQute.bnd.osgi.Constants;
1: 
1: public class BundleArchiveBuilder {
1: 	public static final String JAR_EXTENSION = ".jar";
1: 	
1: 	private final TinyBundle bundle;
1: 	
1: 	public BundleArchiveBuilder() {
1: 		bundle = TinyBundles.bundle();
1: 	}
1: 	
1: 	public InputStream build() {
1: 		return bundle.build();
1: 	}
1: 	
1: 	public byte[] buildAsBytes() throws IOException {
1: 		InputStream is = build();
1: 		ByteArrayOutputStream baos = new ByteArrayOutputStream();
1: 		byte[] bytes = new byte[2048];
1: 		int count;
1: 		while ((count = is.read(bytes)) != -1) {
1: 			baos.write(bytes, 0, count);
1: 		}
1: 		is.close();
1: 		baos.close();
1: 		return baos.toByteArray();
1: 	}
1: 	
1: 	public BundleArchiveBuilder exportPackage(String value) {
1: 		return header(Constants.EXPORT_PACKAGE, value);
1: 	}
1: 	
1: 	public BundleArchiveBuilder header(String name, String value) {
1: 		bundle.set(name, value);
1: 		return this;
1: 	}
1: 	
1: 	public BundleArchiveBuilder importPackage(String value) {
1: 		return header(Constants.IMPORT_PACKAGE, value);
1: 	}
1: 	
1: 	public BundleArchiveBuilder symbolicName(String value) {
1: 		return header(Constants.BUNDLE_SYMBOLICNAME, value);
1: 	}
1: }
============================================================================