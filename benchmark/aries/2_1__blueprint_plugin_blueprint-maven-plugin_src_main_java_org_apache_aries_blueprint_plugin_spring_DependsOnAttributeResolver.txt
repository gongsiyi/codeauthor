1:c201f83: /**
1:c201f83:  * Licensed to the Apache Software Foundation (ASF) under one
1:c201f83:  * or more contributor license agreements.  See the NOTICE file
1:c201f83:  * distributed with this work for additional information
1:c201f83:  * regarding copyright ownership.  The ASF licenses this file
1:c201f83:  * to you under the Apache License, Version 2.0 (the
1:c201f83:  * "License"); you may not use this file except in compliance
1:c201f83:  * with the License.  You may obtain a copy of the License at
1:a04c623:  * <p>
1:a04c623:  * http://www.apache.org/licenses/LICENSE-2.0
1:a04c623:  * <p>
1:c201f83:  * Unless required by applicable law or agreed to in writing,
1:c201f83:  * software distributed under the License is distributed on an
1:c201f83:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:c201f83:  * KIND, either express or implied.  See the License for the
1:c201f83:  * specific language governing permissions and limitations
1:c201f83:  * under the License.
1:c201f83:  */
1:c201f83: package org.apache.aries.blueprint.plugin.spring;
1:c201f83: 
1:a04c623: import org.apache.aries.blueprint.plugin.spi.BeanAnnotationHandler;
1:a04c623: import org.apache.aries.blueprint.plugin.spi.BeanEnricher;
1:a04c623: import org.apache.aries.blueprint.plugin.spi.ContextEnricher;
1:c201f83: import org.apache.commons.lang.StringUtils;
1:c201f83: import org.springframework.context.annotation.DependsOn;
1:c201f83: 
1:c201f83: import java.lang.reflect.AnnotatedElement;
1:c201f83: 
1:a04c623: public class DependsOnAttributeResolver implements BeanAnnotationHandler<DependsOn> {
1:c201f83:     @Override
1:c201f83:     public Class<DependsOn> getAnnotation() {
1:c201f83:         return DependsOn.class;
2:c201f83:     }
1:c201f83: 
1:c201f83:     @Override
1:a04c623:     public void handleBeanAnnotation(AnnotatedElement annotatedElement, String id, ContextEnricher contextEnricher, BeanEnricher beanEnricher) {
1:c201f83:         DependsOn annotation = annotatedElement.getAnnotation(DependsOn.class);
1:c201f83:         String[] value = annotation.value();
1:a04c623:         if (value.length == 0) {
1:a04c623:             return;
1:a04c623:         }
1:c201f83:         String dependsOnValue = StringUtils.join(value, " ");
1:a04c623:         beanEnricher.addAttribute("depends-on", dependsOnValue);
1:c201f83:     }
1:a04c623: 
1:c201f83: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:a04c623
/////////////////////////////////////////////////////////////////////////
1:  * <p>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p>
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.plugin.spi.BeanAnnotationHandler;
1: import org.apache.aries.blueprint.plugin.spi.BeanEnricher;
1: import org.apache.aries.blueprint.plugin.spi.ContextEnricher;
1: public class DependsOnAttributeResolver implements BeanAnnotationHandler<DependsOn> {
1:     public void handleBeanAnnotation(AnnotatedElement annotatedElement, String id, ContextEnricher contextEnricher, BeanEnricher beanEnricher) {
1:         if (value.length == 0) {
1:             return;
1:         }
1:         beanEnricher.addAttribute("depends-on", dependsOnValue);
1: 
commit:c201f83
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.spring;
1: 
0: import org.apache.aries.blueprint.plugin.spi.BeanAttributesResolver;
1: import org.apache.commons.lang.StringUtils;
1: import org.springframework.context.annotation.DependsOn;
1: 
1: import java.lang.reflect.AnnotatedElement;
0: import java.util.HashMap;
0: import java.util.Map;
1: 
0: public class DependsOnAttributeResolver implements BeanAttributesResolver<DependsOn> {
1:     @Override
1:     public Class<DependsOn> getAnnotation() {
1:         return DependsOn.class;
1:     }
1: 
1:     @Override
0:     public Map<String, String> resolveAttributes(Class<?> clazz, AnnotatedElement annotatedElement) {
1:         DependsOn annotation = annotatedElement.getAnnotation(DependsOn.class);
0:         if (annotation == null || annotation.value().length == 0) {
0:             return new HashMap<>();
1:         }
1:         String[] value = annotation.value();
1:         String dependsOnValue = StringUtils.join(value, " ");
0:         Map<String, String> map = new HashMap<>();
0:         map.put("depends-on", dependsOnValue);
0:         return map;
1:     }
1: }
============================================================================