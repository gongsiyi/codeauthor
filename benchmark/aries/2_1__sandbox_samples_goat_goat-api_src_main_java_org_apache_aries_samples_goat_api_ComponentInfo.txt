1:f2b0038: /**
1:f2b0038:  * Licensed to the Apache Software Foundation (ASF) under one
1:f2b0038:  * or more contributor license agreements.  See the NOTICE file
1:f2b0038:  * distributed with this work for additional information
1:f2b0038:  * regarding copyright ownership.  The ASF licenses this file
1:f2b0038:  * to you under the Apache License, Version 2.0 (the
1:f2b0038:  * "License"); you may not use this file except in compliance
1:f2b0038:  * with the License.  You may obtain a copy of the License at
1:f2b0038:  *
1:f2b0038:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f2b0038:  *
1:f2b0038:  * Unless required by applicable law or agreed to in writing,
1:f2b0038:  * software distributed under the License is distributed on an
1:f2b0038:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f2b0038:  * KIND, either express or implied.  See the License for the
1:f2b0038:  * specific language governing permissions and limitations
1:f2b0038:  * under the License.
1:f2b0038:  */
1:f2b0038: package org.apache.aries.samples.goat.api;
1:f2b0038: 
1:f2b0038: import java.util.List;
1:f2b0038: import java.util.Map;
1:f2b0038: 
1:f2b0038: public interface ComponentInfo {
1:f2b0038:    String getId();
1:f2b0038:    /**
1:f2b0038:     * always needed, id's must be unique globally, or within their containing component info.
1:f2b0038:     * (impl notes.. (for bundles)
1:f2b0038:     * Id's will probably NOT be bundle id's... we need the id to be fixed between framework restarts,
1:f2b0038:     * to enable things like storing coords for onscreen renderings of components
1:f2b0038:     * Id's will probably end up being path based, /component.id/component.id etc .. for sanities sake.
1:f2b0038:     * Component properties are information that forms part of a component, keys will vary depending on 
1:f2b0038:     * what the component represents. The GUI will handle rendering based on key names.
1:f2b0038:     */
1:f2b0038:    Map<String,String> getComponentProperties();
1:f2b0038: 
1:f2b0038:    
1:f2b0038:    /**
1:f2b0038: 	* children are only supported in concept currently.. no gui work done yet for them..   
1:f2b0038:     * List of any contained components for this component.    
1:f2b0038:     */
1:f2b0038:    List<ComponentInfo> getChildren(); 
1:f2b0038: }
============================================================================
author:Jeremy Hughes
-------------------------------------------------------------------------------
commit:a220afc
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:50bd22c
commit:f2b0038
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.goat.api;
1: 
1: import java.util.List;
1: import java.util.Map;
1: 
1: public interface ComponentInfo {
1:    String getId();
1:    /**
1:     * always needed, id's must be unique globally, or within their containing component info.
1:     * (impl notes.. (for bundles)
1:     * Id's will probably NOT be bundle id's... we need the id to be fixed between framework restarts,
1:     * to enable things like storing coords for onscreen renderings of components
1:     * Id's will probably end up being path based, /component.id/component.id etc .. for sanities sake.
1:     * Component properties are information that forms part of a component, keys will vary depending on 
1:     * what the component represents. The GUI will handle rendering based on key names.
1:     */
1:    Map<String,String> getComponentProperties();
1: 
1:    
1:    /**
1: 	* children are only supported in concept currently.. no gui work done yet for them..   
1:     * List of any contained components for this component.    
1:     */
1:    List<ComponentInfo> getChildren(); 
1: }
============================================================================