1:7fa86e8: /*
1:7fa86e8:  * Copyright (c) OSGi Alliance (2015). All Rights Reserved.
1:7fa86e8:  * 
1:7fa86e8:  * Licensed under the Apache License, Version 2.0 (the "License");
1:7fa86e8:  * you may not use this file except in compliance with the License.
1:7fa86e8:  * You may obtain a copy of the License at
1:7fa86e8:  *
1:7fa86e8:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7fa86e8:  *
1:7fa86e8:  * Unless required by applicable law or agreed to in writing, software
1:7fa86e8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7fa86e8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7fa86e8:  * See the License for the specific language governing permissions and
1:7fa86e8:  * limitations under the License.
1:7fa86e8:  */
1:7fa86e8: 
1:7fa86e8: package org.osgi.util.pushstream;
1:7fa86e8: 
1:7fa86e8: import java.util.concurrent.BlockingQueue;
1:7fa86e8: import org.osgi.annotation.versioning.ConsumerType;
1:7fa86e8: 
1:7fa86e8: /**
1:7fa86e8:  * A {@link PushbackPolicy} is used to calculate how much back pressure to apply
1:7fa86e8:  * based on the current buffer. The {@link PushbackPolicy} will be called after
1:7fa86e8:  * an event has been queued, and the returned value will be used as back
1:7fa86e8:  * pressure.
1:7fa86e8:  * 
1:7fa86e8:  * @see PushbackPolicyOption
1:7fa86e8:  * 
1:7fa86e8:  *
1:7fa86e8:  * @param <T> The type of the data
1:7fa86e8:  * @param <U> The type of the queue
1:7fa86e8:  */
1:7fa86e8: @ConsumerType
1:7fa86e8: @FunctionalInterface
1:7fa86e8: public interface PushbackPolicy<T, U extends BlockingQueue<PushEvent<? extends T>>> {
1:7fa86e8: 	
1:7fa86e8: 	/**
1:7fa86e8: 	 * Given the current state of the queue, determine the level of back
1:7fa86e8: 	 * pressure that should be applied
1:7fa86e8: 	 * 
1:7fa86e8: 	 * @param queue
1:7fa86e8: 	 * @return a back pressure value in nanoseconds
1:7fa86e8: 	 * @throws Exception
1:7fa86e8: 	 */
1:7fa86e8: 	public long pushback(U queue) throws Exception;
1:7fa86e8: 	
1:7fa86e8: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:7fa86e8
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Copyright (c) OSGi Alliance (2015). All Rights Reserved.
1:  * 
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.osgi.util.pushstream;
1: 
1: import java.util.concurrent.BlockingQueue;
1: import org.osgi.annotation.versioning.ConsumerType;
1: 
1: /**
1:  * A {@link PushbackPolicy} is used to calculate how much back pressure to apply
1:  * based on the current buffer. The {@link PushbackPolicy} will be called after
1:  * an event has been queued, and the returned value will be used as back
1:  * pressure.
1:  * 
1:  * @see PushbackPolicyOption
1:  * 
1:  *
1:  * @param <T> The type of the data
1:  * @param <U> The type of the queue
1:  */
1: @ConsumerType
1: @FunctionalInterface
1: public interface PushbackPolicy<T, U extends BlockingQueue<PushEvent<? extends T>>> {
1: 	
1: 	/**
1: 	 * Given the current state of the queue, determine the level of back
1: 	 * pressure that should be applied
1: 	 * 
1: 	 * @param queue
1: 	 * @return a back pressure value in nanoseconds
1: 	 * @throws Exception
1: 	 */
1: 	public long pushback(U queue) throws Exception;
1: 	
1: }
============================================================================