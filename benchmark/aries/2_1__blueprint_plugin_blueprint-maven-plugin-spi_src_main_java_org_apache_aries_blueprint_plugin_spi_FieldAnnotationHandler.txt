1:64f241a: /**
1:64f241a:  * Licensed to the Apache Software Foundation (ASF) under one
1:64f241a:  * or more contributor license agreements.  See the NOTICE file
1:64f241a:  * distributed with this work for additional information
1:64f241a:  * regarding copyright ownership.  The ASF licenses this file
1:64f241a:  * to you under the Apache License, Version 2.0 (the
1:64f241a:  * "License"); you may not use this file except in compliance
1:64f241a:  * with the License.  You may obtain a copy of the License at
1:64f241a:  * <p>
1:64f241a:  * http://www.apache.org/licenses/LICENSE-2.0
1:64f241a:  * <p>
1:64f241a:  * Unless required by applicable law or agreed to in writing,
1:64f241a:  * software distributed under the License is distributed on an
1:64f241a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:64f241a:  * KIND, either express or implied.  See the License for the
1:64f241a:  * specific language governing permissions and limitations
1:64f241a:  * under the License.
1:64f241a:  */
1:64f241a: package org.apache.aries.blueprint.plugin.spi;
2:64f241a: 
1:64f241a: import java.lang.annotation.Annotation;
1:64f241a: import java.lang.reflect.Field;
1:64f241a: import java.util.List;
1:64f241a: 
1:fc7ae19: /**
1:fc7ae19:  * Annotation A on field could write custom XML in blueprint or add bean to blueprint context
1:fc7ae19:  */
1:fc7ae19: public interface FieldAnnotationHandler<A extends Annotation> extends AnnotationHandler<A> {
1:fc7ae19:     /**
1:fc7ae19:      * Handle annotations A on methods
1:fc7ae19:      * @param clazz class which contains annotated fields\
1:fc7ae19:      * @param fields fields annotated with annotation A
1:fc7ae19:      * @param contextEnricher context enricher
1:fc7ae19:      * @param beanEnricher bean enricher
1:fc7ae19:      */
1:fc7ae19:     void handleFieldAnnotation(Class<?> clazz, List<Field> fields, ContextEnricher contextEnricher, BeanEnricher beanEnricher);
1:64f241a: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:fc7ae19
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Annotation A on field could write custom XML in blueprint or add bean to blueprint context
1:  */
1: public interface FieldAnnotationHandler<A extends Annotation> extends AnnotationHandler<A> {
1:     /**
1:      * Handle annotations A on methods
1:      * @param clazz class which contains annotated fields\
1:      * @param fields fields annotated with annotation A
1:      * @param contextEnricher context enricher
1:      * @param beanEnricher bean enricher
1:      */
1:     void handleFieldAnnotation(Class<?> clazz, List<Field> fields, ContextEnricher contextEnricher, BeanEnricher beanEnricher);
commit:b0360cc
commit:64f241a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * <p>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p>
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.spi;
1: 
1: import java.lang.annotation.Annotation;
1: import java.lang.reflect.Field;
1: import java.util.List;
1: 
0: public interface FieldAnnotationHandler<A extends Annotation> {
0:     Class<A> getAnnotation();
1: 
0:     void handleMethodAnnotation(Class<?> clazz, List<Field> fields, ContextEnricher contextEnricher, BeanEnricher beanEnricher);
1: }
============================================================================