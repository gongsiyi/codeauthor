1:1129914: /*
1:1129914:  * Licensed under the Apache License, Version 2.0 (the "License");
1:1129914:  * you may not use this file except in compliance with the License.
1:1129914:  * You may obtain a copy of the License at
1:1129914:  *
1:1129914:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1129914:  *
1:1129914:  * Unless required by applicable law or agreed to in writing, software
1:1129914:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1129914:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1129914:  * See the License for the specific language governing permissions and
1:1129914:  * limitations under the License.
1:1129914:  */
1:1129914: package org.apache.aries.subsystem.core.archive;
1:1129914: 
1:f1b1384: import org.osgi.framework.namespace.IdentityNamespace;
1:f1b1384: 
1:1129914: public class TypeAttribute extends AbstractAttribute {
1:1129914: 	public static final TypeAttribute DEFAULT = new TypeAttribute();
1:1129914: 	// TODO Add to constants.
1:f1b1384: 	public static final String DEFAULT_VALUE = IdentityNamespace.TYPE_BUNDLE;
1:1129914: 	// TODO Add to constants.
1:1129914: 	public static final String NAME = "type";
1:1129914: 	
1:226c63f: 	public static TypeAttribute newInstance(String value) {
1:226c63f: 		if (value == null || value.length() == 0)
1:226c63f: 			return DEFAULT;
1:226c63f: 		return new TypeAttribute(value);
1:226c63f: 	}
1:226c63f: 	
1:1129914: 	public TypeAttribute() {
1:1129914: 		this(DEFAULT_VALUE);
1:1129914: 	}
1:1129914: 	
1:1129914: 	public TypeAttribute(String value) {
1:1129914: 		super(NAME, value);
1:1129914: 	}
1:1129914: 
1:1129914: 	public String getType() {
1:26123d8: 		return (String)getValue();
1:1129914: 	}
1:1129914: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:f1b1384
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.namespace.IdentityNamespace;
1: 
1: 	public static final String DEFAULT_VALUE = IdentityNamespace.TYPE_BUNDLE;
commit:26123d8
/////////////////////////////////////////////////////////////////////////
1: 		return (String)getValue();
commit:226c63f
/////////////////////////////////////////////////////////////////////////
1: 	public static TypeAttribute newInstance(String value) {
1: 		if (value == null || value.length() == 0)
1: 			return DEFAULT;
1: 		return new TypeAttribute(value);
1: 	}
1: 	
commit:1129914
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.core.archive;
1: 
1: public class TypeAttribute extends AbstractAttribute {
1: 	public static final TypeAttribute DEFAULT = new TypeAttribute();
1: 	// TODO Add to constants.
0: 	public static final String DEFAULT_VALUE = "osgi.bundle";
1: 	// TODO Add to constants.
1: 	public static final String NAME = "type";
1: 	
1: 	public TypeAttribute() {
1: 		this(DEFAULT_VALUE);
1: 	}
1: 	
1: 	public TypeAttribute(String value) {
1: 		super(NAME, value);
1: 	}
1: 
1: 	public String getType() {
0: 		return getValue();
1: 	}
1: }
============================================================================