1:2d488d5: /**
1:2d488d5:  * Licensed to the Apache Software Foundation (ASF) under one
1:2d488d5:  * or more contributor license agreements.  See the NOTICE file
1:2d488d5:  * distributed with this work for additional information
1:2d488d5:  * regarding copyright ownership.  The ASF licenses this file
1:2d488d5:  * to you under the Apache License, Version 2.0 (the
1:2d488d5:  * "License"); you may not use this file except in compliance
1:2d488d5:  * with the License.  You may obtain a copy of the License at
1:2d488d5:  *
1:2d488d5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:2d488d5:  *
1:2d488d5:  * Unless required by applicable law or agreed to in writing,
1:2d488d5:  * software distributed under the License is distributed on an
1:2d488d5:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:2d488d5:  * KIND, either express or implied.  See the License for the
1:2d488d5:  * specific language governing permissions and limitations
1:2d488d5:  * under the License.
1:2d488d5:  */
1:79d7cbe: package org.apache.aries.blueprint.plugin.config;
1:2d488d5: 
1:2d488d5: import javax.xml.stream.XMLStreamException;
1:2d488d5: import javax.xml.stream.XMLStreamWriter;
1:2d488d5: 
1:808409a: import org.apache.aries.blueprint.annotation.config.Config;
1:808409a: import org.apache.aries.blueprint.annotation.config.DefaultProperty;
1:2d488d5: import org.apache.aries.blueprint.plugin.spi.XmlWriter;
1:2d488d5: 
1:2d488d5: public class ConfigWriter implements XmlWriter {
1:2d488d5:     
1:2d488d5:     static final String CONFIG_NS = "http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0";
1:2d488d5:     private Config config;
1:2d488d5: 
1:2d488d5:     public ConfigWriter(Config config) {
1:2d488d5:         this.config = config;
1:2d488d5:     }
1:2d488d5: 
1:2d488d5:     @Override
1:2d488d5:     public void write(XMLStreamWriter writer) throws XMLStreamException {
1:2d488d5:         writer.writeStartElement("property-placeholder");
1:2d488d5:         writer.writeDefaultNamespace(CONFIG_NS);
1:2d488d5:         writer.writeAttribute("persistent-id", config.pid());
1:2e5722d:         if (!"${".equals(config.placeholderPrefix())) {
1:2e5722d:             writer.writeAttribute("placeholder-prefix", config.updatePolicy());
1:2e5722d:         }
1:2e5722d:         if (!"}".equals(config.placeholderSuffix())) {
1:2e5722d:             writer.writeAttribute("placeholder-suffix", config.updatePolicy());
1:2e5722d:         }
1:2d488d5:         writer.writeAttribute("update-strategy", config.updatePolicy());
1:2d488d5:         writer.writeCharacters("\n");
1:2e5722d:         
1:f1c34ac:         DefaultProperty[] defaults = config.defaults();
1:2e5722d:         if (defaults.length > 0) {
1:2e5722d:             writer.writeStartElement("default-properties");
1:2e5722d:             writer.writeCharacters("\n");
1:f1c34ac:             for (DefaultProperty defaultProp : defaults) {
1:2e5722d:                 writer.writeEmptyElement("property");
1:2e5722d:                 writer.writeAttribute("name", defaultProp.key());
1:2e5722d:                 writer.writeAttribute("value", defaultProp.value());
1:2e5722d:                 writer.writeCharacters("\n");
1:2e5722d:             }
1:2e5722d:             writer.writeEndElement();
1:2e5722d:             writer.writeCharacters("\n");
1:2e5722d:         }
1:2d488d5:         writer.writeEndElement();
1:2d488d5:     }
1:2d488d5: 
1:2d488d5: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.annotation.config.Config;
1: import org.apache.aries.blueprint.annotation.config.DefaultProperty;
commit:79d7cbe
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.plugin.config;
commit:f1c34ac
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.blueprint.api.config.DefaultProperty;
/////////////////////////////////////////////////////////////////////////
1:         DefaultProperty[] defaults = config.defaults();
1:             for (DefaultProperty defaultProp : defaults) {
commit:2e5722d
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.blueprint.api.config.Property;
/////////////////////////////////////////////////////////////////////////
1:         if (!"${".equals(config.placeholderPrefix())) {
1:             writer.writeAttribute("placeholder-prefix", config.updatePolicy());
1:         }
1:         if (!"}".equals(config.placeholderSuffix())) {
1:             writer.writeAttribute("placeholder-suffix", config.updatePolicy());
1:         }
1:         
0:         Property[] defaults = config.defaults();
1:         if (defaults.length > 0) {
1:             writer.writeStartElement("default-properties");
1:             writer.writeCharacters("\n");
0:             for (Property defaultProp : defaults) {
1:                 writer.writeEmptyElement("property");
1:                 writer.writeAttribute("name", defaultProp.key());
1:                 writer.writeAttribute("value", defaultProp.value());
1:                 writer.writeCharacters("\n");
1:             }
1:             writer.writeEndElement();
1:             writer.writeCharacters("\n");
1:         }
commit:2d488d5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.blueprint.plugin.javax;
1: 
1: import javax.xml.stream.XMLStreamException;
1: import javax.xml.stream.XMLStreamWriter;
1: 
0: import org.apache.aries.blueprint.api.config.Config;
1: import org.apache.aries.blueprint.plugin.spi.XmlWriter;
1: 
1: public class ConfigWriter implements XmlWriter {
1:     
1:     static final String CONFIG_NS = "http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0";
1:     private Config config;
1: 
1:     public ConfigWriter(Config config) {
1:         this.config = config;
1:     }
1: 
1:     @Override
1:     public void write(XMLStreamWriter writer) throws XMLStreamException {
1:         writer.writeStartElement("property-placeholder");
1:         writer.writeDefaultNamespace(CONFIG_NS);
1:         writer.writeAttribute("persistent-id", config.pid());
1:         writer.writeAttribute("update-strategy", config.updatePolicy());
1:         writer.writeCharacters("\n");
1:         writer.writeEndElement();
1:     }
1: 
1: }
============================================================================