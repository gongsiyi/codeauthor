1:58f55bd: /*
1:58f55bd:  * Licensed to the Apache Software Foundation (ASF) under one
1:58f55bd:  * or more contributor license agreements.  See the NOTICE file
1:58f55bd:  * distributed with this work for additional information
1:58f55bd:  * regarding copyright ownership.  The ASF licenses this file
1:58f55bd:  * to you under the Apache License, Version 2.0 (the
1:58f55bd:  * "License"); you may not use this file except in compliance
1:58f55bd:  * with the License.  You may obtain a copy of the License at
1:58f55bd:  *
1:58f55bd:  *   http://www.apache.org/licenses/LICENSE-2.0
1:58f55bd:  *
1:58f55bd:  * Unless required by applicable law or agreed to in writing,
1:58f55bd:  * software distributed under the License is distributed on an
1:58f55bd:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:58f55bd:  * KIND, either express or implied.  See the License for the
1:58f55bd:  * specific language governing permissions and limitations
1:58f55bd:  * under the License.
1:58f55bd:  */
1:58f55bd: 
1:a5079e5: package org.apache.aries.application.modelling;
1:a5079e5: 
1:a5079e5: import java.io.InputStream;
1:a5079e5: import java.net.URL;
1:a5079e5: import java.util.List;
1:a5079e5: 
1:a5079e5: /** 
1:a5079e5:  * This interface is implemented by the service which proxies the
1:a5079e5:  * Apache Aries blueprint parser. ParserProxy services offer higher
1:a5079e5:  * level methods built on top of the Blueprint parser. 
1:a5079e5:  *
1:a5079e5:  */
1:a5079e5: public interface ParserProxy {
1:a5079e5: 
1:a5079e5:   /**
1:a5079e5:    * Parse blueprint xml files and extract the parsed ServiceMetadata objects
1:a5079e5:    * @param blueprintsToParse URLs to blueprint xml files
1:a5079e5:    * @return List of (wrapped) ServiceMetadata objects
1:a5079e5:    */
1:a5079e5:   public List<? extends WrappedServiceMetadata> parse (List<URL> blueprintsToParse) throws Exception;
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Parse a blueprint xml files and extract the parsed ServiceMetadata objects
1:a5079e5:    * @param blueprintToParse URL to blueprint xml file
1:a5079e5:    * @return List of (wrapped) ServiceMetadata objects
1:a5079e5:    */
1:a5079e5:   public List<? extends WrappedServiceMetadata> parse (URL blueprintToParse) throws Exception;
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Parse an InputStream containing blueprint xml and extract the parsed ServiceMetadata objects
1:a5079e5:    * @param blueprintToParse InputStream containing blueprint xml data. The caller is responsible
1:a5079e5:    * for closing the stream afterwards. 
1:a5079e5:    * @return List of (wrapped) ServiceMetadata objects
1:a5079e5:    */
1:a5079e5:   public List<? extends WrappedServiceMetadata> parse (InputStream blueprintToParse) throws Exception;
1:a5079e5:   
1:a5079e5:   /**
1:a5079e5:    * Parse an InputStream containing blueprint xml and extract Service, Reference and RefList
1:a5079e5:    * elements.
1:a5079e5:    * @return All parsed Service, Reference and RefList elements 
1:a5079e5:    */
1:a5079e5:   public ParsedServiceElements parseAllServiceElements (InputStream blueprintToParse) throws Exception;
1:a5079e5:   
1:a5079e5: }
============================================================================
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:58f55bd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
commit:a5079e5
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.modelling;
1: 
1: import java.io.InputStream;
1: import java.net.URL;
1: import java.util.List;
1: 
1: /** 
1:  * This interface is implemented by the service which proxies the
1:  * Apache Aries blueprint parser. ParserProxy services offer higher
1:  * level methods built on top of the Blueprint parser. 
1:  *
1:  */
1: public interface ParserProxy {
1: 
1:   /**
1:    * Parse blueprint xml files and extract the parsed ServiceMetadata objects
1:    * @param blueprintsToParse URLs to blueprint xml files
1:    * @return List of (wrapped) ServiceMetadata objects
1:    */
1:   public List<? extends WrappedServiceMetadata> parse (List<URL> blueprintsToParse) throws Exception;
1:   
1:   /**
1:    * Parse a blueprint xml files and extract the parsed ServiceMetadata objects
1:    * @param blueprintToParse URL to blueprint xml file
1:    * @return List of (wrapped) ServiceMetadata objects
1:    */
1:   public List<? extends WrappedServiceMetadata> parse (URL blueprintToParse) throws Exception;
1:   
1:   /**
1:    * Parse an InputStream containing blueprint xml and extract the parsed ServiceMetadata objects
1:    * @param blueprintToParse InputStream containing blueprint xml data. The caller is responsible
1:    * for closing the stream afterwards. 
1:    * @return List of (wrapped) ServiceMetadata objects
1:    */
1:   public List<? extends WrappedServiceMetadata> parse (InputStream blueprintToParse) throws Exception;
1:   
1:   /**
1:    * Parse an InputStream containing blueprint xml and extract Service, Reference and RefList
1:    * elements.
1:    * @return All parsed Service, Reference and RefList elements 
1:    */
1:   public ParsedServiceElements parseAllServiceElements (InputStream blueprintToParse) throws Exception;
1:   
1: }
============================================================================