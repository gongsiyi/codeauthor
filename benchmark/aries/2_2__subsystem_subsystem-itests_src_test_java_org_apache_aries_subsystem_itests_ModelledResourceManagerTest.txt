1:b6ac132: package org.apache.aries.subsystem.itests;
2:b6ac132: 
1:b6ac132: import static org.junit.Assert.assertNull;
1:b6ac132: 
1:57b6627: import org.apache.aries.itest.RichBundleContext;
1:b6ac132: import org.junit.Test;
1:b6ac132: import org.osgi.service.subsystem.Subsystem;
1:b6ac132: 
1:b6ac132: public class ModelledResourceManagerTest extends SubsystemTest {
1:57b6627: 	
1:57b6627: 	public ModelledResourceManagerTest() {
1:57b6627: 		super(false);
5:b6ac132: 	}
1:b6ac132: 	
1:57b6627: 	@Override
1:57b6627: 	public void createApplications() throws Exception {
1:b6ac132: 		createApplication("feature3", new String[]{"tb3.jar"});
1:b6ac132: 		createApplication("application1", new String[]{"tb1.jar"});
1:b6ac132: 	}
1:b6ac132: 	
1:b6ac132: 	public void setUp() throws Exception {
1:b6ac132: 		super.setUp();
1:57b6627: 		RichBundleContext rootContext = context(getRootSubsystem());
1:57b6627: 		assertNull("Modeller is installed", rootContext.getBundleByName("org.apache.aries.application.modeller"));
1:57b6627: 		assertNull("Blueprint is installed", rootContext.getBundleByName("org.apache.aries.blueprint"));
1:57b6627: 		assertNull("Proxy is installed", rootContext.getBundleByName("org.apache.aries.proxy"));
1:b6ac132: 	}
1:b6ac132: 
1:b6ac132: 	@Test
1:b6ac132: 	public void testNoModelledResourceManagerService() throws Exception {
1:b6ac132: 		Subsystem feature3 = installSubsystemFromFile("feature3.esa");
1:b6ac132: 		try {
1:b6ac132: 			Subsystem application1 = installSubsystemFromFile("application1.esa");
1:b6ac132: 			try {
1:b6ac132: 				startSubsystem(application1);
1:b6ac132: 			}
1:b6ac132: 			finally {
1:b6ac132: 				stopAndUninstallSubsystemSilently(application1);
1:b6ac132: 			}
1:b6ac132: 		}
1:b6ac132: 		finally {
1:b6ac132: 			uninstallSubsystemSilently(feature3);
1:b6ac132: 		}
1:b6ac132: 	}
1:b6ac132: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:57b6627
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.itest.RichBundleContext;
1: 	
1: 	public ModelledResourceManagerTest() {
1: 		super(false);
1: 	@Override
1: 	public void createApplications() throws Exception {
1: 		RichBundleContext rootContext = context(getRootSubsystem());
1: 		assertNull("Modeller is installed", rootContext.getBundleByName("org.apache.aries.application.modeller"));
1: 		assertNull("Blueprint is installed", rootContext.getBundleByName("org.apache.aries.blueprint"));
1: 		assertNull("Proxy is installed", rootContext.getBundleByName("org.apache.aries.proxy"));
author:John Ross
-------------------------------------------------------------------------------
commit:b6ac132
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.itests;
1: 
1: import static org.junit.Assert.assertNull;
1: 
0: import java.util.ArrayList;
0: import java.util.Arrays;
0: import java.util.Iterator;
0: import java.util.List;
1: 
0: import org.junit.Before;
1: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.junit.MavenConfiguredJUnit4TestRunner;
0: import org.ops4j.pax.exam.options.MavenArtifactProvisionOption;
1: import org.osgi.service.subsystem.Subsystem;
1: 
0: @RunWith(MavenConfiguredJUnit4TestRunner.class)
1: public class ModelledResourceManagerTest extends SubsystemTest {
0: 	@org.ops4j.pax.exam.junit.Configuration
0: 	public static Option[] configuration() {
0: 		List<Option> options = new ArrayList<Option>(Arrays.asList(defineOptions()));
0: 		for (Iterator<Option> i = options.iterator(); i.hasNext();) {
0: 			Option option = i.next();
0: 			if (option instanceof MavenArtifactProvisionOption) {
0: 				MavenArtifactProvisionOption mapo = (MavenArtifactProvisionOption)option;
0: 				String url = mapo.getURL();
0: 				if (url.contains("org.apache.aries.application.modeller")
0: 						|| url.contains("org.apache.aries.blueprint")
0: 						|| url.contains("org.apache.aries.proxy")) {
0: 					i.remove();
1: 				}
1: 			}
1: 		}
0: 		Option[] result = options.toArray(new Option[options.size()]);
0: 		result = updateOptions(result);
0: 		return result;
1: 	}
1: 	
0: 	@Before
0: 	public static void createApplications() throws Exception {
0: 		if (createdApplications) {
0: 			return;
1: 		}
1: 		createApplication("feature3", new String[]{"tb3.jar"});
1: 		createApplication("application1", new String[]{"tb1.jar"});
0: 		createdApplications = true;
1: 	}
1: 	
1: 	public void setUp() throws Exception {
1: 		super.setUp();
0: 		assertNull("Modeller is installed", getBundle(getRootSubsystem(), "org.apache.aries.application.modeller"));
0: 		assertNull("Blueprint is installed", getBundle(getRootSubsystem(), "org.apache.aries.blueprint"));
0: 		assertNull("Proxy is installed", getBundle(getRootSubsystem(), "org.apache.aries.proxy"));
1: 	}
1: 
1: 	@Test
1: 	public void testNoModelledResourceManagerService() throws Exception {
1: 		Subsystem feature3 = installSubsystemFromFile("feature3.esa");
1: 		try {
1: 			Subsystem application1 = installSubsystemFromFile("application1.esa");
1: 			try {
1: 				startSubsystem(application1);
1: 			}
1: 			finally {
1: 				stopAndUninstallSubsystemSilently(application1);
1: 			}
1: 		}
1: 		finally {
1: 			uninstallSubsystemSilently(feature3);
1: 		}
1: 	}
1: }
============================================================================