1:6715d3d: /**
1:6715d3d:  * Licensed to the Apache Software Foundation (ASF) under one
1:6715d3d:  * or more contributor license agreements.  See the NOTICE file
1:6715d3d:  * distributed with this work for additional information
1:6715d3d:  * regarding copyright ownership.  The ASF licenses this file
1:6715d3d:  * to you under the Apache License, Version 2.0 (the
1:6715d3d:  * "License"); you may not use this file except in compliance
1:6715d3d:  * with the License.  You may obtain a copy of the License at
1:6715d3d:  *
1:6715d3d:  *   http://www.apache.org/licenses/LICENSE-2.0
1:6715d3d:  *
1:6715d3d:  * Unless required by applicable law or agreed to in writing,
1:6715d3d:  * software distributed under the License is distributed on an
1:6715d3d:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6715d3d:  * KIND, either express or implied.  See the License for the
1:6715d3d:  * specific language governing permissions and limitations
1:6715d3d:  * under the License.
1:6715d3d:  */
1:5602448: package org.apache.aries.proxy;
1:5602448: 
1:5602448: import java.lang.reflect.Method;
1:5602448: 
1:96d4e06: /**
1:96d4e06:  * An {@link InvocationListener} is used in conjunction with the {@link ProxyManager}
1:96d4e06:  * to intercept method calls on the proxy object
1:96d4e06:  */
1:96d4e06: public interface InvocationListener 
1:5602448: {
1:96d4e06:   public Object preInvoke(Object proxy, Method m, Object[] args) throws Throwable;
1:96d4e06:   
1:96d4e06:   public void postInvoke(Object token, Object proxy, Method m, Object returnValue) throws Throwable;
1:96d4e06:   
1:96d4e06:   public void postInvokeExceptionalReturn(Object token, Object proxy, Method m, Throwable exception) throws Throwable;
1:5602448: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:96d4e06
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * An {@link InvocationListener} is used in conjunction with the {@link ProxyManager}
1:  * to intercept method calls on the proxy object
1:  */
1: public interface InvocationListener 
1:   public Object preInvoke(Object proxy, Method m, Object[] args) throws Throwable;
1:   
1:   public void postInvoke(Object token, Object proxy, Method m, Object returnValue) throws Throwable;
1:   
1:   public void postInvokeExceptionalReturn(Object token, Object proxy, Method m, Throwable exception) throws Throwable;
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:6715d3d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:5602448
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.proxy;
1: 
0: import java.lang.reflect.InvocationHandler;
1: import java.lang.reflect.Method;
1: 
0: public interface InvocationHandlerWrapper 
1: {
0:   public Object invoke(Object proxy, Method m, Object[] args, InvocationHandler delegate) throws Throwable;
1: }
============================================================================