1:dd9325e: /**
1:dd9325e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:dd9325e:  *  contributor license agreements.  See the NOTICE file distributed with
1:dd9325e:  *  this work for additional information regarding copyright ownership.
1:dd9325e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:dd9325e:  *  (the "License"); you may not use this file except in compliance with
1:dd9325e:  *  the License.  You may obtain a copy of the License at
1:dd9325e:  *
1:dd9325e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dd9325e:  *
1:dd9325e:  *  Unless required by applicable law or agreed to in writing, software
1:dd9325e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:dd9325e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dd9325e:  *  See the License for the specific language governing permissions and
1:dd9325e:  *  limitations under the License.
1:dd9325e:  */
1:dd9325e: package org.apache.aries.blueprint.annotation;
1:dd9325e: 
1:dd9325e: import java.lang.annotation.ElementType;
1:dd9325e: import java.lang.annotation.Retention;
1:dd9325e: import java.lang.annotation.RetentionPolicy;
1:dd9325e: import java.lang.annotation.Target;
1:dd9325e: 
1:15ff7ec: @Target(ElementType.FIELD)
1:dd9325e: @Retention(RetentionPolicy.RUNTIME)
1:dd9325e: public @interface ReferenceList
1:dd9325e: {    
1:dd9325e:     /**
1:dd9325e:      * the description property of the service reference
1:dd9325e:      */
1:dd9325e:     String description() default "";
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * the interface type that a matching service must support.
1:dd9325e:      */
1:dd9325e:     Class<?> serviceInterface() default Object.class;
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * the filter expression that a matching service must match.
1:dd9325e:      */
1:dd9325e:     String filter() default "";
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * the <code>component-name</code> attribute of the service reference.
1:dd9325e:      */
1:dd9325e:     String componentName() default "";
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * whether or not a matching service is required at all times.  either optional or mandatory.
1:dd9325e:      */
1:dd9325e:     String availability() default "";
1:dd9325e:     
1:dd9325e:     /**
1:15ff7ec:      * the reference listeners for the service reference, to receive bind and unbind events.
1:dd9325e:      */
1:15ff7ec:     ReferenceListener[] referenceListeners() default {};
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * the value of the memberType property.
1:dd9325e:      */
1:dd9325e:     String memberType() default "service-object";
1:dd9325e:     
1:dd9325e:     /**
1:dd9325e:      * the id for the referencelist
1:dd9325e:      */
1:dd9325e:     String id() default "";
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:15ff7ec
/////////////////////////////////////////////////////////////////////////
1: @Target(ElementType.FIELD)
/////////////////////////////////////////////////////////////////////////
1:      * the reference listeners for the service reference, to receive bind and unbind events.
1:     ReferenceListener[] referenceListeners() default {};
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.annotation;
1: 
1: import java.lang.annotation.ElementType;
1: import java.lang.annotation.Retention;
1: import java.lang.annotation.RetentionPolicy;
1: import java.lang.annotation.Target;
1: 
0: @Target(ElementType.TYPE)
1: @Retention(RetentionPolicy.RUNTIME)
1: public @interface ReferenceList
1: {    
1:     /**
1:      * the description property of the service reference
1:      */
1:     String description() default "";
1:     
1:     /**
1:      * the interface type that a matching service must support.
1:      */
1:     Class<?> serviceInterface() default Object.class;
1:     
1:     /**
1:      * the filter expression that a matching service must match.
1:      */
1:     String filter() default "";
1:     
1:     /**
1:      * the <code>component-name</code> attribute of the service reference.
1:      */
1:     String componentName() default "";
1:     
1:     /**
1:      * whether or not a matching service is required at all times.  either optional or mandatory.
1:      */
1:     String availability() default "";
1:     
1:     /**
0:      * the reference listener for the service reference, to receive bind and unbind events.
1:      */
0:     ReferenceListener[] referenceListener();
1:     
1:     /**
1:      * the value of the memberType property.
1:      */
1:     String memberType() default "service-object";
1:     
1:     /**
1:      * the id for the referencelist
1:      */
1:     String id() default "";
1: }
============================================================================