1:6ea98a2: /*
1:6ea98a2:  * Licensed to the Apache Software Foundation (ASF) under one
1:6ea98a2:  * or more contributor license agreements.  See the NOTICE file
1:6ea98a2:  * distributed with this work for additional information
1:6ea98a2:  * regarding copyright ownership.  The ASF licenses this file
1:6ea98a2:  * to you under the Apache License, Version 2.0 (the
1:6ea98a2:  * "License"); you may not use this file except in compliance
1:6ea98a2:  * with the License.  You may obtain a copy of the License at
1:6ea98a2:  *
1:6ea98a2:  *   http://www.apache.org/licenses/LICENSE-2.0
1:6ea98a2:  *
1:6ea98a2:  * Unless required by applicable law or agreed to in writing,
1:6ea98a2:  * software distributed under the License is distributed on an
1:6ea98a2:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6ea98a2:  * KIND, either express or implied.  See the License for the
1:6ea98a2:  * specific language governing permissions and limitations
1:6ea98a2:  * under the License.
1:6ea98a2:  */
1:6ea98a2: package org.apache.aries.subsystem.itests.defect;
1:6ea98a2: 
1:6ea98a2: import static org.junit.Assert.assertEquals;
1:6ea98a2: 
1:6ea98a2: import java.io.IOException;
1:6ea98a2: import java.util.ArrayList;
1:6ea98a2: import java.util.Collections;
1:6ea98a2: import java.util.List;
1:6ea98a2: 
1:6ea98a2: import org.apache.aries.subsystem.itests.SubsystemTest;
1:6ea98a2: import org.junit.Before;
1:6ea98a2: import org.junit.Test;
1:6ea98a2: import org.ops4j.pax.tinybundles.core.TinyBundles;
1:6ea98a2: import org.osgi.framework.Bundle;
1:6ea98a2: import org.osgi.framework.BundleContext;
1:6ea98a2: import org.osgi.framework.BundleEvent;
1:6ea98a2: import org.osgi.framework.SynchronousBundleListener;
1:6ea98a2: import org.osgi.service.subsystem.Subsystem;
1:6ea98a2: 
1:6ea98a2: import aQute.bnd.osgi.Constants;
1:6ea98a2: 
1:6ea98a2: /*
1:6ea98a2:  * https://issues.apache.org/jira/browse/ARIES-1399
1:6ea98a2:  * 
1:6ea98a2:  * Trunk fails OSGi R6 CT
1:6ea98a2:  */
1:6ea98a2: public class Aries1399Test extends SubsystemTest {
1:6ea98a2:     /*
1:6ea98a2: 	 * Bundle-SymbolicName: bundle.a.jar
1:6ea98a2: 	 */
1:6ea98a2: 	private static final String BUNDLE_A = "bundle.a.jar";
1:6ea98a2: 	
1:6ea98a2: 	private static boolean createdTestFiles;
1:6ea98a2: 	
1:6ea98a2: 	@Before
1:6ea98a2: 	public void createTestFiles() throws Exception {
1:6ea98a2: 		if (createdTestFiles)
1:6ea98a2: 			return;
1:6ea98a2: 		createBundleA();
1:6ea98a2: 		createdTestFiles = true;
1:6ea98a2: 	}
1:6ea98a2: 	
1:6ea98a2: 	private void createBundleA() throws IOException {
1:6ea98a2: 		createBundle(name(BUNDLE_A));
1:6ea98a2: 	}
1:6ea98a2: 	
1:6ea98a2: 	@Test 
1:6ea98a2:     public void testBundleEventOrder() throws Exception {
1:6ea98a2:     	Subsystem root = getRootSubsystem();
1:6ea98a2:     	BundleContext context = root.getBundleContext();
1:6ea98a2:     	final List<BundleEvent> events = Collections.synchronizedList(new ArrayList<BundleEvent>());
1:6ea98a2:     	context.addBundleListener(
1:6ea98a2:     			new SynchronousBundleListener() {
1:6ea98a2: 					@Override
1:6ea98a2: 					public void bundleChanged(BundleEvent event) {
1:6ea98a2: 						events.add(event);
1:6ea98a2: 					}
1:6ea98a2:     			});
1:6ea98a2:     	Bundle bundle = context.installBundle(
1:6ea98a2:     			"bundle", 
1:6ea98a2:     			TinyBundles.bundle().set(Constants.BUNDLE_SYMBOLICNAME, "bundle").build());
1:6ea98a2:     	try {
1:6ea98a2:     		bundle.start();
1:6ea98a2:     		// INSTALLED, RESOLVED, STARTING, STARTED
1:6ea98a2:     		assertEquals(4, events.size());
1:6ea98a2:     		assertEquals(BundleEvent.INSTALLED, events.get(0).getType());
1:6ea98a2:     		assertEquals(BundleEvent.RESOLVED, events.get(1).getType());
1:6ea98a2:     		assertEquals(BundleEvent.STARTING, events.get(2).getType());
1:6ea98a2:     		assertEquals(BundleEvent.STARTED, events.get(3).getType());
1:6ea98a2:     	}
1:6ea98a2:     	finally {
1:6ea98a2:     		uninstallSilently(bundle);
1:6ea98a2:     	}
1:6ea98a2:     }
1:6ea98a2: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:6ea98a2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.subsystem.itests.defect;
1: 
1: import static org.junit.Assert.assertEquals;
1: 
1: import java.io.IOException;
1: import java.util.ArrayList;
1: import java.util.Collections;
1: import java.util.List;
1: 
1: import org.apache.aries.subsystem.itests.SubsystemTest;
1: import org.junit.Before;
1: import org.junit.Test;
1: import org.ops4j.pax.tinybundles.core.TinyBundles;
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.BundleEvent;
1: import org.osgi.framework.SynchronousBundleListener;
1: import org.osgi.service.subsystem.Subsystem;
1: 
1: import aQute.bnd.osgi.Constants;
1: 
1: /*
1:  * https://issues.apache.org/jira/browse/ARIES-1399
1:  * 
1:  * Trunk fails OSGi R6 CT
1:  */
1: public class Aries1399Test extends SubsystemTest {
1:     /*
1: 	 * Bundle-SymbolicName: bundle.a.jar
1: 	 */
1: 	private static final String BUNDLE_A = "bundle.a.jar";
1: 	
1: 	private static boolean createdTestFiles;
1: 	
1: 	@Before
1: 	public void createTestFiles() throws Exception {
1: 		if (createdTestFiles)
1: 			return;
1: 		createBundleA();
1: 		createdTestFiles = true;
1: 	}
1: 	
1: 	private void createBundleA() throws IOException {
1: 		createBundle(name(BUNDLE_A));
1: 	}
1: 	
1: 	@Test 
1:     public void testBundleEventOrder() throws Exception {
1:     	Subsystem root = getRootSubsystem();
1:     	BundleContext context = root.getBundleContext();
1:     	final List<BundleEvent> events = Collections.synchronizedList(new ArrayList<BundleEvent>());
1:     	context.addBundleListener(
1:     			new SynchronousBundleListener() {
1: 					@Override
1: 					public void bundleChanged(BundleEvent event) {
1: 						events.add(event);
1: 					}
1:     			});
1:     	Bundle bundle = context.installBundle(
1:     			"bundle", 
1:     			TinyBundles.bundle().set(Constants.BUNDLE_SYMBOLICNAME, "bundle").build());
1:     	try {
1:     		bundle.start();
1:     		// INSTALLED, RESOLVED, STARTING, STARTED
1:     		assertEquals(4, events.size());
1:     		assertEquals(BundleEvent.INSTALLED, events.get(0).getType());
1:     		assertEquals(BundleEvent.RESOLVED, events.get(1).getType());
1:     		assertEquals(BundleEvent.STARTING, events.get(2).getType());
1:     		assertEquals(BundleEvent.STARTED, events.get(3).getType());
1:     	}
1:     	finally {
1:     		uninstallSilently(bundle);
1:     	}
1:     }
1: }
============================================================================