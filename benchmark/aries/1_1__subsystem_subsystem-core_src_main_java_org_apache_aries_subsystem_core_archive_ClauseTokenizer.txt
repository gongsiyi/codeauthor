1:a14f2fd: /*
1:a14f2fd:  * Licensed under the Apache License, Version 2.0 (the "License");
1:a14f2fd:  * you may not use this file except in compliance with the License.
1:a14f2fd:  * You may obtain a copy of the License at
1:a14f2fd:  *
1:a14f2fd:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a14f2fd:  *
1:a14f2fd:  * Unless required by applicable law or agreed to in writing, software
1:a14f2fd:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a14f2fd:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a14f2fd:  * See the License for the specific language governing permissions and
1:a14f2fd:  * limitations under the License.
1:a14f2fd:  */
1:777b216: package org.apache.aries.subsystem.core.archive;
1:777b216: 
1:777b216: import java.util.ArrayList;
1:777b216: import java.util.Collection;
1:777b216: import java.util.Collections;
1:777b216: 
1:777b216: public class ClauseTokenizer {
1:777b216: 	private final Collection<String> clauses = new ArrayList<String>();
1:777b216: 	
1:777b216: 	public ClauseTokenizer(String value) {
1:777b216: 		int numOfChars = value.length();
1:777b216: 		StringBuilder builder = new StringBuilder(numOfChars);
1:777b216: 		int numOfQuotes = 0;
1:777b216: 		for (char c : value.toCharArray()) {
1:777b216: 			numOfChars--;
1:777b216: 			if (c == ',') {
1:777b216: 				if (numOfQuotes % 2 == 0) {
1:2b13b05: 					addClause(builder.toString().trim());
1:777b216: 					builder = new StringBuilder(numOfChars);
1:2b13b05: 					continue;
1:777b216: 				}
1:777b216: 			}
1:777b216: 			else if (c == '"')
1:777b216: 				numOfQuotes++;
1:2b13b05: 			builder.append(c);
1:777b216: 		}
1:2b13b05: 		addClause(builder.toString().trim());
1:777b216: 	}
1:777b216: 	
1:777b216: 	public Collection<String> getClauses() {
1:777b216: 		return Collections.unmodifiableCollection(clauses);
1:777b216: 	}
1:2b13b05: 	
1:2b13b05: 	private void addClause(String clause) {
1:2b13b05: 		if (clause.isEmpty())
1:2b13b05: 			return;
1:2b13b05: 		clauses.add(clause);
1:2b13b05: 	}
1:777b216: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:a14f2fd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:2b13b05
/////////////////////////////////////////////////////////////////////////
1: 					addClause(builder.toString().trim());
1: 					continue;
1: 			builder.append(c);
1: 		addClause(builder.toString().trim());
1: 	
1: 	private void addClause(String clause) {
1: 		if (clause.isEmpty())
1: 			return;
1: 		clauses.add(clause);
1: 	}
commit:777b216
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.core.archive;
1: 
1: import java.util.ArrayList;
1: import java.util.Collection;
1: import java.util.Collections;
1: 
1: public class ClauseTokenizer {
1: 	private final Collection<String> clauses = new ArrayList<String>();
1: 	
1: 	public ClauseTokenizer(String value) {
1: 		int numOfChars = value.length();
1: 		StringBuilder builder = new StringBuilder(numOfChars);
1: 		int numOfQuotes = 0;
1: 		for (char c : value.toCharArray()) {
1: 			numOfChars--;
1: 			if (c == ',') {
1: 				if (numOfQuotes % 2 == 0) {
0: 					clauses.add(builder.toString());
1: 					builder = new StringBuilder(numOfChars);
1: 				}
0: 				else
0: 					builder.append(c);
1: 			}
1: 			else if (c == '"')
1: 				numOfQuotes++;
0: 			else
0: 				builder.append(c);
1: 		}
0: 		clauses.add(builder.toString());
1: 	}
1: 	
1: 	public Collection<String> getClauses() {
1: 		return Collections.unmodifiableCollection(clauses);
1: 	}
1: }
============================================================================