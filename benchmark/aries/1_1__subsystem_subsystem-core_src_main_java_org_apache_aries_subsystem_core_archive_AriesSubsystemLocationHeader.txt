1:fba8a39: /*
1:fba8a39:  * Licensed to the Apache Software Foundation (ASF) under one
1:fba8a39:  * or more contributor license agreements.  See the NOTICE file
1:fba8a39:  * distributed with this work for additional information
1:fba8a39:  * regarding copyright ownership.  The ASF licenses this file
1:fba8a39:  * to you under the Apache License, Version 2.0 (the
1:fba8a39:  * "License"); you may not use this file except in compliance
1:fba8a39:  * with the License.  You may obtain a copy of the License at
1:fba8a39:  *
1:fba8a39:  *   http://www.apache.org/licenses/LICENSE-2.0
1:fba8a39:  *
1:fba8a39:  * Unless required by applicable law or agreed to in writing,
1:fba8a39:  * software distributed under the License is distributed on an
1:fba8a39:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:fba8a39:  * KIND, either express or implied.  See the License for the
1:fba8a39:  * specific language governing permissions and limitations
1:fba8a39:  * under the License.
1:fba8a39:  */
1:69fd7d4: package org.apache.aries.subsystem.core.archive;
1:69fd7d4: 
1:69fd7d4: import java.util.Collection;
1:69fd7d4: import java.util.Collections;
1:69fd7d4: 
1:69fd7d4: public class AriesSubsystemLocationHeader implements Header<Clause> {
1:69fd7d4: 	public static final String NAME = "AriesSubsystem-Location";
1:69fd7d4: 	
1:69fd7d4: 	private final String value;
1:69fd7d4: 
1:69fd7d4: 	public AriesSubsystemLocationHeader(String value) {
1:69fd7d4: 		if (value == null) {
1:69fd7d4: 			throw new NullPointerException();
1:69fd7d4: 		}
1:69fd7d4: 		this.value = value;
1:69fd7d4: 	}
1:69fd7d4: 
1:69fd7d4: 	@Override
1:69fd7d4: 	public Collection<Clause> getClauses() {
1:69fd7d4: 		return Collections.<Clause>singleton(
1:69fd7d4: 				new Clause() {
1:69fd7d4: 					@Override
1:69fd7d4: 					public Attribute getAttribute(String name) {
1:69fd7d4: 						return null;
1:69fd7d4: 					}
1:69fd7d4: 
1:69fd7d4: 					@Override
1:69fd7d4: 					public Collection<Attribute> getAttributes() {
1:69fd7d4: 						return Collections.emptyList();
1:69fd7d4: 					}
1:69fd7d4: 
1:69fd7d4: 					@Override
1:69fd7d4: 					public Directive getDirective(String name) {
1:69fd7d4: 						return null;
1:69fd7d4: 					}
1:69fd7d4: 
1:69fd7d4: 					@Override
1:69fd7d4: 					public Collection<Directive> getDirectives() {
1:69fd7d4: 						return Collections.emptyList();
1:69fd7d4: 					}
1:69fd7d4: 
1:69fd7d4: 					@Override
1:69fd7d4: 					public Parameter getParameter(String name) {
1:69fd7d4: 						return null;
1:69fd7d4: 					}
1:69fd7d4: 
1:69fd7d4: 					@Override
1:69fd7d4: 					public Collection<Parameter> getParameters() {
1:69fd7d4: 						return Collections.emptyList();
1:69fd7d4: 					}
1:69fd7d4: 
1:69fd7d4: 					@Override
1:69fd7d4: 					public String getPath() {
1:69fd7d4: 						return value;
1:69fd7d4: 					}
1:69fd7d4: 				});
1:69fd7d4: 	}
1:69fd7d4: 
1:69fd7d4: 	@Override
1:69fd7d4: 	public String getName() {
1:69fd7d4: 		return NAME;
1:69fd7d4: 	}
1:69fd7d4: 
1:69fd7d4: 	@Override
1:69fd7d4: 	public String getValue() {
1:69fd7d4: 		return value;
1:69fd7d4: 	}
1:69fd7d4: 	
1:69fd7d4: 	@Override
1:69fd7d4: 	public String toString() {
1:69fd7d4: 		return value;
1:69fd7d4: 	}
1:69fd7d4: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:fba8a39
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:69fd7d4
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.core.archive;
1: 
1: import java.util.Collection;
1: import java.util.Collections;
1: 
1: public class AriesSubsystemLocationHeader implements Header<Clause> {
1: 	public static final String NAME = "AriesSubsystem-Location";
1: 	
1: 	private final String value;
1: 
1: 	public AriesSubsystemLocationHeader(String value) {
1: 		if (value == null) {
1: 			throw new NullPointerException();
1: 		}
1: 		this.value = value;
1: 	}
1: 
1: 	@Override
1: 	public Collection<Clause> getClauses() {
1: 		return Collections.<Clause>singleton(
1: 				new Clause() {
1: 					@Override
1: 					public Attribute getAttribute(String name) {
1: 						return null;
1: 					}
1: 
1: 					@Override
1: 					public Collection<Attribute> getAttributes() {
1: 						return Collections.emptyList();
1: 					}
1: 
1: 					@Override
1: 					public Directive getDirective(String name) {
1: 						return null;
1: 					}
1: 
1: 					@Override
1: 					public Collection<Directive> getDirectives() {
1: 						return Collections.emptyList();
1: 					}
1: 
1: 					@Override
1: 					public Parameter getParameter(String name) {
1: 						return null;
1: 					}
1: 
1: 					@Override
1: 					public Collection<Parameter> getParameters() {
1: 						return Collections.emptyList();
1: 					}
1: 
1: 					@Override
1: 					public String getPath() {
1: 						return value;
1: 					}
1: 				});
1: 	}
1: 
1: 	@Override
1: 	public String getName() {
1: 		return NAME;
1: 	}
1: 
1: 	@Override
1: 	public String getValue() {
1: 		return value;
1: 	}
1: 	
1: 	@Override
1: 	public String toString() {
1: 		return value;
1: 	}
1: }
============================================================================