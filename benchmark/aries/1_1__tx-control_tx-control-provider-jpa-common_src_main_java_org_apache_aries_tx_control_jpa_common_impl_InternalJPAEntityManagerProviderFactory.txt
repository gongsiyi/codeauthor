1:efb3993: /*
1:efb3993:  * Licensed to the Apache Software Foundation (ASF) under one
1:efb3993:  * or more contributor license agreements.  See the NOTICE file
1:efb3993:  * distributed with this work for additional information
1:efb3993:  * regarding copyright ownership.  The ASF licenses this file
1:efb3993:  * to you under the Apache License, Version 2.0 (the
1:efb3993:  * "License"); you may not use this file except in compliance
1:efb3993:  * with the License.  You may obtain a copy of the License at
1:efb3993:  *
1:efb3993:  *   http://www.apache.org/licenses/LICENSE-2.0
1:efb3993:  *
1:efb3993:  * Unless required by applicable law or agreed to in writing,
1:efb3993:  * software distributed under the License is distributed on an
1:efb3993:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:efb3993:  * KIND, either express or implied.  See the License for the
1:efb3993:  * specific language governing permissions and limitations
1:efb3993:  * under the License.
1:efb3993:  */
1:e55f0fd: package org.apache.aries.tx.control.jpa.common.impl;
2:e55f0fd: 
1:e55f0fd: import java.util.Map;
1:e55f0fd: 
1:e55f0fd: import javax.persistence.EntityManagerFactory;
1:e55f0fd: 
1:e55f0fd: import org.osgi.service.jpa.EntityManagerFactoryBuilder;
1:e55f0fd: import org.osgi.service.transaction.control.jpa.JPAEntityManagerProviderFactory;
1:e55f0fd: 
1:e55f0fd: public interface InternalJPAEntityManagerProviderFactory extends JPAEntityManagerProviderFactory {
1:e55f0fd: 
1:e55f0fd: 	@Override
2:e55f0fd: 	AbstractJPAEntityManagerProvider getProviderFor(EntityManagerFactoryBuilder emfb, 
1:e55f0fd: 			Map<String, Object> jpaProperties, Map<String, Object> resourceProviderProperties);
1:e55f0fd: 
1:e55f0fd: 	@Override
1:e55f0fd: 	AbstractJPAEntityManagerProvider getProviderFor(EntityManagerFactory emf,
1:e55f0fd: 			Map<String, Object> resourceProviderProperties);
1:e55f0fd: 
1:e55f0fd: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:efb3993
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:426f022
/////////////////////////////////////////////////////////////////////////
commit:0e20712
commit:e55f0fd
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.tx.control.jpa.common.impl;
1: 
1: import java.util.Map;
1: 
1: import javax.persistence.EntityManagerFactory;
1: 
1: import org.osgi.service.jpa.EntityManagerFactoryBuilder;
1: import org.osgi.service.transaction.control.jpa.JPAEntityManagerProviderFactory;
1: 
1: public interface InternalJPAEntityManagerProviderFactory extends JPAEntityManagerProviderFactory {
1: 
1: 	@Override
1: 	AbstractJPAEntityManagerProvider getProviderFor(EntityManagerFactoryBuilder emfb, 
1: 			Map<String, Object> jpaProperties, Map<String, Object> resourceProviderProperties);
1: 
1: 	AbstractJPAEntityManagerProvider getProviderFor(EntityManagerFactoryBuilder emfb, 
0: 	Map<String, Object> jpaProperties, Map<String, Object> resourceProviderProperties, 
0: 	Runnable onClose);
1: 
1: 	@Override
1: 	AbstractJPAEntityManagerProvider getProviderFor(EntityManagerFactory emf,
1: 			Map<String, Object> resourceProviderProperties);
1: 
1: }
============================================================================