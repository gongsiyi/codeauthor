1:7d296ee: /*
1:7d296ee:  * Copyright (c) OSGi Alliance (2012). All Rights Reserved.
1:7d296ee:  * 
1:7d296ee:  * Licensed under the Apache License, Version 2.0 (the "License");
1:7d296ee:  * you may not use this file except in compliance with the License.
1:7d296ee:  * You may obtain a copy of the License at
1:7d296ee:  *
1:7d296ee:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7d296ee:  *
1:7d296ee:  * Unless required by applicable law or agreed to in writing, software
1:7d296ee:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7d296ee:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7d296ee:  * See the License for the specific language governing permissions and
1:7d296ee:  * limitations under the License.
1:7d296ee:  */
1:7d296ee: 
1:7d296ee: package org.osgi.service.repository;
1:7d296ee: 
1:7d296ee: import java.io.InputStream;
1:7d296ee: import org.osgi.resource.Resource;
1:7d296ee: 
1:7d296ee: /**
1:7d296ee:  * An accessor for the default content of a resource.
1:7d296ee:  * 
1:7d296ee:  * All {@link Resource} objects which represent resources in a
1:7d296ee:  * {@link Repository} must implement this interface. A user of the resource can
1:7d296ee:  * then cast the {@link Resource} object to this type and then obtain an
1:7d296ee:  * {@code InputStream} to the default content of the resource.
1:7d296ee:  * 
1:7d296ee:  * @ThreadSafe
1:7d296ee:  * @noimplement
1:7d296ee:  * @version $Id$
1:7d296ee:  */
1:7d296ee: public interface RepositoryContent {
1:7d296ee: 
1:7d296ee: 	/**
1:7d296ee: 	 * Returns a new input stream to the default format of this resource.
1:7d296ee: 	 * 
1:7d296ee: 	 * @return A new input stream for associated resource.
1:7d296ee: 	 */
1:7d296ee: 	InputStream getContent();
1:7d296ee: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:7d296ee
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Copyright (c) OSGi Alliance (2012). All Rights Reserved.
1:  * 
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.osgi.service.repository;
1: 
1: import java.io.InputStream;
1: import org.osgi.resource.Resource;
1: 
1: /**
1:  * An accessor for the default content of a resource.
1:  * 
1:  * All {@link Resource} objects which represent resources in a
1:  * {@link Repository} must implement this interface. A user of the resource can
1:  * then cast the {@link Resource} object to this type and then obtain an
1:  * {@code InputStream} to the default content of the resource.
1:  * 
1:  * @ThreadSafe
1:  * @noimplement
1:  * @version $Id$
1:  */
1: public interface RepositoryContent {
1: 
1: 	/**
1: 	 * Returns a new input stream to the default format of this resource.
1: 	 * 
1: 	 * @return A new input stream for associated resource.
1: 	 */
1: 	InputStream getContent();
1: }
commit:ec9e430
/////////////////////////////////////////////////////////////////////////
commit:452554c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  * @noimplement
0:  * @version $Id: 65c9ca60467654e7147a2fddc86acef58a634042 $
commit:aac6a2a
/////////////////////////////////////////////////////////////////////////
0: import java.io.InputStream;
0: import org.osgi.resource.Resource;
0:  * An accessor for the default content of a resource.
0:  * {@code InputStream} to the default content of the resource.
0:  * @version $Id: ec32a007f35510827791c7e5af99f3c5d579ce87 $
0: 	 * Returns a new input stream to the default format of this resource.
0: 	InputStream getContent();
commit:8ee8aac
/////////////////////////////////////////////////////////////////////////
0: import java.io.*;
0: import org.osgi.resource.*;
/////////////////////////////////////////////////////////////////////////
0:  * @version $Id: 45eb6e8f54d08d5491a342bfafbcc9b6465f06e0 $
0: 	 * resource. The given osgiContent must map to the SHA-256 that is stored
0: 	 * in the {@code osgi.content} Capability under {@code osgi.content}.
0: 	 * 
0: 	 * @param osgiContent The SHA-256 of the content
0: 	InputStream getContent(String osgiContent) throws IOException;
commit:71fe81a
/////////////////////////////////////////////////////////////////////////
0: import org.osgi.resource.Resource;
commit:1c9c28b
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Copyright (c) OSGi Alliance (2012). All Rights Reserved.
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.osgi.service.repository;
0: 
0: import java.io.IOException;
0: import java.io.InputStream;
0: 
0: import org.osgi.framework.resource.Resource;
0: 
0: /**
0:  * An accessor for the content of a resource.
0:  * 
0:  * All {@link Resource} objects which represent resources in a
0:  * {@link Repository} must implement this interface. A user of the resource can
0:  * then cast the {@link Resource} object to this type and then obtain an
0:  * {@code InputStream} to the content of the resource.
0:  * 
0:  * @ThreadSafe
0:  * @version $Id: 6a91b25ad4eff5054b1436ba9f5c9c4a58e89cf7 $
0:  */
0: public interface RepositoryContent {
0: 
0: 	/**
0: 	 * Returns a new input stream to the underlying artifact for the associated
0: 	 * resource.
0: 	 * 
0: 	 * @return A new input stream for associated resource.
0: 	 * @throws IOException If an I/O error occurs while creating the input
0: 	 *         stream.
0: 	 */
0: 	InputStream getContent() throws IOException;
0: }
============================================================================