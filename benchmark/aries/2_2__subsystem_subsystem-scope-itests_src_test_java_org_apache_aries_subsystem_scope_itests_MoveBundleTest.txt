1:e9f9bca: package org.apache.aries.subsystem.scope.itests;
1:e9f9bca: 
1:e9f9bca: import static org.junit.Assert.assertFalse;
1:e9f9bca: import static org.junit.Assert.assertTrue;
1:e9f9bca: import static org.junit.Assert.fail;
1:e9f9bca: 
1:e9f9bca: import org.apache.aries.subsystem.scope.Scope;
1:e9f9bca: import org.apache.aries.subsystem.scope.ScopeUpdate;
1:5bdb2b8: import org.junit.Ignore;
1:e9f9bca: import org.junit.Test;
1:e9f9bca: import org.osgi.framework.Bundle;
1:e9f9bca: 
1:e9f9bca: /**
1:e9f9bca:  * Bundles may be moved from one scope to another.
1:e9f9bca:  */
1:e9f9bca: public class MoveBundleTest extends AbstractTest {
1:e9f9bca: 	/**
1:e9f9bca: 	 * Create two scopes off of the root scope with the following structure.
1:e9f9bca: 	 *    R
1:e9f9bca: 	 *   / \
1:e9f9bca: 	 * S1   S2
1:e9f9bca: 	 * Install a bundle using the test bundle's bundle context. This should add
1:e9f9bca: 	 * the bundle to R since the test bundle is in R. Next, move the bundle 
1:e9f9bca: 	 * into S1. Finally, move the bundle into S2.
1:e9f9bca: 	 * @throws Exception
1:e9f9bca: 	 */
1:e9f9bca: 	@Test
1:5bdb2b8: 	@Ignore
1:e9f9bca: 	public void test1() throws Exception {
1:e9f9bca: 		Bundle tb2 = installBundle("tb-2.jar");
1:6f4b079: 		Scope root = getScope();
1:e9f9bca: 		ScopeUpdate rootUpdate = root.newScopeUpdate();
1:e9f9bca: 		ScopeUpdate s1Update = rootUpdate.newChild("S1");
1:e9f9bca: 		ScopeUpdate s2Update = rootUpdate.newChild("S2");
1:e9f9bca: 		rootUpdate.getChildren().add(s1Update);
1:e9f9bca: 		rootUpdate.getChildren().add(s2Update);
1:e9f9bca: 		rootUpdate.commit();
1:e9f9bca: 		Scope s1 = s1Update.getScope();
1:e9f9bca: 		Scope s2 = s2Update.getScope();
1:e9f9bca: 		assertTrue(root.getBundles().contains(tb2));
1:e9f9bca: 		assertFalse(s1.getBundles().contains(tb2));
1:e9f9bca: 		assertFalse(s2.getBundles().contains(tb2));
1:e9f9bca: 		
1:e9f9bca: 		rootUpdate = root.newScopeUpdate();
1:e9f9bca: 		rootUpdate.getBundles().remove(tb2);
1:e9f9bca: 		s1Update = findChildUpdate("S1", rootUpdate);
1:e9f9bca: 		s1Update.getBundles().add(tb2);
1:e9f9bca: 		rootUpdate.commit();
1:e9f9bca: 		assertFalse(root.getBundles().contains(tb2));
1:e9f9bca: 		assertTrue(s1.getBundles().contains(tb2));
1:e9f9bca: 		assertFalse(s2.getBundles().contains(tb2));
1:e9f9bca: 		
1:e9f9bca: 		rootUpdate = root.newScopeUpdate();
1:e9f9bca: 		s1Update = findChildUpdate("S1", rootUpdate);
1:e9f9bca: 		s1Update.getBundles().remove(tb2);
1:e9f9bca: 		s2Update = findChildUpdate("S2", rootUpdate);
1:e9f9bca: 		s2Update.getBundles().add(tb2);
1:e9f9bca: 		rootUpdate.commit();
1:e9f9bca: 		assertFalse(root.getBundles().contains(tb2));
1:e9f9bca: 		assertFalse(s1.getBundles().contains(tb2));
1:e9f9bca: 		assertTrue(s2.getBundles().contains(tb2));
1:e9f9bca: 		
1:e9f9bca: 		tb2.uninstall();
1:e9f9bca: 	}
1:e9f9bca: 	
1:e9f9bca: 	/**
1:e9f9bca: 	 * Create one scope off of the root scope with the following structure. 
1:e9f9bca: 	 * R
1:e9f9bca: 	 * |
1:e9f9bca: 	 * S
1:e9f9bca: 	 * Install a bundle using the test bundle's bundle context. This should add 
1:e9f9bca: 	 * the bundle to R since the test bundle is in R. Next, move the bundle into
1:e9f9bca: 	 * S without removing it from R. This should result in an 
1:e9f9bca: 	 * IllegalStateException. Finally, correct the error using the same 
1:e9f9bca: 	 * ScopeUpdate objects and commit again. This should succeed, and the bundle
1:e9f9bca: 	 * should now be in S.
1:e9f9bca: 	 * @throws Exception
1:e9f9bca: 	 */
1:e9f9bca: 	@Test
1:e9f9bca: 	public void test2() throws Exception {
1:e9f9bca: 		Bundle tb2 = installBundle("tb-2.jar");
1:6f4b079: 		Scope root = getScope();
1:e9f9bca: 		ScopeUpdate rootUpdate = root.newScopeUpdate();
1:e9f9bca: 		ScopeUpdate sUpdate = rootUpdate.newChild("S");
1:e9f9bca: 		rootUpdate.getChildren().add(sUpdate);
1:e9f9bca: 		rootUpdate.commit();
1:e9f9bca: 		Scope s = sUpdate.getScope();
1:e9f9bca: 		assertTrue(root.getBundles().contains(tb2));
1:e9f9bca: 		assertFalse(s.getBundles().contains(tb2));
1:e9f9bca: 		
1:e9f9bca: 		rootUpdate = root.newScopeUpdate();
1:e9f9bca: 		sUpdate = findChildUpdate("S", rootUpdate);
1:e9f9bca: 		sUpdate.getBundles().add(tb2);
1:e9f9bca: 		try {
1:e9f9bca: 			rootUpdate.commit();
1:e9f9bca: 			fail();
1:e9f9bca: 		}
1:e9f9bca: 		catch (IllegalStateException e) {
1:e9f9bca: 			// Okay.
1:e9f9bca: 		}
1:e9f9bca: 		assertTrue(root.getBundles().contains(tb2));
1:e9f9bca: 		assertFalse(s.getBundles().contains(tb2));
1:e9f9bca: 		
1:e9f9bca: 		rootUpdate.getBundles().remove(tb2);
1:e9f9bca: 		rootUpdate.commit();
1:e9f9bca: 		assertFalse(root.getBundles().contains(tb2));
1:e9f9bca: 		assertTrue(s.getBundles().contains(tb2));
1:e9f9bca: 		
1:e9f9bca: 		tb2.uninstall();
1:e9f9bca: 	}
1:e9f9bca: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:5bdb2b8
/////////////////////////////////////////////////////////////////////////
1: import org.junit.Ignore;
/////////////////////////////////////////////////////////////////////////
1: 	@Ignore
author:Graham Charters
-------------------------------------------------------------------------------
commit:6f4b079
/////////////////////////////////////////////////////////////////////////
1: 		Scope root = getScope();
/////////////////////////////////////////////////////////////////////////
1: 		Scope root = getScope();
commit:e9f9bca
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.scope.itests;
1: 
1: import static org.junit.Assert.assertFalse;
1: import static org.junit.Assert.assertTrue;
1: import static org.junit.Assert.fail;
1: 
1: import org.apache.aries.subsystem.scope.Scope;
1: import org.apache.aries.subsystem.scope.ScopeUpdate;
1: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
1: import org.osgi.framework.Bundle;
1: 
1: /**
1:  * Bundles may be moved from one scope to another.
1:  */
0: @RunWith(JUnit4TestRunner.class)
1: public class MoveBundleTest extends AbstractTest {
1: 	/**
1: 	 * Create two scopes off of the root scope with the following structure.
1: 	 *    R
1: 	 *   / \
1: 	 * S1   S2
1: 	 * Install a bundle using the test bundle's bundle context. This should add
1: 	 * the bundle to R since the test bundle is in R. Next, move the bundle 
1: 	 * into S1. Finally, move the bundle into S2.
1: 	 * @throws Exception
1: 	 */
1: 	@Test
1: 	public void test1() throws Exception {
1: 		Bundle tb2 = installBundle("tb-2.jar");
0: 		Scope root = scope;
1: 		ScopeUpdate rootUpdate = root.newScopeUpdate();
1: 		ScopeUpdate s1Update = rootUpdate.newChild("S1");
1: 		ScopeUpdate s2Update = rootUpdate.newChild("S2");
1: 		rootUpdate.getChildren().add(s1Update);
1: 		rootUpdate.getChildren().add(s2Update);
1: 		rootUpdate.commit();
1: 		Scope s1 = s1Update.getScope();
1: 		Scope s2 = s2Update.getScope();
1: 		assertTrue(root.getBundles().contains(tb2));
1: 		assertFalse(s1.getBundles().contains(tb2));
1: 		assertFalse(s2.getBundles().contains(tb2));
1: 		
1: 		rootUpdate = root.newScopeUpdate();
1: 		rootUpdate.getBundles().remove(tb2);
1: 		s1Update = findChildUpdate("S1", rootUpdate);
1: 		s1Update.getBundles().add(tb2);
1: 		rootUpdate.commit();
1: 		assertFalse(root.getBundles().contains(tb2));
1: 		assertTrue(s1.getBundles().contains(tb2));
1: 		assertFalse(s2.getBundles().contains(tb2));
1: 		
1: 		rootUpdate = root.newScopeUpdate();
1: 		s1Update = findChildUpdate("S1", rootUpdate);
1: 		s1Update.getBundles().remove(tb2);
1: 		s2Update = findChildUpdate("S2", rootUpdate);
1: 		s2Update.getBundles().add(tb2);
1: 		rootUpdate.commit();
1: 		assertFalse(root.getBundles().contains(tb2));
1: 		assertFalse(s1.getBundles().contains(tb2));
1: 		assertTrue(s2.getBundles().contains(tb2));
1: 		
1: 		tb2.uninstall();
1: 	}
1: 	
1: 	/**
1: 	 * Create one scope off of the root scope with the following structure. 
1: 	 * R
1: 	 * |
1: 	 * S
1: 	 * Install a bundle using the test bundle's bundle context. This should add 
1: 	 * the bundle to R since the test bundle is in R. Next, move the bundle into
1: 	 * S without removing it from R. This should result in an 
1: 	 * IllegalStateException. Finally, correct the error using the same 
1: 	 * ScopeUpdate objects and commit again. This should succeed, and the bundle
1: 	 * should now be in S.
1: 	 * @throws Exception
1: 	 */
1: 	@Test
1: 	public void test2() throws Exception {
1: 		Bundle tb2 = installBundle("tb-2.jar");
0: 		Scope root = scope;
1: 		ScopeUpdate rootUpdate = root.newScopeUpdate();
1: 		ScopeUpdate sUpdate = rootUpdate.newChild("S");
1: 		rootUpdate.getChildren().add(sUpdate);
1: 		rootUpdate.commit();
1: 		Scope s = sUpdate.getScope();
1: 		assertTrue(root.getBundles().contains(tb2));
1: 		assertFalse(s.getBundles().contains(tb2));
1: 		
1: 		rootUpdate = root.newScopeUpdate();
1: 		sUpdate = findChildUpdate("S", rootUpdate);
1: 		sUpdate.getBundles().add(tb2);
1: 		try {
1: 			rootUpdate.commit();
1: 			fail();
1: 		}
1: 		catch (IllegalStateException e) {
1: 			// Okay.
1: 		}
1: 		assertTrue(root.getBundles().contains(tb2));
1: 		assertFalse(s.getBundles().contains(tb2));
1: 		
1: 		rootUpdate.getBundles().remove(tb2);
1: 		rootUpdate.commit();
1: 		assertFalse(root.getBundles().contains(tb2));
1: 		assertTrue(s.getBundles().contains(tb2));
1: 		
1: 		tb2.uninstall();
1: 	}
1: }
============================================================================