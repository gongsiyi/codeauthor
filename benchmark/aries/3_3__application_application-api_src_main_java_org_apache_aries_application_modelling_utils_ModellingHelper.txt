1:5ff083c: /**
1:5ff083c:  * Licensed to the Apache Software Foundation (ASF) under one
1:5ff083c:  * or more contributor license agreements.  See the NOTICE file
1:5ff083c:  * distributed with this work for additional information
1:5ff083c:  * regarding copyright ownership.  The ASF licenses this file
1:5ff083c:  * to you under the Apache License, Version 2.0 (the
1:5ff083c:  * "License"); you may not use this file except in compliance
1:5ff083c:  * with the License.  You may obtain a copy of the License at
1:5ff083c:  *
1:5ff083c:  *   http://www.apache.org/licenses/LICENSE-2.0
1:5ff083c:  *
1:5ff083c:  * Unless required by applicable law or agreed to in writing,
1:5ff083c:  * software distributed under the License is distributed on an
1:5ff083c:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:5ff083c:  * KIND, either express or implied.  See the License for the
1:5ff083c:  * specific language governing permissions and limitations
1:5ff083c:  * under the License.
1:5ff083c:  */
1:58f55bd: package org.apache.aries.application.modelling.utils;
1:58f55bd: 
1:58f55bd: import java.util.Collection;
1:58f55bd: import java.util.Map;
1:58f55bd: 
1:58f55bd: import org.apache.aries.application.InvalidAttributeException;
1:58f55bd: import org.apache.aries.application.modelling.DeployedBundles;
1:58f55bd: import org.apache.aries.application.modelling.ImportedBundle;
1:58f55bd: import org.apache.aries.application.modelling.ImportedPackage;
1:58f55bd: import org.apache.aries.application.modelling.ModelledResource;
1:58f55bd: import org.apache.aries.application.modelling.Provider;
1:58f55bd: 
1:58f55bd: /**
1:58f55bd:  * Useful functions associated with application modelling 
1:58f55bd:  *
1:58f55bd:  */
1:58f55bd: public interface ModellingHelper {
1:58f55bd: 
1:58f55bd:   /**
1:58f55bd:    * Check that all mandatory attributes from a Provider are specified by the consumer's attributes
1:58f55bd:    * @param consumerAttributes
1:58f55bd:    * @param p
1:58f55bd:    * @return true if all mandatory attributes are present, or no attributes are mandatory
1:58f55bd:    */
1:58f55bd:   boolean areMandatoryAttributesPresent(Map<String,String> consumerAttributes, Provider p);
1:58f55bd: 
1:58f55bd:   /**
1:58f55bd:    * Create an ImportedBundle from a Fragment-Host string
1:58f55bd:    * @param fragmentHostHeader
1:7ceb4ac:    * @return the imported bundle
1:58f55bd:    * @throws InvalidAttributeException
1:58f55bd:    */
1:58f55bd:   ImportedBundle buildFragmentHost(String fragmentHostHeader) throws InvalidAttributeException;
1:58f55bd:   
1:58f55bd:   /**
1:58f55bd:    * Create a new ImnportedPackage that is the intersection of the two supplied imports.
1:58f55bd:    * @param p1
1:58f55bd:    * @param p2
1:58f55bd:    * @return ImportedPackageImpl representing the intersection, or null. All attributes must match exactly.
1:58f55bd:    */
1:58f55bd:   ImportedPackage intersectPackage (ImportedPackage p1, ImportedPackage p2); 
1:58f55bd:     
1:58f55bd:   
1:58f55bd:   /**
1:58f55bd:    * Factory method for objects implementing the DeployedBundles interface
1:58f55bd:    *  
1:58f55bd:    */
1:58f55bd:   DeployedBundles createDeployedBundles (String assetName, Collection<ImportedBundle> appContentNames, 
1:58f55bd:       Collection<ImportedBundle> appUseBundleNames, Collection<ModelledResource> fakeServiceProvidingBundles);
1:58f55bd: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return the imported bundle
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:5ff083c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:58f55bd
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.modelling.utils;
1: 
1: import java.util.Collection;
1: import java.util.Map;
1: 
1: import org.apache.aries.application.InvalidAttributeException;
1: import org.apache.aries.application.modelling.DeployedBundles;
1: import org.apache.aries.application.modelling.ImportedBundle;
1: import org.apache.aries.application.modelling.ImportedPackage;
1: import org.apache.aries.application.modelling.ModelledResource;
1: import org.apache.aries.application.modelling.Provider;
1: 
1: /**
1:  * Useful functions associated with application modelling 
1:  *
1:  */
1: public interface ModellingHelper {
1: 
1:   /**
1:    * Check that all mandatory attributes from a Provider are specified by the consumer's attributes
1:    * @param consumerAttributes
1:    * @param p
1:    * @return true if all mandatory attributes are present, or no attributes are mandatory
1:    */
1:   boolean areMandatoryAttributesPresent(Map<String,String> consumerAttributes, Provider p);
1: 
1:   /**
1:    * Create an ImportedBundle from a Fragment-Host string
1:    * @param fragmentHostHeader
0:    * @return
1:    * @throws InvalidAttributeException
1:    */
1:   ImportedBundle buildFragmentHost(String fragmentHostHeader) throws InvalidAttributeException;
1:   
1:   /**
1:    * Create a new ImnportedPackage that is the intersection of the two supplied imports.
1:    * @param p1
1:    * @param p2
1:    * @return ImportedPackageImpl representing the intersection, or null. All attributes must match exactly.
1:    */
1:   ImportedPackage intersectPackage (ImportedPackage p1, ImportedPackage p2); 
1:     
1:   
1:   /**
1:    * Factory method for objects implementing the DeployedBundles interface
1:    *  
1:    */
1:   DeployedBundles createDeployedBundles (String assetName, Collection<ImportedBundle> appContentNames, 
1:       Collection<ImportedBundle> appUseBundleNames, Collection<ModelledResource> fakeServiceProvidingBundles);
1: }
============================================================================