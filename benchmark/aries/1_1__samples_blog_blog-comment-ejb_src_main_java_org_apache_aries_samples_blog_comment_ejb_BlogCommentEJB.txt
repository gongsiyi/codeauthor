1:51d13b3: /**
1:51d13b3:  * Licensed to the Apache Software Foundation (ASF) under one
1:51d13b3:  * or more contributor license agreements.  See the NOTICE file
1:51d13b3:  * distributed with this work for additional information
1:51d13b3:  * regarding copyright ownership.  The ASF licenses this file
1:51d13b3:  * to you under the Apache License, Version 2.0 (the
1:51d13b3:  * "License"); you may not use this file except in compliance
1:51d13b3:  * with the License.  You may obtain a copy of the License at
1:51d13b3:  *
1:51d13b3:  *   http://www.apache.org/licenses/LICENSE-2.0
1:51d13b3:  *
1:51d13b3:  * Unless required by applicable law or agreed to in writing,
1:51d13b3:  * software distributed under the License is distributed on an
1:51d13b3:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:51d13b3:  * KIND, either express or implied.  See the License for the
1:51d13b3:  * specific language governing permissions and limitations
1:51d13b3:  * under the License.
1:51d13b3:  */
1:51d13b3: package org.apache.aries.samples.blog.comment.ejb;
1:51d13b3: 
1:51d13b3: import java.util.List;
1:51d13b3: 
1:51d13b3: import javax.ejb.Stateless;
1:51d13b3: import javax.persistence.EntityManager;
1:51d13b3: import javax.persistence.PersistenceContext;
1:51d13b3: import javax.persistence.TypedQuery;
1:51d13b3: 
1:51d13b3: import org.apache.aries.samples.blog.api.comment.persistence.BlogCommentService;
1:51d13b3: import org.apache.aries.samples.blog.api.comment.persistence.Comment;
1:51d13b3: 
1:51d13b3: @Stateless(name="Commenting")
1:51d13b3: public class BlogCommentEJB implements BlogCommentService {
1:51d13b3: 
1:51d13b3:   @PersistenceContext(unitName="blogComments")
1:51d13b3:   private EntityManager commentEM;
1:51d13b3:   
1:51d13b3:   public void createComment(String comment, String author, long entryId) {
1:51d13b3:     
1:51d13b3:     commentEM.persist(new CommentImpl(comment, author, entryId));
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public void delete(int id) {
1:51d13b3:     
1:51d13b3:     CommentImpl c = commentEM.find(CommentImpl.class, id);
1:51d13b3:     
1:51d13b3:     if(c != null)
1:51d13b3:       commentEM.remove(c);
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   
1:51d13b3:   public List<? extends Comment> getCommentsForAuthor(String authorId) {
1:51d13b3:     
1:51d13b3:     TypedQuery<CommentImpl> q = commentEM.createQuery(
1:51d13b3:         "SELECT c FROM Comment c WHERE c.authorId = :authorId", CommentImpl.class);
1:51d13b3:     
1:51d13b3:     q.setParameter("authorId", authorId);
1:51d13b3:     
1:51d13b3:     return q.getResultList();
1:51d13b3:   }
1:51d13b3: 
1:51d13b3:   public List<? extends Comment> getCommentsForEntry(long entryId) {
1:51d13b3: 
1:51d13b3:     TypedQuery<CommentImpl> q = commentEM.createQuery(
1:51d13b3:           "SELECT c FROM Comment c WHERE c.entryId = :entryId", CommentImpl.class);
1:51d13b3:     q.setParameter("entryId", entryId);
1:51d13b3:       
1:51d13b3:     return q.getResultList();
1:51d13b3:   }
1:51d13b3: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:51d13b3
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.blog.comment.ejb;
1: 
1: import java.util.List;
1: 
1: import javax.ejb.Stateless;
1: import javax.persistence.EntityManager;
1: import javax.persistence.PersistenceContext;
1: import javax.persistence.TypedQuery;
1: 
1: import org.apache.aries.samples.blog.api.comment.persistence.BlogCommentService;
1: import org.apache.aries.samples.blog.api.comment.persistence.Comment;
1: 
1: @Stateless(name="Commenting")
1: public class BlogCommentEJB implements BlogCommentService {
1: 
1:   @PersistenceContext(unitName="blogComments")
1:   private EntityManager commentEM;
1:   
1:   public void createComment(String comment, String author, long entryId) {
1:     
1:     commentEM.persist(new CommentImpl(comment, author, entryId));
1:   }
1: 
1:   public void delete(int id) {
1:     
1:     CommentImpl c = commentEM.find(CommentImpl.class, id);
1:     
1:     if(c != null)
1:       commentEM.remove(c);
1:   }
1: 
1:   
1:   public List<? extends Comment> getCommentsForAuthor(String authorId) {
1:     
1:     TypedQuery<CommentImpl> q = commentEM.createQuery(
1:         "SELECT c FROM Comment c WHERE c.authorId = :authorId", CommentImpl.class);
1:     
1:     q.setParameter("authorId", authorId);
1:     
1:     return q.getResultList();
1:   }
1: 
1:   public List<? extends Comment> getCommentsForEntry(long entryId) {
1: 
1:     TypedQuery<CommentImpl> q = commentEM.createQuery(
1:           "SELECT c FROM Comment c WHERE c.entryId = :entryId", CommentImpl.class);
1:     q.setParameter("entryId", entryId);
1:       
1:     return q.getResultList();
1:   }
1: }
============================================================================