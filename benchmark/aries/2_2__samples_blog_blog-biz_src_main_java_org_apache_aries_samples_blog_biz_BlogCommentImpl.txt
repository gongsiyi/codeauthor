1:bb9ffe7: /**
1:bb9ffe7:  * Licensed to the Apache Software Foundation (ASF) under one
1:bb9ffe7:  * or more contributor license agreements.  See the NOTICE file
1:bb9ffe7:  * distributed with this work for additional information
1:bb9ffe7:  * regarding copyright ownership.  The ASF licenses this file
1:bb9ffe7:  * to you under the Apache License, Version 2.0 (the
1:bb9ffe7:  * "License"); you may not use this file except in compliance
1:bb9ffe7:  * with the License.  You may obtain a copy of the License at
1:bb9ffe7:  *
1:bb9ffe7:  *   http://www.apache.org/licenses/LICENSE-2.0
1:bb9ffe7:  *
1:bb9ffe7:  * Unless required by applicable law or agreed to in writing,
1:bb9ffe7:  * software distributed under the License is distributed on an
1:bb9ffe7:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:bb9ffe7:  * KIND, either express or implied.  See the License for the
1:bb9ffe7:  * specific language governing permissions and limitations
1:bb9ffe7:  * under the License.
1:bb9ffe7:  */
1:e0beeec: package org.apache.aries.samples.blog.biz;
1:bb9ffe7: 
1:bb9ffe7: import java.util.Date;
1:bb9ffe7: import java.util.Calendar;
1:bb9ffe7: 
1:bb9ffe7: import org.apache.aries.samples.blog.api.BlogAuthor;
1:bb9ffe7: import org.apache.aries.samples.blog.api.BlogComment;
1:bb9ffe7: import org.apache.aries.samples.blog.api.BlogEntry;
1:380a6c0: import org.apache.aries.samples.blog.api.comment.persistence.Comment;
1:bb9ffe7: 
1:bb9ffe7: 
1:bb9ffe7: public class BlogCommentImpl implements BlogComment {
1:bb9ffe7: 	private static Calendar cal = Calendar.getInstance();
1:bb9ffe7: 	
1:bb9ffe7: 	private Comment comment;
1:bb9ffe7: 	
1:bb9ffe7: 	public BlogCommentImpl(Comment c) {
1:bb9ffe7: 		 comment = c;
1:bb9ffe7: 	}
1:bb9ffe7:   /** Get comment 
1:bb9ffe7:    *  @return the String representing the comment 
1:bb9ffe7:    */
1:bb9ffe7:   public String getComment() {
1:bb9ffe7: 	  return comment.getComment();
1:bb9ffe7:   }
1:bb9ffe7:   
1:bb9ffe7:   /** Get the author of the comment 
1:bb9ffe7:    *  @return the BlogAuthor instance 
1:bb9ffe7:    */
1:bb9ffe7:   public BlogAuthor getAuthor() {
1:bb9ffe7: 	  return new BlogAuthorImpl(comment.getAuthor());
1:bb9ffe7:   }
1:bb9ffe7:   
1:bb9ffe7:   /** Get the parent blog post for the comment 
1:bb9ffe7:    *  @return the BlogPost instance the comment is attached to.  
1:bb9ffe7:    */
1:bb9ffe7:   public BlogEntry getEntry() {
1:bb9ffe7: 	  return new BlogEntryImpl(comment.getEntry());
1:bb9ffe7:   }
1:bb9ffe7: 
1:bb9ffe7:   /** Get the Id value of the comment 
1:bb9ffe7:    *  @return the integer id of the comment 
1:bb9ffe7:    */
1:bb9ffe7:   public int getId() {
1:bb9ffe7: 	  return comment.getId();
1:bb9ffe7:   }
1:bb9ffe7:   
1:bb9ffe7:   /** Get the creation date for the comment 
1:bb9ffe7:    *  @return the String representation of the date the comment was
1:bb9ffe7:    *  created in dd-mm-yyyy format. 
1:bb9ffe7:    */
1:bb9ffe7:   public String getCommentCreationDate() {
1:bb9ffe7: 	  
1:bb9ffe7: 	  Date dc = comment.getCreationDate();
1:bb9ffe7: 	  int year;
1:bb9ffe7: 		int month;
1:bb9ffe7: 		int date;
1:bb9ffe7: 
1:bb9ffe7: 		synchronized (cal) {
1:bb9ffe7: 			cal.setTime(dc);
1:bb9ffe7: 			year = cal.get(Calendar.YEAR);
1:bb9ffe7: 			month = cal.get(Calendar.MONTH) + 1;
1:bb9ffe7: 			date = cal.get(Calendar.DATE);
1:bb9ffe7: 		}
1:bb9ffe7: 
1:bb9ffe7: 		return year + "-" + month + "-" + date;
1:bb9ffe7: 
1:bb9ffe7:   }
1:bb9ffe7:   
1:bb9ffe7: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:380a6c0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.blog.api.comment.persistence.Comment;
commit:e0beeec
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.blog.biz;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.samples.blog.api.comment.persistence.api.Comment;
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:afa98ec
commit:607acfe
commit:bb9ffe7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.samples.blog;
1: 
1: import java.util.Date;
1: import java.util.Calendar;
1: 
1: import org.apache.aries.samples.blog.api.BlogAuthor;
1: import org.apache.aries.samples.blog.api.BlogComment;
1: import org.apache.aries.samples.blog.api.BlogEntry;
0: import org.apache.aries.samples.blog.comment.persistence.api.Comment;
1: 
1: 
1: public class BlogCommentImpl implements BlogComment {
1: 	private static Calendar cal = Calendar.getInstance();
1: 	
1: 	private Comment comment;
1: 	
1: 	public BlogCommentImpl(Comment c) {
1: 		 comment = c;
1: 	}
1:   /** Get comment 
1:    *  @return the String representing the comment 
1:    */
1:   public String getComment() {
1: 	  return comment.getComment();
1:   }
1:   
1:   /** Get the author of the comment 
1:    *  @return the BlogAuthor instance 
1:    */
1:   public BlogAuthor getAuthor() {
1: 	  return new BlogAuthorImpl(comment.getAuthor());
1:   }
1:   
1:   /** Get the parent blog post for the comment 
1:    *  @return the BlogPost instance the comment is attached to.  
1:    */
1:   public BlogEntry getEntry() {
1: 	  return new BlogEntryImpl(comment.getEntry());
1:   }
1: 
1:   /** Get the Id value of the comment 
1:    *  @return the integer id of the comment 
1:    */
1:   public int getId() {
1: 	  return comment.getId();
1:   }
1:   
1:   /** Get the creation date for the comment 
1:    *  @return the String representation of the date the comment was
1:    *  created in dd-mm-yyyy format. 
1:    */
1:   public String getCommentCreationDate() {
1: 	  
1: 	  Date dc = comment.getCreationDate();
1: 	  int year;
1: 		int month;
1: 		int date;
1: 
1: 		synchronized (cal) {
1: 			cal.setTime(dc);
1: 			year = cal.get(Calendar.YEAR);
1: 			month = cal.get(Calendar.MONTH) + 1;
1: 			date = cal.get(Calendar.DATE);
1: 		}
1: 
1: 		return year + "-" + month + "-" + date;
1: 
1:   }
1:   
1: }
============================================================================