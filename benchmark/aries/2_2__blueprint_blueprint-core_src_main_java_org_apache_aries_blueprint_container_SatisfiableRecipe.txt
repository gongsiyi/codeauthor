1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.container;
1:f13c6ac: 
1:6414875: import org.apache.aries.blueprint.di.Recipe;
1:f13c6ac: 
1:f13c6ac: /**
1:de68801:  * Interface used to describe an object which can satisfy a constraint or not.
1:f13c6ac:  *
1:f13c6ac:  * If the state of the object changes, registered SatisfactionListener objects
1:f13c6ac:  * will be notified of the change.
1:f13c6ac:  *
1:76b662a:  * @version $Rev$, $Date$
1:f13c6ac:  */
1:f13c6ac: public interface SatisfiableRecipe extends Recipe {
1:f13c6ac: 
1:f13c6ac:     /**
1:f13c6ac:      * A listener that will be notified when the constraint satisfaction changes.
1:f13c6ac:      *
1:76b662a:      * @version $Rev$, $Date$
1:f13c6ac:      */
1:f13c6ac:     public interface SatisfactionListener {
1:f13c6ac: 
1:f13c6ac:         void notifySatisfaction(SatisfiableRecipe satisfiable);
1:f13c6ac: 
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     void start(SatisfactionListener listener);
1:f13c6ac:     
1:f13c6ac:     void stop();
1:f13c6ac:     
1:f13c6ac:     boolean isSatisfied();
1:f13c6ac: 
1:f13c6ac:     String getOsgiFilter();
1:f13c6ac: 
1:f13c6ac: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:76b662a
/////////////////////////////////////////////////////////////////////////
1:  * @version $Rev$, $Date$
1:      * @version $Rev$, $Date$
commit:de68801
/////////////////////////////////////////////////////////////////////////
1:  * Interface used to describe an object which can satisfy a constraint or not.
/////////////////////////////////////////////////////////////////////////
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.container;
1: import org.apache.aries.blueprint.di.Recipe;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint.container;
1: 
0: import org.apache.geronimo.blueprint.di.Recipe;
1: 
1: /**
0:  * Interface used to desribe an object which can satisfy a constraint or not.
1:  *
1:  * If the state of the object changes, registered SatisfactionListener objects
1:  * will be notified of the change.
1:  *
0:  * @author <a href="mailto:dev@geronimo.apache.org">Apache Geronimo Project</a>
0:  * @version $Rev: 760378 $, $Date: 2009-03-31 11:31:38 +0200 (Tue, 31 Mar 2009) $
1:  */
1: public interface SatisfiableRecipe extends Recipe {
1: 
1:     /**
1:      * A listener that will be notified when the constraint satisfaction changes.
1:      *
0:      * @author <a href="mailto:dev@geronimo.apache.org">Apache Geronimo Project</a>
0:      * @version $Rev: 760378 $, $Date: 2009-03-31 11:31:38 +0200 (Tue, 31 Mar 2009) $
1:      */
1:     public interface SatisfactionListener {
1: 
1:         void notifySatisfaction(SatisfiableRecipe satisfiable);
1: 
1:     }
1: 
1:     void start(SatisfactionListener listener);
1:     
1:     void stop();
1:     
1:     boolean isSatisfied();
1: 
1:     String getOsgiFilter();
1: 
1: }
============================================================================