1:ca23c31: /*
1:ca23c31:  * Licensed to the Apache Software Foundation (ASF) under one
1:ca23c31:  * or more contributor license agreements.  See the NOTICE file
1:ca23c31:  * distributed with this work for additional information
1:ca23c31:  * regarding copyright ownership.  The ASF licenses this file
1:ca23c31:  * to you under the Apache License, Version 2.0 (the
1:ca23c31:  * "License"); you may not use this file except in compliance
1:ca23c31:  * with the License.  You may obtain a copy of the License at
1:ca23c31:  *
1:ca23c31:  *   http://www.apache.org/licenses/LICENSE-2.0
1:ca23c31:  *
1:ca23c31:  * Unless required by applicable law or agreed to in writing,
1:ca23c31:  * software distributed under the License is distributed on an
1:ca23c31:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:ca23c31:  * KIND, either express or implied.  See the License for the
1:ca23c31:  * specific language governing permissions and limitations
1:ca23c31:  * under the License.
1:ca23c31:  */
1:ca23c31: package org.apache.aries.transaction.jdbc.internal;
1:ca23c31: 
1:b31f5f9: import javax.resource.spi.TransactionSupport;
1:ca23c31: import javax.sql.DataSource;
1:ca23c31: 
1:ca23c31: import org.tranql.connector.jdbc.AbstractLocalDataSourceMCF;
1:ca23c31: 
1:ca23c31: public class DataSourceMCFFactory extends AbstractMCFFactory {
1:ca23c31: 
1:ca23c31:     @Override
1:ca23c31:     public void init() throws Exception {
1:ca23c31:         if (getDataSource() == null) {
1:ca23c31:             throw new IllegalArgumentException("dataSource must be set");
1:ca23c31:         }
1:ca23c31:         if (connectionFactory == null) {
1:ca23c31:             connectionFactory = new DataSourceMCF();
1:ca23c31:         }
1:ca23c31:     }
1:ca23c31: 
1:8047ebe:     @SuppressWarnings("serial")
1:b31f5f9:     public class DataSourceMCF extends AbstractLocalDataSourceMCF<DataSource> implements TransactionSupport {
1:ca23c31:         public DataSourceMCF() {
1:ca23c31:             super((DataSource) DataSourceMCFFactory.this.getDataSource(), DataSourceMCFFactory.this.getExceptionSorter(), true);
1:ca23c31:         }
1:ca23c31: 
1:ca23c31:         public String getUserName() {
1:ca23c31:             return DataSourceMCFFactory.this.getUserName();
1:ca23c31:         }
1:ca23c31: 
1:ca23c31:         public String getPassword() {
1:ca23c31:             return DataSourceMCFFactory.this.getPassword();
1:ca23c31:         }
1:b31f5f9: 
1:b31f5f9:         @Override
1:b31f5f9:         public TransactionSupportLevel getTransactionSupport() {
1:b31f5f9:             return TransactionSupportLevel.LocalTransaction;
1:b31f5f9:         }
1:ca23c31:     }
1:ca23c31: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:8047ebe
/////////////////////////////////////////////////////////////////////////
1:     @SuppressWarnings("serial")
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:b31f5f9
/////////////////////////////////////////////////////////////////////////
1: import javax.resource.spi.TransactionSupport;
/////////////////////////////////////////////////////////////////////////
1:     public class DataSourceMCF extends AbstractLocalDataSourceMCF<DataSource> implements TransactionSupport {
/////////////////////////////////////////////////////////////////////////
1: 
1:         @Override
1:         public TransactionSupportLevel getTransactionSupport() {
1:             return TransactionSupportLevel.LocalTransaction;
1:         }
commit:ca23c31
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.transaction.jdbc.internal;
1: 
1: import javax.sql.DataSource;
1: 
1: import org.tranql.connector.jdbc.AbstractLocalDataSourceMCF;
1: 
1: public class DataSourceMCFFactory extends AbstractMCFFactory {
1: 
1:     @Override
1:     public void init() throws Exception {
1:         if (getDataSource() == null) {
1:             throw new IllegalArgumentException("dataSource must be set");
1:         }
1:         if (connectionFactory == null) {
1:             connectionFactory = new DataSourceMCF();
1:         }
1:     }
1: 
0:     public class DataSourceMCF extends AbstractLocalDataSourceMCF<DataSource> {
1:         public DataSourceMCF() {
1:             super((DataSource) DataSourceMCFFactory.this.getDataSource(), DataSourceMCFFactory.this.getExceptionSorter(), true);
1:         }
1: 
1:         public String getUserName() {
1:             return DataSourceMCFFactory.this.getUserName();
1:         }
1: 
1:         public String getPassword() {
1:             return DataSourceMCFFactory.this.getPassword();
1:         }
1:     }
1: }
============================================================================