1:798ba3b: /*
1:798ba3b:  * Licensed to the Apache Software Foundation (ASF) under one
1:798ba3b:  * or more contributor license agreements.  See the NOTICE file
1:798ba3b:  * distributed with this work for additional information
1:798ba3b:  * regarding copyright ownership.  The ASF licenses this file
1:798ba3b:  * to you under the Apache License, Version 2.0 (the
1:798ba3b:  * "License"); you may not use this file except in compliance
1:798ba3b:  * with the License.  You may obtain a copy of the License at
1:798ba3b:  *
1:798ba3b:  *   http://www.apache.org/licenses/LICENSE-2.0
1:798ba3b:  *
1:798ba3b:  * Unless required by applicable law or agreed to in writing,
1:798ba3b:  * software distributed under the License is distributed on an
1:798ba3b:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:798ba3b:  * KIND, either express or implied.  See the License for the
1:798ba3b:  * specific language governing permissions and limitations
1:798ba3b:  * under the License.
1:798ba3b:  */
1:798ba3b: package org.apache.aries.jpa.impl;
1:798ba3b: 
1:798ba3b: import java.util.ArrayDeque;
1:798ba3b: import java.util.Collection;
1:798ba3b: 
1:798ba3b: import org.osgi.service.coordinator.Coordination;
1:798ba3b: import org.osgi.service.coordinator.Coordinator;
1:798ba3b: import org.osgi.service.coordinator.Participant;
1:798ba3b: 
1:798ba3b: public class DummyCoordinator implements Coordinator {
1:798ba3b: 
1:e809e9c:     private java.util.Deque<Coordination> coordinations = new ArrayDeque<Coordination>();
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public Coordination create(String name, long timeMillis) {
1:798ba3b:         throw new IllegalStateException();
1:798ba3b:     }
1:798ba3b:     
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public Coordination begin(String name, long timeMillis) {
1:798ba3b:         Coordination oldCoordination = coordinations.peekLast();
1:798ba3b:         Coordination coordination = new DummyCoordination(oldCoordination);
1:798ba3b:         this.coordinations.push(coordination);
1:798ba3b:         return coordination;
1:798ba3b:     }
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public Coordination peek() {
1:798ba3b:         return coordinations.peek();
1:798ba3b:     }
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public Coordination pop() {
1:798ba3b:         return coordinations.pop();
1:798ba3b:     }
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public boolean fail(Throwable cause) {
1:798ba3b:         return false;
1:798ba3b:     }
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public boolean addParticipant(Participant participant) {
1:798ba3b:         return false;
1:798ba3b:     }
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public Collection<Coordination> getCoordinations() {
1:798ba3b:         return null;
1:798ba3b:     }
1:798ba3b: 
1:798ba3b:     @Override
1:798ba3b:     public Coordination getCoordination(long id) {
1:798ba3b:         return null;
1:798ba3b:     }
1:798ba3b: 
1:798ba3b: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:e809e9c
/////////////////////////////////////////////////////////////////////////
1:     private java.util.Deque<Coordination> coordinations = new ArrayDeque<Coordination>();
commit:798ba3b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.jpa.impl;
1: 
1: import java.util.ArrayDeque;
1: import java.util.Collection;
1: 
1: import org.osgi.service.coordinator.Coordination;
1: import org.osgi.service.coordinator.Coordinator;
1: import org.osgi.service.coordinator.Participant;
1: 
1: public class DummyCoordinator implements Coordinator {
1: 
0:     private java.util.Deque<Coordination> coordinations = new ArrayDeque<>();
1: 
1:     @Override
1:     public Coordination create(String name, long timeMillis) {
1:         throw new IllegalStateException();
1:     }
1:     
1: 
1:     @Override
1:     public Coordination begin(String name, long timeMillis) {
1:         Coordination oldCoordination = coordinations.peekLast();
1:         Coordination coordination = new DummyCoordination(oldCoordination);
1:         this.coordinations.push(coordination);
1:         return coordination;
1:     }
1: 
1:     @Override
1:     public Coordination peek() {
1:         return coordinations.peek();
1:     }
1: 
1:     @Override
1:     public Coordination pop() {
1:         return coordinations.pop();
1:     }
1: 
1:     @Override
1:     public boolean fail(Throwable cause) {
1:         return false;
1:     }
1: 
1:     @Override
1:     public boolean addParticipant(Participant participant) {
1:         return false;
1:     }
1: 
1:     @Override
1:     public Collection<Coordination> getCoordinations() {
1:         return null;
1:     }
1: 
1:     @Override
1:     public Coordination getCoordination(long id) {
1:         return null;
1:     }
1: 
1: }
============================================================================