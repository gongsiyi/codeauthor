1:6c69a67: /*
1:6c69a67:  * Licensed under the Apache License, Version 2.0 (the "License");
1:6c69a67:  * you may not use this file except in compliance with the License.
1:6c69a67:  * You may obtain a copy of the License at
1:6c69a67:  *
1:6c69a67:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6c69a67:  *
1:6c69a67:  * Unless required by applicable law or agreed to in writing, software
1:6c69a67:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6c69a67:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6c69a67:  * See the License for the specific language governing permissions and
1:6c69a67:  * limitations under the License.
1:6c69a67:  */
1:7a834c3: package org.apache.aries.subsystem.util.felix;
1:6c69a67: 
1:6c69a67: import java.util.HashSet;
1:6c69a67: import java.util.List;
1:6c69a67: import java.util.Map;
1:6c69a67: import java.util.Set;
1:6c69a67: 
1:6c69a67: import org.apache.felix.bundlerepository.Property;
1:6c69a67: import org.osgi.framework.Version;
1:6c69a67: 
1:6c69a67: public class FelixProperty implements Property {
1:6c69a67: 	private static Set<?> asSet(List<?> list) {
1:6c69a67: 		return new HashSet<Object>(list);
1:6c69a67: 	}
1:6c69a67: 	
1:6c69a67: 	private final String name;
1:6c69a67: 	private final Object value;
1:6c69a67: 	
1:6c69a67: 	public FelixProperty(String name, Object value) {
1:6c69a67: 		if (name == null)
1:6c69a67: 			throw new NullPointerException("Missing required parameter: name");
1:6c69a67: 		if (value == null)
1:6c69a67: 			throw new NullPointerException("Missing required parameter: value");
1:6c69a67: 		this.name = name;
1:6c69a67: 		this.value = value;
1:6c69a67: 	}
1:6c69a67: 	
1:6c69a67: 	public FelixProperty(Map.Entry<String, Object> entry) {
1:6c69a67: 		this(entry.getKey(), entry.getValue());
1:6c69a67: 	}
1:6c69a67: 
1:6c69a67: 	public Object getConvertedValue() {
1:6c69a67: 		if (value instanceof List)
1:6c69a67: 			return asSet((List<?>)value);
1:6c69a67: 		return value;
1:6c69a67: 	}
1:6c69a67: 
1:6c69a67: 	public String getName() {
1:6c69a67: 		return name;
1:6c69a67: 	}
1:6c69a67: 
1:6c69a67: 	public String getType() {
1:6c69a67: 		if (value instanceof Version)
1:6c69a67: 			return Property.VERSION;
1:6c69a67: 		if (value instanceof Long)
1:6c69a67: 			return Property.LONG;
1:6c69a67: 		if (value instanceof Double)
1:6c69a67: 			return Property.DOUBLE;
1:6c69a67: 		if (value instanceof List<?>)
1:6c69a67: 			return Property.SET;
1:6c69a67: 		return null;
1:6c69a67: 	}
1:6c69a67: 
1:6c69a67: 	public String getValue() {
1:6c69a67: 		return String.valueOf(value);
1:6c69a67: 	}
1:6c69a67: 
1:6c69a67: }
============================================================================
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:7a834c3
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.util.felix;
author:John Ross
-------------------------------------------------------------------------------
commit:6c69a67
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.aries.subsystem.obr.internal;
1: 
1: import java.util.HashSet;
1: import java.util.List;
1: import java.util.Map;
1: import java.util.Set;
1: 
1: import org.apache.felix.bundlerepository.Property;
1: import org.osgi.framework.Version;
1: 
1: public class FelixProperty implements Property {
1: 	private static Set<?> asSet(List<?> list) {
1: 		return new HashSet<Object>(list);
1: 	}
1: 	
1: 	private final String name;
1: 	private final Object value;
1: 	
1: 	public FelixProperty(String name, Object value) {
1: 		if (name == null)
1: 			throw new NullPointerException("Missing required parameter: name");
1: 		if (value == null)
1: 			throw new NullPointerException("Missing required parameter: value");
1: 		this.name = name;
1: 		this.value = value;
1: 	}
1: 	
1: 	public FelixProperty(Map.Entry<String, Object> entry) {
1: 		this(entry.getKey(), entry.getValue());
1: 	}
1: 
1: 	public Object getConvertedValue() {
1: 		if (value instanceof List)
1: 			return asSet((List<?>)value);
1: 		return value;
1: 	}
1: 
1: 	public String getName() {
1: 		return name;
1: 	}
1: 
1: 	public String getType() {
1: 		if (value instanceof Version)
1: 			return Property.VERSION;
1: 		if (value instanceof Long)
1: 			return Property.LONG;
1: 		if (value instanceof Double)
1: 			return Property.DOUBLE;
1: 		if (value instanceof List<?>)
1: 			return Property.SET;
1: 		return null;
1: 	}
1: 
1: 	public String getValue() {
1: 		return String.valueOf(value);
1: 	}
1: 
1: }
============================================================================