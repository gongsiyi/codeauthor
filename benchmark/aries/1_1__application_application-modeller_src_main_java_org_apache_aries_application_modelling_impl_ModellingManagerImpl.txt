1:58f55bd: /*
1:58f55bd:  * Licensed to the Apache Software Foundation (ASF) under one
1:58f55bd:  * or more contributor license agreements.  See the NOTICE file
1:58f55bd:  * distributed with this work for additional information
1:58f55bd:  * regarding copyright ownership.  The ASF licenses this file
1:58f55bd:  * to you under the Apache License, Version 2.0 (the
1:58f55bd:  * "License"); you may not use this file except in compliance
1:58f55bd:  * with the License.  You may obtain a copy of the License at
1:58f55bd:  *
1:58f55bd:  *   http://www.apache.org/licenses/LICENSE-2.0
1:58f55bd:  *
1:58f55bd:  * Unless required by applicable law or agreed to in writing,
1:58f55bd:  * software distributed under the License is distributed on an
1:58f55bd:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:58f55bd:  * KIND, either express or implied.  See the License for the
1:58f55bd:  * specific language governing permissions and limitations
1:58f55bd:  * under the License.
1:58f55bd:  */
1:58f55bd: package org.apache.aries.application.modelling.impl;
1:58f55bd: 
1:58f55bd: import java.util.Collection;
1:58f55bd: import java.util.Map;
1:58f55bd: import java.util.jar.Attributes;
1:58f55bd: 
1:58f55bd: import org.apache.aries.application.InvalidAttributeException;
1:58f55bd: import org.apache.aries.application.management.BundleInfo;
1:58f55bd: import org.apache.aries.application.modelling.ExportedBundle;
1:58f55bd: import org.apache.aries.application.modelling.ExportedPackage;
1:58f55bd: import org.apache.aries.application.modelling.ExportedService;
1:58f55bd: import org.apache.aries.application.modelling.ImportedBundle;
1:58f55bd: import org.apache.aries.application.modelling.ImportedPackage;
1:58f55bd: import org.apache.aries.application.modelling.ImportedService;
1:58f55bd: import org.apache.aries.application.modelling.ModelledResource;
1:58f55bd: import org.apache.aries.application.modelling.ModellingManager;
1:58f55bd: import org.apache.aries.application.modelling.ParsedServiceElements;
1:297d1fb: import org.apache.aries.application.modelling.ResourceType;
1:58f55bd: 
1:58f55bd: public class ModellingManagerImpl implements ModellingManager
1:58f55bd: {
1:58f55bd: 
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedBundle(java.util.Map, org.apache.aries.application.modelling.ImportedBundle)
1:58f55bd:    */
1:58f55bd:   public ExportedBundle getExportedBundle(Map<String, String> attributes, ImportedBundle fragHost) {
1:58f55bd: 
1:58f55bd:     return new ExportedBundleImpl(attributes, fragHost);
1:58f55bd:   }
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedPackage(org.apache.aries.application.modelling.ModelledResource, java.lang.String, java.util.Map)
1:58f55bd:    */
1:58f55bd:   public ExportedPackage getExportedPackage(ModelledResource mr, String pkg, Map<String, Object> attributes)  {
1:58f55bd: 
1:58f55bd:     return new ExportedPackageImpl(mr, pkg, attributes);
1:58f55bd:   }
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedService(java.lang.String, int, java.util.Collection, java.util.Map)
1:58f55bd:    */
1:58f55bd:   public ExportedService getExportedService(String name, int ranking, Collection<String> ifaces, 
1:58f55bd:       Map<String, Object> serviceProperties ) {
1:58f55bd:     return new ExportedServiceImpl (name, ranking, ifaces, serviceProperties );
1:58f55bd:   }
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedService(java.lang.String, java.util.Map)
1:58f55bd:    */
1:58f55bd:   @SuppressWarnings("deprecation")
1:58f55bd:   public ExportedService getExportedService(String ifaceName, Map<String, String> attrs) {
1:58f55bd:     return new ExportedServiceImpl (ifaceName, attrs );
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedBundle(java.lang.String, java.util.Map)
1:58f55bd:    */
1:58f55bd:   public ImportedBundle getImportedBundle(String filterString, Map<String, String> attributes) throws InvalidAttributeException {
1:58f55bd:     return new ImportedBundleImpl(filterString, attributes);
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedBundle(java.lang.String, java.lang.String)
1:58f55bd:    */
1:58f55bd:   public ImportedBundle getImportedBundle(String bundleName, String versionRange) throws InvalidAttributeException {
1:58f55bd:     return new ImportedBundleImpl(bundleName, versionRange);
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedPackage(java.lang.String, java.util.Map)
1:58f55bd:    */
1:58f55bd:   public ImportedPackage getImportedPackage(String pkg, Map<String, String> attributes) throws InvalidAttributeException{
1:58f55bd:     return new ImportedPackageImpl(pkg, attributes);
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedService(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
1:58f55bd:    */
1:58f55bd:   public ImportedService getImportedService(boolean optional, String iface, String componentName, 
1:58f55bd:       String blueprintFilter, String id, boolean isMultiple) throws InvalidAttributeException{
1:58f55bd:     return new ImportedServiceImpl(optional, iface, componentName, blueprintFilter, id, isMultiple);
1:58f55bd:   }
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedService(java.lang.String, java.util.Map)
1:58f55bd:    */
1:58f55bd:   @SuppressWarnings("deprecation")
1:58f55bd:   public ImportedService getImportedService(String ifaceName, Map<String, String> attributes) throws InvalidAttributeException{
1:58f55bd:     return new ImportedServiceImpl(ifaceName, attributes);
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getModelledResource(java.lang.String, org.apache.aries.application.management.BundleInfo, java.util.Collection, java.util.Collection)
1:58f55bd:    */
1:58f55bd:   public ModelledResource getModelledResource(String fileURI, BundleInfo bundleInfo, 
1:58f55bd:       Collection<ImportedService> importedServices, 
1:58f55bd:       Collection<ExportedService> exportedServices) throws InvalidAttributeException {
1:58f55bd:     return new ModelledResourceImpl(fileURI, bundleInfo, importedServices, exportedServices);
1:58f55bd:     
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getModelledResource(java.lang.String, java.util.jar.Attributes, java.util.Collection, java.util.Collection)
1:58f55bd:    */
1:58f55bd:   public ModelledResource getModelledResource(String fileURI, Attributes bundleAttributes, 
1:58f55bd:       Collection<ImportedService> importedServices, 
1:58f55bd:       Collection<ExportedService> exportedServices) throws InvalidAttributeException {
1:58f55bd:     return new ModelledResourceImpl(fileURI, bundleAttributes, importedServices, exportedServices);
1:58f55bd:     
1:58f55bd:   }
1:58f55bd:   
1:58f55bd:   /* (non-Javadoc)
1:58f55bd:    * @see org.apache.aries.application.modelling.ModellingManager#getParsedServiceElements(java.util.Collection, java.util.Collection)
1:58f55bd:    */
1:58f55bd:   public ParsedServiceElements getParsedServiceElements ( Collection<ExportedService> services, 
1:58f55bd:       Collection<ImportedService> references) {
1:58f55bd:     return new ParsedServiceElementsImpl(services, references);
1:58f55bd:   }
1:297d1fb:   public ModelledResource getModelledResource(String fileURI,
1:297d1fb:       Attributes bundleAttributes, ExportedBundle exportedBundle,
1:297d1fb:       ResourceType resourceType, Collection<ImportedService> importedServices,
1:297d1fb:       Collection<ExportedService> exportedServices) throws InvalidAttributeException {
1:297d1fb:     return new ModelledResourceImpl(fileURI, bundleAttributes, exportedBundle, resourceType, importedServices, exportedServices);
1:297d1fb:   }
1:58f55bd: }
============================================================================
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:297d1fb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.modelling.ResourceType;
/////////////////////////////////////////////////////////////////////////
1:   public ModelledResource getModelledResource(String fileURI,
1:       Attributes bundleAttributes, ExportedBundle exportedBundle,
1:       ResourceType resourceType, Collection<ImportedService> importedServices,
1:       Collection<ExportedService> exportedServices) throws InvalidAttributeException {
1:     return new ModelledResourceImpl(fileURI, bundleAttributes, exportedBundle, resourceType, importedServices, exportedServices);
1:   }
commit:58f55bd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application.modelling.impl;
1: 
1: import java.util.Collection;
1: import java.util.Map;
1: import java.util.jar.Attributes;
1: 
1: import org.apache.aries.application.InvalidAttributeException;
1: import org.apache.aries.application.management.BundleInfo;
1: import org.apache.aries.application.modelling.ExportedBundle;
1: import org.apache.aries.application.modelling.ExportedPackage;
1: import org.apache.aries.application.modelling.ExportedService;
1: import org.apache.aries.application.modelling.ImportedBundle;
1: import org.apache.aries.application.modelling.ImportedPackage;
1: import org.apache.aries.application.modelling.ImportedService;
1: import org.apache.aries.application.modelling.ModelledResource;
1: import org.apache.aries.application.modelling.ModellingManager;
1: import org.apache.aries.application.modelling.ParsedServiceElements;
1: 
1: public class ModellingManagerImpl implements ModellingManager
1: {
1: 
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedBundle(java.util.Map, org.apache.aries.application.modelling.ImportedBundle)
1:    */
1:   public ExportedBundle getExportedBundle(Map<String, String> attributes, ImportedBundle fragHost) {
1: 
1:     return new ExportedBundleImpl(attributes, fragHost);
1:   }
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedPackage(org.apache.aries.application.modelling.ModelledResource, java.lang.String, java.util.Map)
1:    */
1:   public ExportedPackage getExportedPackage(ModelledResource mr, String pkg, Map<String, Object> attributes)  {
1: 
1:     return new ExportedPackageImpl(mr, pkg, attributes);
1:   }
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedService(java.lang.String, int, java.util.Collection, java.util.Map)
1:    */
1:   public ExportedService getExportedService(String name, int ranking, Collection<String> ifaces, 
1:       Map<String, Object> serviceProperties ) {
1:     return new ExportedServiceImpl (name, ranking, ifaces, serviceProperties );
1:   }
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getExportedService(java.lang.String, java.util.Map)
1:    */
1:   @SuppressWarnings("deprecation")
1:   public ExportedService getExportedService(String ifaceName, Map<String, String> attrs) {
1:     return new ExportedServiceImpl (ifaceName, attrs );
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedBundle(java.lang.String, java.util.Map)
1:    */
1:   public ImportedBundle getImportedBundle(String filterString, Map<String, String> attributes) throws InvalidAttributeException {
1:     return new ImportedBundleImpl(filterString, attributes);
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedBundle(java.lang.String, java.lang.String)
1:    */
1:   public ImportedBundle getImportedBundle(String bundleName, String versionRange) throws InvalidAttributeException {
1:     return new ImportedBundleImpl(bundleName, versionRange);
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedPackage(java.lang.String, java.util.Map)
1:    */
1:   public ImportedPackage getImportedPackage(String pkg, Map<String, String> attributes) throws InvalidAttributeException{
1:     return new ImportedPackageImpl(pkg, attributes);
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedService(boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)
1:    */
1:   public ImportedService getImportedService(boolean optional, String iface, String componentName, 
1:       String blueprintFilter, String id, boolean isMultiple) throws InvalidAttributeException{
1:     return new ImportedServiceImpl(optional, iface, componentName, blueprintFilter, id, isMultiple);
1:   }
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getImportedService(java.lang.String, java.util.Map)
1:    */
1:   @SuppressWarnings("deprecation")
1:   public ImportedService getImportedService(String ifaceName, Map<String, String> attributes) throws InvalidAttributeException{
1:     return new ImportedServiceImpl(ifaceName, attributes);
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getModelledResource(java.lang.String, org.apache.aries.application.management.BundleInfo, java.util.Collection, java.util.Collection)
1:    */
1:   public ModelledResource getModelledResource(String fileURI, BundleInfo bundleInfo, 
1:       Collection<ImportedService> importedServices, 
1:       Collection<ExportedService> exportedServices) throws InvalidAttributeException {
1:     return new ModelledResourceImpl(fileURI, bundleInfo, importedServices, exportedServices);
1:     
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getModelledResource(java.lang.String, java.util.jar.Attributes, java.util.Collection, java.util.Collection)
1:    */
1:   public ModelledResource getModelledResource(String fileURI, Attributes bundleAttributes, 
1:       Collection<ImportedService> importedServices, 
1:       Collection<ExportedService> exportedServices) throws InvalidAttributeException {
1:     return new ModelledResourceImpl(fileURI, bundleAttributes, importedServices, exportedServices);
1:     
1:   }
1:   
1:   /* (non-Javadoc)
1:    * @see org.apache.aries.application.modelling.ModellingManager#getParsedServiceElements(java.util.Collection, java.util.Collection)
1:    */
1:   public ParsedServiceElements getParsedServiceElements ( Collection<ExportedService> services, 
1:       Collection<ImportedService> references) {
1:     return new ParsedServiceElementsImpl(services, references);
1:   }
1: }
============================================================================