1:628add4: /**
1:628add4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:628add4:  *  contributor license agreements.  See the NOTICE file distributed with
1:628add4:  *  this work for additional information regarding copyright ownership.
1:628add4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:628add4:  *  (the "License"); you may not use this file except in compliance with
1:628add4:  *  the License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.util;
1:628add4: 
1:628add4: import java.math.BigDecimal;
1:628add4: 
1:628add4: public class FinancialUtils {
1:628add4:     //TODO -- FinancialUtils should have parts reimplemented as JSPTaglibs 
1:628add4: 
1:628add4:     public final static int ROUND = BigDecimal.ROUND_HALF_UP;
1:628add4:     public final static int SCALE = 2;  
1:628add4:     public final static BigDecimal ZERO = (new BigDecimal(0.00)).setScale(SCALE);
1:628add4:     public final static BigDecimal ONE = (new BigDecimal(1.00)).setScale(SCALE);
1:628add4:     public final static BigDecimal HUNDRED = (new BigDecimal(100.00)).setScale(SCALE);
1:628add4: 
1:628add4:     public static BigDecimal computeGain(BigDecimal currentBalance,
1:628add4:                                          BigDecimal openBalance) 
1:628add4:     {
1:628add4:         return currentBalance.subtract(openBalance).setScale(SCALE);
1:628add4:     }
1:628add4: 
1:628add4:     public static BigDecimal computeGainPercent(BigDecimal currentBalance,
1:628add4:                                                 BigDecimal openBalance) 
1:628add4:     {
1:628add4:         if (openBalance.doubleValue() == 0.0) return ZERO;
1:628add4:         BigDecimal gainPercent =
1:628add4:         currentBalance.divide(openBalance, ROUND).subtract(ONE).multiply(HUNDRED);
1:628add4:         return gainPercent;
1:628add4:     }
1:628add4: 
1:628add4:     public static String printGainHTML(BigDecimal gain) {
1:628add4:         String htmlString, arrow;
1:628add4:         if (gain.doubleValue() < 0.0) {
1:628add4:             htmlString = "<FONT color=\"#ff0000\">";
1:628add4:             arrow = "arrowdown.gif";
1:628add4:         }
1:628add4:         else {
1:628add4:             htmlString = "<FONT color=\"#009900\">";
1:628add4:             arrow = "arrowup.gif";          
1:628add4:         }
1:628add4: 
1:628add4:         htmlString += gain.setScale(SCALE, ROUND) + "</FONT><IMG src=\"images/" + arrow + "\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
1:628add4:         return htmlString;
1:628add4:     }
1:628add4: 
1:628add4:     public static String printChangeHTML(double change) {
1:628add4:         String htmlString, arrow;
1:628add4:         if (change < 0.0) {
1:628add4:             htmlString = "<FONT color=\"#ff0000\">";
1:628add4:             arrow = "arrowdown.gif";                        
1:628add4:         }
1:628add4:         else {
1:628add4:             htmlString = "<FONT color=\"#009900\">";
1:628add4:             arrow = "arrowup.gif";                      
1:628add4:         }
1:628add4: 
1:628add4: 
1:628add4:         htmlString += change + "</FONT><IMG src=\"images/" + arrow + "\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
1:628add4:         return htmlString;
1:628add4:     }
1:628add4: 
1:628add4:     public static String printGainPercentHTML(BigDecimal gain) {
1:628add4:         String htmlString, arrow;
1:628add4:         if (gain.doubleValue() < 0.0) {
1:628add4:             htmlString = "(<B><FONT color=\"#ff0000\">";
1:628add4:             arrow = "arrowdown.gif";                                    
1:628add4:         }
1:628add4:         else {
1:628add4:             htmlString = "(<B><FONT color=\"#009900\">+";
1:628add4:             arrow = "arrowup.gif";                                  
1:628add4:         }
1:628add4: 
1:628add4:         htmlString += gain.setScale(SCALE, ROUND);
1:628add4:         htmlString += "%</FONT></B>)<IMG src=\"images/" + arrow + "\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
1:628add4:         return htmlString;
1:628add4:     }
1:628add4: 
1:628add4:     public static String printQuoteLink(String symbol)  
1:628add4:     {
1:628add4:         return "<A href=\"app?action=quotes&symbols="+ symbol+"\">" + symbol + "</A>";
1:628add4:     }
1:628add4: 
1:628add4: 
1:628add4: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:b8c0170
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:989ba4e
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.util;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.util;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.util;
1: 
0: import java.util.Collection;
0: import java.util.Iterator;
1: import java.math.BigDecimal;
1: 
1: public class FinancialUtils {
1:     //TODO -- FinancialUtils should have parts reimplemented as JSPTaglibs 
1: 
1:     public final static int ROUND = BigDecimal.ROUND_HALF_UP;
1:     public final static int SCALE = 2;  
1:     public final static BigDecimal ZERO = (new BigDecimal(0.00)).setScale(SCALE);
1:     public final static BigDecimal ONE = (new BigDecimal(1.00)).setScale(SCALE);
1:     public final static BigDecimal HUNDRED = (new BigDecimal(100.00)).setScale(SCALE);
1: 
1:     public static BigDecimal computeGain(BigDecimal currentBalance,
1:                                          BigDecimal openBalance) 
1:     {
1:         return currentBalance.subtract(openBalance).setScale(SCALE);
1:     }
1: 
1:     public static BigDecimal computeGainPercent(BigDecimal currentBalance,
1:                                                 BigDecimal openBalance) 
1:     {
1:         if (openBalance.doubleValue() == 0.0) return ZERO;
1:         BigDecimal gainPercent =
1:         currentBalance.divide(openBalance, ROUND).subtract(ONE).multiply(HUNDRED);
1:         return gainPercent;
1:     }
1: 
1:     public static String printGainHTML(BigDecimal gain) {
1:         String htmlString, arrow;
1:         if (gain.doubleValue() < 0.0) {
1:             htmlString = "<FONT color=\"#ff0000\">";
1:             arrow = "arrowdown.gif";
1:         }
1:         else {
1:             htmlString = "<FONT color=\"#009900\">";
1:             arrow = "arrowup.gif";          
1:         }
1: 
1:         htmlString += gain.setScale(SCALE, ROUND) + "</FONT><IMG src=\"images/" + arrow + "\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
1:         return htmlString;
1:     }
1: 
1:     public static String printChangeHTML(double change) {
1:         String htmlString, arrow;
1:         if (change < 0.0) {
1:             htmlString = "<FONT color=\"#ff0000\">";
1:             arrow = "arrowdown.gif";                        
1:         }
1:         else {
1:             htmlString = "<FONT color=\"#009900\">";
1:             arrow = "arrowup.gif";                      
1:         }
1: 
1: 
1:         htmlString += change + "</FONT><IMG src=\"images/" + arrow + "\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
1:         return htmlString;
1:     }
1: 
1:     public static String printGainPercentHTML(BigDecimal gain) {
1:         String htmlString, arrow;
1:         if (gain.doubleValue() < 0.0) {
1:             htmlString = "(<B><FONT color=\"#ff0000\">";
1:             arrow = "arrowdown.gif";                                    
1:         }
1:         else {
1:             htmlString = "(<B><FONT color=\"#009900\">+";
1:             arrow = "arrowup.gif";                                  
1:         }
1: 
1:         htmlString += gain.setScale(SCALE, ROUND);
1:         htmlString += "%</FONT></B>)<IMG src=\"images/" + arrow + "\" width=\"10\" height=\"10\" border=\"0\"></IMG>";
1:         return htmlString;
1:     }
1: 
1:     public static String printQuoteLink(String symbol)  
1:     {
0:         String htmlString;
1:         return "<A href=\"app?action=quotes&symbols="+ symbol+"\">" + symbol + "</A>";
1:     }
1: 
1: 
1: }
============================================================================