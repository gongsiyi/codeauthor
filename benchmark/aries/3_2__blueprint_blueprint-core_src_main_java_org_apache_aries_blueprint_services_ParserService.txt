1:76b662a: /**
1:76b662a:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:76b662a:  *  contributor license agreements.  See the NOTICE file distributed with
1:76b662a:  *  this work for additional information regarding copyright ownership.
1:76b662a:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:76b662a:  *  (the "License"); you may not use this file except in compliance with
1:76b662a:  *  the License.  You may obtain a copy of the License at
1:76b662a:  *
1:76b662a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:76b662a:  *
1:76b662a:  *  Unless required by applicable law or agreed to in writing, software
1:76b662a:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:76b662a:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:76b662a:  *  See the License for the specific language governing permissions and
1:76b662a:  *  limitations under the License.
1:76b662a:  */
1:76b662a: 
1:09a7647: package org.apache.aries.blueprint.services;
1:76b662a: 
1:76b662a: import java.io.InputStream;
1:76b662a: import java.net.URL;
1:76b662a: import java.util.List;
1:76b662a: 
1:09a7647: import org.apache.aries.blueprint.ComponentDefinitionRegistry;
1:76b662a: import org.osgi.framework.Bundle;
1:76b662a: 
1:76b662a: public interface ParserService {
1:76b662a:   
1:76b662a:   /**
1:76b662a:    * Parse a single InputStream containing blueprint xml. No validation will be performed. The caller
1:76b662a:    * is responsible for closing the InputStream afterwards.  
1:76b662a:    * @param is           InputStream containing blueprint xml. 
1:76b662a:    * @param clientBundle The client's bundle 
1:76b662a:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser. 
1:76b662a:    * @throws Exception
1:76b662a:    */
1:76b662a:   ComponentDefinitionRegistry parse (InputStream is, Bundle clientBundle) throws Exception;
1:76b662a:   
1:76b662a:   /**
1:76b662a:    * Parse a single InputStream containing blueprint xml. The caller is responsible for 
1:76b662a:    * closing the InputStream afterwards.  
1:76b662a:    * @param is           Input stream containing blueprint xml
1:76b662a:    * @param clientBundle The client's bundle 
1:76b662a:    * @param validate     Indicates whether or not to validate the blueprint xml
1:76b662a:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser. 
1:76b662a:    * @throws Exception
1:76b662a:    */
1:76b662a:   ComponentDefinitionRegistry parse (InputStream is, Bundle clientBundle, boolean validate) throws Exception;
1:76b662a:   
1:76b662a:   /**
1:76b662a:    * Parse blueprint xml referred to by a single URL. No validation will be performed. 
1:76b662a:    * @param url          URL reference to the blueprint xml to parse
1:76b662a:    * @param clientBundle The client's bundle
1:76b662a:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:76b662a:    * @throws Exception
1:76b662a:    */
1:76b662a:   ComponentDefinitionRegistry parse (URL url, Bundle clientBundle) throws Exception;
1:76b662a:   
1:76b662a:   /**
1:76b662a:    * Parse blueprint xml referred to by a single URL.
1:76b662a:    * @param url          URL reference to the blueprint xml to parse
1:76b662a:    * @param clientBundle The client's bundle
1:76b662a:    * @param validate     Indicates whether or not to validate the blueprint xml
1:76b662a:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:76b662a:    * @throws Exception
1:76b662a:    */
1:76b662a:   ComponentDefinitionRegistry parse (URL url, Bundle clientBundle, boolean validate) throws Exception;
1:76b662a:   
1:76b662a:   /**
1:76b662a:    * Parse blueprint xml referred to by a list of URLs. No validation will be performed. 
1:76b662a:    * @param urls         URL reference to the blueprint xml to parse
1:76b662a:    * @param clientBundle The client's bundle
1:76b662a:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:76b662a:    * @throws Exception
1:76b662a:    */
1:76b662a: 	ComponentDefinitionRegistry parse (List<URL> urls, Bundle clientBundle) throws Exception;
1:76b662a: 	
1:76b662a:   /**
1:76b662a:    * Parse blueprint xml referred to by a list of URLs.
1:76b662a:    * @param urls         URL reference to the blueprint xml to parse
1:76b662a:    * @param clientBundle The client's bundle
1:76b662a:    * @param validate     Indicates whether or not to validate the blueprint xml
1:76b662a:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:76b662a:    * @throws Exception
1:76b662a:    */
1:76b662a: 	ComponentDefinitionRegistry parse (List<URL> urls, Bundle clientBundle, boolean validate) throws Exception;
1:76b662a: 	
1:76b662a: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:09a7647
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.services;
1: import org.apache.aries.blueprint.ComponentDefinitionRegistry;
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:76b662a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: 
0: package org.apache.aries.blueprint;
1: 
1: import java.io.InputStream;
1: import java.net.URL;
1: import java.util.List;
1: 
1: import org.osgi.framework.Bundle;
1: 
1: public interface ParserService {
1:   
1:   /**
1:    * Parse a single InputStream containing blueprint xml. No validation will be performed. The caller
1:    * is responsible for closing the InputStream afterwards.  
1:    * @param is           InputStream containing blueprint xml. 
1:    * @param clientBundle The client's bundle 
1:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser. 
1:    * @throws Exception
1:    */
1:   ComponentDefinitionRegistry parse (InputStream is, Bundle clientBundle) throws Exception;
1:   
1:   /**
1:    * Parse a single InputStream containing blueprint xml. The caller is responsible for 
1:    * closing the InputStream afterwards.  
1:    * @param is           Input stream containing blueprint xml
1:    * @param clientBundle The client's bundle 
1:    * @param validate     Indicates whether or not to validate the blueprint xml
1:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser. 
1:    * @throws Exception
1:    */
1:   ComponentDefinitionRegistry parse (InputStream is, Bundle clientBundle, boolean validate) throws Exception;
1:   
1:   /**
1:    * Parse blueprint xml referred to by a single URL. No validation will be performed. 
1:    * @param url          URL reference to the blueprint xml to parse
1:    * @param clientBundle The client's bundle
1:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:    * @throws Exception
1:    */
1:   ComponentDefinitionRegistry parse (URL url, Bundle clientBundle) throws Exception;
1:   
1:   /**
1:    * Parse blueprint xml referred to by a single URL.
1:    * @param url          URL reference to the blueprint xml to parse
1:    * @param clientBundle The client's bundle
1:    * @param validate     Indicates whether or not to validate the blueprint xml
1:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:    * @throws Exception
1:    */
1:   ComponentDefinitionRegistry parse (URL url, Bundle clientBundle, boolean validate) throws Exception;
1:   
1:   /**
1:    * Parse blueprint xml referred to by a list of URLs. No validation will be performed. 
1:    * @param urls         URL reference to the blueprint xml to parse
1:    * @param clientBundle The client's bundle
1:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:    * @throws Exception
1:    */
1: 	ComponentDefinitionRegistry parse (List<URL> urls, Bundle clientBundle) throws Exception;
1: 	
1:   /**
1:    * Parse blueprint xml referred to by a list of URLs.
1:    * @param urls         URL reference to the blueprint xml to parse
1:    * @param clientBundle The client's bundle
1:    * @param validate     Indicates whether or not to validate the blueprint xml
1:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
1:    * @throws Exception
1:    */
1: 	ComponentDefinitionRegistry parse (List<URL> urls, Bundle clientBundle, boolean validate) throws Exception;
1: 	
1: }
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:9d16c7e
/////////////////////////////////////////////////////////////////////////
0: import java.io.InputStream;
0:   
0:   /**
0:    * Parse a single InputStream containing blueprint xml. No validation will be performed. The caller
0:    * is responsible for closing the InputStream afterwards.  
0:    * @param is           InputStream containing blueprint xml. 
0:    * @param clientBundle The client's bundle 
0:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser. 
0:    * @throws Exception
0:    */
0:   ComponentDefinitionRegistry parse (InputStream is, Bundle clientBundle) throws Exception;
0:   
0:   /**
0:    * Parse a single InputStream containing blueprint xml. The caller is responsible for 
0:    * closing the InputStream afterwards.  
0:    * @param is           Input stream containing blueprint xml
0:    * @param clientBundle The client's bundle 
0:    * @param validate     Indicates whether or not to validate the blueprint xml
0:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser. 
0:    * @throws Exception
0:    */
0:   ComponentDefinitionRegistry parse (InputStream is, Bundle clientBundle, boolean validate) throws Exception;
0:   
0:   /**
0:    * Parse blueprint xml referred to by a single URL. No validation will be performed. 
0:    * @param url          URL reference to the blueprint xml to parse
0:    * @param clientBundle The client's bundle
0:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
0:    * @throws Exception
0:    */
0:   ComponentDefinitionRegistry parse (URL url, Bundle clientBundle) throws Exception;
0:   
0:   /**
0:    * Parse blueprint xml referred to by a single URL.
0:    * @param url          URL reference to the blueprint xml to parse
0:    * @param clientBundle The client's bundle
0:    * @param validate     Indicates whether or not to validate the blueprint xml
0:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
0:    * @throws Exception
0:    */
0:   ComponentDefinitionRegistry parse (URL url, Bundle clientBundle, boolean validate) throws Exception;
0:   
0:   /**
0:    * Parse blueprint xml referred to by a list of URLs. No validation will be performed. 
0:    * @param urls         URL reference to the blueprint xml to parse
0:    * @param clientBundle The client's bundle
0:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
0:    * @throws Exception
0:    */
0:   /**
0:    * Parse blueprint xml referred to by a list of URLs.
0:    * @param urls         URL reference to the blueprint xml to parse
0:    * @param clientBundle The client's bundle
0:    * @param validate     Indicates whether or not to validate the blueprint xml
0:    * @return             ComponentDefinitionRegistry containing metadata generated by the parser.
0:    * @throws Exception
0:    */
commit:68d4707
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *  Licensed to the Apache Software Foundation (ASF) under one or more
0:  *  contributor license agreements.  See the NOTICE file distributed with
0:  *  this work for additional information regarding copyright ownership.
0:  *  The ASF licenses this file to You under the Apache License, Version 2.0
0:  *  (the "License"); you may not use this file except in compliance with
0:  *  the License.  You may obtain a copy of the License at
0:  *
0:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  *  Unless required by applicable law or agreed to in writing, software
0:  *  distributed under the License is distributed on an "AS IS" BASIS,
0:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  *  See the License for the specific language governing permissions and
0:  *  limitations under the License.
0:  */
0: 
commit:3fa788c
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.blueprint;
0: 
0: import java.net.URL;
0: import java.util.List;
0: 
0: import org.osgi.framework.Bundle;
0: 
0: public interface ParserService {
0: 
0: 	ComponentDefinitionRegistry parse (List<URL> urls, Bundle clientBundle) throws Exception;
0: 	
0: 	ComponentDefinitionRegistry parse (List<URL> urls, Bundle clientBundle, boolean validate) throws Exception;
0: 	
0: }
============================================================================