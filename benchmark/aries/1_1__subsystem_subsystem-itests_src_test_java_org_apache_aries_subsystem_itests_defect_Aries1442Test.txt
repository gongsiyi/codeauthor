1:10ef757: /*
1:10ef757:  * Licensed to the Apache Software Foundation (ASF) under one
1:10ef757:  * or more contributor license agreements.  See the NOTICE file
1:10ef757:  * distributed with this work for additional information
1:10ef757:  * regarding copyright ownership.  The ASF licenses this file
1:10ef757:  * to you under the Apache License, Version 2.0 (the
1:10ef757:  * "License"); you may not use this file except in compliance
1:10ef757:  * with the License.  You may obtain a copy of the License at
1:10ef757:  *
1:10ef757:  *   http://www.apache.org/licenses/LICENSE-2.0
1:10ef757:  *
1:10ef757:  * Unless required by applicable law or agreed to in writing,
1:10ef757:  * software distributed under the License is distributed on an
1:10ef757:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:10ef757:  * KIND, either express or implied.  See the License for the
1:10ef757:  * specific language governing permissions and limitations
1:10ef757:  * under the License.
1:10ef757:  */
1:10ef757: package org.apache.aries.subsystem.itests.defect;
1:10ef757: 
1:10ef757: import static org.junit.Assert.assertEquals;
1:10ef757: 
1:d58e0a5: import java.util.Collection;
1:d58e0a5: import java.util.Collections;
1:d58e0a5: import java.util.List;
1:d58e0a5: import java.util.Map;
1:d58e0a5: 
1:d58e0a5: import org.apache.aries.subsystem.core.internal.Activator;
1:d58e0a5: import org.apache.aries.subsystem.core.internal.SystemRepository;
1:10ef757: import org.apache.aries.subsystem.itests.SubsystemTest;
1:10ef757: import org.apache.aries.subsystem.itests.util.BundleArchiveBuilder;
1:10ef757: import org.apache.aries.subsystem.itests.util.SubsystemArchiveBuilder;
1:d58e0a5: import org.apache.aries.subsystem.itests.util.TestRequirement;
1:10ef757: import org.junit.Test;
1:d58e0a5: import org.ops4j.pax.exam.spi.reactors.ExamReactorStrategy;
1:d58e0a5: import org.ops4j.pax.exam.spi.reactors.PerMethod;
1:10ef757: import org.osgi.framework.namespace.IdentityNamespace;
1:d58e0a5: import org.osgi.resource.Capability;
1:d58e0a5: import org.osgi.resource.Requirement;
1:10ef757: import org.osgi.resource.Resource;
1:10ef757: import org.osgi.service.subsystem.Subsystem;
1:10ef757: import org.osgi.service.subsystem.SubsystemConstants;
1:10ef757: 
1:d58e0a5: @ExamReactorStrategy(PerMethod.class)
1:10ef757: public class Aries1442Test extends SubsystemTest {
1:10ef757: 	@Test
1:d58e0a5: 	public void testNewlyInstalledFeature() throws Exception {
1:d58e0a5: 		assertFeature(createFeature());
1:d58e0a5: 	}
1:d58e0a5: 	
1:d58e0a5: 	@Test
1:d58e0a5: 	public void testPersistedFeature() throws Exception {
1:d58e0a5: 		createFeature();
1:d58e0a5: 		restartSubsystemsImplBundle();
1:d58e0a5: 		Subsystem root = getRootSubsystem();
1:d58e0a5: 		Subsystem feature = getChild(root, "feature", null, SubsystemConstants.SUBSYSTEM_TYPE_FEATURE);
1:d58e0a5: 		assertFeature(feature);
1:d58e0a5: 	}
1:d58e0a5: 	
1:d58e0a5: 	private Subsystem createFeature() throws Exception {
1:10ef757: 		Subsystem root = getRootSubsystem();
1:10ef757: 		Subsystem feature = installSubsystem(
1:10ef757: 				root,
1:10ef757: 				"feature", 
1:10ef757: 				new SubsystemArchiveBuilder()
1:10ef757: 						.symbolicName("feature")
1:10ef757: 						.type(SubsystemConstants.SUBSYSTEM_TYPE_FEATURE)
1:10ef757: 						.bundle(
1:10ef757: 								"a", 
1:10ef757: 								new BundleArchiveBuilder()
1:10ef757: 										.symbolicName("a")
1:10ef757: 										.exportPackage("a")
1:10ef757: 								.build())
1:10ef757: 						.build(),
1:10ef757: 				true
1:10ef757: 		);
1:10ef757: 		uninstallableSubsystems.add(feature);
1:d58e0a5: 		startSubsystem(feature, true);
1:d58e0a5: 		stoppableSubsystems.add(feature);
1:d58e0a5: 		return feature;
1:d58e0a5: 	}
1:d58e0a5: 	
1:d58e0a5: 	private void assertFeature(Subsystem feature) {
1:d58e0a5: 		Resource resource = (Resource)feature;
1:d58e0a5: 		List<Capability> identityCapabilities = resource.getCapabilities(IdentityNamespace.IDENTITY_NAMESPACE);
1:d58e0a5: 		String message = "Wrong number of osgi.identity capabilities";
1:d58e0a5: 		assertEquals(message, 1, identityCapabilities.size());
1:d58e0a5: 		Collection<Capability> capabilities = resource.getCapabilities(null);
1:d58e0a5: 		int count = 0;
1:d58e0a5: 		for (Capability capability : capabilities) {
1:d58e0a5: 			if (IdentityNamespace.IDENTITY_NAMESPACE.equals(capability.getNamespace())) {
1:d58e0a5: 					count++;
1:d58e0a5: 			}
1:d58e0a5: 		}
1:d58e0a5: 		assertEquals(message, 1, count);
1:d58e0a5: 		SystemRepository repository = Activator.getInstance().getSystemRepository();
1:d58e0a5: 		Requirement requirement = new TestRequirement.Builder()
1:d58e0a5: 				.namespace("osgi.identity")
1:d58e0a5: 				.directive("filter", "(osgi.identity=a)")
1:d58e0a5: 				.build();
1:d58e0a5: 		Map<Requirement, Collection<Capability>> providers = repository.findProviders(
1:d58e0a5: 				Collections.singleton(requirement));
1:d58e0a5: 		capabilities = providers.get(requirement);
1:d58e0a5: 		assertEquals(message, 1, capabilities.size());
1:10ef757: 	}
1:10ef757: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:d58e0a5
/////////////////////////////////////////////////////////////////////////
1: import java.util.Collection;
1: import java.util.Collections;
1: import java.util.List;
1: import java.util.Map;
1: 
1: import org.apache.aries.subsystem.core.internal.Activator;
1: import org.apache.aries.subsystem.core.internal.SystemRepository;
1: import org.apache.aries.subsystem.itests.util.TestRequirement;
1: import org.ops4j.pax.exam.spi.reactors.ExamReactorStrategy;
1: import org.ops4j.pax.exam.spi.reactors.PerMethod;
1: import org.osgi.resource.Capability;
1: import org.osgi.resource.Requirement;
1: @ExamReactorStrategy(PerMethod.class)
1: 	public void testNewlyInstalledFeature() throws Exception {
1: 		assertFeature(createFeature());
1: 	}
1: 	
1: 	@Test
1: 	public void testPersistedFeature() throws Exception {
1: 		createFeature();
1: 		restartSubsystemsImplBundle();
1: 		Subsystem root = getRootSubsystem();
1: 		Subsystem feature = getChild(root, "feature", null, SubsystemConstants.SUBSYSTEM_TYPE_FEATURE);
1: 		assertFeature(feature);
1: 	}
1: 	
1: 	private Subsystem createFeature() throws Exception {
/////////////////////////////////////////////////////////////////////////
1: 		startSubsystem(feature, true);
1: 		stoppableSubsystems.add(feature);
1: 		return feature;
1: 	}
1: 	
1: 	private void assertFeature(Subsystem feature) {
1: 		Resource resource = (Resource)feature;
1: 		List<Capability> identityCapabilities = resource.getCapabilities(IdentityNamespace.IDENTITY_NAMESPACE);
1: 		String message = "Wrong number of osgi.identity capabilities";
1: 		assertEquals(message, 1, identityCapabilities.size());
1: 		Collection<Capability> capabilities = resource.getCapabilities(null);
1: 		int count = 0;
1: 		for (Capability capability : capabilities) {
1: 			if (IdentityNamespace.IDENTITY_NAMESPACE.equals(capability.getNamespace())) {
1: 					count++;
1: 			}
1: 		}
1: 		assertEquals(message, 1, count);
1: 		SystemRepository repository = Activator.getInstance().getSystemRepository();
1: 		Requirement requirement = new TestRequirement.Builder()
1: 				.namespace("osgi.identity")
1: 				.directive("filter", "(osgi.identity=a)")
1: 				.build();
1: 		Map<Requirement, Collection<Capability>> providers = repository.findProviders(
1: 				Collections.singleton(requirement));
1: 		capabilities = providers.get(requirement);
1: 		assertEquals(message, 1, capabilities.size());
commit:10ef757
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.subsystem.itests.defect;
1: 
1: import static org.junit.Assert.assertEquals;
1: 
1: import org.apache.aries.subsystem.itests.SubsystemTest;
1: import org.apache.aries.subsystem.itests.util.BundleArchiveBuilder;
1: import org.apache.aries.subsystem.itests.util.SubsystemArchiveBuilder;
1: import org.junit.Test;
1: import org.osgi.framework.namespace.IdentityNamespace;
1: import org.osgi.resource.Resource;
1: import org.osgi.service.subsystem.Subsystem;
1: import org.osgi.service.subsystem.SubsystemConstants;
1: 
1: public class Aries1442Test extends SubsystemTest {
1: 	@Test
0: 	public void test() throws Exception {
1: 		Subsystem root = getRootSubsystem();
1: 		Subsystem feature = installSubsystem(
1: 				root,
1: 				"feature", 
1: 				new SubsystemArchiveBuilder()
1: 						.symbolicName("feature")
1: 						.type(SubsystemConstants.SUBSYSTEM_TYPE_FEATURE)
1: 						.bundle(
1: 								"a", 
1: 								new BundleArchiveBuilder()
1: 										.symbolicName("a")
1: 										.exportPackage("a")
1: 								.build())
1: 						.build(),
1: 				true
1: 		);
1: 		uninstallableSubsystems.add(feature);
0: 		assertEquals("Wrong number of osgi.identity capabilities",
0: 				1, ((Resource)feature).getCapabilities(IdentityNamespace.IDENTITY_NAMESPACE).size());
1: 	}
1: }
============================================================================