1:2e57fb5: /*
1:2e57fb5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:2e57fb5:  * contributor license agreements.  See the NOTICE file distributed with
1:2e57fb5:  * this work for additional information regarding copyright ownership.
1:2e57fb5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:2e57fb5:  * (the "License"); you may not use this file except in compliance with
1:2e57fb5:  * the License.  You may obtain a copy of the License at
4:2e57fb5:  *
1:2e57fb5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:2e57fb5:  *
1:2e57fb5:  * Unless required by applicable law or agreed to in writing, software
1:2e57fb5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2e57fb5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2e57fb5:  * See the License for the specific language governing permissions and
1:2e57fb5:  * limitations under the License.
2:2e57fb5:  */
1:2e57fb5: package org.apache.activemq.pool;
3:101e711: 
1:b66559e: import org.apache.activemq.jms.pool.GenericResourceManager;
1:101e711: 
2:2e57fb5: /**
1:b66559e:  * @Deprecated use {@link org.apache.activemq.jms.pool.GenericResourceManager}
1:2e57fb5:  */
1:b66559e: public class ActiveMQResourceManager extends GenericResourceManager {
6:101e711: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:b66559e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.jms.pool.GenericResourceManager;
1:  * @Deprecated use {@link org.apache.activemq.jms.pool.GenericResourceManager}
1: public class ActiveMQResourceManager extends GenericResourceManager {
author:Gary Tully
-------------------------------------------------------------------------------
commit:101e711
/////////////////////////////////////////////////////////////////////////
0: import javax.transaction.SystemException;
0: import javax.transaction.xa.XAResource;
0: import org.apache.geronimo.transaction.manager.NamedXAResourceFactory;
/////////////////////////////////////////////////////////////////////////
0:         public static boolean recover(final ActiveMQResourceManager rm) throws IOException {
0:                     final ActiveMQConnectionFactory connFactory = (ActiveMQConnectionFactory) rm.getConnectionFactory();
0:                     final ActiveMQSession session = (ActiveMQSession)activeConn.createSession(true, Session.SESSION_TRANSACTED);
0:                     rtxManager.registerNamedXAResourceFactory(new NamedXAResourceFactory() {
1: 
0:                         @Override
0:                         public String getName() {
0:                             return rm.getResourceName();
1:                         }
1: 
0:                         @Override
0:                         public NamedXAResource getNamedXAResource() throws SystemException {
0:                             try {
0:                                 final ActiveMQConnection activeConn = (ActiveMQConnection)connFactory.createConnection();
0:                                 final ActiveMQSession session = (ActiveMQSession)activeConn.createSession(true, Session.SESSION_TRANSACTED);
0:                                 activeConn.start();
0:                                 LOGGER.debug("new namedXAResource's connection: " + activeConn);
1: 
0:                                 return new ConnectionAndWrapperNamedXAResource(session.getTransactionContext(), getName(), activeConn);
0:                             } catch (Exception e) {
0:                                 SystemException se =  new SystemException("Failed to create ConnectionAndWrapperNamedXAResource, " + e.getLocalizedMessage());
0:                                 se.initCause(e);
0:                                 LOGGER.error(se.getLocalizedMessage(), se);
0:                                 throw se;
1:                             }
1:                         }
1: 
0:                         @Override
0:                         public void returnNamedXAResource(NamedXAResource namedXaResource) {
0:                             if (namedXaResource instanceof ConnectionAndWrapperNamedXAResource) {
0:                                 try {
0:                                     LOGGER.debug("closing returned namedXAResource's connection: " + ((ConnectionAndWrapperNamedXAResource)namedXaResource).connection);
0:                                     ((ConnectionAndWrapperNamedXAResource)namedXaResource).connection.close();
0:                                 } catch (Exception ignored) {
0:                                     LOGGER.debug("failed to close returned namedXAResource: " + namedXaResource, ignored);
1:                                 }
1:                             }
1:                         }
0:                     });
/////////////////////////////////////////////////////////////////////////
0:     public static class ConnectionAndWrapperNamedXAResource extends WrapperNamedXAResource {
0:         final ActiveMQConnection connection;
0:         public ConnectionAndWrapperNamedXAResource(XAResource xaResource, String name, ActiveMQConnection connection) {
0:             super(xaResource, name);
0:             this.connection = connection;
0:         }
0:     }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
0:     private static final Logger LOGGER = LoggerFactory.getLogger(ActiveMQResourceManager.class);
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:2e57fb5
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.pool;
0: 
0: import java.io.IOException;
0: 
0: import javax.jms.ConnectionFactory;
0: import javax.jms.Session;
0: import javax.jms.JMSException;
0: import javax.transaction.TransactionManager;
0: 
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
0: import org.apache.activemq.ActiveMQConnectionFactory;
0: import org.apache.activemq.ActiveMQConnection;
0: import org.apache.activemq.ActiveMQSession;
0: import org.apache.activemq.util.IOExceptionSupport;
0: import org.apache.geronimo.transaction.manager.RecoverableTransactionManager;
0: import org.apache.geronimo.transaction.manager.NamedXAResource;
0: import org.apache.geronimo.transaction.manager.WrapperNamedXAResource;
0: 
0: 
1: /**
0:  * This class allows wiring the ActiveMQ broker and the Geronimo transaction manager
0:  * in a way that will allow the transaction manager to correctly recover XA transactions.
1:  *
0:  * For example, it can be used the following way:
0:  * <pre>
0:  *   <bean id="activemqConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
0:  *      <property name="brokerURL" value="tcp://localhost:61616" />
0:  *   </bean>
1:  *
0:  *   <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactoryFactoryBean">
0:  *       <property name="maxConnections" value="8" />
0:  *       <property name="transactionManager" ref="transactionManager" />
0:  *       <property name="connectionFactory" ref="activemqConnectionFactory" />
0:  *       <property name="resourceName" value="activemq.broker" />
0:  *   </bean>
1:  *
0:  *   <bean id="resourceManager" class="org.apache.activemq.pool.ActiveMQResourceManager" init-method="recoverResource">
0:  *         <property name="transactionManager" ref="transactionManager" />
0:  *         <property name="connectionFactory" ref="activemqConnectionFactory" />
0:  *         <property name="resourceName" value="activemq.broker" />
0:  *   </bean>
0:  * </pre>
1:  */
0: public class ActiveMQResourceManager {
0: 
0:     private static final Log LOGGER = LogFactory.getLog(ActiveMQResourceManager.class);
0: 
0:     private String resourceName;
0: 
0:     private TransactionManager transactionManager;
0: 
0:     private ConnectionFactory connectionFactory;
0: 
0:     public void recoverResource() {
0:         try {
0:             if (!Recovery.recover(this)) {
0:                 LOGGER.info("Resource manager is unrecoverable");
0:             }
0:         } catch (NoClassDefFoundError e) {
0:             LOGGER.info("Resource manager is unrecoverable due to missing classes: " + e);
0:         } catch (Throwable e) {
0:             LOGGER.warn("Error while recovering resource manager", e);
0:         }
0:     }
0: 
0:     public String getResourceName() {
0:         return resourceName;
0:     }
0: 
0:     public void setResourceName(String resourceName) {
0:         this.resourceName = resourceName;
0:     }
0: 
0:     public TransactionManager getTransactionManager() {
0:         return transactionManager;
0:     }
0: 
0:     public void setTransactionManager(TransactionManager transactionManager) {
0:         this.transactionManager = transactionManager;
0:     }
0: 
0:     public ConnectionFactory getConnectionFactory() {
0:         return connectionFactory;
0:     }
0: 
0:     public void setConnectionFactory(ConnectionFactory connectionFactory) {
0:         this.connectionFactory = connectionFactory;
0:     }
0: 
1:     /**
0:      * This class will ensure the broker is properly recovered when wired with
0:      * the Geronimo transaction manager.
1:      */
0:     public static class Recovery {
0: 
0:         public static boolean isRecoverable(ActiveMQResourceManager rm) {
0:             return  rm.getConnectionFactory() instanceof ActiveMQConnectionFactory &&
0:                     rm.getTransactionManager() instanceof RecoverableTransactionManager &&
0:                     rm.getResourceName() != null && !"".equals(rm.getResourceName());
0:         }
0: 
0:         public static boolean recover(ActiveMQResourceManager rm) throws IOException {
0:             if (isRecoverable(rm)) {
0:                 try {
0:                     ActiveMQConnectionFactory connFactory = (ActiveMQConnectionFactory) rm.getConnectionFactory();
0:                     ActiveMQConnection activeConn = (ActiveMQConnection)connFactory.createConnection();
0:                     ActiveMQSession session = (ActiveMQSession)activeConn.createSession(true, Session.SESSION_TRANSACTED);
0:                     NamedXAResource namedXaResource = new WrapperNamedXAResource(session.getTransactionContext(), rm.getResourceName());
0: 
0:                     RecoverableTransactionManager rtxManager = (RecoverableTransactionManager) rm.getTransactionManager();
0:                     rtxManager.recoverResourceManager(namedXaResource);
0:                     return true;
0:                 } catch (JMSException e) {
0:                   throw IOExceptionSupport.create(e);
0:                 }
0:             } else {
0:                 return false;
0:             }
0:         }
0:     }
0: 
0: }
============================================================================