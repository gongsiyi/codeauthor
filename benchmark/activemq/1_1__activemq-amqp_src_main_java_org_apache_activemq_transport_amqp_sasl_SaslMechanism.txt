1:e333fd9: /**
1:e333fd9:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e333fd9:  * contributor license agreements.  See the NOTICE file distributed with
1:e333fd9:  * this work for additional information regarding copyright ownership.
1:e333fd9:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e333fd9:  * (the "License"); you may not use this file except in compliance with
1:e333fd9:  * the License.  You may obtain a copy of the License at
1:e333fd9:  *
1:e333fd9:  *      http://www.apache.org/licenses/LICENSE-2.0
1:e333fd9:  *
1:e333fd9:  * Unless required by applicable law or agreed to in writing, software
1:e333fd9:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e333fd9:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e333fd9:  * See the License for the specific language governing permissions and
1:e333fd9:  * limitations under the License.
1:e333fd9:  */
1:e333fd9: package org.apache.activemq.transport.amqp.sasl;
1:e333fd9: 
1:e333fd9: import org.apache.qpid.proton.engine.Sasl;
1:e333fd9: 
1:e333fd9: /**
1:e333fd9:  * A SASL Mechanism implements this interface in order to provide the
1:e333fd9:  * AmqpAuthenticator with the means of providing authentication services
1:e333fd9:  * in the SASL handshake step.
1:e333fd9:  */
1:e333fd9: public interface SaslMechanism {
1:e333fd9: 
1:e333fd9:     /**
1:e333fd9:      * Perform the SASL processing for this mechanism type.
1:e333fd9:      *
1:e333fd9:      * @param sasl
1:e333fd9:      *        the SASL server that has read the incoming SASL exchange.
1:e333fd9:      */
1:e333fd9:     void processSaslStep(Sasl sasl);
1:e333fd9: 
1:e333fd9:     /**
1:e333fd9:      * @return the User Name extracted from the SASL echange or null if none.
1:e333fd9:      */
1:e333fd9:     String getUsername();
1:e333fd9: 
1:e333fd9:     /**
1:e333fd9:      * @return the Password extracted from the SASL echange or null if none.
1:e333fd9:      */
1:e333fd9:     String getPassword();
1:e333fd9: 
1:e333fd9:     /**
1:e333fd9:      * @return the name of the implemented SASL mechanism.
1:e333fd9:      */
1:e333fd9:     String getMechanismName();
1:e333fd9: 
1:b5dd0a1:     /**
1:b5dd0a1:      * @return true if the SASL processing failed during a step.
1:b5dd0a1:      */
1:b5dd0a1:     boolean isFailed();
1:b5dd0a1: 
1:b5dd0a1:     /**
1:b5dd0a1:      * @return a failure error to explain why the mechanism failed.
1:b5dd0a1:      */
1:b5dd0a1:     String getFailureReason();
1:b5dd0a1: 
1:e333fd9: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:b5dd0a1
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * @return true if the SASL processing failed during a step.
1:      */
1:     boolean isFailed();
1: 
1:     /**
1:      * @return a failure error to explain why the mechanism failed.
1:      */
1:     String getFailureReason();
1: 
commit:e333fd9
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.sasl;
1: 
1: import org.apache.qpid.proton.engine.Sasl;
1: 
1: /**
1:  * A SASL Mechanism implements this interface in order to provide the
1:  * AmqpAuthenticator with the means of providing authentication services
1:  * in the SASL handshake step.
1:  */
1: public interface SaslMechanism {
1: 
1:     /**
1:      * Perform the SASL processing for this mechanism type.
1:      *
1:      * @param sasl
1:      *        the SASL server that has read the incoming SASL exchange.
1:      */
1:     void processSaslStep(Sasl sasl);
1: 
1:     /**
1:      * @return the User Name extracted from the SASL echange or null if none.
1:      */
1:     String getUsername();
1: 
1:     /**
1:      * @return the Password extracted from the SASL echange or null if none.
1:      */
1:     String getPassword();
1: 
1:     /**
1:      * @return the name of the implemented SASL mechanism.
1:      */
1:     String getMechanismName();
1: 
1: }
============================================================================