1:1a88ac6: /**
1:1a88ac6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1a88ac6:  * contributor license agreements.  See the NOTICE file distributed with
1:1a88ac6:  * this work for additional information regarding copyright ownership.
1:1a88ac6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1a88ac6:  * (the "License"); you may not use this file except in compliance with
1:1a88ac6:  * the License.  You may obtain a copy of the License at
2:1a88ac6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1a88ac6:  *
1:1a88ac6:  * Unless required by applicable law or agreed to in writing, software
1:1a88ac6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1a88ac6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1a88ac6:  * See the License for the specific language governing permissions and
1:1a88ac6:  * limitations under the License.
1:1a88ac6:  */
1:1a88ac6: 
1:1a88ac6: package org.apache.activemq.transport.tcp;
1:1a88ac6: 
1:1a88ac6: import java.io.IOException;
1:1a88ac6: 
1:1a88ac6: import javax.net.ssl.SSLServerSocket;
1:1a88ac6: 
1:1a88ac6: public class StubSSLServerSocket extends SSLServerSocket {
1:1a88ac6:     public static final int UNTOUCHED = -1;
1:1a88ac6:     public static final int FALSE = 0;
1:1a88ac6:     public static final int TRUE = 1;
1:1a88ac6:     
1:1a88ac6:     private int wantClientAuthStatus = UNTOUCHED;
1:1a88ac6:     private int needClientAuthStatus = UNTOUCHED;
1:1a88ac6:     
1:1a88ac6:     public StubSSLServerSocket() throws IOException {
1:1a88ac6:         
1:1a88ac6:     }
1:1a88ac6:     
1:1a88ac6:     public int getWantClientAuthStatus() {
1:1a88ac6:         return wantClientAuthStatus;
1:1a88ac6:     }
1:1a88ac6:     
1:1a88ac6:     public int getNeedClientAuthStatus() {
1:1a88ac6:         return needClientAuthStatus;
1:1a88ac6:     }
1:1a88ac6:     
1:1a88ac6:     public void setWantClientAuth(boolean want) {
1:ecf89a6:         wantClientAuthStatus = want ? TRUE : FALSE;
1:1a88ac6:     }
1:1a88ac6:     
1:1a88ac6:     public void setNeedClientAuth(boolean need) {
1:ecf89a6:         needClientAuthStatus = need ? TRUE : FALSE;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     // --- Stubbed methods ---
1:1a88ac6:     
1:1a88ac6:     public boolean getEnableSessionCreation() {
1:1a88ac6:         return false;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public String[] getEnabledCipherSuites() {
1:1a88ac6:         return null;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public String[] getEnabledProtocols() {
1:1a88ac6:         return null;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public boolean getNeedClientAuth() {
1:1a88ac6:         return false;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public String[] getSupportedCipherSuites() {
1:1a88ac6:         return null;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public String[] getSupportedProtocols() {
1:1a88ac6:         return null;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public boolean getUseClientMode() {
1:1a88ac6:         return false;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public boolean getWantClientAuth() {
1:1a88ac6:         return false;
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public void setEnableSessionCreation(boolean flag) {
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public void setEnabledCipherSuites(String[] suites) {
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public void setEnabledProtocols(String[] protocols) {
1:1a88ac6:     }
1:1a88ac6: 
1:1a88ac6:     public void setUseClientMode(boolean mode) {
1:1a88ac6:     }
1:1a88ac6: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:ecf89a6
/////////////////////////////////////////////////////////////////////////
1:         wantClientAuthStatus = want ? TRUE : FALSE;
1:         needClientAuthStatus = need ? TRUE : FALSE;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:1a88ac6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.transport.tcp;
1: 
1: import java.io.IOException;
1: 
1: import javax.net.ssl.SSLServerSocket;
1: 
1: public class StubSSLServerSocket extends SSLServerSocket {
1:     public static final int UNTOUCHED = -1;
1:     public static final int FALSE = 0;
1:     public static final int TRUE = 1;
1:     
1:     private int wantClientAuthStatus = UNTOUCHED;
1:     private int needClientAuthStatus = UNTOUCHED;
1:     
1:     public StubSSLServerSocket() throws IOException {
1:         
1:     }
1:     
1:     public int getWantClientAuthStatus() {
1:         return wantClientAuthStatus;
1:     }
1:     
1:     public int getNeedClientAuthStatus() {
1:         return needClientAuthStatus;
1:     }
1:     
1:     public void setWantClientAuth(boolean want) {
0:         wantClientAuthStatus = (want ? TRUE : FALSE);
1:     }
1:     
1:     public void setNeedClientAuth(boolean need) {
0:         needClientAuthStatus = (need ? TRUE : FALSE);
1:     }
1: 
1:     // --- Stubbed methods ---
1:     
1:     public boolean getEnableSessionCreation() {
1:         return false;
1:     }
1: 
1:     public String[] getEnabledCipherSuites() {
1:         return null;
1:     }
1: 
1:     public String[] getEnabledProtocols() {
1:         return null;
1:     }
1: 
1:     public boolean getNeedClientAuth() {
1:         return false;
1:     }
1: 
1:     public String[] getSupportedCipherSuites() {
1:         return null;
1:     }
1: 
1:     public String[] getSupportedProtocols() {
1:         return null;
1:     }
1: 
1:     public boolean getUseClientMode() {
1:         return false;
1:     }
1: 
1:     public boolean getWantClientAuth() {
1:         return false;
1:     }
1: 
1:     public void setEnableSessionCreation(boolean flag) {
1:     }
1: 
1:     public void setEnabledCipherSuites(String[] suites) {
1:     }
1: 
1:     public void setEnabledProtocols(String[] protocols) {
1:     }
1: 
1:     public void setUseClientMode(boolean mode) {
1:     }
1: }
============================================================================