1:571d452: /**
1:571d452:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:571d452:  * contributor license agreements.  See the NOTICE file distributed with
1:571d452:  * this work for additional information regarding copyright ownership.
1:571d452:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:571d452:  * (the "License"); you may not use this file except in compliance with
1:571d452:  * the License.  You may obtain a copy of the License at
1:571d452:  *
1:571d452:  * http://www.apache.org/licenses/LICENSE-2.0
1:571d452:  *
1:571d452:  * Unless required by applicable law or agreed to in writing, software
1:571d452:  * distributed under the License is distributed on an "AS IS" BASIS,
1:571d452:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:571d452:  * See the License for the specific language governing permissions and
1:571d452:  * limitations under the License.
1:571d452:  */
1:571d452: package org.apache.activemq.transport.https;
1:571d452: 
1:571d452: import junit.framework.Test;
1:571d452: import junit.textui.TestRunner;
1:571d452: import org.apache.activemq.broker.BrokerFactory;
1:571d452: import org.apache.activemq.broker.BrokerService;
1:571d452: import org.apache.activemq.transport.http.HttpTransportBrokerTest;
1:571d452: 
1:571d452: import java.net.URI;
1:571d452: 
1:571d452: /**
1:571d452:  * @author <a href="http://www.christianposta.com/blog">Christian Posta</a>
1:571d452:  */
1:571d452: public class HttpsNeedClientAuthBrokerTest extends HttpTransportBrokerTest {
1:571d452: 
1:571d452:     private static final String HTTPS_TRANSPORT_URL = "https://localhost:8161?transport.needClientAuth=true";
1:571d452: 
1:571d452:     protected String getBindLocation() {
1:571d452:         return "https://localhost:8161";
1:571d452:     }
1:571d452: 
1:571d452:     protected void setUp() throws Exception {
1:571d452:         System.setProperty("javax.net.ssl.trustStore", "src/test/resources/client.keystore");
1:571d452:         System.setProperty("javax.net.ssl.trustStorePassword", "password");
1:571d452:         System.setProperty("javax.net.ssl.trustStoreType", "jks");
1:571d452:         System.setProperty("javax.net.ssl.keyStore", "src/test/resources/server.keystore");
1:571d452:         System.setProperty("javax.net.ssl.keyStorePassword", "password");
1:571d452:         System.setProperty("javax.net.ssl.keyStoreType", "jks");
1:571d452:         super.setUp();
1:571d452:     }
1:571d452: 
1:571d452:     @Override
1:571d452:     protected BrokerService createBroker() throws Exception {
1:571d452:         BrokerService broker = BrokerFactory.createBroker(new URI("broker:()/localhost?persistent=false&useJmx=false"));
1:571d452:         connector = broker.addConnector(HTTPS_TRANSPORT_URL);
1:571d452:         return broker;
1:571d452:     }
1:571d452: 
1:571d452:     public static Test suite() {
1:571d452:         return suite(HttpsNeedClientAuthBrokerTest.class);
1:571d452:     }
1:571d452: 
1:571d452:     public static void main(String[] args) {
1:571d452:         TestRunner.run(suite());
1:571d452:     }
1:571d452: }
============================================================================
author:Christian Posta
-------------------------------------------------------------------------------
commit:571d452
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.https;
1: 
1: import junit.framework.Test;
1: import junit.textui.TestRunner;
1: import org.apache.activemq.broker.BrokerFactory;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.transport.http.HttpTransportBrokerTest;
1: 
1: import java.net.URI;
1: 
1: /**
1:  * @author <a href="http://www.christianposta.com/blog">Christian Posta</a>
1:  */
1: public class HttpsNeedClientAuthBrokerTest extends HttpTransportBrokerTest {
1: 
1:     private static final String HTTPS_TRANSPORT_URL = "https://localhost:8161?transport.needClientAuth=true";
1: 
1:     protected String getBindLocation() {
1:         return "https://localhost:8161";
1:     }
1: 
1:     protected void setUp() throws Exception {
1:         System.setProperty("javax.net.ssl.trustStore", "src/test/resources/client.keystore");
1:         System.setProperty("javax.net.ssl.trustStorePassword", "password");
1:         System.setProperty("javax.net.ssl.trustStoreType", "jks");
1:         System.setProperty("javax.net.ssl.keyStore", "src/test/resources/server.keystore");
1:         System.setProperty("javax.net.ssl.keyStorePassword", "password");
1:         System.setProperty("javax.net.ssl.keyStoreType", "jks");
1:         super.setUp();
1:     }
1: 
1:     @Override
1:     protected BrokerService createBroker() throws Exception {
1:         BrokerService broker = BrokerFactory.createBroker(new URI("broker:()/localhost?persistent=false&useJmx=false"));
1:         connector = broker.addConnector(HTTPS_TRANSPORT_URL);
1:         return broker;
1:     }
1: 
1:     public static Test suite() {
1:         return suite(HttpsNeedClientAuthBrokerTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         TestRunner.run(suite());
1:     }
1: }
============================================================================