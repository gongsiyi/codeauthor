1:09c4500: /**
1:09c4500:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:09c4500:  * contributor license agreements.  See the NOTICE file distributed with
1:09c4500:  * this work for additional information regarding copyright ownership.
1:09c4500:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:09c4500:  * (the "License"); you may not use this file except in compliance with
1:09c4500:  * the License.  You may obtain a copy of the License at
1:09c4500:  *
1:09c4500:  *      http://www.apache.org/licenses/LICENSE-2.0
1:09c4500:  *
1:09c4500:  * Unless required by applicable law or agreed to in writing, software
1:09c4500:  * distributed under the License is distributed on an "AS IS" BASIS,
1:09c4500:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:09c4500:  * See the License for the specific language governing permissions and
1:09c4500:  * limitations under the License.
1:09c4500:  */
1:09c4500: package org.apache.activemq.transport.mqtt;
1:09c4500: 
1:09c4500: public interface  MQTTClientProvider {
1:09c4500:     void connect(String host) throws Exception;
1:09c4500:     void disconnect() throws Exception;
1:6683eb6:     public void publish(String topic, byte[] payload, int qos, boolean retained) throws Exception;
1:09c4500:     void publish(String topic,byte[] payload,int qos) throws Exception;
1:09c4500:     void subscribe(String topic,int qos) throws Exception;
1:8335dfc:     void unsubscribe(String topic) throws Exception;
1:09c4500:     byte[] receive(int timeout) throws Exception;
1:09c4500:     void setSslContext(javax.net.ssl.SSLContext sslContext);
1:72e484c:     void setWillMessage(String string);
1:72e484c:     void setWillTopic(String topic);
1:8335dfc:     void setClientId(String clientId);
1:8335dfc:     void kill() throws Exception;
1:8335dfc:     void setKeepAlive(int keepAlive) throws Exception;
1:09c4500: 
1:09c4500: }
============================================================================
author:rajdavies
-------------------------------------------------------------------------------
commit:6683eb6
/////////////////////////////////////////////////////////////////////////
1:     public void publish(String topic, byte[] payload, int qos, boolean retained) throws Exception;
author:Robert Davies
-------------------------------------------------------------------------------
commit:8335dfc
/////////////////////////////////////////////////////////////////////////
1:     void unsubscribe(String topic) throws Exception;
1:     void setClientId(String clientId);
1:     void kill() throws Exception;
1:     void setKeepAlive(int keepAlive) throws Exception;
commit:72e484c
/////////////////////////////////////////////////////////////////////////
1:     void setWillMessage(String string);
1:     void setWillTopic(String topic);
commit:09c4500
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.mqtt;
1: 
1: public interface  MQTTClientProvider {
1:     void connect(String host) throws Exception;
1:     void disconnect() throws Exception;
1:     void publish(String topic,byte[] payload,int qos) throws Exception;
1:     void subscribe(String topic,int qos) throws Exception;
1:     byte[] receive(int timeout) throws Exception;
1:     void setSslContext(javax.net.ssl.SSLContext sslContext);
1: 
1: }
============================================================================