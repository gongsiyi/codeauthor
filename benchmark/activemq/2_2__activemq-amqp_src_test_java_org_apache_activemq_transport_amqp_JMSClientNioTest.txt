1:d8c2eda: /**
1:d8c2eda:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d8c2eda:  * contributor license agreements.  See the NOTICE file distributed with
1:d8c2eda:  * this work for additional information regarding copyright ownership.
1:d8c2eda:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d8c2eda:  * (the "License"); you may not use this file except in compliance with
1:d8c2eda:  * the License.  You may obtain a copy of the License at
1:d8c2eda:  *
1:d8c2eda:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d8c2eda:  *
1:d8c2eda:  * Unless required by applicable law or agreed to in writing, software
1:d8c2eda:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d8c2eda:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d8c2eda:  * See the License for the specific language governing permissions and
1:d8c2eda:  * limitations under the License.
1:d8c2eda:  */
1:d8c2eda: package org.apache.activemq.transport.amqp;
24:d8c2eda: 
1:36bd069: import java.net.URI;
1:36bd069: 
1:da63f3f: import org.slf4j.Logger;
1:da63f3f: import org.slf4j.LoggerFactory;
1:36bd069: 
1:d8c2eda: /**
1:d8c2eda:  * Test the JMS client when connected to the NIO transport.
1:d8c2eda:  */
1:d8c2eda: public class JMSClientNioTest extends JMSClientTest {
1:da63f3f:     protected static final Logger LOG = LoggerFactory.getLogger(JMSClientNioTest.class);
1:d8c2eda: 
1:36bd069:     @Override
1:36bd069:     protected URI getBrokerURI() {
1:36bd069:         return amqpNioURI;
1:36bd069:     }
1:6d8449f: 
1:6d8449f:     @Override
1:6d8449f:     protected boolean isUseTcpConnector() {
1:6d8449f:         return false;
1:6d8449f:     }
1:6d8449f: 
1:6d8449f:     @Override
1:6d8449f:     protected boolean isUseNioConnector() {
1:6d8449f:         return true;
1:6d8449f:     }
1:6d8449f: 
1:6d8449f:     @Override
1:6d8449f:     protected String getTargetConnectorName() {
1:6d8449f:         return "amqp+nio";
1:6d8449f:     }
23:d8c2eda: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:b5ef928
/////////////////////////////////////////////////////////////////////////
commit:36bd069
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
1: 
/////////////////////////////////////////////////////////////////////////
0:         LOG.debug("JMSClientNioTest.getBrokerPort returning nioPort {}", amqpNioPort);
0:         return amqpNioPort;
1:     }
1: 
1:     @Override
1:     protected URI getBrokerURI() {
1:         return amqpNioURI;
commit:6d8449f
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     protected boolean isUseTcpConnector() {
1:         return false;
1:     }
1: 
1:     @Override
1:     protected boolean isUseNioConnector() {
1:         return true;
1:     }
1: 
1:     @Override
1:     protected String getTargetConnectorName() {
1:         return "amqp+nio";
1:     }
commit:da5d0d8
/////////////////////////////////////////////////////////////////////////
commit:d8c2eda
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp;
1: 
0: import javax.jms.JMSException;
1: 
0: import org.junit.Test;
1: 
1: /**
1:  * Test the JMS client when connected to the NIO transport.
1:  */
1: public class JMSClientNioTest extends JMSClientTest {
1: 
0:     @Override
0:     @Test
0:     public void testProducerConsume() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test
0:     public void testTransactedConsumer() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test
0:     public void testRollbackRececeivedMessage() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test
0:     public void testTXConsumerAndLargeNumberOfMessages() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test
0:     public void testSelectors() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testProducerThrowsWhenBrokerStops() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testProducerCreateThrowsWhenBrokerStops() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testConsumerCreateThrowsWhenBrokerStops() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testConsumerReceiveNoWaitThrowsWhenBrokerStops() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testConsumerReceiveTimedThrowsWhenBrokerStops() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testConsumerReceiveReturnsBrokerStops() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testBrokerRestartWontHangConnectionClose() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=120000)
0:     public void testProduceAndConsumeLargeNumbersOfMessages() throws JMSException {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testSyncSends() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testDurableConsumerAsync() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testDurableConsumerSync() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testTopicConsumerAsync() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=45000)
0:     public void testTopicConsumerSync() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=60000)
0:     public void testConnectionsAreClosed() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testExecptionListenerCalledOnBrokerStop() throws Exception {
1:     }
1: 
0:     @Override
0:     @Test(timeout=30000)
0:     public void testSessionTransactedCommit() throws JMSException, InterruptedException {
1:     }
1: 
0:     @Override
0:     protected int getBrokerPort() {
0:         return nioPort;
1:     }
1: }
author:Kevin Earls
-------------------------------------------------------------------------------
commit:2360fb8
/////////////////////////////////////////////////////////////////////////
0:         LOG.debug("JMSClientNioTest.getBrokerPort returning nioPort {}", nioPort);
commit:28c565c
/////////////////////////////////////////////////////////////////////////
0: @Ignore
commit:da63f3f
/////////////////////////////////////////////////////////////////////////
0: import org.junit.Ignore;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
0: 
0: import java.io.ByteArrayInputStream;
0: import java.io.DataInputStream;
1:     protected static final Logger LOG = LoggerFactory.getLogger(JMSClientNioTest.class);
============================================================================