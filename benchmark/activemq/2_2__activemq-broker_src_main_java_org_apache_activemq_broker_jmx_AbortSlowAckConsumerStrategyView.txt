1:1982d54: /**
1:1982d54:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1982d54:  * contributor license agreements.  See the NOTICE file distributed with
1:1982d54:  * this work for additional information regarding copyright ownership.
1:1982d54:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1982d54:  * (the "License"); you may not use this file except in compliance with
1:1982d54:  * the License.  You may obtain a copy of the License at
1:1982d54:  *
1:1982d54:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1982d54:  *
1:1982d54:  * Unless required by applicable law or agreed to in writing, software
1:1982d54:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1982d54:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1982d54:  * See the License for the specific language governing permissions and
1:1982d54:  * limitations under the License.
1:1982d54:  */
1:1982d54: package org.apache.activemq.broker.jmx;
1:1982d54: 
1:1982d54: import org.apache.activemq.broker.region.policy.AbortSlowAckConsumerStrategy;
1:1982d54: 
1:77bcffc: public class AbortSlowAckConsumerStrategyView extends AbortSlowConsumerStrategyView implements AbortSlowAckConsumerStrategyViewMBean {
1:1982d54: 
1:1982d54:     private final AbortSlowAckConsumerStrategy strategy;
1:1982d54: 
1:1982d54:     public AbortSlowAckConsumerStrategyView(ManagedRegionBroker managedRegionBroker, AbortSlowAckConsumerStrategy slowConsumerStrategy) {
1:1982d54:         super(managedRegionBroker, slowConsumerStrategy);
1:1982d54:         this.strategy = slowConsumerStrategy;
1:1982d54:     }
1:1982d54: 
1:77bcffc:     @Override
1:1982d54:     public long getMaxTimeSinceLastAck() {
1:1982d54:         return strategy.getMaxTimeSinceLastAck();
1:1982d54:     }
1:1982d54: 
1:77bcffc:     @Override
1:1982d54:     public void setMaxTimeSinceLastAck(long maxTimeSinceLastAck) {
1:1982d54:         this.strategy.setMaxTimeSinceLastAck(maxTimeSinceLastAck);
1:1982d54:     }
1:1982d54: 
1:77bcffc:     @Override
1:1982d54:     public boolean isIgnoreIdleConsumers() {
1:1982d54:         return strategy.isIgnoreIdleConsumers();
1:1982d54:     }
1:1982d54: 
1:77bcffc:     @Override
1:1982d54:     public void setIgnoreIdleConsumers(boolean ignoreIdleConsumers) {
1:1982d54:         this.strategy.setIgnoreIdleConsumers(ignoreIdleConsumers);
1:1982d54:     }
1:77bcffc: 
1:77bcffc:     @Override
1:77bcffc:     public boolean isIgnoreNetworkConsumers() {
1:77bcffc:         return this.strategy.isIgnoreNetworkSubscriptions();
1:77bcffc:     }
1:77bcffc: 
1:77bcffc:     @Override
1:77bcffc:     public void setIgnoreNetworkConsumers(boolean ignoreNetworkConsumers) {
1:77bcffc:         this.strategy.setIgnoreNetworkConsumers(ignoreNetworkConsumers);
1:77bcffc:     }
1:1982d54: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:77bcffc
/////////////////////////////////////////////////////////////////////////
1: public class AbortSlowAckConsumerStrategyView extends AbortSlowConsumerStrategyView implements AbortSlowAckConsumerStrategyViewMBean {
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1: 
1:     @Override
1:     public boolean isIgnoreNetworkConsumers() {
1:         return this.strategy.isIgnoreNetworkSubscriptions();
1:     }
1: 
1:     @Override
1:     public void setIgnoreNetworkConsumers(boolean ignoreNetworkConsumers) {
1:         this.strategy.setIgnoreNetworkConsumers(ignoreNetworkConsumers);
1:     }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:1982d54
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import org.apache.activemq.broker.region.policy.AbortSlowAckConsumerStrategy;
1: 
0: public class AbortSlowAckConsumerStrategyView extends AbortSlowConsumerStrategyView {
1: 
1:     private final AbortSlowAckConsumerStrategy strategy;
1: 
1:     public AbortSlowAckConsumerStrategyView(ManagedRegionBroker managedRegionBroker, AbortSlowAckConsumerStrategy slowConsumerStrategy) {
1:         super(managedRegionBroker, slowConsumerStrategy);
1:         this.strategy = slowConsumerStrategy;
1:     }
1: 
1:     public long getMaxTimeSinceLastAck() {
1:         return strategy.getMaxTimeSinceLastAck();
1:     }
1: 
1:     public void setMaxTimeSinceLastAck(long maxTimeSinceLastAck) {
1:         this.strategy.setMaxTimeSinceLastAck(maxTimeSinceLastAck);
1:     }
1: 
1:     public boolean isIgnoreIdleConsumers() {
1:         return strategy.isIgnoreIdleConsumers();
1:     }
1: 
1:     public void setIgnoreIdleConsumers(boolean ignoreIdleConsumers) {
1:         this.strategy.setIgnoreIdleConsumers(ignoreIdleConsumers);
1:     }
1: }
============================================================================