1:3630a41: /**
1:3630a41:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3630a41:  * contributor license agreements.  See the NOTICE file distributed with
1:3630a41:  * this work for additional information regarding copyright ownership.
1:3630a41:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3630a41:  * (the "License"); you may not use this file except in compliance with
1:3630a41:  * the License.  You may obtain a copy of the License at
1:3630a41:  *
1:3630a41:  *      http://www.apache.org/licenses/LICENSE-2.0
1:3630a41:  *
1:3630a41:  * Unless required by applicable law or agreed to in writing, software
1:3630a41:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3630a41:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3630a41:  * See the License for the specific language governing permissions and
1:3630a41:  * limitations under the License.
1:3630a41:  */
1:3630a41: package org.apache.activemq.plugin;
1:3630a41: 
1:3630a41: import org.apache.activemq.broker.Broker;
1:3630a41: import org.apache.activemq.broker.BrokerPlugin;
1:3630a41: import org.slf4j.Logger;
1:3630a41: import org.slf4j.LoggerFactory;
1:3630a41: 
1:3630a41: /**
1:3630a41:  * Broker plugin that will monitor the broker xml configuration for
1:3630a41:  * changes and selectively apply those changes to the running broker.
1:3630a41:  *
1:3630a41:  * @org.apache.xbean.XBean
1:3630a41:  */
1:3630a41: public class RuntimeConfigurationPlugin implements BrokerPlugin {
1:3630a41:     public static final Logger LOG = LoggerFactory.getLogger(RuntimeConfigurationPlugin.class);
1:3630a41: 
1:3630a41:     private long checkPeriod;
1:3630a41: 
1:3630a41:     @Override
1:3630a41:     public Broker installPlugin(Broker broker) throws Exception {
1:3630a41:         LOG.info("installing runtimeConfiguration plugin");
1:3630a41:         RuntimeConfigurationBroker runtimeConfigurationBroker = new RuntimeConfigurationBroker(broker);
1:3630a41:         runtimeConfigurationBroker.setCheckPeriod(getCheckPeriod());
1:3630a41: 
1:3630a41:         return runtimeConfigurationBroker;
1:3630a41:     }
1:3630a41: 
1:3630a41:     public long getCheckPeriod() {
1:3630a41:         return checkPeriod;
1:3630a41:     }
1:3630a41: 
1:3630a41:     public void setCheckPeriod(long checkPeriod) {
1:3630a41:         this.checkPeriod = checkPeriod;
1:3630a41:     }
1:3630a41: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:3630a41
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.plugin;
1: 
1: import org.apache.activemq.broker.Broker;
1: import org.apache.activemq.broker.BrokerPlugin;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: /**
1:  * Broker plugin that will monitor the broker xml configuration for
1:  * changes and selectively apply those changes to the running broker.
1:  *
1:  * @org.apache.xbean.XBean
1:  */
1: public class RuntimeConfigurationPlugin implements BrokerPlugin {
1:     public static final Logger LOG = LoggerFactory.getLogger(RuntimeConfigurationPlugin.class);
1: 
1:     private long checkPeriod;
1: 
1:     @Override
1:     public Broker installPlugin(Broker broker) throws Exception {
1:         LOG.info("installing runtimeConfiguration plugin");
1:         RuntimeConfigurationBroker runtimeConfigurationBroker = new RuntimeConfigurationBroker(broker);
1:         runtimeConfigurationBroker.setCheckPeriod(getCheckPeriod());
1: 
1:         return runtimeConfigurationBroker;
1:     }
1: 
1:     public long getCheckPeriod() {
1:         return checkPeriod;
1:     }
1: 
1:     public void setCheckPeriod(long checkPeriod) {
1:         this.checkPeriod = checkPeriod;
1:     }
1: }
============================================================================