1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:5be5a62:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5be5a62:  *
1:5be5a62:  * Unless required by applicable law or agreed to in writing, software
1:5be5a62:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5be5a62:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5be5a62:  * See the License for the specific language governing permissions and
1:5be5a62:  * limitations under the License.
1:5be5a62:  */
1:d29ca2a: package org.apache.activemq.command;
6:d29ca2a: 
1:d29ca2a: import java.io.IOException;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.state.CommandVisitor;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Removes a consumer, producer, session or connection.
1:f812e34:  * 
1:4afa5d6:  * @openwire:marshaller code="12"
1:b0c2a40:  * 
1:d29ca2a:  */
1:d29ca2a: public class RemoveInfo extends BaseCommand {
1:f812e34: 
1:f812e34:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.REMOVE_INFO;
1:eb6c082:     public static final int LAST_DELIVERED_UNSET = -1;
1:eb6c082:     public static final int LAST_DELIVERED_UNKNOWN = -2;
1:d29ca2a:     protected DataStructure objectId;
1:eb6c082:     protected long lastDeliveredSequenceId = LAST_DELIVERED_UNKNOWN;
1:d29ca2a: 
1:f812e34:     public RemoveInfo() {
1:f812e34:     }
1:f812e34: 
1:d29ca2a:     public RemoveInfo(DataStructure objectId) {
1:d29ca2a:         this.objectId = objectId;
1:d29ca2a:     }
1:d29ca2a: 
1:933eb2f:     public byte getDataStructureType() {
1:933eb2f:         return DATA_STRUCTURE_TYPE;
1:933eb2f:     }
1:933eb2f: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1 cache=true
1:d29ca2a:      */
1:d29ca2a:     public DataStructure getObjectId() {
1:d29ca2a:         return objectId;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public void setObjectId(DataStructure objectId) {
1:f812e34:         this.objectId = objectId;
1:d29ca2a:     }
1:d29ca2a: 
1:3b08860:     /**
1:3b08860:      * @openwire:property version=5 cache=false
1:3b08860:      */
1:3b08860:     public long getLastDeliveredSequenceId() {
1:3b08860:         return lastDeliveredSequenceId;
1:d29ca2a:     }
1:d29ca2a: 
1:3b08860:     public void setLastDeliveredSequenceId(long lastDeliveredSequenceId) {
1:3b08860:         this.lastDeliveredSequenceId = lastDeliveredSequenceId;
1:d29ca2a:     }
1:d29ca2a: 
1:7f5213b:     public Response visit(CommandVisitor visitor) throws Exception {
1:d29ca2a:         switch (objectId.getDataStructureType()) {
1:d29ca2a:         case ConnectionId.DATA_STRUCTURE_TYPE:
1:3b08860:             return visitor.processRemoveConnection((ConnectionId)objectId, lastDeliveredSequenceId);
1:d29ca2a:         case SessionId.DATA_STRUCTURE_TYPE:
1:3b08860:             return visitor.processRemoveSession((SessionId)objectId, lastDeliveredSequenceId);
1:d29ca2a:         case ConsumerId.DATA_STRUCTURE_TYPE:
1:3b08860:             return visitor.processRemoveConsumer((ConsumerId)objectId, lastDeliveredSequenceId);
1:d29ca2a:         case ProducerId.DATA_STRUCTURE_TYPE:
1:f812e34:             return visitor.processRemoveProducer((ProducerId)objectId);
1:d29ca2a:         default:
1:f812e34:             throw new IOException("Unknown remove command type: " + objectId.getDataStructureType());
1:d29ca2a:         }
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:d29ca2a:      * Returns true if this event is for a removed connection
1:d29ca2a:      */
1:d29ca2a:     public boolean isConnectionRemove() {
1:d29ca2a:         return objectId.getDataStructureType() == ConnectionId.DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:d29ca2a:      * Returns true if this event is for a removed session
1:d29ca2a:      */
1:d29ca2a:     public boolean isSessionRemove() {
1:d29ca2a:         return objectId.getDataStructureType() == SessionId.DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:d29ca2a:      * Returns true if this event is for a removed consumer
1:d29ca2a:      */
1:d29ca2a:     public boolean isConsumerRemove() {
1:d29ca2a:         return objectId.getDataStructureType() == ConsumerId.DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Returns true if this event is for a removed producer
1:d29ca2a:      */
1:d29ca2a:     public boolean isProducerRemove() {
1:d29ca2a:         return objectId.getDataStructureType() == ProducerId.DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:gtully
-------------------------------------------------------------------------------
commit:eb6c082
/////////////////////////////////////////////////////////////////////////
1:     public static final int LAST_DELIVERED_UNSET = -1;
1:     public static final int LAST_DELIVERED_UNKNOWN = -2;
1:     protected long lastDeliveredSequenceId = LAST_DELIVERED_UNKNOWN;
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public byte getDataStructureType() {
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1:  * 
1: 
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.REMOVE_INFO;
1:     }
1:     public RemoveInfo() {
1: 
1:         this.objectId = objectId;
1: 
/////////////////////////////////////////////////////////////////////////
0:             return visitor.processRemoveConnection((ConnectionId)objectId);
0:             return visitor.processRemoveSession((SessionId)objectId);
0:             return visitor.processRemoveConsumer((ConsumerId)objectId);
1:             return visitor.processRemoveProducer((ProducerId)objectId);
1:             throw new IOException("Unknown remove command type: " + objectId.getDataStructureType());
1: 
1: 
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:7f5213b
/////////////////////////////////////////////////////////////////////////
1:     public Response visit(CommandVisitor visitor) throws Exception {
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
0: * <a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a>
0: *
0: * Copyright 2005 (C) LogicBlaze, Inc. http://www.logicblaze.com
0: *
0: * Licensed under the Apache License, Version 2.0 (the "License");
0: * you may not use this file except in compliance with the License.
0: * You may obtain a copy of the License at
0: *
0: * http://www.apache.org/licenses/LICENSE-2.0
0: *
0: * Unless required by applicable law or agreed to in writing, software
0: * distributed under the License is distributed on an "AS IS" BASIS,
0: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0: * See the License for the specific language governing permissions and
0: * limitations under the License.
0: *
0: **/
1: package org.apache.activemq.command;
1: 
1: import java.io.IOException;
1: 
1: import org.apache.activemq.state.CommandVisitor;
1: 
1: /**
1:  * Removes a consumer, producer, session or connection.
0:  *  
0:  * @openwire:marshaller
0:  * @version $Revision$
1:  */
1: public class RemoveInfo extends BaseCommand {
1:     
0:     public static final byte DATA_STRUCTURE_TYPE=CommandTypes.REMOVE_INFO;
1: 
1:     protected DataStructure objectId;
1: 
0:     public byte getDataStructureType() {
0:         return DATA_STRUCTURE_TYPE;
1:     }    
1: 
0:     public RemoveInfo() {        
1:     }
1:     public RemoveInfo(DataStructure objectId) {
0:         this.objectId=objectId;
1:     }
1:     
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
1:     public DataStructure getObjectId() {
1:         return objectId;
1:     }
1: 
1:     public void setObjectId(DataStructure objectId) {
1:         this.objectId = objectId;
1:     }
1: 
0:     public Response visit(CommandVisitor visitor) throws Throwable {
1:         switch (objectId.getDataStructureType()) {
1:         case ConnectionId.DATA_STRUCTURE_TYPE:
0:             return visitor.processRemoveConnection((ConnectionId) objectId);
1:         case SessionId.DATA_STRUCTURE_TYPE:
0:             return visitor.processRemoveSession((SessionId) objectId);
1:         case ConsumerId.DATA_STRUCTURE_TYPE:
0:             return visitor.processRemoveConsumer((ConsumerId) objectId);
1:         case ProducerId.DATA_STRUCTURE_TYPE:
0:             return visitor.processRemoveProducer((ProducerId) objectId);
1:         default:
0:             throw new IOException("Unknown remove command type: "+ objectId.getDataStructureType());
1:         }
1:     }
1:     
1:     /**
1:      * Returns true if this event is for a removed connection
1:      */
1:     public boolean isConnectionRemove() {
1:         return objectId.getDataStructureType() == ConnectionId.DATA_STRUCTURE_TYPE;
1:     }
1:     
1:     /**
1:      * Returns true if this event is for a removed session
1:      */
1:     public boolean isSessionRemove() {
1:         return objectId.getDataStructureType() == SessionId.DATA_STRUCTURE_TYPE;
1:     }
1:     
1:     /**
1:      * Returns true if this event is for a removed consumer
1:      */
1:     public boolean isConsumerRemove() {
1:         return objectId.getDataStructureType() == ConsumerId.DATA_STRUCTURE_TYPE;
1:     }
1: 
1:     /**
1:      * Returns true if this event is for a removed producer
1:      */
1:     public boolean isProducerRemove() {
1:         return objectId.getDataStructureType() == ProducerId.DATA_STRUCTURE_TYPE;
1:     }
1: 
1: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:3b08860
/////////////////////////////////////////////////////////////////////////
0:     protected long lastDeliveredSequenceId;
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * @openwire:property version=5 cache=false
1:      */
1:     public long getLastDeliveredSequenceId() {
1:         return lastDeliveredSequenceId;
0:     }
0: 
1:     public void setLastDeliveredSequenceId(long lastDeliveredSequenceId) {
1:         this.lastDeliveredSequenceId = lastDeliveredSequenceId;
0:     }
0: 
1:             return visitor.processRemoveConnection((ConnectionId)objectId, lastDeliveredSequenceId);
1:             return visitor.processRemoveSession((SessionId)objectId, lastDeliveredSequenceId);
1:             return visitor.processRemoveConsumer((ConsumerId)objectId, lastDeliveredSequenceId);
author:James Strachan
-------------------------------------------------------------------------------
commit:4afa5d6
/////////////////////////////////////////////////////////////////////////
1:  * @openwire:marshaller code="12"
============================================================================