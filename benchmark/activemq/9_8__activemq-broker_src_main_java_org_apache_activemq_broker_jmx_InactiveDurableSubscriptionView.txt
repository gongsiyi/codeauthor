1:c82f6f3: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
1:7f883f6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:7f883f6:  * Unless required by applicable law or agreed to in writing, software
1:7f883f6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7f883f6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7f883f6:  * See the License for the specific language governing permissions and
1:7f883f6:  * limitations under the License.
1:c82f6f3:  */
1:c82f6f3: package org.apache.activemq.broker.jmx;
1:c717221: 
1:c82f6f3: import javax.management.openmbean.CompositeData;
1:c82f6f3: import javax.management.openmbean.OpenDataException;
1:c82f6f3: import javax.management.openmbean.TabularData;
1:c717221: 
1:e06685f: import org.apache.activemq.broker.BrokerService;
1:857cc8c: import org.apache.activemq.broker.ConnectionContext;
1:caca105: import org.apache.activemq.broker.region.Subscription;
1:caca105: import org.apache.activemq.command.ConsumerInfo;
1:857cc8c: import org.apache.activemq.command.RemoveSubscriptionInfo;
1:c82f6f3: import org.apache.activemq.command.SubscriptionInfo;
9:c82f6f3: 
1:c717221: /**
1:b0c2a40:  *
1:7f883f6:  *
1:c82f6f3:  */
1:4dde323: public class InactiveDurableSubscriptionView extends DurableSubscriptionView implements DurableSubscriptionViewMBean {
1:857cc8c:     protected SubscriptionInfo subscriptionInfo;
1:230a86c: 
1:c82f6f3:     /**
1:c717221:      * Constructor
1:230a86c:      *
1:c717221:      * @param broker
1:5e05df1:      * @param brokerService
1:c717221:      * @param clientId
1:caca105:      * @param subInfo
1:5e05df1:      * @param subscription
1:c717221:      */
1:e06685f:     public InactiveDurableSubscriptionView(ManagedRegionBroker broker, BrokerService brokerService, String clientId, SubscriptionInfo subInfo, Subscription subscription) {
1:e06685f:         super(broker, brokerService, clientId, null, subscription);
1:c717221:         this.broker = broker;
1:caca105:         this.subscriptionInfo = subInfo;
1:c82f6f3:     }
1:c82f6f3: 
1:c82f6f3:     /**
1:c82f6f3:      * @return the id of the Subscription
1:c82f6f3:      */
1:38ab4b1:     @Override
1:38ab4b1:     public long getSubscriptionId() {
1:c82f6f3:         return -1;
1:86cbdfd:     }
1:c82f6f3: 
1:c82f6f3:     /**
1:c82f6f3:      * @return the destination name
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public String getDestinationName() {
1:857cc8c:         return subscriptionInfo.getDestination().getPhysicalName();
1:c82f6f3:     }
1:230a86c: 
1:c82f6f3:     /**
1:c82f6f3:      * @return true if the destination is a Queue
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public boolean isDestinationQueue() {
1:c82f6f3:         return false;
1:c82f6f3:     }
1:c82f6f3: 
1:c82f6f3:     /**
1:c82f6f3:      * @return true of the destination is a Topic
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public boolean isDestinationTopic() {
1:c82f6f3:         return true;
1:c82f6f3:     }
1:c82f6f3: 
1:c82f6f3:     /**
1:c82f6f3:      * @return true if the destination is temporary
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public boolean isDestinationTemporary() {
1:c82f6f3:         return false;
1:c82f6f3:     }
1:230a86c: 
1:c82f6f3:     /**
1:c82f6f3:      * @return name of the durable consumer
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public String getSubscriptionName() {
1:350a2aa:         return subscriptionInfo.getSubscriptionName();
1:c82f6f3:     }
1:230a86c: 
1:c82f6f3:     /**
1:c82f6f3:      * @return true if the subscriber is active
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public boolean isActive() {
1:c82f6f3:         return false;
1:c82f6f3:     }
1:c82f6f3: 
1:caca105:     @Override
1:caca105:     protected ConsumerInfo getConsumerInfo() {
1:caca105:         // when inactive, consumer info is stale
1:caca105:         return null;
1:caca105:     }
1:caca105: 
1:c82f6f3:     /**
1:c82f6f3:      * Browse messages for this durable subscriber
2:f5dcc9d:      *
1:c82f6f3:      * @return messages
1:c82f6f3:      * @throws OpenDataException
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public CompositeData[] browse() throws OpenDataException {
1:c717221:         return broker.browse(this);
1:c82f6f3:     }
1:c717221: 
1:c82f6f3:     /**
1:c82f6f3:      * Browse messages for this durable subscriber
1:f5dcc9d:      *
1:c82f6f3:      * @return messages
1:c82f6f3:      * @throws OpenDataException
1:c82f6f3:      */
1:38ab4b1:     @Override
1:230a86c:     public TabularData browseAsTable() throws OpenDataException {
1:c717221:         return broker.browseAsTable(this);
1:c717221:     }
1:230a86c: 
1:857cc8c:     /**
1:230a86c:      * Destroys the durable subscription so that messages will no longer be
1:230a86c:      * stored for this subscription
1:857cc8c:      */
1:38ab4b1:     @Override
1:857cc8c:     public void destroy() throws Exception {
1:857cc8c:         RemoveSubscriptionInfo info = new RemoveSubscriptionInfo();
1:857cc8c:         info.setClientId(clientId);
1:933eb2f:         info.setSubscriptionName(subscriptionInfo.getSubscriptionName());
1:857cc8c:         ConnectionContext context = new ConnectionContext();
1:857cc8c:         context.setBroker(broker);
1:857cc8c:         context.setClientId(clientId);
1:e06685f:         brokerService.getBroker().removeSubscription(context, info);
1:c82f6f3:     }
1:230a86c: 
1:38ab4b1:     @Override
1:230a86c:     public String toString() {
1:230a86c:         return "InactiveDurableSubscriptionView: " + getClientId() + ":" + getSubscriptionName();
1:c82f6f3:     }
1:79c9f2d: 
1:79c9f2d:     @Override
1:79c9f2d:     public String getSelector() {
1:79c9f2d:         return subscriptionInfo.getSelector();
1:79c9f2d:     }
1:11579bb: 
1:11579bb:     @Override
1:11579bb:     public void removeMessage(@MBeanInfo("messageId") String messageId) throws Exception {
1:11579bb:         broker.remove(this, messageId);
1:11579bb:     }
1:11579bb: 
1:c82f6f3: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:gtully
-------------------------------------------------------------------------------
commit:11579bb
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public void removeMessage(@MBeanInfo("messageId") String messageId) throws Exception {
1:         broker.remove(this, messageId);
1:     }
1: 
author:Timothy Bish
-------------------------------------------------------------------------------
commit:5e05df1
/////////////////////////////////////////////////////////////////////////
1:      * @param brokerService
1:      * @param subscription
commit:38ab4b1
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public long getSubscriptionId() {
1:     @Override
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:e06685f
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.BrokerService;
/////////////////////////////////////////////////////////////////////////
1:     public InactiveDurableSubscriptionView(ManagedRegionBroker broker, BrokerService brokerService, String clientId, SubscriptionInfo subInfo, Subscription subscription) {
1:         super(broker, brokerService, clientId, null, subscription);
/////////////////////////////////////////////////////////////////////////
1:         brokerService.getBroker().removeSubscription(context, info);
commit:79c9f2d
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public String getSelector() {
1:         return subscriptionInfo.getSelector();
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:         info.setSubscriptionName(subscriptionInfo.getSubscriptionName());
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
0: public class InactiveDurableSubscriptionView extends SubscriptionView implements DurableSubscriptionViewMBean {
1: 
1:      * 
0:     public InactiveDurableSubscriptionView(ManagedRegionBroker broker, String clientId, SubscriptionInfo sub) {
0:         super(clientId, null);
0:     public long getSubcriptionId() {
1:     public String getDestinationName() {
1: 
1:     public boolean isDestinationQueue() {
1:     public boolean isDestinationTopic() {
1:     public boolean isDestinationTemporary() {
1: 
1:     public String getSubscriptionName() {
1: 
1:     public boolean isActive() {
/////////////////////////////////////////////////////////////////////////
1:     public CompositeData[] browse() throws OpenDataException {
/////////////////////////////////////////////////////////////////////////
1:     public TabularData browseAsTable() throws OpenDataException {
1: 
1:      * Destroys the durable subscription so that messages will no longer be
1:      * stored for this subscription
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String toString() {
1:         return "InactiveDurableSubscriptionView: " + getClientId() + ":" + getSubscriptionName();
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:f5dcc9d
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:      *
0:      * @param userName
0:         super(broker, clientId, null, subscription);
/////////////////////////////////////////////////////////////////////////
0:      *
/////////////////////////////////////////////////////////////////////////
0:      *
author:Gary Tully
-------------------------------------------------------------------------------
commit:caca105
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.region.Subscription;
1: import org.apache.activemq.command.ConsumerInfo;
/////////////////////////////////////////////////////////////////////////
1:      * @param subInfo
0:     public InactiveDurableSubscriptionView(ManagedRegionBroker broker, String clientId, SubscriptionInfo subInfo, Subscription subscription) {
0:         super(broker,clientId, subscription);
1:         this.subscriptionInfo = subInfo;
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     protected ConsumerInfo getConsumerInfo() {
1:         // when inactive, consumer info is stale
1:         return null;
1:     }
1: 
author:Robert Davies
-------------------------------------------------------------------------------
commit:4dde323
/////////////////////////////////////////////////////////////////////////
1: public class InactiveDurableSubscriptionView extends DurableSubscriptionView implements DurableSubscriptionViewMBean {
/////////////////////////////////////////////////////////////////////////
0:         super(broker,clientId, null);
commit:350a2aa
/////////////////////////////////////////////////////////////////////////
1:         return subscriptionInfo.getSubscriptionName();
/////////////////////////////////////////////////////////////////////////
0:         info.setSubcriptionName(subscriptionInfo.getSubscriptionName());
commit:c717221
/////////////////////////////////////////////////////////////////////////
0:     protected ManagedRegionBroker broker;
1:     
1:     
1:     /**
1:      * Constructor
1:      * @param broker
1:      * @param clientId
0:      * @param sub
1:      */
0:     public InactiveDurableSubscriptionView(ManagedRegionBroker broker,String clientId,SubscriptionInfo sub){
1:         this.broker = broker;
/////////////////////////////////////////////////////////////////////////
1:         return broker.browse(this);
/////////////////////////////////////////////////////////////////////////
1:         return broker.browseAsTable(this);
1:     }
1:     
0:     public String toString(){
0:         return "InactiveDurableSubscriptionView: " + getClientId()  + ":" +  getSubscriptionName();
commit:c82f6f3
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * 
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
0:  * the License. You may obtain a copy of the License at
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
0:  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
0:  * specific language governing permissions and limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import javax.management.openmbean.CompositeData;
1: import javax.management.openmbean.OpenDataException;
1: import javax.management.openmbean.TabularData;
1: import org.apache.activemq.command.SubscriptionInfo;
1: /**
0:  * @version $Revision: 1.5 $
1:  */
0: public class InactiveDurableSubscriptionView extends SubscriptionView implements  DurableSubscriptionViewMBean {
1:     
0:     protected SubscriptionInfo info;
0:     public InactiveDurableSubscriptionView(String clientId,SubscriptionInfo sub){
0:         super(clientId,null);
0:         this.info = sub;
1:     }
1:     
1:     
1: 
1:     
1:     /**
1:      * @return the id of the Subscription
1:      */
0:     public long getSubcriptionId(){
1:         return -1;
1:     }
1: 
1:     /**
1:      * @return the destination name
1:      */
0:     public String getDestinationName(){
0:         return info.getDestination().getPhysicalName();
1:        
1:     }
1: 
1:     /**
1:      * @return true if the destination is a Queue
1:      */
0:     public boolean isDestinationQueue(){
1:         return false;
1:     }
1: 
1:     /**
1:      * @return true of the destination is a Topic
1:      */
0:     public boolean isDestinationTopic(){
1:         return true;
1:     }
1: 
1:     /**
1:      * @return true if the destination is temporary
1:      */
0:     public boolean isDestinationTemporary(){
1:         return false;
1:     }
1:     /**
1:      * @return name of the durable consumer
1:      */
0:     public String getSubscriptionName(){
0:         return info.getSubcriptionName();
1:     }
1:     
1:     /**
1:      * @return true if the subscriber is active
1:      */
0:     public boolean isActive(){
1:         return false;
1:     }
1: 
1:     /**
1:      * Browse messages for this durable subscriber
0:      * 
1:      * @return messages
1:      * @throws OpenDataException
1:      */
0:     public CompositeData[] browse() throws OpenDataException{
0:         return null;
1:     }
1: 
1:     /**
1:      * Browse messages for this durable subscriber
0:      * 
1:      * @return messages
1:      * @throws OpenDataException
1:      */
0:     public TabularData browseAsTable() throws OpenDataException{
0:         return null;
1:     }
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:857cc8c
/////////////////////////////////////////////////////////////////////////
0: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.RemoveSubscriptionInfo;
0: 
0:  * TODO why does this class not inherit from DurableSubscriptionView?
0:  * 
1:     protected SubscriptionInfo subscriptionInfo;
/////////////////////////////////////////////////////////////////////////
0:         this.subscriptionInfo = sub;
/////////////////////////////////////////////////////////////////////////
1:         return subscriptionInfo.getDestination().getPhysicalName();
/////////////////////////////////////////////////////////////////////////
0:         return subscriptionInfo.getSubcriptionName();
/////////////////////////////////////////////////////////////////////////
1:     /**
0:      * Destroys the durable subscription so that messages will no longer be stored for this subscription
1:      */
1:     public void destroy() throws Exception {
1:         RemoveSubscriptionInfo info = new RemoveSubscriptionInfo();
1:         info.setClientId(clientId);
0:         info.setSubcriptionName(subscriptionInfo.getSubcriptionName());
1:         ConnectionContext context = new ConnectionContext();
1:         context.setBroker(broker);
1:         context.setClientId(clientId);
0:         broker.removeSubscription(context, info);
0:     }
0:     
============================================================================