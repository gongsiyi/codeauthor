1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.authc;
1:f9451e5: 
1:f9451e5: import org.apache.activemq.shiro.ConnectionReference;
1:f9451e5: import org.apache.activemq.shiro.subject.SubjectConnectionReference;
1:f9451e5: import org.apache.shiro.subject.Subject;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * An {@code AuthenticationPolicy} customizes the behavior of the {@link AuthenticationFilter}, such as whether or not
1:f9451e5:  * authentication is required or how to represent trusted/known {@code Subject} identities.
1:f9451e5:  * <p/>
1:f9451e5:  * Most will find customizing properties on the {@link DefaultAuthenticationPolicy} easier than implementing this
1:f9451e5:  * interface directly.
1:f9451e5:  *
1:f9451e5:  * @see DefaultAuthenticationPolicy
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public interface AuthenticationPolicy {
1:f9451e5: 
1:f9451e5:     /**
1:f9451e5:      * Allows customization of the {@code Subject} being built for the specified client
1:f9451e5:      * connection.  This allows for any pre-existing connection-specific identity or state to be applied to the
1:f9451e5:      * {@link Subject.Builder} before the {@code Subject} instance is actually created.
1:f9451e5:      * <p/>
1:f9451e5:      * <b>NOTE:</b> This method is called by the {@link org.apache.activemq.shiro.subject.SubjectFilter SubjectFilter} <em>before</em> the filter chain
1:f9451e5:      * is executed (and before an authentication attempt occurs).  Implementations <b><em>MUST NOT</em></b>
1:f9451e5:      * attempt to actually {@link org.apache.shiro.subject.Subject.Builder#buildSubject() build} the subject or perform
1:f9451e5:      * an authentication attempt in this method.
1:f9451e5:      *
1:f9451e5:      * @param subjectBuilder the builder for the Subject that will be created representing the associated client connection
1:f9451e5:      * @param ref            a reference to the client's connection metadata
1:f9451e5:      * @see org.apache.activemq.shiro.subject.SubjectFilter
1:f9451e5:      */
1:f9451e5:     void customizeSubject(Subject.Builder subjectBuilder, ConnectionReference ref);
1:f9451e5: 
1:f9451e5:     /**
1:f9451e5:      * Returns {@code true} if the connection's {@code Subject} instance should be authenticated, {@code false} otherwise.
1:f9451e5:      *
1:f9451e5:      * @param ref the subject's connection
1:f9451e5:      * @return {@code true} if the connection's {@code Subject} instance should be authenticated, {@code false} otherwise.
1:f9451e5:      */
1:f9451e5:     boolean isAuthenticationRequired(SubjectConnectionReference ref);
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.authc;
1: 
1: import org.apache.activemq.shiro.ConnectionReference;
1: import org.apache.activemq.shiro.subject.SubjectConnectionReference;
1: import org.apache.shiro.subject.Subject;
1: 
1: /**
1:  * An {@code AuthenticationPolicy} customizes the behavior of the {@link AuthenticationFilter}, such as whether or not
1:  * authentication is required or how to represent trusted/known {@code Subject} identities.
1:  * <p/>
1:  * Most will find customizing properties on the {@link DefaultAuthenticationPolicy} easier than implementing this
1:  * interface directly.
1:  *
1:  * @see DefaultAuthenticationPolicy
1:  * @since 5.10.0
1:  */
1: public interface AuthenticationPolicy {
1: 
1:     /**
1:      * Allows customization of the {@code Subject} being built for the specified client
1:      * connection.  This allows for any pre-existing connection-specific identity or state to be applied to the
1:      * {@link Subject.Builder} before the {@code Subject} instance is actually created.
1:      * <p/>
1:      * <b>NOTE:</b> This method is called by the {@link org.apache.activemq.shiro.subject.SubjectFilter SubjectFilter} <em>before</em> the filter chain
1:      * is executed (and before an authentication attempt occurs).  Implementations <b><em>MUST NOT</em></b>
1:      * attempt to actually {@link org.apache.shiro.subject.Subject.Builder#buildSubject() build} the subject or perform
1:      * an authentication attempt in this method.
1:      *
1:      * @param subjectBuilder the builder for the Subject that will be created representing the associated client connection
1:      * @param ref            a reference to the client's connection metadata
1:      * @see org.apache.activemq.shiro.subject.SubjectFilter
1:      */
1:     void customizeSubject(Subject.Builder subjectBuilder, ConnectionReference ref);
1: 
1:     /**
1:      * Returns {@code true} if the connection's {@code Subject} instance should be authenticated, {@code false} otherwise.
1:      *
1:      * @param ref the subject's connection
1:      * @return {@code true} if the connection's {@code Subject} instance should be authenticated, {@code false} otherwise.
1:      */
1:     boolean isAuthenticationRequired(SubjectConnectionReference ref);
1: }
============================================================================