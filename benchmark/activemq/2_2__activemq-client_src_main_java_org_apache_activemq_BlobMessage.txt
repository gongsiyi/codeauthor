1:fc00993: /**
1:8cf4795:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8cf4795:  * contributor license agreements.  See the NOTICE file distributed with
1:8cf4795:  * this work for additional information regarding copyright ownership.
1:8cf4795:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8cf4795:  * (the "License"); you may not use this file except in compliance with
1:8cf4795:  * the License.  You may obtain a copy of the License at
1:8cf4795:  *
1:8cf4795:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8cf4795:  *
1:8cf4795:  * Unless required by applicable law or agreed to in writing, software
1:8cf4795:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8cf4795:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8cf4795:  * See the License for the specific language governing permissions and
1:8cf4795:  * limitations under the License.
1:8cf4795:  */
1:8cf4795: package org.apache.activemq;
1:8cf4795: 
1:8cf4795: import java.io.IOException;
1:74a7a8b: import java.io.InputStream;
1:74a7a8b: import java.net.MalformedURLException;
1:74a7a8b: import java.net.URL;
1:74a7a8b: 
1:74a7a8b: import javax.jms.JMSException;
1:8cf4795: 
1:8cf4795: /**
1:8cf4795:  * Represents a message which has a typically out of band Binary Large Object
1:8cf4795:  * (BLOB)
1:b0c2a40:  * 
1:8cf4795:  * 
1:8cf4795:  */
1:8cf4795: public interface BlobMessage extends Message {
1:8cf4795: 
1:8cf4795:     /**
1:8cf4795:      * Return the input stream to process the BLOB
1:8cf4795:      */
1:8cf4795:     InputStream getInputStream() throws IOException, JMSException;
1:8cf4795: 
1:8cf4795:     /**
1:8cf4795:      * Returns the URL for the blob if its available as an external URL (such as file, http, ftp etc)
1:8cf4795:      * or null if there is no URL available
1:8cf4795:      */
1:8cf4795:     URL getURL() throws MalformedURLException, JMSException;
1:8cf4795: 
1:8cf4795: 
1:8cf4795:     /**
1:8cf4795:      * The MIME type of the BLOB which can be used to apply different content types to messages.
1:8cf4795:      */
1:8cf4795:     String getMimeType();
1:8cf4795: 
1:8cf4795:     /**
1:8cf4795:      * Sets the MIME type of the BLOB so that a consumer can process things nicely with a Java Activation Framework
1:8cf4795:      * DataHandler
1:8cf4795:      */
1:8cf4795:     void setMimeType(String mimeType);
1:05a8cba: 
1:8cf4795: 
1:05a8cba:     String getName();
1:05a8cba: 
1:05a8cba:     /**
1:05a8cba:      * The name of the attachment which can be useful information if transmitting files over ActiveMQ
1:05a8cba:      */
1:05a8cba:     void setName(String name);
1:8cf4795: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: /**
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.io.InputStream;
1: import java.net.MalformedURLException;
1: import java.net.URL;
1: 
1: import javax.jms.JMSException;
author:James Strachan
-------------------------------------------------------------------------------
commit:05a8cba
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
1:     String getName();
1: 
1:     /**
1:      * The name of the attachment which can be useful information if transmitting files over ActiveMQ
1:      */
1:     void setName(String name);
commit:8cf4795
/////////////////////////////////////////////////////////////////////////
0: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq;
1: 
0: import javax.jms.Message;
0: import javax.jms.JMSException;
0: import java.net.URL;
0: import java.net.MalformedURLException;
0: import java.io.InputStream;
1: import java.io.IOException;
1: 
1: /**
1:  * Represents a message which has a typically out of band Binary Large Object
1:  * (BLOB)
1:  * 
0:  * @version $Revision: $
1:  */
1: public interface BlobMessage extends Message {
1: 
1:     /**
1:      * Return the input stream to process the BLOB
1:      */
1:     InputStream getInputStream() throws IOException, JMSException;
1: 
1:     /**
1:      * Returns the URL for the blob if its available as an external URL (such as file, http, ftp etc)
1:      * or null if there is no URL available
1:      */
1:     URL getURL() throws MalformedURLException, JMSException;
1: 
1: 
1:     /**
1:      * The MIME type of the BLOB which can be used to apply different content types to messages.
1:      */
1:     String getMimeType();
1: 
1:     /**
1:      * Sets the MIME type of the BLOB so that a consumer can process things nicely with a Java Activation Framework
1:      * DataHandler
1:      */
1:     void setMimeType(String mimeType);
1: 
1: }
============================================================================