1:1595378: /**
1:1595378:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1595378:  * contributor license agreements.  See the NOTICE file distributed with
1:1595378:  * this work for additional information regarding copyright ownership.
1:1595378:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1595378:  * (the "License"); you may not use this file except in compliance with
1:1595378:  * the License.  You may obtain a copy of the License at
1:1595378:  *
1:1595378:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1595378:  *
1:1595378:  * Unless required by applicable law or agreed to in writing, software
1:1595378:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1595378:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1595378:  * See the License for the specific language governing permissions and
1:1595378:  * limitations under the License.
1:1595378:  */
1:1595378: package org.apache.activemq.store.kahadb;
2:1595378: 
1:221da8b: import org.apache.activemq.command.ActiveMQDestination;
1:1595378: import org.apache.activemq.filter.DestinationMapEntry;
1:21fe8ca: import org.apache.activemq.store.PersistenceAdapter;
1:0ae90c0: import org.apache.activemq.usage.StoreUsage;
1:1595378: 
1:1595378: /**
1:1595378:  * @org.apache.xbean.XBean element="filteredKahaDB"
1:1595378:  *
1:1595378:  */
1:1595378: public class FilteredKahaDBPersistenceAdapter extends DestinationMapEntry {
1:21fe8ca:     private PersistenceAdapter persistenceAdapter;
1:221da8b:     private boolean perDestination;
1:0ae90c0:     private StoreUsage usage;
1:221da8b: 
1:221da8b:     public FilteredKahaDBPersistenceAdapter() {
1:221da8b:         super();
1:221da8b:     }
1:221da8b: 
1:0ae90c0:     public FilteredKahaDBPersistenceAdapter(FilteredKahaDBPersistenceAdapter template, ActiveMQDestination destination, PersistenceAdapter adapter) {
1:221da8b:         setDestination(destination);
1:221da8b:         persistenceAdapter  = adapter;
1:0ae90c0:         if (template.getUsage() != null) {
1:0ae90c0:             usage = template.getUsage().copy();
1:0ae90c0:         }
1:221da8b:     }
1:221da8b: 
1:21fe8ca:     public PersistenceAdapter getPersistenceAdapter() {
1:1595378:         return persistenceAdapter;
2:1595378:     }
1:1595378: 
1:21fe8ca:     public void setPersistenceAdapter(PersistenceAdapter persistenceAdapter) {
1:1595378:         this.persistenceAdapter = persistenceAdapter;
1:1595378:     }
1:1595378: 
1:221da8b:     public boolean isPerDestination() {
1:221da8b:         return perDestination;
1:221da8b:     }
1:221da8b: 
1:221da8b:     public void setPerDestination(boolean perDestination) {
1:221da8b:         this.perDestination = perDestination;
1:221da8b:     }
1:ee4672b: 
1:ee4672b:     @Override
1:ee4672b:     public String toString() {
1:ee4672b:         return "FilteredKahaDBPersistenceAdapter [" + destination + "]";
1:ee4672b:     }
1:ee4672b: 
1:ee4672b:     @Override
1:ee4672b:     public int compareTo(Object that) {
1:ee4672b:         if (that instanceof FilteredKahaDBPersistenceAdapter) {
1:ee4672b:             return this.destination.compareTo(((FilteredKahaDBPersistenceAdapter) that).destination);
1:ee4672b:         }
1:ee4672b:         return super.compareTo(that);
1:ee4672b:     }
1:0ae90c0: 
1:0ae90c0:     public void setUsage(StoreUsage usage) {
1:0ae90c0:         this.usage = usage;
1:0ae90c0:     }
1:0ae90c0: 
1:0ae90c0:     public StoreUsage getUsage() {
1:0ae90c0:         return usage;
1:0ae90c0:     }
1:1595378: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:0ae90c0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.usage.StoreUsage;
/////////////////////////////////////////////////////////////////////////
1:     private StoreUsage usage;
1:     public FilteredKahaDBPersistenceAdapter(FilteredKahaDBPersistenceAdapter template, ActiveMQDestination destination, PersistenceAdapter adapter) {
1:         if (template.getUsage() != null) {
1:             usage = template.getUsage().copy();
1:         }
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void setUsage(StoreUsage usage) {
1:         this.usage = usage;
1:     }
1: 
1:     public StoreUsage getUsage() {
1:         return usage;
1:     }
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:ee4672b
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public String toString() {
1:         return "FilteredKahaDBPersistenceAdapter [" + destination + "]";
1:     }
1: 
1:     @Override
1:     public int compareTo(Object that) {
1:         if (that instanceof FilteredKahaDBPersistenceAdapter) {
1:             return this.destination.compareTo(((FilteredKahaDBPersistenceAdapter) that).destination);
1:         }
1:         return super.compareTo(that);
1:     }
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:21fe8ca
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.store.PersistenceAdapter;
1:     private PersistenceAdapter persistenceAdapter;
0:     public FilteredKahaDBPersistenceAdapter(ActiveMQDestination destination, PersistenceAdapter adapter) {
1:     public PersistenceAdapter getPersistenceAdapter() {
1:     public void setPersistenceAdapter(PersistenceAdapter persistenceAdapter) {
author:Gary Tully
-------------------------------------------------------------------------------
commit:c6cf88b
/////////////////////////////////////////////////////////////////////////
commit:221da8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.ActiveMQDestination;
/////////////////////////////////////////////////////////////////////////
1:     private boolean perDestination;
1: 
1:     public FilteredKahaDBPersistenceAdapter() {
1:         super();
1:     }
1: 
0:     public FilteredKahaDBPersistenceAdapter(ActiveMQDestination destination, KahaDBPersistenceAdapter adapter) {
1:         setDestination(destination);
1:         persistenceAdapter  = adapter;
1:     }
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean isPerDestination() {
1:         return perDestination;
1:     }
1: 
1:     public void setPerDestination(boolean perDestination) {
1:         this.perDestination = perDestination;
1:     }
commit:1595378
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.kahadb;
1: 
1: import org.apache.activemq.filter.DestinationMapEntry;
1: 
1: /**
1:  * @org.apache.xbean.XBean element="filteredKahaDB"
1:  *
1:  */
1: public class FilteredKahaDBPersistenceAdapter extends DestinationMapEntry {
0:     private KahaDBPersistenceAdapter persistenceAdapter;
1: 
0:     public KahaDBPersistenceAdapter getPersistenceAdapter() {
1:         return persistenceAdapter;
1:     }
1: 
0:     public void setPersistenceAdapter(KahaDBPersistenceAdapter persistenceAdapter) {
1:         this.persistenceAdapter = persistenceAdapter;
1:     }
1: 
0:     @Override
0:     public void afterPropertiesSet() throws Exception {
0:         // ok to have no destination, we default it
1:     }
1: }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
============================================================================