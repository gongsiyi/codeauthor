1:139a220: /**
1:139a220:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:139a220:  * contributor license agreements.  See the NOTICE file distributed with
1:139a220:  * this work for additional information regarding copyright ownership.
1:139a220:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:139a220:  * (the "License"); you may not use this file except in compliance with
1:139a220:  * the License.  You may obtain a copy of the License at
2:139a220:  *
1:139a220:  *      http://www.apache.org/licenses/LICENSE-2.0
1:139a220:  *
1:139a220:  * Unless required by applicable law or agreed to in writing, software
1:139a220:  * distributed under the License is distributed on an "AS IS" BASIS,
1:139a220:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:139a220:  * See the License for the specific language governing permissions and
1:139a220:  * limitations under the License.
1:139a220:  */
1:139a220: package org.apache.activemq.transport.tcp;
7:139a220: 
1:139a220: import java.net.URI;
1:139a220: import java.net.URISyntaxException;
1:139a220: import java.util.Map;
1:139a220: 
1:139a220: import junit.framework.TestCase;
1:4743a20: 
1:139a220: import org.apache.activemq.broker.BrokerService;
1:139a220: import org.apache.activemq.broker.TransportConnector;
1:139a220: import org.springframework.context.support.ClassPathXmlApplicationContext;
1:139a220: 
1:139a220: /**
1:4743a20:  *
1:139a220:  */
1:139a220: public class SslContextBrokerServiceTest extends TestCase {
1:139a220: 
1:139a220:     private ClassPathXmlApplicationContext context;
1:139a220:     private BrokerService broker;
1:139a220:     private TransportConnector connector;
1:139a220: 
1:139a220:     public void testConfiguration() throws URISyntaxException {
1:139a220: 
1:139a220:         assertNotNull(broker);
1:139a220:         assertNotNull(connector);
1:4743a20: 
1:139a220:         assertEquals(new URI("ssl://localhost:61616"), connector.getUri());
1:4743a20: 
1:139a220:         assertNotNull(broker.getSslContext());
1:139a220:         assertFalse(broker.getSslContext().getKeyManagers().isEmpty());
1:139a220:         assertFalse(broker.getSslContext().getTrustManagers().isEmpty());
1:4743a20: 
1:139a220:     }
1:139a220: 
1:4743a20:     @Override
1:139a220:     protected void setUp() throws Exception {
1:139a220:         Thread.currentThread().setContextClassLoader(SslContextBrokerServiceTest.class.getClassLoader());
1:139a220:         context = new ClassPathXmlApplicationContext("org/apache/activemq/transport/tcp/activemq-ssl.xml");
1:4743a20:         Map<String, BrokerService> beansOfType = context.getBeansOfType(BrokerService.class);
1:4743a20:         broker = beansOfType.values().iterator().next();
1:4743a20:         connector = broker.getTransportConnectors().get(0);
1:139a220:     }
1:4743a20: 
1:139a220:     @Override
1:139a220:     protected void tearDown() throws Exception {
1:139a220: 
1:139a220:         context.destroy();
1:139a220:     }
1:139a220: 
1:139a220: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:4743a20
/////////////////////////////////////////////////////////////////////////
1: 
1:  *
1: 
1: 
1: 
1:     @Override
1:         Map<String, BrokerService> beansOfType = context.getBeansOfType(BrokerService.class);
1:         broker = beansOfType.values().iterator().next();
1:         connector = broker.getTransportConnectors().get(0);
1: 
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:139a220
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.tcp;
1: 
1: import java.net.URI;
1: import java.net.URISyntaxException;
1: import java.util.Map;
1: 
0: import junit.framework.Test;
1: import junit.framework.TestCase;
0: import junit.textui.TestRunner;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.TransportConnector;
0: import org.apache.activemq.transport.TransportBrokerTestSupport;
1: import org.springframework.context.support.ClassPathXmlApplicationContext;
1: 
1: /**
1:  * 
1:  */
1: public class SslContextBrokerServiceTest extends TestCase {
1: 
1:     
1:     private ClassPathXmlApplicationContext context;
1:     private BrokerService broker;
1:     private TransportConnector connector;
1: 
1: 
1:     public void testConfiguration() throws URISyntaxException {
1: 
1:         assertNotNull(broker);
1:         assertNotNull(connector);
1:         
1:         assertEquals(new URI("ssl://localhost:61616"), connector.getUri());
1:         
1:         assertNotNull(broker.getSslContext());
1:         assertFalse(broker.getSslContext().getKeyManagers().isEmpty());
1:         assertFalse(broker.getSslContext().getTrustManagers().isEmpty());
1:         
1:     }
1: 
1:     protected void setUp() throws Exception {
1:         Thread.currentThread().setContextClassLoader(SslContextBrokerServiceTest.class.getClassLoader());
1:         context = new ClassPathXmlApplicationContext("org/apache/activemq/transport/tcp/activemq-ssl.xml");
0:         Map beansOfType = context.getBeansOfType(BrokerService.class);
0:         broker = (BrokerService)beansOfType.values().iterator().next();
0:         connector = broker.getTransportConnectors().get(0); 
1:     }
1:     
1:     @Override
1:     protected void tearDown() throws Exception {
1: 
1:         context.destroy();
1:     }
1: 
1: }
============================================================================