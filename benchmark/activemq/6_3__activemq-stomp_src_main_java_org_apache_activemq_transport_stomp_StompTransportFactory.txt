1:dc98d96: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:74a7a8b:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:dc98d96:  * Unless required by applicable law or agreed to in writing, software
1:dc98d96:  * distributed under the License is distributed on an "AS IS" BASIS,
1:dc98d96:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dc98d96:  * See the License for the specific language governing permissions and
1:dc98d96:  * limitations under the License.
1:dc98d96:  */
1:98b61e4: package org.apache.activemq.transport.stomp;
1:dc98d96: 
1:f33f32e: import java.util.HashMap;
1:dc98d96: import java.util.Map;
1:dc98d96: 
1:11705e7: import org.apache.activemq.broker.BrokerContext;
1:3910056: import org.apache.activemq.broker.BrokerService;
1:3910056: import org.apache.activemq.broker.BrokerServiceAware;
1:f33f32e: import org.apache.activemq.transport.MutexTransport;
1:dc98d96: import org.apache.activemq.transport.Transport;
1:dc98d96: import org.apache.activemq.transport.tcp.TcpTransportFactory;
1:05de2b1: import org.apache.activemq.util.IntrospectionSupport;
1:88acb0e: import org.apache.activemq.wireformat.WireFormat;
1:dc98d96: 
1:dc98d96: /**
1:dc98d96:  * A <a href="http://stomp.codehaus.org/">STOMP</a> transport factory
1:dc98d96:  */
1:3910056: public class StompTransportFactory extends TcpTransportFactory implements BrokerServiceAware {
1:3910056: 
1:0885c60:     private BrokerContext brokerContext = null;
1:dc98d96: 
1:dc98d96:     protected String getDefaultWireFormatType() {
1:dc98d96:         return "stomp";
1:dc98d96:     }
1:3910056: 
1:0885c60:     @SuppressWarnings("rawtypes")
1:dc98d96:     public Transport compositeConfigure(Transport transport, WireFormat format, Map options) {
1:0885c60:         transport = new StompTransportFilter(transport, format, brokerContext);
1:74a7a8b:         IntrospectionSupport.setProperties(transport, options);
1:74a7a8b:         return super.compositeConfigure(transport, format, options);
1:86cbdfd:     }
1:dc98d96: 
1:3910056:     public void setBrokerService(BrokerService brokerService) {
1:0885c60:         this.brokerContext = brokerService.getBrokerContext();
1:3910056:     }
1:0885c60: 
1:f33f32e:     @SuppressWarnings("rawtypes")
1:f33f32e:     @Override
1:f33f32e:     public Transport serverConfigure(Transport transport, WireFormat format, HashMap options) throws Exception {
1:f33f32e:         transport = super.serverConfigure(transport, format, options);
1:f33f32e: 
1:f33f32e:         MutexTransport mutex = transport.narrow(MutexTransport.class);
1:f33f32e:         if (mutex != null) {
1:f33f32e:             mutex.setSyncOnCommand(true);
1:3910056:         }
1:f33f32e: 
1:f33f32e:         return transport;
1:dc98d96:     }
1:f33f32e: 
1:0885c60:     @Override
1:0885c60:     protected Transport createInactivityMonitor(Transport transport, WireFormat format) {
1:0885c60:         StompInactivityMonitor monitor = new StompInactivityMonitor(transport, format);
1:0885c60: 
1:0885c60:         StompTransportFilter filter = (StompTransportFilter) transport.narrow(StompTransportFilter.class);
1:0885c60:         filter.setInactivityMonitor(monitor);
1:0885c60: 
1:0885c60:         return monitor;
1:dc98d96:     }
2:f33f32e: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:3910056
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.BrokerServiceAware;
0: import org.apache.activemq.xbean.XBeanBrokerService;
0: import org.springframework.context.ApplicationContext;
1: public class StompTransportFactory extends TcpTransportFactory implements BrokerServiceAware {
0: 	private ApplicationContext applicationContext = null;
1: 	
0:         transport = new StompTransportFilter(transport, new LegacyFrameTranslator(), applicationContext);
/////////////////////////////////////////////////////////////////////////
1: 
1: 	public void setBrokerService(BrokerService brokerService) {
0: 		if (brokerService instanceof XBeanBrokerService) {
0: 			this.applicationContext = ((XBeanBrokerService)brokerService).getApplicationContext();
1: 		}
1: 	}
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1:  * 
/////////////////////////////////////////////////////////////////////////
0:         transport = new StompTransportFilter(transport, new LegacyFrameTranslator());
1:         IntrospectionSupport.setProperties(transport, options);
1:         return super.compositeConfigure(transport, format, options);
0:         // lets disable the inactivity monitor as stomp does not use keep alive
0:         // packets
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:05de2b1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.IntrospectionSupport;
/////////////////////////////////////////////////////////////////////////
0:     	IntrospectionSupport.setProperties(transport, options);
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:88acb0e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.wireformat.WireFormat;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:98b61e4
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport.stomp;
commit:dc98d96
/////////////////////////////////////////////////////////////////////////
1: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.activemq.transport.stomp2;
1: 
1: import java.util.Map;
1: 
0: import org.apache.activeio.command.WireFormat;
1: import org.apache.activemq.transport.Transport;
1: import org.apache.activemq.transport.tcp.TcpTransportFactory;
1: 
1: /**
1:  * A <a href="http://stomp.codehaus.org/">STOMP</a> transport factory
0:  * 
0:  * @version $Revision: 1.1.1.1 $
1:  */
0: public class StompTransportFactory extends TcpTransportFactory {
1: 
1:     protected String getDefaultWireFormatType() {
1:         return "stomp";
1:     }
1:     
1:     public Transport compositeConfigure(Transport transport, WireFormat format, Map options) {
0:     	transport = new StompTransportFilter(transport);
0:     	return super.compositeConfigure(transport, format, options);
1:     }
1: }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:f33f32e
/////////////////////////////////////////////////////////////////////////
1: import java.util.HashMap;
1: import org.apache.activemq.transport.MutexTransport;
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     @SuppressWarnings("rawtypes")
1:     @Override
1:     public Transport serverConfigure(Transport transport, WireFormat format, HashMap options) throws Exception {
1:         transport = super.serverConfigure(transport, format, options);
1: 
1:         MutexTransport mutex = transport.narrow(MutexTransport.class);
1:         if (mutex != null) {
1:             mutex.setSyncOnCommand(true);
1:         }
1: 
1:         return transport;
1:     }
1: 
commit:0885c60
/////////////////////////////////////////////////////////////////////////
0:  *
0:  *
1:     private BrokerContext brokerContext = null;
1: 
1:     @SuppressWarnings("rawtypes")
1:         transport = new StompTransportFilter(transport, format, brokerContext);
0:     public void setBrokerService(BrokerService brokerService) {
1:         this.brokerContext = brokerService.getBrokerContext();
1:     @Override
1:     protected Transport createInactivityMonitor(Transport transport, WireFormat format) {
1:         StompInactivityMonitor monitor = new StompInactivityMonitor(transport, format);
1: 
1:         StompTransportFilter filter = (StompTransportFilter) transport.narrow(StompTransportFilter.class);
1:         filter.setInactivityMonitor(monitor);
1: 
1:         return monitor;
0:     }
author:Gary Tully
-------------------------------------------------------------------------------
commit:2b10259
/////////////////////////////////////////////////////////////////////////
0: import java.io.IOException;
0: import java.net.URI;
0: import java.net.URISyntaxException;
0: import javax.net.ServerSocketFactory;
0: import org.apache.activemq.transport.tcp.TcpTransportServer;
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:11705e7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.BrokerContext;
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0: 	private BrokerContext brokerContext = null;
0:         transport = new StompTransportFilter(transport, new LegacyFrameTranslator(), brokerContext);
/////////////////////////////////////////////////////////////////////////
0: 	    this.brokerContext = brokerService.getBrokerContext();
author:James Strachan
-------------------------------------------------------------------------------
commit:0aac7f5
/////////////////////////////////////////////////////////////////////////
0: 
0:     protected boolean isUseInactivityMonitor(Transport transport) {
0:         // lets disable the inactivity monitor as stomp does not use keep alive packets
0:         return false;
0:     }
author:Brian McCallister
-------------------------------------------------------------------------------
commit:f8485e3
/////////////////////////////////////////////////////////////////////////
0:  *
/////////////////////////////////////////////////////////////////////////
0: 
0:     	transport = new StompTransportFilter(transport, new LegacyFrameTranslator());
============================================================================