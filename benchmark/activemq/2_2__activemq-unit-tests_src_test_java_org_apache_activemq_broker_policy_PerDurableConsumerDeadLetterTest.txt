1:27c1719: /**
1:27c1719:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:27c1719:  * contributor license agreements.  See the NOTICE file distributed with
1:27c1719:  * this work for additional information regarding copyright ownership.
1:27c1719:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:27c1719:  * (the "License"); you may not use this file except in compliance with
1:27c1719:  * the License.  You may obtain a copy of the License at
1:27c1719:  *
1:27c1719:  *      http://www.apache.org/licenses/LICENSE-2.0
1:27c1719:  *
1:27c1719:  * Unless required by applicable law or agreed to in writing, software
1:27c1719:  * distributed under the License is distributed on an "AS IS" BASIS,
1:27c1719:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:27c1719:  * See the License for the specific language governing permissions and
1:27c1719:  * limitations under the License.
1:27c1719:  */
1:27c1719: package org.apache.activemq.broker.policy;
1:27c1719: 
1:27c1719: import javax.jms.Destination;
1:c7d559f: 
1:27c1719: import org.apache.activemq.broker.BrokerService;
1:27c1719: import org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy;
1:27c1719: import org.apache.activemq.broker.region.policy.PolicyEntry;
1:27c1719: import org.apache.activemq.broker.region.policy.PolicyMap;
1:27c1719: import org.apache.activemq.command.ActiveMQQueue;
1:27c1719: 
1:27c1719: /**
1:27c1719:  * for durable subs, allow a dlq per subscriber such that poison messages are not duplicates
1:27c1719:  * on the dlq and such that rejecting consumers can be identified
1:27c1719:  * https://issues.apache.org/jira/browse/AMQ-3003
1:27c1719:  */
1:27c1719: public class PerDurableConsumerDeadLetterTest extends DeadLetterTest {
1:27c1719: 
1:27c1719:     private static final String CLIENT_ID = "george";
1:27c1719: 
1:c7d559f:     @Override
1:27c1719:     protected BrokerService createBroker() throws Exception {
1:27c1719:         BrokerService broker = super.createBroker();
1:27c1719: 
1:27c1719:         PolicyEntry policy = new PolicyEntry();
1:27c1719:         IndividualDeadLetterStrategy strategy = new IndividualDeadLetterStrategy();
1:27c1719:         strategy.setProcessNonPersistent(true);
1:27c1719:         strategy.setDestinationPerDurableSubscriber(true);
1:27c1719:         policy.setDeadLetterStrategy(strategy);
1:27c1719: 
1:27c1719:         PolicyMap pMap = new PolicyMap();
1:27c1719:         pMap.setDefaultEntry(policy);
1:27c1719: 
1:27c1719:         broker.setDestinationPolicy(pMap);
1:27c1719: 
1:27c1719:         return broker;
1:27c1719:     }
1:27c1719: 
1:c7d559f:     @Override
1:27c1719:     protected String createClientId() {
1:27c1719:         return CLIENT_ID;
1:27c1719:     }
1:27c1719: 
1:c7d559f:     @Override
1:27c1719:     protected Destination createDlqDestination() {
1:27c1719:         String prefix = topic ? "ActiveMQ.DLQ.Topic." : "ActiveMQ.DLQ.Queue.";
1:27c1719:         String destinationName = prefix + getClass().getName() + "." + getName();
1:27c1719:         if (durableSubscriber) {
1:27c1719:             String subName = // connectionId:SubName
1:27c1719:                 CLIENT_ID + ":" + getDestination().toString();
1:27c1719:             destinationName += "." + subName ;
1:27c1719:         }
1:27c1719:         return new ActiveMQQueue(destinationName);
1:27c1719:     }
1:27c1719: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:c7d559f
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:27c1719
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.policy;
1: 
0: import java.util.Enumeration;
0: import javax.jms.DeliveryMode;
1: import javax.jms.Destination;
0: import javax.jms.Message;
0: import javax.jms.MessageConsumer;
0: import javax.jms.Queue;
0: import org.apache.activemq.ActiveMQConnection;
1: import org.apache.activemq.broker.BrokerService;
0: import org.apache.activemq.broker.region.policy.DeadLetterStrategy;
1: import org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy;
1: import org.apache.activemq.broker.region.policy.PolicyEntry;
1: import org.apache.activemq.broker.region.policy.PolicyMap;
1: import org.apache.activemq.command.ActiveMQQueue;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
1: 
1: /**
1:  * for durable subs, allow a dlq per subscriber such that poison messages are not duplicates
1:  * on the dlq and such that rejecting consumers can be identified
1:  * https://issues.apache.org/jira/browse/AMQ-3003
1:  */
1: public class PerDurableConsumerDeadLetterTest extends DeadLetterTest {
0:     private static final Logger LOG = LoggerFactory.getLogger(PerDurableConsumerDeadLetterTest.class);
1: 
1:     private static final String CLIENT_ID = "george";
1: 
1:     protected BrokerService createBroker() throws Exception {
1:         BrokerService broker = super.createBroker();
1: 
1:         PolicyEntry policy = new PolicyEntry();
1:         IndividualDeadLetterStrategy strategy = new IndividualDeadLetterStrategy();
1:         strategy.setProcessNonPersistent(true);
1:         strategy.setDestinationPerDurableSubscriber(true);
1:         policy.setDeadLetterStrategy(strategy);
1: 
1:         PolicyMap pMap = new PolicyMap();
1:         pMap.setDefaultEntry(policy);
1: 
1:         broker.setDestinationPolicy(pMap);
1: 
1:         return broker;
1:     }
1: 
1:     protected String createClientId() {
1:         return CLIENT_ID;
1:     }
1: 
1:     protected Destination createDlqDestination() {
1:         String prefix = topic ? "ActiveMQ.DLQ.Topic." : "ActiveMQ.DLQ.Queue.";
1:         String destinationName = prefix + getClass().getName() + "." + getName();
1:         if (durableSubscriber) {
1:             String subName = // connectionId:SubName
1:                 CLIENT_ID + ":" + getDestination().toString();
1:             destinationName += "." + subName ;
1:         }
1:         return new ActiveMQQueue(destinationName);
1:     }
1: }
============================================================================