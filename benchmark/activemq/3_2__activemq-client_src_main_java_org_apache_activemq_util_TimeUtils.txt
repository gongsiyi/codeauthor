1:287f69d: /**
1:287f69d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:287f69d:  * contributor license agreements.  See the NOTICE file distributed with
1:287f69d:  * this work for additional information regarding copyright ownership.
1:287f69d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:287f69d:  * (the "License"); you may not use this file except in compliance with
1:287f69d:  * the License.  You may obtain a copy of the License at
2:287f69d:  *
1:287f69d:  *      http://www.apache.org/licenses/LICENSE-2.0
1:287f69d:  *
1:287f69d:  * Unless required by applicable law or agreed to in writing, software
1:287f69d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:287f69d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:287f69d:  * See the License for the specific language governing permissions and
1:287f69d:  * limitations under the License.
1:287f69d:  */
1:287f69d: package org.apache.activemq.util;
2:287f69d: 
1:287f69d: import java.text.DecimalFormat;
1:287f69d: import java.text.DecimalFormatSymbols;
1:287f69d: import java.text.NumberFormat;
1:287f69d: import java.util.Locale;
1:287f69d: 
1:287f69d: /**
1:61b2f6b:  * Time utilities.
1:287f69d:  */
1:287f69d: public final class TimeUtils {
1:287f69d: 
1:287f69d:     private TimeUtils() {
1:287f69d:     }
1:287f69d: 
1:287f69d:     /**
1:287f69d:      * Prints the duration in a human readable format as X days Y hours Z minutes etc.
1:287f69d:      *
1:61b2f6b:      * @param uptime the up-time in milliseconds
1:61b2f6b:      *
1:287f69d:      * @return the time used for displaying on screen or in logs
1:287f69d:      */
1:287f69d:     public static String printDuration(double uptime) {
1:287f69d:         // Code taken from Karaf
1:287f69d:         // https://svn.apache.org/repos/asf/karaf/trunk/shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/InfoAction.java
1:287f69d: 
1:287f69d:         NumberFormat fmtI = new DecimalFormat("###,###", new DecimalFormatSymbols(Locale.ENGLISH));
1:287f69d:         NumberFormat fmtD = new DecimalFormat("###,##0.000", new DecimalFormatSymbols(Locale.ENGLISH));
1:287f69d: 
1:287f69d:         uptime /= 1000;
1:287f69d:         if (uptime < 60) {
1:287f69d:             return fmtD.format(uptime) + " seconds";
1:287f69d:         }
1:287f69d:         uptime /= 60;
1:287f69d:         if (uptime < 60) {
1:287f69d:             long minutes = (long) uptime;
1:287f69d:             String s = fmtI.format(minutes) + (minutes > 1 ? " minutes" : " minute");
1:287f69d:             return s;
1:287f69d:         }
1:287f69d:         uptime /= 60;
1:287f69d:         if (uptime < 24) {
1:287f69d:             long hours = (long) uptime;
1:287f69d:             long minutes = (long) ((uptime - hours) * 60);
1:287f69d:             String s = fmtI.format(hours) + (hours > 1 ? " hours" : " hour");
1:287f69d:             if (minutes != 0) {
1:287f69d:                 s += " " + fmtI.format(minutes) + (minutes > 1 ? " minutes" : " minute");
1:287f69d:             }
1:287f69d:             return s;
1:287f69d:         }
1:287f69d:         uptime /= 24;
1:287f69d:         long days = (long) uptime;
1:287f69d:         long hours = (long) ((uptime - days) * 24);
1:287f69d:         String s = fmtI.format(days) + (days > 1 ? " days" : " day");
1:287f69d:         if (hours != 0) {
1:287f69d:             s += " " + fmtI.format(hours) + (hours > 1 ? " hours" : " hour");
1:287f69d:         }
1:61b2f6b: 
1:287f69d:         return s;
1:287f69d:     }
1:287f69d: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:61b2f6b
/////////////////////////////////////////////////////////////////////////
1:  * Time utilities.
/////////////////////////////////////////////////////////////////////////
1:      * @param uptime the up-time in milliseconds
1:      *
/////////////////////////////////////////////////////////////////////////
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:287f69d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
1: import java.text.DecimalFormat;
1: import java.text.DecimalFormatSymbols;
1: import java.text.NumberFormat;
1: import java.util.Locale;
1: 
1: /**
0:  * Time utils.
1:  *
0:  * @version
1:  */
1: public final class TimeUtils {
1: 
1:     private TimeUtils() {
1:     }
1: 
1:     /**
1:      * Prints the duration in a human readable format as X days Y hours Z minutes etc.
1:      *
0:      * @param uptime the uptime in millis
1:      * @return the time used for displaying on screen or in logs
1:      */
1:     public static String printDuration(double uptime) {
1:         // Code taken from Karaf
1:         // https://svn.apache.org/repos/asf/karaf/trunk/shell/commands/src/main/java/org/apache/karaf/shell/commands/impl/InfoAction.java
1: 
1:         NumberFormat fmtI = new DecimalFormat("###,###", new DecimalFormatSymbols(Locale.ENGLISH));
1:         NumberFormat fmtD = new DecimalFormat("###,##0.000", new DecimalFormatSymbols(Locale.ENGLISH));
1: 
1:         uptime /= 1000;
1:         if (uptime < 60) {
1:             return fmtD.format(uptime) + " seconds";
1:         }
1:         uptime /= 60;
1:         if (uptime < 60) {
1:             long minutes = (long) uptime;
1:             String s = fmtI.format(minutes) + (minutes > 1 ? " minutes" : " minute");
1:             return s;
1:         }
1:         uptime /= 60;
1:         if (uptime < 24) {
1:             long hours = (long) uptime;
1:             long minutes = (long) ((uptime - hours) * 60);
1:             String s = fmtI.format(hours) + (hours > 1 ? " hours" : " hour");
1:             if (minutes != 0) {
1:                 s += " " + fmtI.format(minutes) + (minutes > 1 ? " minutes" : " minute");
1:             }
1:             return s;
1:         }
1:         uptime /= 24;
1:         long days = (long) uptime;
1:         long hours = (long) ((uptime - days) * 24);
1:         String s = fmtI.format(days) + (days > 1 ? " days" : " day");
1:         if (hours != 0) {
1:             s += " " + fmtI.format(hours) + (hours > 1 ? " hours" : " hour");
1:         }
1:         return s;
1:     }
1: 
1: }
============================================================================