1:261ccab: /**
1:261ccab:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:261ccab:  * contributor license agreements.  See the NOTICE file distributed with
1:261ccab:  * this work for additional information regarding copyright ownership.
1:261ccab:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:261ccab:  * (the "License"); you may not use this file except in compliance with
1:261ccab:  * the License.  You may obtain a copy of the License at
1:261ccab:  *
1:261ccab:  *      http://www.apache.org/licenses/LICENSE-2.0
1:261ccab:  *
1:261ccab:  * Unless required by applicable law or agreed to in writing, software
1:261ccab:  * distributed under the License is distributed on an "AS IS" BASIS,
1:261ccab:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:261ccab:  * See the License for the specific language governing permissions and
1:261ccab:  * limitations under the License.
1:261ccab:  */
1:af159dd: package org.apache.activemq.blob;
1:af159dd: 
1:af159dd: import java.io.IOException;
1:af159dd: import java.net.ConnectException;
1:af159dd: import java.net.MalformedURLException;
1:af159dd: import java.net.URL;
1:af159dd: 
1:af159dd: import javax.jms.JMSException;
1:af159dd: 
1:af159dd: import org.apache.activemq.command.ActiveMQBlobMessage;
1:af159dd: import org.apache.commons.net.ftp.FTPClient;
1:af159dd: 
1:af159dd: public class FTPStrategy {
1:af159dd: 
1:af159dd:     protected BlobTransferPolicy transferPolicy;
1:af159dd:     protected URL url;
1:af159dd:     protected String ftpUser = "";
1:af159dd:     protected String ftpPass = "";
1:af159dd: 
1:af159dd:     public FTPStrategy(BlobTransferPolicy transferPolicy) throws MalformedURLException {
1:af159dd:         this.transferPolicy = transferPolicy;
1:af159dd:         this.url = new URL(this.transferPolicy.getUploadUrl());
1:af159dd:     }
1:af159dd:     
1:af159dd:     protected void setUserInformation(String userInfo) {
1:af159dd:         if(userInfo != null) {
1:af159dd:             String[] userPass = userInfo.split(":");
1:af159dd:             if(userPass.length > 0) this.ftpUser = userPass[0];
1:af159dd:             if(userPass.length > 1) this.ftpPass = userPass[1];
1:af159dd:         } else {
1:af159dd:             this.ftpUser = "anonymous";
1:af159dd:             this.ftpPass = "anonymous";
1:af159dd:         }
1:af159dd:     }
1:af159dd:     
1:af159dd:     protected FTPClient createFTP() throws IOException, JMSException {
1:af159dd:         String connectUrl = url.getHost();
1:af159dd:         setUserInformation(url.getUserInfo());
1:af159dd:         int port = url.getPort() < 1 ? 21 : url.getPort();
1:af159dd:         
1:af159dd:         FTPClient ftp = new FTPClient();
1:af159dd:         try {
1:af159dd:             ftp.connect(connectUrl, port);
1:af159dd:         } catch(ConnectException e) {
1:af159dd:             throw new JMSException("Problem connecting the FTP-server");
1:af159dd:         }
1:af159dd:         if(!ftp.login(ftpUser, ftpPass)) {
1:af159dd:             ftp.quit();
1:af159dd:             ftp.disconnect();
1:af159dd:             throw new JMSException("Cant Authentificate to FTP-Server");
1:af159dd:         }
1:af159dd:         return ftp;
1:af159dd:     }
1:af159dd:     
1:af159dd: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:261ccab
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:af159dd
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.blob;
1: 
1: import java.io.IOException;
1: import java.net.ConnectException;
1: import java.net.MalformedURLException;
1: import java.net.URL;
1: 
1: import javax.jms.JMSException;
1: 
1: import org.apache.activemq.command.ActiveMQBlobMessage;
1: import org.apache.commons.net.ftp.FTPClient;
1: 
1: public class FTPStrategy {
1: 
1:     protected BlobTransferPolicy transferPolicy;
1:     protected URL url;
1:     protected String ftpUser = "";
1:     protected String ftpPass = "";
1: 
1:     public FTPStrategy(BlobTransferPolicy transferPolicy) throws MalformedURLException {
1:         this.transferPolicy = transferPolicy;
1:         this.url = new URL(this.transferPolicy.getUploadUrl());
1:     }
1:     
1:     protected void setUserInformation(String userInfo) {
1:         if(userInfo != null) {
1:             String[] userPass = userInfo.split(":");
1:             if(userPass.length > 0) this.ftpUser = userPass[0];
1:             if(userPass.length > 1) this.ftpPass = userPass[1];
1:         } else {
1:             this.ftpUser = "anonymous";
1:             this.ftpPass = "anonymous";
1:         }
1:     }
1:     
1:     protected FTPClient createFTP() throws IOException, JMSException {
1:         String connectUrl = url.getHost();
1:         setUserInformation(url.getUserInfo());
1:         int port = url.getPort() < 1 ? 21 : url.getPort();
1:         
1:         FTPClient ftp = new FTPClient();
1:         try {
1:             ftp.connect(connectUrl, port);
1:         } catch(ConnectException e) {
1:             throw new JMSException("Problem connecting the FTP-server");
1:         }
1:         if(!ftp.login(ftpUser, ftpPass)) {
1:             ftp.quit();
1:             ftp.disconnect();
1:             throw new JMSException("Cant Authentificate to FTP-Server");
1:         }
1:         return ftp;
1:     }
1:     
1: }
============================================================================