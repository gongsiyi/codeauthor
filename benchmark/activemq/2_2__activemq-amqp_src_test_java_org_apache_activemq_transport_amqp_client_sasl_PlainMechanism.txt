1:72839b7: /**
1:72839b7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:72839b7:  * contributor license agreements.  See the NOTICE file distributed with
1:72839b7:  * this work for additional information regarding copyright ownership.
1:72839b7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:72839b7:  * (the "License"); you may not use this file except in compliance with
1:72839b7:  * the License.  You may obtain a copy of the License at
1:72839b7:  *
1:72839b7:  *      http://www.apache.org/licenses/LICENSE-2.0
1:72839b7:  *
1:72839b7:  * Unless required by applicable law or agreed to in writing, software
1:72839b7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:72839b7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:72839b7:  * See the License for the specific language governing permissions and
1:72839b7:  * limitations under the License.
1:72839b7:  */
1:72839b7: package org.apache.activemq.transport.amqp.client.sasl;
1:72839b7: 
1:72839b7: /**
1:72839b7:  * Implements the SASL PLAIN authentication Mechanism.
1:72839b7:  *
1:72839b7:  * User name and Password values are sent without being encrypted.
1:72839b7:  */
1:72839b7: public class PlainMechanism extends AbstractMechanism {
1:72839b7: 
1:ce5628a:     public static final String MECH_NAME = "PLAIN";
1:ce5628a: 
1:72839b7:     @Override
1:72839b7:     public int getPriority() {
1:72839b7:         return PRIORITY.MEDIUM.getValue();
1:72839b7:     }
1:72839b7: 
1:72839b7:     @Override
1:72839b7:     public String getName() {
1:ce5628a:         return MECH_NAME;
1:72839b7:     }
1:72839b7: 
1:72839b7:     @Override
1:72839b7:     public byte[] getInitialResponse() {
1:72839b7: 
1:ce5628a:         String authzid = getAuthzid();
1:72839b7:         String username = getUsername();
1:72839b7:         String password = getPassword();
1:72839b7: 
1:ce5628a:         if (authzid == null) {
1:ce5628a:             authzid = "";
1:ce5628a:         }
1:ce5628a: 
1:72839b7:         if (username == null) {
1:72839b7:             username = "";
1:72839b7:         }
1:72839b7: 
1:72839b7:         if (password == null) {
1:72839b7:             password = "";
1:72839b7:         }
1:72839b7: 
1:ce5628a:         byte[] authzidBytes = authzid.getBytes();
1:72839b7:         byte[] usernameBytes = username.getBytes();
1:72839b7:         byte[] passwordBytes = password.getBytes();
1:ce5628a:         byte[] data = new byte[authzidBytes.length + 1 + usernameBytes.length + 1 + passwordBytes.length];
1:ce5628a:         System.arraycopy(authzidBytes, 0, data, 0, authzidBytes.length);
1:ce5628a:         System.arraycopy(usernameBytes, 0, data, 1 + authzidBytes.length, usernameBytes.length);
1:d7e4c6d:         System.arraycopy(passwordBytes, 0, data, 2 + authzidBytes.length + usernameBytes.length, passwordBytes.length);
1:72839b7:         return data;
1:72839b7:     }
1:72839b7: 
1:72839b7:     @Override
1:72839b7:     public byte[] getChallengeResponse(byte[] challenge) {
1:72839b7:         return EMPTY;
1:72839b7:     }
1:b5dd0a1: 
1:b5dd0a1:     @Override
1:b5dd0a1:     public boolean isApplicable(String username, String password) {
1:b5dd0a1:         return username != null && username.length() > 0 && password != null && password.length() > 0;
1:b5dd0a1:     }
1:72839b7: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:b5dd0a1
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public boolean isApplicable(String username, String password) {
1:         return username != null && username.length() > 0 && password != null && password.length() > 0;
1:     }
commit:72839b7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.client.sasl;
1: 
1: /**
1:  * Implements the SASL PLAIN authentication Mechanism.
1:  *
1:  * User name and Password values are sent without being encrypted.
1:  */
1: public class PlainMechanism extends AbstractMechanism {
1: 
1:     @Override
1:     public int getPriority() {
1:         return PRIORITY.MEDIUM.getValue();
1:     }
1: 
1:     @Override
1:     public String getName() {
0:         return "PLAIN";
1:     }
1: 
1:     @Override
1:     public byte[] getInitialResponse() {
1: 
1:         String username = getUsername();
1:         String password = getPassword();
1: 
1:         if (username == null) {
1:             username = "";
1:         }
1: 
1:         if (password == null) {
1:             password = "";
1:         }
1: 
1:         byte[] usernameBytes = username.getBytes();
1:         byte[] passwordBytes = password.getBytes();
0:         byte[] data = new byte[usernameBytes.length + passwordBytes.length + 2];
0:         System.arraycopy(usernameBytes, 0, data, 1, usernameBytes.length);
0:         System.arraycopy(passwordBytes, 0, data, 2 + usernameBytes.length, passwordBytes.length);
1:         return data;
1:     }
1: 
1:     @Override
1:     public byte[] getChallengeResponse(byte[] challenge) {
1:         return EMPTY;
1:     }
1: }
author:Robert Gemmell
-------------------------------------------------------------------------------
commit:d7e4c6d
/////////////////////////////////////////////////////////////////////////
1:         System.arraycopy(passwordBytes, 0, data, 2 + authzidBytes.length + usernameBytes.length, passwordBytes.length);
commit:ce5628a
/////////////////////////////////////////////////////////////////////////
1:     public static final String MECH_NAME = "PLAIN";
1: 
/////////////////////////////////////////////////////////////////////////
1:         return MECH_NAME;
1:         String authzid = getAuthzid();
1:         if (authzid == null) {
1:             authzid = "";
1:         }
1: 
/////////////////////////////////////////////////////////////////////////
1:         byte[] authzidBytes = authzid.getBytes();
1:         byte[] data = new byte[authzidBytes.length + 1 + usernameBytes.length + 1 + passwordBytes.length];
1:         System.arraycopy(authzidBytes, 0, data, 0, authzidBytes.length);
1:         System.arraycopy(usernameBytes, 0, data, 1 + authzidBytes.length, usernameBytes.length);
============================================================================