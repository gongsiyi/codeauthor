1:64f3492: /**
1:64f3492:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:64f3492:  * contributor license agreements.  See the NOTICE file distributed with
1:64f3492:  * this work for additional information regarding copyright ownership.
1:64f3492:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:64f3492:  * (the "License"); you may not use this file except in compliance with
1:64f3492:  * the License.  You may obtain a copy of the License at
1:64f3492:  *
1:64f3492:  *      http://www.apache.org/licenses/LICENSE-2.0
1:64f3492:  *
1:64f3492:  * Unless required by applicable law or agreed to in writing, software
1:64f3492:  * distributed under the License is distributed on an "AS IS" BASIS,
1:64f3492:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:64f3492:  * See the License for the specific language governing permissions and
1:64f3492:  * limitations under the License.
1:64f3492:  */
1:64f3492: package org.apache.activemq.broker;
2:64f3492: 
1:c6837ac: import java.io.File;
1:64f3492: import junit.framework.Test;
1:64f3492: import org.apache.activemq.command.ActiveMQDestination;
1:64f3492: import org.apache.activemq.command.ActiveMQQueue;
1:17f4f34: import org.apache.activemq.store.jdbc.DataSourceServiceSupport;
1:64f3492: import org.apache.activemq.store.jdbc.JDBCPersistenceAdapter;
1:c6837ac: import org.apache.activemq.util.IOHelper;
1:64f3492: import org.apache.derby.jdbc.EmbeddedDataSource;
1:64f3492: import org.apache.derby.jdbc.EmbeddedXADataSource;
1:64f3492: 
1:64f3492: public class JdbcXARecoveryBrokerTest extends XARecoveryBrokerTest {
1:64f3492: 
1:64f3492:     EmbeddedXADataSource dataSource;
1:64f3492: 
1:64f3492:     @Override
1:64f3492:     protected void setUp() throws Exception {
1:c6837ac:         System.setProperty("derby.system.home", new File(IOHelper.getDefaultDataDirectory()).getCanonicalPath());
1:64f3492:         dataSource = new EmbeddedXADataSource();
1:64f3492:         dataSource.setDatabaseName("derbyDb");
1:64f3492:         dataSource.setCreateDatabase("create");
1:64f3492:         super.setUp();
2:64f3492:     }
1:64f3492: 
1:64f3492:     @Override
1:64f3492:     protected void tearDown() throws Exception {
1:64f3492:         super.tearDown();
1:64f3492:         stopDerby();
1:64f3492:     }
1:64f3492: 
1:64f3492:     @Override
1:64f3492:     protected void configureBroker(BrokerService broker) throws Exception {
1:64f3492:         super.configureBroker(broker);
1:ea70e82:         broker.setAdvisorySupport(false);
1:64f3492: 
1:64f3492:         JDBCPersistenceAdapter jdbc = new JDBCPersistenceAdapter();
1:64f3492:         jdbc.setDataSource(dataSource);
1:64f3492:         broker.setPersistenceAdapter(jdbc);
1:64f3492:     }
1:64f3492: 
1:64f3492:     @Override
1:64f3492:     protected void restartBroker() throws Exception {
1:64f3492:         broker.stop();
1:64f3492:         stopDerby();
1:64f3492:         dataSource = new EmbeddedXADataSource();
1:64f3492:         dataSource.setDatabaseName("derbyDb");
1:64f3492:         dataSource.setCreateDatabase("create");
1:64f3492: 
1:64f3492:         broker = createRestartedBroker();
1:64f3492:         broker.start();
1:64f3492:     }
1:64f3492: 
1:64f3492:     private void stopDerby() {
1:64f3492:         LOG.info("STOPPING DB!@!!!!");
1:17f4f34:         DataSourceServiceSupport.shutdownDefaultDataSource(dataSource);
1:64f3492:     }
1:64f3492: 
1:64f3492:     public static Test suite() {
1:64f3492:         return suite(JdbcXARecoveryBrokerTest.class);
1:64f3492:     }
1:64f3492: 
1:64f3492:     public static void main(String[] args) {
1:64f3492:         junit.textui.TestRunner.run(suite());
1:64f3492:     }
1:64f3492: 
1:64f3492:     @Override
1:64f3492:     protected ActiveMQDestination createDestination() {
1:64f3492:         return new ActiveMQQueue("test,special");
1:64f3492:     }
1:64f3492: 
1:64f3492: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:ea70e82
/////////////////////////////////////////////////////////////////////////
1:         broker.setAdvisorySupport(false);
commit:17f4f34
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.store.jdbc.DataSourceServiceSupport;
/////////////////////////////////////////////////////////////////////////
1:         DataSourceServiceSupport.shutdownDefaultDataSource(dataSource);
commit:c6837ac
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: import org.apache.activemq.util.IOHelper;
/////////////////////////////////////////////////////////////////////////
1:         System.setProperty("derby.system.home", new File(IOHelper.getDefaultDataDirectory()).getCanonicalPath());
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:64f3492
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker;
1: 
1: import junit.framework.Test;
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.activemq.store.jdbc.JDBCPersistenceAdapter;
1: import org.apache.derby.jdbc.EmbeddedDataSource;
1: import org.apache.derby.jdbc.EmbeddedXADataSource;
1: 
1: public class JdbcXARecoveryBrokerTest extends XARecoveryBrokerTest {
1: 
1:     EmbeddedXADataSource dataSource;
1: 
1:     @Override
1:     protected void setUp() throws Exception {
1:         dataSource = new EmbeddedXADataSource();
1:         dataSource.setDatabaseName("derbyDb");
1:         dataSource.setCreateDatabase("create");
1:         super.setUp();
1:     }
1: 
1:     @Override
1:     protected void tearDown() throws Exception {
1:         super.tearDown();
1:         stopDerby();
1:     }
1: 
1:     @Override
1:     protected void configureBroker(BrokerService broker) throws Exception {
1:         super.configureBroker(broker);
1: 
1:         JDBCPersistenceAdapter jdbc = new JDBCPersistenceAdapter();
1:         jdbc.setDataSource(dataSource);
1:         broker.setPersistenceAdapter(jdbc);
1:     }
1: 
1:     @Override
1:     protected void restartBroker() throws Exception {
1:         broker.stop();
1:         stopDerby();
1:         dataSource = new EmbeddedXADataSource();
1:         dataSource.setDatabaseName("derbyDb");
1:         dataSource.setCreateDatabase("create");
1: 
1:         broker = createRestartedBroker();
1:         broker.start();
1:     }
1: 
1:     private void stopDerby() {
1:         LOG.info("STOPPING DB!@!!!!");
0:         final EmbeddedDataSource ds = dataSource;
0:         try {
0:             ds.setShutdownDatabase("shutdown");
0:             ds.getConnection();
0:         } catch (Exception ignored) {
1:         }
1: 
1:     }
1: 
1:     public static Test suite() {
1:         return suite(JdbcXARecoveryBrokerTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
1: 
1:     @Override
1:     protected ActiveMQDestination createDestination() {
1:         return new ActiveMQQueue("test,special");
1:     }
1: 
1: }
============================================================================