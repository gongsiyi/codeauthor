1:d287bb1: /**
1:d287bb1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d287bb1:  * contributor license agreements.  See the NOTICE file distributed with
1:d287bb1:  * this work for additional information regarding copyright ownership.
1:d287bb1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d287bb1:  * (the "License"); you may not use this file except in compliance with
1:d287bb1:  * the License.  You may obtain a copy of the License at
3:d287bb1:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d287bb1:  *
1:d287bb1:  * Unless required by applicable law or agreed to in writing, software
1:d287bb1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d287bb1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d287bb1:  * See the License for the specific language governing permissions and
1:d287bb1:  * limitations under the License.
1:d287bb1:  */
1:d287bb1: package org.apache.activemq.test.retroactive;
3:d287bb1: 
1:d287bb1: import javax.jms.JMSException;
1:d287bb1: import javax.jms.MessageConsumer;
1:74a7a8b: import javax.jms.MessageProducer;
1:74a7a8b: import javax.jms.TextMessage;
1:74a7a8b: 
1:74a7a8b: import org.apache.activemq.command.ActiveMQTopic;
1:d287bb1: 
1:d287bb1: /**
1:0bbc0ac:  * 
1:d287bb1:  */
1:d287bb1: public class RetroactiveConsumerTestWithLastImagePolicyWithWildcardTest extends RetroactiveConsumerTestWithSimpleMessageListTest {
1:d287bb1:     private int counter = 1;
1:ecf89a6: 
1:d287bb1:     protected void sendMessage(MessageProducer producer, TextMessage message) throws JMSException {
1:a0426cb:         ActiveMQTopic topic = new ActiveMQTopic(destination.getPhysicalName() + "." + (counter++));
1:d287bb1:         producer.send(topic, message);
1:d287bb1:     }
1:d287bb1: 
1:d287bb1:     protected MessageProducer createProducer() throws JMSException {
1:d287bb1:         return session.createProducer(null);
1:d287bb1:     }
1:d287bb1: 
1:d287bb1:     protected MessageConsumer createConsumer() throws JMSException {
1:a0426cb:         return session.createConsumer(new ActiveMQTopic(destination.getPhysicalName() + ".>"));
1:d287bb1:     }
1:d287bb1: 
1:d287bb1:     protected String getBrokerXml() {
1:d287bb1:         return "org/apache/activemq/test/retroactive/activemq-lastimage-policy.xml";
1:d287bb1:     }
1:d287bb1: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:ecf89a6
/////////////////////////////////////////////////////////////////////////
1: 
0:         // System.out.println("Sending to destination: " + topic);
/////////////////////////////////////////////////////////////////////////
0:         return session.createConsumer(new ActiveMQTopic(destination.toString() + ".>"));
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.MessageProducer;
1: import javax.jms.TextMessage;
1: 
1: import org.apache.activemq.command.ActiveMQTopic;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:9ba6fcc
/////////////////////////////////////////////////////////////////////////
0: //        System.out.println("Sending to destination: " + topic);
author:Robert Davies
-------------------------------------------------------------------------------
commit:a0426cb
/////////////////////////////////////////////////////////////////////////
1:         ActiveMQTopic topic = new ActiveMQTopic(destination.getPhysicalName() + "." + (counter++));
/////////////////////////////////////////////////////////////////////////
1:         return session.createConsumer(new ActiveMQTopic(destination.getPhysicalName() + ".>"));
author:James Strachan
-------------------------------------------------------------------------------
commit:d287bb1
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.test.retroactive;
1: 
0: import org.apache.activemq.command.ActiveMQTopic;
1: 
0: import javax.jms.MessageProducer;
0: import javax.jms.TextMessage;
1: import javax.jms.JMSException;
1: import javax.jms.MessageConsumer;
1: 
1: /**
1:  *
0:  * @version $Revision$
1:  */
1: public class RetroactiveConsumerTestWithLastImagePolicyWithWildcardTest extends RetroactiveConsumerTestWithSimpleMessageListTest {
1:     private int counter = 1;
1:     
1:     protected void sendMessage(MessageProducer producer, TextMessage message) throws JMSException {
0:         ActiveMQTopic topic = new ActiveMQTopic(destination.toString() + "." + (counter++));
0:         System.out.println("Sending to destination: " + topic);
1:         producer.send(topic, message);
1:     }
1: 
1:     protected MessageProducer createProducer() throws JMSException {
1:         return session.createProducer(null);
1:     }
1: 
1:     protected MessageConsumer createConsumer() throws JMSException {
0:         return session.createConsumer( new ActiveMQTopic(destination.toString() + ".>"));
1:     }
1: 
1:     protected String getBrokerXml() {
1:         return "org/apache/activemq/test/retroactive/activemq-lastimage-policy.xml";
1:     }
1: }
============================================================================