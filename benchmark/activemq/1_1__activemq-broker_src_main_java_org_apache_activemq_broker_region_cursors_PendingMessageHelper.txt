1:734fb7d: /**
1:734fb7d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:734fb7d:  * contributor license agreements.  See the NOTICE file distributed with
1:734fb7d:  * this work for additional information regarding copyright ownership.
1:734fb7d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:734fb7d:  * (the "License"); you may not use this file except in compliance with
1:734fb7d:  * the License.  You may obtain a copy of the License at
1:734fb7d:  *
1:734fb7d:  *      http://www.apache.org/licenses/LICENSE-2.0
1:734fb7d:  *
1:734fb7d:  * Unless required by applicable law or agreed to in writing, software
1:734fb7d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:734fb7d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:734fb7d:  * See the License for the specific language governing permissions and
1:734fb7d:  * limitations under the License.
1:734fb7d:  */
1:734fb7d: package org.apache.activemq.broker.region.cursors;
1:734fb7d: 
1:734fb7d: import java.util.Map;
1:734fb7d: 
1:734fb7d: import org.apache.activemq.broker.region.MessageReference;
1:734fb7d: import org.apache.activemq.command.MessageId;
1:734fb7d: import org.apache.activemq.management.SizeStatisticImpl;
1:734fb7d: 
1:734fb7d: /**
1:734fb7d:  *
1:734fb7d:  *
1:734fb7d:  */
1:734fb7d: public class PendingMessageHelper {
1:734fb7d: 
1:734fb7d:     private final Map<MessageId, PendingNode> map;
1:734fb7d:     private final SizeStatisticImpl messageSize;
1:734fb7d: 
1:734fb7d:     public PendingMessageHelper(Map<MessageId, PendingNode> map,
1:734fb7d:             SizeStatisticImpl messageSize) {
1:734fb7d:         super();
1:734fb7d:         this.map = map;
1:734fb7d:         this.messageSize = messageSize;
1:734fb7d:     }
1:734fb7d: 
1:734fb7d:     public void addToMap(MessageReference message, PendingNode node) {
1:734fb7d:         PendingNode previous = this.map.put(message.getMessageId(), node);
1:734fb7d:         if (previous != null) {
1:734fb7d:             try {
1:734fb7d:                 messageSize.addSize(-previous.getMessage().getSize());
1:734fb7d:             } catch (Exception e) {
1:734fb7d:               //expected for NullMessageReference
1:734fb7d:             }
1:734fb7d:         }
1:734fb7d:         try {
1:734fb7d:             messageSize.addSize(message.getSize());
1:734fb7d:         } catch (Exception e) {
1:734fb7d:           //expected for NullMessageReference
1:734fb7d:         }
1:734fb7d:     }
1:734fb7d: 
1:734fb7d:     public PendingNode removeFromMap(MessageReference message) {
1:734fb7d:         PendingNode removed = this.map.remove(message.getMessageId());
1:734fb7d:         if (removed != null) {
1:734fb7d:             try {
1:734fb7d:                 messageSize.addSize(-removed.getMessage().getSize());
1:734fb7d:             } catch (Exception e) {
1:734fb7d:                 //expected for NullMessageReference
1:734fb7d:             }
1:734fb7d:         }
1:734fb7d:         return removed;
1:734fb7d:     }
1:734fb7d: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:734fb7d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.cursors;
1: 
1: import java.util.Map;
1: 
1: import org.apache.activemq.broker.region.MessageReference;
1: import org.apache.activemq.command.MessageId;
1: import org.apache.activemq.management.SizeStatisticImpl;
1: 
1: /**
1:  *
1:  *
1:  */
1: public class PendingMessageHelper {
1: 
1:     private final Map<MessageId, PendingNode> map;
1:     private final SizeStatisticImpl messageSize;
1: 
1:     public PendingMessageHelper(Map<MessageId, PendingNode> map,
1:             SizeStatisticImpl messageSize) {
1:         super();
1:         this.map = map;
1:         this.messageSize = messageSize;
1:     }
1: 
1:     public void addToMap(MessageReference message, PendingNode node) {
1:         PendingNode previous = this.map.put(message.getMessageId(), node);
1:         if (previous != null) {
1:             try {
1:                 messageSize.addSize(-previous.getMessage().getSize());
1:             } catch (Exception e) {
1:               //expected for NullMessageReference
1:             }
1:         }
1:         try {
1:             messageSize.addSize(message.getSize());
1:         } catch (Exception e) {
1:           //expected for NullMessageReference
1:         }
1:     }
1: 
1:     public PendingNode removeFromMap(MessageReference message) {
1:         PendingNode removed = this.map.remove(message.getMessageId());
1:         if (removed != null) {
1:             try {
1:                 messageSize.addSize(-removed.getMessage().getSize());
1:             } catch (Exception e) {
1:                 //expected for NullMessageReference
1:             }
1:         }
1:         return removed;
1:     }
1: }
============================================================================