1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.network.jms;
4:d29ca2a: 
1:d29ca2a: /**
1:bc78238:  * Create an Inbound Topic Bridge.  By default this class uses the topic name for
1:bc78238:  * both the inbound and outbound topic.  This behavior can be overridden however
1:bc78238:  * by using the setter methods to configure both the inbound and outboud topic names
1:bc78238:  * separately.
1:d29ca2a:  *
1:68d245f:  * @org.apache.xbean.XBean
1:d29ca2a:  */
1:f812e34: public class InboundTopicBridge extends TopicBridge {
1:f812e34: 
1:d29ca2a:     String inboundTopicName;
1:902a8ea:     String localTopicName;
1:f812e34: 
1:d29ca2a:     /**
1:bc78238:      * Constructor that takes a foreign destination as an argument
1:f812e34:      *
1:d29ca2a:      * @param inboundTopicName
1:d29ca2a:      */
1:f812e34:     public InboundTopicBridge(String inboundTopicName) {
1:d29ca2a:         this.inboundTopicName = inboundTopicName;
1:902a8ea:         this.localTopicName = inboundTopicName;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:bc78238:      * Default Constructor
1:d29ca2a:      */
1:f812e34:     public InboundTopicBridge() {
1:86cbdfd:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @return Returns the outboundTopicName.
1:d29ca2a:      */
1:f812e34:     public String getInboundTopicName() {
1:d29ca2a:         return inboundTopicName;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:bc78238:      * Sets the topic name used for the inbound topic, if the outbound topic
1:bc78238:      * name has not been set, then this method uses the same name to configure
1:bc78238:      * the outbound topic name.
1:d29ca2a:      *
1:f812e34:      * @param inboundTopicName
1:d29ca2a:      */
1:f812e34:     public void setInboundTopicName(String inboundTopicName) {
1:f812e34:         this.inboundTopicName = inboundTopicName;
1:f812e34:         if (this.localTopicName == null) {
1:902a8ea:             this.localTopicName = inboundTopicName;
1:d29ca2a:         }
1:d29ca2a:     }
1:d29ca2a: 
1:902a8ea:     /**
1:902a8ea:      * @return the localTopicName
1:902a8ea:      */
1:f812e34:     public String getLocalTopicName() {
1:902a8ea:         return localTopicName;
1:d29ca2a:     }
1:f812e34: 
1:902a8ea:     /**
1:902a8ea:      * @param localTopicName the localTopicName to set
1:902a8ea:      */
1:f812e34:     public void setLocalTopicName(String localTopicName) {
1:f812e34:         this.localTopicName = localTopicName;
2:902a8ea:     }
1:902a8ea: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:f812e34
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public class InboundTopicBridge extends TopicBridge {
1: 
1: 
1:      * 
1:     public InboundTopicBridge(String inboundTopicName) {
1: 
1:     public InboundTopicBridge() {
1:     public String getInboundTopicName() {
1:      * @param inboundTopicName
1:     public void setInboundTopicName(String inboundTopicName) {
1:         this.inboundTopicName = inboundTopicName;
1:         if (this.localTopicName == null) {
/////////////////////////////////////////////////////////////////////////
1:     public String getLocalTopicName() {
1:     public void setLocalTopicName(String localTopicName) {
1:         this.localTopicName = localTopicName;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:68d245f
/////////////////////////////////////////////////////////////////////////
1:  * @org.apache.xbean.XBean
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.network.jms;
1: 
1: 
1: /**
0:  * Create an Inbound Topic Bridge
1:  * 
0:  * @org.xbean.XBean
1:  * 
0:  * @version $Revision: 1.1.1.1 $
1:  */
0: public class InboundTopicBridge extends TopicBridge{
1:        
1:     String inboundTopicName;
1:     /**
0:      * Constructor that takes a foriegn destination as an argument
1:      * @param inboundTopicName
1:      */
0:     public  InboundTopicBridge(String  inboundTopicName){
1:         this.inboundTopicName = inboundTopicName;
1:     }
1:     
1:     /**
0:      * Default Contructor
1:      */
0:     public  InboundTopicBridge(){
1:     }
1: 
1:     /**
1:      * @return Returns the outboundTopicName.
1:      */
0:     public String getInboundTopicName(){
1:         return inboundTopicName;
1:     }
1: 
1:     /**
0:      * @param outboundTopicName The outboundTopicName to set.
1:      */
0:     public void setInboundTopicName(String inboundTopicName){
0:         this.inboundTopicName=inboundTopicName;
1:     }
1:     
1: }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:bc78238
/////////////////////////////////////////////////////////////////////////
1:  * Create an Inbound Topic Bridge.  By default this class uses the topic name for
1:  * both the inbound and outbound topic.  This behavior can be overridden however
1:  * by using the setter methods to configure both the inbound and outboud topic names
1:  * separately.
0:  *
/////////////////////////////////////////////////////////////////////////
1:      * Constructor that takes a foreign destination as an argument
0:      *
/////////////////////////////////////////////////////////////////////////
1:      * Default Constructor
/////////////////////////////////////////////////////////////////////////
1:      * Sets the topic name used for the inbound topic, if the outbound topic
1:      * name has not been set, then this method uses the same name to configure
1:      * the outbound topic name.
0:      *
/////////////////////////////////////////////////////////////////////////
author:Robert Davies
-------------------------------------------------------------------------------
commit:902a8ea
/////////////////////////////////////////////////////////////////////////
1:     String localTopicName;
1:         this.localTopicName = inboundTopicName;
/////////////////////////////////////////////////////////////////////////
0:      * @param inboundTopicName 
0:         if(this.localTopicName==null){
1:             this.localTopicName = inboundTopicName;
1:         }
1:     }
0: 
1:     /**
1:      * @return the localTopicName
1:      */
0:     public String getLocalTopicName(){
1:         return localTopicName;
1:     }
0: 
1:     /**
1:      * @param localTopicName the localTopicName to set
1:      */
0:     public void setLocalTopicName(String localTopicName){
0:         this.localTopicName=localTopicName;
============================================================================