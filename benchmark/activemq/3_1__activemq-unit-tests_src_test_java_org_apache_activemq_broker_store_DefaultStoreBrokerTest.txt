1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.broker.store;
3:d29ca2a: 
1:d29ca2a: import java.net.URI;
1:d29ca2a: 
1:d29ca2a: import junit.framework.Test;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.broker.BrokerFactory;
1:d29ca2a: import org.apache.activemq.broker.BrokerService;
1:d29ca2a: import org.apache.activemq.broker.BrokerTest;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Once the wire format is completed we can test against real persistence storage.
1:b0c2a40:  * 
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public class DefaultStoreBrokerTest extends BrokerTest {
1:d29ca2a: 
1:d29ca2a:     protected BrokerService createBroker() throws Exception {
1:d29ca2a:         return BrokerFactory.createBroker(new URI("broker://()/localhost?deleteAllMessagesOnStartup=true"));
4:d29ca2a:     }
1:ef64a25:     
1:ef64a25:     protected BrokerService createRestartedBroker() throws Exception {
1:ef64a25:         return BrokerFactory.createBroker(new URI("broker://()/localhost"));
1:d29ca2a:     }
1:d29ca2a:     
1:d29ca2a:     public static Test suite() {
1:d29ca2a:         return suite(DefaultStoreBrokerTest.class);
1:d29ca2a:     }
1:d29ca2a:     
1:d29ca2a:     public static void main(String[] args) {
1:d29ca2a:         junit.textui.TestRunner.run(suite());
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:ef64a25
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     
1:     protected BrokerService createRestartedBroker() throws Exception {
1:         return BrokerFactory.createBroker(new URI("broker://()/localhost"));
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.store;
1: 
0: import java.io.File;
0: import java.io.IOException;
1: import java.net.URI;
0: import java.sql.Connection;
0: import java.sql.SQLException;
0: import java.sql.Statement;
1: 
0: import javax.sql.DataSource;
1: 
1: import junit.framework.Test;
1: 
1: import org.apache.activemq.broker.BrokerFactory;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.BrokerTest;
0: import org.apache.activemq.store.DefaultPersistenceAdapterFactory;
0: import org.apache.activemq.store.PersistenceAdapter;
0: import org.apache.activemq.store.jdbc.JDBCPersistenceAdapter;
0: import org.apache.activemq.store.journal.JournalPersistenceAdapter;
1: 
1: /**
1:  * Once the wire format is completed we can test against real persistence storage.
1:  * 
0:  * @version $Revision$
1:  */
1: public class DefaultStoreBrokerTest extends BrokerTest {
1: 
1:     protected BrokerService createBroker() throws Exception {
1:         return BrokerFactory.createBroker(new URI("broker://()/localhost?deleteAllMessagesOnStartup=true"));
1:     }
1: 
0:     protected PersistenceAdapter createPersistenceAdapter(boolean clean) throws IOException {
0:         File dataDir = new File("test-data");
0:         if( clean ) {
0:             recursiveDelete(new File(dataDir, "journal"));
1:         }
0:         DefaultPersistenceAdapterFactory factory = new DefaultPersistenceAdapterFactory();
0:         factory.setDataDirectory(dataDir);
0:         // Use a smaller journal so that tests are quicker.
0:         factory.setJournalLogFileSize(1024*64);
0:         PersistenceAdapter adapter = factory.createPersistenceAdapter(); 
0:         if( clean ) {
0:             DataSource ds = ((JDBCPersistenceAdapter)((JournalPersistenceAdapter)adapter).getLongTermPersistence()).getDataSource();
0:             try {
0:                 Connection c = ds.getConnection();
0:                 Statement s = c.createStatement();
0:                 try { s.executeUpdate("DROP TABLE ACTIVEMQ_MSGS");} catch (SQLException e) {}
0:                 try { s.executeUpdate("DROP TABLE ACTIVEMQ_TXS");} catch (SQLException e) {}
0:                 try { s.executeUpdate("DROP TABLE ACTIVEMQ_ACKS");} catch (SQLException e) {}
0:             } catch (SQLException e) {
1:             }
1:         }
0:         return adapter;
1:     }
1:     
1:     public static Test suite() {
1:         return suite(DefaultStoreBrokerTest.class);
1:     }
1:     
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
1: 
1: }
============================================================================