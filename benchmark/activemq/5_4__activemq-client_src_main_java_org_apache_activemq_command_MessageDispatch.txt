1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.command;
1:f812e34: 
1:d29ca2a: import org.apache.activemq.state.CommandVisitor;
1:ae61847: import org.apache.activemq.transport.TransmitCallback;
6:d29ca2a: 
1:d29ca2a: /**
1:ae61847:  *
1:4afa5d6:  * @openwire:marshaller code="21"
1:ae61847:  *
1:d29ca2a:  */
1:d29ca2a: public class MessageDispatch extends BaseCommand {
1:d29ca2a: 
1:f812e34:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.MESSAGE_DISPATCH;
1:d29ca2a: 
1:d29ca2a:     protected ConsumerId consumerId;
1:d29ca2a:     protected ActiveMQDestination destination;
1:d29ca2a:     protected Message message;
1:d29ca2a:     protected int redeliveryCounter;
1:d29ca2a: 
1:fc00993:     protected transient long deliverySequenceId;
1:fc00993:     protected transient Object consumer;
1:ae61847:     protected transient TransmitCallback transmitCallback;
1:e10f75c:     protected transient Throwable rollbackCause;
1:d29ca2a: 
1:ae61847:     @Override
1:d29ca2a:     public byte getDataStructureType() {
1:d29ca2a:         return DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:f812e34: 
1:ae61847:     @Override
1:d29ca2a:     public boolean isMessageDispatch() {
1:d29ca2a:         return true;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1 cache=true
1:d29ca2a:      */
1:d29ca2a:     public ConsumerId getConsumerId() {
1:d29ca2a:         return consumerId;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public void setConsumerId(ConsumerId consumerId) {
1:d29ca2a:         this.consumerId = consumerId;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1 cache=true
1:d29ca2a:      */
1:d29ca2a:     public ActiveMQDestination getDestination() {
1:d29ca2a:         return destination;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public void setDestination(ActiveMQDestination destination) {
1:d29ca2a:         this.destination = destination;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1
1:d29ca2a:      */
1:d29ca2a:     public Message getMessage() {
1:d29ca2a:         return message;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public void setMessage(Message message) {
1:d29ca2a:         this.message = message;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public long getDeliverySequenceId() {
1:d29ca2a:         return deliverySequenceId;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public void setDeliverySequenceId(long deliverySequenceId) {
1:d29ca2a:         this.deliverySequenceId = deliverySequenceId;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1
1:d29ca2a:      */
1:d29ca2a:     public int getRedeliveryCounter() {
1:d29ca2a:         return redeliveryCounter;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public void setRedeliveryCounter(int deliveryCounter) {
1:d29ca2a:         this.redeliveryCounter = deliveryCounter;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public Object getConsumer() {
1:d29ca2a:         return consumer;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setConsumer(Object consumer) {
1:d29ca2a:         this.consumer = consumer;
1:d29ca2a:     }
1:d29ca2a: 
1:ae61847:     @Override
1:7f5213b:     public Response visit(CommandVisitor visitor) throws Exception {
1:fb3b6db:         return visitor.processMessageDispatch(this);
1:f7db42a:     }
1:f7db42a: 
1:ae61847:     public TransmitCallback getTransmitCallback() {
1:f812e34:         return transmitCallback;
1:f812e34:     }
1:f7db42a: 
1:ae61847:     public void setTransmitCallback(TransmitCallback transmitCallback) {
1:f812e34:         this.transmitCallback = transmitCallback;
1:f812e34:     }
1:f812e34: 
1:e10f75c:     public Throwable getRollbackCause() {
1:e10f75c:         return rollbackCause;
1:f7db42a:     }
1:d29ca2a: 
1:e10f75c:     public void setRollbackCause(Throwable rollbackCause) {
1:e10f75c:         this.rollbackCause = rollbackCause;
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ae61847
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.TransmitCallback;
1:  *
1:  *
/////////////////////////////////////////////////////////////////////////
1:     protected transient TransmitCallback transmitCallback;
1:     @Override
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public TransmitCallback getTransmitCallback() {
1:     public void setTransmitCallback(TransmitCallback transmitCallback) {
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:     protected transient long deliverySequenceId;
1:     protected transient Object consumer;
0:     protected transient Runnable transmitCallback;
commit:f812e34
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.MESSAGE_DISPATCH;
/////////////////////////////////////////////////////////////////////////
1: 
1: 
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1: 
/////////////////////////////////////////////////////////////////////////
0:     public Runnable getTransmitCallback() {
1:         return transmitCallback;
1:     }
0:     public void setTransmitCallback(Runnable transmitCallback) {
1:         this.transmitCallback = transmitCallback;
1:     }
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:fb3b6db
/////////////////////////////////////////////////////////////////////////
1:         return visitor.processMessageDispatch(this);
commit:f7db42a
/////////////////////////////////////////////////////////////////////////
0:     transient protected Runnable transmitCallback;
/////////////////////////////////////////////////////////////////////////
1: 
0: 	public Runnable getTransmitCallback() {
0: 		return transmitCallback;
1: 	}
1: 
0: 	public void setTransmitCallback(Runnable transmitCallback) {
0: 		this.transmitCallback = transmitCallback;
1: 	}
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:7f5213b
/////////////////////////////////////////////////////////////////////////
1:     public Response visit(CommandVisitor visitor) throws Exception {
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: import org.apache.activemq.state.CommandVisitor;
1: 
1: 
1: /**
1:  * 
0:  * @openwire:marshaller
0:  * @version $Revision$
1:  */
1: public class MessageDispatch extends BaseCommand {
1: 
0:     public static final byte DATA_STRUCTURE_TYPE=CommandTypes.MESSAGE_DISPATCH;
1: 
1:     protected ConsumerId consumerId;
1:     protected ActiveMQDestination destination;
1:     protected Message message;
1:     protected int redeliveryCounter;
1: 
0:     transient protected long deliverySequenceId;
0:     transient protected Object consumer;
1:     
1:     public byte getDataStructureType() {
1:         return DATA_STRUCTURE_TYPE;
1:     }
1:     
1:     public boolean isMessageDispatch() {
1:         return true;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
1:     public ConsumerId getConsumerId() {
1:         return consumerId;
1:     }
1:     public void setConsumerId(ConsumerId consumerId) {
1:         this.consumerId = consumerId;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
1:     public ActiveMQDestination getDestination() {
1:         return destination;
1:     }
1:     public void setDestination(ActiveMQDestination destination) {
1:         this.destination = destination;
1:     }
1:     
1:     /**
1:      * @openwire:property version=1
1:      */
1:     public Message getMessage() {
1:         return message;
1:     }
1:     public void setMessage(Message message) {
1:         this.message = message;
1:     }
1: 
1:     public long getDeliverySequenceId() {
1:         return deliverySequenceId;
1:     }
1:     public void setDeliverySequenceId(long deliverySequenceId) {
1:         this.deliverySequenceId = deliverySequenceId;
1:     }
1:     
1:     /**
1:      * @openwire:property version=1
1:      */
1:     public int getRedeliveryCounter() {
1:         return redeliveryCounter;
1:     }
1:     public void setRedeliveryCounter(int deliveryCounter) {
1:         this.redeliveryCounter = deliveryCounter;
1:     }
1: 
1:     public Object getConsumer() {
1:         return consumer;
1:     }
1: 
1:     public void setConsumer(Object consumer) {
1:         this.consumer = consumer;
1:     }
1: 
0:     public Response visit(CommandVisitor visitor) throws Throwable {
0:         return null;
1:     }
1:     
1: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:e10f75c
/////////////////////////////////////////////////////////////////////////
1:     protected transient Throwable rollbackCause;
/////////////////////////////////////////////////////////////////////////
1:     public Throwable getRollbackCause() {
1:         return rollbackCause;
0:     }
0: 
1:     public void setRollbackCause(Throwable rollbackCause) {
1:         this.rollbackCause = rollbackCause;
0:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:4afa5d6
/////////////////////////////////////////////////////////////////////////
1:  * @openwire:marshaller code="21"
============================================================================