1:489f929: /**
1:489f929:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:489f929:  * contributor license agreements.  See the NOTICE file distributed with
1:489f929:  * this work for additional information regarding copyright ownership.
1:489f929:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:489f929:  * (the "License"); you may not use this file except in compliance with
1:489f929:  * the License.  You may obtain a copy of the License at
1:489f929:  *
1:489f929:  *      http://www.apache.org/licenses/LICENSE-2.0
1:489f929:  *
1:489f929:  * Unless required by applicable law or agreed to in writing, software
1:489f929:  * distributed under the License is distributed on an "AS IS" BASIS,
1:489f929:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:489f929:  * See the License for the specific language governing permissions and
1:489f929:  * limitations under the License.
1:489f929:  */
1:489f929: package org.apache.activemq.broker.jmx;
1:489f929: 
1:489f929: public interface NetworkDestinationViewMBean {
1:489f929: 
1:489f929:     /**
1:489f929:      * Returns the name of this destination
1:489f929:      */
1:489f929:     @MBeanInfo("Name of this destination.")
1:489f929:     String getName();
1:489f929: 
1:489f929:     /**
1:489f929:      * Resets the managment counters.
1:489f929:      */
1:489f929:     @MBeanInfo("Resets statistics.")
1:9b88902:     void resetStats();
1:489f929: 
1:489f929:     /**
1:489f929:      * Returns the number of messages that have been sent to the destination.
1:489f929:      *
1:489f929:      * @return The number of messages that have been sent to the destination.
1:489f929:      */
1:489f929:     @MBeanInfo("Number of messages that have been sent to the destination.")
1:489f929:     long getCount();
1:489f929: 
1:489f929:     /**
1:489f929:      * Returns the rate of messages that have been sent to the destination.
1:489f929:      *
1:489f929:      * @return The rate of messages that have been sent to the destination.
1:489f929:      */
1:489f929:     @MBeanInfo("rate of messages sent across the network destination.")
1:489f929:     double getRate();
1:489f929: }
============================================================================
author:rajdavies
-------------------------------------------------------------------------------
commit:9b88902
/////////////////////////////////////////////////////////////////////////
1:     void resetStats();
commit:489f929
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: public interface NetworkDestinationViewMBean {
1: 
1:     /**
1:      * Returns the name of this destination
1:      */
1:     @MBeanInfo("Name of this destination.")
1:     String getName();
1: 
1:     /**
1:      * Resets the managment counters.
1:      */
1:     @MBeanInfo("Resets statistics.")
0:     void resetStatistics();
1: 
1:     /**
1:      * Returns the number of messages that have been sent to the destination.
1:      *
1:      * @return The number of messages that have been sent to the destination.
1:      */
1:     @MBeanInfo("Number of messages that have been sent to the destination.")
1:     long getCount();
1: 
1:     /**
1:      * Returns the rate of messages that have been sent to the destination.
1:      *
1:      * @return The rate of messages that have been sent to the destination.
1:      */
1:     @MBeanInfo("rate of messages sent across the network destination.")
1:     double getRate();
1: }
============================================================================