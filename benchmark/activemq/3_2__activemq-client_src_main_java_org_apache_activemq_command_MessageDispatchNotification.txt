1:4098942: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:4098942:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4098942:  *
1:4098942:  * Unless required by applicable law or agreed to in writing, software
1:4098942:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4098942:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4098942:  * See the License for the specific language governing permissions and
1:4098942:  * limitations under the License.
1:4098942:  */
1:4098942: package org.apache.activemq.command;
2:4098942: 
1:4098942: import org.apache.activemq.state.CommandVisitor;
1:4098942: 
1:4098942: /**
1:4098942:  * @openwire:marshaller code="90"
1:b0c2a40:  * 
1:4098942:  */
1:230a86c: public class MessageDispatchNotification extends BaseCommand {
1:4098942: 
1:230a86c:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.MESSAGE_DISPATCH_NOTIFICATION;
1:4098942: 
1:4098942:     protected ConsumerId consumerId;
1:4098942:     protected ActiveMQDestination destination;
1:4098942:     protected MessageId messageId;
1:4098942:     protected long deliverySequenceId;
1:4098942: 
1:230a86c:     public byte getDataStructureType() {
1:4098942:         return DATA_STRUCTURE_TYPE;
1:4098942:     }
1:4098942: 
1:230a86c:     public boolean isMessageDispatchNotification() {
1:4098942:         return true;
1:4098942:     }
1:4098942: 
1:4098942:     /**
1:4098942:      * @openwire:property version=1 cache=true
1:4098942:      */
1:230a86c:     public ConsumerId getConsumerId() {
1:4098942:         return consumerId;
1:4098942:     }
1:230a86c: 
1:230a86c:     public void setConsumerId(ConsumerId consumerId) {
1:230a86c:         this.consumerId = consumerId;
1:4098942:     }
1:4098942: 
1:4098942:     /**
1:4098942:      * @openwire:property version=1 cache=true
1:4098942:      */
1:230a86c:     public ActiveMQDestination getDestination() {
1:4098942:         return destination;
1:4098942:     }
1:230a86c: 
1:230a86c:     public void setDestination(ActiveMQDestination destination) {
1:230a86c:         this.destination = destination;
1:4098942:     }
1:4098942: 
1:4098942:     /**
1:4098942:      * @openwire:property version=1
1:4098942:      */
1:4098942: 
1:230a86c:     public long getDeliverySequenceId() {
1:4098942:         return deliverySequenceId;
1:4098942:     }
1:230a86c: 
1:230a86c:     public void setDeliverySequenceId(long deliverySequenceId) {
1:230a86c:         this.deliverySequenceId = deliverySequenceId;
1:4098942:     }
1:4098942: 
1:7f5213b:     public Response visit(CommandVisitor visitor) throws Exception {
1:230a86c:         return visitor.processMessageDispatchNotification(this);
1:4098942:     }
1:4098942: 
1:4098942:     /**
1:4098942:      * @openwire:property version=1
1:4098942:      */
1:230a86c:     public MessageId getMessageId() {
1:4098942:         return messageId;
1:4098942:     }
1:4098942: 
1:230a86c:     public void setMessageId(MessageId messageId) {
1:230a86c:         this.messageId = messageId;
1:4098942:     }
1:4098942: 
1:4098942: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: public class MessageDispatchNotification extends BaseCommand {
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.MESSAGE_DISPATCH_NOTIFICATION;
1:     public byte getDataStructureType() {
1:     public boolean isMessageDispatchNotification() {
1:     public ConsumerId getConsumerId() {
1: 
1:     public void setConsumerId(ConsumerId consumerId) {
1:         this.consumerId = consumerId;
1:     public ActiveMQDestination getDestination() {
1: 
1:     public void setDestination(ActiveMQDestination destination) {
1:         this.destination = destination;
1:     public long getDeliverySequenceId() {
1: 
1:     public void setDeliverySequenceId(long deliverySequenceId) {
1:         this.deliverySequenceId = deliverySequenceId;
1:         return visitor.processMessageDispatchNotification(this);
1:     public MessageId getMessageId() {
1:     public void setMessageId(MessageId messageId) {
1:         this.messageId = messageId;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:7f5213b
/////////////////////////////////////////////////////////////////////////
1:     public Response visit(CommandVisitor visitor) throws Exception {
author:Robert Davies
-------------------------------------------------------------------------------
commit:4098942
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: import org.apache.activemq.state.CommandVisitor;
1: 
1: /**
1:  * 
1:  * @openwire:marshaller code="90"
0:  * @version $Revision$
1:  */
0: public class MessageDispatchNotification extends BaseCommand{
1: 
0:     public static final byte DATA_STRUCTURE_TYPE=CommandTypes.MESSAGE_DISPATCH_NOTIFICATION;
1: 
1:     protected ConsumerId consumerId;
1:     protected ActiveMQDestination destination;
1:     protected MessageId messageId;
1:     protected long deliverySequenceId;
1: 
0:     public byte getDataStructureType(){
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
0:     public boolean isMessageDispatchNotification(){
1:         return true;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
0:     public ConsumerId getConsumerId(){
1:         return consumerId;
1:     }
0:     public void setConsumerId(ConsumerId consumerId){
0:         this.consumerId=consumerId;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
0:     public ActiveMQDestination getDestination(){
1:         return destination;
1:     }
0:     public void setDestination(ActiveMQDestination destination){
0:         this.destination=destination;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      */
1: 
0:     public long getDeliverySequenceId(){
1:         return deliverySequenceId;
1:     }
0:     public void setDeliverySequenceId(long deliverySequenceId){
0:         this.deliverySequenceId=deliverySequenceId;
1:     }
1: 
0:     public Response visit(CommandVisitor visitor) throws Throwable {
0:         return visitor.processMessageDispatchNotification( this );
1:     }
1:     
1: 
1:     /**
1:      * @openwire:property version=1
1:      */
0:     public MessageId getMessageId(){
1:         return messageId;
1:     }
1: 
0:     public void setMessageId(MessageId messageId){
0:         this.messageId=messageId;
1:     }
1: 
1: }
============================================================================