1:10a403b: /**
1:10a403b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:10a403b:  * contributor license agreements.  See the NOTICE file distributed with
1:10a403b:  * this work for additional information regarding copyright ownership.
1:10a403b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:10a403b:  * (the "License"); you may not use this file except in compliance with
1:10a403b:  * the License.  You may obtain a copy of the License at
1:10a403b:  *
1:10a403b:  *      http://www.apache.org/licenses/LICENSE-2.0
1:10a403b:  *
1:10a403b:  * Unless required by applicable law or agreed to in writing, software
1:10a403b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:10a403b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:10a403b:  * See the License for the specific language governing permissions and
1:10a403b:  * limitations under the License.
1:10a403b:  */
1:10a403b: package org.apache.activemq.broker.util;
2:10a403b: 
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:10a403b: 
1:10a403b: public class DefaultAuditLog implements AuditLog {
1:10a403b: 
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger("org.apache.activemq.audit");
1:10a403b: 
1:b026971:     public void log(AuditLogEntry entry) {
1:b026971:          LOG.info(entry.toString());
3:10a403b:     }
1:10a403b: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger("org.apache.activemq.audit");
commit:b026971
/////////////////////////////////////////////////////////////////////////
1:     public void log(AuditLogEntry entry) {
1:          LOG.info(entry.toString());
commit:1f9cc43
/////////////////////////////////////////////////////////////////////////
commit:10a403b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.util;
1: 
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
1: public class DefaultAuditLog implements AuditLog {
1: 
0:     private static final Log LOG = LogFactory.getLog("org.apache.activemq.audit");
1: 
0:     public static AuditLog getAuditLog() {
0:         String auditLogClass = System.getProperty("org.apache.activemq.audit.class", "org.apache.activemq.broker.util.DefaultAuditLog");
0:         AuditLog log;
0:         try {
0:             log = (AuditLog) Class.forName(auditLogClass).newInstance();
0:         } catch (Exception e) {
0:             LOG.warn("Cannot instantiate audit log class '" + auditLogClass + "', using default audit log", e);
0:             log = new DefaultAuditLog();
1:         }
0:         return log;
1:     }
1: 
0:     public void log(String message) {
0:          LOG.info(message);
1:     }
1: }
============================================================================