1:885c379: /**
1:885c379:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:885c379:  * contributor license agreements.  See the NOTICE file distributed with
1:885c379:  * this work for additional information regarding copyright ownership.
1:885c379:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:885c379:  * (the "License"); you may not use this file except in compliance with
1:885c379:  * the License.  You may obtain a copy of the License at
3:885c379:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:885c379:  *
1:885c379:  * Unless required by applicable law or agreed to in writing, software
1:885c379:  * distributed under the License is distributed on an "AS IS" BASIS,
1:885c379:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:885c379:  * See the License for the specific language governing permissions and
1:885c379:  * limitations under the License.
1:885c379:  */
1:885c379: package org.apache.activemq.security;
1:98f707b: 
1:885c379: /**
1:885c379:  * Represents an entry in a {@link DefaultAuthorizationMap} for assigning
1:74a7a8b:  * different operations (read, write, admin) of user roles to a temporary
1:74a7a8b:  * destination
1:885c379:  * 
1:885c379:  * @org.apache.xbean.XBean
1:0bbc0ac:  * 
1:885c379:  */
1:885c379: public class TempDestinationAuthorizationEntry extends AuthorizationEntry {
1:98f707b: 
1:885c379:     public void afterPropertiesSet() throws Exception {
1:98f707b:         if (adminRoles != null) {
1:98f707b:             setAdminACLs(parseACLs(adminRoles));
1:98f707b:         }
1:98f707b: 
1:98f707b:         if (writeRoles != null) {
1:98f707b:             setWriteACLs(parseACLs(writeRoles));
1:98f707b:         }
1:98f707b: 
1:98f707b:         if (readRoles != null) {
1:98f707b:             setReadACLs(parseACLs(readRoles));
1:98f707b:         }
1:74a7a8b:     }
2:885c379: }
============================================================================
author:Torsten Mielke
-------------------------------------------------------------------------------
commit:5648482
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:98f707b
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:         if (adminRoles != null) {
1:             setAdminACLs(parseACLs(adminRoles));
1:         }
1: 
1:         if (writeRoles != null) {
1:             setWriteACLs(parseACLs(writeRoles));
1:         }
1: 
1:         if (readRoles != null) {
1:             setReadACLs(parseACLs(readRoles));
1:         }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1:  * different operations (read, write, admin) of user roles to a temporary
1:  * destination
0:         // we don't need to check if destination is specified since
0:         // the TempDestinationAuthorizationEntry should map to all temp
0:         // destinations
1:     }
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:885c379
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.security;
0: 
0: import org.apache.activemq.filter.DestinationMapEntry;
0: import org.apache.activemq.jaas.GroupPrincipal;
0: 
0: import java.util.Collections;
0: import java.util.HashSet;
0: import java.util.Set;
0: import java.util.StringTokenizer;
0: 
1: /**
1:  * Represents an entry in a {@link DefaultAuthorizationMap} for assigning
0:  * different operations (read, write, admin) of user roles to
0:  * a temporary destination
1:  * 
1:  * @org.apache.xbean.XBean
1:  * 
0:  * @version $Revision: 426366 $
1:  */
1: public class TempDestinationAuthorizationEntry extends AuthorizationEntry {
0: 
0:   
1:     public void afterPropertiesSet() throws Exception {
0:        //we don't need to check if destination is specified since
0:        //the TempDestinationAuthorizationEntry  should map to all temp destinations	
1:     }    
0: 
1: }
author:Jonas B. Lim
-------------------------------------------------------------------------------
commit:e78e72f
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.security;
0: 
0: import org.apache.activemq.filter.DestinationMapEntry;
0: import org.apache.activemq.jaas.GroupPrincipal;
0: 
0: import java.util.Collections;
0: import java.util.HashSet;
0: import java.util.Set;
0: import java.util.StringTokenizer;
0: 
0: /**
0:  * Represents an entry in a {@link DefaultAuthorizationMap} for assigning
0:  * different operations (read, write, admin) of user roles to
0:  * a temporary destination
0:  * 
0:  * @org.apache.xbean.XBean
0:  * 
0:  * @version $Revision: 426366 $
0:  */
0: public class TempDestinationAuthorizationEntry extends AuthorizationEntry {
0: 
0:   
0:     public void afterPropertiesSet() throws Exception {
0:        //we don't need to check if destination is specified since
0:        //the TempDestinationAuthorizationEntry  should map to all temp destinations	
0:     }    
0: 
0: }
============================================================================