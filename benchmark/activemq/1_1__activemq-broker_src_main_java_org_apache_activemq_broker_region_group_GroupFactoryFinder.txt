1:468e697: /**
1:468e697:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:468e697:  * contributor license agreements.  See the NOTICE file distributed with
1:468e697:  * this work for additional information regarding copyright ownership.
1:468e697:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:468e697:  * (the "License"); you may not use this file except in compliance with
1:468e697:  * the License.  You may obtain a copy of the License at
1:468e697:  *
1:468e697:  *      http://www.apache.org/licenses/LICENSE-2.0
1:468e697:  *
1:468e697:  * Unless required by applicable law or agreed to in writing, software
1:468e697:  * distributed under the License is distributed on an "AS IS" BASIS,
1:468e697:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:468e697:  * See the License for the specific language governing permissions and
1:468e697:  * limitations under the License.
1:468e697:  */
1:468e697: package org.apache.activemq.broker.region.group;
1:468e697: 
1:468e697: import java.io.IOException;
1:cd4b229: import java.util.Map;
1:468e697: 
1:468e697: import org.apache.activemq.util.FactoryFinder;
1:468e697: import org.apache.activemq.util.IOExceptionSupport;
1:cd4b229: import org.apache.activemq.util.IntrospectionSupport;
1:cd4b229: import org.apache.activemq.util.URISupport;
1:468e697: 
1:468e697: public class GroupFactoryFinder {
1:468e697:     private static final FactoryFinder GROUP_FACTORY_FINDER = new FactoryFinder("META-INF/services/org/apache/activemq/groups/");
1:468e697: 
1:468e697:     private GroupFactoryFinder() {
1:468e697:     }
1:468e697: 
1:468e697:     public static MessageGroupMapFactory createMessageGroupMapFactory(String type) throws IOException {
1:468e697:         try {
1:cd4b229:             Map<String,String> properties = null;
1:cd4b229:             String factoryType = type.trim();
1:cd4b229:             int p = factoryType.indexOf('?');
1:cd4b229:             if (p >= 0){
1:cd4b229:                 String propertiesString = factoryType.substring(p+1);
1:cd4b229:                 factoryType = factoryType.substring(0,p);
1:cd4b229:                 properties = URISupport.parseQuery(propertiesString);
1:cd4b229:             }
1:cd4b229:             MessageGroupMapFactory result =  (MessageGroupMapFactory)GROUP_FACTORY_FINDER.newInstance(factoryType);
1:cd4b229:             if (properties != null && result != null){
1:cd4b229:                 IntrospectionSupport.setProperties(result,properties);
1:cd4b229:             }
1:cd4b229:             return result;
1:cd4b229: 
1:468e697:         } catch (Throwable e) {
1:468e697:             throw IOExceptionSupport.create("Could not load " + type + " factory:" + e, e);
1:468e697:         }
1:468e697:     }
1:468e697: 
1:468e697: 
1:468e697: }
============================================================================
author:rajdavies
-------------------------------------------------------------------------------
commit:cd4b229
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: import org.apache.activemq.util.IntrospectionSupport;
1: import org.apache.activemq.util.URISupport;
/////////////////////////////////////////////////////////////////////////
1:             Map<String,String> properties = null;
1:             String factoryType = type.trim();
1:             int p = factoryType.indexOf('?');
1:             if (p >= 0){
1:                 String propertiesString = factoryType.substring(p+1);
1:                 factoryType = factoryType.substring(0,p);
1:                 properties = URISupport.parseQuery(propertiesString);
1:             }
1:             MessageGroupMapFactory result =  (MessageGroupMapFactory)GROUP_FACTORY_FINDER.newInstance(factoryType);
1:             if (properties != null && result != null){
1:                 IntrospectionSupport.setProperties(result,properties);
1:             }
1:             return result;
1: 
commit:468e697
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.group;
1: 
1: import java.io.IOException;
1: 
1: import org.apache.activemq.util.FactoryFinder;
1: import org.apache.activemq.util.IOExceptionSupport;
1: 
1: public class GroupFactoryFinder {
1:     private static final FactoryFinder GROUP_FACTORY_FINDER = new FactoryFinder("META-INF/services/org/apache/activemq/groups/");
1: 
1:     private GroupFactoryFinder() {
1:     }
1: 
1:     public static MessageGroupMapFactory createMessageGroupMapFactory(String type) throws IOException {
1:         try {
0:             return (MessageGroupMapFactory)GROUP_FACTORY_FINDER.newInstance(type);
1:         } catch (Throwable e) {
1:             throw IOExceptionSupport.create("Could not load " + type + " factory:" + e, e);
1:         }
1:     }
1: 
1: 
1: }
============================================================================