1:5be5a62: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:5be5a62:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5be5a62:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:5be5a62:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5be5a62:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5be5a62:  * See the License for the specific language governing permissions and
1:5be5a62:  * limitations under the License.
1:5be5a62:  */
1:5be5a62: 
1:d29ca2a: package org.apache.activemq.openwire.v1;
1:446629b: 
1:4821b9d: import java.io.DataInput;
1:4821b9d: import java.io.DataOutput;
1:d29ca2a: import java.io.IOException;
1:d29ca2a: 
1:74a7a8b: import org.apache.activemq.command.DataStructure;
1:74a7a8b: import org.apache.activemq.command.SessionInfo;
1:74a7a8b: import org.apache.activemq.openwire.BooleanStream;
1:74a7a8b: import org.apache.activemq.openwire.OpenWireFormat;
1:d29ca2a: 
1:d29ca2a: 
1:d29ca2a: 
1:90e21b4: /**
1:79d2868:  * Marshalling code for Open Wire Format for SessionInfoMarshaller
1:5be5a62:  *
1:5be5a62:  *
1:d29ca2a:  * NOTE!: This file is auto generated - do not modify!
1:d29ca2a:  *        if you need to make a change, please see the modify the groovy scripts in the
1:d29ca2a:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:d29ca2a:  *        this file.
1:b0c2a40:  *
3:90e21b4:  * 
2:d29ca2a:  */
1:d29ca2a: public class SessionInfoMarshaller extends BaseCommandMarshaller {
1:d29ca2a: 
3:d29ca2a:     /**
1:d29ca2a:      * Return the type of Data Structure we marshal
1:d29ca2a:      * @return short representation of the type data structure
1:d29ca2a:      */
1:d29ca2a:     public byte getDataStructureType() {
1:d29ca2a:         return SessionInfo.DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:d29ca2a:     
1:d29ca2a:     /**
1:d29ca2a:      * @return a new object instance
1:d29ca2a:      */
1:d29ca2a:     public DataStructure createObject() {
1:d29ca2a:         return new SessionInfo();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Un-marshal an object instance from the data input stream
1:90e21b4:      *
1:d29ca2a:      * @param o the object to un-marshal
1:d29ca2a:      * @param dataIn the data input stream to build the object from
1:d29ca2a:      * @throws IOException
1:d29ca2a:      */
1:4821b9d:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
1:33b73ac:         super.tightUnmarshal(wireFormat, o, dataIn, bs);
1:d29ca2a: 
1:d29ca2a:         SessionInfo info = (SessionInfo)o;
1:446629b:         info.setSessionId((org.apache.activemq.command.SessionId) tightUnmarsalCachedObject(wireFormat, dataIn, bs));
1:33b73ac: 
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Write the booleans that this object uses to a BooleanStream
1:d29ca2a:      */
1:33b73ac:     public int tightMarshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1:d29ca2a: 
1:d29ca2a:         SessionInfo info = (SessionInfo)o;
1:d29ca2a: 
1:33b73ac:         int rc = super.tightMarshal1(wireFormat, o, bs);
1:cd0fb61:         rc += tightMarshalCachedObject1(wireFormat, (DataStructure)info.getSessionId(), bs);
1:d29ca2a: 
1:79d2868:         return rc + 0;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Write a object instance to data output stream
1:90e21b4:      *
1:d29ca2a:      * @param o the instance to be marshaled
1:d29ca2a:      * @param dataOut the output stream
1:d29ca2a:      * @throws IOException thrown if an error occurs
1:d29ca2a:      */
1:4821b9d:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs) throws IOException {
1:33b73ac:         super.tightMarshal2(wireFormat, o, dataOut, bs);
1:33b73ac: 
1:d29ca2a:         SessionInfo info = (SessionInfo)o;
1:cd0fb61:         tightMarshalCachedObject2(wireFormat, (DataStructure)info.getSessionId(), dataOut, bs);
1:33b73ac: 
1:33b73ac:     }
1:33b73ac: 
1:33b73ac:     /**
1:33b73ac:      * Un-marshal an object instance from the data input stream
1:33b73ac:      *
1:33b73ac:      * @param o the object to un-marshal
1:33b73ac:      * @param dataIn the data input stream to build the object from
1:33b73ac:      * @throws IOException
1:33b73ac:      */
1:4821b9d:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn) throws IOException {
1:33b73ac:         super.looseUnmarshal(wireFormat, o, dataIn);
1:33b73ac: 
1:33b73ac:         SessionInfo info = (SessionInfo)o;
1:446629b:         info.setSessionId((org.apache.activemq.command.SessionId) looseUnmarsalCachedObject(wireFormat, dataIn));
1:33b73ac: 
1:33b73ac:     }
1:33b73ac: 
1:33b73ac: 
1:33b73ac:     /**
1:33b73ac:      * Write the booleans that this object uses to a BooleanStream
1:33b73ac:      */
1:4821b9d:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutput dataOut) throws IOException {
1:d29ca2a: 
1:33b73ac:         SessionInfo info = (SessionInfo)o;
1:d29ca2a: 
1:33b73ac:         super.looseMarshal(wireFormat, o, dataOut);
1:cd0fb61:         looseMarshalCachedObject(wireFormat, (DataStructure)info.getSessionId(), dataOut);
1:d29ca2a: 
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.DataStructure;
1: import org.apache.activemq.command.SessionInfo;
1: import org.apache.activemq.openwire.BooleanStream;
1: import org.apache.activemq.openwire.OpenWireFormat;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:cd0fb61
/////////////////////////////////////////////////////////////////////////
1:         rc += tightMarshalCachedObject1(wireFormat, (DataStructure)info.getSessionId(), bs);
/////////////////////////////////////////////////////////////////////////
1:         tightMarshalCachedObject2(wireFormat, (DataStructure)info.getSessionId(), dataOut, bs);
/////////////////////////////////////////////////////////////////////////
1:         looseMarshalCachedObject(wireFormat, (DataStructure)info.getSessionId(), dataOut);
commit:446629b
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:         info.setSessionId((org.apache.activemq.command.SessionId) tightUnmarsalCachedObject(wireFormat, dataIn, bs));
/////////////////////////////////////////////////////////////////////////
0:     rc += tightMarshalCachedObject1(wireFormat, (DataStructure)info.getSessionId(), bs);
/////////////////////////////////////////////////////////////////////////
0:     tightMarshalCachedObject2(wireFormat, (DataStructure)info.getSessionId(), dataOut, bs);
/////////////////////////////////////////////////////////////////////////
1:         info.setSessionId((org.apache.activemq.command.SessionId) looseUnmarsalCachedObject(wireFormat, dataIn));
/////////////////////////////////////////////////////////////////////////
0:     looseMarshalCachedObject(wireFormat, (DataStructure)info.getSessionId(), dataOut);
commit:33b73ac
/////////////////////////////////////////////////////////////////////////
0:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInputStream dataIn, BooleanStream bs) throws IOException {
1:         super.tightUnmarshal(wireFormat, o, dataIn, bs);
0:         info.setSessionId((SessionId) tightUnmarsalCachedObject(wireFormat, dataIn, bs));
/////////////////////////////////////////////////////////////////////////
1:     public int tightMarshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1:         int rc = super.tightMarshal1(wireFormat, o, bs);
0:     rc += tightMarshalCachedObject1(wireFormat, info.getSessionId(), bs);
/////////////////////////////////////////////////////////////////////////
0:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutputStream dataOut, BooleanStream bs) throws IOException {
1:         super.tightMarshal2(wireFormat, o, dataOut, bs);
0:     tightMarshalCachedObject2(wireFormat, info.getSessionId(), dataOut, bs);
1: 
1:     }
1: 
1:     /**
1:      * Un-marshal an object instance from the data input stream
1:      *
1:      * @param o the object to un-marshal
1:      * @param dataIn the data input stream to build the object from
1:      * @throws IOException
1:      */
0:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInputStream dataIn) throws IOException {
1:         super.looseUnmarshal(wireFormat, o, dataIn);
1: 
1:         SessionInfo info = (SessionInfo)o;
0:         info.setSessionId((SessionId) looseUnmarsalCachedObject(wireFormat, dataIn));
1: 
1:     }
1: 
1: 
1:     /**
1:      * Write the booleans that this object uses to a BooleanStream
1:      */
0:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutputStream dataOut) throws IOException {
1: 
1:         SessionInfo info = (SessionInfo)o;
1: 
1:         super.looseMarshal(wireFormat, o, dataOut);
0:     looseMarshalCachedObject(wireFormat, info.getSessionId(), dataOut);
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
commit:90e21b4
/////////////////////////////////////////////////////////////////////////
1: /** 
0:  * <a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a> 
1:  * 
0:  * Copyright 2005 Hiram Chirino
0:  * Copyright 2005 Protique Ltd
1:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
1:  * 
1:  * 
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
1:  * 
0:  **/
0: import org.apache.activemq.command.*;
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
0:  *
0:  * Copyright 2004 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
1:  */
1: package org.apache.activemq.openwire.v1;
1: 
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
1: import java.io.IOException;
1: 
0: import org.apache.activemq.command.*;
0: import org.apache.activemq.openwire.*;
1: 
1: 
1: /**
0:  * Marshalling code for Open Wire Format for SessionInfo
0:  *
0:  *
1:  * NOTE!: This file is auto generated - do not modify!
1:  *        if you need to make a change, please see the modify the groovy scripts in the
1:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:  *        this file.
0:  *
0:  * @version $Revision$
1:  */
1: public class SessionInfoMarshaller extends BaseCommandMarshaller {
1: 
1:     /**
1:      * Return the type of Data Structure we marshal
1:      * @return short representation of the type data structure
1:      */
1:     public byte getDataStructureType() {
1:         return SessionInfo.DATA_STRUCTURE_TYPE;
1:     }
1:     
1:     /**
1:      * @return a new object instance
1:      */
1:     public DataStructure createObject() {
1:         return new SessionInfo();
1:     }
1: 
1:     /**
1:      * Un-marshal an object instance from the data input stream
0:      *
1:      * @param o the object to un-marshal
1:      * @param dataIn the data input stream to build the object from
1:      * @throws IOException
1:      */
0:     public void unmarshal(OpenWireFormat wireFormat, Object o, DataInputStream dataIn, BooleanStream bs) throws IOException {
0:         super.unmarshal(wireFormat, o, dataIn, bs);
1: 
1:         SessionInfo info = (SessionInfo)o;
0:         info.setSessionId((org.apache.activemq.command.SessionId) unmarsalCachedObject(wireFormat, dataIn, bs));
1: 
1:     }
1: 
1: 
1:     /**
1:      * Write the booleans that this object uses to a BooleanStream
1:      */
0:     public int marshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1: 
1:         SessionInfo info = (SessionInfo)o;
1: 
0:         int rc = super.marshal1(wireFormat, o, bs);
0:         rc += marshal1CachedObject(wireFormat, info.getSessionId(), bs);
1: 
0:         return rc+0;
1:     }
1: 
1:     /**
1:      * Write a object instance to data output stream
0:      *
1:      * @param o the instance to be marshaled
1:      * @param dataOut the output stream
1:      * @throws IOException thrown if an error occurs
1:      */
0:     public void marshal2(OpenWireFormat wireFormat, Object o, DataOutputStream dataOut, BooleanStream bs) throws IOException {
0:         super.marshal2(wireFormat, o, dataOut, bs);
1: 
1:         SessionInfo info = (SessionInfo)o;
0:         marshal2CachedObject(wireFormat, info.getSessionId(), dataOut, bs);
1: 
1:     }
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:4821b9d
/////////////////////////////////////////////////////////////////////////
1: import java.io.DataInput;
1: import java.io.DataOutput;
/////////////////////////////////////////////////////////////////////////
1:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutput dataOut) throws IOException {
author:James Strachan
-------------------------------------------------------------------------------
commit:79d2868
/////////////////////////////////////////////////////////////////////////
1:  * Marshalling code for Open Wire Format for SessionInfoMarshaller
/////////////////////////////////////////////////////////////////////////
0:         info.setSessionId((SessionId) unmarsalCachedObject(wireFormat, dataIn, bs));
/////////////////////////////////////////////////////////////////////////
1:         return rc + 0;
============================================================================