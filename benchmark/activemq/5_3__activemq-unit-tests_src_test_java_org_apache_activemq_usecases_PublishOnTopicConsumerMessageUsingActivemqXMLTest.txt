2:a677c21: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:a677c21:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a677c21:  *
1:a677c21:  * Unless required by applicable law or agreed to in writing, software
1:a677c21:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a677c21:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a677c21:  * See the License for the specific language governing permissions and
1:a677c21:  * limitations under the License.
4:a677c21:  */
1:a677c21: package org.apache.activemq.usecases;
18:a677c21: 
1:74a7a8b: import java.io.File;
1:74a7a8b: 
1:aa1aa58: import org.apache.activemq.ActiveMQConnectionFactory;
1:a677c21: import org.apache.activemq.broker.BrokerService;
1:a677c21: import org.apache.activemq.xbean.BrokerFactoryBean;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:a677c21: import org.springframework.core.io.ClassPathResource;
1:a677c21: import org.springframework.core.io.Resource;
1:aa1aa58: 
1:a677c21: /**
1:a677c21:  * Test Publish/Consume topic  using the release activemq.xml configuration file
1:b0c2a40:  *
1:a677c21:  * 
1:a677c21:  */
1:a677c21: public class PublishOnTopicConsumerMessageUsingActivemqXMLTest extends PublishOnTopicConsumedMessageTest {
1:a677c21:     protected static final String JOURNAL_ROOT = "../data/";
1:8bf987b:     private static final transient Logger LOG = LoggerFactory.getLogger(PublishOnTopicConsumerMessageUsingActivemqXMLTest.class);
1:fc00993: 
1:a677c21:     BrokerService broker;
1:a677c21: 
1:aa1aa58:     /**
1:a677c21:      * Use the transportConnector uri configured on the activemq.xml
1:a677c21:      *
1:a677c21:      * @return ActiveMQConnectionFactory
1:a677c21:      * @throws Exception
1:a677c21:      */
1:a677c21:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:a677c21:         return new ActiveMQConnectionFactory("tcp://localhost:61616");
6:a677c21:     }
1:a677c21: 
1:a677c21:     /**
1:a677c21:      * Sets up a test where the producer and consumer have their own connection.
1:a677c21:      *
1:a677c21:      * @see junit.framework.TestCase#setUp()
1:aa1aa58:      */
1:a677c21:     protected void setUp() throws Exception {
1:a677c21:         File journalFile = new File(JOURNAL_ROOT);
1:a677c21:         recursiveDelete(journalFile);
1:a677c21:         // Create broker from resource
1:fc00993:         LOG.info("Creating broker... ");
1:a677c21:         broker = createBroker("org/apache/activemq/usecases/activemq.xml");
1:fc00993:         LOG.info("Success");
1:a677c21:         super.setUp();
1:a677c21:     }
1:a677c21: 
1:aa1aa58:     /*
1:aa1aa58:     * Stops the Broker
1:aa1aa58:     * @see junit.framework.TestCase#tearDown()
1:aa1aa58:     */
1:aa1aa58:     protected void tearDown() throws Exception {
1:fc00993:         LOG.info("Closing Broker");
1:aa1aa58:         if (broker != null) {
1:aa1aa58:             broker.stop();
1:aa1aa58:         }
1:fc00993:         LOG.info("Broker closed...");
1:aa1aa58:     }
1:aa1aa58: 
1:a677c21:     protected BrokerService createBroker(String resource) throws Exception {
1:a677c21:         return createBroker(new ClassPathResource(resource));
1:a677c21:     }
1:a677c21: 
1:a677c21:     protected BrokerService createBroker(Resource resource) throws Exception {
1:a677c21:         BrokerFactoryBean factory = new BrokerFactoryBean(resource);
1:a677c21:         factory.afterPropertiesSet();
1:a677c21: 
1:a677c21:         BrokerService broker = factory.getBroker();
1:a677c21: 
1:a677c21:         //assertTrue("Should have a broker!", broker != null);
1:a677c21: 
1:a677c21:         return broker;
1:a677c21:     }
1:a677c21: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:32c06a0
/////////////////////////////////////////////////////////////////////////
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0:     private static final transient Log LOG = LogFactory.getLog(PublishOnTopicConsumerMessageUsingActivemqXMLTest.class);
1: 
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("Creating broker... ");
1:         LOG.info("Success");
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("Closing Broker");
1:         LOG.info("Broker closed...");
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: 
/////////////////////////////////////////////////////////////////////////
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static final transient Logger LOG = LoggerFactory.getLogger(PublishOnTopicConsumerMessageUsingActivemqXMLTest.class);
author:James Strachan
-------------------------------------------------------------------------------
commit:aa1aa58
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.ActiveMQConnectionFactory;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
0:     private static final transient Log log = LogFactory.getLog(PublishOnTopicConsumerMessageUsingActivemqXMLTest.class);
1:     /**
/////////////////////////////////////////////////////////////////////////
0:         log.info("Creating broker... ");
1:     * Stops the Broker
1:     * @see junit.framework.TestCase#tearDown()
1:     */
1:     protected void tearDown() throws Exception {
0:         log.info("Closing Broker");
1:         if (broker != null) {
1:             broker.stop();
1:         }
0:         log.info("Broker closed...");
1:     }
1: 
1:     /*
0:     * clean up the journal
1:     */
0:         if (file.isDirectory()) {
/////////////////////////////////////////////////////////////////////////
commit:a677c21
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.xbean.BrokerFactoryBean;
0: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.springframework.core.io.ClassPathResource;
1: import org.springframework.core.io.Resource;
0: import java.io.File;
1: 
1: /**
1:  *
1:  * Test Publish/Consume topic  using the release activemq.xml configuration file
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class PublishOnTopicConsumerMessageUsingActivemqXMLTest extends PublishOnTopicConsumedMessageTest {
1:     protected static final String JOURNAL_ROOT = "../data/";
1:     BrokerService broker;
1: 
1: 
1: 
1:      /**
1:      * Use the transportConnector uri configured on the activemq.xml
1:      *
1:      * @return ActiveMQConnectionFactory
1:      * @throws Exception
1:      */
1:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:         return new ActiveMQConnectionFactory("tcp://localhost:61616");
1:     }
1: 
1: 
1:     /**
1:      * Sets up a test where the producer and consumer have their own connection.
1:      *
1:      * @see junit.framework.TestCase#setUp()
1:      */
1:     protected void setUp() throws Exception {
0:         ;
1:         File journalFile = new File(JOURNAL_ROOT);
1:         recursiveDelete(journalFile);
1:         // Create broker from resource
0:         System.out.print("Creating broker... ");
1:         broker = createBroker("org/apache/activemq/usecases/activemq.xml");
0:         log.info("Success");
1:         super.setUp();
1: 
1:     }
1: 
1: 
1: 
0:      /*
0:      * Stops the Broker
0:      * @see junit.framework.TestCase#tearDown()
1:      */
0:     protected void tearDown() throws Exception {
0:          log.info("Closing Broker");
0:             if (broker != null) {
0:                broker.stop();
1:             }
0:          log.info("Broker closed...");
1: 
1: 
1:     }
1: 
1: 
1: 
1: 
1: 
0:     /*
0:      * clean up the journal
1:      */
1: 
0:     protected static void recursiveDelete(File file) {
0:         if( file.isDirectory() ) {
0:             File[] files = file.listFiles();
0:             for (int i = 0; i < files.length; i++) {
0:                 recursiveDelete(files[i]);
1:             }
1:         }
0:         file.delete();
1:     }
1: 
1:     protected BrokerService createBroker(String resource) throws Exception {
1:         return createBroker(new ClassPathResource(resource));
1:     }
1: 
1:     protected BrokerService createBroker(Resource resource) throws Exception {
1:         BrokerFactoryBean factory = new BrokerFactoryBean(resource);
1:         factory.afterPropertiesSet();
1: 
1:         BrokerService broker = factory.getBroker();
1: 
1:         //assertTrue("Should have a broker!", broker != null);
1: 
1: 
1:         return broker;
1:     }
1: }
============================================================================