1:72839b7: /**
1:72839b7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:72839b7:  * contributor license agreements.  See the NOTICE file distributed with
1:72839b7:  * this work for additional information regarding copyright ownership.
1:72839b7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:72839b7:  * (the "License"); you may not use this file except in compliance with
1:72839b7:  * the License.  You may obtain a copy of the License at
1:72839b7:  *
1:72839b7:  *      http://www.apache.org/licenses/LICENSE-2.0
1:72839b7:  *
1:72839b7:  * Unless required by applicable law or agreed to in writing, software
1:72839b7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:72839b7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:72839b7:  * See the License for the specific language governing permissions and
1:72839b7:  * limitations under the License.
1:72839b7:  */
1:72839b7: package org.apache.activemq.transport.amqp.client.util;
1:72839b7: 
1:72839b7: /**
1:72839b7:  * Defines a result interface for Asynchronous operations.
1:72839b7:  */
1:72839b7: public interface AsyncResult {
1:72839b7: 
1:72839b7:     /**
1:72839b7:      * If the operation fails this method is invoked with the Exception
1:72839b7:      * that caused the failure.
1:72839b7:      *
1:72839b7:      * @param result
1:72839b7:      *        The error that resulted in this asynchronous operation failing.
1:72839b7:      */
1:72839b7:     void onFailure(Throwable result);
1:72839b7: 
1:72839b7:     /**
1:72839b7:      * If the operation succeeds the resulting value produced is set to null and
1:72839b7:      * the waiting parties are signaled.
1:72839b7:      */
1:72839b7:     void onSuccess();
1:72839b7: 
1:72839b7:     /**
1:72839b7:      * Returns true if the AsyncResult has completed.  The task is considered complete
1:72839b7:      * regardless if it succeeded or failed.
1:72839b7:      *
1:72839b7:      * @return returns true if the asynchronous operation has completed.
1:72839b7:      */
1:72839b7:     boolean isComplete();
1:72839b7: 
1:72839b7: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:72839b7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.client.util;
1: 
1: /**
1:  * Defines a result interface for Asynchronous operations.
1:  */
1: public interface AsyncResult {
1: 
1:     /**
1:      * If the operation fails this method is invoked with the Exception
1:      * that caused the failure.
1:      *
1:      * @param result
1:      *        The error that resulted in this asynchronous operation failing.
1:      */
1:     void onFailure(Throwable result);
1: 
1:     /**
1:      * If the operation succeeds the resulting value produced is set to null and
1:      * the waiting parties are signaled.
1:      */
1:     void onSuccess();
1: 
1:     /**
1:      * Returns true if the AsyncResult has completed.  The task is considered complete
1:      * regardless if it succeeded or failed.
1:      *
1:      * @return returns true if the asynchronous operation has completed.
1:      */
1:     boolean isComplete();
1: 
1: }
============================================================================