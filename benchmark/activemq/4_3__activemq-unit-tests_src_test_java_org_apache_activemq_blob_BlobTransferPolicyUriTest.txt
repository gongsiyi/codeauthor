1:52c22cc: /**
1:52c22cc:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:52c22cc:  * contributor license agreements.  See the NOTICE file distributed with
1:52c22cc:  * this work for additional information regarding copyright ownership.
1:52c22cc:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:52c22cc:  * (the "License"); you may not use this file except in compliance with
1:52c22cc:  * the License.  You may obtain a copy of the License at
2:52c22cc:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:52c22cc:  *
1:52c22cc:  * Unless required by applicable law or agreed to in writing, software
1:52c22cc:  * distributed under the License is distributed on an "AS IS" BASIS,
1:52c22cc:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:52c22cc:  * See the License for the specific language governing permissions and
1:52c22cc:  * limitations under the License.
1:52c22cc:  */
1:52c22cc: package org.apache.activemq.blob;
1:52c22cc: 
1:52c22cc: import junit.framework.TestCase;
1:52c22cc: import org.apache.activemq.ActiveMQConnectionFactory;
1:b64ac1d: import org.apache.activemq.command.ActiveMQBlobMessage;
1:b64ac1d: import org.apache.activemq.command.MessageId;
1:b64ac1d: 
1:b64ac1d: import java.io.IOException;
1:b64ac1d: import java.io.InputStream;
1:52c22cc: 
1:52c22cc: /**
1:0bbc0ac:  * 
1:52c22cc:  */
1:52c22cc: public class BlobTransferPolicyUriTest extends TestCase {
1:52c22cc:     public void testBlobTransferPolicyIsConfiguredViaUri() throws Exception {
1:52c22cc:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost?jms.blobTransferPolicy.defaultUploadUrl=http://foo.com");
1:52c22cc:         BlobTransferPolicy policy = factory.getBlobTransferPolicy();
1:52c22cc:         assertEquals("http://foo.com", policy.getDefaultUploadUrl());
1:52c22cc:         assertEquals("http://foo.com", policy.getUploadUrl());
1:52c22cc:     }
1:b64ac1d: 
1:b64ac1d:     public void testDefaultUploadStrategySensibleError() throws Exception {
1:b64ac1d:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:b64ac1d:         BlobTransferPolicy policy = factory.getBlobTransferPolicy();
1:b64ac1d:         BlobUploadStrategy strategy = policy.getUploadStrategy();
1:b64ac1d:         ActiveMQBlobMessage message = new ActiveMQBlobMessage();
1:b64ac1d:         message.setMessageId(new MessageId("1:0:0:0"));
1:b64ac1d:         try {
1:b64ac1d:             strategy.uploadStream(message, message.getInputStream());
1:b64ac1d:         } catch (IOException expected) {
1:b64ac1d:             assertTrue(expected.getMessage().contains("8080"));
1:b64ac1d:             expected.printStackTrace();
1:b64ac1d:         }
1:b64ac1d:     }
1:b64ac1d: 
1:b64ac1d:     public void testDefaultDownlaodStrategySensibleError() throws Exception {
1:b64ac1d:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:b64ac1d:         BlobTransferPolicy policy = factory.getBlobTransferPolicy();
1:b64ac1d:         BlobDownloadStrategy strategy = policy.getDownloadStrategy();
1:b64ac1d:         ActiveMQBlobMessage message = new ActiveMQBlobMessage();
1:b64ac1d:         message.setMessageId(new MessageId("1:0:0:0"));
1:b64ac1d:         try {
1:b64ac1d:             strategy.deleteFile(message);
1:b64ac1d:         } catch (IOException expected) {
1:b64ac1d:             assertTrue(expected.getMessage().contains("8080"));
1:b64ac1d:             expected.printStackTrace();
1:b64ac1d:         }
1:b64ac1d: 
1:b64ac1d:     }
1:52c22cc: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:b64ac1d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.ActiveMQBlobMessage;
1: import org.apache.activemq.command.MessageId;
1: 
1: import java.io.IOException;
1: import java.io.InputStream;
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void testDefaultUploadStrategySensibleError() throws Exception {
1:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:         BlobTransferPolicy policy = factory.getBlobTransferPolicy();
1:         BlobUploadStrategy strategy = policy.getUploadStrategy();
1:         ActiveMQBlobMessage message = new ActiveMQBlobMessage();
1:         message.setMessageId(new MessageId("1:0:0:0"));
1:         try {
1:             strategy.uploadStream(message, message.getInputStream());
1:         } catch (IOException expected) {
1:             assertTrue(expected.getMessage().contains("8080"));
1:             expected.printStackTrace();
1:         }
1:     }
1: 
1:     public void testDefaultDownlaodStrategySensibleError() throws Exception {
1:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:         BlobTransferPolicy policy = factory.getBlobTransferPolicy();
1:         BlobDownloadStrategy strategy = policy.getDownloadStrategy();
1:         ActiveMQBlobMessage message = new ActiveMQBlobMessage();
1:         message.setMessageId(new MessageId("1:0:0:0"));
1:         try {
1:             strategy.deleteFile(message);
1:         } catch (IOException expected) {
1:             assertTrue(expected.getMessage().contains("8080"));
1:             expected.printStackTrace();
1:         }
1: 
1:     }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
author:James Strachan
-------------------------------------------------------------------------------
commit:52c22cc
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.blob;
1: 
1: import junit.framework.TestCase;
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: 
1: /**
0:  * @version $Revision$
1:  */
1: public class BlobTransferPolicyUriTest extends TestCase {
1:     public void testBlobTransferPolicyIsConfiguredViaUri() throws Exception {
1:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost?jms.blobTransferPolicy.defaultUploadUrl=http://foo.com");
1:         BlobTransferPolicy policy = factory.getBlobTransferPolicy();
1:         assertEquals("http://foo.com", policy.getDefaultUploadUrl());
1:         assertEquals("http://foo.com", policy.getUploadUrl());
1:     }
1: }
============================================================================