1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.thread;
3:d29ca2a: 
1:d29ca2a: /**
1:0b01996:  * @deprecated do not use this class. Instead use {@link TaskRunnerFactory}
1:d29ca2a:  */
1:0b01996: @Deprecated
1:933eb2f: public final class DefaultThreadPools {
1:d29ca2a: 
1:fc00993:     private static final TaskRunnerFactory DEFAULT_TASK_RUNNER_FACTORY = new TaskRunnerFactory();
1:d29ca2a:     
1:933eb2f:     private DefaultThreadPools() {        
1:e7246d9:     }
1:933eb2f:     
1:0b01996:     @Deprecated
1:d29ca2a:     public static TaskRunnerFactory getDefaultTaskRunnerFactory() {
1:fc00993:         return DEFAULT_TASK_RUNNER_FACTORY;
1:933eb2f:     }
1:e7246d9: 
1:1355cf5:     /**
1:1355cf5:      * Useful to cleanup when it is known that all brokers and connections are
1:1355cf5:      * close and stopped, eg: when un deploying from web container.
1:1355cf5:      */
1:1355cf5:     public static void shutdown() {
1:1355cf5:         DEFAULT_TASK_RUNNER_FACTORY.shutdown();
1:933eb2f:     }
1:d29ca2a:     
1:e7246d9: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:1f521da
/////////////////////////////////////////////////////////////////////////
0: //    private static final Executor DEFAULT_POOL;
0: //    static {
0: //        DEFAULT_POOL = new ScheduledThreadPoolExecutor(5, new ThreadFactory() {
0: //            public Thread newThread(Runnable runnable) {
0: //                Thread thread = new Thread(runnable, "ActiveMQ Default Thread Pool Thread");
0: //                thread.setDaemon(true);
0: //                return thread;
0: //            }
0: //        });
0: //    }    
0: //    public static Executor getDefaultPool() {
0: //        return DEFAULT_POOL;
0: //    }
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1: public final class DefaultThreadPools {
/////////////////////////////////////////////////////////////////////////
1:     }    
1:     private DefaultThreadPools() {        
1:     }
1:     
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0:     private static final Executor DEFAULT_POOL;
0:         DEFAULT_POOL = new ScheduledThreadPoolExecutor(5, new ThreadFactory() {
/////////////////////////////////////////////////////////////////////////
1:     private static final TaskRunnerFactory DEFAULT_TASK_RUNNER_FACTORY = new TaskRunnerFactory();
0:         return DEFAULT_POOL;
1:         return DEFAULT_TASK_RUNNER_FACTORY;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
0: import java.util.concurrent.Executor;
0: import java.util.concurrent.ScheduledThreadPoolExecutor;
0: import java.util.concurrent.ThreadFactory;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:e2aad41
/////////////////////////////////////////////////////////////////////////
0:     private static final TaskRunnerFactory defaultTaskRunnerFactory = new TaskRunnerFactory();
commit:e7246d9
/////////////////////////////////////////////////////////////////////////
0: import edu.emory.mathcs.backport.java.util.concurrent.ThreadFactory;
/////////////////////////////////////////////////////////////////////////
0:     private static final Executor defaultPool;
0:     static {
0:         defaultPool = new ScheduledThreadPoolExecutor(5, new ThreadFactory() {
0:             public Thread newThread(Runnable runnable) {
0:                 Thread thread = new Thread(runnable, "ActiveMQ Default Thread Pool Thread");
0:                 thread.setDaemon(true);
0:                 return thread;
1:             }
0:         });
1:     }
1:     
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.thread;
1: 
0: import edu.emory.mathcs.backport.java.util.concurrent.Executor;
0: import edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor;
1: 
1: /**
1:  * 
0:  * @version $Revision$
1:  */
0: public class DefaultThreadPools {
1: 
0:     private static final Executor defaultPool = new ScheduledThreadPoolExecutor(5);
0:     private static final TaskRunnerFactory defaultTaskRunnerFactory = new TaskRunnerFactory(defaultPool,10);
1:     
0:     public static Executor getDeaultPool() {
0:         return defaultPool;
0:     }
1:     
1:     public static TaskRunnerFactory getDefaultTaskRunnerFactory() {
0:         return defaultTaskRunnerFactory;
0:     }
1:     
0: }
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:0b01996
/////////////////////////////////////////////////////////////////////////
1:  * @deprecated do not use this class. Instead use {@link TaskRunnerFactory}
1: @Deprecated
1:     @Deprecated
author:Gary Tully
-------------------------------------------------------------------------------
commit:1355cf5
/////////////////////////////////////////////////////////////////////////
0: 
1:     /**
1:      * Useful to cleanup when it is known that all brokers and connections are
1:      * close and stopped, eg: when un deploying from web container.
1:      */
1:     public static void shutdown() {
1:         DEFAULT_TASK_RUNNER_FACTORY.shutdown();
0:     }
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:f6735ea
/////////////////////////////////////////////////////////////////////////
0:     public static Executor getDefaultPool() {
============================================================================