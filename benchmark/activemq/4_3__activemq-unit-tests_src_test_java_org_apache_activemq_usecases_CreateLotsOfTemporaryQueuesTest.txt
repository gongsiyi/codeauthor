1:a677c21: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:a677c21:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a677c21:  *
1:a677c21:  * Unless required by applicable law or agreed to in writing, software
1:a677c21:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a677c21:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a677c21:  * See the License for the specific language governing permissions and
1:a677c21:  * limitations under the License.
1:a677c21:  */
1:a677c21: package org.apache.activemq.usecases;
4:a677c21: 
1:a677c21: import javax.jms.Session;
1:a677c21: import javax.jms.TemporaryQueue;
1:a677c21: 
1:a677c21: import junit.framework.Test;
1:a677c21: import junit.framework.TestSuite;
1:a677c21: import junit.textui.TestRunner;
1:74a7a8b: import org.apache.activemq.EmbeddedBrokerAndConnectionTestSupport;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:a677c21: 
1:a677c21: /**
1:b0c2a40:  * 
1:a677c21:  */
1:0eae288: public class CreateLotsOfTemporaryQueuesTest extends EmbeddedBrokerAndConnectionTestSupport {
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(CreateLotsOfTemporaryQueuesTest.class);
1:a677c21: 
1:a677c21:     private static int numberToCreate = 500;
1:a677c21:     private static long sleep = 20;
1:a677c21: 
1:a677c21:     public static void main(String[] args) {
1:a677c21:         configure(args);
1:a677c21:         TestRunner.run(suite());
1:a677c21:     }
1:ecf89a6: 
1:a677c21:     public static Test suite() {
1:a677c21:         return new TestSuite(CreateLotsOfTemporaryQueuesTest.class);
1:a677c21:     }
1:a677c21: 
1:a677c21:     public void testCreateLotsOfTemporaryQueues() throws Exception {
1:230a86c:         LOG.info("Creating " + numberToCreate + " temporary queue(s)");
1:a677c21: 
1:a677c21:         Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);
1:a677c21:         for (int i = 0; i < numberToCreate; i++) {
1:a677c21:             if (i % 1000 == 0) {
1:230a86c:                 LOG.info("attempt " + i);
1:a677c21:             }
1:a677c21:             TemporaryQueue temporaryQueue = session.createTemporaryQueue();
1:a677c21:             temporaryQueue.delete();
1:ecf89a6:             Thread.sleep(sleep);
1:a677c21:         }
1:230a86c:         LOG.info("Created " + numberToCreate + " temporary queue(s)");
1:a677c21:     }
1:a677c21: 
1:a677c21:     public static void configure(String[] args) {
1:a677c21:         if (args.length > 0) {
1:a677c21:             numberToCreate = Integer.parseInt(args[0]);
1:a677c21:         }
1:a677c21:     }
1:a677c21: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:ecf89a6
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:             Thread.sleep(sleep);
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
0:     private static final Log LOG = LogFactory.getLog(CreateLotsOfTemporaryQueuesTest.class);
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.EmbeddedBrokerAndConnectionTestSupport;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("Creating " + numberToCreate + " temporary queue(s)");
1:                 LOG.info("attempt " + i);
1:         LOG.info("Created " + numberToCreate + " temporary queue(s)");
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(CreateLotsOfTemporaryQueuesTest.class);
author:James Strachan
-------------------------------------------------------------------------------
commit:0eae288
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.EmbeddedBrokerAndConnectionTestSupport;
/////////////////////////////////////////////////////////////////////////
1: public class CreateLotsOfTemporaryQueuesTest extends EmbeddedBrokerAndConnectionTestSupport {
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:a677c21
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
0: import org.apache.activemq.EmbeddedBrokerTestSupport;
1: 
0: import javax.jms.Connection;
1: import javax.jms.Session;
1: import javax.jms.TemporaryQueue;
1: 
1: import junit.framework.Test;
1: import junit.framework.TestSuite;
1: import junit.textui.TestRunner;
1: 
1: /**
1:  * 
0:  * @version $Revision: 1.1 $
1:  */
0: public class CreateLotsOfTemporaryQueuesTest extends EmbeddedBrokerTestSupport {
1: 
1:     private static int numberToCreate = 500;
1:     private static long sleep = 20;
1: 
1: 
1:     public static void main(String[] args) {
1:         configure(args);
1:         TestRunner.run(suite());
1:     }
1:     
1:     public static Test suite() {
1:         return new TestSuite(CreateLotsOfTemporaryQueuesTest.class);
1:     }
1: 
1:     public void testCreateLotsOfTemporaryQueues() throws Exception {
0:         log.info("Creating " + numberToCreate + " temporary queue(s)");
1: 
0:         Connection connection = createConnection();
0:         connection.start();
1:         Session session = connection.createSession(true, Session.AUTO_ACKNOWLEDGE);
1:         for (int i = 0; i < numberToCreate; i++) {
1:             if (i % 1000 == 0) {
0:                 log.info("attempt " + i);
1:             }
1:             TemporaryQueue temporaryQueue = session.createTemporaryQueue();
1:             temporaryQueue.delete();
0:             Thread.sleep(sleep );
1:         }
0:         log.info("Created " + numberToCreate + " temporary queue(s)");
0:         connection.close();
1:     }
1: 
1:     public static void configure(String[] args) {
1:         if (args.length > 0) {
1:             numberToCreate = Integer.parseInt(args[0]);
1:         }
1:     }
1: }
============================================================================