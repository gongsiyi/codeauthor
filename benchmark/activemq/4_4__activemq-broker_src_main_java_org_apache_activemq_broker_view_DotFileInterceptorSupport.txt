1:fc00993: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
2:4ba19ca:  *
1:4ba19ca:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4ba19ca:  *
1:4ba19ca:  * Unless required by applicable law or agreed to in writing, software
1:4ba19ca:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4ba19ca:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4ba19ca:  * See the License for the specific language governing permissions and
1:4ba19ca:  * limitations under the License.
1:4ba19ca:  */
1:4ba19ca: package org.apache.activemq.broker.view;
2:4ba19ca: 
1:74a7a8b: import java.io.FileWriter;
1:74a7a8b: import java.io.PrintWriter;
1:74a7a8b: 
1:4ba19ca: import org.apache.activemq.broker.Broker;
1:4ba19ca: import org.apache.activemq.broker.BrokerFilter;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:4ba19ca: 
1:4ba19ca: /**
1:4ba19ca:  * Useful base class
1:b0c2a40:  * 
1:4ba19ca:  * 
1:4ba19ca:  */
1:4ba19ca: public abstract class DotFileInterceptorSupport extends BrokerFilter {
1:8bf987b:     private final Logger log = LoggerFactory.getLogger(DotFileInterceptorSupport.class);
1:4ba19ca: 
1:4ba19ca:     private String file;
1:4ba19ca: 
1:4ba19ca:     public DotFileInterceptorSupport(Broker next, String file) {
1:4ba19ca:         super(next);
1:4ba19ca:         this.file = file;
3:4ba19ca:     }
1:4ba19ca: 
1:4ba19ca:     protected void generateFile() throws Exception {
1:e1bbde7:         log.debug("Creating DOT file at: {}", file);
1:4ba19ca:         PrintWriter writer = new PrintWriter(new FileWriter(file));
1:4ba19ca:         try {
1:4ba19ca:             generateFile(writer);
1:74a7a8b:         } finally {
1:4ba19ca:             writer.close();
1:4ba19ca:         }
1:4ba19ca:     }
1:4ba19ca: 
1:4ba19ca:     protected abstract void generateFile(PrintWriter writer) throws Exception;
1:4ba19ca: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:e1bbde7
/////////////////////////////////////////////////////////////////////////
1:         log.debug("Creating DOT file at: {}", file);
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: /**
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.io.FileWriter;
1: import java.io.PrintWriter;
1: 
/////////////////////////////////////////////////////////////////////////
1:         } finally {
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private final Logger log = LoggerFactory.getLogger(DotFileInterceptorSupport.class);
author:James Strachan
-------------------------------------------------------------------------------
commit:4ba19ca
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Copyright 2005-2006 The Apache Software Foundation.
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.view;
1: 
1: import org.apache.activemq.broker.Broker;
1: import org.apache.activemq.broker.BrokerFilter;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
0: import java.io.FileWriter;
0: import java.io.PrintWriter;
1: 
1: /**
1:  * Useful base class
1:  * 
0:  * @version $Revision: $
1:  */
1: public abstract class DotFileInterceptorSupport extends BrokerFilter {
0:     private final Log log = LogFactory.getLog(DotFileInterceptorSupport.class);
1: 
1:     private String file;
1: 
1:     public DotFileInterceptorSupport(Broker next, String file) {
1:         super(next);
1:         this.file = file;
1:     }
1: 
1:     protected void generateFile() throws Exception {
0:         if (log.isDebugEnabled()) {
0:             log.debug("Creating DOT file at: " + file);
1:         }
1:         PrintWriter writer = new PrintWriter(new FileWriter(file));
1:         try {
1:             generateFile(writer);
1:         }
0:         finally {
1:             writer.close();
1:         }
1:     }
1: 
1:     protected abstract void generateFile(PrintWriter writer) throws Exception;
1: }
============================================================================