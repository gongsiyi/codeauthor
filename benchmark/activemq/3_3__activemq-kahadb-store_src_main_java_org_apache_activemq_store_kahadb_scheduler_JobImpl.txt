1:c7c8e53: /**
1:c7c8e53:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c7c8e53:  * contributor license agreements.  See the NOTICE file distributed with
1:c7c8e53:  * this work for additional information regarding copyright ownership.
1:c7c8e53:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c7c8e53:  * (the "License"); you may not use this file except in compliance with
1:c7c8e53:  * the License.  You may obtain a copy of the License at
1:c7c8e53:  *
1:c7c8e53:  *      http://www.apache.org/licenses/LICENSE-2.0
1:c7c8e53:  *
1:c7c8e53:  * Unless required by applicable law or agreed to in writing, software
1:c7c8e53:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c7c8e53:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c7c8e53:  * See the License for the specific language governing permissions and
1:c7c8e53:  * limitations under the License.
1:c7c8e53:  */
1:0484af1: package org.apache.activemq.store.kahadb.scheduler;
1:0484af1: 
1:0484af1: import org.apache.activemq.broker.scheduler.Job;
1:0484af1: import org.apache.activemq.broker.scheduler.JobSupport;
1:1aab71b: import org.apache.activemq.util.ByteSequence;
13:c7c8e53: 
1:c7c8e53: public class JobImpl implements Job {
1:d1446c3: 
1:e3154c3:     private final JobLocation jobLocation;
1:c7c8e53:     private final byte[] payload;
1:d1446c3: 
1:74846bb:     protected JobImpl(JobLocation location, ByteSequence bs) {
1:74846bb:         this.jobLocation = location;
1:c7c8e53:         this.payload = new byte[bs.getLength()];
1:c7c8e53:         System.arraycopy(bs.getData(), bs.getOffset(), this.payload, 0, bs.getLength());
3:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public String getJobId() {
1:e3154c3:         return this.jobLocation.getJobId();
1:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public byte[] getPayload() {
1:74846bb:         return this.payload;
1:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public long getPeriod() {
1:74846bb:         return this.jobLocation.getPeriod();
1:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public int getRepeat() {
1:74846bb:         return this.jobLocation.getRepeat();
1:c7c8e53:     }
1:e3154c3: 
1:d1446c3:     @Override
1:c7c8e53:     public long getStart() {
1:74846bb:         return this.jobLocation.getStartTime();
1:e3154c3:     }
1:d1446c3: 
1:d1446c3:     @Override
1:e3154c3:     public long getDelay() {
1:e3154c3:         return this.jobLocation.getDelay();
1:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public String getCronEntry() {
1:e3154c3:         return this.jobLocation.getCronEntry();
1:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public String getNextExecutionTime() {
1:0484af1:         return JobSupport.getDateTime(this.jobLocation.getNextTime());
1:c7c8e53:     }
1:c7c8e53: 
1:d1446c3:     @Override
1:c7c8e53:     public String getStartTime() {
1:0484af1:         return JobSupport.getDateTime(getStart());
1:c7c8e53:     }
1:c7c8e53: 
1:74846bb:     @Override
1:74846bb:     public int getExecutionCount() {
1:74846bb:         return this.jobLocation.getRescheduledCount();
1:74846bb:     }
1:74846bb: 
1:74846bb:     @Override
1:74846bb:     public String toString() {
1:74846bb:         return "Job: " + getJobId();
1:74846bb:     }
1:c7c8e53: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:74846bb
/////////////////////////////////////////////////////////////////////////
1:     protected JobImpl(JobLocation location, ByteSequence bs) {
1:         this.jobLocation = location;
/////////////////////////////////////////////////////////////////////////
1:         return this.payload;
1:         return this.jobLocation.getPeriod();
1:         return this.jobLocation.getRepeat();
1:         return this.jobLocation.getStartTime();
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public int getExecutionCount() {
1:         return this.jobLocation.getRescheduledCount();
1:     }
1: 
1:     @Override
1:     public String toString() {
1:         return "Job: " + getJobId();
1:     }
commit:d1446c3
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1: 
1:     @Override
1:     @Override
1:     @Override
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:9a8f6e4
/////////////////////////////////////////////////////////////////////////
commit:0484af1
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.store.kahadb.scheduler;
1: 
1: import org.apache.activemq.broker.scheduler.Job;
1: import org.apache.activemq.broker.scheduler.JobSupport;
/////////////////////////////////////////////////////////////////////////
1:         return JobSupport.getDateTime(this.jobLocation.getNextTime());
1:         return JobSupport.getDateTime(getStart());
commit:1aab71b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.ByteSequence;
author:Robert Davies
-------------------------------------------------------------------------------
commit:e3154c3
/////////////////////////////////////////////////////////////////////////
1:     private final JobLocation jobLocation;
0:         this.jobLocation=location;
1:         return this.jobLocation.getJobId();
/////////////////////////////////////////////////////////////////////////
0:        return this.jobLocation.getPeriod();
0:        return this.jobLocation.getRepeat();
0:        return this.jobLocation.getStartTime();
1:     }
1:     
1:     public long getDelay() {
1:         return this.jobLocation.getDelay();
1:         return this.jobLocation.getCronEntry();
0:         return JobImpl.getDateTime(this.jobLocation.getNextTime());
commit:c7c8e53
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.activemq.broker.scheduler;
1: 
0: import java.text.DateFormat;
0: import java.text.SimpleDateFormat;
0: import java.util.Date;
0: import org.apache.kahadb.util.ByteSequence;
1: 
1: 
1: public class JobImpl implements Job {
0:     private final JobLocation location;
1:     private final byte[] payload;
1:     
0:     protected JobImpl(JobLocation location,ByteSequence bs) {
0:         this.location=location;
1:         this.payload = new byte[bs.getLength()];
1:         System.arraycopy(bs.getData(), bs.getOffset(), this.payload, 0, bs.getLength());
1:     }
1: 
1:     public String getJobId() {
0:         return this.location.getJobId();
1:     }
1: 
1:     public byte[] getPayload() {
0:        return this.payload;
1:     }
1: 
1:     public long getPeriod() {
0:        return this.location.getPeriod();
1:     }
1: 
1:     public int getRepeat() {
0:        return this.location.getRepeat();
1:     }
1: 
1:     public long getStart() {
0:        return this.location.getStart();
1:     }
1: 
1:     public String getCronEntry() {
0:         return this.location.getCronEntry();
1:     }
1:     
1:     
1: 
1:     public String getNextExecutionTime() {
0:         // TODO Auto-generated method stub
0:         return null;
1:     }
1: 
1:     public String getStartTime() {
0:         return JobImpl.getDateTime(getStart());
1:     }
1:     
0:    public static long getDataTime(String value) throws Exception {
0:         DateFormat dfm = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
1:      
0:         Date date = dfm.parse(value);
0:         return date.getTime();
1:     }
1:     
0:     public static String getDateTime(long value) {
0:         DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
0:         Date date = new Date(value);
0:         return dateFormat.format(date);
1:     }
1: 
1:     
1:     
1: 
1: }
============================================================================