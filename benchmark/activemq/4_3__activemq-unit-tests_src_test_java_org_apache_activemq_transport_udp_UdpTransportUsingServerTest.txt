1:4f446eb: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:4f446eb:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4f446eb:  *
1:4f446eb:  * Unless required by applicable law or agreed to in writing, software
1:4f446eb:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4f446eb:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4f446eb:  * See the License for the specific language governing permissions and
1:4f446eb:  * limitations under the License.
1:4f446eb:  */
1:4f446eb: package org.apache.activemq.transport.udp;
5:4f446eb: 
1:74a7a8b: import java.net.URI;
1:74a7a8b: 
1:72b382d: import org.apache.activemq.command.ConsumerInfo;
1:72b382d: import org.apache.activemq.command.Response;
1:4f446eb: import org.apache.activemq.transport.Transport;
1:4f446eb: import org.apache.activemq.transport.TransportFactory;
1:4f446eb: import org.apache.activemq.transport.TransportServer;
1:fc00993: import org.apache.activemq.transport.tcp.WireformatNegociationTest;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:4f446eb: 
1:4f446eb: /**
1:0bbc0ac:  * 
1:4f446eb:  * 
1:4f446eb:  */
1:4f446eb: public class UdpTransportUsingServerTest extends UdpTestSupport {
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(UdpTransportUsingServerTest.class);
1:4f446eb: 
1:68779c0:     protected int consumerPort = 9123;
1:4f446eb:     protected String producerURI = "udp://localhost:" + consumerPort;
1:4f446eb:     protected String serverURI = producerURI;
1:4f446eb: 
1:72b382d:     public void testRequestResponse() throws Exception {
1:72b382d:         ConsumerInfo expected = new ConsumerInfo();
1:72b382d:         expected.setSelector("Edam");
1:72b382d:         expected.setResponseRequired(true);
1:fc00993:         LOG.info("About to send: " + expected);
1:9ca56a0:         Response response = (Response) producer.request(expected, 2000);
1:72b382d: 
1:fc00993:         LOG.info("Received: " + response);
1:72b382d:         assertNotNull("Received a response", response);
1:72b382d:         assertTrue("Should not be an exception", !response.isException());
1:72b382d:     }
1:72b382d: 
1:4f446eb:     protected Transport createProducer() throws Exception {
1:fc00993:         LOG.info("Producer using URI: " + producerURI);
1:4446d55:         URI uri = new URI(producerURI);
1:4446d55:         return TransportFactory.connect(uri);
2:4f446eb:     }
1:4f446eb: 
1:4f446eb:     protected TransportServer createServer() throws Exception {
1:5d99c99:         return TransportFactory.bind(new URI(serverURI));
1:4f446eb:     }
1:72b382d: 
1:4f446eb:     protected Transport createConsumer() throws Exception {
1:4f446eb:         return null;
1:4f446eb:     }
1:4f446eb: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:5d99c99
/////////////////////////////////////////////////////////////////////////
1:         return TransportFactory.bind(new URI(serverURI));
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.tcp.WireformatNegociationTest;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
0:     private static final Log LOG = LogFactory.getLog(UdpTransportUsingServerTest.class);
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("About to send: " + expected);
1:         LOG.info("Received: " + response);
1:         LOG.info("Producer using URI: " + producerURI);
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:9ca56a0
/////////////////////////////////////////////////////////////////////////
1:         Response response = (Response) producer.request(expected, 2000);
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:93dc39b
/////////////////////////////////////////////////////////////////////////
0:         log.info("About to send: " + expected);
0:         log.info("Received: " + response);
0:         log.info("Producer using URI: " + producerURI);
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(UdpTransportUsingServerTest.class);
author:James Strachan
-------------------------------------------------------------------------------
commit:68779c0
/////////////////////////////////////////////////////////////////////////
1:     protected int consumerPort = 9123;
commit:72b382d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.ConsumerInfo;
1: import org.apache.activemq.command.Response;
/////////////////////////////////////////////////////////////////////////
1:     public void testRequestResponse() throws Exception {
1:         ConsumerInfo expected = new ConsumerInfo();
1:         expected.setSelector("Edam");
1:         expected.setResponseRequired(true);
0:         System.out.println("About to send: " + expected);
0:         Response response = producer.request(expected, 2000);
1: 
0:         System.out.println("Received: " + response);
1:         assertNotNull("Received a response", response);
1:         assertTrue("Should not be an exception", !response.isException());
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
commit:4446d55
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         URI uri = new URI(producerURI);
1:         return TransportFactory.connect(uri);
/////////////////////////////////////////////////////////////////////////
commit:4f446eb
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.udp;
1: 
0: import org.apache.activemq.openwire.OpenWireFormat;
1: import org.apache.activemq.transport.Transport;
1: import org.apache.activemq.transport.TransportFactory;
1: import org.apache.activemq.transport.TransportServer;
1: 
0: import java.net.URI;
1: 
1: /**
1:  * 
0:  * @version $Revision$
1:  */
1: public class UdpTransportUsingServerTest extends UdpTestSupport {
1: 
0:     protected int consumerPort = 8830;
1:     protected String producerURI = "udp://localhost:" + consumerPort;
1:     protected String serverURI = producerURI;
1: 
1:     protected Transport createProducer() throws Exception {
0:         System.out.println("Producer using URI: " + producerURI);
0:         return TransportFactory.connect(new URI(producerURI));
1:     }
1: 
1:     protected TransportServer createServer() throws Exception {
0:         return TransportFactory.bind("byBroker", new URI(serverURI));
1:     }
1:     
1:     protected Transport createConsumer() throws Exception {
1:         return null;
1:     }
1: 
0:     protected OpenWireFormat createWireFormat() {
0:         OpenWireFormat answer = new OpenWireFormat();
0:         answer.setCacheEnabled(false);
0:         answer.setSizePrefixDisabled(true);
0:         return answer;
1:     }
1: 
1: }
============================================================================