1:77a9ade: /**
1:77a9ade:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:77a9ade:  * contributor license agreements.  See the NOTICE file distributed with
1:77a9ade:  * this work for additional information regarding copyright ownership.
1:77a9ade:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:77a9ade:  * (the "License"); you may not use this file except in compliance with
1:77a9ade:  * the License.  You may obtain a copy of the License at
1:77a9ade:  *
1:77a9ade:  *      http://www.apache.org/licenses/LICENSE-2.0
1:77a9ade:  *
1:77a9ade:  * Unless required by applicable law or agreed to in writing, software
1:77a9ade:  * distributed under the License is distributed on an "AS IS" BASIS,
1:77a9ade:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:77a9ade:  * See the License for the specific language governing permissions and
1:77a9ade:  * limitations under the License.
1:77a9ade:  */
1:77a9ade: package org.apache.activemq.karaf.itest;
6:77a9ade: 
1:77a9ade: import static org.junit.Assert.assertTrue;
1:9743dbd: import static org.ops4j.pax.exam.karaf.options.KarafDistributionOption.editConfigurationFilePut;
1:9743dbd: import static org.ops4j.pax.exam.karaf.options.KarafDistributionOption.replaceConfigurationFile;
1:77a9ade: 
1:4dd3aa4: import java.io.File;
1:4dd3aa4: import java.util.Date;
1:4dd3aa4: import java.util.concurrent.TimeUnit;
1:4dd3aa4: 
1:4dd3aa4: import org.junit.Test;
1:4dd3aa4: import org.junit.runner.RunWith;
1:4dd3aa4: import org.ops4j.pax.exam.Configuration;
1:4dd3aa4: import org.ops4j.pax.exam.Option;
1:4dd3aa4: import org.ops4j.pax.exam.junit.PaxExam;
1:4dd3aa4: 
1:25f18ad: @RunWith(PaxExam.class)
1:50ea308: public class ActiveMQBrokerRuntimeConfigTest extends AbstractFeatureTest {
1:77a9ade: 
1:50ea308: 	@Configuration
1:50ea308: 	public static Option[] configure() {
1:50ea308: 		return new Option[] //
1:50ea308: 		{ //
1:50ea308: 				configure("activemq"), //
1:50ea308: 				editConfigurationFilePut("etc/org.apache.activemq.server-default.cfg", "config.check", "false"),
1:50ea308: 				replaceConfigurationFile("data/tmp/modified-config.xml",
1:50ea308: 						new File(RESOURCE_BASE + "activemq-runtime-config-mod.xml")),
1:50ea308: 				configureBrokerStart("activemq-runtime-config") };
1:50ea308: 	}
1:77a9ade: 
1:b70fc9a:     @Test(timeout = 2 * 60 * 1000)
1:77a9ade:     public void test() throws Throwable {
1:50ea308:     	assertBrokerStarted();
1:50ea308:         assertMemoryLimit("3145728");
1:77a9ade: 
1:77a9ade:         // ensure update will be reflected in OS fs modified window
1:77a9ade:         TimeUnit.SECONDS.sleep(4);
1:77a9ade: 
1:77a9ade:         // increase from 3mb to 4mb and check
1:77a9ade:         String karafDir = System.getProperty("karaf.base");
1:77a9ade:         File target = new File(karafDir + "/etc/activemq.xml");
1:77a9ade:         System.err.println("Modifying configuration at: " + target + "last mod: " + new Date(target.lastModified()));
1:77a9ade:         copyFile(new File(karafDir + "/data/tmp/modified-config.xml"), target);
1:77a9ade:         System.err.println("new mod at: " + new Date(target.lastModified()));
1:77a9ade: 
1:50ea308:         assertMemoryLimit("4194304");
1:50ea308:     }
1:50ea308: 
1:50ea308: 	private void assertMemoryLimit(String limit) throws Exception {
1:50ea308: 		withinReason(new Runnable() {
1:4dd3aa4:             public void run() {
1:50ea308:                 assertTrue("3MB limit", executeCommand("activemq:query").trim().contains("MemoryLimit = "+ limit));
5:77a9ade:             }
3:77a9ade:         });
1:50ea308: 	}
1:77a9ade: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:50ea308
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public class ActiveMQBrokerRuntimeConfigTest extends AbstractFeatureTest {
1: 	@Configuration
1: 	public static Option[] configure() {
1: 		return new Option[] //
1: 		{ //
1: 				configure("activemq"), //
1: 				editConfigurationFilePut("etc/org.apache.activemq.server-default.cfg", "config.check", "false"),
1: 				replaceConfigurationFile("data/tmp/modified-config.xml",
1: 						new File(RESOURCE_BASE + "activemq-runtime-config-mod.xml")),
1: 				configureBrokerStart("activemq-runtime-config") };
1: 	}
1:     	assertBrokerStarted();
1:         assertMemoryLimit("3145728");
/////////////////////////////////////////////////////////////////////////
1:         assertMemoryLimit("4194304");
1:     }
1: 
1: 	private void assertMemoryLimit(String limit) throws Exception {
1: 		withinReason(new Runnable() {
1:                 assertTrue("3MB limit", executeCommand("activemq:query").trim().contains("MemoryLimit = "+ limit));
1: 	}
commit:4dd3aa4
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: import java.util.Date;
1: import java.util.concurrent.TimeUnit;
1: 
1: import org.junit.Test;
1: import org.junit.runner.RunWith;
1: import org.ops4j.pax.exam.Configuration;
1: import org.ops4j.pax.exam.Option;
1: import org.ops4j.pax.exam.junit.PaxExam;
1: 
0:         return new Option[] //
0:             {
0:                 configure("activemq"),
0:              editConfigurationFilePut("etc/org.apache.activemq.server-default.cfg", "config.check", "false"),
0:              replaceConfigurationFile("data/tmp/modified-config.xml",
0:                                       new File(RESOURCE_BASE + "activemq-runtime-config-mod.xml")),
0:              configureBrokerStart("activemq-runtime-config")
0:             };
0:         withinReason(new Runnable() {
1:             public void run() {
/////////////////////////////////////////////////////////////////////////
0:         withinReason(new Runnable() {
0:             public void run() {
commit:b0884f8
/////////////////////////////////////////////////////////////////////////
author:gtully
-------------------------------------------------------------------------------
commit:25f18ad
/////////////////////////////////////////////////////////////////////////
0: import org.ops4j.pax.exam.Configuration;
0: import org.ops4j.pax.exam.junit.PaxExam;
/////////////////////////////////////////////////////////////////////////
1: @RunWith(PaxExam.class)
commit:9743dbd
/////////////////////////////////////////////////////////////////////////
1: import static org.ops4j.pax.exam.karaf.options.KarafDistributionOption.editConfigurationFilePut;
1: import static org.ops4j.pax.exam.karaf.options.KarafDistributionOption.replaceConfigurationFile;
commit:77a9ade
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.karaf.itest;
1: 
0: import java.io.File;
0: import java.util.Date;
0: import java.util.concurrent.Callable;
0: import java.util.concurrent.TimeUnit;
0: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.MavenUtils;
0: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.junit.Configuration;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
1: 
1: 
0: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertTrue;
0: import static org.openengsb.labs.paxexam.karaf.options.KarafDistributionOption.editConfigurationFilePut;
0: import static org.openengsb.labs.paxexam.karaf.options.KarafDistributionOption.replaceConfigurationFile;
1: 
0: @RunWith(JUnit4TestRunner.class)
0: public class ActiveMQBrokerRuntimeConfigTest extends AbstractJmsFeatureTest {
1: 
0:     @Configuration
0:     public static Option[] configure() {
0:         return append(editConfigurationFilePut("etc/org.apache.activemq.server-default.cfg", "config.check", "false"),
0:                 configureBrokerStart(
0:                         append(replaceConfigurationFile("data/tmp/modified-config.xml",
0:                                 new File(basedir + "/src/test/resources/org/apache/activemq/karaf/itest/activemq-runtime-config-mod.xml")),
0:                                 configure("activemq")), "activemq-runtime-config"));
1:     }
1: 
0:     @Test
1:     public void test() throws Throwable {
1: 
0:         withinReason(new Callable<Boolean>() {
0:             @Override
0:             public Boolean call() throws Exception {
0:                 assertEquals("brokerName = amq-broker", executeCommand("activemq:list").trim());
0:                 return true;
1:             }
1:         });
1: 
0:         withinReason(new Callable<Boolean>(){
0:             @Override
0:             public Boolean call() throws Exception {
0:                 assertTrue("3MB limit", executeCommand("activemq:query").trim().contains("MemoryLimit = 3145728"));
0:                 return true;
1:             }
1:         });
1: 
1:         // ensure update will be reflected in OS fs modified window
1:         TimeUnit.SECONDS.sleep(4);
1: 
1:         // increase from 3mb to 4mb and check
1:         String karafDir = System.getProperty("karaf.base");
1:         File target = new File(karafDir + "/etc/activemq.xml");
1:         System.err.println("Modifying configuration at: " + target + "last mod: " + new Date(target.lastModified()));
1:         copyFile(new File(karafDir + "/data/tmp/modified-config.xml"), target);
1:         System.err.println("new mod at: " + new Date(target.lastModified()));
1: 
0:         withinReason(new Callable<Boolean>() {
0:             @Override
0:             public Boolean call() throws Exception {
0:                 assertTrue("4MB limit", executeCommand("activemq:query").trim().contains("MemoryLimit = 4194304"));
0:                 return true;
1:             }
1:         });
1: 
1:     }
1: }
author:Kevin Earls
-------------------------------------------------------------------------------
commit:b70fc9a
/////////////////////////////////////////////////////////////////////////
1:     @Test(timeout = 2 * 60 * 1000)
============================================================================