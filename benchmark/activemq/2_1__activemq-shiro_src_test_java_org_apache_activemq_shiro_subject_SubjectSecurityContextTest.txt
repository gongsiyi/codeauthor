1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.subject;
2:f9451e5: 
1:f9451e5: import org.apache.activemq.broker.ConnectionContext;
1:f9451e5: import org.apache.activemq.command.ConnectionInfo;
1:f9451e5: import org.apache.shiro.env.DefaultEnvironment;
1:f9451e5: import org.junit.Before;
1:f9451e5: import org.junit.Test;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public class SubjectSecurityContextTest {
1:f9451e5: 
1:f9451e5:     SubjectSecurityContext ctx;
1:f9451e5: 
1:f9451e5:     @Before
1:f9451e5:     public void setUp() {
1:f9451e5:         SubjectConnectionReference conn = new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:f9451e5:                 new DefaultEnvironment(), new SubjectAdapter());
1:f9451e5:         ctx = new SubjectSecurityContext(conn);
2:f9451e5:     }
1:f9451e5: 
2:f9451e5:     @Test(expected=UnsupportedOperationException.class)
1:f9451e5:     public void testInOneOf() {
1:f9451e5:         ctx.isInOneOf(null);
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected=UnsupportedOperationException.class)
1:f9451e5:     public void testGetAuthorizedWriteDests() {
1:f9451e5:         ctx.getAuthorizedWriteDests();
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected=UnsupportedOperationException.class)
1:f9451e5:     public void testGetPrincipals() {
1:f9451e5:         ctx.getPrincipals();
1:f9451e5:     }
1:f9451e5: }
============================================================================
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:5f8a3df
/////////////////////////////////////////////////////////////////////////
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.subject;
1: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.ConnectionInfo;
1: import org.apache.shiro.env.DefaultEnvironment;
1: import org.junit.Before;
1: import org.junit.Test;
1: 
1: /**
1:  * @since 5.10.0
1:  */
1: public class SubjectSecurityContextTest {
1: 
1:     SubjectSecurityContext ctx;
1: 
1:     @Before
1:     public void setUp() {
1:         SubjectConnectionReference conn = new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:                 new DefaultEnvironment(), new SubjectAdapter());
1:         ctx = new SubjectSecurityContext(conn);
1:     }
1: 
1:     @Test(expected=UnsupportedOperationException.class)
1:     public void testInOneOf() {
1:         ctx.isInOneOf(null);
1:     }
1: 
1:     @Test(expected=UnsupportedOperationException.class)
0:     public void testGetAuthorizedReadDests() {
0:         ctx.getAuthorizedReadDests();
1:     }
1: 
1:     @Test(expected=UnsupportedOperationException.class)
1:     public void testGetAuthorizedWriteDests() {
1:         ctx.getAuthorizedWriteDests();
1:     }
1: 
1:     @Test(expected=UnsupportedOperationException.class)
1:     public void testGetPrincipals() {
1:         ctx.getPrincipals();
1:     }
1: }
============================================================================