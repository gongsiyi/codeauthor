1:3601e81: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
1:7f883f6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:7f883f6:  * Unless required by applicable law or agreed to in writing, software
1:7f883f6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7f883f6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7f883f6:  * See the License for the specific language governing permissions and
1:7f883f6:  * limitations under the License.
1:3601e81:  */
1:3601e81: package org.apache.activemq.broker.jmx;
1:3601e81: 
1:3601e81: import javax.management.openmbean.CompositeData;
1:3601e81: import javax.management.openmbean.OpenDataException;
1:3601e81: import javax.management.openmbean.TabularData;
1:74a7a8b: 
1:3601e81: /**
1:b0c2a40:  * 
1:3601e81:  */
1:74a7a8b: public interface DurableSubscriptionViewMBean extends SubscriptionViewMBean {
1:3601e81:     /**
1:07d4e8c:      * @return name of the durable subscription name
1:3601e81:      */
1:11579bb:     @MBeanInfo("The subscription name.")
1:fc00993:     String getSubscriptionName();
1:3601e81: 
1:3601e81:     /**
1:3601e81:      * Browse messages for this durable subscriber
1:7f883f6:      * 
1:3601e81:      * @return messages
1:3601e81:      * @throws OpenDataException
1:3601e81:      */
1:11579bb:     @MBeanInfo("Browse the composite data array of pending messages in this subscription")
1:fc00993:     CompositeData[] browse() throws OpenDataException;
1:3601e81: 
1:3601e81:     /**
1:3601e81:      * Browse messages for this durable subscriber
6:3601e81:      * 
1:3601e81:      * @return messages
1:3601e81:      * @throws OpenDataException
1:3601e81:      */
1:11579bb:     @MBeanInfo("Browse the tabular data of pending messages in this subscription")
1:fc00993:     TabularData browseAsTable() throws OpenDataException;
1:857cc8c: 
1:857cc8c:     /**
1:74a7a8b:      * Destroys the durable subscription so that messages will no longer be
1:74a7a8b:      * stored for this subscription
1:857cc8c:      */
1:11579bb:     @MBeanInfo("Destroy or delete this subscription")
1:fc00993:     void destroy() throws Exception;
1:4dde323:     
1:4dde323:     /**
1:4dde323:      * @return true if the message cursor has memory space available
1:4dde323:      * to page in more messages
1:4dde323:      */
1:11579bb:     @MBeanInfo("The subscription has space for more messages in memory")
1:4dde323:     public boolean doesCursorHaveSpace();
1:4dde323:     
1:4dde323:     /**
1:4dde323:      * @return true if the cursor has reached its memory limit for
1:4dde323:      * paged in messages
1:4dde323:      */
1:11579bb:     @MBeanInfo("The subscription cursor is full")
1:4dde323:     public boolean isCursorFull();
1:4dde323:     
1:4dde323:     /**
1:4dde323:      * @return true if the cursor has messages buffered to deliver
1:4dde323:      */
1:11579bb:     @MBeanInfo("The subscription cursor has messages in memory")
1:4dde323:     public boolean doesCursorHaveMessagesBuffered();
1:4dde323:     
1:4dde323:     /**
1:4dde323:      * @return the cursor memory usage in bytes
1:4dde323:      */
1:11579bb:     @MBeanInfo("The subscription cursor memory usage bytes")
1:4dde323:     public long getCursorMemoryUsage();
1:4dde323:     
1:4dde323:     /**
1:4dde323:      * @return the cursor memory usage as a percentage
1:4dde323:      */
1:11579bb:     @MBeanInfo("The subscription cursor memory usage %")
1:4dde323:     public int getCursorPercentUsage();
1:4dde323:     
1:4dde323:     /**
1:4dde323:      * @return the number of messages available to be paged in 
1:4dde323:      * by the cursor
1:4dde323:      */
1:11579bb:     @MBeanInfo("The subscription cursor size or message count")
1:4dde323:     public int cursorSize();
1:11579bb: 
1:11579bb:     /**
1:11579bb:      * Removes a message from the durable subscription.
1:11579bb:      *
1:11579bb:      * @param messageId
1:11579bb:      * @throws Exception
1:11579bb:      */
1:11579bb:     @MBeanInfo("Remove a message from the subscription by JMS message ID.")
1:11579bb:     public void removeMessage(@MBeanInfo("messageId") String messageId) throws Exception;
1:86cbdfd: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:gtully
-------------------------------------------------------------------------------
commit:11579bb
/////////////////////////////////////////////////////////////////////////
1:     @MBeanInfo("The subscription name.")
/////////////////////////////////////////////////////////////////////////
1:     @MBeanInfo("Browse the composite data array of pending messages in this subscription")
/////////////////////////////////////////////////////////////////////////
1:     @MBeanInfo("Browse the tabular data of pending messages in this subscription")
1:     @MBeanInfo("Destroy or delete this subscription")
1:     @MBeanInfo("The subscription has space for more messages in memory")
1:     @MBeanInfo("The subscription cursor is full")
1:     @MBeanInfo("The subscription cursor has messages in memory")
1:     @MBeanInfo("The subscription cursor memory usage bytes")
1:     @MBeanInfo("The subscription cursor memory usage %")
1:     @MBeanInfo("The subscription cursor size or message count")
1: 
1:     /**
1:      * Removes a message from the durable subscription.
1:      *
1:      * @param messageId
1:      * @throws Exception
1:      */
1:     @MBeanInfo("Remove a message from the subscription by JMS message ID.")
1:     public void removeMessage(@MBeanInfo("messageId") String messageId) throws Exception;
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:     String getSubscriptionName();
/////////////////////////////////////////////////////////////////////////
1:     CompositeData[] browse() throws OpenDataException;
/////////////////////////////////////////////////////////////////////////
1:     TabularData browseAsTable() throws OpenDataException;
1:     void destroy() throws Exception;
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: 
1: public interface DurableSubscriptionViewMBean extends SubscriptionViewMBean {
/////////////////////////////////////////////////////////////////////////
1:      * Destroys the durable subscription so that messages will no longer be
1:      * stored for this subscription
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
commit:07d4e8c
/////////////////////////////////////////////////////////////////////////
1:      * @return name of the durable subscription name
author:Robert Davies
-------------------------------------------------------------------------------
commit:4dde323
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * @return true if the message cursor has memory space available
1:      * to page in more messages
1:      */
1:     public boolean doesCursorHaveSpace();
1:     
1:     /**
1:      * @return true if the cursor has reached its memory limit for
1:      * paged in messages
1:      */
1:     public boolean isCursorFull();
1:     
1:     /**
1:      * @return true if the cursor has messages buffered to deliver
1:      */
1:     public boolean doesCursorHaveMessagesBuffered();
1:     
1:     /**
1:      * @return the cursor memory usage in bytes
1:      */
1:     public long getCursorMemoryUsage();
1:     
1:     /**
1:      * @return the cursor memory usage as a percentage
1:      */
1:     public int getCursorPercentUsage();
1:     
1:     /**
1:      * @return the number of messages available to be paged in 
1:      * by the cursor
1:      */
1:     public int cursorSize();
commit:3601e81
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * 
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
0:  * the License. You may obtain a copy of the License at
1:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * 
0:  * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
0:  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
0:  * specific language governing permissions and limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import javax.management.openmbean.CompositeData;
1: import javax.management.openmbean.OpenDataException;
1: import javax.management.openmbean.TabularData;
1: /**
0:  * @version $Revision: 1.5 $
1:  */
0: public interface DurableSubscriptionViewMBean extends SubscriptionViewMBean{
1:     /**
0:      * @return name of the durable consumer
1:      */
0:     public String getSubscriptionName();
1: 
1:     /**
1:      * Browse messages for this durable subscriber
1:      * 
1:      * @return messages
1:      * @throws OpenDataException
1:      */
0:     public CompositeData[] browse() throws OpenDataException;
1: 
1:     /**
1:      * Browse messages for this durable subscriber
1:      * 
1:      * @return messages
1:      * @throws OpenDataException
1:      */
0:     public TabularData browseAsTable() throws OpenDataException;
0: }
author:James Strachan
-------------------------------------------------------------------------------
commit:857cc8c
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.broker.ConnectionContext;
0: import org.apache.activemq.command.RemoveSubscriptionInfo;
1: 
/////////////////////////////////////////////////////////////////////////
0: 
1:     /**
0:      * Destroys the durable subscription so that messages will no longer be stored for this subscription
1:      */
0:     public void destroy() throws Exception;
============================================================================