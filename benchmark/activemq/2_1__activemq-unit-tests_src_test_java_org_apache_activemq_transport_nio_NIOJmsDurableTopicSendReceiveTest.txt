1:885c379: /**
1:885c379:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:885c379:  * contributor license agreements.  See the NOTICE file distributed with
1:885c379:  * this work for additional information regarding copyright ownership.
1:885c379:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:885c379:  * (the "License"); you may not use this file except in compliance with
1:885c379:  * the License.  You may obtain a copy of the License at
2:885c379:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:885c379:  *
1:885c379:  * Unless required by applicable law or agreed to in writing, software
1:885c379:  * distributed under the License is distributed on an "AS IS" BASIS,
1:885c379:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:885c379:  * See the License for the specific language governing permissions and
1:885c379:  * limitations under the License.
1:885c379:  */
1:885c379: package org.apache.activemq.transport.nio;
1:885c379: 
1:885c379: import org.apache.activemq.ActiveMQConnectionFactory;
1:74a7a8b: import org.apache.activemq.JmsDurableTopicSendReceiveTest;
1:885c379: import org.apache.activemq.broker.BrokerService;
1:885c379: 
1:885c379: public class NIOJmsDurableTopicSendReceiveTest extends JmsDurableTopicSendReceiveTest {
1:885c379:     protected BrokerService broker;
1:885c379: 
1:885c379:     protected void setUp() throws Exception {
1:885c379:         if (broker == null) {
1:885c379:             broker = createBroker();
1:885c379:             broker.start();
1:885c379:         }
1:885c379:         super.setUp();
1:885c379:     }
1:885c379: 
1:885c379:     protected void tearDown() throws Exception {
1:885c379:         super.tearDown();
1:885c379:         if (broker != null) {
1:885c379:             broker.stop();
1:885c379:         }
1:885c379:     }
1:885c379: 
1:885c379:     protected ActiveMQConnectionFactory createConnectionFactory() {
1:885c379:         ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(getBrokerURL());
1:885c379:         return connectionFactory;
1:885c379:     }
1:885c379: 
1:885c379:     protected String getBrokerURL() {
1:885c379:         return "nio://localhost:61616";
1:885c379:     }
1:885c379: 
1:885c379:     protected BrokerService createBroker() throws Exception {
1:885c379:         BrokerService answer = new BrokerService();
1:885c379:         answer.setPersistent(false);
1:885c379:         answer.addConnector(getBrokerURL());
1:885c379:         return answer;
1:885c379:     }
1:885c379: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.JmsDurableTopicSendReceiveTest;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:885c379
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.nio;
1: 
0: import org.apache.activemq.JmsDurableTopicSendReceiveTest;
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.broker.BrokerService;
1: 
1: public class NIOJmsDurableTopicSendReceiveTest extends JmsDurableTopicSendReceiveTest {
1:     protected BrokerService broker;
1: 
1:     protected void setUp() throws Exception {
1:         if (broker == null) {
1:             broker = createBroker();
1:             broker.start();
1:         }
1:         super.setUp();
1:     }
1: 
1:     protected void tearDown() throws Exception {
1:         super.tearDown();
1:         if (broker != null) {
1:             broker.stop();
1:         }
1:     }
1: 
1:     protected ActiveMQConnectionFactory createConnectionFactory() {
1:         ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(getBrokerURL());
1:         return connectionFactory;
1:     }
1: 
1:     protected String getBrokerURL() {
1:         return "nio://localhost:61616";
1:     }
1: 
1:     protected BrokerService createBroker() throws Exception {
1:         BrokerService answer = new BrokerService();
1:         answer.setPersistent(false);
1:         answer.addConnector(getBrokerURL());
1:         return answer;
1:     }
1: }
commit:8e8b820
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.transport.nio;
0: 
0: import org.apache.activemq.JmsDurableTopicSendReceiveTest;
0: import org.apache.activemq.ActiveMQConnectionFactory;
0: import org.apache.activemq.broker.BrokerService;
0: 
0: public class NIOJmsDurableTopicSendReceiveTest extends JmsDurableTopicSendReceiveTest {
0:     protected BrokerService broker;
0: 
0:     protected void setUp() throws Exception {
0:         if (broker == null) {
0:             broker = createBroker();
0:             broker.start();
0:         }
0:         super.setUp();
0:     }
0: 
0:     protected void tearDown() throws Exception {
0:         super.tearDown();
0:         if (broker != null) {
0:             broker.stop();
0:         }
0:     }
0: 
0:     protected ActiveMQConnectionFactory createConnectionFactory() {
0:         ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(getBrokerURL());
0:         return connectionFactory;
0:     }
0: 
0:     protected String getBrokerURL() {
0:         return "nio://localhost:61616";
0:     }
0: 
0:     protected BrokerService createBroker() throws Exception {
0:         BrokerService answer = new BrokerService();
0:         answer.setPersistent(false);
0:         answer.addConnector(getBrokerURL());
0:         return answer;
0:     }
0: }
============================================================================