1:80f7e38: /**
1:80f7e38:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:80f7e38:  * contributor license agreements.  See the NOTICE file distributed with
1:80f7e38:  * this work for additional information regarding copyright ownership.
1:80f7e38:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:80f7e38:  * (the "License"); you may not use this file except in compliance with
1:80f7e38:  * the License.  You may obtain a copy of the License at
1:80f7e38:  *
1:80f7e38:  *      http://www.apache.org/licenses/LICENSE-2.0
1:80f7e38:  *
1:80f7e38:  * Unless required by applicable law or agreed to in writing, software
1:80f7e38:  * distributed under the License is distributed on an "AS IS" BASIS,
1:80f7e38:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:80f7e38:  * See the License for the specific language governing permissions and
1:80f7e38:  * limitations under the License.
1:80f7e38:  */
1:80f7e38: package org.apache.activemq.broker.policy;
2:80f7e38: 
1:80f7e38: import org.apache.activemq.ActiveMQConnectionFactory;
1:80f7e38: import org.apache.activemq.RedeliveryPolicy;
1:80f7e38: 
1:80f7e38: public class NoRetryDeadLetterTest extends DeadLetterTest {
1:80f7e38: 
1:c7d559f:     @Override
1:80f7e38:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:80f7e38:         ActiveMQConnectionFactory connectionFactory = super.createConnectionFactory();
1:80f7e38:         RedeliveryPolicy redeliveryPolicy = new RedeliveryPolicy();
1:80f7e38:         redeliveryPolicy.setMaximumRedeliveries(0);
1:80f7e38:         connectionFactory.setRedeliveryPolicy(redeliveryPolicy);
1:80f7e38:         return connectionFactory;
1:80f7e38:     }
1:c7d559f: 
1:80f7e38: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:c7d559f
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1: 
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
0:     private static final Logger LOG = LoggerFactory.getLogger(NoRetryDeadLetterTest.class);
author:Gary Tully
-------------------------------------------------------------------------------
commit:80f7e38
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.policy;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.RedeliveryPolicy;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
1: public class NoRetryDeadLetterTest extends DeadLetterTest {
0:     private static final Log LOG = LogFactory.getLog(NoRetryDeadLetterTest.class);
1: 
1:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:         ActiveMQConnectionFactory connectionFactory = super.createConnectionFactory();
1:         RedeliveryPolicy redeliveryPolicy = new RedeliveryPolicy();
1:         redeliveryPolicy.setMaximumRedeliveries(0);
1:         connectionFactory.setRedeliveryPolicy(redeliveryPolicy);
1:         return connectionFactory;
1:     }
1:     
1: }
============================================================================