1:3b08860: /**
1:3b08860:  *
1:3b08860:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3b08860:  * contributor license agreements.  See the NOTICE file distributed with
1:3b08860:  * this work for additional information regarding copyright ownership.
1:3b08860:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3b08860:  * (the "License"); you may not use this file except in compliance with
1:3b08860:  * the License.  You may obtain a copy of the License at
1:3b08860:  *
1:3b08860:  * http://www.apache.org/licenses/LICENSE-2.0
1:3b08860:  *
1:3b08860:  * Unless required by applicable law or agreed to in writing, software
1:3b08860:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3b08860:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3b08860:  * See the License for the specific language governing permissions and
1:3b08860:  * limitations under the License.
1:3b08860:  */
1:3b08860: package org.apache.activemq.openwire.v5;
1:3b08860: 
1:3b08860: import java.io.DataInputStream;
1:3b08860: import java.io.DataOutputStream;
1:3b08860: import java.io.IOException;
1:3b08860: 
1:3b08860: import org.apache.activemq.openwire.*;
1:3b08860: import org.apache.activemq.command.*;
1:3b08860: 
1:3b08860: 
1:3b08860: /**
1:3b08860:  * Test case for the OpenWire marshalling for BrokerInfo
1:3b08860:  *
1:3b08860:  *
1:3b08860:  * NOTE!: This file is auto generated - do not modify!
1:3b08860:  *        if you need to make a change, please see the modify the groovy scripts in the
1:3b08860:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:3b08860:  *        this file.
1:0bbc0ac:  *
1:3b08860:  * 
1:3b08860:  */
1:3b08860: public class BrokerInfoTest extends BaseCommandTestSupport {
1:3b08860: 
1:3b08860: 
1:3b08860:     public static BrokerInfoTest SINGLETON = new BrokerInfoTest();
1:3b08860: 
1:3b08860:     public Object createObject() throws Exception {
1:3b08860:         BrokerInfo info = new BrokerInfo();
1:3b08860:         populateObject(info);
1:3b08860:         return info;
1:3b08860:     }
1:3b08860: 
1:3b08860:     protected void populateObject(Object object) throws Exception {
1:3b08860:         super.populateObject(object);
1:3b08860:         BrokerInfo info = (BrokerInfo) object;
1:3b08860: 
1:3b08860:         info.setBrokerId(createBrokerId("BrokerId:1"));
1:3b08860:         info.setBrokerURL("BrokerURL:2");
1:3b08860:         {
1:3b08860:             BrokerInfo value[] = new BrokerInfo[0];
1:3b08860:             for( int i=0; i < 0; i++ ) {
1:3b08860:                 value[i] = createBrokerInfo("PeerBrokerInfos:3");
1:3b08860:             }
1:3b08860:             info.setPeerBrokerInfos(value);
1:3b08860:         }
1:3b08860:         info.setBrokerName("BrokerName:4");
1:3b08860:         info.setSlaveBroker(true);
1:3b08860:         info.setMasterBroker(false);
1:3b08860:         info.setFaultTolerantConfiguration(true);
1:3b08860:         info.setDuplexConnection(false);
1:3b08860:         info.setNetworkConnection(true);
1:3b08860:         info.setConnectionId(1);
1:3b08860:         info.setBrokerUploadUrl("BrokerUploadUrl:5");
1:3b08860:         info.setNetworkProperties("NetworkProperties:6");
1:3b08860:     }
1:3b08860: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
author:Gary Tully
-------------------------------------------------------------------------------
commit:3b08860
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.openwire.v5;
1: 
1: import java.io.DataInputStream;
1: import java.io.DataOutputStream;
1: import java.io.IOException;
1: 
1: import org.apache.activemq.openwire.*;
1: import org.apache.activemq.command.*;
1: 
1: 
1: /**
1:  * Test case for the OpenWire marshalling for BrokerInfo
1:  *
1:  *
1:  * NOTE!: This file is auto generated - do not modify!
1:  *        if you need to make a change, please see the modify the groovy scripts in the
1:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:  *        this file.
1:  *
0:  * @version $Revision$
1:  */
1: public class BrokerInfoTest extends BaseCommandTestSupport {
1: 
1: 
1:     public static BrokerInfoTest SINGLETON = new BrokerInfoTest();
1: 
1:     public Object createObject() throws Exception {
1:         BrokerInfo info = new BrokerInfo();
1:         populateObject(info);
1:         return info;
1:     }
1: 
1:     protected void populateObject(Object object) throws Exception {
1:         super.populateObject(object);
1:         BrokerInfo info = (BrokerInfo) object;
1: 
1:         info.setBrokerId(createBrokerId("BrokerId:1"));
1:         info.setBrokerURL("BrokerURL:2");
1:         {
1:             BrokerInfo value[] = new BrokerInfo[0];
1:             for( int i=0; i < 0; i++ ) {
1:                 value[i] = createBrokerInfo("PeerBrokerInfos:3");
1:             }
1:             info.setPeerBrokerInfos(value);
1:         }
1:         info.setBrokerName("BrokerName:4");
1:         info.setSlaveBroker(true);
1:         info.setMasterBroker(false);
1:         info.setFaultTolerantConfiguration(true);
1:         info.setDuplexConnection(false);
1:         info.setNetworkConnection(true);
1:         info.setConnectionId(1);
1:         info.setBrokerUploadUrl("BrokerUploadUrl:5");
1:         info.setNetworkProperties("NetworkProperties:6");
1:     }
1: }
============================================================================