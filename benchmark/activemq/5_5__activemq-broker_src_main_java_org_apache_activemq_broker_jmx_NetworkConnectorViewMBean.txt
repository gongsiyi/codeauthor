1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.broker.jmx;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.Service;
1:d29ca2a: 
1:d29ca2a: public interface NetworkConnectorViewMBean extends Service {
1:f812e34: 
1:fc00993:     String getName();
1:f812e34: 
1:a95c6db:     int getMessageTTL();
1:a95c6db: 
1:a95c6db:     int getConsumerTTL();
1:f812e34: 
1:fc00993:     int getPrefetchSize();
1:f812e34: 
1:297eadf:     /**
1:297eadf:      * @return Advisory prefetch setting.
1:297eadf:      */
1:297eadf:     @MBeanInfo("The prefetch setting for the advisory message consumer.  If set to <= 0 then this setting is disabled "
1:297eadf:             + "and the prefetchSize attribute is used instead for configuring the advisory consumer.")
1:297eadf:     int getAdvisoryPrefetchSize();
1:297eadf: 
1:fc00993:     String getUserName();
1:f812e34: 
1:fc00993:     boolean isBridgeTempDestinations();
1:f812e34: 
1:fc00993:     boolean isConduitSubscriptions();
1:f812e34: 
1:fc00993:     boolean isDecreaseNetworkConsumerPriority();
1:f812e34: 
1:fc00993:     boolean isDispatchAsync();
1:f812e34: 
1:fc00993:     boolean isDynamicOnly();
1:f812e34: 
1:082bbf0:     boolean isDuplex();
1:f812e34: 
1:1898f9a:     boolean isSuppressDuplicateQueueSubscriptions();
1:f812e34: 
1:1898f9a:     boolean isSuppressDuplicateTopicSubscriptions();
1:f812e34: 
1:fc00993:     void setBridgeTempDestinations(boolean bridgeTempDestinations);
1:f812e34: 
1:fc00993:     void setConduitSubscriptions(boolean conduitSubscriptions);
1:f812e34: 
1:fc00993:     void setDispatchAsync(boolean dispatchAsync);
1:f812e34: 
1:fc00993:     void setDynamicOnly(boolean dynamicOnly);
1:f812e34: 
1:a95c6db:     void setMessageTTL(int messageTTL);
1:a95c6db: 
1:a95c6db:     void setConsumerTTL(int consumerTTL);
1:f812e34: 
1:fc00993:     void setPassword(String password);
1:ec6e6a5: 
1:fc00993:     void setPrefetchSize(int prefetchSize);
1:d29ca2a: 
1:297eadf:     void setAdvisoryPrefetchSize(int advisoryPrefetchSize);
1:297eadf: 
1:fc00993:     void setUserName(String userName);
1:1898f9a: 
1:fc00993:     String getPassword();
1:1898f9a: 
1:fc00993:     void setDecreaseNetworkConsumerPriority(boolean decreaseNetworkConsumerPriority);
1:1898f9a: 
1:1898f9a:     void setSuppressDuplicateQueueSubscriptions(boolean val);
1:1898f9a: 
1:1898f9a:     void setSuppressDuplicateTopicSubscriptions(boolean val);
1:1898f9a: 
1:86cbdfd: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:297eadf
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * @return Advisory prefetch setting.
1:      */
1:     @MBeanInfo("The prefetch setting for the advisory message consumer.  If set to <= 0 then this setting is disabled "
1:             + "and the prefetchSize attribute is used instead for configuring the advisory consumer.")
1:     int getAdvisoryPrefetchSize();
1: 
/////////////////////////////////////////////////////////////////////////
1:     void setAdvisoryPrefetchSize(int advisoryPrefetchSize);
1: 
author:Gary Tully
-------------------------------------------------------------------------------
commit:a95c6db
/////////////////////////////////////////////////////////////////////////
1:     int getMessageTTL();
1: 
1:     int getConsumerTTL();
/////////////////////////////////////////////////////////////////////////
1:     void setMessageTTL(int messageTTL);
1: 
1:     void setConsumerTTL(int consumerTTL);
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:     String getName();
0:     int getNetworkTTL();
1:     int getPrefetchSize();
1:     String getUserName();
1:     boolean isBridgeTempDestinations();
1:     boolean isConduitSubscriptions();
1:     boolean isDecreaseNetworkConsumerPriority();
1:     boolean isDispatchAsync();
1:     boolean isDynamicOnly();
1:     void setBridgeTempDestinations(boolean bridgeTempDestinations);
1:     void setConduitSubscriptions(boolean conduitSubscriptions);
1:     void setDispatchAsync(boolean dispatchAsync);
1:     void setDynamicOnly(boolean dynamicOnly);
0:     void setNetworkTTL(int networkTTL);
1:     void setPassword(String password);
1:     void setPrefetchSize(int prefetchSize);
1:     void setUserName(String userName);
1:     String getPassword();
1:     void setDecreaseNetworkConsumerPriority(boolean decreaseNetworkConsumerPriority);
commit:f812e34
/////////////////////////////////////////////////////////////////////////
0:     public String getName();
1: 
0:     public int getNetworkTTL();
1: 
0:     public int getPrefetchSize();
1: 
0:     public String getUserName();
1: 
0:     public boolean isBridgeTempDestinations();
1: 
0:     public boolean isConduitSubscriptions();
1: 
0:     public boolean isDecreaseNetworkConsumerPriority();
1: 
0:     public boolean isDispatchAsync();
1: 
0:     public boolean isDynamicOnly();
1: 
0:     public void setBridgeTempDestinations(boolean bridgeTempDestinations);
1: 
0:     public void setConduitSubscriptions(boolean conduitSubscriptions);
1: 
0:     public void setDispatchAsync(boolean dispatchAsync);
1: 
0:     public void setDynamicOnly(boolean dynamicOnly);
1: 
0:     public void setNetworkTTL(int networkTTL);
1: 
0:     public void setPassword(String password);
1: 
0:     public void setPrefetchSize(int prefetchSize);
1: 
0:     public void setUserName(String userName);
1: 
0:     public String getPassword();
1: 
0:     public void setDecreaseNetworkConsumerPriority(boolean decreaseNetworkConsumerPriority);
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:ec6e6a5
/////////////////////////////////////////////////////////////////////////
0:       public String getName();
0:       public int getNetworkTTL();
0:       public int getPrefetchSize();
0:       public String getUserName();
0:       public boolean isBridgeTempDestinations();
0:       public boolean isConduitSubscriptions();
0:       public boolean isDecreaseNetworkConsumerPriority();
0:       public boolean isDispatchAsync();
0:       public boolean isDynamicOnly();
0:       public void setBridgeTempDestinations(boolean bridgeTempDestinations);
0:       public void setConduitSubscriptions(boolean conduitSubscriptions);
0:       public void setDispatchAsync(boolean dispatchAsync);
0:       public void setDynamicOnly(boolean dynamicOnly);
0:       public void setNetworkTTL(int networkTTL);
0:       public void setPassword(String password);
0:       public void setPrefetchSize(int prefetchSize);
0:       public void setUserName(String userName);
0:       public String getPassword();
0:       public void setDecreaseNetworkConsumerPriority(boolean decreaseNetworkConsumerPriority);
1: 
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import org.apache.activemq.Service;
1: 
1: public interface NetworkConnectorViewMBean extends Service {
1: 
0: }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:1898f9a
/////////////////////////////////////////////////////////////////////////
1: 
1:     boolean isSuppressDuplicateQueueSubscriptions();
1: 
1:     boolean isSuppressDuplicateTopicSubscriptions();
1: 
/////////////////////////////////////////////////////////////////////////
1:     void setSuppressDuplicateQueueSubscriptions(boolean val);
1: 
1:     void setSuppressDuplicateTopicSubscriptions(boolean val);
1: 
author:Robert Davies
-------------------------------------------------------------------------------
commit:082bbf0
/////////////////////////////////////////////////////////////////////////
0:     
1:     boolean isDuplex();
============================================================================