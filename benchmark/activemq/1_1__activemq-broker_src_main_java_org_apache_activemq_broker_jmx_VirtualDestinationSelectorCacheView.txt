1:61da1fa: /**
1:61da1fa:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:61da1fa:  * contributor license agreements.  See the NOTICE file distributed with
1:61da1fa:  * this work for additional information regarding copyright ownership.
1:61da1fa:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:61da1fa:  * (the "License"); you may not use this file except in compliance with
1:61da1fa:  * the License.  You may obtain a copy of the License at
1:61da1fa:  *
1:61da1fa:  *      http://www.apache.org/licenses/LICENSE-2.0
1:61da1fa:  *
1:61da1fa:  * Unless required by applicable law or agreed to in writing, software
1:61da1fa:  * distributed under the License is distributed on an "AS IS" BASIS,
1:61da1fa:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:61da1fa:  * See the License for the specific language governing permissions and
1:61da1fa:  * limitations under the License.
1:61da1fa:  */
1:61da1fa: package org.apache.activemq.broker.jmx;
1:61da1fa: 
1:61da1fa: import org.apache.activemq.plugin.SubQueueSelectorCacheBroker;
1:61da1fa: 
1:61da1fa: import java.util.Set;
1:61da1fa: 
1:61da1fa: /**
1:61da1fa:  * Created by ceposta
1:61da1fa:  * <a href="http://christianposta.com/blog>http://christianposta.com/blog</a>.
1:61da1fa:  */
1:61da1fa: public class VirtualDestinationSelectorCacheView implements VirtualDestinationSelectorCacheViewMBean {
1:61da1fa: 
1:61da1fa:     private final SubQueueSelectorCacheBroker selectorCacheBroker;
1:61da1fa: 
1:61da1fa:     public VirtualDestinationSelectorCacheView(SubQueueSelectorCacheBroker selectorCacheBroker) {
1:61da1fa:         this.selectorCacheBroker = selectorCacheBroker;
1:61da1fa:     }
1:61da1fa: 
1:61da1fa:     @Override
1:61da1fa:     public Set<String> selectorsForDestination(String destinationName) {
1:61da1fa:         return selectorCacheBroker.getSelectorsForDestination(destinationName);
1:61da1fa:     }
1:61da1fa: 
1:61da1fa:     @Override
1:61da1fa:     public boolean deleteSelectorForDestination(String destinationName, String selector) {
1:61da1fa:         return selectorCacheBroker.deleteSelectorForDestination(destinationName, selector);
1:61da1fa:     }
1:61da1fa: 
1:61da1fa:     @Override
1:61da1fa:     public boolean deleteAllSelectorsForDestination(String destinationName) {
1:61da1fa:         return selectorCacheBroker.deleteAllSelectorsForDestination(destinationName);
1:61da1fa:     }
1:61da1fa: }
============================================================================
author:Christian Posta
-------------------------------------------------------------------------------
commit:61da1fa
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import org.apache.activemq.plugin.SubQueueSelectorCacheBroker;
1: 
1: import java.util.Set;
1: 
1: /**
1:  * Created by ceposta
1:  * <a href="http://christianposta.com/blog>http://christianposta.com/blog</a>.
1:  */
1: public class VirtualDestinationSelectorCacheView implements VirtualDestinationSelectorCacheViewMBean {
1: 
1:     private final SubQueueSelectorCacheBroker selectorCacheBroker;
1: 
1:     public VirtualDestinationSelectorCacheView(SubQueueSelectorCacheBroker selectorCacheBroker) {
1:         this.selectorCacheBroker = selectorCacheBroker;
1:     }
1: 
1:     @Override
1:     public Set<String> selectorsForDestination(String destinationName) {
1:         return selectorCacheBroker.getSelectorsForDestination(destinationName);
1:     }
1: 
1:     @Override
1:     public boolean deleteSelectorForDestination(String destinationName, String selector) {
1:         return selectorCacheBroker.deleteSelectorForDestination(destinationName, selector);
1:     }
1: 
1:     @Override
1:     public boolean deleteAllSelectorsForDestination(String destinationName) {
1:         return selectorCacheBroker.deleteAllSelectorsForDestination(destinationName);
1:     }
1: }
============================================================================