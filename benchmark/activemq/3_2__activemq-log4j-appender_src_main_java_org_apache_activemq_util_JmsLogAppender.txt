1:d90b781: /**
1:d90b781:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d90b781:  * contributor license agreements.  See the NOTICE file distributed with
1:d90b781:  * this work for additional information regarding copyright ownership.
1:d90b781:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d90b781:  * (the "License"); you may not use this file except in compliance with
1:d90b781:  * the License.  You may obtain a copy of the License at
3:d90b781:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d90b781:  *
1:d90b781:  * Unless required by applicable law or agreed to in writing, software
1:d90b781:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d90b781:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d90b781:  * See the License for the specific language governing permissions and
1:d90b781:  * limitations under the License.
1:d90b781:  */
1:d90b781: package org.apache.activemq.util;
3:d90b781: 
1:d90b781: import java.net.URISyntaxException;
1:d90b781: import javax.jms.Connection;
1:d90b781: import javax.jms.JMSException;
1:d90b781: 
1:540dd5c: import org.apache.activemq.ActiveMQConnection;
1:540dd5c: 
1:d90b781: /**
1:540dd5c:  * A JMS 1.1 log4j appender which uses ActiveMQ by default and does not require
1:540dd5c:  * any JNDI configurations
1:0bbc0ac:  * 
1:540dd5c:  * 
1:d90b781:  */
1:d90b781: public class JmsLogAppender extends JmsLogAppenderSupport {
1:d90b781:     private String uri = "tcp://localhost:61616";
1:d90b781:     private String userName;
1:d90b781:     private String password;
1:d90b781: 
1:d90b781:     public JmsLogAppender() {
2:d90b781:     }
1:d90b781: 
1:d90b781:     public String getUri() {
1:d90b781:         return uri;
1:d90b781:     }
1:d90b781: 
1:d90b781:     public void setUri(String uri) {
1:d90b781:         this.uri = uri;
1:d90b781:     }
1:d90b781: 
1:d90b781:     public String getUserName() {
1:d90b781:         return userName;
1:d90b781:     }
1:d90b781: 
1:d90b781:     public void setUserName(String userName) {
1:d90b781:         this.userName = userName;
1:d90b781:     }
1:d90b781: 
1:d90b781:     public String getPassword() {
1:d90b781:         return password;
1:d90b781:     }
1:d90b781: 
1:d90b781:     public void setPassword(String password) {
1:d90b781:         this.password = password;
1:d90b781:     }
1:d90b781: 
1:d90b781:     protected Connection createConnection() throws JMSException {
1:d90b781:         if (userName != null) {
1:d90b781:             try {
1:d90b781:                 return ActiveMQConnection.makeConnection(userName, password, uri);
1:d90b781:             } catch (URISyntaxException e) {
1:540dd5c:                 throw new JMSException("Unable to connect to a broker using " + "userName: \'" + userName + "\' password \'" + password + "\' uri \'" + uri + "\' :: error - " + e.getMessage());
1:d90b781:             }
1:540dd5c:         } else {
1:d90b781:             try {
1:d90b781:                 return ActiveMQConnection.makeConnection(uri);
1:d90b781:             } catch (URISyntaxException e) {
1:540dd5c:                 throw new JMSException("Unable to connect to a broker using " + "uri \'" + uri + "\' :: error - " + e.getMessage());
1:d90b781:             }
1:d90b781:         }
1:d90b781:     }
1:d90b781: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.ActiveMQConnection;
1: 
1:  * A JMS 1.1 log4j appender which uses ActiveMQ by default and does not require
1:  * any JNDI configurations
1:  * 
/////////////////////////////////////////////////////////////////////////
1:                 throw new JMSException("Unable to connect to a broker using " + "userName: \'" + userName + "\' password \'" + password + "\' uri \'" + uri + "\' :: error - " + e.getMessage());
1:         } else {
1:                 throw new JMSException("Unable to connect to a broker using " + "uri \'" + uri + "\' :: error - " + e.getMessage());
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:3b4aadc
/////////////////////////////////////////////////////////////////////////
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:d90b781
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
1: import java.net.URISyntaxException;
1: 
0: import org.apache.activemq.ActiveMQConnection;
1: 
1: import javax.jms.Connection;
1: import javax.jms.JMSException;
1: 
1: /**
0:  * A JMS 1.1 log4j appender which uses ActiveMQ by default and does not require any JNDI
0:  * configurations
1:  *
0:  * @version $Revision$
1:  */
1: public class JmsLogAppender extends JmsLogAppenderSupport {
1:     private String uri = "tcp://localhost:61616";
1:     private String userName;
1:     private String password;
1: 
1:     public JmsLogAppender() {
1:     }
1: 
1:     public String getUri() {
1:         return uri;
1:     }
1: 
1:     public void setUri(String uri) {
1:         this.uri = uri;
1:     }
1: 
1:     public String getUserName() {
1:         return userName;
1:     }
1: 
1:     public void setUserName(String userName) {
1:         this.userName = userName;
1:     }
1: 
1:     public String getPassword() {
1:         return password;
1:     }
1: 
1:     public void setPassword(String password) {
1:         this.password = password;
1:     }
1: 
1:     protected Connection createConnection() throws JMSException {
1:         if (userName != null) {
1:             try {
1:                 return ActiveMQConnection.makeConnection(userName, password, uri);
1:             } catch (URISyntaxException e) {
0:                 throw new JMSException("Unable to connect to a broker using " + 
0:                         "userName: \'" + userName + 
0:                         "\' password \'" + password + 
0:                         "\' uri \'" + uri + "\' :: error - " +
0:                         e.getMessage());
1:             }
1:         }
0:         else {
1:             try {
1:                 return ActiveMQConnection.makeConnection(uri);
1:             } catch (URISyntaxException e) {
0:                 throw new JMSException("Unable to connect to a broker using " + 
0:                         "uri \'" + uri + "\' :: error - " +
0:                         e.getMessage());
1:             }
1:         }
1:     }
1: }
============================================================================