1:a107823: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a107823:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a107823:  *
1:a107823:  * Unless required by applicable law or agreed to in writing, software
1:a107823:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a107823:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a107823:  * See the License for the specific language governing permissions and
1:a107823:  * limitations under the License.
1:a107823:  */
1:a107823: package org.apache.activemq.jaas;
2:a107823: 
1:a107823: import java.security.Principal;
1:a107823: 
1:a107823: /**
1:a107823:  * @version $Rev: $ $Date: $
1:a107823:  */
1:a107823: public class UserPrincipal implements Principal {
1:a107823: 
1:a107823:     private final String name;
1:a107823:     private transient int hash;
1:a107823: 
1:a107823:     public UserPrincipal(String name) {
1:540dd5c:         if (name == null) {
1:540dd5c:             throw new IllegalArgumentException("name cannot be null");
1:540dd5c:         }
1:a107823:         this.name = name;
1:a107823:     }
1:a107823: 
1:1667d80:     @Override
1:a107823:     public String getName() {
1:a107823:         return name;
1:a107823:     }
1:a107823: 
1:1667d80:     @Override
1:a107823:     public boolean equals(Object o) {
1:540dd5c:         if (this == o) {
1:540dd5c:             return true;
1:540dd5c:         }
1:540dd5c:         if (o == null || getClass() != o.getClass()) {
1:540dd5c:             return false;
1:540dd5c:         }
1:a107823: 
1:540dd5c:         final UserPrincipal that = (UserPrincipal)o;
1:a107823: 
1:540dd5c:         if (!name.equals(that.name)) {
1:540dd5c:             return false;
1:540dd5c:         }
1:a107823: 
1:a107823:         return true;
1:a107823:     }
1:a107823: 
1:1667d80:     @Override
1:a107823:     public int hashCode() {
1:a107823:         if (hash == 0) {
1:a107823:             hash = name.hashCode();
1:a107823:         }
1:a107823:         return hash;
1:a107823:     }
1:a107823: 
1:1667d80:     @Override
1:a107823:     public String toString() {
1:a107823:         return name;
1:a107823:     }
1:a107823: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:1667d80
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         if (name == null) {
1:             throw new IllegalArgumentException("name cannot be null");
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (this == o) {
1:             return true;
1:         }
1:         if (o == null || getClass() != o.getClass()) {
1:             return false;
1:         }
1:         final UserPrincipal that = (UserPrincipal)o;
1:         if (!name.equals(that.name)) {
1:             return false;
1:         }
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:a107823
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.jaas;
1: 
1: import java.security.Principal;
1: 
1: 
1: /**
1:  * @version $Rev: $ $Date: $
1:  */
1: public class UserPrincipal implements Principal {
1: 
1:     private final String name;
1:     private transient int hash;
1: 
1:     public UserPrincipal(String name) {
0:         if (name == null) throw new IllegalArgumentException("name cannot be null");
1:         this.name = name;
1:     }
1: 
1:     public String getName() {
1:         return name;
1:     }
1: 
1:     public boolean equals(Object o) {
0:         if (this == o) return true;
0:         if (o == null || getClass() != o.getClass()) return false;
1: 
0:         final UserPrincipal that = (UserPrincipal) o;
1: 
0:         if (!name.equals(that.name)) return false;
1: 
1:         return true;
1:     }
1: 
1:     public int hashCode() {
1:         if (hash == 0) {
1:             hash = name.hashCode();
1:         }
1:         return hash;
1:     }
1: 
1:     public String toString() {
1:         return name;
1:     }
1: }
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:2d0361b
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.jaas;
author:Jonas B. Lim
-------------------------------------------------------------------------------
commit:92a698f
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2004 The Apache Software Foundation
author:James Strachan
-------------------------------------------------------------------------------
commit:40a7d3b
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * <a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a>
0:  *
0:  * Copyright 2005 (C) LogicBlaze, Inc. http://www.logicblaze.com
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.activemq.jaas;
0: 
0: import java.security.Principal;
0: 
0: 
0: /**
0:  * @version $Rev: $ $Date: $
0:  */
0: public class UserPrincipal implements Principal {
0: 
0:     private final String name;
0:     private transient int hash;
0: 
0:     public UserPrincipal(String name) {
0:         if (name == null) throw new IllegalArgumentException("name cannot be null");
0:         this.name = name;
0:     }
0: 
0:     public String getName() {
0:         return name;
0:     }
0: 
0:     public boolean equals(Object o) {
0:         if (this == o) return true;
0:         if (o == null || getClass() != o.getClass()) return false;
0: 
0:         final UserPrincipal that = (UserPrincipal) o;
0: 
0:         if (!name.equals(that.name)) return false;
0: 
0:         return true;
0:     }
0: 
0:     public int hashCode() {
0:         if (hash == 0) {
0:             hash = name.hashCode();
0:         }
0:         return hash;
0:     }
0: 
0:     public String toString() {
0:         return name;
0:     }
0: }
============================================================================