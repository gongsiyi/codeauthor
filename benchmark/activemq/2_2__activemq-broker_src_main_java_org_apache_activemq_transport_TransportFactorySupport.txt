1:fc519e1: /**
1:fc519e1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:fc519e1:  * contributor license agreements.  See the NOTICE file distributed with
1:fc519e1:  * this work for additional information regarding copyright ownership.
1:fc519e1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:fc519e1:  * (the "License"); you may not use this file except in compliance with
1:fc519e1:  * the License.  You may obtain a copy of the License at
1:fc519e1:  *
1:fc519e1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:fc519e1:  *
1:fc519e1:  * Unless required by applicable law or agreed to in writing, software
1:fc519e1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:fc519e1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc519e1:  * See the License for the specific language governing permissions and
1:fc519e1:  * limitations under the License.
1:fc519e1:  */
1:9a8f6e4: package org.apache.activemq.transport;
1:9a8f6e4: 
1:9a8f6e4: import org.apache.activemq.broker.BrokerService;
1:9a8f6e4: import org.apache.activemq.broker.BrokerServiceAware;
1:9a8f6e4: import org.apache.activemq.broker.SslContext;
1:9a8f6e4: 
1:9a8f6e4: import java.io.IOException;
1:9a8f6e4: import java.net.URI;
1:9a8f6e4: 
1:9a8f6e4: /**
1:9a8f6e4:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:9a8f6e4:  */
1:9a8f6e4: public class TransportFactorySupport {
1:9a8f6e4: 
1:9a8f6e4:     public static TransportServer bind(BrokerService brokerService, URI location) throws IOException {
1:9a8f6e4:         TransportFactory tf = TransportFactory.findTransportFactory(location);
1:9a8f6e4:         if( brokerService!=null && tf instanceof BrokerServiceAware) {
1:9a8f6e4:             ((BrokerServiceAware)tf).setBrokerService(brokerService);
1:9a8f6e4:         }
1:9a8f6e4:         try {
1:9a8f6e4:             if( brokerService!=null ) {
1:9a8f6e4:                 SslContext.setCurrentSslContext(brokerService.getSslContext());
1:9a8f6e4:             }
1:9a8f6e4:             return tf.doBind(location);
1:9a8f6e4:         } finally {
1:9a8f6e4:             SslContext.setCurrentSslContext(null);
1:9a8f6e4:         }
1:9a8f6e4:     }
1:9a8f6e4: 
1:9a8f6e4: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:fc519e1
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:9a8f6e4
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport;
1: 
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.BrokerServiceAware;
1: import org.apache.activemq.broker.SslContext;
1: 
1: import java.io.IOException;
1: import java.net.URI;
1: 
1: /**
1:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:  */
1: public class TransportFactorySupport {
1: 
1:     public static TransportServer bind(BrokerService brokerService, URI location) throws IOException {
1:         TransportFactory tf = TransportFactory.findTransportFactory(location);
1:         if( brokerService!=null && tf instanceof BrokerServiceAware) {
1:             ((BrokerServiceAware)tf).setBrokerService(brokerService);
1:         }
1:         try {
1:             if( brokerService!=null ) {
1:                 SslContext.setCurrentSslContext(brokerService.getSslContext());
1:             }
1:             return tf.doBind(location);
1:         } finally {
1:             SslContext.setCurrentSslContext(null);
1:         }
1:     }
1: 
1: }
============================================================================