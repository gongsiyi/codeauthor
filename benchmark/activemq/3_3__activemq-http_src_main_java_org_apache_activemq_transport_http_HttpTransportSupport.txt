1:40a7d3b: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
2:5be5a62:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5be5a62:  *
1:40a7d3b:  * Unless required by applicable law or agreed to in writing, software
1:5be5a62:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5be5a62:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5be5a62:  * See the License for the specific language governing permissions and
1:5be5a62:  * limitations under the License.
1:5be5a62:  */
1:8abcfd1: package org.apache.activemq.transport.http;
2:40a7d3b: 
1:540dd5c: import java.net.URI;
1:540dd5c: 
1:8abcfd1: import org.apache.activemq.transport.TransportThreadSupport;
1:8abcfd1: import org.apache.activemq.transport.util.TextWireFormat;
1:40a7d3b: 
1:40a7d3b: /**
1:40a7d3b:  * A useful base class for HTTP Transport implementations.
1:b0c2a40:  *
1:5be5a62:  *
1:40a7d3b:  */
1:40a7d3b: public abstract class HttpTransportSupport extends TransportThreadSupport {
1:40a7d3b:     private TextWireFormat textWireFormat;
1:40a7d3b:     private URI remoteUrl;
1:63b2d68:     private String proxyHost;
1:63b2d68:     private int proxyPort = 8080;
1:8a3bdd9:     private String proxyUser;
1:8a3bdd9:     private String proxyPassword;
1:40a7d3b: 
1:40a7d3b:     public HttpTransportSupport(TextWireFormat textWireFormat, URI remoteUrl) {
1:40a7d3b:         this.textWireFormat = textWireFormat;
1:40a7d3b:         this.remoteUrl = remoteUrl;
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     public String toString() {
1:40a7d3b:         return "HTTP Reader " + getRemoteUrl();
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     // Properties
1:40a7d3b:     // -------------------------------------------------------------------------
1:140daf4:     public String getRemoteAddress() {
1:140daf4:         return remoteUrl.toString();
1:140daf4:     }
1:140daf4: 
1:40a7d3b:     public URI getRemoteUrl() {
1:40a7d3b:         return remoteUrl;
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     public TextWireFormat getTextWireFormat() {
1:40a7d3b:         return textWireFormat;
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     public void setTextWireFormat(TextWireFormat textWireFormat) {
1:40a7d3b:         this.textWireFormat = textWireFormat;
1:40a7d3b:     }
1:63b2d68: 
1:63b2d68:     public String getProxyHost() {
1:63b2d68:         return proxyHost;
1:63b2d68:     }
1:63b2d68: 
1:63b2d68:     public void setProxyHost(String proxyHost) {
1:63b2d68:         this.proxyHost = proxyHost;
1:63b2d68:     }
1:63b2d68: 
1:63b2d68:     public int getProxyPort() {
1:63b2d68:         return proxyPort;
1:63b2d68:     }
1:63b2d68: 
1:63b2d68:     public void setProxyPort(int proxyPort) {
1:63b2d68:         this.proxyPort = proxyPort;
1:63b2d68:     }
1:8a3bdd9: 
1:8a3bdd9:     public String getProxyUser() {
1:8a3bdd9:        return proxyUser;
1:8a3bdd9:     }
1:8a3bdd9: 
1:8a3bdd9:     public void setProxyUser(String proxyUser) {
1:8a3bdd9:        this.proxyUser = proxyUser;
1:8a3bdd9:     }
1:8a3bdd9: 
1:8a3bdd9:     public String getProxyPassword() {
1:8a3bdd9:        return proxyPassword;
1:8a3bdd9:     }
1:8a3bdd9: 
1:8a3bdd9:     public void setProxyPassword(String proxyPassword) {
1:8a3bdd9:        this.proxyPassword = proxyPassword;
1:8a3bdd9:     }
1:40a7d3b: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
1: 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:8abcfd1
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport.http;
1: import org.apache.activemq.transport.TransportThreadSupport;
1: import org.apache.activemq.transport.util.TextWireFormat;
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:8a3bdd9
/////////////////////////////////////////////////////////////////////////
0:  *
0:  *
1:     private String proxyUser;
1:     private String proxyPassword;
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String getProxyUser() {
1:        return proxyUser;
1:     }
1: 
1:     public void setProxyUser(String proxyUser) {
1:        this.proxyUser = proxyUser;
1:     }
1: 
1:     public String getProxyPassword() {
1:        return proxyPassword;
1:     }
1: 
1:     public void setProxyPassword(String proxyPassword) {
1:        this.proxyPassword = proxyPassword;
1:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:63b2d68
/////////////////////////////////////////////////////////////////////////
1:     private String proxyHost;
1:     private int proxyPort = 8080;
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String getProxyHost() {
1:         return proxyHost;
1:     }
1: 
1:     public void setProxyHost(String proxyHost) {
1:         this.proxyHost = proxyHost;
1:     }
1: 
1:     public int getProxyPort() {
1:         return proxyPort;
1:     }
1: 
1:     public void setProxyPort(int proxyPort) {
1:         this.proxyPort = proxyPort;
1:     }
commit:140daf4
/////////////////////////////////////////////////////////////////////////
1:     public String getRemoteAddress() {
1:         return remoteUrl.toString();
1:     }
1: 
commit:40a7d3b
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * 
0:  * Copyright 2005 LogicBlaze, Inc. http://www.logicblaze.com
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
0:  * 
0:  **/
0: package org.activemq.transport.http;
1: 
0: import org.activemq.transport.TransportThreadSupport;
0: import org.activemq.transport.util.TextWireFormat;
1: 
0: import java.net.URI;
1: 
1: /**
1:  * A useful base class for HTTP Transport implementations.
0:  * 
0:  * @version $Revision: 1.1 $
1:  */
1: public abstract class HttpTransportSupport extends TransportThreadSupport {
1:     private TextWireFormat textWireFormat;
1:     private URI remoteUrl;
1: 
1:     public HttpTransportSupport(TextWireFormat textWireFormat, URI remoteUrl) {
1:         this.textWireFormat = textWireFormat;
1:         this.remoteUrl = remoteUrl;
1:     }
1: 
1:     public String toString() {
1:         return "HTTP Reader " + getRemoteUrl();
1:     }
1: 
1:     // Properties
1:     // -------------------------------------------------------------------------
1:     public URI getRemoteUrl() {
1:         return remoteUrl;
1:     }
1: 
1:     public TextWireFormat getTextWireFormat() {
1:         return textWireFormat;
1:     }
1: 
1:     public void setTextWireFormat(TextWireFormat textWireFormat) {
1:         this.textWireFormat = textWireFormat;
1:     }
1: }
============================================================================