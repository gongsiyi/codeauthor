1:9e85629: /*
1:9e85629:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:9e85629:  * contributor license agreements.  See the NOTICE file distributed with
1:9e85629:  * this work for additional information regarding copyright ownership.
1:9e85629:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:9e85629:  * (the "License"); you may not use this file except in compliance with
1:9e85629:  * the License.  You may obtain a copy of the License at
1:9e85629:  *
1:9e85629:  *      http://www.apache.org/licenses/LICENSE-2.0
1:9e85629:  *
1:9e85629:  * Unless required by applicable law or agreed to in writing, software
1:9e85629:  * distributed under the License is distributed on an "AS IS" BASIS,
1:9e85629:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9e85629:  * See the License for the specific language governing permissions and
1:9e85629:  * limitations under the License.
1:9e85629:  */
1:9e85629: package org.apache.activemq.util;
1:9e85629: 
1:9e85629: import java.io.Serializable;
1:9e85629: 
1:9e85629: public class SimplePojo implements Serializable {
1:9e85629: 
1:9e85629:     private static final long serialVersionUID = 3258560248864895099L;
1:9e85629: 
1:9e85629:     private Object payload;
1:9e85629: 
1:9e85629:     public SimplePojo() {
1:9e85629:     }
1:9e85629: 
1:9e85629:     public SimplePojo(Object payload) {
1:9e85629:         this.payload = payload;
1:9e85629:     }
1:9e85629: 
1:9e85629:     public Object getPayload() {
1:9e85629:         return payload;
1:9e85629:     }
1:9e85629: 
1:9e85629:     public void setPayload(Object payload) {
1:9e85629:         this.payload = payload;
1:9e85629:     }
1:9e85629: 
1:9e85629:     @Override
1:9e85629:     public int hashCode() {
1:9e85629:         final int prime = 31;
1:9e85629:         int result = 1;
1:9e85629:         result = prime * result + ((payload == null) ? 0 : payload.hashCode());
1:9e85629:         return result;
1:9e85629:     }
1:9e85629: 
1:9e85629:     @Override
1:9e85629:     public boolean equals(Object obj) {
1:9e85629:         if (this == obj) {
1:9e85629:             return true;
1:9e85629:         }
1:9e85629:         if (obj == null) {
1:9e85629:             return false;
1:9e85629:         }
1:9e85629:         if (getClass() != obj.getClass()) {
1:9e85629:             return false;
1:9e85629:         }
1:9e85629: 
1:9e85629:         SimplePojo other = (SimplePojo) obj;
1:9e85629:         if (payload == null) {
1:9e85629:             if (other.payload != null) {
1:9e85629:                 return false;
1:9e85629:             }
1:9e85629:         } else if (!payload.equals(other.payload)) {
1:9e85629:             return false;
1:9e85629:         }
1:9e85629: 
1:9e85629:         return true;
1:9e85629:     }
1:9e85629: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:9e85629
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
1: import java.io.Serializable;
1: 
1: public class SimplePojo implements Serializable {
1: 
1:     private static final long serialVersionUID = 3258560248864895099L;
1: 
1:     private Object payload;
1: 
1:     public SimplePojo() {
1:     }
1: 
1:     public SimplePojo(Object payload) {
1:         this.payload = payload;
1:     }
1: 
1:     public Object getPayload() {
1:         return payload;
1:     }
1: 
1:     public void setPayload(Object payload) {
1:         this.payload = payload;
1:     }
1: 
1:     @Override
1:     public int hashCode() {
1:         final int prime = 31;
1:         int result = 1;
1:         result = prime * result + ((payload == null) ? 0 : payload.hashCode());
1:         return result;
1:     }
1: 
1:     @Override
1:     public boolean equals(Object obj) {
1:         if (this == obj) {
1:             return true;
1:         }
1:         if (obj == null) {
1:             return false;
1:         }
1:         if (getClass() != obj.getClass()) {
1:             return false;
1:         }
1: 
1:         SimplePojo other = (SimplePojo) obj;
1:         if (payload == null) {
1:             if (other.payload != null) {
1:                 return false;
1:             }
1:         } else if (!payload.equals(other.payload)) {
1:             return false;
1:         }
1: 
1:         return true;
1:     }
1: }
============================================================================