1:cfc6917: /**
1:cfc6917:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:cfc6917:  * contributor license agreements.  See the NOTICE file distributed with
1:cfc6917:  * this work for additional information regarding copyright ownership.
1:cfc6917:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:cfc6917:  * (the "License"); you may not use this file except in compliance with
1:cfc6917:  * the License.  You may obtain a copy of the License at
1:cfc6917:  *
1:cfc6917:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cfc6917:  *
1:cfc6917:  * Unless required by applicable law or agreed to in writing, software
1:cfc6917:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cfc6917:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cfc6917:  * See the License for the specific language governing permissions and
1:cfc6917:  * limitations under the License.
1:cfc6917:  */
1:cfc6917: package org.apache.activemq.transport.mqtt;
1:cfc6917: 
1:cfc6917: import java.io.IOException;
1:cfc6917: import java.security.cert.X509Certificate;
1:cfc6917: 
1:cfc6917: import org.apache.activemq.command.Command;
1:cfc6917: import org.fusesource.mqtt.codec.MQTTFrame;
1:cfc6917: 
1:cfc6917: /**
1:cfc6917:  * Basic interface that mediates between protocol converter and transport
1:cfc6917:  */
1:cfc6917: public interface MQTTTransport {
1:cfc6917: 
1:cfc6917:     public void sendToActiveMQ(Command command);
1:cfc6917: 
1:cfc6917:     public void sendToMQTT(MQTTFrame command) throws IOException;
1:cfc6917: 
1:cfc6917:     public X509Certificate[] getPeerCertificates();
1:cfc6917: 
1:f8bfff0:     public void setPeerCertificates(X509Certificate[] certificates);
1:f8bfff0: 
1:cfc6917:     public void onException(IOException error);
1:cfc6917: 
1:cfc6917:     public MQTTInactivityMonitor getInactivityMonitor();
1:cfc6917: 
1:cfc6917:     public MQTTWireFormat getWireFormat();
1:cfc6917: 
1:cfc6917:     public void stop() throws Exception;
1:cfc6917: }
============================================================================
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:f8bfff0
/////////////////////////////////////////////////////////////////////////
1:     public void setPeerCertificates(X509Certificate[] certificates);
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
author:Robert Davies
-------------------------------------------------------------------------------
commit:cfc6917
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.mqtt;
1: 
1: import java.io.IOException;
1: import java.security.cert.X509Certificate;
1: 
1: import org.apache.activemq.command.Command;
1: import org.fusesource.mqtt.codec.MQTTFrame;
1: 
1: /**
1:  * Basic interface that mediates between protocol converter and transport
1:  */
1: public interface MQTTTransport {
1: 
1:     public void sendToActiveMQ(Command command);
1: 
1:     public void sendToMQTT(MQTTFrame command) throws IOException;
1: 
1:     public X509Certificate[] getPeerCertificates();
1: 
1:     public void onException(IOException error);
1: 
1:     public MQTTInactivityMonitor getInactivityMonitor();
1: 
1:     public MQTTWireFormat getWireFormat();
1: 
1:     public void stop() throws Exception;
1: }
============================================================================