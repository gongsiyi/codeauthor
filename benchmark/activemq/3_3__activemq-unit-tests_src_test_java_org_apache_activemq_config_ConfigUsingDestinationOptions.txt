1:87d15d6: /**
1:87d15d6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:87d15d6:  * contributor license agreements.  See the NOTICE file distributed with
1:87d15d6:  * this work for additional information regarding copyright ownership.
1:87d15d6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:87d15d6:  * (the "License"); you may not use this file except in compliance with
1:87d15d6:  * the License.  You may obtain a copy of the License at
2:87d15d6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:87d15d6:  *
1:87d15d6:  * Unless required by applicable law or agreed to in writing, software
1:87d15d6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:87d15d6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:87d15d6:  * See the License for the specific language governing permissions and
1:87d15d6:  * limitations under the License.
1:87d15d6:  */
1:87d15d6: package org.apache.activemq.config;
2:87d15d6: 
1:87d15d6: import javax.jms.Connection;
1:74a7a8b: import javax.jms.InvalidSelectorException;
1:87d15d6: import javax.jms.JMSException;
1:87d15d6: import javax.jms.Session;
1:74a7a8b: 
1:74a7a8b: import junit.framework.TestCase;
1:c7d559f: 
1:74a7a8b: import org.apache.activemq.ActiveMQConnectionFactory;
1:74a7a8b: import org.apache.activemq.ActiveMQMessageConsumer;
1:74a7a8b: import org.apache.activemq.command.ActiveMQQueue;
1:87d15d6: 
1:87d15d6: public class ConfigUsingDestinationOptions extends TestCase {
1:87d15d6:     public void testValidSelectorConfig() throws JMSException {
1:87d15d6:         ActiveMQQueue queue = new ActiveMQQueue("TEST.FOO?consumer.selector=test=1");
1:87d15d6: 
1:87d15d6:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:87d15d6:         Connection conn = factory.createConnection();
1:87d15d6:         Session sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:87d15d6: 
1:87d15d6:         ActiveMQMessageConsumer cons;
1:87d15d6:         // JMS selector should be priority
1:87d15d6:         cons = (ActiveMQMessageConsumer) sess.createConsumer(queue, "test=2");
1:87d15d6:         assertEquals("test=2", cons.getMessageSelector());
1:87d15d6: 
1:87d15d6:         // Test setting using JMS destinations
1:87d15d6:         cons = (ActiveMQMessageConsumer) sess.createConsumer(queue);
1:87d15d6:         assertEquals("test=1", cons.getMessageSelector());
1:87d15d6:     }
1:87d15d6: 
1:87d15d6:     public void testInvalidSelectorConfig() throws JMSException {
1:87d15d6:         ActiveMQQueue queue = new ActiveMQQueue("TEST.FOO?consumer.selector=test||1");
1:87d15d6: 
1:87d15d6:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:87d15d6:         Connection conn = factory.createConnection();
1:87d15d6:         Session sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:87d15d6: 
1:87d15d6:         ActiveMQMessageConsumer cons;
1:87d15d6:         // JMS selector should be priority
1:87d15d6:         try {
1:87d15d6:             cons = (ActiveMQMessageConsumer) sess.createConsumer(queue, "test||1");
1:c7d559f:             fail("Selector should be invalid" + cons);
1:87d15d6:         } catch (InvalidSelectorException e) {
1:87d15d6: 
1:87d15d6:         }
1:87d15d6: 
1:87d15d6:         // Test setting using JMS destinations
1:87d15d6:         try {
1:87d15d6:             cons = (ActiveMQMessageConsumer) sess.createConsumer(queue);
1:c7d559f:             fail("Selector should be invalid" + cons);
1:87d15d6:         } catch (InvalidSelectorException e) {
1:87d15d6: 
1:87d15d6:         }
1:87d15d6:     }
1:87d15d6: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:c7d559f
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:             fail("Selector should be invalid" + cons);
/////////////////////////////////////////////////////////////////////////
1:             fail("Selector should be invalid" + cons);
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.InvalidSelectorException;
1: 
1: import junit.framework.TestCase;
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.ActiveMQMessageConsumer;
1: import org.apache.activemq.command.ActiveMQQueue;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:87d15d6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.config;
1: 
0: import junit.framework.TestCase;
0: import org.apache.activemq.command.ActiveMQQueue;
0: import org.apache.activemq.ActiveMQConnectionFactory;
0: import org.apache.activemq.ActiveMQMessageConsumer;
1: 
1: import javax.jms.Connection;
1: import javax.jms.JMSException;
1: import javax.jms.Session;
0: import javax.jms.InvalidSelectorException;
1: 
1: public class ConfigUsingDestinationOptions extends TestCase {
1:     public void testValidSelectorConfig() throws JMSException {
1:         ActiveMQQueue queue = new ActiveMQQueue("TEST.FOO?consumer.selector=test=1");
1: 
1:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:         Connection conn = factory.createConnection();
1:         Session sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
1: 
1:         ActiveMQMessageConsumer cons;
1:         // JMS selector should be priority
1:         cons = (ActiveMQMessageConsumer) sess.createConsumer(queue, "test=2");
1:         assertEquals("test=2", cons.getMessageSelector());
1: 
1:         // Test setting using JMS destinations
1:         cons = (ActiveMQMessageConsumer) sess.createConsumer(queue);
1:         assertEquals("test=1", cons.getMessageSelector());
1:     }
1: 
1:     public void testInvalidSelectorConfig() throws JMSException {
1:         ActiveMQQueue queue = new ActiveMQQueue("TEST.FOO?consumer.selector=test||1");
1: 
1:         ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory("vm://localhost");
1:         Connection conn = factory.createConnection();
1:         Session sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
1: 
1:         ActiveMQMessageConsumer cons;
1:         // JMS selector should be priority
1:         try {
1:             cons = (ActiveMQMessageConsumer) sess.createConsumer(queue, "test||1");
0:             fail("Selector should be invalid");
1:         } catch (InvalidSelectorException e) {
1: 
1:         }
1: 
1:         // Test setting using JMS destinations
1:         try {
1:             cons = (ActiveMQMessageConsumer) sess.createConsumer(queue);
0:             fail("Selector should be invalid");
1:         } catch (InvalidSelectorException e) {
1: 
1:         }
1:     }
1: }
============================================================================