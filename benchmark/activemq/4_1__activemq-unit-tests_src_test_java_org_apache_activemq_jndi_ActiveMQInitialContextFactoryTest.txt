1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.jndi;
4:d29ca2a: 
1:74a7a8b: import javax.naming.InitialContext;
1:74a7a8b: import javax.naming.NamingException;
1:74a7a8b: 
1:d29ca2a: import org.apache.activemq.command.ActiveMQQueue;
1:d29ca2a: import org.apache.activemq.command.ActiveMQTopic;
1:d29ca2a: 
1:d29ca2a: /**
1:b0c2a40:  * 
1:d29ca2a:  */
1:d29ca2a: public class ActiveMQInitialContextFactoryTest extends JNDITestSupport {
1:d29ca2a: 
1:d29ca2a:     public void testConnectionFactoriesArePresent() throws NamingException {
1:d29ca2a:         String lookupName = getConnectionFactoryLookupName();
1:d29ca2a:         assertConnectionFactoryPresent(lookupName);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void testDestinationsArePresent() throws NamingException {
1:d29ca2a: 
1:230a86c:         // Retrieving destinations context is not yet implemented on the broker.
1:230a86c:         // For this test, a jndi file properties will be used.
1:d29ca2a: 
1:d29ca2a:         InitialContext context = new InitialContext();
1:d29ca2a: 
1:230a86c:         // make sure context is not null
1:d29ca2a:         assertTrue("Created context", context != null);
1:d29ca2a: 
1:d29ca2a:         Object topicDestination = context.lookup("MyTopic");
1:d29ca2a: 
1:d29ca2a:         // check if MyTopic is an ActiveMQTopic
1:d29ca2a:         assertTrue("Should have found a topic but found: " + topicDestination, topicDestination instanceof ActiveMQTopic);
1:d29ca2a: 
1:d29ca2a:         Object queueDestination = context.lookup("MyQueue");
1:d29ca2a: 
1:d29ca2a:         // check if MyQueue is an ActiveMQueue
1:230a86c:         assertTrue("Should have found a queue but found: " + queueDestination, queueDestination instanceof ActiveMQQueue);
1:d29ca2a: 
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void testDynamicallyGrowing() throws Exception {
1:d29ca2a:         Object answer = context.lookup("dynamicQueues/FOO.BAR");
1:d29ca2a:         assertTrue("Should have found a queue but found: " + answer, answer instanceof ActiveMQQueue);
1:d29ca2a: 
1:230a86c:         ActiveMQQueue queue = (ActiveMQQueue)answer;
1:d29ca2a:         assertEquals("queue name", "FOO.BAR", queue.getPhysicalName());
1:d29ca2a: 
1:230a86c:         answer = context.lookup("dynamicTopics/A.B.C");
1:d29ca2a:         assertTrue("Should have found a topic but found: " + answer, answer instanceof ActiveMQTopic);
1:d29ca2a: 
1:230a86c:         ActiveMQTopic topic = (ActiveMQTopic)answer;
1:d29ca2a:         assertEquals("topic name", "A.B.C", topic.getPhysicalName());
1:d29ca2a: 
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     protected String getConnectionFactoryLookupName() {
1:d29ca2a:         return "ConnectionFactory";
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.naming.InitialContext;
1: import javax.naming.NamingException;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         // Retrieving destinations context is not yet implemented on the broker.
1:         // For this test, a jndi file properties will be used.
1:         // make sure context is not null
/////////////////////////////////////////////////////////////////////////
1:         assertTrue("Should have found a queue but found: " + queueDestination, queueDestination instanceof ActiveMQQueue);
/////////////////////////////////////////////////////////////////////////
1:         ActiveMQQueue queue = (ActiveMQQueue)answer;
1:         answer = context.lookup("dynamicTopics/A.B.C");
1:         ActiveMQTopic topic = (ActiveMQTopic)answer;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.jndi;
1: 
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.activemq.command.ActiveMQTopic;
1: 
1: 
0: import javax.naming.*;
1: 
1: /**
0:  * @version $Revision: 1.4 $
1:  */
1: public class ActiveMQInitialContextFactoryTest extends JNDITestSupport {
1: 
1:     public void testConnectionFactoriesArePresent() throws NamingException {
1:         String lookupName = getConnectionFactoryLookupName();
1:         assertConnectionFactoryPresent(lookupName);
1:     }
1: 
1:     public void testDestinationsArePresent() throws NamingException {
1: 
0:         //Retrieving destinations context is not yet implemented on the broker. For this test, a jndi file properties will be used.
1: 
1:         InitialContext context = new InitialContext();
1: 
0:         //make sure contest is not null
1:         assertTrue("Created context", context != null);
1: 
1:         Object topicDestination = context.lookup("MyTopic");
1: 
1:         // check if MyTopic is an ActiveMQTopic
1:         assertTrue("Should have found a topic but found: " + topicDestination, topicDestination instanceof ActiveMQTopic);
1: 
1:         Object queueDestination = context.lookup("MyQueue");
1: 
1:         // check if MyQueue is an ActiveMQueue
0:         assertTrue("Should have found a queue but found: " + queueDestination,queueDestination instanceof ActiveMQQueue);
1: 
1:     }
1: 
1:     public void testDynamicallyGrowing() throws Exception {
1:         Object answer = context.lookup("dynamicQueues/FOO.BAR");
1:         assertTrue("Should have found a queue but found: " + answer, answer instanceof ActiveMQQueue);
1: 
0:         ActiveMQQueue queue = (ActiveMQQueue) answer;
1:         assertEquals("queue name", "FOO.BAR", queue.getPhysicalName());
1: 
0:          answer = context.lookup("dynamicTopics/A.B.C");
1:         assertTrue("Should have found a topic but found: " + answer, answer instanceof ActiveMQTopic);
1: 
0:         ActiveMQTopic topic = (ActiveMQTopic) answer;
1:         assertEquals("topic name", "A.B.C", topic.getPhysicalName());
1: 
1:     }
1: 
1: 
1:     protected String getConnectionFactoryLookupName() {
1:         return "ConnectionFactory";
1:     }
1: }
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:b9a4dee
/////////////////////////////////////////////////////////////////////////
0:         //make sure context is not null
============================================================================