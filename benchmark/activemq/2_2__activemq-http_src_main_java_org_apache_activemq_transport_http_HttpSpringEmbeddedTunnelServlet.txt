3:cd3f28f: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
2:7f883f6:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:cd3f28f:  * Unless required by applicable law or agreed to in writing, software
1:7f883f6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7f883f6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7f883f6:  * See the License for the specific language governing permissions and
1:7f883f6:  * limitations under the License.
1:7f883f6:  */
1:cd3f28f: package org.apache.activemq.transport.http;
3:cd3f28f: 
1:cd3f28f: import org.apache.activemq.broker.BrokerService;
1:cd3f28f: import org.apache.activemq.xbean.BrokerFactoryBean;
1:cd3f28f: import org.springframework.core.io.ClassPathResource;
1:cd3f28f: 
1:88acb0e: /**
1:540dd5c:  * This servlet embeds an ActiveMQ broker inside a servlet engine which is ideal
1:540dd5c:  * for deploying ActiveMQ inside a WAR and using this servlet as a HTTP tunnel.
1:b0c2a40:  * 
1:540dd5c:  * 
1:cd3f28f:  */
1:cd3f28f: public class HttpSpringEmbeddedTunnelServlet extends HttpEmbeddedTunnelServlet {
1:88acb0e: 
1:540dd5c:     private static final long serialVersionUID = -6568661997192814908L;
1:88acb0e: 
1:540dd5c:     /**
1:cd3f28f:      * Factory method to create a new broker
1:cd3f28f:      */
1:cd3f28f:     protected BrokerService createBroker() throws Exception {
1:540dd5c: 
1:cd3f28f:         String configFile = getServletContext().getInitParameter("org.activemq.config.file");
1:cd3f28f:         if (configFile == null) {
1:540dd5c:             configFile = "activemq.xml";
1:cd3f28f:         }
1:cd3f28f: 
1:cd3f28f:         BrokerFactoryBean factory = new BrokerFactoryBean(new ClassPathResource(configFile));
1:cd3f28f:         factory.afterPropertiesSet();
1:cd3f28f: 
1:cd3f28f:         return factory.getBroker();
1:cd3f28f:     }
1:cd3f28f: 
1:cd3f28f: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1:  * This servlet embeds an ActiveMQ broker inside a servlet engine which is ideal
1:  * for deploying ActiveMQ inside a WAR and using this servlet as a HTTP tunnel.
1:  * 
1:     private static final long serialVersionUID = -6568661997192814908L;
1:     /**
1: 
1:             configFile = "activemq.xml";
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:88acb0e
/////////////////////////////////////////////////////////////////////////
1: 
0: 	private static final long serialVersionUID = -6568661997192814908L;
1: 
1: 	/**
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:cd3f28f
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * 
0:  * Copyright 2004 Protique Ltd
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
0:  * 
0:  **/
1: package org.apache.activemq.transport.http;
1: 
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.xbean.BrokerFactoryBean;
1: import org.springframework.core.io.ClassPathResource;
1: 
1: 
1: /**
0:  * This servlet embeds an ActiveMQ broker inside a servlet engine which is
0:  * ideal for deploying ActiveMQ inside a WAR and using this servlet as a HTTP tunnel.
0:  *
0:  * @version $Revision$
1:  */
1: public class HttpSpringEmbeddedTunnelServlet extends HttpEmbeddedTunnelServlet {
1:     /**
1:      * Factory method to create a new broker
1:      */
1:     protected BrokerService createBroker() throws Exception {
1:     	
1:         String configFile = getServletContext().getInitParameter("org.activemq.config.file");
1:         if (configFile == null) {
0:         	configFile="activemq.xml";
1:         }
1: 
1:         BrokerFactoryBean factory = new BrokerFactoryBean(new ClassPathResource(configFile));
1:         factory.afterPropertiesSet();
1: 
1:         return factory.getBroker();
1:     }
1: 
1: }
============================================================================