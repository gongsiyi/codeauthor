1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.memory.list;
1:d29ca2a: 
1:d29ca2a: import java.util.List;
1:d29ca2a: import org.apache.activemq.broker.region.MessageReference;
1:2748ae1: import org.apache.activemq.command.ActiveMQDestination;
1:2748ae1: import org.apache.activemq.command.Message;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * A container of messages which is used to store messages and then 
1:d29ca2a:  * replay them later for a given subscription.
1:b0c2a40:  * 
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public interface MessageList {
1:d29ca2a: 
1:d29ca2a:     void add(MessageReference node);
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Returns the current list of MessageReference objects for the given subscription
1:d29ca2a:      */
1:a110604:     List getMessages(ActiveMQDestination destination);
1:d29ca2a:     
1:2748ae1:     /**
1:2748ae1:      * @param destination
1:2748ae1:      * @return an array of Messages that match the destination
1:2748ae1:      */
1:2748ae1:     Message[] browse(ActiveMQDestination destination);
1:d29ca2a: 
1:d29ca2a:     void clear();
2:2748ae1:     
1:2748ae1:     
1:d29ca2a: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.memory.list;
1: 
1: import org.apache.activemq.broker.region.MessageReference;
0: import org.apache.activemq.broker.region.Subscription;
1: 
1: import java.util.List;
1: 
1: /**
1:  * A container of messages which is used to store messages and then 
1:  * replay them later for a given subscription.
1:  * 
0:  * @version $Revision: 1.1 $
1:  */
1: public interface MessageList {
1: 
1:     void add(MessageReference node);
1: 
1:     /**
1:      * Returns the current list of MessageReference objects for the given subscription
1:      */
0:     List getMessages(Subscription sub);
1: 
1:     void clear();
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:a110604
/////////////////////////////////////////////////////////////////////////
0: import java.util.List;
/////////////////////////////////////////////////////////////////////////
1:     List getMessages(ActiveMQDestination destination);
commit:2748ae1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.Message;
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * @param destination
1:      * @return an array of Messages that match the destination
1:      */
1:     Message[] browse(ActiveMQDestination destination);
1:     
1:     
============================================================================