1:aa1310c: /**
1:aa1310c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:aa1310c:  * contributor license agreements.  See the NOTICE file distributed with
1:aa1310c:  * this work for additional information regarding copyright ownership.
1:aa1310c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:aa1310c:  * (the "License"); you may not use this file except in compliance with
1:aa1310c:  * the License.  You may obtain a copy of the License at
1:aa1310c:  *
1:aa1310c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:aa1310c:  *
1:aa1310c:  * Unless required by applicable law or agreed to in writing, software
1:aa1310c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:aa1310c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:aa1310c:  * See the License for the specific language governing permissions and
1:aa1310c:  * limitations under the License.
1:aa1310c:  */
1:aa1310c: package org.apache.activemq.broker.jmx;
1:aa1310c: 
1:aa1310c: import java.util.concurrent.Callable;
1:aa1310c: import org.apache.activemq.store.PersistenceAdapter;
1:aa1310c: 
1:aa1310c: public class PersistenceAdapterView implements PersistenceAdapterViewMBean {
1:aa1310c: 
1:aa1310c:     private final String name;
1:aa1310c:     private final PersistenceAdapter persistenceAdapter;
1:aa1310c: 
1:aa1310c:     private Callable<String> inflightTransactionViewCallable;
1:aa1310c:     private Callable<String> dataViewCallable;
1:aa1310c: 
1:aa1310c:     public PersistenceAdapterView(PersistenceAdapter adapter) {
1:aa1310c:         this.name = adapter.toString();
1:aa1310c:         this.persistenceAdapter = adapter;
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     @Override
1:aa1310c:     public String getName() {
1:aa1310c:         return name;
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     @Override
1:aa1310c:     public String getTransactions() {
1:aa1310c:         return invoke(inflightTransactionViewCallable);
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     @Override
1:aa1310c:     public String getData() {
1:aa1310c:         return invoke(dataViewCallable);
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     @Override
1:aa1310c:     public long getSize() {
1:aa1310c:         return persistenceAdapter.size();
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     private String invoke(Callable<String> callable) {
1:aa1310c:         String result = null;
1:aa1310c:         if (callable != null) {
1:aa1310c:             try {
1:aa1310c:                 result = callable.call();
1:aa1310c:             } catch (Exception e) {
1:aa1310c:                 result = e.toString();
1:aa1310c:             }
1:aa1310c:         }
1:aa1310c:         return result;
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     public void setDataViewCallable(Callable<String> dataViewCallable) {
1:aa1310c:         this.dataViewCallable = dataViewCallable;
1:aa1310c:     }
1:aa1310c: 
1:aa1310c:     public void setInflightTransactionViewCallable(Callable<String> inflightTransactionViewCallable) {
1:aa1310c:         this.inflightTransactionViewCallable = inflightTransactionViewCallable;
1:aa1310c:     }
1:aa1310c: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:aa1310c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import java.util.concurrent.Callable;
1: import org.apache.activemq.store.PersistenceAdapter;
1: 
1: public class PersistenceAdapterView implements PersistenceAdapterViewMBean {
1: 
1:     private final String name;
1:     private final PersistenceAdapter persistenceAdapter;
1: 
1:     private Callable<String> inflightTransactionViewCallable;
1:     private Callable<String> dataViewCallable;
1: 
1:     public PersistenceAdapterView(PersistenceAdapter adapter) {
1:         this.name = adapter.toString();
1:         this.persistenceAdapter = adapter;
1:     }
1: 
1:     @Override
1:     public String getName() {
1:         return name;
1:     }
1: 
1:     @Override
1:     public String getTransactions() {
1:         return invoke(inflightTransactionViewCallable);
1:     }
1: 
1:     @Override
1:     public String getData() {
1:         return invoke(dataViewCallable);
1:     }
1: 
1:     @Override
1:     public long getSize() {
1:         return persistenceAdapter.size();
1:     }
1: 
1:     private String invoke(Callable<String> callable) {
1:         String result = null;
1:         if (callable != null) {
1:             try {
1:                 result = callable.call();
1:             } catch (Exception e) {
1:                 result = e.toString();
1:             }
1:         }
1:         return result;
1:     }
1: 
1:     public void setDataViewCallable(Callable<String> dataViewCallable) {
1:         this.dataViewCallable = dataViewCallable;
1:     }
1: 
1:     public void setInflightTransactionViewCallable(Callable<String> inflightTransactionViewCallable) {
1:         this.inflightTransactionViewCallable = inflightTransactionViewCallable;
1:     }
1: }
============================================================================