1:a88906f: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a88906f:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a88906f:  *
1:a88906f:  * Unless required by applicable law or agreed to in writing, software
1:a88906f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a88906f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a88906f:  * See the License for the specific language governing permissions and
1:a88906f:  * limitations under the License.
1:a88906f:  */
1:a88906f: package org.apache.activemq.tool.spi;
1:a88906f: 
1:540dd5c: import java.util.Properties;
1:a88906f: 
1:a88906f: import javax.jms.ConnectionFactory;
1:540dd5c: 
1:540dd5c: import org.apache.activemq.tool.properties.ReflectionUtil;
1:a88906f: 
1:a88906f: public abstract class ReflectionSPIConnectionFactory extends ClassLoaderSPIConnectionFactory {
1:a88906f: 
1:a88906f:     public ConnectionFactory instantiateConnectionFactory(Properties settings) throws Exception {
1:a88906f:         Class factoryClass = Thread.currentThread().getContextClassLoader().loadClass(getClassName());
1:a88906f:         ConnectionFactory factory = (ConnectionFactory)factoryClass.newInstance();
1:a88906f:         configureConnectionFactory(factory, settings);
1:a88906f:         return factory;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void configureConnectionFactory(ConnectionFactory jmsFactory, Properties settings) throws Exception {
1:a88906f:         ReflectionUtil.configureClass(jmsFactory, settings);
1:a88906f:     }
1:a88906f: 
1:a88906f:     public abstract String getClassName();
1:a88906f: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:87e878b
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import java.util.Properties;
1: 
1: import org.apache.activemq.tool.properties.ReflectionUtil;
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:a88906f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.tool.spi;
1: 
0: import org.apache.activemq.tool.properties.ReflectionUtil;
1: 
1: import javax.jms.ConnectionFactory;
0: import java.util.Properties;
1: 
1: public abstract class ReflectionSPIConnectionFactory extends ClassLoaderSPIConnectionFactory {
1: 
1:     public ConnectionFactory instantiateConnectionFactory(Properties settings) throws Exception {
1:         Class factoryClass = Thread.currentThread().getContextClassLoader().loadClass(getClassName());
1:         ConnectionFactory factory = (ConnectionFactory)factoryClass.newInstance();
1:         configureConnectionFactory(factory, settings);
1:         return factory;
1:     }
1: 
1:     public void configureConnectionFactory(ConnectionFactory jmsFactory, Properties settings) throws Exception {
1:         ReflectionUtil.configureClass(jmsFactory, settings);
1:     }
1: 
1:     public abstract String getClassName();
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:dd55c21
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:faff499
/////////////////////////////////////////////////////////////////////////
0:     public ConnectionFactory instantiateConnectionFactory(Properties settings) throws Exception {
0:         Class factoryClass = Thread.currentThread().getContextClassLoader().loadClass(getClassName());
commit:6086520
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.tool.spi;
0: 
0: import org.apache.activemq.tool.properties.ReflectionUtil;
0: 
0: import javax.jms.ConnectionFactory;
0: import java.util.Properties;
0: 
0: public abstract class ReflectionSPIConnectionFactory extends ClassLoaderSPIConnectionFactory {
0: 
0:     public ConnectionFactory instantiateConnectionFactory(ClassLoader cl, Properties settings) throws Exception {
0:         Class factoryClass = cl.loadClass(getClassName());
0:         ConnectionFactory factory = (ConnectionFactory)factoryClass.newInstance();
0:         configureConnectionFactory(factory, settings);
0:         return factory;
0:     }
0: 
0:     public void configureConnectionFactory(ConnectionFactory jmsFactory, Properties settings) throws Exception {
0:         ReflectionUtil.configureClass(jmsFactory, settings);
0:     }
0: 
0:     public abstract String getClassName();
0: }
============================================================================