2:287f69d: /**
1:287f69d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:287f69d:  * contributor license agreements.  See the NOTICE file distributed with
1:287f69d:  * this work for additional information regarding copyright ownership.
1:287f69d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:287f69d:  * (the "License"); you may not use this file except in compliance with
1:287f69d:  * the License.  You may obtain a copy of the License at
2:287f69d:  *
1:287f69d:  *      http://www.apache.org/licenses/LICENSE-2.0
1:287f69d:  *
1:287f69d:  * Unless required by applicable law or agreed to in writing, software
1:287f69d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:287f69d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:287f69d:  * See the License for the specific language governing permissions and
1:287f69d:  * limitations under the License.
2:287f69d:  */
1:287f69d: package org.apache.activemq.util;
1:287f69d: 
1:18300c6: import static org.junit.Assert.assertEquals;
1:18300c6: import static org.junit.Assert.assertNotSame;
1:18300c6: import static org.junit.Assert.assertTrue;
1:287f69d: 
1:18300c6: import org.junit.Test;
1:287f69d: 
1:18300c6: public class StopWatchTest {
1:18300c6: 
1:18300c6:     @Test
1:287f69d:     public void testStopWatch() throws Exception {
1:287f69d:         StopWatch watch = new StopWatch();
1:287f69d:         Thread.sleep(200);
1:287f69d:         long taken = watch.stop();
1:287f69d: 
1:287f69d:         assertEquals(taken, watch.taken());
1:287f69d:         assertTrue("Should take approx 200 millis, was: " + taken, taken > 150);
1:287f69d:     }
1:287f69d: 
1:18300c6:     @Test
1:287f69d:     public void testStopWatchNotStarted() throws Exception {
1:287f69d:         StopWatch watch = new StopWatch(false);
1:287f69d:         long taken = watch.stop();
1:287f69d:         assertEquals(0, taken);
1:287f69d: 
1:287f69d:         watch.restart();
1:287f69d:         Thread.sleep(200);
1:287f69d:         taken = watch.stop();
1:287f69d: 
1:287f69d:         assertEquals(taken, watch.taken());
1:287f69d:         assertTrue("Should take approx 200 millis, was: " + taken, taken > 150);
1:287f69d:     }
1:287f69d: 
1:18300c6:     @Test
1:287f69d:     public void testStopWatchRestart() throws Exception {
1:287f69d:         StopWatch watch = new StopWatch();
1:287f69d:         Thread.sleep(200);
1:287f69d:         long taken = watch.stop();
1:287f69d: 
1:287f69d:         assertEquals(taken, watch.taken());
1:287f69d:         assertTrue("Should take approx 200 millis, was: " + taken, taken > 150);
1:287f69d: 
1:287f69d:         watch.restart();
1:287f69d:         Thread.sleep(100);
1:287f69d:         taken = watch.stop();
1:287f69d: 
1:287f69d:         assertEquals(taken, watch.taken());
1:287f69d:         assertTrue("Should take approx 100 millis, was: " + taken, taken > 50);
1:287f69d:     }
1:287f69d: 
1:18300c6:     @Test
1:287f69d:     public void testStopWatchTaken() throws Exception {
1:287f69d:         StopWatch watch = new StopWatch();
1:287f69d:         Thread.sleep(100);
1:287f69d:         long taken = watch.taken();
1:287f69d:         Thread.sleep(100);
1:287f69d:         long taken2 = watch.taken();
1:287f69d:         assertNotSame(taken, taken2);
1:287f69d:         assertTrue(taken2 > taken);
1:287f69d:     }
1:287f69d: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:18300c6
/////////////////////////////////////////////////////////////////////////
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertNotSame;
1: import static org.junit.Assert.assertTrue;
1: import org.junit.Test;
1: public class StopWatchTest {
1: 
1:     @Test
/////////////////////////////////////////////////////////////////////////
1:     @Test
/////////////////////////////////////////////////////////////////////////
1:     @Test
/////////////////////////////////////////////////////////////////////////
1:     @Test
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:a6ebc8d
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:287f69d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
0: import junit.framework.TestCase;
1: 
1: /**
1:  *
1:  */
0: public class StopWatchTest extends TestCase {
1: 
1:     public void testStopWatch() throws Exception {
1:         StopWatch watch = new StopWatch();
1:         Thread.sleep(200);
1:         long taken = watch.stop();
1: 
1:         assertEquals(taken, watch.taken());
1:         assertTrue("Should take approx 200 millis, was: " + taken, taken > 150);
1:     }
1: 
1:     public void testStopWatchNotStarted() throws Exception {
1:         StopWatch watch = new StopWatch(false);
1:         long taken = watch.stop();
1:         assertEquals(0, taken);
1: 
1:         watch.restart();
1:         Thread.sleep(200);
1:         taken = watch.stop();
1: 
1:         assertEquals(taken, watch.taken());
1:         assertTrue("Should take approx 200 millis, was: " + taken, taken > 150);
1:     }
1: 
1:     public void testStopWatchRestart() throws Exception {
1:         StopWatch watch = new StopWatch();
1:         Thread.sleep(200);
1:         long taken = watch.stop();
1: 
1:         assertEquals(taken, watch.taken());
1:         assertTrue("Should take approx 200 millis, was: " + taken, taken > 150);
1: 
1:         watch.restart();
1:         Thread.sleep(100);
1:         taken = watch.stop();
1: 
1:         assertEquals(taken, watch.taken());
1:         assertTrue("Should take approx 100 millis, was: " + taken, taken > 50);
1:     }
1: 
1:     public void testStopWatchTaken() throws Exception {
1:         StopWatch watch = new StopWatch();
1:         Thread.sleep(100);
1:         long taken = watch.taken();
1:         Thread.sleep(100);
1:         long taken2 = watch.taken();
1:         assertNotSame(taken, taken2);
1:         assertTrue(taken2 > taken);
1:     }
1: }
============================================================================