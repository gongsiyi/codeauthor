1:cf3d419: /**
1:cf3d419:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:cf3d419:  * contributor license agreements.  See the NOTICE file distributed with
1:cf3d419:  * this work for additional information regarding copyright ownership.
1:cf3d419:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:cf3d419:  * (the "License"); you may not use this file except in compliance with
1:cf3d419:  * the License.  You may obtain a copy of the License at
1:cf3d419:  *
1:cf3d419:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cf3d419:  *
1:cf3d419:  * Unless required by applicable law or agreed to in writing, software
1:cf3d419:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cf3d419:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cf3d419:  * See the License for the specific language governing permissions and
1:cf3d419:  * limitations under the License.
1:cf3d419:  */
1:cf3d419: 
1:cf3d419: package org.apache.activemq.store;
1:cf3d419: 
1:cf3d419: import org.apache.activemq.management.CountStatisticImpl;
1:cf3d419: import org.apache.activemq.management.SizeStatisticImpl;
1:cf3d419: import org.apache.activemq.management.StatsImpl;
1:cf3d419: 
1:cf3d419: 
1:cf3d419: public abstract class AbstractMessageStoreStatistics extends StatsImpl {
1:cf3d419: 
1:cf3d419:     protected final CountStatisticImpl messageCount;
1:cf3d419:     protected final SizeStatisticImpl messageSize;
1:cf3d419: 
1:cf3d419: 
1:cf3d419:     protected AbstractMessageStoreStatistics(String countDescription, String sizeDescription) {
1:cf3d419:         this(true, countDescription, sizeDescription);
1:cf3d419:     }
1:cf3d419: 
1:cf3d419:     protected AbstractMessageStoreStatistics(boolean enabled, String countDescription, String sizeDescription) {
1:cf3d419: 
1:cf3d419:         messageCount = new CountStatisticImpl("messageCount", countDescription);
1:cf3d419:         messageSize = new SizeStatisticImpl("messageSize", sizeDescription);
1:cf3d419: 
1:cf3d419:         addStatistic("messageCount", messageCount);
1:cf3d419:         addStatistic("messageSize", messageSize);
1:cf3d419: 
1:cf3d419:         this.setEnabled(enabled);
1:cf3d419:     }
1:cf3d419: 
1:cf3d419: 
1:cf3d419:     public CountStatisticImpl getMessageCount() {
1:cf3d419:         return messageCount;
1:cf3d419:     }
1:cf3d419: 
1:cf3d419:     public SizeStatisticImpl getMessageSize() {
1:cf3d419:         return messageSize;
1:cf3d419:     }
1:cf3d419: 
1:cf3d419:     @Override
1:cf3d419:     public void reset() {
1:cf3d419:         if (this.isDoReset()) {
1:cf3d419:             super.reset();
1:cf3d419:             messageCount.reset();
1:cf3d419:             messageSize.reset();
1:cf3d419:         }
1:cf3d419:     }
1:cf3d419: 
1:cf3d419:     @Override
1:cf3d419:     public void setEnabled(boolean enabled) {
1:cf3d419:         super.setEnabled(enabled);
1:cf3d419:         messageCount.setEnabled(enabled);
1:cf3d419:         messageSize.setEnabled(enabled);
1:cf3d419:     }
1:cf3d419: 
1:cf3d419:     public void setParent(AbstractMessageStoreStatistics parent) {
1:cf3d419:         if (parent != null) {
1:cf3d419:             messageCount.setParent(parent.messageCount);
1:cf3d419:             messageSize.setParent(parent.messageSize);
1:cf3d419:         } else {
1:cf3d419:             messageCount.setParent(null);
1:cf3d419:             messageSize.setParent(null);
1:cf3d419:         }
1:cf3d419:     }
1:cf3d419: 
1:cf3d419: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:cf3d419
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.store;
1: 
1: import org.apache.activemq.management.CountStatisticImpl;
1: import org.apache.activemq.management.SizeStatisticImpl;
1: import org.apache.activemq.management.StatsImpl;
1: 
1: 
1: public abstract class AbstractMessageStoreStatistics extends StatsImpl {
1: 
1:     protected final CountStatisticImpl messageCount;
1:     protected final SizeStatisticImpl messageSize;
1: 
1: 
1:     protected AbstractMessageStoreStatistics(String countDescription, String sizeDescription) {
1:         this(true, countDescription, sizeDescription);
1:     }
1: 
1:     protected AbstractMessageStoreStatistics(boolean enabled, String countDescription, String sizeDescription) {
1: 
1:         messageCount = new CountStatisticImpl("messageCount", countDescription);
1:         messageSize = new SizeStatisticImpl("messageSize", sizeDescription);
1: 
1:         addStatistic("messageCount", messageCount);
1:         addStatistic("messageSize", messageSize);
1: 
1:         this.setEnabled(enabled);
1:     }
1: 
1: 
1:     public CountStatisticImpl getMessageCount() {
1:         return messageCount;
1:     }
1: 
1:     public SizeStatisticImpl getMessageSize() {
1:         return messageSize;
1:     }
1: 
1:     @Override
1:     public void reset() {
1:         if (this.isDoReset()) {
1:             super.reset();
1:             messageCount.reset();
1:             messageSize.reset();
1:         }
1:     }
1: 
1:     @Override
1:     public void setEnabled(boolean enabled) {
1:         super.setEnabled(enabled);
1:         messageCount.setEnabled(enabled);
1:         messageSize.setEnabled(enabled);
1:     }
1: 
1:     public void setParent(AbstractMessageStoreStatistics parent) {
1:         if (parent != null) {
1:             messageCount.setParent(parent.messageCount);
1:             messageSize.setParent(parent.messageSize);
1:         } else {
1:             messageCount.setParent(null);
1:             messageSize.setParent(null);
1:         }
1:     }
1: 
1: }
============================================================================