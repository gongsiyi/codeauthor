1:cedc2fb: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:cedc2fb:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cedc2fb:  *
1:cedc2fb:  * Unless required by applicable law or agreed to in writing, software
1:cedc2fb:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cedc2fb:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cedc2fb:  * See the License for the specific language governing permissions and
1:cedc2fb:  * limitations under the License.
1:cedc2fb:  */
1:cedc2fb: package org.apache.activemq;
1:cedc2fb: 
1:74a7a8b: import java.net.URI;
1:b66559e: import java.util.Properties;
1:cedc2fb: 
1:cedc2fb: import javax.jms.JMSException;
1:cedc2fb: import javax.jms.XAConnection;
1:cedc2fb: import javax.jms.XAConnectionFactory;
1:cedc2fb: import javax.jms.XAQueueConnection;
1:cedc2fb: import javax.jms.XAQueueConnectionFactory;
1:cedc2fb: import javax.jms.XATopicConnection;
1:cedc2fb: import javax.jms.XATopicConnectionFactory;
1:cedc2fb: 
1:74a7a8b: import org.apache.activemq.management.JMSStatsImpl;
1:74a7a8b: import org.apache.activemq.transport.Transport;
1:cedc2fb: 
1:cedc2fb: /**
1:cedc2fb:  * A factory of {@link XAConnection} instances
1:0bbc0ac:  * 
1:cedc2fb:  * 
1:cedc2fb:  */
1:cedc2fb: public class ActiveMQXAConnectionFactory extends ActiveMQConnectionFactory implements XAConnectionFactory, XAQueueConnectionFactory, XATopicConnectionFactory {
1:cedc2fb: 
1:cedc2fb:     public ActiveMQXAConnectionFactory() {
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public ActiveMQXAConnectionFactory(String userName, String password, String brokerURL) {
1:cedc2fb:         super(userName, password, brokerURL);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public ActiveMQXAConnectionFactory(String userName, String password, URI brokerURL) {
1:cedc2fb:         super(userName, password, brokerURL);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public ActiveMQXAConnectionFactory(String brokerURL) {
1:cedc2fb:         super(brokerURL);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public ActiveMQXAConnectionFactory(URI brokerURL) {
1:cedc2fb:         super(brokerURL);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public XAConnection createXAConnection() throws JMSException {
1:cedc2fb:         return (XAConnection) createActiveMQConnection();
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public XAConnection createXAConnection(String userName, String password) throws JMSException {
1:cedc2fb:         return (XAConnection) createActiveMQConnection(userName, password);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public XAQueueConnection createXAQueueConnection() throws JMSException {
1:cedc2fb:         return (XAQueueConnection) createActiveMQConnection();
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public XAQueueConnection createXAQueueConnection(String userName, String password) throws JMSException {
1:cedc2fb:         return (XAQueueConnection) createActiveMQConnection(userName, password);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public XATopicConnection createXATopicConnection() throws JMSException {
1:cedc2fb:         return (XATopicConnection) createActiveMQConnection();
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     public XATopicConnection createXATopicConnection(String userName, String password) throws JMSException {
1:cedc2fb:         return (XATopicConnection) createActiveMQConnection(userName, password);
1:cedc2fb:     }
1:cedc2fb: 
1:cedc2fb:     protected ActiveMQConnection createActiveMQConnection(Transport transport, JMSStatsImpl stats) throws Exception {
1:b9045db:         ActiveMQXAConnection connection = new ActiveMQXAConnection(transport, getClientIdGenerator(), getConnectionIdGenerator(), stats);
1:b66559e:         configureXAConnection(connection);
1:cedc2fb:         return connection;
1:cedc2fb:     }
1:b66559e: 
1:b66559e:     private void configureXAConnection(ActiveMQXAConnection connection) {
1:b66559e:         connection.setXaAckMode(xaAckMode);
1:b66559e:     }
1:b66559e: 
1:b66559e:     public int getXaAckMode() {
1:b66559e:         return xaAckMode;
1:b66559e:     }
1:b66559e: 
1:b66559e:     public void setXaAckMode(int xaAckMode) {
1:b66559e:         this.xaAckMode = xaAckMode;
1:b66559e:     }
1:b66559e: 
1:b66559e:     @Override
1:b66559e:     public void populateProperties(Properties props) {
1:b66559e:         super.populateProperties(props);
1:b66559e:         props.put("xaAckMode", Integer.toString(xaAckMode));
1:b66559e:     }
1:cedc2fb: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:b66559e
/////////////////////////////////////////////////////////////////////////
1: import java.util.Properties;
/////////////////////////////////////////////////////////////////////////
1:         configureXAConnection(connection);
1: 
1:     private void configureXAConnection(ActiveMQXAConnection connection) {
1:         connection.setXaAckMode(xaAckMode);
1:     }
1: 
1:     public int getXaAckMode() {
1:         return xaAckMode;
1:     }
1: 
1:     public void setXaAckMode(int xaAckMode) {
1:         this.xaAckMode = xaAckMode;
1:     }
1: 
1:     @Override
1:     public void populateProperties(Properties props) {
1:         super.populateProperties(props);
1:         props.put("xaAckMode", Integer.toString(xaAckMode));
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.management.JMSStatsImpl;
1: import org.apache.activemq.transport.Transport;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Gary Tully
-------------------------------------------------------------------------------
commit:b9045db
/////////////////////////////////////////////////////////////////////////
1:         ActiveMQXAConnection connection = new ActiveMQXAConnection(transport, getClientIdGenerator(), getConnectionIdGenerator(), stats);
author:James Strachan
-------------------------------------------------------------------------------
commit:7339c6e
/////////////////////////////////////////////////////////////////////////
0:         ActiveMQXAConnection connection = new ActiveMQXAConnection(transport, getClientIdGenerator(), stats);
commit:cedc2fb
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq;
1: 
0: import org.apache.activemq.management.JMSStatsImpl;
0: import org.apache.activemq.transport.Transport;
1: 
1: import javax.jms.JMSException;
1: import javax.jms.XAConnection;
1: import javax.jms.XAConnectionFactory;
1: import javax.jms.XAQueueConnection;
1: import javax.jms.XAQueueConnectionFactory;
1: import javax.jms.XATopicConnection;
1: import javax.jms.XATopicConnectionFactory;
1: 
0: import java.net.URI;
1: 
1: /**
1:  * A factory of {@link XAConnection} instances
1:  * 
0:  * @version $Revision$
1:  */
1: public class ActiveMQXAConnectionFactory extends ActiveMQConnectionFactory implements XAConnectionFactory, XAQueueConnectionFactory, XATopicConnectionFactory {
1: 
1:     public ActiveMQXAConnectionFactory() {
1:     }
1: 
1:     public ActiveMQXAConnectionFactory(String userName, String password, String brokerURL) {
1:         super(userName, password, brokerURL);
1:     }
1: 
1:     public ActiveMQXAConnectionFactory(String userName, String password, URI brokerURL) {
1:         super(userName, password, brokerURL);
1:     }
1: 
1:     public ActiveMQXAConnectionFactory(String brokerURL) {
1:         super(brokerURL);
1:     }
1: 
1:     public ActiveMQXAConnectionFactory(URI brokerURL) {
1:         super(brokerURL);
1:     }
1: 
1:     public XAConnection createXAConnection() throws JMSException {
1:         return (XAConnection) createActiveMQConnection();
1:     }
1: 
1:     public XAConnection createXAConnection(String userName, String password) throws JMSException {
1:         return (XAConnection) createActiveMQConnection(userName, password);
1:     }
1: 
1:     public XAQueueConnection createXAQueueConnection() throws JMSException {
1:         return (XAQueueConnection) createActiveMQConnection();
1:     }
1: 
1:     public XAQueueConnection createXAQueueConnection(String userName, String password) throws JMSException {
1:         return (XAQueueConnection) createActiveMQConnection(userName, password);
1:     }
1: 
1:     public XATopicConnection createXATopicConnection() throws JMSException {
1:         return (XATopicConnection) createActiveMQConnection();
1:     }
1: 
1:     public XATopicConnection createXATopicConnection(String userName, String password) throws JMSException {
1:         return (XATopicConnection) createActiveMQConnection(userName, password);
1:     }
1: 
1:     protected ActiveMQConnection createActiveMQConnection(Transport transport, JMSStatsImpl stats) throws Exception {
0:         ActiveMQXAConnection connection = new ActiveMQXAConnection(transport, stats);
1:         return connection;
1:     }
1: }
============================================================================