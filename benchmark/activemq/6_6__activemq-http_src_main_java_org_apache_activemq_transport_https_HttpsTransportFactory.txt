1:40a7d3b: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:5be5a62:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:40a7d3b:  * Unless required by applicable law or agreed to in writing, software
1:5be5a62:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5be5a62:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5be5a62:  * See the License for the specific language governing permissions and
1:5be5a62:  * limitations under the License.
1:5be5a62:  */
1:8abcfd1: package org.apache.activemq.transport.https;
1:14a98e7: 
1:40a7d3b: import java.io.IOException;
1:40a7d3b: import java.net.MalformedURLException;
1:40a7d3b: import java.net.URI;
1:0ff144f: import java.net.URISyntaxException;
1:0ff144f: import java.util.HashMap;
1:789dc9c: import java.util.Map;
1:0ff144f: 
1:789dc9c: import org.apache.activemq.broker.SslContext;
1:f451ad0: import org.apache.activemq.transport.Transport;
1:f451ad0: import org.apache.activemq.transport.TransportServer;
1:f451ad0: import org.apache.activemq.transport.http.HttpTransportFactory;
1:0ff144f: import org.apache.activemq.util.IOExceptionSupport;
1:789dc9c: import org.apache.activemq.util.IntrospectionSupport;
1:0ff144f: import org.apache.activemq.util.URISupport;
1:88acb0e: import org.apache.activemq.wireformat.WireFormat;
1:f451ad0: 
1:40a7d3b: /**
1:40a7d3b:  * Factory of HTTPS based transports
1:40a7d3b:  */
1:40a7d3b: public class HttpsTransportFactory extends HttpTransportFactory {
1:e778467: 
1:40a7d3b:     public TransportServer doBind(String brokerId, URI location) throws IOException {
1:0ff144f:         return doBind(location);
1:40a7d3b:     }
1:e778467: 
1:473b328:     @Override
1:14a98e7:     public TransportServer doBind(URI location) throws IOException {
1:0ff144f:         try {
1:0ff144f:             Map<String, String> options = new HashMap<String, String>(URISupport.parseParameters(location));
1:789dc9c:             HttpsTransportServer result = new HttpsTransportServer(location, this, SslContext.getCurrentSslContext());
1:473b328:             Map<String, Object> httpOptions = IntrospectionSupport.extractProperties(options, "http.");
1:0ff144f:             Map<String, Object> transportOptions = IntrospectionSupport.extractProperties(options, "transport.");
1:0ff144f:             result.setTransportOption(transportOptions);
1:473b328:             result.setHttpOptions(httpOptions);
1:0ff144f:             return result;
1:0ff144f:         } catch (URISyntaxException e) {
1:0ff144f:             throw IOExceptionSupport.create(e);
1:0ff144f:         }
1:14a98e7:     }
1:e778467: 
1:473b328:     @Override
1:40a7d3b:     protected Transport createTransport(URI location, WireFormat wf) throws MalformedURLException {
1:6cc5f40:         // need to remove options from uri
1:6cc5f40:         URI uri;
1:6cc5f40:         try {
1:6cc5f40:             uri = URISupport.removeQuery(location);
1:6cc5f40:         } catch (URISyntaxException e) {
1:6cc5f40:             MalformedURLException cause = new MalformedURLException("Error removing query on " + location);
1:6cc5f40:             cause.initCause(e);
1:6cc5f40:             throw cause;
1:6cc5f40:         }
1:6cc5f40:         return new HttpsClientTransport(asTextWireFormat(wf), uri);
1:40a7d3b:     }
1:40a7d3b: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:473b328
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:             Map<String, Object> httpOptions = IntrospectionSupport.extractProperties(options, "http.");
1:             result.setHttpOptions(httpOptions);
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:e54a126
/////////////////////////////////////////////////////////////////////////
0:         return new HttpsClientTransport(asTextWireFormat(wf), location);
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:88acb0e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.wireformat.WireFormat;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:f451ad0
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activeio.command.WireFormat;
1: import org.apache.activemq.transport.Transport;
1: import org.apache.activemq.transport.TransportServer;
1: import org.apache.activemq.transport.http.HttpTransportFactory;
1: 
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:8abcfd1
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport.https;
0: import org.apache.activemq.transport.Transport;
0: import org.apache.activemq.transport.TransportServer;
0: import org.apache.activemq.transport.http.HttpTransportFactory;
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:6cc5f40
/////////////////////////////////////////////////////////////////////////
1:         // need to remove options from uri
1:         URI uri;
1:         try {
1:             uri = URISupport.removeQuery(location);
1:         } catch (URISyntaxException e) {
1:             MalformedURLException cause = new MalformedURLException("Error removing query on " + location);
1:             cause.initCause(e);
1:             throw cause;
1:         }
1:         return new HttpsClientTransport(asTextWireFormat(wf), uri);
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:789dc9c
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: import org.apache.activemq.broker.SslContext;
1: import org.apache.activemq.util.IntrospectionSupport;
/////////////////////////////////////////////////////////////////////////
1:             HttpsTransportServer result = new HttpsTransportServer(location, this, SslContext.getCurrentSslContext());
commit:e778467
/////////////////////////////////////////////////////////////////////////
1: 
1: 
/////////////////////////////////////////////////////////////////////////
1: 
commit:0ff144f
/////////////////////////////////////////////////////////////////////////
1: import java.net.URISyntaxException;
0: import java.util.Map;
1: import java.util.HashMap;
0: import org.apache.activemq.util.IntrospectionSupport;
1: import org.apache.activemq.util.IOExceptionSupport;
1: import org.apache.activemq.util.URISupport;
/////////////////////////////////////////////////////////////////////////
1:         return doBind(location);
1:         try {
1:             Map<String, String> options = new HashMap<String, String>(URISupport.parseParameters(location));
0:             HttpsTransportServer result = new HttpsTransportServer(location, this);
1:             Map<String, Object> transportOptions = IntrospectionSupport.extractProperties(options, "transport.");
1:             result.setTransportOption(transportOptions);
1:             return result;
1:         } catch (URISyntaxException e) {
1:             throw IOExceptionSupport.create(e);
1:         }
1:         
author:Gary Tully
-------------------------------------------------------------------------------
commit:ee4c8ee
/////////////////////////////////////////////////////////////////////////
0:         return new HttpsTransportServer(location, this);
0:         return new HttpsTransportServer(location, this);
commit:14a98e7
/////////////////////////////////////////////////////////////////////////
1:     
1:     public TransportServer doBind(URI location) throws IOException {
0:         return new HttpsTransportServer(location);
1:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:40a7d3b
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * 
0:  * Copyright 2005 LogicBlaze, Inc. http://www.logicblaze.com
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
0:  * 
0:  **/
0: package org.activemq.transport.https;
0: 
0: import org.activeio.command.WireFormat;
0: import org.activemq.transport.Transport;
0: import org.activemq.transport.TransportServer;
0: import org.activemq.transport.http.HttpTransportFactory;
0: 
1: import java.io.IOException;
1: import java.net.MalformedURLException;
1: import java.net.URI;
0: 
1: /**
1:  * Factory of HTTPS based transports
0:  * 
0:  * @version $Revision: 1.1 $
1:  */
1: public class HttpsTransportFactory extends HttpTransportFactory {
0:     
1:     public TransportServer doBind(String brokerId, URI location) throws IOException {
0:         return new HttpsTransportServer(location);
1:     }
0: 
1:     protected Transport createTransport(URI location, WireFormat wf) throws MalformedURLException {
0:         return new HttpsTransport(asTextWireFormat(wf), location);
1:     }
0: 
1: }
============================================================================