1:8704338: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:8704338:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8704338:  *
1:8704338:  * Unless required by applicable law or agreed to in writing, software
1:8704338:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8704338:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8704338:  * See the License for the specific language governing permissions and
1:8704338:  * limitations under the License.
1:8704338:  */
1:8704338: package org.apache.activemq.command;
6:8704338: 
1:8704338: import org.apache.activemq.state.CommandVisitor;
1:8704338: 
1:72b382d: /**
1:c2fc820:  * Represents the end marker of a stream of {@link PartialCommand} instances.
1:72b382d:  * 
1:8704338:  * @openwire:marshaller code="61"
1:0bbc0ac:  * 
1:72b382d:  */
1:f3ef1a9: public class LastPartialCommand extends PartialCommand {
1:8704338: 
1:8704338:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.PARTIAL_LAST_COMMAND;
1:c2fc820: 
1:8704338:     public LastPartialCommand() {
1:c2fc820:     }
1:72b382d: 
1:8704338:     public byte getDataStructureType() {
1:8704338:         return DATA_STRUCTURE_TYPE;
3:8704338:     }
1:72b382d: 
1:8704338:     public Response visit(CommandVisitor visitor) throws Exception {
1:c2fc820:         throw new IllegalStateException("The transport layer should filter out LastPartialCommand instances but received: " + this);
1:8704338:     }
1:72b382d: 
1:8704338:     /**
1:f3ef1a9:      * Lets copy across any transient fields from this command 
1:f3ef1a9:      * to the complete command when it is unmarshalled on the other end
1:8704338:      *
1:72b382d:      * @param completeCommand the newly unmarshalled complete command
1:8704338:      */
1:72b382d:     public void configure(Command completeCommand) {
1:f3ef1a9:         // copy across the transient properties added by the low level transport
1:72b382d:         completeCommand.setFrom(getFrom());
1:72b382d:     }
1:8704338: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:f3ef1a9
/////////////////////////////////////////////////////////////////////////
1: public class LastPartialCommand extends PartialCommand {
/////////////////////////////////////////////////////////////////////////
1:      * Lets copy across any transient fields from this command 
1:      * to the complete command when it is unmarshalled on the other end
1:         // copy across the transient properties added by the low level transport
commit:364337b
/////////////////////////////////////////////////////////////////////////
commit:72b382d
/////////////////////////////////////////////////////////////////////////
0:     public LastPartialCommand(boolean responseRequired) {
0:         setResponseRequired(responseRequired);
/////////////////////////////////////////////////////////////////////////
1:     /**
0:      * Lets copy across the required fields from this last partial command to
0:      * the newly unmarshalled complete command
1:      *
1:      * @param completeCommand the newly unmarshalled complete command
1:      */
1:     public void configure(Command completeCommand) {
0:         // overwrite the commandId as the numbers change when we introduce 
0:         // fragmentation commands
0:         completeCommand.setCommandId(getCommandId());
1:         
0:         // copy across the transient properties
1:         completeCommand.setFrom(getFrom());
1: 
0:         // TODO should not be required as the large command would be marshalled with this property
0:         //completeCommand.setResponseRequired(isResponseRequired());
1:     }
1: 
commit:c2fc820
/////////////////////////////////////////////////////////////////////////
1:  * Represents the end marker of a stream of {@link PartialCommand} instances.
0: public class LastPartialCommand extends BaseCommand {
0:     public LastPartialCommand(Command command) {
0:         setCommandId(command.getCommandId());
0:         setResponseRequired(command.isResponseRequired());
1:     }
1: 
1:         throw new IllegalStateException("The transport layer should filter out LastPartialCommand instances but received: " + this);
commit:8704338
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: import org.apache.activemq.state.CommandVisitor;
1: 
1: /**
0:  * Represents a partial command; a large command that has been split up into
0:  * pieces.
1:  * 
1:  * @openwire:marshaller code="61"
0:  * @version $Revision$
1:  */
0: public class LastPartialCommand extends PartialCommand {
1: 
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.PARTIAL_LAST_COMMAND;
1: 
1:     public LastPartialCommand() {
1:     }
1: 
1:     public byte getDataStructureType() {
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
0:     public boolean isLastPart() {
0:         return true;
1:     }
1: 
1:     public Response visit(CommandVisitor visitor) throws Exception {
0:         throw new IllegalStateException("The transport layer should filter out PartialCommand instances but received: " + this);
1:     }
1: 
1: }
============================================================================