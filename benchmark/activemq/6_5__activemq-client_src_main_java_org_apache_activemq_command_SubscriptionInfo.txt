1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
2:f812e34:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.command;
3:d29ca2a: 
1:013f372: import org.apache.activemq.util.IntrospectionSupport;
1:013f372: 
1:d29ca2a: /**
1:2728ccb:  * Used to represent a durable subscription.
1:833d308:  *
1:4afa5d6:  * @openwire:marshaller code="55"
1:833d308:  *
1:d29ca2a:  */
1:d29ca2a: public class SubscriptionInfo implements DataStructure {
1:d29ca2a: 
1:f812e34:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.DURABLE_SUBSCRIPTION_INFO;
1:d29ca2a: 
1:2728ccb:     protected ActiveMQDestination subscribedDestination;
1:d29ca2a:     protected ActiveMQDestination destination;
1:d29ca2a:     protected String clientId;
1:350a2aa:     protected String subscriptionName;
1:d29ca2a:     protected String selector;
1:833d308:     protected boolean noLocal;
1:f812e34: 
1:620523a:     public SubscriptionInfo() {}
1:620523a: 
1:620523a:     public SubscriptionInfo(String clientId, String subscriptionName) {
1:620523a:         this.clientId = clientId;
1:620523a:         this.subscriptionName = subscriptionName;
1:620523a:     }
1:620523a: 
1:833d308:     @Override
1:d29ca2a:     public byte getDataStructureType() {
1:d29ca2a:         return DATA_STRUCTURE_TYPE;
1:2728ccb:     }
1:013f372: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1
1:d29ca2a:      */
1:d29ca2a:     public String getClientId() {
1:d29ca2a:         return clientId;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setClientId(String clientId) {
1:d29ca2a:         this.clientId = clientId;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:f812e34:      * This is the a resolved destination that the subscription is receiving
1:f812e34:      * messages from. This will never be a pattern or a composite destination.
1:833d308:      *
1:d29ca2a:      * @openwire:property version=1 cache=true
1:d29ca2a:      */
1:d29ca2a:     public ActiveMQDestination getDestination() {
1:d29ca2a:         return destination;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setDestination(ActiveMQDestination destination) {
1:d29ca2a:         this.destination = destination;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1
1:d29ca2a:      */
1:d29ca2a:     public String getSelector() {
1:d29ca2a:         return selector;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setSelector(String selector) {
1:d29ca2a:         this.selector = selector;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1
1:d29ca2a:      */
1:d29ca2a:     public String getSubcriptionName() {
1:350a2aa:         return subscriptionName;
1:d29ca2a:     }
1:d29ca2a: 
1:350a2aa:     /**
1:f812e34:      * @param subscriptionName *
1:350a2aa:      */
1:350a2aa:     public void setSubcriptionName(String subscriptionName) {
1:350a2aa:         this.subscriptionName = subscriptionName;
1:d29ca2a:     }
1:f812e34: 
1:350a2aa:     public String getSubscriptionName() {
1:350a2aa:         return subscriptionName;
1:d29ca2a:     }
1:d29ca2a: 
1:350a2aa:     public void setSubscriptionName(String subscriptionName) {
1:350a2aa:         this.subscriptionName = subscriptionName;
1:350a2aa:     }
1:d29ca2a: 
1:833d308:     @Override
1:d29ca2a:     public boolean isMarshallAware() {
1:d29ca2a:         return false;
1:d29ca2a:     }
1:f812e34: 
1:f392884:     @Override
1:013f372:     public String toString() {
1:013f372:         return IntrospectionSupport.toString(this);
1:013f372:     }
1:f812e34: 
1:f392884:     @Override
1:a3e3821:     public int hashCode() {
1:f812e34:         int h1 = clientId != null ? clientId.hashCode() : -1;
1:f812e34:         int h2 = subscriptionName != null ? subscriptionName.hashCode() : -1;
1:0112df5:         return h1 ^ h2;
1:d29ca2a:     }
1:f812e34: 
1:f392884:     @Override
1:f812e34:     public boolean equals(Object obj) {
1:f812e34:         boolean result = false;
1:f812e34:         if (obj instanceof SubscriptionInfo) {
1:f812e34:             SubscriptionInfo other = (SubscriptionInfo)obj;
1:f812e34:             result = (clientId == null && other.clientId == null || clientId != null
1:f812e34:                                                                     && other.clientId != null
1:f812e34:                                                                     && clientId.equals(other.clientId))
1:f812e34:                      && (subscriptionName == null && other.subscriptionName == null || subscriptionName != null
1:f812e34:                                                                                        && other.subscriptionName != null
1:f812e34:                                                                                        && subscriptionName
1:f812e34:                                                                                            .equals(other.subscriptionName));
1:350a2aa:         }
1:0112df5:         return result;
1:2728ccb:     }
1:013f372: 
1:2728ccb:     /**
1:f812e34:      * The destination the client originally subscribed to.. This may not match
1:f812e34:      * the {@see getDestination} method if the subscribed destination uses
1:f812e34:      * patterns or composites.
1:833d308:      *
1:f812e34:      * If the subscribed destinationis not set, this just ruturns the
1:f812e34:      * desitination.
1:833d308:      *
1:2728ccb:      * @openwire:property version=3
1:2728ccb:      */
1:f812e34:     public ActiveMQDestination getSubscribedDestination() {
1:f812e34:         if (subscribedDestination == null) {
1:f812e34:             return getDestination();
1:f812e34:         }
1:f812e34:         return subscribedDestination;
1:f812e34:     }
1:2728ccb: 
1:f812e34:     public void setSubscribedDestination(ActiveMQDestination subscribedDestination) {
1:f812e34:         this.subscribedDestination = subscribedDestination;
1:f812e34:     }
1:2728ccb: 
1:833d308:     /**
1:833d308:      * @openwire:property version=11
1:833d308:      */
1:833d308:     public boolean isNoLocal() {
1:833d308:         return noLocal;
1:833d308:     }
1:833d308: 
1:833d308:     public void setNoLocal(boolean noLocal) {
1:833d308:         this.noLocal = noLocal;
1:833d308:     }
1:2728ccb: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Timothy Bish
-------------------------------------------------------------------------------
commit:833d308
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
/////////////////////////////////////////////////////////////////////////
1:     protected boolean noLocal;
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:      *
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:      *
1:      *
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * @openwire:property version=11
1:      */
1:     public boolean isNoLocal() {
1:         return noLocal;
1:     }
1: 
1:     public void setNoLocal(boolean noLocal) {
1:         this.noLocal = noLocal;
1:     }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:620523a
/////////////////////////////////////////////////////////////////////////
1:     public SubscriptionInfo() {}
1: 
1:     public SubscriptionInfo(String clientId, String subscriptionName) {
1:         this.clientId = clientId;
1:         this.subscriptionName = subscriptionName;
1:     }
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:f812e34
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.DURABLE_SUBSCRIPTION_INFO;
1: 
/////////////////////////////////////////////////////////////////////////
1:      * This is the a resolved destination that the subscription is receiving
1:      * messages from. This will never be a pattern or a composite destination.
/////////////////////////////////////////////////////////////////////////
1:      * @param subscriptionName *
0:      * @deprecated
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:         int h1 = clientId != null ? clientId.hashCode() : -1;
1:         int h2 = subscriptionName != null ? subscriptionName.hashCode() : -1;
1: 
1:     public boolean equals(Object obj) {
1:         boolean result = false;
1:         if (obj instanceof SubscriptionInfo) {
1:             SubscriptionInfo other = (SubscriptionInfo)obj;
1:             result = (clientId == null && other.clientId == null || clientId != null
1:                                                                     && other.clientId != null
1:                                                                     && clientId.equals(other.clientId))
1:                      && (subscriptionName == null && other.subscriptionName == null || subscriptionName != null
1:                                                                                        && other.subscriptionName != null
1:                                                                                        && subscriptionName
1:                                                                                            .equals(other.subscriptionName));
1:      * The destination the client originally subscribed to.. This may not match
1:      * the {@see getDestination} method if the subscribed destination uses
1:      * patterns or composites.
1:      * 
1:      * If the subscribed destinationis not set, this just ruturns the
1:      * desitination.
1:      * 
1:     public ActiveMQDestination getSubscribedDestination() {
1:         if (subscribedDestination == null) {
1:             return getDestination();
1:         }
1:         return subscribedDestination;
1:     }
1:     public void setSubscribedDestination(ActiveMQDestination subscribedDestination) {
1:         this.subscribedDestination = subscribedDestination;
1:     }
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:2728ccb
/////////////////////////////////////////////////////////////////////////
1:  * Used to represent a durable subscription.
/////////////////////////////////////////////////////////////////////////
1:     protected ActiveMQDestination subscribedDestination;
/////////////////////////////////////////////////////////////////////////
0:      * This is the a resolved destination that the subscription is receiving messages from.
0:      * This will never be a pattern or a composite destination.
0:      * 
/////////////////////////////////////////////////////////////////////////
1:     /**
0:      * The destination the client originally subscribed to.. This may not match the {@see getDestination} method
0:      * if the subscribed destination uses patterns or composites.
0:      *  
0:      *  If the subscribed destinationis not set, this just ruturns the desitination.
0:      *  
1:      * @openwire:property version=3
1:      */
0: 	public ActiveMQDestination getSubscribedDestination() {
0: 		if( subscribedDestination == null ) {
0: 			return getDestination();
1: 		}
0: 		return subscribedDestination;
1: 	}
1: 
0: 	public void setSubscribedDestination(ActiveMQDestination subscribedDestination) {
0: 		this.subscribedDestination = subscribedDestination;
1: 	}
1: 
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:013f372
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.IntrospectionSupport;
1: 
/////////////////////////////////////////////////////////////////////////
1:     
1:     public String toString() {
1:         return IntrospectionSupport.toString(this);
1:     }
1: 
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
0:  *
0:  * Copyright 2004 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: 
1: /**
0:  * 
0:  * @openwire:marshaller
0:  * @version $Revision: 1.6 $
1:  */
1: public class SubscriptionInfo implements DataStructure {
1: 
0:     public static final byte DATA_STRUCTURE_TYPE=CommandTypes.DURABLE_SUBSCRIPTION_INFO;
1: 
1:     protected ActiveMQDestination destination;
1:     protected String clientId;
0:     protected String subcriptionName;
1:     protected String selector;
1:     
1:     public byte getDataStructureType() {
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      */
1:     public String getClientId() {
1:         return clientId;
1:     }
1: 
1:     public void setClientId(String clientId) {
1:         this.clientId = clientId;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
1:     public ActiveMQDestination getDestination() {
1:         return destination;
1:     }
1: 
1:     public void setDestination(ActiveMQDestination destination) {
1:         this.destination = destination;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      */
1:     public String getSelector() {
1:         return selector;
1:     }
1: 
1:     public void setSelector(String selector) {
1:         this.selector = selector;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      */
1:     public String getSubcriptionName() {
0:         return subcriptionName;
1:     }
1: 
0:     public void setSubcriptionName(String subcriptionName) {
0:         this.subcriptionName = subcriptionName;
1:     }
1: 
1:     public boolean isMarshallAware() {
1:         return false;
1:     }
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:f392884
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
1:     @Override
commit:350a2aa
/////////////////////////////////////////////////////////////////////////
1:     protected String subscriptionName;
/////////////////////////////////////////////////////////////////////////
0:      * @deprecated
1:         return subscriptionName;
1:     /**
0:      * @param subscriptionName
0:      *  * @deprecated
1:      */
1:     public void setSubcriptionName(String subscriptionName) {
1:         this.subscriptionName = subscriptionName;
1:     }
0:     
1:     public String getSubscriptionName() {
1:         return subscriptionName;
1:     }
0: 
1:     public void setSubscriptionName(String subscriptionName) {
1:         this.subscriptionName = subscriptionName;
/////////////////////////////////////////////////////////////////////////
0:         int h2 = subscriptionName != null ? subscriptionName.hashCode():-1;
/////////////////////////////////////////////////////////////////////////
0:                     &&(subscriptionName==null&&other.subscriptionName==null||subscriptionName!=null
0:                             &&other.subscriptionName!=null&&subscriptionName.equals(other.subscriptionName));
commit:a3e3821
/////////////////////////////////////////////////////////////////////////
1:     public int hashCode() {
commit:0112df5
/////////////////////////////////////////////////////////////////////////
0:     
0:     public int hasCode() {
0:         int h1 = clientId != null ? clientId.hashCode():-1;
0:         int h2 = subcriptionName != null ? subcriptionName.hashCode():-1;
1:         return h1 ^ h2;
0:     }
0:     
0:     public boolean equals(Object obj){
0:         boolean result=false;
0:         if(obj instanceof SubscriptionInfo){
0:             SubscriptionInfo other=(SubscriptionInfo)obj;
0:             result=(clientId==null&&other.clientId==null||clientId!=null&&other.clientId!=null
0:                     &&clientId.equals(other.clientId))
0:                     &&(subcriptionName==null&&other.subcriptionName==null||subcriptionName!=null
0:                             &&other.subcriptionName!=null&&subcriptionName.equals(other.subcriptionName));
0:         }
1:         return result;
0:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:4afa5d6
/////////////////////////////////////////////////////////////////////////
1:  * @openwire:marshaller code="55"
============================================================================