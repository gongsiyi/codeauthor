1:ec87b17: /**
1:ec87b17:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:ec87b17:  * contributor license agreements.  See the NOTICE file distributed with
1:ec87b17:  * this work for additional information regarding copyright ownership.
1:ec87b17:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:ec87b17:  * (the "License"); you may not use this file except in compliance with
1:ec87b17:  * the License.  You may obtain a copy of the License at
1:ec87b17:  *
1:ec87b17:  *      http://www.apache.org/licenses/LICENSE-2.0
1:ec87b17:  *
1:ec87b17:  * Unless required by applicable law or agreed to in writing, software
1:ec87b17:  * distributed under the License is distributed on an "AS IS" BASIS,
1:ec87b17:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ec87b17:  * See the License for the specific language governing permissions and
1:ec87b17:  * limitations under the License.
1:ec87b17:  */
2:ec87b17: 
1:ec87b17: package org.apache.activemq.transport.stomp;
1:ec87b17: 
1:ec87b17: import java.io.IOException;
1:ec87b17: import java.net.Socket;
1:ec87b17: 
1:ec87b17: import javax.net.SocketFactory;
1:ec87b17: import javax.net.ssl.SSLSocketFactory;
1:ec87b17: 
1:ec87b17: public class StompSSLLoadTest extends StompLoadTest {
1:ec87b17: 
1:ec87b17:     @Override
1:540a66b:     protected boolean isUseTcpConnector() {
1:540a66b:         return false;
1:ec87b17:     }
1:ec87b17: 
1:ec87b17:     @Override
1:540a66b:     protected boolean isUseSslConnector() {
1:540a66b:         return true;
1:ec87b17:     }
1:ec87b17: 
1:ec87b17:     @Override
1:1236bbf:     protected Socket createSocket() throws IOException {
1:ec87b17:         SocketFactory factory = SSLSocketFactory.getDefault();
1:1236bbf:         return factory.createSocket("127.0.0.1", this.sslPort);
1:ec87b17:     }
1:ec87b17: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:540a66b
/////////////////////////////////////////////////////////////////////////
1:     protected boolean isUseTcpConnector() {
1:         return false;
1:     protected boolean isUseSslConnector() {
1:         return true;
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:1236bbf
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.broker.TransportConnector;
/////////////////////////////////////////////////////////////////////////
0:     protected void addStompConnector() throws Exception {
0:         TransportConnector connector = brokerService.addConnector("stomp+ssl://0.0.0.0:"+sslPort);
0:         sslPort = connector.getConnectUri().getPort();
1:     protected Socket createSocket() throws IOException {
1:         return factory.createSocket("127.0.0.1", this.sslPort);
commit:ec87b17
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.transport.stomp;
1: 
1: import java.io.IOException;
1: import java.net.Socket;
0: import java.net.URI;
1: 
1: import javax.net.SocketFactory;
1: import javax.net.ssl.SSLSocketFactory;
1: 
0: import org.junit.After;
0: import org.junit.Before;
1: 
1: public class StompSSLLoadTest extends StompLoadTest {
1: 
0:     @Before
1:     @Override
0:     public void setUp() throws Exception {
0:         bindAddress = "stomp+ssl://localhost:61612";
0:         confUri = "xbean:org/apache/activemq/transport/stomp/sslstomp-auth-broker.xml";
0:         System.setProperty("javax.net.ssl.trustStore", "src/test/resources/client.keystore");
0:         System.setProperty("javax.net.ssl.trustStorePassword", "password");
0:         System.setProperty("javax.net.ssl.trustStoreType", "jks");
0:         System.setProperty("javax.net.ssl.keyStore", "src/test/resources/server.keystore");
0:         System.setProperty("javax.net.ssl.keyStorePassword", "password");
0:         System.setProperty("javax.net.ssl.keyStoreType", "jks");
0:         super.setUp();
1:     }
1: 
0:     @After
1:     @Override
0:     public void tearDown() throws Exception {
0:         super.tearDown();
1:     }
1: 
1:     @Override
0:     protected Socket createSocket(URI connectUri) throws IOException {
1:         SocketFactory factory = SSLSocketFactory.getDefault();
0:         return factory.createSocket("127.0.0.1", connectUri.getPort());
1:     }
1: }
============================================================================