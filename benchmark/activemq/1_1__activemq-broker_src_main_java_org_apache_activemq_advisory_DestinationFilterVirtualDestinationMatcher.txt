1:cc81680: /**
1:cc81680:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:cc81680:  * contributor license agreements.  See the NOTICE file distributed with
1:cc81680:  * this work for additional information regarding copyright ownership.
1:cc81680:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:cc81680:  * (the "License"); you may not use this file except in compliance with
1:cc81680:  * the License.  You may obtain a copy of the License at
1:cc81680:  *
1:cc81680:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cc81680:  *
1:cc81680:  * Unless required by applicable law or agreed to in writing, software
1:cc81680:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cc81680:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cc81680:  * See the License for the specific language governing permissions and
1:cc81680:  * limitations under the License.
1:cc81680:  */
1:cc81680: package org.apache.activemq.advisory;
1:cc81680: 
1:cc81680: import org.apache.activemq.broker.region.virtual.CompositeDestination;
1:cc81680: import org.apache.activemq.broker.region.virtual.VirtualDestination;
1:cc81680: import org.apache.activemq.broker.region.virtual.VirtualTopic;
1:cc81680: import org.apache.activemq.command.ActiveMQDestination;
1:cc81680: import org.apache.activemq.command.ActiveMQQueue;
1:cc81680: import org.apache.activemq.filter.DestinationFilter;
1:cc81680: 
1:cc81680: /**
1:cc81680:  * This class will use a destination filter to see if the activeMQ destination matches
1:cc81680:  * the given virtual destination
1:cc81680:  *
1:cc81680:  */
1:cc81680: public class DestinationFilterVirtualDestinationMatcher implements VirtualDestinationMatcher {
1:cc81680: 
1:cc81680:     /* (non-Javadoc)
1:cc81680:      * @see org.apache.activemq.advisory.VirtualDestinationMatcher#matches(org.apache.activemq.broker.region.virtual.VirtualDestination)
1:cc81680:      */
1:cc81680:     @Override
1:cc81680:     public boolean matches(VirtualDestination virtualDestination, ActiveMQDestination activeMQDest) {
1:cc81680:         if (virtualDestination instanceof CompositeDestination) {
1:cc81680:             DestinationFilter filter = DestinationFilter.parseFilter(virtualDestination.getMappedDestinations());
1:cc81680:             if (filter.matches(activeMQDest)) {
1:cc81680:                 return true;
1:cc81680:             }
1:cc81680:         } else if (virtualDestination instanceof VirtualTopic) {
1:cc81680:             DestinationFilter filter = DestinationFilter.parseFilter(new ActiveMQQueue(((VirtualTopic) virtualDestination).getPrefix() + DestinationFilter.ANY_DESCENDENT));
1:cc81680:             if (filter.matches(activeMQDest)) {
1:cc81680:                 return true;
1:cc81680:             }
1:cc81680:         }
1:cc81680: 
1:cc81680:         return false;
1:cc81680:     }
1:cc81680: 
1:cc81680: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:cc81680
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.advisory;
1: 
1: import org.apache.activemq.broker.region.virtual.CompositeDestination;
1: import org.apache.activemq.broker.region.virtual.VirtualDestination;
1: import org.apache.activemq.broker.region.virtual.VirtualTopic;
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.activemq.filter.DestinationFilter;
1: 
1: /**
1:  * This class will use a destination filter to see if the activeMQ destination matches
1:  * the given virtual destination
1:  *
1:  */
1: public class DestinationFilterVirtualDestinationMatcher implements VirtualDestinationMatcher {
1: 
1:     /* (non-Javadoc)
1:      * @see org.apache.activemq.advisory.VirtualDestinationMatcher#matches(org.apache.activemq.broker.region.virtual.VirtualDestination)
1:      */
1:     @Override
1:     public boolean matches(VirtualDestination virtualDestination, ActiveMQDestination activeMQDest) {
1:         if (virtualDestination instanceof CompositeDestination) {
1:             DestinationFilter filter = DestinationFilter.parseFilter(virtualDestination.getMappedDestinations());
1:             if (filter.matches(activeMQDest)) {
1:                 return true;
1:             }
1:         } else if (virtualDestination instanceof VirtualTopic) {
1:             DestinationFilter filter = DestinationFilter.parseFilter(new ActiveMQQueue(((VirtualTopic) virtualDestination).getPrefix() + DestinationFilter.ANY_DESCENDENT));
1:             if (filter.matches(activeMQDest)) {
1:                 return true;
1:             }
1:         }
1: 
1:         return false;
1:     }
1: 
1: }
============================================================================