1:a107823: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a107823:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a107823:  *
1:a107823:  * Unless required by applicable law or agreed to in writing, software
1:a107823:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a107823:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a107823:  * See the License for the specific language governing permissions and
1:a107823:  * limitations under the License.
1:a107823:  */
1:a107823: package org.apache.activemq.console.util;
2:a107823: 
1:a107823: import java.net.URI;
1:a107823: import java.util.List;
1:a107823: import java.util.Set;
1:a107823: 
1:e34ec0b: import javax.jms.ConnectionFactory;
1:5f1adbe: import javax.jms.Destination;
1:5f1adbe: 
1:5f1adbe: import org.apache.activemq.console.filter.AmqMessagesQueryFilter;
1:5f1adbe: import org.apache.activemq.console.filter.GroupPropertiesViewFilter;
1:5f1adbe: import org.apache.activemq.console.filter.MapTransformFilter;
1:5f1adbe: import org.apache.activemq.console.filter.PropertiesViewFilter;
1:5f1adbe: import org.apache.activemq.console.filter.QueryFilter;
1:5f1adbe: import org.apache.activemq.console.filter.StubQueryFilter;
1:5f1adbe: import org.apache.activemq.console.filter.WildcardToMsgSelectorTransformFilter;
1:5f1adbe: 
1:5f1adbe: public final class AmqMessagesUtil {
1:5f1adbe: 
1:a107823:     public static final String JMS_MESSAGE_HEADER_PREFIX = "JMS_HEADER_FIELD:";
1:a107823:     public static final String JMS_MESSAGE_CUSTOM_PREFIX = "JMS_CUSTOM_FIELD:";
1:5f1adbe:     public static final String JMS_MESSAGE_BODY_PREFIX = "JMS_BODY_FIELD:";
1:5f1adbe: 
1:5f1adbe:     private AmqMessagesUtil() {
1:5f1adbe:     }
1:a107823: 
1:a107823:     public static List getAllMessages(URI brokerUrl, Destination dest) throws Exception {
1:5f1adbe:         return getMessages(brokerUrl, dest, "");
1:a107823:     }
1:a107823: 
1:a107823:     public static List getMessages(URI brokerUrl, Destination dest, String selector) throws Exception {
1:a107823:         return createMessageQueryFilter(brokerUrl, dest).query(selector);
1:a107823:     }
1:a107823: 
1:e34ec0b:     public static List getMessages(ConnectionFactory connectionFactory, Destination dest, String selector) throws Exception {
1:e34ec0b:         return createMessageQueryFilter(connectionFactory, dest).query(selector);
1:e34ec0b:     }
1:e34ec0b: 
1:a107823:     public static List getMessages(URI brokerUrl, Destination dest, List selectors) throws Exception {
1:a107823:         return createMessageQueryFilter(brokerUrl, dest).query(selectors);
1:a107823:     }
1:a107823: 
1:e34ec0b:     public static List getMessages(ConnectionFactory connectionFactory, Destination dest, List selectors) throws Exception {
1:e34ec0b:         return createMessageQueryFilter(connectionFactory, dest).query(selectors);
1:e34ec0b:     }
1:e34ec0b: 
1:a107823:     public static List filterMessagesView(List messages, Set groupViews, Set attributeViews) throws Exception {
1:5f1adbe:         return (new PropertiesViewFilter(attributeViews, new GroupPropertiesViewFilter(groupViews, new MapTransformFilter(new StubQueryFilter(messages))))).query("");
1:a107823:     }
1:a107823: 
1:a107823:     public static QueryFilter createMessageQueryFilter(URI brokerUrl, Destination dest) {
1:5f1adbe:         return new WildcardToMsgSelectorTransformFilter(new AmqMessagesQueryFilter(brokerUrl, dest));
1:a107823:     }
1:e34ec0b: 
1:e34ec0b:     public static QueryFilter createMessageQueryFilter(ConnectionFactory connectionFactory, Destination dest) {
1:e34ec0b:         return new WildcardToMsgSelectorTransformFilter(new AmqMessagesQueryFilter(connectionFactory, dest));
1:e34ec0b:     }
1:a107823: }
============================================================================
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:e34ec0b
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.ConnectionFactory;
/////////////////////////////////////////////////////////////////////////
1:     public static List getMessages(ConnectionFactory connectionFactory, Destination dest, String selector) throws Exception {
1:         return createMessageQueryFilter(connectionFactory, dest).query(selector);
1:     }
1: 
1:     public static List getMessages(ConnectionFactory connectionFactory, Destination dest, List selectors) throws Exception {
1:         return createMessageQueryFilter(connectionFactory, dest).query(selectors);
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     public static QueryFilter createMessageQueryFilter(ConnectionFactory connectionFactory, Destination dest) {
1:         return new WildcardToMsgSelectorTransformFilter(new AmqMessagesQueryFilter(connectionFactory, dest));
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.Destination;
1: 
1: import org.apache.activemq.console.filter.AmqMessagesQueryFilter;
1: import org.apache.activemq.console.filter.GroupPropertiesViewFilter;
1: import org.apache.activemq.console.filter.MapTransformFilter;
1: import org.apache.activemq.console.filter.PropertiesViewFilter;
1: import org.apache.activemq.console.filter.QueryFilter;
1: import org.apache.activemq.console.filter.StubQueryFilter;
1: import org.apache.activemq.console.filter.WildcardToMsgSelectorTransformFilter;
1: 
1: public final class AmqMessagesUtil {
1: 
1:     public static final String JMS_MESSAGE_BODY_PREFIX = "JMS_BODY_FIELD:";
1: 
1:     private AmqMessagesUtil() {
1:     }
1:         return getMessages(brokerUrl, dest, "");
/////////////////////////////////////////////////////////////////////////
1:         return (new PropertiesViewFilter(attributeViews, new GroupPropertiesViewFilter(groupViews, new MapTransformFilter(new StubQueryFilter(messages))))).query("");
1:         return new WildcardToMsgSelectorTransformFilter(new AmqMessagesQueryFilter(brokerUrl, dest));
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:a107823
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.console.util;
1: 
0: import org.apache.activemq.console.filter.QueryFilter;
0: import org.apache.activemq.console.filter.WildcardToMsgSelectorTransformFilter;
0: import org.apache.activemq.console.filter.PropertiesViewFilter;
0: import org.apache.activemq.console.filter.StubQueryFilter;
0: import org.apache.activemq.console.filter.MapTransformFilter;
0: import org.apache.activemq.console.filter.GroupPropertiesViewFilter;
0: import org.apache.activemq.console.filter.AmqMessagesQueryFilter;
1: 
0: import javax.jms.Destination;
1: import java.net.URI;
1: import java.util.List;
1: import java.util.Set;
1: 
0: public class AmqMessagesUtil {
1:     public static final String JMS_MESSAGE_HEADER_PREFIX = "JMS_HEADER_FIELD:";
1:     public static final String JMS_MESSAGE_CUSTOM_PREFIX = "JMS_CUSTOM_FIELD:";
0:     public static final String JMS_MESSAGE_BODY_PREFIX   = "JMS_BODY_FIELD:";
1: 
1:     public static List getAllMessages(URI brokerUrl, Destination dest) throws Exception {
0:        return getMessages(brokerUrl, dest, "");
1:     }
1: 
1:     public static List getMessages(URI brokerUrl, Destination dest, String selector) throws Exception {
1:         return createMessageQueryFilter(brokerUrl, dest).query(selector);
1:     }
1: 
1:     public static List getMessages(URI brokerUrl, Destination dest, List selectors) throws Exception {
1:         return createMessageQueryFilter(brokerUrl, dest).query(selectors);
1:     }
1: 
1:     public static List filterMessagesView(List messages, Set groupViews, Set attributeViews) throws Exception {
0:         return (new PropertiesViewFilter(attributeViews,
0:             new GroupPropertiesViewFilter(groupViews,
0:                 new MapTransformFilter(
0:                     new StubQueryFilter(messages)
0:                 )
0:             )
0:         )).query("");
1:     }
1: 
1:     public static QueryFilter createMessageQueryFilter(URI brokerUrl, Destination dest) {
0:         return new WildcardToMsgSelectorTransformFilter(
0:             new AmqMessagesQueryFilter(brokerUrl, dest)
0:         );
1:     }
1: }
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:35bfe5c
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.console.filter.AmqMessagesQueryFilter;
/////////////////////////////////////////////////////////////////////////
0:             new AmqMessagesQueryFilter(brokerUrl, dest)
commit:7fa8660
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.console.util;
0: import org.apache.activemq.console.filter.QueryFilter;
0: import org.apache.activemq.console.filter.WildcardToMsgSelectorTransformFilter;
0: import org.apache.activemq.console.filter.MessagesQueryFilter;
0: import org.apache.activemq.console.filter.PropertiesViewFilter;
0: import org.apache.activemq.console.filter.StubQueryFilter;
0: import org.apache.activemq.console.filter.MapTransformFilter;
0: import org.apache.activemq.console.filter.GroupPropertiesViewFilter;
commit:4b8822f
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.broker.console;
0: 
0: import org.apache.activemq.broker.console.filter.QueryFilter;
0: import org.apache.activemq.broker.console.filter.WildcardToMsgSelectorTransformFilter;
0: import org.apache.activemq.broker.console.filter.MessagesQueryFilter;
0: import org.apache.activemq.broker.console.filter.PropertiesViewFilter;
0: import org.apache.activemq.broker.console.filter.StubQueryFilter;
0: import org.apache.activemq.broker.console.filter.MapTransformFilter;
0: import org.apache.activemq.broker.console.filter.GroupPropertiesViewFilter;
0: 
0: import javax.jms.Destination;
0: import java.net.URI;
0: import java.util.List;
0: import java.util.Set;
0: 
0: public class AmqMessagesUtil {
0:     public static final String JMS_MESSAGE_HEADER_PREFIX = "JMS_HEADER_FIELD:";
0:     public static final String JMS_MESSAGE_CUSTOM_PREFIX = "JMS_CUSTOM_FIELD:";
0:     public static final String JMS_MESSAGE_BODY_PREFIX   = "JMS_BODY_FIELD:";
0: 
0:     public static List getAllMessages(URI brokerUrl, Destination dest) throws Exception {
0:        return getMessages(brokerUrl, dest, "");
0:     }
0: 
0:     public static List getMessages(URI brokerUrl, Destination dest, String selector) throws Exception {
0:         return createMessageQueryFilter(brokerUrl, dest).query(selector);
0:     }
0: 
0:     public static List getMessages(URI brokerUrl, Destination dest, List selectors) throws Exception {
0:         return createMessageQueryFilter(brokerUrl, dest).query(selectors);
0:     }
0: 
0:     public static List filterMessagesView(List messages, Set groupViews, Set attributeViews) throws Exception {
0:         return (new PropertiesViewFilter(attributeViews,
0:             new GroupPropertiesViewFilter(groupViews,
0:                 new MapTransformFilter(
0:                     new StubQueryFilter(messages)
0:                 )
0:             )
0:         )).query("");
0:     }
0: 
0:     public static QueryFilter createMessageQueryFilter(URI brokerUrl, Destination dest) {
0:         return new WildcardToMsgSelectorTransformFilter(
0:             new MessagesQueryFilter(brokerUrl, dest)
0:         );
0:     }
0: }
============================================================================