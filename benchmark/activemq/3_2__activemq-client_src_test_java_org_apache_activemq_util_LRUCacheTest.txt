1:261ccab: /**
1:261ccab:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:261ccab:  * contributor license agreements.  See the NOTICE file distributed with
1:261ccab:  * this work for additional information regarding copyright ownership.
1:261ccab:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:261ccab:  * (the "License"); you may not use this file except in compliance with
1:261ccab:  * the License.  You may obtain a copy of the License at
1:261ccab:  *
1:261ccab:  *      http://www.apache.org/licenses/LICENSE-2.0
1:261ccab:  *
1:261ccab:  * Unless required by applicable law or agreed to in writing, software
1:261ccab:  * distributed under the License is distributed on an "AS IS" BASIS,
1:261ccab:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:261ccab:  * See the License for the specific language governing permissions and
1:261ccab:  * limitations under the License.
1:261ccab:  */
1:429869d: package org.apache.activemq.util;
1:429869d: 
1:429869d: import static org.junit.Assert.assertEquals;
1:429869d: 
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:429869d: import org.junit.Test;
1:429869d: 
1:429869d: public class LRUCacheTest {
1:8bf987b:     protected static final Logger LOG = LoggerFactory.getLogger(LRUCacheTest.class);
1:429869d:     
1:429869d:     @Test
1:429869d:     public void testResize() throws Exception {
1:429869d:         LRUCache<Long, Long> underTest = new LRUCache<Long, Long>(1000);
1:429869d:         
1:429869d:         Long count = new Long(0);
1:429869d:         long max = 0;
1:429869d:         for (; count < 27276827; count++) {
1:429869d:             long start = System.currentTimeMillis();
1:429869d:             if (!underTest.containsKey(count)) {
1:429869d:                 underTest.put(count, count);
1:429869d:             }
1:429869d:             long duration = System.currentTimeMillis() - start;
1:429869d:             if (duration > max) {
1:429869d:                 LOG.info("count: " + count + ", new max=" + duration);
1:429869d:                 max = duration;
1:429869d:             }
1:429869d:             if (count % 100000000 == 0) {
1:429869d:                 LOG.info("count: " + count + ", max=" + max);
1:429869d:             }
1:429869d:         }
1:429869d:         assertEquals("size is still in order", 1000, underTest.size());
1:429869d:     }
1:429869d: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     protected static final Logger LOG = LoggerFactory.getLogger(LRUCacheTest.class);
commit:261ccab
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Gary Tully
-------------------------------------------------------------------------------
commit:429869d
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.util;
1: 
1: import static org.junit.Assert.assertEquals;
1: 
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: import org.junit.Test;
1: 
1: public class LRUCacheTest {
0:     protected static final Log LOG = LogFactory.getLog(LRUCacheTest.class);
1:     
1:     @Test
1:     public void testResize() throws Exception {
1:         LRUCache<Long, Long> underTest = new LRUCache<Long, Long>(1000);
1:         
1:         Long count = new Long(0);
1:         long max = 0;
1:         for (; count < 27276827; count++) {
1:             long start = System.currentTimeMillis();
1:             if (!underTest.containsKey(count)) {
1:                 underTest.put(count, count);
1:             }
1:             long duration = System.currentTimeMillis() - start;
1:             if (duration > max) {
1:                 LOG.info("count: " + count + ", new max=" + duration);
1:                 max = duration;
1:             }
1:             if (count % 100000000 == 0) {
1:                 LOG.info("count: " + count + ", max=" + max);
1:             }
1:         }
1:         assertEquals("size is still in order", 1000, underTest.size());
1:     }
1: }
============================================================================