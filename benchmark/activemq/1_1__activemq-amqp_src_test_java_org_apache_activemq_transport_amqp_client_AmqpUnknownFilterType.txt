1:1a0f73e: /**
1:1a0f73e:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1a0f73e:  * contributor license agreements.  See the NOTICE file distributed with
1:1a0f73e:  * this work for additional information regarding copyright ownership.
1:1a0f73e:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1a0f73e:  * (the "License"); you may not use this file except in compliance with
1:1a0f73e:  * the License.  You may obtain a copy of the License at
1:1a0f73e:  *
1:1a0f73e:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1a0f73e:  *
1:1a0f73e:  * Unless required by applicable law or agreed to in writing, software
1:1a0f73e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1a0f73e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1a0f73e:  * See the License for the specific language governing permissions and
1:1a0f73e:  * limitations under the License.
1:1a0f73e:  */
1:1a0f73e: package org.apache.activemq.transport.amqp.client;
1:1a0f73e: 
1:1a0f73e: import org.apache.qpid.proton.amqp.DescribedType;
1:ca456c4: import org.apache.qpid.proton.amqp.Symbol;
1:1a0f73e: import org.apache.qpid.proton.amqp.UnsignedLong;
1:1a0f73e: 
1:1a0f73e: /**
1:1a0f73e:  * A Described Type wrapper for an unsupported filter that the broker should ignore.
1:1a0f73e:  */
1:1a0f73e: public class AmqpUnknownFilterType implements DescribedType {
1:1a0f73e: 
1:1a0f73e:     public static final AmqpUnknownFilterType UNKOWN_FILTER = new AmqpUnknownFilterType();
1:1a0f73e: 
1:ca456c4:     public static final UnsignedLong UNKNOWN_FILTER_CODE = UnsignedLong.valueOf(0x0000468C00000099L);
1:ca456c4:     public static final Symbol UNKNOWN_FILTER_NAME = Symbol.valueOf("apache.org:unkown-filter:string");
1:ca456c4:     public static final Object[] UNKNOWN_FILTER_IDS = new Object[] { UNKNOWN_FILTER_CODE, UNKNOWN_FILTER_NAME };
1:ca456c4: 
1:1a0f73e:     private final String payload;
1:1a0f73e: 
1:1a0f73e:     public AmqpUnknownFilterType() {
1:1a0f73e:         this.payload = "UnknownFilter{}";
1:1a0f73e:     }
1:1a0f73e: 
1:1a0f73e:     @Override
1:1a0f73e:     public Object getDescriptor() {
1:ca456c4:         return UNKNOWN_FILTER_CODE;
1:1a0f73e:     }
1:1a0f73e: 
1:1a0f73e:     @Override
1:1a0f73e:     public Object getDescribed() {
1:1a0f73e:         return this.payload;
1:1a0f73e:     }
1:1a0f73e: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:ca456c4
/////////////////////////////////////////////////////////////////////////
1: import org.apache.qpid.proton.amqp.Symbol;
/////////////////////////////////////////////////////////////////////////
1:     public static final UnsignedLong UNKNOWN_FILTER_CODE = UnsignedLong.valueOf(0x0000468C00000099L);
1:     public static final Symbol UNKNOWN_FILTER_NAME = Symbol.valueOf("apache.org:unkown-filter:string");
1:     public static final Object[] UNKNOWN_FILTER_IDS = new Object[] { UNKNOWN_FILTER_CODE, UNKNOWN_FILTER_NAME };
1: 
/////////////////////////////////////////////////////////////////////////
1:         return UNKNOWN_FILTER_CODE;
commit:1a0f73e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.client;
1: 
1: import org.apache.qpid.proton.amqp.DescribedType;
1: import org.apache.qpid.proton.amqp.UnsignedLong;
1: 
1: /**
1:  * A Described Type wrapper for an unsupported filter that the broker should ignore.
1:  */
1: public class AmqpUnknownFilterType implements DescribedType {
1: 
1:     public static final AmqpUnknownFilterType UNKOWN_FILTER = new AmqpUnknownFilterType();
1: 
1:     private final String payload;
1: 
1:     public AmqpUnknownFilterType() {
1:         this.payload = "UnknownFilter{}";
1:     }
1: 
1:     @Override
1:     public Object getDescriptor() {
0:         return UnsignedLong.valueOf(0x0000468C00000099L);
1:     }
1: 
1:     @Override
1:     public Object getDescribed() {
1:         return this.payload;
1:     }
1: }
============================================================================