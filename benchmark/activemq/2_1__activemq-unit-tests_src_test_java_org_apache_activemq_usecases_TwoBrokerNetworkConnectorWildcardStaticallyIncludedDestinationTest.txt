1:2a558c8: /**
1:2a558c8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:2a558c8:  * contributor license agreements.  See the NOTICE file distributed with
1:2a558c8:  * this work for additional information regarding copyright ownership.
1:2a558c8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:2a558c8:  * (the "License"); you may not use this file except in compliance with
1:2a558c8:  * the License.  You may obtain a copy of the License at
1:2a558c8:  *
1:2a558c8:  *      http://www.apache.org/licenses/LICENSE-2.0
1:2a558c8:  *
1:2a558c8:  * Unless required by applicable law or agreed to in writing, software
1:2a558c8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2a558c8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2a558c8:  * See the License for the specific language governing permissions and
1:2a558c8:  * limitations under the License.
1:2a558c8:  */
1:2a558c8: package org.apache.activemq.usecases;
1:2a558c8: 
1:2a558c8: import org.apache.activemq.command.ActiveMQDestination;
1:2a558c8: import org.apache.activemq.network.NetworkConnector;
1:2a558c8: 
1:2a558c8: public class TwoBrokerNetworkConnectorWildcardStaticallyIncludedDestinationTest extends AbstractTwoBrokerNetworkConnectorWildcardIncludedDestinationTestSupport {
1:2a558c8: 	
1:2a558c8:     protected void addIncludedDestination(NetworkConnector nc) {
1:2a558c8:         nc.addExcludedDestination(ActiveMQDestination.createDestination("local.>", ActiveMQDestination.QUEUE_TYPE));
1:2a558c8:         nc.addExcludedDestination(ActiveMQDestination.createDestination("local.>", ActiveMQDestination.TOPIC_TYPE));
1:2a558c8:         nc.addExcludedDestination(ActiveMQDestination.createDestination("Consumer.*.local.>", ActiveMQDestination.QUEUE_TYPE));
1:2a558c8:         nc.addStaticallyIncludedDestination(ActiveMQDestination.createDestination("global.>", ActiveMQDestination.QUEUE_TYPE));
1:2a558c8:         nc.addStaticallyIncludedDestination(ActiveMQDestination.createDestination("global.>", ActiveMQDestination.TOPIC_TYPE));
1:2a558c8:         nc.addStaticallyIncludedDestination(ActiveMQDestination.createDestination("Consumer.*.global.>", ActiveMQDestination.QUEUE_TYPE));
1:2a558c8:     }
1:2a558c8:     
1:2a558c8: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:2a558c8
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.network.NetworkConnector;
1: 
1: public class TwoBrokerNetworkConnectorWildcardStaticallyIncludedDestinationTest extends AbstractTwoBrokerNetworkConnectorWildcardIncludedDestinationTestSupport {
1: 	
1:     protected void addIncludedDestination(NetworkConnector nc) {
1:         nc.addExcludedDestination(ActiveMQDestination.createDestination("local.>", ActiveMQDestination.QUEUE_TYPE));
1:         nc.addExcludedDestination(ActiveMQDestination.createDestination("local.>", ActiveMQDestination.TOPIC_TYPE));
1:         nc.addExcludedDestination(ActiveMQDestination.createDestination("Consumer.*.local.>", ActiveMQDestination.QUEUE_TYPE));
1:         nc.addStaticallyIncludedDestination(ActiveMQDestination.createDestination("global.>", ActiveMQDestination.QUEUE_TYPE));
1:         nc.addStaticallyIncludedDestination(ActiveMQDestination.createDestination("global.>", ActiveMQDestination.TOPIC_TYPE));
1:         nc.addStaticallyIncludedDestination(ActiveMQDestination.createDestination("Consumer.*.global.>", ActiveMQDestination.QUEUE_TYPE));
1:     }
1:     
1: }
============================================================================