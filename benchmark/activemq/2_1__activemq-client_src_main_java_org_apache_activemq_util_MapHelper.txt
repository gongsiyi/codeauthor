1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:5be5a62:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5be5a62:  *
1:5be5a62:  * Unless required by applicable law or agreed to in writing, software
1:5be5a62:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5be5a62:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5be5a62:  * See the License for the specific language governing permissions and
1:5be5a62:  * limitations under the License.
1:5be5a62:  */
1:d29ca2a: package org.apache.activemq.util;
1:d29ca2a: 
1:d29ca2a: import java.util.Map;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * A bunch of utility methods for working with maps
1:b0c2a40:  * 
1:74a7a8b:  * 
1:d29ca2a:  */
1:933eb2f: public final class MapHelper {
1:933eb2f: 
1:933eb2f:     private MapHelper() {
1:933eb2f:     }
1:933eb2f: 
1:d29ca2a:     /**
1:d29ca2a:      * Extracts the value from the map and coerces to a String
1:d29ca2a:      */
1:d29ca2a:     public static String getString(Map map, String key) {
1:d29ca2a:         Object answer = map.get(key);
1:d29ca2a:         return (answer != null) ? answer.toString() : null;
2:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:74a7a8b:      * Extracts the value from the map and coerces to an int value or returns a
1:74a7a8b:      * default value if one could not be found or coerced
1:d29ca2a:      */
1:d29ca2a:     public static int getInt(Map map, String key, int defaultValue) {
1:d29ca2a:         Object value = map.get(key);
1:d29ca2a:         if (value instanceof Number) {
1:74a7a8b:             return ((Number)value).intValue();
1:74a7a8b:         } else if (value instanceof String) {
1:74a7a8b:             return Integer.parseInt((String)value);
1:d29ca2a:         }
1:d29ca2a:         return defaultValue;
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1: public final class MapHelper {
1: 
1:     private MapHelper() {
1:     }
1: 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1:  * 
/////////////////////////////////////////////////////////////////////////
1:      * Extracts the value from the map and coerces to an int value or returns a
1:      * default value if one could not be found or coerced
1:             return ((Number)value).intValue();
1:         } else if (value instanceof String) {
1:             return Integer.parseInt((String)value);
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
0: * <a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a>
0: *
0: * Copyright 2005 (C) LogicBlaze, Inc. http://www.logicblaze.com
0: *
0: * Licensed under the Apache License, Version 2.0 (the "License");
0: * you may not use this file except in compliance with the License.
0: * You may obtain a copy of the License at
0: *
0: * http://www.apache.org/licenses/LICENSE-2.0
0: *
0: * Unless required by applicable law or agreed to in writing, software
0: * distributed under the License is distributed on an "AS IS" BASIS,
0: * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0: * See the License for the specific language governing permissions and
0: * limitations under the License.
0: *
0: **/
1: package org.apache.activemq.util;
1: 
1: import java.util.Map;
1: 
1: /**
1:  * A bunch of utility methods for working with maps
0:  *
0:  * @version $Revision$
1:  */
0: public class MapHelper {
1:     /**
1:      * Extracts the value from the map and coerces to a String
1:      */
1:     public static String getString(Map map, String key) {
1:         Object answer = map.get(key);
1:         return (answer != null) ? answer.toString() : null;
1:     }
1: 
1:     /**
0:      * Extracts the value from the map and coerces to an int value
0:      * or returns a default value if one could not be found or coerced
1:      */
1:     public static int getInt(Map map, String key, int defaultValue) {
1:         Object value = map.get(key);
1:         if (value instanceof Number) {
0:             return ((Number) value).intValue();
1:         }
0:         else if (value instanceof String) {
0:             return Integer.parseInt((String) value);
1:         }
1:         return defaultValue;
1:     }
1: }
============================================================================