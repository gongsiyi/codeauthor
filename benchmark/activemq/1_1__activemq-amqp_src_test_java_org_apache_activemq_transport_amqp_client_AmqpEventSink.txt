1:d9e22a9: /*
1:d9e22a9:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d9e22a9:  * contributor license agreements.  See the NOTICE file distributed with
1:d9e22a9:  * this work for additional information regarding copyright ownership.
1:d9e22a9:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d9e22a9:  * (the "License"); you may not use this file except in compliance with
1:d9e22a9:  * the License.  You may obtain a copy of the License at
1:d9e22a9:  *
1:d9e22a9:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d9e22a9:  *
1:d9e22a9:  * Unless required by applicable law or agreed to in writing, software
1:d9e22a9:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d9e22a9:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d9e22a9:  * See the License for the specific language governing permissions and
1:d9e22a9:  * limitations under the License.
1:d9e22a9:  */
1:d9e22a9: package org.apache.activemq.transport.amqp.client;
1:d9e22a9: 
1:d9e22a9: import java.io.IOException;
1:d9e22a9: 
1:d9e22a9: /**
1:d9e22a9:  * Interface used by classes that want to process AMQP events sent from
1:d9e22a9:  * the transport layer.
1:d9e22a9:  */
1:d9e22a9: public interface AmqpEventSink {
1:d9e22a9: 
1:d9e22a9:     /**
1:d9e22a9:      * Event handler for remote peer open of this resource.
1:d9e22a9:      *
1:d9e22a9:      * @param connection
1:d9e22a9:      *        the AmqpConnection instance for easier access to fire events.
1:d9e22a9:      *
1:d9e22a9:      * @throws IOException if an error occurs while processing the update.
1:d9e22a9:      */
1:d9e22a9:     void processRemoteOpen(AmqpConnection connection) throws IOException;
1:d9e22a9: 
1:d9e22a9:     /**
1:d9e22a9:      * Event handler for remote peer detach of this resource.
1:d9e22a9:      *
1:d9e22a9:      * @param connection
1:d9e22a9:      *        the AmqpConnection instance for easier access to fire events.
1:d9e22a9:      *
1:d9e22a9:      * @throws IOException if an error occurs while processing the update.
1:d9e22a9:      */
1:d9e22a9:     void processRemoteDetach(AmqpConnection connection) throws IOException;
1:d9e22a9: 
1:d9e22a9:     /**
1:d9e22a9:      * Event handler for remote peer close of this resource.
1:d9e22a9:      *
1:d9e22a9:      * @param connection
1:d9e22a9:      *        the AmqpConnection instance for easier access to fire events.
1:d9e22a9:      *
1:d9e22a9:      * @throws IOException if an error occurs while processing the update.
1:d9e22a9:      */
1:d9e22a9:     void processRemoteClose(AmqpConnection connection) throws IOException;
1:d9e22a9: 
1:d9e22a9:     /**
1:d9e22a9:      * Called when the Proton Engine signals an Delivery related event has been triggered
1:d9e22a9:      * for the given endpoint.
1:d9e22a9:      *
1:d9e22a9:      * @param connection
1:d9e22a9:      *        the AmqpConnection instance for easier access to fire events.
1:d9e22a9:      *
1:d9e22a9:      * @throws IOException if an error occurs while processing the update.
1:d9e22a9:      */
1:d9e22a9:     void processDeliveryUpdates(AmqpConnection connection) throws IOException;
1:d9e22a9: 
1:d9e22a9:     /**
1:d9e22a9:      * Called when the Proton Engine signals an Flow related event has been triggered
1:d9e22a9:      * for the given endpoint.
1:d9e22a9:      *
1:d9e22a9:      * @param connection
1:d9e22a9:      *        the AmqpConnection instance for easier access to fire events.
1:d9e22a9:      *
1:d9e22a9:      * @throws IOException if an error occurs while processing the update.
1:d9e22a9:      */
1:d9e22a9:     void processFlowUpdates(AmqpConnection connection) throws IOException;
1:d9e22a9: 
1:d9e22a9: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:d9e22a9
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.client;
1: 
1: import java.io.IOException;
1: 
1: /**
1:  * Interface used by classes that want to process AMQP events sent from
1:  * the transport layer.
1:  */
1: public interface AmqpEventSink {
1: 
1:     /**
1:      * Event handler for remote peer open of this resource.
1:      *
1:      * @param connection
1:      *        the AmqpConnection instance for easier access to fire events.
1:      *
1:      * @throws IOException if an error occurs while processing the update.
1:      */
1:     void processRemoteOpen(AmqpConnection connection) throws IOException;
1: 
1:     /**
1:      * Event handler for remote peer detach of this resource.
1:      *
1:      * @param connection
1:      *        the AmqpConnection instance for easier access to fire events.
1:      *
1:      * @throws IOException if an error occurs while processing the update.
1:      */
1:     void processRemoteDetach(AmqpConnection connection) throws IOException;
1: 
1:     /**
1:      * Event handler for remote peer close of this resource.
1:      *
1:      * @param connection
1:      *        the AmqpConnection instance for easier access to fire events.
1:      *
1:      * @throws IOException if an error occurs while processing the update.
1:      */
1:     void processRemoteClose(AmqpConnection connection) throws IOException;
1: 
1:     /**
1:      * Called when the Proton Engine signals an Delivery related event has been triggered
1:      * for the given endpoint.
1:      *
1:      * @param connection
1:      *        the AmqpConnection instance for easier access to fire events.
1:      *
1:      * @throws IOException if an error occurs while processing the update.
1:      */
1:     void processDeliveryUpdates(AmqpConnection connection) throws IOException;
1: 
1:     /**
1:      * Called when the Proton Engine signals an Flow related event has been triggered
1:      * for the given endpoint.
1:      *
1:      * @param connection
1:      *        the AmqpConnection instance for easier access to fire events.
1:      *
1:      * @throws IOException if an error occurs while processing the update.
1:      */
1:     void processFlowUpdates(AmqpConnection connection) throws IOException;
1: 
1: }
============================================================================