1:00c9e01: /**
1:00c9e01:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:00c9e01:  * contributor license agreements.  See the NOTICE file distributed with
1:00c9e01:  * this work for additional information regarding copyright ownership.
1:00c9e01:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:00c9e01:  * (the "License"); you may not use this file except in compliance with
1:00c9e01:  * the License.  You may obtain a copy of the License at
1:00c9e01:  *
1:00c9e01:  *      http://www.apache.org/licenses/LICENSE-2.0
1:00c9e01:  *
1:00c9e01:  * Unless required by applicable law or agreed to in writing, software
1:00c9e01:  * distributed under the License is distributed on an "AS IS" BASIS,
1:00c9e01:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:00c9e01:  * See the License for the specific language governing permissions and
1:00c9e01:  * limitations under the License.
1:00c9e01:  */
1:00c9e01: package org.apache.activemq.filter;
2:00c9e01: 
1:00c9e01: import java.util.Set;
1:c7d559f: 
1:00c9e01: import junit.framework.TestCase;
1:c7d559f: 
1:00c9e01: import org.apache.activemq.command.ActiveMQTempQueue;
1:00c9e01: import org.apache.activemq.command.ConnectionId;
1:00c9e01: import org.apache.activemq.util.IdGenerator;
1:00c9e01: 
1:00c9e01: public class DestinationMapTempDestinationTest extends TestCase {
1:c7d559f: 
1:00c9e01:     public void testtestTempDestinations() throws Exception {
1:00c9e01:         ConnectionId id = new ConnectionId(new IdGenerator().generateId());
1:00c9e01:         DestinationMap map = new DestinationMap();
1:00c9e01:         Object value = new Object();
1:00c9e01:         int count = 1000;
1:00c9e01:         for (int i = 0; i < count; i++) {
1:00c9e01:             ActiveMQTempQueue queue = new ActiveMQTempQueue(id, i);
1:00c9e01:             map.put(queue, value);
1:00c9e01:         }
1:00c9e01:         for (int i = 0; i < count; i++) {
1:00c9e01:             ActiveMQTempQueue queue = new ActiveMQTempQueue(id, i);
1:00c9e01:             map.remove(queue, value);
1:c7d559f:             Set<?> set = map.get(queue);
1:00c9e01:             assertTrue(set.isEmpty());
1:00c9e01:         }
1:00c9e01:     }
1:00c9e01: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:c7d559f
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1: 
/////////////////////////////////////////////////////////////////////////
1:             Set<?> set = map.get(queue);
commit:ef24cc9
author:Robert Davies
-------------------------------------------------------------------------------
commit:00c9e01
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.filter;
1: 
1: import java.util.Set;
1: import junit.framework.TestCase;
1: import org.apache.activemq.command.ActiveMQTempQueue;
1: import org.apache.activemq.command.ConnectionId;
1: import org.apache.activemq.util.IdGenerator;
1: 
1: public class DestinationMapTempDestinationTest extends TestCase {
1:     
1:     public void testtestTempDestinations() throws Exception {
1:         ConnectionId id = new ConnectionId(new IdGenerator().generateId());
1:         DestinationMap map = new DestinationMap();
1:         Object value = new Object();
1:         int count = 1000;
1:         for (int i = 0; i < count; i++) {
1:             ActiveMQTempQueue queue = new ActiveMQTempQueue(id, i);
1:             map.put(queue, value);
1:         }
1:         for (int i = 0; i < count; i++) {
1:             ActiveMQTempQueue queue = new ActiveMQTempQueue(id, i);
1:             map.remove(queue, value);
0:             Set set = map.get(queue);
1:             assertTrue(set.isEmpty());
1:         }
1:     }
1: }
============================================================================