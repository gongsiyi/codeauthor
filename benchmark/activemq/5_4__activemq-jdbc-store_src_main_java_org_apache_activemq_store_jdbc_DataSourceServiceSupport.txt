1:a039746: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a039746:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a039746:  *
1:a039746:  * Unless required by applicable law or agreed to in writing, software
1:a039746:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a039746:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a039746:  * See the License for the specific language governing permissions and
1:a039746:  * limitations under the License.
1:a039746:  */
1:a039746: package org.apache.activemq.store.jdbc;
1:a039746: 
1:74a7a8b: import java.io.File;
1:74a7a8b: import java.io.IOException;
1:165959e: import java.sql.SQLException;
1:a039746: 
1:a039746: import javax.sql.DataSource;
1:a039746: 
1:170b86a: import org.apache.activemq.broker.LockableServiceSupport;
1:74a7a8b: import org.apache.activemq.util.IOHelper;
1:74a7a8b: import org.apache.derby.jdbc.EmbeddedDataSource;
1:a039746: 
1:a039746: /**
1:a039746:  * A helper class which provides a factory method to create a default
1:a039746:  * {@link DataSource) if one is not provided.
1:0bbc0ac:  * 
1:a039746:  * 
1:a039746:  */
1:170b86a: abstract public class DataSourceServiceSupport extends LockableServiceSupport {
1:a039746: 
1:9583b5f:     private String dataDirectory = IOHelper.getDefaultDataDirectory();
1:fd3c510:     private File dataDirectoryFile;
1:a039746:     private DataSource dataSource;
1:165959e:     private DataSource createdDefaultDataSource;
1:a039746: 
1:170b86a:     public DataSourceServiceSupport() {
1:a039746:     }
1:a039746: 
1:170b86a:     public DataSourceServiceSupport(DataSource dataSource) {
1:a039746:         this.dataSource = dataSource;
1:a039746:     }
1:a039746: 
1:fd3c510:     public File getDataDirectoryFile() {
1:fd3c510:         if (dataDirectoryFile == null) {
1:fd3c510:             dataDirectoryFile = new File(getDataDirectory());
1:a039746:         }
1:fd3c510:         return dataDirectoryFile;
1:fd3c510:     }
1:fd3c510: 
1:fd3c510:     public void setDataDirectoryFile(File dataDirectory) {
1:fd3c510:         this.dataDirectoryFile = dataDirectory;
1:fd3c510:     }
1:fd3c510: 
1:fd3c510:     public String getDataDirectory() {
1:a039746:         return dataDirectory;
1:a039746:     }
1:a039746: 
1:fd3c510:     public void setDataDirectory(String dataDirectory) {
1:a039746:         this.dataDirectory = dataDirectory;
1:a039746:     }
1:a039746: 
1:a039746:     public DataSource getDataSource() throws IOException {
2:a039746:         if (dataSource == null) {
1:170b86a:             dataSource = createDataSource(getDataDirectoryFile().getCanonicalPath());
1:f812e34:             if (dataSource == null) {
1:a039746:                 throw new IllegalArgumentException("No dataSource property has been configured");
1:165959e:             } else {
1:165959e:                 createdDefaultDataSource = dataSource;
1:a039746:             }
1:a039746:         }
1:a039746:         return dataSource;
1:a039746:     }
1:a039746: 
1:165959e:     public void closeDataSource(DataSource dataSource) {
1:165959e:         if (createdDefaultDataSource != null && createdDefaultDataSource.equals(dataSource)) {
1:165959e:             shutdownDefaultDataSource(dataSource);
1:bcdf770:             createdDefaultDataSource = this.dataSource = null;
1:165959e:         }
1:165959e:     }
1:165959e: 
1:a039746:     public void setDataSource(DataSource dataSource) {
1:a039746:         this.dataSource = dataSource;
1:a039746:     }
1:a039746: 
1:170b86a:     public static DataSource createDataSource(String homeDir) throws IOException {
1:38f7857:         return createDataSource(homeDir, "derbydb");
1:38f7857:     }
1:38f7857: 
1:38f7857:     public static DataSource createDataSource(String homeDir, String dbName) throws IOException {
1:a039746: 
1:a039746:         // Setup the Derby datasource.
1:170b86a:         System.setProperty("derby.system.home", homeDir);
1:a039746:         System.setProperty("derby.storage.fileSyncTransactionLog", "true");
1:a039746:         System.setProperty("derby.storage.pageCacheSize", "100");
1:a039746: 
1:a039746:         final EmbeddedDataSource ds = new EmbeddedDataSource();
1:38f7857:         ds.setDatabaseName(dbName);
1:a039746:         ds.setCreateDatabase("create");
1:a039746:         return ds;
1:17f4f34:     }
1:f812e34: 
1:165959e:     public static void shutdownDefaultDataSource(DataSource dataSource) {
1:165959e:         final EmbeddedDataSource ds =  (EmbeddedDataSource) dataSource;
1:17f4f34:         ds.setCreateDatabase("shutdown");
1:165959e:         ds.setShutdownDatabase("shutdown");
1:17f4f34:         try {
1:165959e:             ds.getConnection();
1:165959e:         } catch (SQLException expectedAndIgnored) {
1:165959e:         }
1:165959e:     }
1:165959e: 
1:f812e34:     public String toString() {
1:f812e34:         return "" + dataSource;
1:a039746:     }
1:170b86a: 
1:170b86a: 
1:a039746: 
1:a039746: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:38f7857
/////////////////////////////////////////////////////////////////////////
1:         return createDataSource(homeDir, "derbydb");
1:     }
1: 
1:     public static DataSource createDataSource(String homeDir, String dbName) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:         ds.setDatabaseName(dbName);
commit:baa10ed
/////////////////////////////////////////////////////////////////////////
commit:17f4f34
/////////////////////////////////////////////////////////////////////////
1:         try {
0:             ds.getConnection().close();
0:         } catch (SQLException ignored) {
1:         }
1:         ds.setCreateDatabase("shutdown");
commit:bcdf770
/////////////////////////////////////////////////////////////////////////
1:             createdDefaultDataSource = this.dataSource = null;
commit:165959e
/////////////////////////////////////////////////////////////////////////
1: import java.sql.SQLException;
/////////////////////////////////////////////////////////////////////////
1:     private DataSource createdDefaultDataSource;
/////////////////////////////////////////////////////////////////////////
1:             } else {
1:                 createdDefaultDataSource = dataSource;
1:     public void closeDataSource(DataSource dataSource) {
1:         if (createdDefaultDataSource != null && createdDefaultDataSource.equals(dataSource)) {
1:             shutdownDefaultDataSource(dataSource);
1:         }
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1:     public static void shutdownDefaultDataSource(DataSource dataSource) {
1:         final EmbeddedDataSource ds =  (EmbeddedDataSource) dataSource;
1:         ds.setShutdownDatabase("shutdown");
0:         try {
1:             ds.getConnection();
1:         } catch (SQLException expectedAndIgnored) {
1:         }
1:     }
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: import java.io.IOException;
1: import org.apache.activemq.util.IOHelper;
1: import org.apache.derby.jdbc.EmbeddedDataSource;
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1:             if (dataSource == null) {
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String toString() {
1:         return "" + dataSource;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:170b86a
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.LockableServiceSupport;
/////////////////////////////////////////////////////////////////////////
1: abstract public class DataSourceServiceSupport extends LockableServiceSupport {
1:     public DataSourceServiceSupport() {
1:     public DataSourceServiceSupport(DataSource dataSource) {
/////////////////////////////////////////////////////////////////////////
1:             dataSource = createDataSource(getDataDirectoryFile().getCanonicalPath());
/////////////////////////////////////////////////////////////////////////
1:     public static DataSource createDataSource(String homeDir) throws IOException {
1:         System.setProperty("derby.system.home", homeDir);
/////////////////////////////////////////////////////////////////////////
1: 
1: 
author:James Strachan
-------------------------------------------------------------------------------
commit:9583b5f
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.util.IOHelper;
/////////////////////////////////////////////////////////////////////////
1:     private String dataDirectory = IOHelper.getDefaultDataDirectory();
commit:fd3c510
/////////////////////////////////////////////////////////////////////////
0:     private String dataDirectory = "activemq-data";
1:     private File dataDirectoryFile;
/////////////////////////////////////////////////////////////////////////
1:     public File getDataDirectoryFile() {
1:         if (dataDirectoryFile == null) {
1:             dataDirectoryFile = new File(getDataDirectory());
1:         return dataDirectoryFile;
1:     }
1: 
1:     public void setDataDirectoryFile(File dataDirectory) {
1:         this.dataDirectoryFile = dataDirectory;
1:     }
1: 
1:     public String getDataDirectory() {
1:     public void setDataDirectory(String dataDirectory) {
/////////////////////////////////////////////////////////////////////////
0:         System.setProperty("derby.system.home", getDataDirectoryFile().getCanonicalPath());
commit:a039746
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.jdbc;
1: 
0: import org.apache.derby.jdbc.EmbeddedDataSource;
1: 
1: import javax.sql.DataSource;
1: 
0: import java.io.File;
0: import java.io.IOException;
1: 
1: /**
1:  * A helper class which provides a factory method to create a default
1:  * {@link DataSource) if one is not provided.
1:  * 
0:  * @version $Revision$
1:  */
0: public class DataSourceSupport {
1: 
0:     private File dataDirectory;
1:     private DataSource dataSource;
1: 
0:     public DataSourceSupport() {
1:     }
1: 
0:     public DataSourceSupport(DataSource dataSource) {
1:         this.dataSource = dataSource;
1:     }
1: 
0:     public File getDataDirectory() {
0:         if (dataDirectory == null) {
0:             dataDirectory = new File("activemq-data");
1:         }
1:         return dataDirectory;
1:     }
1: 
0:     public void setDataDirectory(File dataDirectory) {
1:         this.dataDirectory = dataDirectory;
1:     }
1: 
1:     public DataSource getDataSource() throws IOException {
1:         if (dataSource == null) {
0:             dataSource = createDataSource();
1:             if (dataSource == null) { 
1:                 throw new IllegalArgumentException("No dataSource property has been configured");
1:             }
1:         }
1:         return dataSource;
1:     }
1: 
1:     public void setDataSource(DataSource dataSource) {
1:         this.dataSource = dataSource;
1:     }
1: 
0:     protected DataSource createDataSource() throws IOException {
1: 
1:         // Setup the Derby datasource.
0:         System.setProperty("derby.system.home", getDataDirectory().getCanonicalPath());
1:         System.setProperty("derby.storage.fileSyncTransactionLog", "true");
1:         System.setProperty("derby.storage.pageCacheSize", "100");
1: 
1:         final EmbeddedDataSource ds = new EmbeddedDataSource();
0:         ds.setDatabaseName("derbydb");
1:         ds.setCreateDatabase("create");
1:         return ds;
1:     }
1: 
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:415d46c
/////////////////////////////////////////////////////////////////////////
0:     
0:     public String toString(){
0:         return ""+dataSource;
0:     }
============================================================================