1:785b16b: /**
1:785b16b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:785b16b:  * contributor license agreements.  See the NOTICE file distributed with
1:785b16b:  * this work for additional information regarding copyright ownership.
1:785b16b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:785b16b:  * (the "License"); you may not use this file except in compliance with
1:785b16b:  * the License.  You may obtain a copy of the License at
1:785b16b:  *
1:785b16b:  *      http://www.apache.org/licenses/LICENSE-2.0
1:785b16b:  *
1:785b16b:  * Unless required by applicable law or agreed to in writing, software
1:785b16b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:785b16b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:785b16b:  * See the License for the specific language governing permissions and
1:785b16b:  * limitations under the License.
1:785b16b:  */
1:785b16b: package org.apache.activemq.store.kahadb;
1:785b16b: 
1:785b16b: import java.io.File;
1:785b16b: import java.util.ArrayList;
1:785b16b: import java.util.List;
1:785b16b: 
1:785b16b: import org.apache.activemq.store.MessageStore;
1:785b16b: import org.apache.commons.io.FileUtils;
1:785b16b: 
1:785b16b: /**
1:785b16b:  * This test is for AMQ-5748 to verify that {@link MessageStore} implements correctly
1:785b16b:  * compute the size of the messages in the store.
1:785b16b:  *
1:785b16b:  *
1:785b16b:  */
1:785b16b: public class MultiKahaDBMessageStoreSizeTest extends AbstractKahaDBMessageStoreSizeTest {
1:785b16b: 
1:785b16b: 
1:785b16b:     @Override
1:785b16b:     protected void createStore(boolean deleteAllMessages, String directory) throws Exception {
1:785b16b:         MultiKahaDBPersistenceAdapter multiStore = new MultiKahaDBPersistenceAdapter();
1:785b16b: 
1:785b16b:         store = multiStore;
1:785b16b:         File fileDir = new File(directory);
1:785b16b: 
1:785b16b:         if (deleteAllMessages && fileDir.exists()) {
1:785b16b:             FileUtils.cleanDirectory(new File(directory));
1:785b16b:         }
1:785b16b: 
1:785b16b:         KahaDBPersistenceAdapter localStore = new KahaDBPersistenceAdapter();
1:785b16b:         localStore.setJournalMaxFileLength(1024 * 512);
1:785b16b:         localStore.setDirectory(new File(directory));
1:785b16b: 
1:785b16b:         FilteredKahaDBPersistenceAdapter filtered = new FilteredKahaDBPersistenceAdapter();
1:785b16b:         filtered.setPersistenceAdapter(localStore);
1:785b16b:         filtered.setPerDestination(true);
1:785b16b:         List<FilteredKahaDBPersistenceAdapter> stores = new ArrayList<>();
1:785b16b:         stores.add(filtered);
1:785b16b: 
1:785b16b:         multiStore.setFilteredPersistenceAdapters(stores);
1:785b16b:         multiStore.setDirectory(fileDir);
1:785b16b:         multiStore.start();
1:785b16b:         messageStore = store.createQueueMessageStore(destination);
1:785b16b:         messageStore.start();
1:785b16b:     }
1:785b16b: 
1:785b16b:     @Override
1:785b16b:     protected String getVersion5Dir() {
1:785b16b:         return "src/test/resources/org/apache/activemq/store/kahadb/MultiKahaMessageStoreTest/version5";
1:785b16b:     }
1:785b16b: 
1:785b16b: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:785b16b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.kahadb;
1: 
1: import java.io.File;
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: import org.apache.activemq.store.MessageStore;
1: import org.apache.commons.io.FileUtils;
1: 
1: /**
1:  * This test is for AMQ-5748 to verify that {@link MessageStore} implements correctly
1:  * compute the size of the messages in the store.
1:  *
1:  *
1:  */
1: public class MultiKahaDBMessageStoreSizeTest extends AbstractKahaDBMessageStoreSizeTest {
1: 
1: 
1:     @Override
1:     protected void createStore(boolean deleteAllMessages, String directory) throws Exception {
1:         MultiKahaDBPersistenceAdapter multiStore = new MultiKahaDBPersistenceAdapter();
1: 
1:         store = multiStore;
1:         File fileDir = new File(directory);
1: 
1:         if (deleteAllMessages && fileDir.exists()) {
1:             FileUtils.cleanDirectory(new File(directory));
1:         }
1: 
1:         KahaDBPersistenceAdapter localStore = new KahaDBPersistenceAdapter();
1:         localStore.setJournalMaxFileLength(1024 * 512);
1:         localStore.setDirectory(new File(directory));
1: 
1:         FilteredKahaDBPersistenceAdapter filtered = new FilteredKahaDBPersistenceAdapter();
1:         filtered.setPersistenceAdapter(localStore);
1:         filtered.setPerDestination(true);
1:         List<FilteredKahaDBPersistenceAdapter> stores = new ArrayList<>();
1:         stores.add(filtered);
1: 
1:         multiStore.setFilteredPersistenceAdapters(stores);
1:         multiStore.setDirectory(fileDir);
1:         multiStore.start();
1:         messageStore = store.createQueueMessageStore(destination);
1:         messageStore.start();
1:     }
1: 
1:     @Override
1:     protected String getVersion5Dir() {
1:         return "src/test/resources/org/apache/activemq/store/kahadb/MultiKahaMessageStoreTest/version5";
1:     }
1: 
1: }
============================================================================