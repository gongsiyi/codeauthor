1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.command;
1:1a3f54c: 
1:d29ca2a: /**
1:d29ca2a:  * Holds the command id constants used by the command objects.
1:833d308:  *
1:833d308:  *
1:d29ca2a:  */
1:d29ca2a: public interface CommandTypes {
1:fc00993: 
1:fc00993:     // What is the latest version of the openwire protocol
1:3953b9a:     byte PROTOCOL_VERSION = 12;
4:d29ca2a: 
1:8443bd1:     // What is the latest version of the openwire protocol used in the stores
1:13044de:     byte PROTOCOL_STORE_VERSION = 11;
1:d29ca2a: 
1:13044de:     // What is the legacy version that old KahaDB store's most commonly used
1:13044de:     byte PROTOCOL_LEGACY_STORE_VERSION = 6;
1:d29ca2a: 
1:3953b9a:     // What is the first version that BROKER_SUBSCRIPTION_INFO is supported
1:3953b9a:     byte PROTOCOL_VERSION_DURABLE_SYNC = 12;
1:3953b9a: 
1:d29ca2a:     // A marshaling layer can use this type to specify a null object.
1:fc00993:     byte NULL = 0;
1:d29ca2a: 
2:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:d29ca2a:     // Info objects sent back and forth client/server when
1:d29ca2a:     // setting up a client connection.
1:d29ca2a:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte WIREFORMAT_INFO = 1;
1:fc00993:     byte BROKER_INFO = 2;
1:fc00993:     byte CONNECTION_INFO = 3;
1:fc00993:     byte SESSION_INFO = 4;
1:fc00993:     byte CONSUMER_INFO = 5;
1:fc00993:     byte PRODUCER_INFO = 6;
1:fc00993:     byte TRANSACTION_INFO = 7;
1:fc00993:     byte DESTINATION_INFO = 8;
1:fc00993:     byte REMOVE_SUBSCRIPTION_INFO = 9;
1:fc00993:     byte KEEP_ALIVE_INFO = 10;
1:fc00993:     byte SHUTDOWN_INFO = 11;
1:fc00993:     byte REMOVE_INFO = 12;
1:fc00993:     byte CONTROL_COMMAND = 14;
1:fc00993:     byte FLUSH_COMMAND = 15;
1:fc00993:     byte CONNECTION_ERROR = 16;
1:fc00993:     byte CONSUMER_CONTROL = 17;
1:fc00993:     byte CONNECTION_CONTROL = 18;
1:fc00993: 
1:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:d29ca2a:     // Messages that go back and forth between the client
1:d29ca2a:     // and the server.
1:d29ca2a:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte PRODUCER_ACK = 19;
1:fc00993:     byte MESSAGE_PULL = 20;
1:fc00993:     byte MESSAGE_DISPATCH = 21;
1:fc00993:     byte MESSAGE_ACK = 22;
1:d29ca2a: 
1:fc00993:     byte ACTIVEMQ_MESSAGE = 23;
1:fc00993:     byte ACTIVEMQ_BYTES_MESSAGE = 24;
1:fc00993:     byte ACTIVEMQ_MAP_MESSAGE = 25;
1:fc00993:     byte ACTIVEMQ_OBJECT_MESSAGE = 26;
1:fc00993:     byte ACTIVEMQ_STREAM_MESSAGE = 27;
1:fc00993:     byte ACTIVEMQ_TEXT_MESSAGE = 28;
1:fc00993:     byte ACTIVEMQ_BLOB_MESSAGE = 29;
1:fc00993: 
1:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:d29ca2a:     // Command Response messages
1:d29ca2a:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte RESPONSE = 30;
1:fc00993:     byte EXCEPTION_RESPONSE = 31;
1:fc00993:     byte DATA_RESPONSE = 32;
1:fc00993:     byte DATA_ARRAY_RESPONSE = 33;
1:fc00993:     byte INTEGER_RESPONSE = 34;
1:d29ca2a: 
1:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:d29ca2a:     // Used by discovery
1:d29ca2a:     //
1:3953b9a:     // /////////////////////////////////////////////////BROKER_SUBSCRIPTION_INFO
1:fc00993:     byte DISCOVERY_EVENT = 40;
1:fc00993: 
1:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:d29ca2a:     // Command object used by the Journal
1:d29ca2a:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte JOURNAL_ACK = 50;
1:fc00993:     byte JOURNAL_REMOVE = 52;
1:fc00993:     byte JOURNAL_TRACE = 53;
1:fc00993:     byte JOURNAL_TRANSACTION = 54;
1:fc00993:     byte DURABLE_SUBSCRIPTION_INFO = 55;
1:d29ca2a: 
1:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:8704338:     // Reliability and fragmentation
1:8704338:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte PARTIAL_COMMAND = 60;
1:fc00993:     byte PARTIAL_LAST_COMMAND = 61;
1:d29ca2a: 
1:fc00993:     byte REPLAY = 65;
1:d29ca2a: 
1:fc00993:     // /////////////////////////////////////////////////
1:8704338:     //
1:d29ca2a:     // Types used represent basic Java types.
1:d29ca2a:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte BYTE_TYPE = 70;
1:fc00993:     byte CHAR_TYPE = 71;
1:fc00993:     byte SHORT_TYPE = 72;
1:fc00993:     byte INTEGER_TYPE = 73;
1:fc00993:     byte LONG_TYPE = 74;
1:fc00993:     byte DOUBLE_TYPE = 75;
1:fc00993:     byte FLOAT_TYPE = 76;
1:fc00993:     byte STRING_TYPE = 77;
1:fc00993:     byte BOOLEAN_TYPE = 78;
1:fc00993:     byte BYTE_ARRAY_TYPE = 79;
1:fc00993: 
1:fc00993:     // /////////////////////////////////////////////////
1:d29ca2a:     //
1:4098942:     // Broker to Broker command objects
1:2cd1437:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993: 
1:fc00993:     byte MESSAGE_DISPATCH_NOTIFICATION = 90;
1:fc00993:     byte NETWORK_BRIDGE_FILTER = 91;
1:3953b9a:     byte BROKER_SUBSCRIPTION_INFO = 92;
1:fc00993: 
1:fc00993:     // /////////////////////////////////////////////////
1:2cd1437:     //
1:d29ca2a:     // Data structures contained in the command objects.
1:d29ca2a:     //
1:fc00993:     // /////////////////////////////////////////////////
1:fc00993:     byte ACTIVEMQ_QUEUE = 100;
1:fc00993:     byte ACTIVEMQ_TOPIC = 101;
1:fc00993:     byte ACTIVEMQ_TEMP_QUEUE = 102;
1:fc00993:     byte ACTIVEMQ_TEMP_TOPIC = 103;
1:d29ca2a: 
1:fc00993:     byte MESSAGE_ID = 110;
1:fc00993:     byte ACTIVEMQ_LOCAL_TRANSACTION_ID = 111;
1:fc00993:     byte ACTIVEMQ_XA_TRANSACTION_ID = 112;
1:d29ca2a: 
1:fc00993:     byte CONNECTION_ID = 120;
1:fc00993:     byte SESSION_ID = 121;
1:fc00993:     byte CONSUMER_ID = 122;
1:fc00993:     byte PRODUCER_ID = 123;
1:fc00993:     byte BROKER_ID = 124;
1:d29ca2a: 
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:3953b9a
/////////////////////////////////////////////////////////////////////////
1:     byte PROTOCOL_VERSION = 12;
/////////////////////////////////////////////////////////////////////////
1:     // What is the first version that BROKER_SUBSCRIPTION_INFO is supported
1:     byte PROTOCOL_VERSION_DURABLE_SYNC = 12;
1: 
/////////////////////////////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////BROKER_SUBSCRIPTION_INFO
/////////////////////////////////////////////////////////////////////////
1:     byte BROKER_SUBSCRIPTION_INFO = 92;
author:Timothy Bish
-------------------------------------------------------------------------------
commit:13044de
/////////////////////////////////////////////////////////////////////////
1:     byte PROTOCOL_STORE_VERSION = 11;
1:     // What is the legacy version that old KahaDB store's most commonly used
1:     byte PROTOCOL_LEGACY_STORE_VERSION = 6;
commit:833d308
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
0:     byte PROTOCOL_VERSION = 11;
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:2dd1335
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 10;
commit:fd6c731
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 8;
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: 
1:     // What is the latest version of the openwire protocol
0:     byte PROTOCOL_VERSION = 3;
1:     byte NULL = 0;
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte WIREFORMAT_INFO = 1;
1:     byte BROKER_INFO = 2;
1:     byte CONNECTION_INFO = 3;
1:     byte SESSION_INFO = 4;
1:     byte CONSUMER_INFO = 5;
1:     byte PRODUCER_INFO = 6;
1:     byte TRANSACTION_INFO = 7;
1:     byte DESTINATION_INFO = 8;
1:     byte REMOVE_SUBSCRIPTION_INFO = 9;
1:     byte KEEP_ALIVE_INFO = 10;
1:     byte SHUTDOWN_INFO = 11;
1:     byte REMOVE_INFO = 12;
1:     byte CONTROL_COMMAND = 14;
1:     byte FLUSH_COMMAND = 15;
1:     byte CONNECTION_ERROR = 16;
1:     byte CONSUMER_CONTROL = 17;
1:     byte CONNECTION_CONTROL = 18;
1: 
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte PRODUCER_ACK = 19;
1:     byte MESSAGE_PULL = 20;
1:     byte MESSAGE_DISPATCH = 21;
1:     byte MESSAGE_ACK = 22;
1:     byte ACTIVEMQ_MESSAGE = 23;
1:     byte ACTIVEMQ_BYTES_MESSAGE = 24;
1:     byte ACTIVEMQ_MAP_MESSAGE = 25;
1:     byte ACTIVEMQ_OBJECT_MESSAGE = 26;
1:     byte ACTIVEMQ_STREAM_MESSAGE = 27;
1:     byte ACTIVEMQ_TEXT_MESSAGE = 28;
1:     byte ACTIVEMQ_BLOB_MESSAGE = 29;
1: 
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte RESPONSE = 30;
1:     byte EXCEPTION_RESPONSE = 31;
1:     byte DATA_RESPONSE = 32;
1:     byte DATA_ARRAY_RESPONSE = 33;
1:     byte INTEGER_RESPONSE = 34;
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte DISCOVERY_EVENT = 40;
1: 
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte JOURNAL_ACK = 50;
1:     byte JOURNAL_REMOVE = 52;
1:     byte JOURNAL_TRACE = 53;
1:     byte JOURNAL_TRANSACTION = 54;
1:     byte DURABLE_SUBSCRIPTION_INFO = 55;
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte PARTIAL_COMMAND = 60;
1:     byte PARTIAL_LAST_COMMAND = 61;
1:     byte REPLAY = 65;
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte BYTE_TYPE = 70;
1:     byte CHAR_TYPE = 71;
1:     byte SHORT_TYPE = 72;
1:     byte INTEGER_TYPE = 73;
1:     byte LONG_TYPE = 74;
1:     byte DOUBLE_TYPE = 75;
1:     byte FLOAT_TYPE = 76;
1:     byte STRING_TYPE = 77;
1:     byte BOOLEAN_TYPE = 78;
1:     byte BYTE_ARRAY_TYPE = 79;
1: 
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1: 
1:     byte MESSAGE_DISPATCH_NOTIFICATION = 90;
1:     byte NETWORK_BRIDGE_FILTER = 91;
1: 
1:     // /////////////////////////////////////////////////
1:     // /////////////////////////////////////////////////
1:     byte ACTIVEMQ_QUEUE = 100;
1:     byte ACTIVEMQ_TOPIC = 101;
1:     byte ACTIVEMQ_TEMP_QUEUE = 102;
1:     byte ACTIVEMQ_TEMP_TOPIC = 103;
1:     byte MESSAGE_ID = 110;
1:     byte ACTIVEMQ_LOCAL_TRANSACTION_ID = 111;
1:     byte ACTIVEMQ_XA_TRANSACTION_ID = 112;
1:     byte CONNECTION_ID = 120;
1:     byte SESSION_ID = 121;
1:     byte CONSUMER_ID = 122;
1:     byte PRODUCER_ID = 123;
1:     byte BROKER_ID = 124;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:1a3f54c
/////////////////////////////////////////////////////////////////////////
1: 	
0: 	// What is the latest version of the openwire protocol
0:     byte  PROTOCOL_VERSION                  = 3;
commit:ec14f65
/////////////////////////////////////////////////////////////////////////
0:     byte  PRODUCER_ACK                      = 19;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:446629b
/////////////////////////////////////////////////////////////////////////
0:     byte  NETWORK_BRIDGE_FILTER             = 91;
commit:c59246d
/////////////////////////////////////////////////////////////////////////
0:     byte  CONNECTION_ERROR                  = 16;
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: /**
1:  * Holds the command id constants used by the command objects.
1:  * 
0:  * @version $Revision: 1.21 $
1:  */
1: public interface CommandTypes {
1: 
1:     // A marshaling layer can use this type to specify a null object.
0:     byte  NULL                              = 0;
1: 
0:     ///////////////////////////////////////////////////
1:     //
1:     // Info objects sent back and forth client/server when
1:     // setting up a client connection.
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  WIREFORMAT_INFO                   = 1;
0:     byte  BROKER_INFO                       = 2;
0:     byte  CONNECTION_INFO                   = 3;
0:     byte  SESSION_INFO                      = 4;
0:     byte  CONSUMER_INFO                     = 5;
0:     byte  PRODUCER_INFO                     = 6;
0:     byte  TRANSACTION_INFO                  = 7;
0:     byte  DESTINATION_INFO                  = 8;
0:     byte  REMOVE_SUBSCRIPTION_INFO          = 9;
0:     byte  KEEP_ALIVE_INFO                   = 10;
0:     byte  SHUTDOWN_INFO                     = 11;
0:     byte  REMOVE_INFO                       = 12;
0:     byte  REDELIVERY_POLICY                 = 13;
0:     byte  CONTROL_COMMAND                   = 14;
0:     byte  FLUSH_COMMAND                     = 15;
1:     
0:     ///////////////////////////////////////////////////
1:     //
1:     // Messages that go back and forth between the client
1:     // and the server.
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  MESSAGE_DISPATCH                  = 21;
0:     byte  MESSAGE_ACK                       = 22;
1:     
0:     byte  ACTIVEMQ_MESSAGE                  = 23;
0:     byte  ACTIVEMQ_BYTES_MESSAGE            = 24;
0:     byte  ACTIVEMQ_MAP_MESSAGE              = 25;
0:     byte  ACTIVEMQ_OBJECT_MESSAGE           = 26;
0:     byte  ACTIVEMQ_STREAM_MESSAGE           = 27;
0:     byte  ACTIVEMQ_TEXT_MESSAGE             = 28;
1: 
0:     ///////////////////////////////////////////////////
1:     //
1:     // Command Response messages
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  RESPONSE                          = 30;
0:     byte  EXCEPTION_RESPONSE                = 31;
0:     byte  DATA_RESPONSE                     = 32;
0:     byte  DATA_ARRAY_RESPONSE               = 33;
0:     byte  INTEGER_RESPONSE                  = 34;
1: 
1: 
0:     ///////////////////////////////////////////////////
1:     //
1:     // Used by discovery
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  DISCOVERY_EVENT                   = 40;
1:     
0:     ///////////////////////////////////////////////////
1:     //
1:     // Command object used by the Journal
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  JOURNAL_ACK                       = 50;
0:     byte  JOURNAL_REMOVE                    = 52;
0:     byte  JOURNAL_TRACE                     = 53;
0:     byte  JOURNAL_TRANSACTION               = 54;
0:     byte  DURABLE_SUBSCRIPTION_INFO         = 55;
1:     
0:     ///////////////////////////////////////////////////
1:     //
1:     // Types used represent basic Java types.
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  BYTE_TYPE                         = 70;
0:     byte  CHAR_TYPE                         = 71;
0:     byte  SHORT_TYPE                        = 72;
0:     byte  INTEGER_TYPE                      = 73;
0:     byte  LONG_TYPE                         = 74;
0:     byte  DOUBLE_TYPE                       = 75;
0:     byte  FLOAT_TYPE                        = 76;
0:     byte  STRING_TYPE                       = 77;
0:     byte  BOOLEAN_TYPE                      = 78;
0:     byte  BYTE_ARRAY_TYPE                   = 79;
1:     
0:     ///////////////////////////////////////////////////
1:     //
1:     // Data structures contained in the command objects.
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  ACTIVEMQ_QUEUE                    = 100;
0:     byte  ACTIVEMQ_TOPIC                    = 101;
0:     byte  ACTIVEMQ_TEMP_QUEUE               = 102;
0:     byte  ACTIVEMQ_TEMP_TOPIC               = 103;
1:     
0:     byte  MESSAGE_ID                        = 110;
0:     byte  ACTIVEMQ_LOCAL_TRANSACTION_ID     = 111;
0:     byte  ACTIVEMQ_XA_TRANSACTION_ID        = 112;
1: 
0:     byte  CONNECTION_ID                     = 120;
0:     byte  SESSION_ID                        = 121;
0:     byte  CONSUMER_ID                       = 122;
0:     byte  PRODUCER_ID                       = 123;
0:     byte  BROKER_ID                         = 124;
1: 
1: 
1: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:6468eba
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 9;
commit:8443bd1
/////////////////////////////////////////////////////////////////////////
1:     // What is the latest version of the openwire protocol used in the stores
0:     byte PROTOCOL_STORE_VERSION = 6;
0: 
0: 
commit:e10f75c
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 7;
commit:8d3ca90
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 6;
commit:3b08860
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 5;
commit:301203e
/////////////////////////////////////////////////////////////////////////
0:     byte PROTOCOL_VERSION = 4;
author:James Strachan
-------------------------------------------------------------------------------
commit:8cf4795
/////////////////////////////////////////////////////////////////////////
0:     byte  ACTIVEMQ_BLOB_MESSAGE             = 29;
commit:9d671b7
/////////////////////////////////////////////////////////////////////////
0:     byte  MESSAGE_PULL                      = 20;
commit:8704338
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0: 
0:     ///////////////////////////////////////////////////
1:     //
1:     // Reliability and fragmentation
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  PARTIAL_COMMAND                   = 60;
0:     byte  PARTIAL_LAST_COMMAND              = 61;
0:     
0:     byte  REPLAY                            = 65;
0: 
0: 
0: 
0:     
commit:2cd1437
/////////////////////////////////////////////////////////////////////////
0:     // Optional additional responses
1:     //
0:     ///////////////////////////////////////////////////    
0:     byte  REPLAY                            = 38;
0: 
0:     
0:     ///////////////////////////////////////////////////
1:     //
/////////////////////////////////////////////////////////////////////////
0: 
commit:4afa5d6
/////////////////////////////////////////////////////////////////////////
author:Robert Davies
-------------------------------------------------------------------------------
commit:ef0734b
/////////////////////////////////////////////////////////////////////////
0:     byte CONSUMER_CONTROL                   = 17;
0:     byte CONNECTION_CONTROL                 = 18;
/////////////////////////////////////////////////////////////////////////
0:    
0:     
0:    
0:     
0:     
/////////////////////////////////////////////////////////////////////////
0:     
/////////////////////////////////////////////////////////////////////////
0:     
0:     
0:    
commit:4098942
/////////////////////////////////////////////////////////////////////////
1:     // Broker to Broker command objects
0:     //
0:     /////////////////////////////////////////////////// 
0:     
0:     byte  MESSAGE_DISPATCH_NOTIFICATION     = 90;
0:     
0:     ///////////////////////////////////////////////////
0:     //
/////////////////////////////////////////////////////////////////////////
0:     
0:    
============================================================================