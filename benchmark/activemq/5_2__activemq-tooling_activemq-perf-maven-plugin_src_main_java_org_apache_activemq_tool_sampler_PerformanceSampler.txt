1:960dce7: /**
1:960dce7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:960dce7:  * contributor license agreements.  See the NOTICE file distributed with
1:960dce7:  * this work for additional information regarding copyright ownership.
1:960dce7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:960dce7:  * (the "License"); you may not use this file except in compliance with
1:960dce7:  * the License.  You may obtain a copy of the License at
1:540dd5c:  *
1:540dd5c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:540dd5c:  *
1:960dce7:  * Unless required by applicable law or agreed to in writing, software
1:960dce7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:960dce7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:960dce7:  * See the License for the specific language governing permissions and
1:960dce7:  * limitations under the License.
1:960dce7:  */
1:a88906f: package org.apache.activemq.tool.sampler;
2:a88906f: 
1:e47e0e0: import java.util.concurrent.CountDownLatch;
1:e47e0e0: 
1:e47e0e0: import org.apache.activemq.tool.ClientRunBasis;
1:a88906f: import org.apache.activemq.tool.reports.PerformanceReportWriter;
1:a88906f: 
1:a88906f: public interface PerformanceSampler extends Runnable {
1:e47e0e0: 
1:e47e0e0:     Long getRampUpTime();
1:540dd5c: 
1:540dd5c:     void setRampUpTime(long rampUpTime);
1:540dd5c: 
1:e47e0e0:     Long getRampDownTime();
1:540dd5c: 
1:540dd5c:     void setRampDownTime(long rampDownTime);
1:540dd5c: 
1:e47e0e0:     Long getDuration();
1:540dd5c: 
1:540dd5c:     void setDuration(long duration);
1:540dd5c: 
1:540dd5c:     long getInterval();
1:540dd5c: 
1:540dd5c:     void setInterval(long interval);
1:540dd5c: 
1:e47e0e0:     long getRampUpPercent();
1:e47e0e0: 
1:e47e0e0:     void setRampUpPercent(long rampUpPercent);
1:e47e0e0: 
1:e47e0e0:     long getRampDownPercent();
1:e47e0e0: 
1:e47e0e0:     void setRampDownPercent(long rampDownPercent);
1:e47e0e0: 
1:540dd5c:     PerformanceReportWriter getPerfReportWriter();
1:540dd5c: 
1:540dd5c:     void setPerfReportWriter(PerformanceReportWriter writer);
1:540dd5c: 
1:540dd5c:     PerformanceEventListener getPerfEventListener();
1:540dd5c: 
1:540dd5c:     void setPerfEventListener(PerformanceEventListener listener);
1:540dd5c: 
1:e47e0e0:     void finishSampling();
1:e47e0e0: 
1:540dd5c:     void sampleData();
1:540dd5c: 
1:e47e0e0:     void startSampler(CountDownLatch completionLatch, ClientRunBasis clientRunBasis, long clientRunDuration);
1:540dd5c: 
1:a88906f: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:e47e0e0
/////////////////////////////////////////////////////////////////////////
1: import java.util.concurrent.CountDownLatch;
1: 
1: import org.apache.activemq.tool.ClientRunBasis;
1: 
1:     Long getRampUpTime();
1:     Long getRampDownTime();
1:     Long getDuration();
/////////////////////////////////////////////////////////////////////////
1:     long getRampUpPercent();
1: 
1:     void setRampUpPercent(long rampUpPercent);
1: 
1:     long getRampDownPercent();
1: 
1:     void setRampDownPercent(long rampDownPercent);
1: 
/////////////////////////////////////////////////////////////////////////
1:     void finishSampling();
1: 
1:     void startSampler(CountDownLatch completionLatch, ClientRunBasis clientRunBasis, long clientRunDuration);
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:87e878b
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
/////////////////////////////////////////////////////////////////////////
1:     
0:     long getRampUpTime();
1:     void setRampUpTime(long rampUpTime);
1: 
0:     long getRampDownTime();
1: 
1:     void setRampDownTime(long rampDownTime);
1: 
0:     long getDuration();
1: 
1:     void setDuration(long duration);
1: 
1:     long getInterval();
1: 
1:     void setInterval(long interval);
1: 
1:     PerformanceReportWriter getPerfReportWriter();
1: 
1:     void setPerfReportWriter(PerformanceReportWriter writer);
1: 
1:     PerformanceEventListener getPerfEventListener();
1: 
1:     void setPerfEventListener(PerformanceEventListener listener);
1: 
1:     void sampleData();
1: 
0:     boolean isRunning();
1: 
0:     void waitUntilDone();
commit:960dce7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:a88906f
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.tool.sampler;
1: 
1: import org.apache.activemq.tool.reports.PerformanceReportWriter;
1: 
1: public interface PerformanceSampler extends Runnable {
0: 	public long getRampUpTime();
0: 	public void setRampUpTime(long rampUpTime);
0: 	public long getRampDownTime();
0: 	public void setRampDownTime(long rampDownTime);
0: 	public long getDuration();
0: 	public void setDuration(long duration);
0: 	public long getInterval();
0: 	public void setInterval(long interval);
0: 	public PerformanceReportWriter getPerfReportWriter();
0: 	public void setPerfReportWriter(PerformanceReportWriter writer);
0: 	public PerformanceEventListener getPerfEventListener();
0: 	public void setPerfEventListener(PerformanceEventListener listener);
1: 
0: 	public void sampleData();
0: 	public boolean isRunning();
0: 	public void waitUntilDone();
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:dd55c21
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:80bf241
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.tool.sampler;
0: 
0: import org.apache.activemq.tool.reports.PerformanceReportWriter;
0: 
0: public interface PerformanceSampler extends Runnable {
0: 	public long getRampUpTime();
0: 	public void setRampUpTime(long rampUpTime);
0: 	public long getRampDownTime();
0: 	public void setRampDownTime(long rampDownTime);
0: 	public long getDuration();
0: 	public void setDuration(long duration);
0: 	public long getInterval();
0: 	public void setInterval(long interval);
0: 	public PerformanceReportWriter getPerfReportWriter();
0: 	public void setPerfReportWriter(PerformanceReportWriter writer);
0: 	public PerformanceEventListener getPerfEventListener();
0: 	public void setPerfEventListener(PerformanceEventListener listener);
0: 
0: 	public void sampleData();
0: 	public boolean isRunning();
0: 	public void waitUntilDone();
0: }
============================================================================