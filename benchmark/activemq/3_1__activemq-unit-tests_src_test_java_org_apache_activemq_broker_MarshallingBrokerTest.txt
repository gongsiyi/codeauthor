1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.broker;
7:d29ca2a: 
1:d29ca2a: import java.io.IOException;
1:6583ef1: 
1:d29ca2a: import junit.framework.Test;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.command.Command;
1:d29ca2a: import org.apache.activemq.command.Response;
1:d29ca2a: import org.apache.activemq.openwire.OpenWireFormat;
1:88acb0e: import org.apache.activemq.wireformat.WireFormat;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Runs against the broker but marshals all request and response commands.
1:b0c2a40:  * 
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public class MarshallingBrokerTest extends BrokerTest {
1:d29ca2a: 
1:d29ca2a:     public WireFormat wireFormat = new OpenWireFormat();
1:230a86c: 
1:d29ca2a:     public void initCombos() {
1:230a86c: 
1:230a86c:         OpenWireFormat wf1 = new OpenWireFormat();
1:230a86c:         wf1.setCacheEnabled(false);
1:230a86c:         OpenWireFormat wf2 = new OpenWireFormat();
1:230a86c:         wf2.setCacheEnabled(true);
1:230a86c: 
1:933eb2f:         addCombinationValues("wireFormat", new Object[] {wf1, wf2, });
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     protected StubConnection createConnection() throws Exception {
1:d29ca2a:         return new StubConnection(broker) {
1:7f5213b:             public Response request(Command command) throws Exception {
1:230a86c:                 Response r = super.request((Command)wireFormat.unmarshal(wireFormat.marshal(command)));
1:230a86c:                 if (r != null) {
1:230a86c:                     r = (Response)wireFormat.unmarshal(wireFormat.marshal(r));
1:d29ca2a:                 }
1:d29ca2a:                 return r;
1:d29ca2a:             }
1:230a86c: 
1:7f5213b:             public void send(Command command) throws Exception {
1:230a86c:                 super.send((Command)wireFormat.unmarshal(wireFormat.marshal(command)));
1:d29ca2a:             }
1:230a86c: 
1:d29ca2a:             protected void dispatch(Command command) throws InterruptedException, IOException {
1:230a86c:                 super.dispatch((Command)wireFormat.unmarshal(wireFormat.marshal(command)));
1:d29ca2a:             };
1:d29ca2a:         };
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     public static Test suite() {
1:d29ca2a:         return suite(MarshallingBrokerTest.class);
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     public static void main(String[] args) {
1:d29ca2a:         junit.textui.TestRunner.run(suite());
1:d29ca2a:     }
1:6583ef1: 
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:         addCombinationValues("wireFormat", new Object[] {wf1, wf2, });
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:         OpenWireFormat wf1 = new OpenWireFormat();
1:         wf1.setCacheEnabled(false);
1:         OpenWireFormat wf2 = new OpenWireFormat();
1:         wf2.setCacheEnabled(true);
1: 
0:         addCombinationValues("wireFormat", new Object[] {wf1, wf2,});
1: 
1:                 Response r = super.request((Command)wireFormat.unmarshal(wireFormat.marshal(command)));
1:                 if (r != null) {
1:                     r = (Response)wireFormat.unmarshal(wireFormat.marshal(r));
1: 
1:                 super.send((Command)wireFormat.unmarshal(wireFormat.marshal(command)));
1: 
1:                 super.dispatch((Command)wireFormat.unmarshal(wireFormat.marshal(command)));
1: 
1: 
commit:88acb0e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.wireformat.WireFormat;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:f451ad0
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activeio.command.WireFormat;
commit:6583ef1
/////////////////////////////////////////////////////////////////////////
1:     	
0:     	OpenWireFormat wf1 = new OpenWireFormat();
0:     	wf1.setCacheEnabled(false);
0:     	OpenWireFormat wf2 = new OpenWireFormat();
0:     	wf2.setCacheEnabled(true);
1:     	
0:                 wf1, 
0:                 wf2,
commit:7f5213b
/////////////////////////////////////////////////////////////////////////
1:             public Response request(Command command) throws Exception {
1:             public void send(Command command) throws Exception {
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker;
1: 
1: import java.io.IOException;
1: 
1: import junit.framework.Test;
1: 
0: import org.activeio.command.WireFormat;
1: import org.apache.activemq.command.Command;
1: import org.apache.activemq.command.Response;
1: import org.apache.activemq.openwire.OpenWireFormat;
1: 
1: /**
1:  * Runs against the broker but marshals all request and response commands.
1:  * 
0:  * @version $Revision$
1:  */
1: public class MarshallingBrokerTest extends BrokerTest {
1: 
1:     public WireFormat wireFormat = new OpenWireFormat();
1:     
1:     public void initCombos() {
0:         addCombinationValues( "wireFormat", new Object[]{ 
0:                 new OpenWireFormat(true), 
0:                 new OpenWireFormat(false),
0:                 });        
1:     }
1:     
1:     protected StubConnection createConnection() throws Exception {
1:         return new StubConnection(broker) {
0:             public Response request(Command command) throws Throwable {
0:                 Response r = super.request((Command) wireFormat.unmarshal(wireFormat.marshal(command)));
0:                 if( r != null ) {
0:                     r = (Response) wireFormat.unmarshal(wireFormat.marshal(r));
1:                 }
1:                 return r;
1:             }
0:             public void send(Command command) throws Throwable {
0:                 super.send((Command) wireFormat.unmarshal(wireFormat.marshal(command)));
1:             }
1:             protected void dispatch(Command command) throws InterruptedException, IOException {
0:                 super.dispatch((Command) wireFormat.unmarshal(wireFormat.marshal(command)));
1:             };
1:         };
1:     }
1:     public static Test suite() {
1:         return suite(MarshallingBrokerTest.class);
1:     }
1:     
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
1:     
1: 
1: }
============================================================================