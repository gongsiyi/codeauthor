1:ef0734b: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
1:7f883f6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:7f883f6:  * Unless required by applicable law or agreed to in writing, software
1:7f883f6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7f883f6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7f883f6:  * See the License for the specific language governing permissions and
1:7f883f6:  * limitations under the License.
1:ef0734b:  */
1:ef0734b: package org.apache.activemq.command;
1:ef0734b: 
1:ef0734b: import org.apache.activemq.state.CommandVisitor;
1:230a86c: 
1:ef0734b: /**
1:ef0734b:  * Used to start and stop transports as well as terminating clients.
1:7f883f6:  * 
1:ef0734b:  * @openwire:marshaller code="18"
1:b0c2a40:  * 
1:ef0734b:  */
1:230a86c: public class ConnectionControl extends BaseCommand {
1:230a86c:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.CONNECTION_CONTROL;
1:ef0734b:     protected boolean suspend;
1:ef0734b:     protected boolean resume;
1:ef0734b:     protected boolean close;
1:ef0734b:     protected boolean exit;
1:ef0734b:     protected boolean faultTolerant;
1:f392884:     protected String connectedBrokers="";
1:f392884:     protected String reconnectTo = "";
1:fc4a649:     protected byte[] token;
1:f392884:     protected boolean rebalanceConnection;
1:ef0734b: 
1:230a86c:     public byte getDataStructureType() {
1:ef0734b:         return DATA_STRUCTURE_TYPE;
1:ef0734b:     }
1:ef0734b: 
1:230a86c:     public Response visit(CommandVisitor visitor) throws Exception {
1:fb3b6db:         return visitor.processConnectionControl(this);
1:ef0734b:     }
1:f392884:     @Override
1:f392884:     public boolean isConnectionControl() {
1:f392884:         return true;
1:f392884:     }
1:ef0734b: 
1:ef0734b:     /**
1:ef0734b:      * @openwire:property version=1
1:ef0734b:      * @return Returns the close.
1:ef0734b:      */
1:230a86c:     public boolean isClose() {
1:ef0734b:         return close;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:230a86c:      * @param close The close to set.
1:ef0734b:      */
1:230a86c:     public void setClose(boolean close) {
1:230a86c:         this.close = close;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:ef0734b:      * @openwire:property version=1
1:ef0734b:      * @return Returns the exit.
1:ef0734b:      */
1:230a86c:     public boolean isExit() {
1:ef0734b:         return exit;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:230a86c:      * @param exit The exit to set.
1:ef0734b:      */
1:230a86c:     public void setExit(boolean exit) {
1:230a86c:         this.exit = exit;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:ef0734b:      * @openwire:property version=1
1:ef0734b:      * @return Returns the faultTolerant.
1:ef0734b:      */
1:230a86c:     public boolean isFaultTolerant() {
1:ef0734b:         return faultTolerant;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:230a86c:      * @param faultTolerant The faultTolerant to set.
1:ef0734b:      */
1:230a86c:     public void setFaultTolerant(boolean faultTolerant) {
1:230a86c:         this.faultTolerant = faultTolerant;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:ef0734b:      * @openwire:property version=1
1:ef0734b:      * @return Returns the resume.
1:ef0734b:      */
1:230a86c:     public boolean isResume() {
1:ef0734b:         return resume;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:230a86c:      * @param resume The resume to set.
1:ef0734b:      */
1:230a86c:     public void setResume(boolean resume) {
1:230a86c:         this.resume = resume;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:ef0734b:      * @openwire:property version=1
1:ef0734b:      * @return Returns the suspend.
1:ef0734b:      */
1:230a86c:     public boolean isSuspend() {
1:ef0734b:         return suspend;
1:ef0734b:     }
1:ef0734b: 
1:ef0734b:     /**
1:230a86c:      * @param suspend The suspend to set.
1:ef0734b:      */
1:230a86c:     public void setSuspend(boolean suspend) {
1:230a86c:         this.suspend = suspend;
1:ef0734b:     }
1:f392884: 
1:f392884:     /**
1:f392884:      * @openwire:property version=6 cache=false
1:f392884:      * @return connected brokers.
1:f392884:      */
1:f392884:     public String getConnectedBrokers() {
1:f392884:         return this.connectedBrokers;
1:f392884:     }
1:f392884: 
1:f392884:     /**
1:f392884:      * @param connectedBrokers the connectedBrokers to set
1:f392884:      */
1:f392884:     public void setConnectedBrokers(String connectedBrokers) {
1:f392884:         this.connectedBrokers = connectedBrokers;
1:f392884:     }
1:f392884: 
1:f392884:     /**
1:f392884:      *  @openwire:property version=6 cache=false
1:f392884:      * @return the reconnectTo
1:f392884:      */
1:f392884:     public String getReconnectTo() {
1:f392884:         return this.reconnectTo;
1:f392884:     }
1:f392884: 
1:f392884:     /**
1:f392884:      * @param reconnectTo the reconnectTo to set
1:f392884:      */
1:f392884:     public void setReconnectTo(String reconnectTo) {
1:f392884:         this.reconnectTo = reconnectTo;
1:f392884:     }
1:f392884: 
1:f392884:     /**
1:f392884:      * @return the rebalanceConnection
1:f392884:      *  @openwire:property version=6 cache=false
1:f392884:      */
1:f392884:     public boolean isRebalanceConnection() {
1:f392884:         return this.rebalanceConnection;
1:f392884:     }
1:f392884: 
1:f392884:     /**
1:f392884:      * @param rebalanceConnection the rebalanceConnection to set
1:f392884:      */
1:f392884:     public void setRebalanceConnection(boolean rebalanceConnection) {
1:f392884:         this.rebalanceConnection = rebalanceConnection;
1:f392884:     }
1:fc4a649: 
1:fc4a649:     /**
1:fc4a649:      * @openwire:property version=8
1:fc4a649:      * @return the token
1:fc4a649:      */
1:fc4a649:     public byte[] getToken() {
1:fc4a649:         return this.token;
1:fc4a649:     }
1:fc4a649: 
1:fc4a649:     /**
1:fc4a649:      * @param token the token to set
1:fc4a649:      */
1:fc4a649:     public void setToken(byte[] token) {
1:fc4a649:         this.token = token;
1:fc4a649:     }
1:ef0734b: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: 
1: public class ConnectionControl extends BaseCommand {
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.CONNECTION_CONTROL;
1:     public byte getDataStructureType() {
1:     public Response visit(CommandVisitor visitor) throws Exception {
/////////////////////////////////////////////////////////////////////////
1:     public boolean isClose() {
1:      * @param close The close to set.
1:     public void setClose(boolean close) {
1:         this.close = close;
1:     public boolean isExit() {
1:      * @param exit The exit to set.
1:     public void setExit(boolean exit) {
1:         this.exit = exit;
1:     public boolean isFaultTolerant() {
1:      * @param faultTolerant The faultTolerant to set.
1:     public void setFaultTolerant(boolean faultTolerant) {
1:         this.faultTolerant = faultTolerant;
1:     public boolean isResume() {
1:      * @param resume The resume to set.
1:     public void setResume(boolean resume) {
1:         this.resume = resume;
1:     public boolean isSuspend() {
1:      * @param suspend The suspend to set.
1:     public void setSuspend(boolean suspend) {
1:         this.suspend = suspend;
commit:fb3b6db
/////////////////////////////////////////////////////////////////////////
1:         return visitor.processConnectionControl(this);
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:fc4a649
/////////////////////////////////////////////////////////////////////////
1:     protected byte[] token;
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * @openwire:property version=8
1:      * @return the token
1:      */
1:     public byte[] getToken() {
1:         return this.token;
1:     }
1: 
1:     /**
1:      * @param token the token to set
1:      */
1:     public void setToken(byte[] token) {
1:         this.token = token;
1:     }
author:Robert Davies
-------------------------------------------------------------------------------
commit:f392884
/////////////////////////////////////////////////////////////////////////
1:     protected String connectedBrokers="";
1:     protected String reconnectTo = "";
1:     protected boolean rebalanceConnection;
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public boolean isConnectionControl() {
1:         return true;
1:     }
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * @openwire:property version=6 cache=false
1:      * @return connected brokers.
1:      */
1:     public String getConnectedBrokers() {
1:         return this.connectedBrokers;
1:     }
1: 
1:     /**
1:      * @param connectedBrokers the connectedBrokers to set
1:      */
1:     public void setConnectedBrokers(String connectedBrokers) {
1:         this.connectedBrokers = connectedBrokers;
1:     }
1: 
1:     /**
1:      *  @openwire:property version=6 cache=false
1:      * @return the reconnectTo
1:      */
1:     public String getReconnectTo() {
1:         return this.reconnectTo;
1:     }
1: 
1:     /**
1:      * @param reconnectTo the reconnectTo to set
1:      */
1:     public void setReconnectTo(String reconnectTo) {
1:         this.reconnectTo = reconnectTo;
1:     }
1: 
1:     /**
1:      * @return the rebalanceConnection
1:      *  @openwire:property version=6 cache=false
1:      */
1:     public boolean isRebalanceConnection() {
1:         return this.rebalanceConnection;
1:     }
1: 
1:     /**
1:      * @param rebalanceConnection the rebalanceConnection to set
1:      */
1:     public void setRebalanceConnection(boolean rebalanceConnection) {
1:         this.rebalanceConnection = rebalanceConnection;
1:     }
commit:ef0734b
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * 
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
0:  * the License. You may obtain a copy of the License at
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
0:  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
0:  * specific language governing permissions and limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: import org.apache.activemq.state.CommandVisitor;
1: /**
1:  * Used to start and stop transports as well as terminating clients.
0:  * 
1:  * @openwire:marshaller code="18"
0:  * 
0:  * @version $Revision: 1.1 $
1:  */
0: public class ConnectionControl extends BaseCommand{
0:     public static final byte DATA_STRUCTURE_TYPE=CommandTypes.CONNECTION_CONTROL;
1:     protected boolean suspend;
1:     protected boolean resume;
1:     protected boolean close;
1:     protected boolean exit;
1:     protected boolean faultTolerant;
1: 
0:     public byte getDataStructureType(){
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
0:     public Response visit(CommandVisitor visitor) throws Exception{
0:         return null;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      * @return Returns the close.
1:      */
0:     public boolean isClose(){
1:         return close;
1:     }
1: 
1:     /**
0:      * @param close
0:      *            The close to set.
1:      */
0:     public void setClose(boolean close){
0:         this.close=close;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      * @return Returns the exit.
1:      */
0:     public boolean isExit(){
1:         return exit;
1:     }
1: 
1:     /**
0:      * @param exit
0:      *            The exit to set.
1:      */
0:     public void setExit(boolean exit){
0:         this.exit=exit;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      * @return Returns the faultTolerant.
1:      */
0:     public boolean isFaultTolerant(){
1:         return faultTolerant;
1:     }
1: 
1:     /**
0:      * @param faultTolerant
0:      *            The faultTolerant to set.
1:      */
0:     public void setFaultTolerant(boolean faultTolerant){
0:         this.faultTolerant=faultTolerant;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      * @return Returns the resume.
1:      */
0:     public boolean isResume(){
1:         return resume;
1:     }
1: 
1:     /**
0:      * @param resume
0:      *            The resume to set.
1:      */
0:     public void setResume(boolean resume){
0:         this.resume=resume;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1
1:      * @return Returns the suspend.
1:      */
0:     public boolean isSuspend(){
1:         return suspend;
1:     }
1: 
1:     /**
0:      * @param suspend
0:      *            The suspend to set.
1:      */
0:     public void setSuspend(boolean suspend){
0:         this.suspend=suspend;
1:     }
1: }
============================================================================