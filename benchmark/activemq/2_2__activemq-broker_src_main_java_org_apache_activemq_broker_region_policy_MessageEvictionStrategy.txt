1:062dc56: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:062dc56:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:062dc56:  *
1:062dc56:  * Unless required by applicable law or agreed to in writing, software
1:062dc56:  * distributed under the License is distributed on an "AS IS" BASIS,
1:062dc56:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:062dc56:  * See the License for the specific language governing permissions and
1:062dc56:  * limitations under the License.
1:062dc56:  */
1:062dc56: package org.apache.activemq.broker.region.policy;
2:062dc56: 
1:062dc56: import java.io.IOException;
1:062dc56: import java.util.LinkedList;
1:062dc56: 
1:74a7a8b: import org.apache.activemq.broker.region.MessageReference;
1:74a7a8b: 
1:cc6fec6: /**
1:062dc56:  * A strategy for evicting messages from slow consumers.
1:0bbc0ac:  * 
1:062dc56:  * 
1:062dc56:  */
1:062dc56: public interface MessageEvictionStrategy {
1:062dc56: 
1:062dc56:     /**
1:062dc56:      * Find the message reference in the given list with oldest messages at the front and newer messages at the end
1:062dc56:      * 
1:062dc56:      * @return the message that has been evicted.
1:062dc56:      * @throws IOException if an exception occurs such as reading a message content (but should not ever happen
1:062dc56:      * as usually all the messages will be in RAM when this method is called).
1:062dc56:      */
1:171e322:     MessageReference[] evictMessages(LinkedList messages) throws IOException;
1:062dc56: 
1:062dc56:     /**
1:cc6fec6:      * REturns the high water mark on which we will eagerly evict expired messages from RAM
1:cc6fec6:      */
1:cc6fec6:     int getEvictExpiredMessagesHighWatermark();
1:cc6fec6: 
1:062dc56: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.region.MessageReference;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:171e322
/////////////////////////////////////////////////////////////////////////
1:     MessageReference[] evictMessages(LinkedList messages) throws IOException;
commit:cc6fec6
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * REturns the high water mark on which we will eagerly evict expired messages from RAM
1:      */
1:     int getEvictExpiredMessagesHighWatermark();
1: 
commit:062dc56
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.policy;
1: 
0: import org.apache.activemq.broker.region.MessageReference;
1: 
1: import java.io.IOException;
1: import java.util.LinkedList;
1: 
1: /**
1:  * A strategy for evicting messages from slow consumers.
1:  * 
0:  * @version $Revision$
1:  */
1: public interface MessageEvictionStrategy {
1: 
1:     /**
1:      * Find the message reference in the given list with oldest messages at the front and newer messages at the end
1:      * 
1:      * @return the message that has been evicted.
1:      * @throws IOException if an exception occurs such as reading a message content (but should not ever happen
1:      * as usually all the messages will be in RAM when this method is called).
1:      */
0:     MessageReference evictMessage(LinkedList messages) throws IOException;
1: 
1: }
============================================================================