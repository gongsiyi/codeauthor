1:da67a38: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:da67a38:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:da67a38:  *
1:da67a38:  * Unless required by applicable law or agreed to in writing, software
1:da67a38:  * distributed under the License is distributed on an "AS IS" BASIS,
1:da67a38:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:da67a38:  * See the License for the specific language governing permissions and
1:da67a38:  * limitations under the License.
1:da67a38:  */
1:da67a38: package org.apache.activemq.broker.region;
2:da67a38: 
1:d17eceb: import org.apache.activemq.broker.Broker;
1:d17eceb: import org.apache.activemq.broker.ConnectionContext;
1:d17eceb: import org.apache.activemq.command.ActiveMQDestination;
1:d17eceb: 
1:da67a38: /**
1:da67a38:  * Represents a Composite Pattern of a {@link DestinationInterceptor}
1:0bbc0ac:  * 
1:da67a38:  * 
1:da67a38:  */
1:da67a38: public class CompositeDestinationInterceptor implements DestinationInterceptor {
1:da67a38: 
1:8d480b4:     private volatile DestinationInterceptor[] interceptors;
1:da67a38: 
1:da67a38:     public CompositeDestinationInterceptor(final DestinationInterceptor[] interceptors) {
1:da67a38:         this.interceptors = interceptors;
1:da67a38:     }
1:da67a38: 
1:da67a38:     public Destination intercept(Destination destination) {
1:da67a38:         for (int i = 0; i < interceptors.length; i++) {
1:da67a38:             destination = interceptors[i].intercept(destination);
1:da67a38:         }
1:da67a38:         return destination;
1:da67a38:     }
1:16f2d75: 
1:16f2d75:    
1:16f2d75:     public void remove(Destination destination) {
1:16f2d75:         for (int i = 0; i < interceptors.length; i++) {
1:16f2d75:             interceptors[i].remove(destination);
1:16f2d75:         } 
1:16f2d75:     }
1:d17eceb: 
1:d17eceb:     public void create(Broker broker, ConnectionContext context, ActiveMQDestination destination) throws Exception {
1:d17eceb:         for (int i = 0; i < interceptors.length; i++) {
1:d17eceb:             interceptors[i].create(broker, context, destination);
1:d17eceb:         }
1:d17eceb:     }
1:92860ae: 
1:92860ae:     public void setInterceptors(final DestinationInterceptor[] interceptors) {
1:92860ae:         this.interceptors = interceptors;
1:92860ae:     }
1:a38a7c0: 
1:a38a7c0:     public DestinationInterceptor[] getInterceptors() {
1:a38a7c0:         return interceptors;
1:a38a7c0:     }
1:a38a7c0: 
1:da67a38: }
============================================================================
author:Dhiraj Bokde
-------------------------------------------------------------------------------
commit:a38a7c0
/////////////////////////////////////////////////////////////////////////
1: 
1:     public DestinationInterceptor[] getInterceptors() {
1:         return interceptors;
1:     }
1: 
author:Gary Tully
-------------------------------------------------------------------------------
commit:8d480b4
/////////////////////////////////////////////////////////////////////////
1:     private volatile DestinationInterceptor[] interceptors;
commit:92860ae
/////////////////////////////////////////////////////////////////////////
0:     private DestinationInterceptor[] interceptors;
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void setInterceptors(final DestinationInterceptor[] interceptors) {
1:         this.interceptors = interceptors;
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:d17eceb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.Broker;
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.ActiveMQDestination;
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void create(Broker broker, ConnectionContext context, ActiveMQDestination destination) throws Exception {
1:         for (int i = 0; i < interceptors.length; i++) {
1:             interceptors[i].create(broker, context, destination);
1:         }
1:     }
author:Robert Davies
-------------------------------------------------------------------------------
commit:16f2d75
/////////////////////////////////////////////////////////////////////////
1: 
1:    
1:     public void remove(Destination destination) {
1:         for (int i = 0; i < interceptors.length; i++) {
1:             interceptors[i].remove(destination);
1:         } 
1:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:da67a38
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region;
1: 
1: /**
1:  * Represents a Composite Pattern of a {@link DestinationInterceptor}
1:  * 
0:  * @version $Revision$
1:  */
1: public class CompositeDestinationInterceptor implements DestinationInterceptor {
1: 
0:     private final DestinationInterceptor[] interceptors;
1: 
1:     public CompositeDestinationInterceptor(final DestinationInterceptor[] interceptors) {
1:         this.interceptors = interceptors;
1:     }
1: 
1:     public Destination intercept(Destination destination) {
1:         for (int i = 0; i < interceptors.length; i++) {
1:             destination = interceptors[i].intercept(destination);
1:         }
1:         return destination;
1:     }
1:     
1: }
============================================================================