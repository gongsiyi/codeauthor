1:fc00993: /**
1:8cf4795:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8cf4795:  * contributor license agreements.  See the NOTICE file distributed with
1:8cf4795:  * this work for additional information regarding copyright ownership.
1:8cf4795:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8cf4795:  * (the "License"); you may not use this file except in compliance with
1:8cf4795:  * the License.  You may obtain a copy of the License at
1:74a7a8b:  *
1:8cf4795:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:8cf4795:  * Unless required by applicable law or agreed to in writing, software
1:8cf4795:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8cf4795:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8cf4795:  * See the License for the specific language governing permissions and
1:8cf4795:  * limitations under the License.
1:8cf4795:  */
1:8cf4795: package org.apache.activemq.blob;
4:8cf4795: 
1:8cf4795: import java.io.File;
1:8cf4795: import java.io.IOException;
1:05a8cba: import java.io.InputStream;
1:8cf4795: import java.net.URL;
1:8cf4795: 
1:74a7a8b: import javax.jms.JMSException;
1:74a7a8b: 
1:74a7a8b: import org.apache.activemq.command.ActiveMQBlobMessage;
1:74a7a8b: 
1:8cf4795: /**
1:8cf4795:  * A helper class to represent a required upload of a BLOB to some remote URL
1:12b26b6:  *
1:12b26b6:  *
1:8cf4795:  */
1:8cf4795: public class BlobUploader {
1:8cf4795: 
1:c70d97f:     private final BlobTransferPolicy blobTransferPolicy;
1:8cf4795:     private File file;
1:8cf4795:     private InputStream in;
1:8cf4795: 
1:05a8cba:     public BlobUploader(BlobTransferPolicy blobTransferPolicy, InputStream in) {
1:c70d97f:         // need to do a defensive copy
1:c70d97f:         this.blobTransferPolicy = blobTransferPolicy.copy();
1:05a8cba:         this.in = in;
2:8cf4795:     }
1:8cf4795: 
1:05a8cba:     public BlobUploader(BlobTransferPolicy blobTransferPolicy, File file) {
1:c70d97f:         // need to do a defensive copy
1:c70d97f:         this.blobTransferPolicy = blobTransferPolicy.copy();
1:05a8cba:         this.file = file;
1:8cf4795:     }
1:05a8cba: 
1:8cf4795:     public URL upload(ActiveMQBlobMessage message) throws JMSException, IOException {
1:8cf4795:         if (file != null) {
1:05a8cba:             return getStrategy().uploadFile(message, file);
1:74a7a8b:         } else {
1:05a8cba:             return getStrategy().uploadStream(message, in);
1:8cf4795:         }
1:8cf4795:     }
1:05a8cba: 
1:05a8cba:     public BlobTransferPolicy getBlobTransferPolicy() {
1:05a8cba:         return blobTransferPolicy;
1:05a8cba:     }
1:05a8cba: 
1:05a8cba:     public BlobUploadStrategy getStrategy() {
1:05a8cba:         return getBlobTransferPolicy().getUploadStrategy();
1:05a8cba:     }
1:8cf4795: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:12b26b6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: /**
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.JMSException;
1: 
1: import org.apache.activemq.command.ActiveMQBlobMessage;
1: 
1:  * 
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         } else {
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:c70d97f
/////////////////////////////////////////////////////////////////////////
1:     private final BlobTransferPolicy blobTransferPolicy;
1:         // need to do a defensive copy
1:         this.blobTransferPolicy = blobTransferPolicy.copy();
1:         // need to do a defensive copy
1:         this.blobTransferPolicy = blobTransferPolicy.copy();
author:James Strachan
-------------------------------------------------------------------------------
commit:05a8cba
/////////////////////////////////////////////////////////////////////////
1: import java.io.InputStream;
/////////////////////////////////////////////////////////////////////////
0:     private BlobTransferPolicy blobTransferPolicy;
1:     public BlobUploader(BlobTransferPolicy blobTransferPolicy, InputStream in) {
0:         this.blobTransferPolicy = blobTransferPolicy;
1:         this.in = in;
1:     public BlobUploader(BlobTransferPolicy blobTransferPolicy, File file) {
0:         this.blobTransferPolicy = blobTransferPolicy;
1:         this.file = file;
1:             return getStrategy().uploadFile(message, file);
1:             return getStrategy().uploadStream(message, in);
1: 
1: 
1:     public BlobTransferPolicy getBlobTransferPolicy() {
1:         return blobTransferPolicy;
1:     }
1: 
1:     public BlobUploadStrategy getStrategy() {
1:         return getBlobTransferPolicy().getUploadStrategy();
1:     }
commit:8cf4795
/////////////////////////////////////////////////////////////////////////
0: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
0:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.blob;
1: 
0: import org.apache.activemq.command.ActiveMQBlobMessage;
1: 
0: import javax.jms.JMSException;
1: import java.io.File;
0: import java.io.*;
1: import java.io.IOException;
1: import java.net.URL;
1: 
1: /**
1:  * A helper class to represent a required upload of a BLOB to some remote URL
0:  *
0:  * @version $Revision: $
1:  */
1: public class BlobUploader {
1: 
0:     private BlobUploadStrategy strategy;
1:     private File file;
1:     private InputStream in;
1: 
1: 
0:     public BlobUploader(BlobUploadStrategy strategy, File file) {
0:         this.strategy = strategy;
0:         this.file = file;
1:     }
1: 
0:     public BlobUploader(BlobUploadStrategy strategy, InputStream in) {
0:         this.strategy = strategy;
0:         this.in = in;
1:     }
1: 
1:     public URL upload(ActiveMQBlobMessage message) throws JMSException, IOException {
1:         if (file != null) {
0:             return strategy.uploadFile(message, file);
1:         }
0:         else {
0:             return strategy.uploadStream(message, in);
1:         }
1:     }
1: }
============================================================================