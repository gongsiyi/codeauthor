1:489f929: /**
1:489f929:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:489f929:  * contributor license agreements.  See the NOTICE file distributed with
1:489f929:  * this work for additional information regarding copyright ownership.
1:489f929:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:489f929:  * (the "License"); you may not use this file except in compliance with
1:489f929:  * the License.  You may obtain a copy of the License at
1:489f929:  *
1:489f929:  *      http://www.apache.org/licenses/LICENSE-2.0
1:489f929:  *
1:489f929:  * Unless required by applicable law or agreed to in writing, software
1:489f929:  * distributed under the License is distributed on an "AS IS" BASIS,
1:489f929:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:489f929:  * See the License for the specific language governing permissions and
1:489f929:  * limitations under the License.
1:489f929:  */
1:489f929: package org.apache.activemq.broker.jmx;
1:489f929: 
1:489f929: import org.apache.activemq.management.TimeStatisticImpl;
1:489f929: import org.slf4j.Logger;
1:489f929: import org.slf4j.LoggerFactory;
1:489f929: 
1:489f929: public class NetworkDestinationView implements NetworkDestinationViewMBean {
1:489f929:     private static final Logger LOG = LoggerFactory.getLogger(NetworkDestinationViewMBean.class);
1:489f929:     private TimeStatisticImpl timeStatistic = new TimeStatisticImpl("networkEnqueue","network messages enqueued");
1:489f929: 
1:489f929:     private final String name;
1:9b88902:     private final NetworkBridgeView networkBridgeView;
1:489f929:     private long lastTime = -1;
1:489f929: 
1:9b88902:     public NetworkDestinationView(NetworkBridgeView networkBridgeView, String name){
1:9b88902:        this.networkBridgeView = networkBridgeView;
1:9b88902:        this.name=name;
1:489f929:     }
1:489f929:     /**
1:489f929:      * Returns the name of this destination
1:489f929:      */
1:489f929:     @Override
1:489f929:     public String getName() {
1:489f929:         return name;
1:489f929:     }
1:489f929: 
1:489f929:     /**
1:489f929:      * Resets the managment counters.
1:489f929:      */
1:489f929:     @Override
1:9b88902:     public void resetStats() {
1:489f929:         timeStatistic.reset();
1:489f929:         lastTime = -1;
1:489f929:     }
1:489f929: 
1:489f929: 
1:489f929:     @Override
1:489f929:     public long getCount() {
1:489f929:         return timeStatistic.getCount();
1:489f929:     }
1:489f929: 
1:489f929:     @Override
1:489f929:     public double getRate() {
1:489f929:         return timeStatistic.getAveragePerSecond();
1:489f929:     }
1:489f929: 
1:489f929:     public void messageSent(){
1:489f929:         long currentTime = System.currentTimeMillis();
1:489f929:         long time = 0;
1:489f929:         if (lastTime < 0){
1:489f929:             time = 0;
1:489f929:             lastTime = currentTime;
1:489f929:         }else{
1:489f929:             time = currentTime-lastTime;
1:489f929:         }
1:489f929:         timeStatistic.addTime(time);
1:489f929:         lastTime=currentTime;
1:489f929:     }
1:9b88902: 
1:374cab9:     public long getLastAccessTime(){
1:374cab9:         return timeStatistic.getLastSampleTime();
1:374cab9:     }
1:374cab9: 
1:9b88902:     public void close(){
1:9b88902:         networkBridgeView.removeNetworkDestinationView(this);
1:9b88902:     }
1:374cab9: 
1:374cab9: 
1:489f929: }
============================================================================
author:rajdavies
-------------------------------------------------------------------------------
commit:374cab9
/////////////////////////////////////////////////////////////////////////
1:     public long getLastAccessTime(){
1:         return timeStatistic.getLastSampleTime();
1:     }
1: 
1: 
1: 
commit:9b88902
/////////////////////////////////////////////////////////////////////////
1:     private final NetworkBridgeView networkBridgeView;
1:     public NetworkDestinationView(NetworkBridgeView networkBridgeView, String name){
1:        this.networkBridgeView = networkBridgeView;
1:        this.name=name;
/////////////////////////////////////////////////////////////////////////
1:     public void resetStats() {
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void close(){
1:         networkBridgeView.removeNetworkDestinationView(this);
1:     }
commit:489f929
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import org.apache.activemq.management.TimeStatisticImpl;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: public class NetworkDestinationView implements NetworkDestinationViewMBean {
1:     private static final Logger LOG = LoggerFactory.getLogger(NetworkDestinationViewMBean.class);
1:     private TimeStatisticImpl timeStatistic = new TimeStatisticImpl("networkEnqueue","network messages enqueued");
1: 
1:     private final String name;
1:     private long lastTime = -1;
1: 
0:     public NetworkDestinationView(String name){
0:        this.name = name;
1:     }
1:     /**
1:      * Returns the name of this destination
1:      */
1:     @Override
1:     public String getName() {
1:         return name;
1:     }
1: 
1:     /**
1:      * Resets the managment counters.
1:      */
1:     @Override
0:     public void resetStatistics() {
1:         timeStatistic.reset();
1:         lastTime = -1;
1:     }
1: 
1: 
1:     @Override
1:     public long getCount() {
1:         return timeStatistic.getCount();
1:     }
1: 
1:     @Override
1:     public double getRate() {
1:         return timeStatistic.getAveragePerSecond();
1:     }
1: 
1:     public void messageSent(){
1:         long currentTime = System.currentTimeMillis();
1:         long time = 0;
1:         if (lastTime < 0){
1:             time = 0;
1:             lastTime = currentTime;
1:         }else{
1:             time = currentTime-lastTime;
1:         }
1:         timeStatistic.addTime(time);
1:         lastTime=currentTime;
1:     }
1: }
============================================================================