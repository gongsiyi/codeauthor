1:c4d8d86: /**
1:c4d8d86:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c4d8d86:  * contributor license agreements.  See the NOTICE file distributed with
1:c4d8d86:  * this work for additional information regarding copyright ownership.
1:c4d8d86:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c4d8d86:  * (the "License"); you may not use this file except in compliance with
1:c4d8d86:  * the License.  You may obtain a copy of the License at
1:c4d8d86:  *
1:c4d8d86:  *      http://www.apache.org/licenses/LICENSE-2.0
1:c4d8d86:  *
1:c4d8d86:  * Unless required by applicable law or agreed to in writing, software
1:c4d8d86:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c4d8d86:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c4d8d86:  * See the License for the specific language governing permissions and
1:c4d8d86:  * limitations under the License.
1:c4d8d86:  */
1:c4d8d86: package org.apache.activemq.transport.logwriters;
1:c4d8d86: 
1:c4d8d86: import java.io.IOException;
1:c4d8d86: 
1:c4d8d86: import org.apache.activemq.transport.LogWriter;
1:8bf987b: import org.slf4j.Logger;
1:c4d8d86: 
1:c4d8d86: /**
1:c4d8d86:  * Implementation of LogWriter interface to keep ActiveMQ's
1:c4d8d86:  * old logging format.
1:c4d8d86:  * 
1:c4d8d86:  * @author David Martin Clavo david(dot)martin(dot)clavo(at)gmail.com
1:0bbc0ac:  * 
1:c4d8d86:  */
1:c4d8d86: public class DefaultLogWriter implements LogWriter {
1:c4d8d86: 
1:5385fd1:     String prefix = "";
1:5385fd1:     @Override
1:5385fd1:     public void setPrefix(String prefix) {
1:5385fd1:         this.prefix = prefix;
1:5385fd1:     }
1:5385fd1: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void initialMessage(Logger log) {
1:c4d8d86:         // Default log writer does nothing here
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void logRequest (Logger log, Object command) {
1:5385fd1:         log.debug(prefix + "SENDING REQUEST: "+command);
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void logResponse (Logger log, Object response) {
1:5385fd1:         log.debug(prefix + "GOT RESPONSE: "+response);
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void logAsyncRequest (Logger log, Object command) {
1:5385fd1:         log.debug(prefix + "SENDING ASNYC REQUEST: "+command);
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void logOneWay (Logger log, Object command) {
1:5385fd1:         log.debug(prefix + "SENDING: "+command);
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void logReceivedCommand (Logger log, Object command) {
1:5385fd1:         log.debug(prefix + "RECEIVED: " + command);
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86:     // doc comment inherited from LogWriter
1:8bf987b:     public void logReceivedException (Logger log, IOException error) {
1:5385fd1:         log.debug(prefix + "RECEIVED Exception: "+error, error);
1:c4d8d86:     }
1:c4d8d86: 
1:c4d8d86: 
1:c4d8d86: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:5385fd1
/////////////////////////////////////////////////////////////////////////
1:     String prefix = "";
1:     @Override
1:     public void setPrefix(String prefix) {
1:         this.prefix = prefix;
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1:         log.debug(prefix + "SENDING REQUEST: "+command);
1:         log.debug(prefix + "GOT RESPONSE: "+response);
1:         log.debug(prefix + "SENDING ASNYC REQUEST: "+command);
1:         log.debug(prefix + "SENDING: "+command);
1:         log.debug(prefix + "RECEIVED: " + command);
1:         log.debug(prefix + "RECEIVED Exception: "+error, error);
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:c4d8d86
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.logwriters;
1: 
1: import java.io.IOException;
1: 
1: import org.apache.activemq.transport.LogWriter;
0: import org.apache.commons.logging.Log;
1: 
1: /**
1:  * Implementation of LogWriter interface to keep ActiveMQ's
1:  * old logging format.
1:  * 
1:  * @author David Martin Clavo david(dot)martin(dot)clavo(at)gmail.com
0:  * @version $Revision$
1:  */
1: public class DefaultLogWriter implements LogWriter {
1: 
1:     // doc comment inherited from LogWriter
0:     public void initialMessage(Log log) {
1:         // Default log writer does nothing here
1:     }
1: 
1:     // doc comment inherited from LogWriter
0:     public void logRequest (Log log, Object command) {
0:         log.debug("SENDING REQUEST: "+command);
1:     }
1: 
1:     // doc comment inherited from LogWriter
0:     public void logResponse (Log log, Object response) {
0:         log.debug("GOT RESPONSE: "+response);
1:     }
1: 
1:     // doc comment inherited from LogWriter
0:     public void logAsyncRequest (Log log, Object command) {
0:         log.debug("SENDING ASNYC REQUEST: "+command);
1:     }
1: 
1:     // doc comment inherited from LogWriter
0:     public void logOneWay (Log log, Object command) {
0:         log.debug("SENDING: "+command);
1:     }
1: 
1:     // doc comment inherited from LogWriter
0:     public void logReceivedCommand (Log log, Object command) {
0:         log.debug("RECEIVED: " + command);
1:     }
1: 
1:     // doc comment inherited from LogWriter
0:     public void logReceivedException (Log log, IOException error) {
0:         log.debug("RECEIVED Exception: "+error, error);
1:     }
1: 
1: 
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
/////////////////////////////////////////////////////////////////////////
1:     public void initialMessage(Logger log) {
1:     public void logRequest (Logger log, Object command) {
1:     public void logResponse (Logger log, Object response) {
1:     public void logAsyncRequest (Logger log, Object command) {
1:     public void logOneWay (Logger log, Object command) {
1:     public void logReceivedCommand (Logger log, Object command) {
1:     public void logReceivedException (Logger log, IOException error) {
author:Robert Davies
-------------------------------------------------------------------------------
commit:19a83ae
/////////////////////////////////////////////////////////////////////////
commit:df6b542
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.transport.logwriters;
0: 
0: import java.io.IOException;
0: 
0: import org.apache.activemq.transport.LogWriter;
0: import org.apache.commons.logging.Log;
0: 
0: /**
0:  * Implementation of LogWriter interface to keep ActiveMQ's
0:  * old logging format.
0:  */
0: public class DefaultLogWriter implements LogWriter {
0: 
0:     // doc comment inherited from LogWriter
0:     public void initialMessage(Log log) {
0:         // Default log writer does nothing here
0:     }
0: 
0:     // doc comment inherited from LogWriter
0:     public void logRequest (Log log, Object command) {
0:         log.debug("SENDING REQUEST: "+command);
0:     }
0: 
0:     // doc comment inherited from LogWriter
0:     public void logResponse (Log log, Object response) {
0:         log.debug("GOT RESPONSE: "+response);
0:     }
0: 
0:     // doc comment inherited from LogWriter
0:     public void logAsyncRequest (Log log, Object command) {
0:         log.debug("SENDING ASNYC REQUEST: "+command);
0:     }
0: 
0:     // doc comment inherited from LogWriter
0:     public void logOneWay (Log log, Object command) {
0:         log.debug("SENDING: "+command);
0:     }
0: 
0:     // doc comment inherited from LogWriter
0:     public void logReceivedCommand (Log log, Object command) {
0:         log.debug("RECEIVED: " + command);
0:     }
0: 
0:     // doc comment inherited from LogWriter
0:     public void logReceivedException (Log log, IOException error) {
0:         log.debug("RECEIVED Exception: "+error, error);
0:     }
0: 
0: 
0: }
============================================================================