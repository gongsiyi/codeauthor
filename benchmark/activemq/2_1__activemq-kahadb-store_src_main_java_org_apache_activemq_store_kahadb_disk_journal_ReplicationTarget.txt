1:3f32507: /**
1:3f32507:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3f32507:  * contributor license agreements.  See the NOTICE file distributed with
1:3f32507:  * this work for additional information regarding copyright ownership.
1:3f32507:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3f32507:  * (the "License"); you may not use this file except in compliance with
1:3f32507:  * the License.  You may obtain a copy of the License at
1:3f32507:  *
1:3f32507:  *      http://www.apache.org/licenses/LICENSE-2.0
1:3f32507:  *
1:3f32507:  * Unless required by applicable law or agreed to in writing, software
1:3f32507:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3f32507:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3f32507:  * See the License for the specific language governing permissions and
1:3f32507:  * limitations under the License.
1:3f32507:  */
1:3f32507: package org.apache.activemq.store.kahadb.disk.journal;
1:3f32507: 
1:3f32507: import org.apache.activemq.util.ByteSequence;
1:3f32507: 
1:3f32507: public interface ReplicationTarget {
1:3f32507: 
1:3f32507: 	void replicate(Location location, ByteSequence sequence, boolean sync);
1:3f32507: 
1:3f32507: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:3f32507
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.kahadb.disk.journal;
1: 
1: import org.apache.activemq.util.ByteSequence;
1: 
1: public interface ReplicationTarget {
1: 
1: 	void replicate(Location location, ByteSequence sequence, boolean sync);
1: 
1: }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:1aab71b
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.store.kahadb.disk.journal;
0: import org.apache.activemq.util.ByteSequence;
commit:715010a
commit:456a2ba
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.kahadb.journal;
0: 
0: import org.apache.kahadb.util.ByteSequence;
0: 
0: public interface ReplicationTarget {
0: 
0: 	void replicate(Location location, ByteSequence sequence, boolean sync);
0: 
0: }
============================================================================