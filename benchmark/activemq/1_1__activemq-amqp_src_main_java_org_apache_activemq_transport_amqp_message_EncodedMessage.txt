1:d54e21b: /*
1:6e69319:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6e69319:  * contributor license agreements.  See the NOTICE file distributed with
1:6e69319:  * this work for additional information regarding copyright ownership.
1:6e69319:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6e69319:  * (the "License"); you may not use this file except in compliance with
1:6e69319:  * the License.  You may obtain a copy of the License at
1:6e69319:  *
1:6e69319:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6e69319:  *
1:6e69319:  * Unless required by applicable law or agreed to in writing, software
1:6e69319:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6e69319:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6e69319:  * See the License for the specific language governing permissions and
1:6e69319:  * limitations under the License.
1:6e69319:  */
1:6e69319: package org.apache.activemq.transport.amqp.message;
1:6e69319: 
1:6e69319: import org.apache.qpid.proton.amqp.Binary;
1:6e69319: import org.apache.qpid.proton.message.Message;
1:6e69319: 
1:6e69319: public class EncodedMessage {
1:6e69319: 
1:6e69319:     private final Binary data;
1:d54e21b:     private final long messageFormat;
1:6e69319: 
1:6e69319:     public EncodedMessage(long messageFormat, byte[] data, int offset, int length) {
1:6e69319:         this.data = new Binary(data, offset, length);
1:6e69319:         this.messageFormat = messageFormat;
1:6e69319:     }
1:6e69319: 
1:6e69319:     public long getMessageFormat() {
1:6e69319:         return messageFormat;
1:6e69319:     }
1:6e69319: 
1:6e69319:     public Message decode() throws Exception {
1:6e69319:         Message amqp = Message.Factory.create();
1:6e69319: 
1:6e69319:         int offset = getArrayOffset();
1:6e69319:         int len = getLength();
1:6e69319:         while (len > 0) {
1:6e69319:             final int decoded = amqp.decode(getArray(), offset, len);
1:6e69319:             assert decoded > 0 : "Make progress decoding the message";
1:6e69319:             offset += decoded;
1:6e69319:             len -= decoded;
1:6e69319:         }
1:6e69319: 
1:6e69319:         return amqp;
1:6e69319:     }
1:6e69319: 
1:6e69319:     public int getLength() {
1:6e69319:         return data.getLength();
1:6e69319:     }
1:6e69319: 
1:6e69319:     public int getArrayOffset() {
1:6e69319:         return data.getArrayOffset();
1:6e69319:     }
1:6e69319: 
1:6e69319:     public byte[] getArray() {
1:6e69319:         return data.getArray();
1:6e69319:     }
1:6e69319: 
1:6e69319:     @Override
1:6e69319:     public String toString() {
1:6e69319:         return data.toString();
1:6e69319:     }
1:6e69319: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:d54e21b
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
1:     private final long messageFormat;
commit:6e69319
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.message;
1: 
1: import org.apache.qpid.proton.amqp.Binary;
1: import org.apache.qpid.proton.message.Message;
1: 
1: public class EncodedMessage {
1: 
1:     private final Binary data;
0:     final long messageFormat;
1: 
1:     public EncodedMessage(long messageFormat, byte[] data, int offset, int length) {
1:         this.data = new Binary(data, offset, length);
1:         this.messageFormat = messageFormat;
1:     }
1: 
1:     public long getMessageFormat() {
1:         return messageFormat;
1:     }
1: 
1:     public Message decode() throws Exception {
1:         Message amqp = Message.Factory.create();
1: 
1:         int offset = getArrayOffset();
1:         int len = getLength();
1:         while (len > 0) {
1:             final int decoded = amqp.decode(getArray(), offset, len);
1:             assert decoded > 0 : "Make progress decoding the message";
1:             offset += decoded;
1:             len -= decoded;
1:         }
1: 
1:         return amqp;
1:     }
1: 
1:     public int getLength() {
1:         return data.getLength();
1:     }
1: 
1:     public int getArrayOffset() {
1:         return data.getArrayOffset();
1:     }
1: 
1:     public byte[] getArray() {
1:         return data.getArray();
1:     }
1: 
1:     @Override
1:     public String toString() {
1:         return data.toString();
1:     }
1: }
============================================================================