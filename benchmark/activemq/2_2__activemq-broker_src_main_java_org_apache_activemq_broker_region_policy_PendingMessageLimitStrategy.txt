1:95d0dec: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:95d0dec:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:95d0dec:  *
1:95d0dec:  * Unless required by applicable law or agreed to in writing, software
1:95d0dec:  * distributed under the License is distributed on an "AS IS" BASIS,
1:95d0dec:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:95d0dec:  * See the License for the specific language governing permissions and
1:95d0dec:  * limitations under the License.
1:95d0dec:  */
1:95d0dec: package org.apache.activemq.broker.region.policy;
1:95d0dec: 
1:95d0dec: import org.apache.activemq.broker.region.TopicSubscription;
1:95d0dec: 
1:95d0dec: /**
1:95d0dec:  * A pluggable strategy to calculate the maximum number of messages that are allowed to be pending on 
1:95d0dec:  * consumers (in addition to their prefetch sizes).
1:95d0dec:  * 
1:95d0dec:  * Once the limit is reached, non-durable topics can then start discarding old messages.
1:95d0dec:  * This allows us to keep dispatching messages to slow consumers while not blocking fast consumers
1:95d0dec:  * and discarding the messages oldest first.
1:0bbc0ac:  *  
1:95d0dec:  * 
1:95d0dec:  */
1:95d0dec: public interface PendingMessageLimitStrategy {
1:95d0dec: 
1:95d0dec:     /**
1:95d0dec:      * Calculate the maximum number of pending messages (in excess of the prefetch size)
1:95d0dec:      * for the given subscription
1:95d0dec:      * 
1:95d0dec:      * @return the maximum or -1 if there is no maximum
1:95d0dec:      */
1:95d0dec:     int getMaximumPendingMessageLimit(TopicSubscription subscription);
1:95d0dec: 
1:95d0dec: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:95d0dec
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.policy;
1: 
1: import org.apache.activemq.broker.region.TopicSubscription;
1: 
1: /**
1:  * A pluggable strategy to calculate the maximum number of messages that are allowed to be pending on 
1:  * consumers (in addition to their prefetch sizes).
1:  * 
1:  * Once the limit is reached, non-durable topics can then start discarding old messages.
1:  * This allows us to keep dispatching messages to slow consumers while not blocking fast consumers
1:  * and discarding the messages oldest first.
1:  *  
0:  * @version $Revision$
1:  */
1: public interface PendingMessageLimitStrategy {
1: 
1:     /**
1:      * Calculate the maximum number of pending messages (in excess of the prefetch size)
1:      * for the given subscription
1:      * 
1:      * @return the maximum or -1 if there is no maximum
1:      */
1:     int getMaximumPendingMessageLimit(TopicSubscription subscription);
1: 
1: }
============================================================================