1:960dce7: /**
1:960dce7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:960dce7:  * contributor license agreements.  See the NOTICE file distributed with
1:960dce7:  * this work for additional information regarding copyright ownership.
1:960dce7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:960dce7:  * (the "License"); you may not use this file except in compliance with
1:960dce7:  * the License.  You may obtain a copy of the License at
1:540dd5c:  *
1:540dd5c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:540dd5c:  *
1:960dce7:  * Unless required by applicable law or agreed to in writing, software
1:960dce7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:960dce7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:960dce7:  * See the License for the specific language governing permissions and
1:960dce7:  * limitations under the License.
1:960dce7:  */
1:a88906f: package org.apache.activemq.tool.sampler;
2:a88906f: 
1:540dd5c: import java.io.IOException;
1:540dd5c: 
1:540dd5c: import org.apache.activemq.tool.reports.AbstractPerfReportWriter;
1:a88906f: import org.apache.activemq.tool.sampler.plugins.CpuSamplerPlugin;
1:a88906f: import org.apache.activemq.tool.sampler.plugins.LinuxCpuSamplerPlugin;
1:a88906f: 
1:a88906f: public class CpuSamplerTask extends AbstractPerformanceSampler {
1:a88906f: 
1:540dd5c:     private CpuSamplerPlugin plugin;
1:a88906f: 
1:a88906f:     public void createPlugin() throws IOException {
1:a88906f:         createPlugin(System.getProperty("os.name"));
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void createPlugin(String osName) throws IOException {
1:a88906f:         if (osName == null) {
1:a88906f:             throw new IOException("No defined OS name found. Found: " + osName);
1:a88906f:         }
1:a88906f: 
1:a88906f:         if (osName.equalsIgnoreCase(CpuSamplerPlugin.LINUX)) {
1:a88906f:             plugin = new LinuxCpuSamplerPlugin(getInterval());
1:a88906f:         } else {
1:a88906f:             throw new IOException("No CPU Sampler Plugin found for OS: " + osName + ". CPU Sampler will not be started.");
1:a88906f:         }
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void sampleData() {
1:a88906f:         if (plugin != null && perfReportWriter != null) {
1:fddc01d:             perfReportWriter.writeCsvData(AbstractPerfReportWriter.REPORT_PLUGIN_CPU, "index=" + sampleIndex + "," + plugin.getCpuUtilizationStats());
1:a88906f:         }
1:a88906f:     }
1:a88906f: 
1:a88906f:     protected void onRampUpStart() {
1:a88906f:         super.onRampUpStart();
1:a88906f:         if (plugin != null) {
1:a88906f:             plugin.start();
1:a88906f:         }
1:a88906f:     }
1:a88906f: 
1:a88906f:     protected void onRampDownEnd() {
1:a88906f:         super.onRampDownEnd();
1:a88906f:         if (plugin != null) {
1:a88906f:             plugin.stop();
1:a88906f:         }
1:a88906f:     }
1:a88906f: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:87e878b
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1: 
1: import org.apache.activemq.tool.reports.AbstractPerfReportWriter;
1:     private CpuSamplerPlugin plugin;
commit:960dce7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:a88906f
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.tool.sampler;
1: 
1: import org.apache.activemq.tool.sampler.plugins.CpuSamplerPlugin;
1: import org.apache.activemq.tool.sampler.plugins.LinuxCpuSamplerPlugin;
0: import org.apache.activemq.tool.reports.plugins.ReportPlugin;
1: 
0: import java.io.IOException;
1: 
1: public class CpuSamplerTask extends AbstractPerformanceSampler {
1: 
0:     private CpuSamplerPlugin plugin = null;
1: 
1:     public void createPlugin() throws IOException {
1:         createPlugin(System.getProperty("os.name"));
1:     }
1: 
1:     public void createPlugin(String osName) throws IOException {
1:         if (osName == null) {
1:             throw new IOException("No defined OS name found. Found: " + osName);
1:         }
1: 
1:         if (osName.equalsIgnoreCase(CpuSamplerPlugin.LINUX)) {
1:             plugin = new LinuxCpuSamplerPlugin(getInterval());
1:         } else {
1:             throw new IOException("No CPU Sampler Plugin found for OS: " + osName + ". CPU Sampler will not be started.");
1:         }
1:     }
1: 
1:     public void sampleData() {
1:         if (plugin != null && perfReportWriter != null) {
0:             perfReportWriter.writeCsvData(ReportPlugin.REPORT_PLUGIN_CPU, "index=" + sampleIndex + "," + plugin.getCpuUtilizationStats());
1:         }
1:     }
1: 
1:     protected void onRampUpStart() {
1:         super.onRampUpStart();
1:         if (plugin != null) {
1:             plugin.start();
1:         }
1:     }
1: 
1:     protected void onRampDownEnd() {
1:         super.onRampDownEnd();
1:         if (plugin != null) {
1:             plugin.stop();
1:         }
1:     }
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:dd55c21
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:7450969
/////////////////////////////////////////////////////////////////////////
commit:fddc01d
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.tool.reports.AbstractPerfReportWriter;
/////////////////////////////////////////////////////////////////////////
1:             perfReportWriter.writeCsvData(AbstractPerfReportWriter.REPORT_PLUGIN_CPU, "index=" + sampleIndex + "," + plugin.getCpuUtilizationStats());
commit:b1d2279
/////////////////////////////////////////////////////////////////////////
0:             perfReportWriter.writeCsvData(ReportPlugin.REPORT_PLUGIN_CPU, "index=" + sampleIndex + "," + plugin.getCpuUtilizationStats());
commit:cc1986f
/////////////////////////////////////////////////////////////////////////
0:             throw new IOException("No defined OS name found. Found: " + osName);
0:             plugin = new LinuxCpuSamplerPlugin(getInterval());
/////////////////////////////////////////////////////////////////////////
0: 
0:     protected void onRampUpStart() {
0:         super.onRampUpStart();
0:         if (plugin != null) {
0:             plugin.start();
0:         }
0:     }
0: 
0:     protected void onRampDownEnd() {
0:         super.onRampDownEnd();
0:         if (plugin != null) {
0:             plugin.stop();
0:         }
0:     }
commit:80bf241
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.tool.sampler;
0: 
0: import org.apache.activemq.tool.sampler.plugins.CpuSamplerPlugin;
0: import org.apache.activemq.tool.sampler.plugins.LinuxCpuSamplerPlugin;
0: import org.apache.activemq.tool.reports.plugins.ReportPlugin;
0: 
0: import java.io.IOException;
0: 
0: public class CpuSamplerTask extends AbstractPerformanceSampler {
0: 
0:     private CpuSamplerPlugin plugin = null;
0: 
0:     public void createPlugin() throws IOException {
0:         createPlugin(System.getProperty("os.name"));
0:     }
0: 
0:     public void createPlugin(String osName) throws IOException {
0:         if (osName == null) {
0:             throw new IOException("No defined OS name found. Foound: " + osName);
0:         }
0: 
0:         if (osName.equalsIgnoreCase(CpuSamplerPlugin.LINUX)) {
0:             plugin = new LinuxCpuSamplerPlugin();
0:         } else {
0:             throw new IOException("No CPU Sampler Plugin found for OS: " + osName + ". CPU Sampler will not be started.");
0:         }
0:     }
0: 
0:     public void sampleData() {
0:         if (plugin != null && perfReportWriter != null) {
0:             perfReportWriter.writeCsvData(ReportPlugin.REPORT_PLUGIN_CPU, plugin.getCpuUtilizationStats());
0:         }
0:     }
0: }
============================================================================