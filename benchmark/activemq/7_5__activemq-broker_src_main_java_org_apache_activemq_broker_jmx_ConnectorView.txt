1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
2:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.broker.jmx;
1:fc00993: 
1:d29ca2a: import org.apache.activemq.broker.Connector;
1:d29ca2a: import org.apache.activemq.command.BrokerInfo;
14:d29ca2a: 
1:d29ca2a: public class ConnectorView implements ConnectorViewMBean {
1:d29ca2a: 
1:d29ca2a:     private final Connector connector;
1:d29ca2a: 
1:d29ca2a:     public ConnectorView(Connector connector) {
1:d29ca2a:         this.connector = connector;
12:d29ca2a:     }
1:d29ca2a: 
1:d223ea9:     @Override
1:d29ca2a:     public void start() throws Exception {
1:d29ca2a:         connector.start();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String getBrokerName() {
1:d29ca2a:         return getBrokerInfo().getBrokerName();
1:d29ca2a:     }
1:d29ca2a: 
1:d223ea9:     @Override
1:d29ca2a:     public void stop() throws Exception {
1:d29ca2a:         connector.stop();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String getBrokerURL() {
1:d29ca2a:         return getBrokerInfo().getBrokerURL();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public BrokerInfo getBrokerInfo() {
1:d29ca2a:         return connector.getBrokerInfo();
1:d29ca2a:     }
1:fc00993: 
1:d29ca2a:     /**
1:d29ca2a:      * Resets the statistics
1:d29ca2a:      */
1:d223ea9:     @Override
1:d29ca2a:     public void resetStatistics() {
1:d29ca2a:         connector.getStatistics().reset();
1:d29ca2a:     }
1:fc00993: 
1:d29ca2a:     /**
1:ccf3f3c:      * enable statistics gathering
1:fc00993:      */
1:d223ea9:     @Override
1:ccf3f3c:     public void enableStatistics() {
1:fc00993:         connector.getStatistics().setEnabled(true);
1:fc00993:     }
1:fc00993: 
1:d29ca2a:     /**
1:ccf3f3c:      * disable statistics gathering
1:fc00993:      */
1:d223ea9:     @Override
1:ccf3f3c:     public void disableStatistics() {
1:fc00993:         connector.getStatistics().setEnabled(false);
1:fc00993:     }
1:fc00993: 
3:ccf3f3c:     /**
1:ccf3f3c:      * Returns true if statistics is enabled
1:d223ea9:      *
1:ccf3f3c:      * @return true if statistics is enabled
1:fc00993:      */
1:d223ea9:     @Override
1:ccf3f3c:     public boolean isStatisticsEnabled() {
1:fc00993:         return connector.getStatistics().isEnabled();
1:fc00993:     }
1:d29ca2a: 
1:4cf6dae:     /**
1:4cf6dae:      * Returns the number of current connections
1:d29ca2a:      */
1:d223ea9:     @Override
1:4cf6dae:     public int connectionCount() {
1:4cf6dae:         return connector.connectionCount();
1:d29ca2a:     }
1:d29ca2a: 
1:d223ea9:     /**
1:d223ea9:      * Returns true if updating cluster client URL is enabled
1:d223ea9:      *
1:d223ea9:      * @return true if update cluster client URL is enabled
1:d223ea9:      */
1:d223ea9:     @Override
1:d223ea9:     public boolean isUpdateClusterClients() {
1:ae441cb:         return this.connector.isUpdateClusterClients();
1:d223ea9:     }
1:d223ea9: 
1:d223ea9:     /**
1:d223ea9:      * Returns true if rebalancing cluster clients is enabled
1:d223ea9:      *
1:d223ea9:      * @return true if rebalance cluster clients is enabled
1:d223ea9:      */
1:d223ea9:     @Override
1:d223ea9:     public boolean isRebalanceClusterClients() {
1:d223ea9:         return this.connector.isRebalanceClusterClients();
1:d223ea9:     }
1:d223ea9: 
1:d223ea9:     /**
1:d223ea9:      * Returns true if updating cluster client URL when brokers are removed is
1:d223ea9:      * enabled
1:d223ea9:      *
1:d223ea9:      * @return true if update cluster client URL when brokers are removed is
1:d223ea9:      *         enabled
1:d223ea9:      */
1:d223ea9:     @Override
1:d223ea9:     public boolean isUpdateClusterClientsOnRemove() {
2:d223ea9:         return this.connector.isUpdateClusterClientsOnRemove();
1:d223ea9:     }
1:d223ea9: 
1:d223ea9:     /**
1:d223ea9:      * @return The comma separated string of regex patterns to match broker
1:d223ea9:      *         names for cluster client updates
1:d223ea9:      */
1:d223ea9:     @Override
1:d223ea9:     public String getUpdateClusterFilter() {
1:d223ea9:         return this.connector.getUpdateClusterFilter();
1:d223ea9:     }
1:d223ea9: 
1:d223ea9:     @Override
1:d223ea9:     public boolean isAllowLinkStealingEnabled() {
1:d223ea9:         return this.connector.isAllowLinkStealing();
1:d223ea9:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:gtully
-------------------------------------------------------------------------------
commit:ae441cb
/////////////////////////////////////////////////////////////////////////
1:         return this.connector.isUpdateClusterClients();
author:Timothy Bish
-------------------------------------------------------------------------------
commit:d223ea9
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:      *
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     /**
1:      * Returns true if updating cluster client URL is enabled
1:      *
1:      * @return true if update cluster client URL is enabled
1:      */
1:     @Override
1:     public boolean isUpdateClusterClients() {
1:         return this.connector.isUpdateClusterClientsOnRemove();
1:     }
1: 
1:     /**
1:      * Returns true if rebalancing cluster clients is enabled
1:      *
1:      * @return true if rebalance cluster clients is enabled
1:      */
1:     @Override
1:     public boolean isRebalanceClusterClients() {
1:         return this.connector.isRebalanceClusterClients();
1:     }
1: 
1:     /**
1:      * Returns true if updating cluster client URL when brokers are removed is
1:      * enabled
1:      *
1:      * @return true if update cluster client URL when brokers are removed is
1:      *         enabled
1:      */
1:     @Override
1:     public boolean isUpdateClusterClientsOnRemove() {
1:         return this.connector.isUpdateClusterClientsOnRemove();
1:     }
1: 
1:     /**
1:      * @return The comma separated string of regex patterns to match broker
1:      *         names for cluster client updates
1:      */
1:     @Override
1:     public String getUpdateClusterFilter() {
1:         return this.connector.getUpdateClusterFilter();
1:     }
1: 
1:     @Override
1:     public boolean isAllowLinkStealingEnabled() {
1:         return this.connector.isAllowLinkStealing();
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:      */
1:         connector.getStatistics().setEnabled(true);
1:     }
1: 
1:      */
1:         connector.getStatistics().setEnabled(false);
1:     }
1: 
1:      */
1:         return connector.getStatistics().isEnabled();
1:     }
/////////////////////////////////////////////////////////////////////////
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:90e21b4
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import org.apache.activemq.broker.Connector;
1: import org.apache.activemq.command.BrokerInfo;
0: import org.apache.activemq.command.RedeliveryPolicy;
1: 
1: public class ConnectorView implements ConnectorViewMBean {
1: 
1:     private final Connector connector;
1: 
1:     public ConnectorView(Connector connector) {
1:         this.connector = connector;
1:     }
1: 
1:     public void start() throws Exception {
1:         connector.start();
1:     }
1: 
1:     public String getBrokerName() {
1:         return getBrokerInfo().getBrokerName();
1:     }
1: 
1:     public void stop() throws Exception {
1:         connector.stop();
1:     }
1: 
1:     public String getBrokerURL() {
1:         return getBrokerInfo().getBrokerURL();
1:     }
1: 
1:     public BrokerInfo getBrokerInfo() {
1:         return connector.getBrokerInfo();
1:     }
1: 
0:     public short getBackOffMultiplier() {
0:         return getRedeliveryPolicy().getBackOffMultiplier();
1:     }
1: 
0:     public long getInitialRedeliveryDelay() {
0:         return getRedeliveryPolicy().getInitialRedeliveryDelay();
1:     }
1: 
0:     public int getMaximumRedeliveries() {
0:         return getRedeliveryPolicy().getMaximumRedeliveries();
1:     }
1: 
0:     public boolean isUseExponentialBackOff() {
0:         return getRedeliveryPolicy().isUseExponentialBackOff();
1:     }
1: 
0:     public void setBackOffMultiplier(short backOffMultiplier) {
0:         getRedeliveryPolicy().setBackOffMultiplier(backOffMultiplier);
1:     }
1: 
0:     public void setInitialRedeliveryDelay(long initialRedeliveryDelay) {
0:         getRedeliveryPolicy().setInitialRedeliveryDelay(initialRedeliveryDelay);
1:     }
1: 
0:     public void setMaximumRedeliveries(int maximumRedeliveries) {
0:         getRedeliveryPolicy().setMaximumRedeliveries(maximumRedeliveries);
1:     }
1: 
0:     public void setUseExponentialBackOff(boolean useExponentialBackOff) {
0:         getRedeliveryPolicy().setUseExponentialBackOff(useExponentialBackOff);
1:     }
1: 
0:     public RedeliveryPolicy getRedeliveryPolicy() {
0:         RedeliveryPolicy redeliveryPolicy = getBrokerInfo().getRedeliveryPolicy();
0:         if (redeliveryPolicy == null) {
0:             redeliveryPolicy = new RedeliveryPolicy();
0:             getBrokerInfo().setRedeliveryPolicy(redeliveryPolicy);
1:         }
0:         return redeliveryPolicy;
1:     }
1:     
1:     /**
1:      * Resets the statistics
1:      */
1:     public void resetStatistics() {
1:         connector.getStatistics().reset();
1:     }
1: 
1:     /**
0:      * Returns the number of messages enqueued on this connector
1:      * 
0:      * @return the number of messages enqueued on this connector
1:      */
0:     public long getEnqueueCount() {
0:         return connector.getStatistics().getEnqueues().getCount();
1:     
1:     }
1: 
1:     /**
0:      * Returns the number of messages dequeued on this connector
1:      * 
0:      * @return the number of messages dequeued on this connector
1:      */
0:     public long getDequeueCount() {
0:         return connector.getStatistics().getDequeues().getCount();
1:     }
1: 
1: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:4cf6dae
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Returns the number of current connections
0:      */
1:     public int connectionCount() {
1:         return connector.connectionCount();
0:     }
0: 
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:0a95b7e
/////////////////////////////////////////////////////////////////////////
author:Jonas B. Lim
-------------------------------------------------------------------------------
commit:ccf3f3c
/////////////////////////////////////////////////////////////////////////
0:     
0:     
1:     /**
1:      * enable statistics gathering
0:      */     
1:     public void enableStatistics() {
0:     	connector.getStatistics().setEnabled(true);
0:     }      
0:     
1:     /**
1:      * disable statistics gathering
0:      */     
1:     public void disableStatistics() {
0:     	connector.getStatistics().setEnabled(false);
0:     }      
0:     
1:     /**
1:      * Returns true if statistics is enabled
0:      * 
1:      * @return true if statistics is enabled
0:      */    
1:     public boolean isStatisticsEnabled() {
0:     	return connector.getStatistics().isEnabled();
0:     }         
============================================================================