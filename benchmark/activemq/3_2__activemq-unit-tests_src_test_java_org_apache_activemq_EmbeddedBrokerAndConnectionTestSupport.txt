1:0eae288: /**
1:0eae288:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:0eae288:  * contributor license agreements.  See the NOTICE file distributed with
1:0eae288:  * this work for additional information regarding copyright ownership.
1:0eae288:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:0eae288:  * (the "License"); you may not use this file except in compliance with
1:0eae288:  * the License.  You may obtain a copy of the License at
2:0eae288:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0eae288:  *
1:0eae288:  * Unless required by applicable law or agreed to in writing, software
1:0eae288:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0eae288:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0eae288:  * See the License for the specific language governing permissions and
1:0eae288:  * limitations under the License.
1:0eae288:  */
1:0eae288: package org.apache.activemq;
1:0eae288: 
1:0eae288: import javax.jms.Connection;
1:0eae288: 
1:0eae288: /**
1:0eae288:  * A base class for a test case which creates an embedded broker and uses a connection and session
1:b0c2a40:  *
1:0eae288:  * 
1:0eae288:  */
1:0eae288: public abstract class EmbeddedBrokerAndConnectionTestSupport extends EmbeddedBrokerTestSupport {
1:0eae288:     protected Connection connection;
1:0eae288: 
1:0eae288:     @Override
1:0eae288:     protected void setUp() throws Exception {
1:0eae288:         super.setUp();
1:0eae288: 
1:0eae288:         connection = createConnection();
1:0eae288:         connection.start();
1:0eae288:     }
1:0eae288: 
1:0eae288:     @Override
1:0eae288:     protected void tearDown() throws Exception {
1:0eae288:         if (connection != null) {
1:0eae288:             connection.close();
1:0eae288:         }
1:0eae288:         super.tearDown();
1:0eae288:     }
1:0eae288: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
author:James Strachan
-------------------------------------------------------------------------------
commit:0eae288
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq;
1: 
1: import javax.jms.Connection;
1: 
1: /**
1:  * A base class for a test case which creates an embedded broker and uses a connection and session
1:  *
0:  * @version $Revision: 1.1 $
1:  */
1: public abstract class EmbeddedBrokerAndConnectionTestSupport extends EmbeddedBrokerTestSupport {
1:     protected Connection connection;
1: 
1:     @Override
1:     protected void setUp() throws Exception {
1:         super.setUp();
1: 
1:         connection = createConnection();
1:         connection.start();
1:     }
1: 
1:     @Override
1:     protected void tearDown() throws Exception {
1:         if (connection != null) {
1:             connection.close();
1:         }
1:         super.tearDown();
1:     }
1: }
============================================================================