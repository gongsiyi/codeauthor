1:c26d8a9: /**
1:c26d8a9:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c26d8a9:  * contributor license agreements.  See the NOTICE file distributed with
1:c26d8a9:  * this work for additional information regarding copyright ownership.
1:c26d8a9:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c26d8a9:  * (the "License"); you may not use this file except in compliance with
1:c26d8a9:  * the License.  You may obtain a copy of the License at
2:c26d8a9:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:c26d8a9:  *
1:c26d8a9:  * Unless required by applicable law or agreed to in writing, software
1:c26d8a9:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c26d8a9:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c26d8a9:  * See the License for the specific language governing permissions and
1:c26d8a9:  * limitations under the License.
1:c26d8a9:  */
2:c26d8a9: 
1:c26d8a9: package org.apache.activemq.openwire.v2;
1:c26d8a9: 
1:c26d8a9: import org.apache.activemq.openwire.DataStreamMarshaller;
1:c26d8a9: import org.apache.activemq.openwire.OpenWireFormat;
1:c26d8a9: 
1:c26d8a9: /**
1:c26d8a9:  * MarshallerFactory for Open Wire Format.
1:c26d8a9:  *
1:c26d8a9:  *
1:c26d8a9:  * NOTE!: This file is auto generated - do not modify!
1:c26d8a9:  *        if you need to make a change, please see the modify the groovy scripts in the
1:c26d8a9:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:c26d8a9:  *        this file.
1:b0c2a40:  *
1:c26d8a9:  * 
1:c26d8a9:  */
1:933eb2f: public final class MarshallerFactory {
1:c26d8a9: 
1:c26d8a9:     /**
1:c26d8a9:      * Creates a Map of command type -> Marshallers
1:c26d8a9:      */
1:fc00993:     private static final DataStreamMarshaller MARSHALLER[] = new DataStreamMarshaller[256];
1:c26d8a9:     static {
1:c26d8a9: 
1:c26d8a9:         add(new ActiveMQBytesMessageMarshaller());
1:c26d8a9:         add(new ActiveMQMapMessageMarshaller());
1:c26d8a9:         add(new ActiveMQMessageMarshaller());
1:bd0ad68:         add(new ActiveMQObjectMessageMarshaller());
1:bd0ad68:         add(new ActiveMQQueueMarshaller());
1:bd0ad68:         add(new ActiveMQStreamMessageMarshaller());
1:bd0ad68:         add(new ActiveMQTempQueueMarshaller());
1:bd0ad68:         add(new ActiveMQTempTopicMarshaller());
1:bd0ad68:         add(new ActiveMQTextMessageMarshaller());
1:bd0ad68:         add(new ActiveMQTopicMarshaller());
1:bd0ad68:         add(new BrokerIdMarshaller());
1:bd0ad68:         add(new BrokerInfoMarshaller());
1:bd0ad68:         add(new ConnectionControlMarshaller());
1:bd0ad68:         add(new ConnectionErrorMarshaller());
1:bd0ad68:         add(new ConnectionIdMarshaller());
1:bd0ad68:         add(new ConnectionInfoMarshaller());
1:bd0ad68:         add(new ConsumerControlMarshaller());
1:bd0ad68:         add(new ConsumerIdMarshaller());
1:bd0ad68:         add(new ConsumerInfoMarshaller());
1:bd0ad68:         add(new ControlCommandMarshaller());
1:bd0ad68:         add(new DataArrayResponseMarshaller());
1:bd0ad68:         add(new DataResponseMarshaller());
1:bd0ad68:         add(new DestinationInfoMarshaller());
1:bd0ad68:         add(new DiscoveryEventMarshaller());
1:c26d8a9:         add(new ExceptionResponseMarshaller());
1:bd0ad68:         add(new FlushCommandMarshaller());
1:bd0ad68:         add(new IntegerResponseMarshaller());
1:bd0ad68:         add(new JournalQueueAckMarshaller());
1:bd0ad68:         add(new JournalTopicAckMarshaller());
1:bd0ad68:         add(new JournalTraceMarshaller());
1:bd0ad68:         add(new JournalTransactionMarshaller());
1:bd0ad68:         add(new KeepAliveInfoMarshaller());
1:bd0ad68:         add(new LastPartialCommandMarshaller());
1:bd0ad68:         add(new LocalTransactionIdMarshaller());
1:bd0ad68:         add(new MessageAckMarshaller());
1:bd0ad68:         add(new MessageDispatchMarshaller());
1:bd0ad68:         add(new MessageDispatchNotificationMarshaller());
1:bd0ad68:         add(new MessageIdMarshaller());
1:bd0ad68:         add(new MessagePullMarshaller());
1:bd0ad68:         add(new NetworkBridgeFilterMarshaller());
1:bd0ad68:         add(new PartialCommandMarshaller());
1:bd0ad68:         add(new ProducerIdMarshaller());
1:bd0ad68:         add(new ProducerInfoMarshaller());
1:bd0ad68:         add(new RemoveInfoMarshaller());
1:bd0ad68:         add(new RemoveSubscriptionInfoMarshaller());
1:bd0ad68:         add(new ReplayCommandMarshaller());
1:bd0ad68:         add(new ResponseMarshaller());
1:bd0ad68:         add(new SessionIdMarshaller());
1:bd0ad68:         add(new SessionInfoMarshaller());
1:bd0ad68:         add(new ShutdownInfoMarshaller());
1:bd0ad68:         add(new SubscriptionInfoMarshaller());
1:bd0ad68:         add(new TransactionInfoMarshaller());
1:bd0ad68:         add(new WireFormatInfoMarshaller());
1:bd0ad68:         add(new XATransactionIdMarshaller());
1:c26d8a9: 
1:bd0ad68:     }
1:bd0ad68: 
1:933eb2f:     private MarshallerFactory() {        
1:933eb2f:     }
1:933eb2f: 
1:fc00993:     private static void add(DataStreamMarshaller dsm) {
1:fc00993:         MARSHALLER[dsm.getDataStructureType()] = dsm;
2:c26d8a9:     }
1:c26d8a9:     
1:fc00993:     public static DataStreamMarshaller[] createMarshallerMap(OpenWireFormat wireFormat) {
1:fc00993:         return MARSHALLER;
1:c26d8a9:     }
1:c26d8a9: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9c39f4e
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1: public final class MarshallerFactory {
/////////////////////////////////////////////////////////////////////////
1:     private MarshallerFactory() {        
1:     }
1: 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:     private static final DataStreamMarshaller MARSHALLER[] = new DataStreamMarshaller[256];
/////////////////////////////////////////////////////////////////////////
1:     private static void add(DataStreamMarshaller dsm) {
1:         MARSHALLER[dsm.getDataStructureType()] = dsm;
1:     public static DataStreamMarshaller[] createMarshallerMap(OpenWireFormat wireFormat) {
1:         return MARSHALLER;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:bd0ad68
/////////////////////////////////////////////////////////////////////////
1:         add(new ActiveMQObjectMessageMarshaller());
1:         add(new ActiveMQQueueMarshaller());
1:         add(new ActiveMQStreamMessageMarshaller());
1:         add(new ActiveMQTempQueueMarshaller());
1:         add(new ActiveMQTempTopicMarshaller());
1:         add(new ActiveMQTextMessageMarshaller());
1:         add(new ActiveMQTopicMarshaller());
1:         add(new BrokerIdMarshaller());
1:         add(new BrokerInfoMarshaller());
1:         add(new ConnectionControlMarshaller());
1:         add(new ConnectionErrorMarshaller());
1:         add(new ConnectionIdMarshaller());
1:         add(new ConnectionInfoMarshaller());
1:         add(new ConsumerControlMarshaller());
1:         add(new ConsumerIdMarshaller());
1:         add(new ConsumerInfoMarshaller());
1:         add(new ControlCommandMarshaller());
1:         add(new DataArrayResponseMarshaller());
1:         add(new DataResponseMarshaller());
1:         add(new DestinationInfoMarshaller());
1:         add(new DiscoveryEventMarshaller());
1:         add(new FlushCommandMarshaller());
1:         add(new IntegerResponseMarshaller());
1:         add(new JournalQueueAckMarshaller());
1:         add(new JournalTopicAckMarshaller());
1:         add(new JournalTraceMarshaller());
1:         add(new JournalTransactionMarshaller());
1:         add(new KeepAliveInfoMarshaller());
1:         add(new LastPartialCommandMarshaller());
1:         add(new LocalTransactionIdMarshaller());
1:         add(new MessageAckMarshaller());
1:         add(new MessageDispatchMarshaller());
1:         add(new MessageDispatchNotificationMarshaller());
1:         add(new MessageIdMarshaller());
1:         add(new MessagePullMarshaller());
1:         add(new NetworkBridgeFilterMarshaller());
1:         add(new PartialCommandMarshaller());
1:         add(new ProducerIdMarshaller());
1:         add(new ProducerInfoMarshaller());
1:         add(new RemoveInfoMarshaller());
1:         add(new RemoveSubscriptionInfoMarshaller());
1:         add(new ReplayCommandMarshaller());
1:         add(new ResponseMarshaller());
1:         add(new SessionIdMarshaller());
1:         add(new SessionInfoMarshaller());
1:         add(new ShutdownInfoMarshaller());
1:         add(new SubscriptionInfoMarshaller());
1:         add(new TransactionInfoMarshaller());
1:         add(new WireFormatInfoMarshaller());
1:         add(new XATransactionIdMarshaller());
1:     }
0:     static private void add(DataStreamMarshaller dsm) {
1:     
commit:c26d8a9
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.openwire.v2;
1: 
1: import org.apache.activemq.openwire.DataStreamMarshaller;
1: import org.apache.activemq.openwire.OpenWireFormat;
1: 
1: /**
1:  * MarshallerFactory for Open Wire Format.
1:  *
1:  *
1:  * NOTE!: This file is auto generated - do not modify!
1:  *        if you need to make a change, please see the modify the groovy scripts in the
1:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:  *        this file.
1:  *
0:  * @version $Revision$
1:  */
0: public class MarshallerFactory {
1: 
1:     /**
1:      * Creates a Map of command type -> Marshallers
1:      */
0:     static final private DataStreamMarshaller marshaller[] = new DataStreamMarshaller[256];
1:     static {
1: 
0:         add(new LocalTransactionIdMarshaller());
0:         add(new PartialCommandMarshaller());
0:         add(new IntegerResponseMarshaller());
0:         add(new ActiveMQQueueMarshaller());
0:         add(new ActiveMQObjectMessageMarshaller());
0:         add(new ConnectionIdMarshaller());
0:         add(new ConnectionInfoMarshaller());
0:         add(new ProducerInfoMarshaller());
0:         add(new MessageDispatchNotificationMarshaller());
0:         add(new SessionInfoMarshaller());
0:         add(new TransactionInfoMarshaller());
0:         add(new ActiveMQStreamMessageMarshaller());
0:         add(new MessageAckMarshaller());
0:         add(new ProducerIdMarshaller());
0:         add(new MessageIdMarshaller());
0:         add(new ActiveMQTempQueueMarshaller());
0:         add(new RemoveSubscriptionInfoMarshaller());
0:         add(new SessionIdMarshaller());
0:         add(new DataArrayResponseMarshaller());
0:         add(new JournalQueueAckMarshaller());
0:         add(new ResponseMarshaller());
0:         add(new ConnectionErrorMarshaller());
0:         add(new ConsumerInfoMarshaller());
0:         add(new XATransactionIdMarshaller());
0:         add(new JournalTraceMarshaller());
0:         add(new ConsumerIdMarshaller());
0:         add(new ActiveMQTextMessageMarshaller());
0:         add(new SubscriptionInfoMarshaller());
0:         add(new JournalTransactionMarshaller());
0:         add(new ControlCommandMarshaller());
0:         add(new LastPartialCommandMarshaller());
0:         add(new NetworkBridgeFilterMarshaller());
0:         add(new MessagePullMarshaller());
1:         add(new ActiveMQBytesMessageMarshaller());
0:         add(new WireFormatInfoMarshaller());
0:         add(new ActiveMQTempTopicMarshaller());
0:         add(new DiscoveryEventMarshaller());
0:         add(new ReplayCommandMarshaller());
0:         add(new ActiveMQTopicMarshaller());
0:         add(new BrokerInfoMarshaller());
0:         add(new DestinationInfoMarshaller());
0:         add(new ShutdownInfoMarshaller());
0:         add(new DataResponseMarshaller());
0:         add(new ConnectionControlMarshaller());
0:         add(new KeepAliveInfoMarshaller());
0:         add(new FlushCommandMarshaller());
0:         add(new ConsumerControlMarshaller());
0:         add(new JournalTopicAckMarshaller());
0:         add(new BrokerIdMarshaller());
0:         add(new MessageDispatchMarshaller());
1:         add(new ActiveMQMapMessageMarshaller());
1:         add(new ActiveMQMessageMarshaller());
0:         add(new RemoveInfoMarshaller());
1:         add(new ExceptionResponseMarshaller());
1: 
1: 	}
1: 
0: 	static private void add(DataStreamMarshaller dsm) {
0:         marshaller[dsm.getDataStructureType()] = dsm;
1:     }
1: 	
0:     static public DataStreamMarshaller[] createMarshallerMap(OpenWireFormat wireFormat) {
0:         return marshaller;
1:     }
1: }
============================================================================