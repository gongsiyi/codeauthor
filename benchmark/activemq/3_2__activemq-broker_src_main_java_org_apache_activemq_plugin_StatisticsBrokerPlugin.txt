1:6fc3744: /**
1:6fc3744:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6fc3744:  * contributor license agreements.  See the NOTICE file distributed with
1:6fc3744:  * this work for additional information regarding copyright ownership.
1:6fc3744:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6fc3744:  * (the "License"); you may not use this file except in compliance with
1:6fc3744:  * the License.  You may obtain a copy of the License at
1:6fc3744:  *
1:6fc3744:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6fc3744:  *
1:6fc3744:  * Unless required by applicable law or agreed to in writing, software
1:6fc3744:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6fc3744:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6fc3744:  * See the License for the specific language governing permissions and
1:6fc3744:  * limitations under the License.
1:6fc3744:  */
1:6fc3744: package org.apache.activemq.plugin;
1:6fc3744: 
1:6fc3744: import org.apache.activemq.broker.Broker;
1:6fc3744: import org.apache.activemq.broker.BrokerPlugin;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:6fc3744: 
1:6fc3744: /**
1:6fc3744:  * A StatisticsBrokerPlugin
1:b717973:  * You can retrieve a Map Message for a Destination - or
1:b717973:  * Broker containing statistics as key-value pairs The message must contain a
1:b717973:  * replyTo Destination - else its ignored
1:b717973:  * To retrieve stats on the broker send a empty message to ActiveMQ.Statistics.Broker (Queue or Topic)
1:b717973:  * With a replyTo set to the destination you want the stats returned to.
1:b717973:  * To retrieve stats for a destination - e.g. foo - send an empty message to ActiveMQ.Statistics.Destination.foo
1:b717973:  * - this works with wildcards to - you get a message for each wildcard match on the replyTo destination.
1:b717973:  * The stats message is a MapMessage populated with statistics for the target
1:6fc3744:  * @org.apache.xbean.XBean element="statisticsBrokerPlugin"
1:6fc3744:  *
1:6fc3744:  */
1:6fc3744: public class StatisticsBrokerPlugin implements BrokerPlugin {
1:8bf987b:     private static Logger LOG = LoggerFactory.getLogger(StatisticsBrokerPlugin.class);
1:6fc3744:     /** 
1:6fc3744:      * @param broker
1:6fc3744:      * @return the plug-in
1:6fc3744:      * @throws Exception
1:6fc3744:      * @see org.apache.activemq.broker.BrokerPlugin#installPlugin(org.apache.activemq.broker.Broker)
1:6fc3744:      */
1:6fc3744:     public Broker installPlugin(Broker broker) throws Exception {
1:6fc3744:         StatisticsBroker answer = new StatisticsBroker(broker);
1:6fc3744:         LOG.info("Installing StaticsBroker");
1:6fc3744:         return answer;
1:6fc3744:     }
1:6fc3744: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static Logger LOG = LoggerFactory.getLogger(StatisticsBrokerPlugin.class);
author:Robert Davies
-------------------------------------------------------------------------------
commit:b717973
/////////////////////////////////////////////////////////////////////////
1:  * You can retrieve a Map Message for a Destination - or
1:  * Broker containing statistics as key-value pairs The message must contain a
1:  * replyTo Destination - else its ignored
1:  * To retrieve stats on the broker send a empty message to ActiveMQ.Statistics.Broker (Queue or Topic)
1:  * With a replyTo set to the destination you want the stats returned to.
1:  * To retrieve stats for a destination - e.g. foo - send an empty message to ActiveMQ.Statistics.Destination.foo
1:  * - this works with wildcards to - you get a message for each wildcard match on the replyTo destination.
1:  * The stats message is a MapMessage populated with statistics for the target
commit:6fc3744
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.plugin;
1: 
1: import org.apache.activemq.broker.Broker;
1: import org.apache.activemq.broker.BrokerPlugin;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
1: /**
1:  * A StatisticsBrokerPlugin
1:  * @org.apache.xbean.XBean element="statisticsBrokerPlugin"
1:  *
1:  */
1: public class StatisticsBrokerPlugin implements BrokerPlugin {
0:     private static Log LOG = LogFactory.getLog(StatisticsBrokerPlugin.class);
1:     /** 
1:      * @param broker
1:      * @return the plug-in
1:      * @throws Exception
1:      * @see org.apache.activemq.broker.BrokerPlugin#installPlugin(org.apache.activemq.broker.Broker)
1:      */
1:     public Broker installPlugin(Broker broker) throws Exception {
1:         StatisticsBroker answer = new StatisticsBroker(broker);
1:         LOG.info("Installing StaticsBroker");
1:         return answer;
1:     }
1: }
============================================================================