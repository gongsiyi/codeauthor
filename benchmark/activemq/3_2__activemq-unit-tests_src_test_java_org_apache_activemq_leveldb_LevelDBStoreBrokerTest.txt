1:fc519e1: /**
1:fc519e1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:fc519e1:  * contributor license agreements.  See the NOTICE file distributed with
1:fc519e1:  * this work for additional information regarding copyright ownership.
1:fc519e1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:fc519e1:  * (the "License"); you may not use this file except in compliance with
1:fc519e1:  * the License.  You may obtain a copy of the License at
1:fc519e1:  *
1:fc519e1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:fc519e1:  *
1:fc519e1:  * Unless required by applicable law or agreed to in writing, software
1:fc519e1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:fc519e1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc519e1:  * See the License for the specific language governing permissions and
1:fc519e1:  * limitations under the License.
1:fc519e1:  */
1:bfbe90b: package org.apache.activemq.leveldb;
1:bfbe90b: 
1:1a2cbe7: import junit.framework.Test;
1:bfbe90b: import org.apache.activemq.broker.BrokerService;
1:bfbe90b: import org.apache.activemq.broker.BrokerTest;
1:bfbe90b: import org.apache.activemq.store.PersistenceAdapter;
1:bfbe90b: 
1:bfbe90b: import java.io.File;
1:bfbe90b: import java.io.IOException;
1:bfbe90b: 
1:bfbe90b: /**
1:bfbe90b:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:bfbe90b:  */
1:bfbe90b: public class LevelDBStoreBrokerTest extends BrokerTest {
1:bfbe90b: 
1:1a2cbe7:     public static Test suite() {
1:1a2cbe7:         return suite(LevelDBStoreBrokerTest.class);
1:1a2cbe7:     }
1:1a2cbe7: 
1:1a2cbe7:     public static void main(String[] args) {
1:1a2cbe7:         junit.textui.TestRunner.run(suite());
1:1a2cbe7:     }
1:bfbe90b: 
1:bfbe90b:     @Override
1:bfbe90b:     protected BrokerService createBroker() throws Exception {
1:bfbe90b:         BrokerService broker = new BrokerService();
1:bfbe90b:         broker.setPersistenceAdapter(createPersistenceAdapter(true));
1:bfbe90b:         return broker;
1:bfbe90b:     }
1:bfbe90b: 
1:bfbe90b:     protected PersistenceAdapter createPersistenceAdapter(boolean delete) {
1:bfbe90b:         LevelDBStore store  = new LevelDBStore();
1:bfbe90b:         store.setDirectory(new File("target/activemq-data/leveldb"));
1:bfbe90b:         if (delete) {
1:bfbe90b:           store.deleteAllMessages();
1:bfbe90b:         }
1:bfbe90b:         return store;
1:bfbe90b:       }
1:bfbe90b: 
1:bfbe90b:       protected BrokerService createRestartedBroker() throws IOException {
1:bfbe90b:         BrokerService broker = new BrokerService();
1:bfbe90b:         broker.setPersistenceAdapter(createPersistenceAdapter(false));
1:bfbe90b:         return broker;
1:bfbe90b:       }
1:bfbe90b: 
1:bfbe90b: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:fc519e1
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:1a2cbe7
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Test;
/////////////////////////////////////////////////////////////////////////
1:     public static Test suite() {
1:         return suite(LevelDBStoreBrokerTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
commit:bfbe90b
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.leveldb;
1: 
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.BrokerTest;
1: import org.apache.activemq.store.PersistenceAdapter;
1: 
1: import java.io.File;
1: import java.io.IOException;
1: 
1: /**
1:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:  */
1: public class LevelDBStoreBrokerTest extends BrokerTest {
1: 
0: //    def suite: Test = {
0: //      return new TestSuite(classOf[LevelDBStoreBrokerTest])
0: //    }
0: //
0: //    def main(args: Array[String]): Unit = {
0: //      junit.textui.TestRunner.run(suite)
0: //    }
1: 
1:     @Override
1:     protected BrokerService createBroker() throws Exception {
1:         BrokerService broker = new BrokerService();
1:         broker.setPersistenceAdapter(createPersistenceAdapter(true));
1:         return broker;
1:     }
1: 
1:     protected PersistenceAdapter createPersistenceAdapter(boolean delete) {
1:         LevelDBStore store  = new LevelDBStore();
1:         store.setDirectory(new File("target/activemq-data/leveldb"));
1:         if (delete) {
1:           store.deleteAllMessages();
1:         }
1:         return store;
1:       }
1: 
1:       protected BrokerService createRestartedBroker() throws IOException {
1:         BrokerService broker = new BrokerService();
1:         broker.setPersistenceAdapter(createPersistenceAdapter(false));
1:         return broker;
1:       }
1: 
1: }
============================================================================