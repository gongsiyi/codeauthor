1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.management;
2:d29ca2a: 
1:d29ca2a: import java.util.List;
1:74a7a8b: import java.util.concurrent.CopyOnWriteArrayList;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.ActiveMQConnection;
1:d29ca2a: import org.apache.activemq.util.IndentPrinter;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Statistics for a number of JMS connections
1:b0c2a40:  * 
1:74a7a8b:  * 
1:d29ca2a:  */
1:d29ca2a: public class JMSStatsImpl extends StatsImpl {
1:933eb2f:     private List<ActiveMQConnection> connections = new CopyOnWriteArrayList<ActiveMQConnection>();
1:d29ca2a: 
1:d29ca2a:     public JMSStatsImpl() {
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public JMSConnectionStatsImpl[] getConnections() {
1:d29ca2a:         Object[] connectionArray = connections.toArray();
1:d29ca2a:         int size = connectionArray.length;
1:d29ca2a:         JMSConnectionStatsImpl[] answer = new JMSConnectionStatsImpl[size];
1:d29ca2a:         for (int i = 0; i < size; i++) {
1:74a7a8b:             ActiveMQConnection connection = (ActiveMQConnection)connectionArray[i];
1:d29ca2a:             answer[i] = connection.getConnectionStats();
1:d29ca2a:         }
1:d29ca2a:         return answer;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void addConnection(ActiveMQConnection connection) {
1:d29ca2a:         connections.add(connection);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void removeConnection(ActiveMQConnection connection) {
1:d29ca2a:         connections.remove(connection);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void dump(IndentPrinter out) {
1:d29ca2a:         out.printIndent();
1:d29ca2a:         out.println("factory {");
1:d29ca2a:         out.incrementIndent();
1:d29ca2a:         JMSConnectionStatsImpl[] array = getConnections();
1:d29ca2a:         for (int i = 0; i < array.length; i++) {
1:74a7a8b:             JMSConnectionStatsImpl connectionStat = (JMSConnectionStatsImpl)array[i];
1:d29ca2a:             connectionStat.dump(out);
1:d29ca2a:         }
1:d29ca2a:         out.decrementIndent();
1:d29ca2a:         out.printIndent();
1:d29ca2a:         out.println("}");
1:d29ca2a:         out.flush();
1:d29ca2a:     }
1:74a7a8b: 
1:526cb5b:     /**
1:526cb5b:      * @param enabled the enabled to set
1:526cb5b:      */
1:74a7a8b:     public void setEnabled(boolean enabled) {
1:526cb5b:         super.setEnabled(enabled);
1:526cb5b:         JMSConnectionStatsImpl[] stats = getConnections();
1:933eb2f:         int size = stats.length;
1:933eb2f:         for (int i = 0; i < size; i++) {
1:526cb5b:             stats[i].setEnabled(enabled);
1:d29ca2a:         }
1:74a7a8b: 
1:526cb5b:     }
1:526cb5b: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:     private List<ActiveMQConnection> connections = new CopyOnWriteArrayList<ActiveMQConnection>();
/////////////////////////////////////////////////////////////////////////
1:         int size = stats.length;
1:         for (int i = 0; i < size; i++) {
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.util.concurrent.CopyOnWriteArrayList;
1:  * 
/////////////////////////////////////////////////////////////////////////
1:             ActiveMQConnection connection = (ActiveMQConnection)connectionArray[i];
/////////////////////////////////////////////////////////////////////////
1:             JMSConnectionStatsImpl connectionStat = (JMSConnectionStatsImpl)array[i];
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void setEnabled(boolean enabled) {
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
0: import java.util.concurrent.CopyOnWriteArrayList;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.management;
1: 
1: import java.util.List;
1: 
1: import org.apache.activemq.ActiveMQConnection;
1: import org.apache.activemq.util.IndentPrinter;
1: 
0: import edu.emory.mathcs.backport.java.util.concurrent.CopyOnWriteArrayList;
1: 
1: /**
1:  * Statistics for a number of JMS connections
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class JMSStatsImpl extends StatsImpl {
0:     private List connections = new CopyOnWriteArrayList();
1: 
1:     public JMSStatsImpl() {
1:     }
1: 
1:     public JMSConnectionStatsImpl[] getConnections() {
1:         Object[] connectionArray = connections.toArray();
1:         int size = connectionArray.length;
1:         JMSConnectionStatsImpl[] answer = new JMSConnectionStatsImpl[size];
1:         for (int i = 0; i < size; i++) {
0:             ActiveMQConnection connection = (ActiveMQConnection) connectionArray[i];
1:             answer[i] = connection.getConnectionStats();
1:         }
1:         return answer;
1:     }
1: 
1:     public void addConnection(ActiveMQConnection connection) {
1:         connections.add(connection);
1:     }
1: 
1:     public void removeConnection(ActiveMQConnection connection) {
1:         connections.remove(connection);
1:     }
1: 
1:     public void dump(IndentPrinter out) {
1:         out.printIndent();
1:         out.println("factory {");
1:         out.incrementIndent();
1:         JMSConnectionStatsImpl[] array = getConnections();
1:         for (int i = 0; i < array.length; i++) {
0:             JMSConnectionStatsImpl connectionStat = (JMSConnectionStatsImpl) array[i];
1:             connectionStat.dump(out);
1:         }
1:         out.decrementIndent();
1:         out.printIndent();
1:         out.println("}");
1:         out.flush();
1:     }
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:526cb5b
/////////////////////////////////////////////////////////////////////////
0:     
1:     /**
1:      * @param enabled the enabled to set
1:      */
0:     public void setEnabled(boolean enabled){
1:         super.setEnabled(enabled);
1:         JMSConnectionStatsImpl[] stats = getConnections();
0:         for (int i = 0, size = stats.length; i < size; i++) {
1:             stats[i].setEnabled(enabled);
1:         }
0:         
1:     }
============================================================================