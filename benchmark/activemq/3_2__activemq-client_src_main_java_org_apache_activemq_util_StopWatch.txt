1:287f69d: /**
1:287f69d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:287f69d:  * contributor license agreements.  See the NOTICE file distributed with
1:287f69d:  * this work for additional information regarding copyright ownership.
1:287f69d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:287f69d:  * (the "License"); you may not use this file except in compliance with
1:287f69d:  * the License.  You may obtain a copy of the License at
2:287f69d:  *
1:287f69d:  *      http://www.apache.org/licenses/LICENSE-2.0
1:287f69d:  *
1:287f69d:  * Unless required by applicable law or agreed to in writing, software
1:287f69d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:287f69d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:287f69d:  * See the License for the specific language governing permissions and
1:287f69d:  * limitations under the License.
1:287f69d:  */
1:287f69d: package org.apache.activemq.util;
1:287f69d: 
1:287f69d: /**
1:287f69d:  * A very simple stop watch.
1:287f69d:  * <p/>
1:287f69d:  * This implementation is not thread safe and can only time one task at any given time.
1:287f69d:  */
1:287f69d: public final class StopWatch {
1:287f69d: 
1:287f69d:     private long start;
1:287f69d:     private long stop;
1:287f69d: 
1:287f69d:     /**
1:287f69d:      * Starts the stop watch
1:287f69d:      */
1:287f69d:     public StopWatch() {
1:287f69d:         this(true);
1:287f69d:     }
1:287f69d: 
1:287f69d:     /**
1:287f69d:      * Creates the stop watch
1:287f69d:      *
1:287f69d:      * @param started whether it should start immediately
1:287f69d:      */
1:287f69d:     public StopWatch(boolean started) {
1:287f69d:         if (started) {
1:287f69d:             restart();
1:287f69d:         }
1:287f69d:     }
1:287f69d: 
1:287f69d:     /**
1:287f69d:      * Starts or restarts the stop watch
1:287f69d:      */
1:287f69d:     public void restart() {
1:287f69d:         start = System.currentTimeMillis();
1:287f69d:         stop = 0;
1:287f69d:     }
1:287f69d: 
1:287f69d:     /**
1:287f69d:      * Stops the stop watch
1:287f69d:      *
1:61b2f6b:      * @return the time taken in milliseconds.
1:287f69d:      */
1:287f69d:     public long stop() {
1:287f69d:         stop = System.currentTimeMillis();
1:287f69d:         return taken();
1:287f69d:     }
1:287f69d: 
1:287f69d:     /**
1:61b2f6b:      * Returns the time taken in milliseconds.
1:287f69d:      *
1:61b2f6b:      * @return time in milliseconds
1:287f69d:      */
1:287f69d:     public long taken() {
1:287f69d:         if (start > 0 && stop > 0) {
1:287f69d:             return stop - start;
1:287f69d:         } else if (start > 0) {
1:287f69d:             return System.currentTimeMillis() - start;
1:287f69d:         } else {
1:287f69d:             return 0;
1:287f69d:         }
1:287f69d:     }
1:287f69d: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:61b2f6b
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:      * @return the time taken in milliseconds.
/////////////////////////////////////////////////////////////////////////
1:      * Returns the time taken in milliseconds.
1:      * @return time in milliseconds
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:287f69d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
1: /**
1:  * A very simple stop watch.
1:  * <p/>
1:  * This implementation is not thread safe and can only time one task at any given time.
1:  *
0:  * @version
1:  */
1: public final class StopWatch {
1: 
1:     private long start;
1:     private long stop;
1: 
1:     /**
1:      * Starts the stop watch
1:      */
1:     public StopWatch() {
1:         this(true);
1:     }
1: 
1:     /**
1:      * Creates the stop watch
1:      *
1:      * @param started whether it should start immediately
1:      */
1:     public StopWatch(boolean started) {
1:         if (started) {
1:             restart();
1:         }
1:     }
1: 
1:     /**
1:      * Starts or restarts the stop watch
1:      */
1:     public void restart() {
1:         start = System.currentTimeMillis();
1:         stop = 0;
1:     }
1: 
1:     /**
1:      * Stops the stop watch
1:      *
0:      * @return the time taken in millis.
1:      */
1:     public long stop() {
1:         stop = System.currentTimeMillis();
1:         return taken();
1:     }
1: 
1:     /**
0:      * Returns the time taken in millis.
1:      *
0:      * @return time in millis
1:      */
1:     public long taken() {
1:         if (start > 0 && stop > 0) {
1:             return stop - start;
1:         } else if (start > 0) {
1:             return System.currentTimeMillis() - start;
1:         } else {
1:             return 0;
1:         }
1:     }
1: }
============================================================================