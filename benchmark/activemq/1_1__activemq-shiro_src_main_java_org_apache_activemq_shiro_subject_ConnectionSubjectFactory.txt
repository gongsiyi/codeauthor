1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.subject;
1:f9451e5: 
1:f9451e5: import org.apache.activemq.shiro.ConnectionReference;
1:f9451e5: import org.apache.shiro.subject.Subject;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * A {@code ConnectionSubjectFactory} creates a {@code Subject} instance that represents the connection client's identity.
1:f9451e5:  * <p/>
1:f9451e5:  * Most implementations will simply use the {@link Subject.Builder Subject.Builder} to create an anonymous
1:f9451e5:  * {@code Subject} instance and let a downstream {@link org.apache.activemq.shiro.authc.AuthenticationFilter} authenticate the {@code Subject} based on
1:f9451e5:  * any credentials associated with the connection.  After authentication, the {@code Subject} will have an identity, and
1:f9451e5:  * this is the expected flow for most connection clients.
1:f9451e5:  * <p/>
1:f9451e5:  * However, if there is some other data associated with the connection that can be inspected to create a
1:f9451e5:  * {@code Subject} instance beyond what the {@link DefaultConnectionSubjectFactory} provides, this interface allows that
1:f9451e5:  * logic to be plugged in as necessary.
1:f9451e5:  *
1:f9451e5:  * @see DefaultConnectionSubjectFactory
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public interface ConnectionSubjectFactory {
1:f9451e5: 
1:f9451e5:     /**
1:f9451e5:      * Creates a {@code Subject} instance representing the connection client.  It is common for {@code Subject} instances
1:f9451e5:      * returned from this method to be anonymous until a downstream {@link org.apache.activemq.shiro.authc.AuthenticationFilter} authenticates the
1:f9451e5:      * subject to associate an identity.
1:f9451e5:      *
1:f9451e5:      * @param ref a reference to the client's connection metadata
1:f9451e5:      * @return a {@code Subject} instance representing the connection client.
1:f9451e5:      */
1:f9451e5:     Subject createSubject(ConnectionReference ref);
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.subject;
1: 
1: import org.apache.activemq.shiro.ConnectionReference;
1: import org.apache.shiro.subject.Subject;
1: 
1: /**
1:  * A {@code ConnectionSubjectFactory} creates a {@code Subject} instance that represents the connection client's identity.
1:  * <p/>
1:  * Most implementations will simply use the {@link Subject.Builder Subject.Builder} to create an anonymous
1:  * {@code Subject} instance and let a downstream {@link org.apache.activemq.shiro.authc.AuthenticationFilter} authenticate the {@code Subject} based on
1:  * any credentials associated with the connection.  After authentication, the {@code Subject} will have an identity, and
1:  * this is the expected flow for most connection clients.
1:  * <p/>
1:  * However, if there is some other data associated with the connection that can be inspected to create a
1:  * {@code Subject} instance beyond what the {@link DefaultConnectionSubjectFactory} provides, this interface allows that
1:  * logic to be plugged in as necessary.
1:  *
1:  * @see DefaultConnectionSubjectFactory
1:  * @since 5.10.0
1:  */
1: public interface ConnectionSubjectFactory {
1: 
1:     /**
1:      * Creates a {@code Subject} instance representing the connection client.  It is common for {@code Subject} instances
1:      * returned from this method to be anonymous until a downstream {@link org.apache.activemq.shiro.authc.AuthenticationFilter} authenticates the
1:      * subject to associate an identity.
1:      *
1:      * @param ref a reference to the client's connection metadata
1:      * @return a {@code Subject} instance representing the connection client.
1:      */
1:     Subject createSubject(ConnectionReference ref);
1: }
============================================================================