1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.spring;
5:d29ca2a: 
1:d29ca2a: import javax.jms.Destination;
1:d29ca2a: import javax.jms.JMSException;
1:d29ca2a: import javax.jms.Message;
1:d29ca2a: import javax.jms.Session;
1:d29ca2a: import javax.jms.TextMessage;
1:d29ca2a: 
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:74a7a8b: import org.springframework.jms.core.JmsTemplate;
1:74a7a8b: import org.springframework.jms.core.MessageCreator;
1:74a7a8b: 
1:d29ca2a: public class SpringProducer {
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(SpringProducer.class);
1:d29ca2a:     private JmsTemplate template;
1:d29ca2a:     private Destination destination;
1:d29ca2a:     private int messageCount = 10;
1:d29ca2a: 
1:d29ca2a:     public void start() throws JMSException {
1:d29ca2a:         for (int i = 0; i < messageCount; i++) {
1:d29ca2a:             final String text = "Text for message: " + i;
1:d29ca2a:             template.send(destination, new MessageCreator() {
1:d29ca2a:                 public Message createMessage(Session session) throws JMSException {
1:fc00993:                     LOG.info("Sending message: " + text);
1:d29ca2a:                     TextMessage message = session.createTextMessage(text);
1:d29ca2a:                     message.setStringProperty("next", "foo");
1:d29ca2a:                     return message;
1:d29ca2a:                 }
1:d29ca2a:             });
1:d29ca2a:         }
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void stop() throws JMSException {
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     // Properties
1:d29ca2a:     //-------------------------------------------------------------------------
1:d29ca2a: 
1:d29ca2a:     public JmsTemplate getTemplate() {
1:d29ca2a:         return template;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setTemplate(JmsTemplate template) {
1:d29ca2a:         this.template = template;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public int getMessageCount() {
1:d29ca2a:         return messageCount;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setMessageCount(int messageCount) {
1:d29ca2a:         this.messageCount = messageCount;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public Destination getDestination() {
1:d29ca2a:         return destination;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setDestination(Destination destination) {
1:d29ca2a:         this.destination = destination;
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(SpringProducer.class);
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
0:     private static final Log LOG = LogFactory.getLog(SpringProducer.class);
/////////////////////////////////////////////////////////////////////////
1:                     LOG.info("Sending message: " + text);
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.springframework.jms.core.JmsTemplate;
1: import org.springframework.jms.core.MessageCreator;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.spring;
1: 
0: import org.springframework.jms.core.JmsTemplate;
0: import org.springframework.jms.core.MessageCreator;
1: 
1: import javax.jms.Destination;
1: import javax.jms.JMSException;
1: import javax.jms.Message;
1: import javax.jms.Session;
1: import javax.jms.TextMessage;
1: 
1: public class SpringProducer {
1:     
0:     private static final org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory
0:             .getLog(SpringProducer.class);
1:     
1:     private JmsTemplate template;
1:     private Destination destination;
1:     private int messageCount = 10;
1: 
1: 
1:     public void start() throws JMSException {
1:         for (int i = 0; i < messageCount; i++) {
1:             final String text = "Text for message: " + i;
1:             template.send(destination, new MessageCreator() {
1:                 public Message createMessage(Session session) throws JMSException {
0:                     log.info("Sending message: " + text);
1:                     TextMessage message = session.createTextMessage(text);
1:                     message.setStringProperty("next", "foo");
1:                     return message;
1:                 }
1:             });
1:         }
1:     }
1: 
1:     public void stop() throws JMSException {
1:     }
1: 
1:     // Properties
1:     //-------------------------------------------------------------------------
1: 
1:     public JmsTemplate getTemplate() {
1:         return template;
1:     }
1: 
1:     public void setTemplate(JmsTemplate template) {
1:         this.template = template;
1:     }
1: 
1:     public int getMessageCount() {
1:         return messageCount;
1:     }
1: 
1:     public void setMessageCount(int messageCount) {
1:         this.messageCount = messageCount;
1:     }
1: 
1:     public Destination getDestination() {
1:         return destination;
1:     }
1: 
1:     public void setDestination(Destination destination) {
1:         this.destination = destination;
1:     }
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:67310ad
/////////////////////////////////////////////////////////////////////////
============================================================================