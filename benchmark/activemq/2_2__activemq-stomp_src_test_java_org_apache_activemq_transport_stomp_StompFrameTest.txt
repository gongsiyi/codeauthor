1:400990f: /**
1:400990f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:400990f:  * contributor license agreements.  See the NOTICE file distributed with
1:400990f:  * this work for additional information regarding copyright ownership.
1:400990f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:400990f:  * (the "License"); you may not use this file except in compliance with
1:400990f:  * the License.  You may obtain a copy of the License at
1:400990f:  *
1:400990f:  *      http://www.apache.org/licenses/LICENSE-2.0
1:400990f:  *
1:400990f:  * Unless required by applicable law or agreed to in writing, software
1:400990f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:400990f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:400990f:  * See the License for the specific language governing permissions and
1:400990f:  * limitations under the License.
1:400990f:  */
1:400990f: package org.apache.activemq.transport.stomp;
3:400990f: 
1:400990f: import static org.junit.Assert.assertEquals;
1:400990f: import static org.junit.Assert.assertTrue;
1:400990f: 
1:1236bbf: import java.util.HashMap;
1:1236bbf: 
1:1236bbf: import org.junit.Test;
1:400990f: 
1:400990f: public class StompFrameTest {
1:400990f:     StompFrame underTest = new StompFrame();
1:400990f: 
1:400990f:     @Test
1:400990f:     public void testNoPasscodeInToString() throws Exception {
1:1236bbf:         HashMap<String, String> headers = new HashMap<String, String>();
1:400990f:         headers.put("userName", "bob");
1:400990f:         headers.put("passcode", "please");
1:400990f:         underTest.setHeaders(headers);
1:400990f: 
1:400990f:         assertEquals("no password present", -1, underTest.toString().indexOf("please"));
1:400990f:         assertTrue("*** present", underTest.toString().indexOf("***") > 0);
1:400990f:     }
1:400990f: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:1236bbf
/////////////////////////////////////////////////////////////////////////
1: import java.util.HashMap;
1: 
1: import org.junit.Test;
1:         HashMap<String, String> headers = new HashMap<String, String>();
author:Gary Tully
-------------------------------------------------------------------------------
commit:400990f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.stomp;
1: 
0: import java.util.HashMap;
0: import org.junit.Test;
1: 
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertTrue;
1: 
1: 
1: public class StompFrameTest {
1:     StompFrame underTest = new StompFrame();
1: 
1:     @Test
1:     public void testNoPasscodeInToString() throws Exception {
0:         HashMap headers = new HashMap<String, String>();
1:         headers.put("userName", "bob");
1:         headers.put("passcode", "please");
1:         underTest.setHeaders(headers);
1: 
1:         assertEquals("no password present", -1, underTest.toString().indexOf("please"));
1:         assertTrue("*** present", underTest.toString().indexOf("***") > 0);
1:     }
1: }
============================================================================