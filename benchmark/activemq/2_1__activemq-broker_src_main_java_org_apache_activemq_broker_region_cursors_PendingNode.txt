1:00879cf: /**
1:00879cf:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:00879cf:  * contributor license agreements.  See the NOTICE file distributed with
1:00879cf:  * this work for additional information regarding copyright ownership.
1:00879cf:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:00879cf:  * (the "License"); you may not use this file except in compliance with
1:00879cf:  * the License.  You may obtain a copy of the License at
1:00879cf:  *
1:00879cf:  *      http://www.apache.org/licenses/LICENSE-2.0
1:00879cf:  *
1:00879cf:  * Unless required by applicable law or agreed to in writing, software
1:00879cf:  * distributed under the License is distributed on an "AS IS" BASIS,
1:00879cf:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:00879cf:  * See the License for the specific language governing permissions and
1:00879cf:  * limitations under the License.
1:00879cf:  */
1:00879cf: package org.apache.activemq.broker.region.cursors;
1:00879cf: 
1:00879cf: import org.apache.activemq.broker.region.MessageReference;
1:00879cf: import org.apache.activemq.util.LinkedNode;
1:00879cf: 
1:00879cf: public class PendingNode extends LinkedNode {
1:00879cf:     private final MessageReference message;
1:00879cf:     private final OrderedPendingList list;
1:00879cf:     public PendingNode(OrderedPendingList list,MessageReference message) {
1:00879cf:         this.list = list;
1:00879cf:         this.message = message;
1:00879cf:     }
1:00879cf: 
1:00879cf:     MessageReference getMessage() {
1:00879cf:         return this.message;
1:00879cf:     }
1:00879cf:     
1:00879cf:     OrderedPendingList getList() {
1:00879cf:         return this.list;
1:00879cf:     }
1:00879cf:     
1:00879cf:     @Override
1:00879cf:     public String toString() {
1:00879cf:         PendingNode n = (PendingNode) getNext();
1:00879cf:         String str = "PendingNode(";
1:00879cf:         str += System.identityHashCode(this) + "),root="+isHeadNode()+",next="+(n != null ?System.identityHashCode(n):"NULL");
1:00879cf:         return str;
1:00879cf:     }
1:00879cf: 
1:00879cf: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Robert Davies
-------------------------------------------------------------------------------
commit:00879cf
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.cursors;
1: 
1: import org.apache.activemq.broker.region.MessageReference;
1: import org.apache.activemq.util.LinkedNode;
1: 
1: public class PendingNode extends LinkedNode {
1:     private final MessageReference message;
1:     private final OrderedPendingList list;
1:     public PendingNode(OrderedPendingList list,MessageReference message) {
1:         this.list = list;
1:         this.message = message;
1:     }
1: 
1:     MessageReference getMessage() {
1:         return this.message;
1:     }
1:     
1:     OrderedPendingList getList() {
1:         return this.list;
1:     }
1:     
1:     @Override
1:     public String toString() {
1:         PendingNode n = (PendingNode) getNext();
1:         String str = "PendingNode(";
1:         str += System.identityHashCode(this) + "),root="+isHeadNode()+",next="+(n != null ?System.identityHashCode(n):"NULL");
1:         return str;
1:     }
1: 
1: }
============================================================================