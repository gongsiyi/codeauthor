1:32f0612: /**
1:32f0612:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:32f0612:  * contributor license agreements.  See the NOTICE file distributed with
1:32f0612:  * this work for additional information regarding copyright ownership.
1:32f0612:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:32f0612:  * (the "License"); you may not use this file except in compliance with
1:32f0612:  * the License.  You may obtain a copy of the License at
5:32f0612:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:32f0612:  *
1:32f0612:  * Unless required by applicable law or agreed to in writing, software
1:32f0612:  * distributed under the License is distributed on an "AS IS" BASIS,
1:32f0612:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:32f0612:  * See the License for the specific language governing permissions and
1:32f0612:  * limitations under the License.
1:32f0612:  */
1:32f0612: package org.apache.activemq.openwire.v2;
7:32f0612: 
1:74a7a8b: import org.apache.activemq.command.BrokerId;
1:74a7a8b: import org.apache.activemq.command.ConsumerInfo;
1:32f0612: 
1:32f0612: /**
1:230a86c:  * Test case for the OpenWire marshalling for ConsumerInfo NOTE!: This file is
1:230a86c:  * auto generated - do not modify! if you need to make a change, please see the
1:230a86c:  * modify the groovy scripts in the under src/gram/script and then use maven
1:230a86c:  * openwire:generate to regenerate this file.
1:b0c2a40:  * 
1:230a86c:  * 
1:32f0612:  */
1:32f0612: public class ConsumerInfoTest extends BaseCommandTestSupport {
1:32f0612: 
1:fc00993:     public static final ConsumerInfoTest SINGLETON = new ConsumerInfoTest();
1:32f0612: 
1:32f0612:     public Object createObject() throws Exception {
1:bd0ad68:         ConsumerInfo info = new ConsumerInfo();
1:bd0ad68:         populateObject(info);
1:bd0ad68:         return info;
4:32f0612:     }
1:32f0612: 
1:32f0612:     protected void populateObject(Object object) throws Exception {
1:bd0ad68:         super.populateObject(object);
1:230a86c:         ConsumerInfo info = (ConsumerInfo)object;
1:bd0ad68: 
1:32f0612:         info.setConsumerId(createConsumerId("ConsumerId:1"));
1:32f0612:         info.setBrowser(true);
1:32f0612:         info.setDestination(createActiveMQDestination("Destination:2"));
1:32f0612:         info.setPrefetchSize(1);
1:32f0612:         info.setMaximumPendingMessageLimit(2);
1:32f0612:         info.setDispatchAsync(false);
1:32f0612:         info.setSelector("Selector:3");
1:4821b9d:         info.setSubscriptionName("SubscriptionName:4");
1:32f0612:         info.setNoLocal(true);
1:32f0612:         info.setExclusive(false);
1:32f0612:         info.setRetroactive(true);
1:230a86c:         info.setPriority((byte)1);
1:bd0ad68:         {
1:bd0ad68:             BrokerId value[] = new BrokerId[2];
1:230a86c:             for (int i = 0; i < 2; i++) {
1:bd0ad68:                 value[i] = createBrokerId("BrokerPath:5");
1:32f0612:             }
1:bd0ad68:             info.setBrokerPath(value);
1:bd0ad68:         }
1:32f0612:         info.setAdditionalPredicate(createBooleanExpression("AdditionalPredicate:6"));
1:32f0612:         info.setNetworkSubscription(false);
1:32f0612:         info.setOptimizedAcknowledge(true);
1:32f0612:         info.setNoRangeAcks(false);
1:bd0ad68:     }
1:bd0ad68: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:     public static final ConsumerInfoTest SINGLETON = new ConsumerInfoTest();
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.BrokerId;
1: import org.apache.activemq.command.ConsumerInfo;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1:  * Test case for the OpenWire marshalling for ConsumerInfo NOTE!: This file is
1:  * auto generated - do not modify! if you need to make a change, please see the
1:  * modify the groovy scripts in the under src/gram/script and then use maven
1:  * openwire:generate to regenerate this file.
1:  * 
/////////////////////////////////////////////////////////////////////////
1:         ConsumerInfo info = (ConsumerInfo)object;
/////////////////////////////////////////////////////////////////////////
1:         info.setPriority((byte)1);
1:             for (int i = 0; i < 2; i++) {
commit:333158a
/////////////////////////////////////////////////////////////////////////
0:         info.setSubscriptionName("SubcriptionName:4");
commit:bd0ad68
/////////////////////////////////////////////////////////////////////////
1:         ConsumerInfo info = new ConsumerInfo();
1:         populateObject(info);
1:         return info;
1:         super.populateObject(object);
0:         ConsumerInfo info = (ConsumerInfo) object;
1: 
/////////////////////////////////////////////////////////////////////////
1:         {
1:             BrokerId value[] = new BrokerId[2];
0:             for( int i=0; i < 2; i++ ) {
1:                 value[i] = createBrokerId("BrokerPath:5");
1:             info.setBrokerPath(value);
1:         }
1:     }
1: }
commit:32f0612
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.openwire.v2;
1: 
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
0: import java.io.IOException;
1: 
0: import org.apache.activemq.openwire.*;
0: import org.apache.activemq.command.*;
1: 
1: 
1: /**
0:  * Test case for the OpenWire marshalling for ConsumerInfo
1:  *
1:  *
0:  * NOTE!: This file is auto generated - do not modify!
0:  *        if you need to make a change, please see the modify the groovy scripts in the
0:  *        under src/gram/script and then use maven openwire:generate to regenerate 
0:  *        this file.
1:  *
0:  * @version $Revision: $
1:  */
1: public class ConsumerInfoTest extends BaseCommandTestSupport {
1: 
1: 
0:     public static ConsumerInfoTest SINGLETON = new ConsumerInfoTest();
1: 
1:     public Object createObject() throws Exception {
0:     		ConsumerInfo info = new ConsumerInfo();
0:     		populateObject(info);
0:     		return info;
1:     }
1: 
1:     
1:     protected void populateObject(Object object) throws Exception {
0:     		super.populateObject(object);
0:     		ConsumerInfo info = (ConsumerInfo) object;
1:         info.setConsumerId(createConsumerId("ConsumerId:1"));
1:         info.setBrowser(true);
1:         info.setDestination(createActiveMQDestination("Destination:2"));
1:         info.setPrefetchSize(1);
1:         info.setMaximumPendingMessageLimit(2);
1:         info.setDispatchAsync(false);
1:         info.setSelector("Selector:3");
0:         info.setSubcriptionName("SubcriptionName:4");
1:         info.setNoLocal(true);
1:         info.setExclusive(false);
1:         info.setRetroactive(true);
0:         info.setPriority((byte) 1);
1:         
0:     		    {
0: 	            BrokerId value[] = new BrokerId[2];
0: 	            for( int i=0; i < 2; i++ ) {
0: 	                value[i] = createBrokerId("BrokerPath:5");
1: 	            }
0: 	            info.setBrokerPath(value);
1:             }
1:         info.setAdditionalPredicate(createBooleanExpression("AdditionalPredicate:6"));
1:         info.setNetworkSubscription(false);
1:         info.setOptimizedAcknowledge(true);
1:         info.setNoRangeAcks(false);
1: 
1:             }
1:         }
commit:1ff8046
/////////////////////////////////////////////////////////////////////////
0: /**
author:Robert Davies
-------------------------------------------------------------------------------
commit:4821b9d
/////////////////////////////////////////////////////////////////////////
1:         info.setSubscriptionName("SubscriptionName:4");
============================================================================