1:01e2aec: /**
1:01e2aec:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:01e2aec:  * contributor license agreements.  See the NOTICE file distributed with
1:01e2aec:  * this work for additional information regarding copyright ownership.
1:01e2aec:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:01e2aec:  * (the "License"); you may not use this file except in compliance with
1:01e2aec:  * the License.  You may obtain a copy of the License at
1:01e2aec:  *
1:01e2aec:  *      http://www.apache.org/licenses/LICENSE-2.0
1:01e2aec:  *
1:01e2aec:  * Unless required by applicable law or agreed to in writing, software
1:01e2aec:  * distributed under the License is distributed on an "AS IS" BASIS,
1:01e2aec:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:01e2aec:  * See the License for the specific language governing permissions and
1:01e2aec:  * limitations under the License.
1:01e2aec:  */
1:01e2aec: package org.apache.activemq.broker;
1:01e2aec: 
1:01e2aec: import junit.framework.Test;
1:01e2aec: 
1:01e2aec: import org.apache.activemq.advisory.AdvisorySupport;
1:01e2aec: import org.apache.activemq.command.ConnectionInfo;
1:01e2aec: import org.apache.activemq.command.ConsumerId;
1:01e2aec: import org.apache.activemq.command.ConsumerInfo;
1:01e2aec: import org.apache.activemq.command.SessionId;
1:01e2aec: 
1:01e2aec: public class ConcurrentConnectSimulationTest extends BrokerTestSupport {
1:01e2aec: 
1:01e2aec:     /*
1:01e2aec:      * simulate failover and retry of connection before broker has killed connection
1:01e2aec:      * which appears as a concurrent connect request to the broker
1:01e2aec:      * see: https://issues.apache.org/activemq/browse/AMQ-2241
1:01e2aec:      */
1:01e2aec:     public void testConcurrentConnection() throws Exception {
1:01e2aec: 
1:01e2aec:         StubConnection connection1 = createConnection();
1:01e2aec:         StubConnection connection2 = createConnection();
1:01e2aec:         
1:01e2aec:         // reuse same connection info
1:01e2aec:         ConnectionInfo connectionInfo = createConnectionInfo();       
1:01e2aec:         connection1.request(connectionInfo);
1:01e2aec:         connection2.request(connectionInfo);
1:01e2aec:         
1:01e2aec:         // second one should win out, verify using consumer on default session (watchAdvisories)
1:01e2aec:         ConsumerId consumerId = new ConsumerId(new SessionId(connectionInfo.getConnectionId(), -1), 1);
1:01e2aec:         ConsumerInfo consumerInfo = new ConsumerInfo(consumerId);
1:01e2aec:         consumerInfo.setDestination(AdvisorySupport.TEMP_DESTINATION_COMPOSITE_ADVISORY_TOPIC);
1:01e2aec: 
1:01e2aec:         connection2.request(consumerInfo);
1:01e2aec:     }
1:01e2aec:     
1:01e2aec:     public static Test suite() {
1:01e2aec:         return suite(ConcurrentConnectSimulationTest.class);
1:01e2aec:     }
1:01e2aec: 
1:01e2aec:     public static void main(String[] args) {
1:01e2aec:         junit.textui.TestRunner.run(suite());
1:01e2aec:     }
1:01e2aec: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:01e2aec
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker;
1: 
1: import junit.framework.Test;
1: 
1: import org.apache.activemq.advisory.AdvisorySupport;
1: import org.apache.activemq.command.ConnectionInfo;
1: import org.apache.activemq.command.ConsumerId;
1: import org.apache.activemq.command.ConsumerInfo;
1: import org.apache.activemq.command.SessionId;
1: 
1: public class ConcurrentConnectSimulationTest extends BrokerTestSupport {
1: 
1:     /*
1:      * simulate failover and retry of connection before broker has killed connection
1:      * which appears as a concurrent connect request to the broker
1:      * see: https://issues.apache.org/activemq/browse/AMQ-2241
1:      */
1:     public void testConcurrentConnection() throws Exception {
1: 
1:         StubConnection connection1 = createConnection();
1:         StubConnection connection2 = createConnection();
1:         
1:         // reuse same connection info
1:         ConnectionInfo connectionInfo = createConnectionInfo();       
1:         connection1.request(connectionInfo);
1:         connection2.request(connectionInfo);
1:         
1:         // second one should win out, verify using consumer on default session (watchAdvisories)
1:         ConsumerId consumerId = new ConsumerId(new SessionId(connectionInfo.getConnectionId(), -1), 1);
1:         ConsumerInfo consumerInfo = new ConsumerInfo(consumerId);
1:         consumerInfo.setDestination(AdvisorySupport.TEMP_DESTINATION_COMPOSITE_ADVISORY_TOPIC);
1: 
1:         connection2.request(consumerInfo);
1:     }
1:     
1:     public static Test suite() {
1:         return suite(ConcurrentConnectSimulationTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
1: }
============================================================================