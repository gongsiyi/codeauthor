1:05b81ba: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:05b81ba:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:05b81ba:  *
1:05b81ba:  * Unless required by applicable law or agreed to in writing, software
1:05b81ba:  * distributed under the License is distributed on an "AS IS" BASIS,
1:05b81ba:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:05b81ba:  * See the License for the specific language governing permissions and
1:05b81ba:  * limitations under the License.
1:05b81ba:  */
1:05b81ba: package org.apache.activemq.transport.udp;
2:05b81ba: 
1:93dc39b: import java.net.URI;
1:93dc39b: 
1:4f446eb: import org.apache.activemq.openwire.OpenWireFormat;
1:8704338: import org.apache.activemq.transport.CommandJoiner;
1:05b81ba: import org.apache.activemq.transport.Transport;
1:364337b: import org.apache.activemq.util.IntSequenceGenerator;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:05b81ba: 
1:05b81ba: /**
1:0bbc0ac:  * 
1:05b81ba:  * 
1:05b81ba:  */
1:05b81ba: public class UdpTransportTest extends UdpTestSupport {
1:93dc39b: 
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(UdpTransportTest.class);
1:05b81ba: 
1:68779c0:     protected int consumerPort = 9123;
1:4f446eb:     protected String producerURI = "udp://localhost:" + consumerPort;
1:05b81ba: 
1:05b81ba:     protected Transport createProducer() throws Exception {
1:fc00993:         LOG.info("Producer using URI: " + producerURI);
1:4f446eb:         
1:8704338:         // we are not using the TransportFactory as this assumes that
1:8704338:         // UDP transports talk to a server using a WireFormat Negotiation step
1:8704338:         // rather than talking directly to each other
1:4f446eb:         
1:8704338:         OpenWireFormat wireFormat = createWireFormat();
1:8704338:         UdpTransport transport = new UdpTransport(wireFormat, new URI(producerURI));
1:364337b:         transport.setSequenceGenerator(new IntSequenceGenerator());
1:8704338:         return new CommandJoiner(transport, wireFormat);
1:05b81ba:     }
1:05b81ba: 
1:05b81ba:     protected Transport createConsumer() throws Exception {
1:fc00993:         LOG.info("Consumer on port: " + consumerPort);
1:8704338:         OpenWireFormat wireFormat = createWireFormat();
1:8704338:         UdpTransport transport = new UdpTransport(wireFormat, consumerPort);
1:364337b:         transport.setSequenceGenerator(new IntSequenceGenerator());
1:8704338:         return new CommandJoiner(transport, wireFormat);
1:4f446eb:     }
1:4f446eb: 
1:4f446eb:     protected OpenWireFormat createWireFormat() {
1:4f446eb:         return new OpenWireFormat();
1:05b81ba:     }
1:05b81ba: 
1:05b81ba: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0:     private static final Log LOG = LogFactory.getLog(UdpTransportTest.class);
1:         LOG.info("Producer using URI: " + producerURI);
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("Consumer on port: " + consumerPort);
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:93dc39b
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
1: 
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
/////////////////////////////////////////////////////////////////////////
0:     protected static final Log log = LogFactory.getLog(UdpTransportTest.class);
1: 
0:         log.info("Producer using URI: " + producerURI);
/////////////////////////////////////////////////////////////////////////
0:         log.info("Consumer on port: " + consumerPort);
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static final Logger LOG = LoggerFactory.getLogger(UdpTransportTest.class);
author:James Strachan
-------------------------------------------------------------------------------
commit:68779c0
/////////////////////////////////////////////////////////////////////////
1:     protected int consumerPort = 9123;
commit:364337b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.IntSequenceGenerator;
/////////////////////////////////////////////////////////////////////////
1:         transport.setSequenceGenerator(new IntSequenceGenerator());
/////////////////////////////////////////////////////////////////////////
1:         transport.setSequenceGenerator(new IntSequenceGenerator());
commit:8704338
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.CommandJoiner;
/////////////////////////////////////////////////////////////////////////
1:         // we are not using the TransportFactory as this assumes that
1:         // UDP transports talk to a server using a WireFormat Negotiation step
1:         // rather than talking directly to each other
1:         OpenWireFormat wireFormat = createWireFormat();
1:         UdpTransport transport = new UdpTransport(wireFormat, new URI(producerURI));
1:         return new CommandJoiner(transport, wireFormat);
1:         OpenWireFormat wireFormat = createWireFormat();
1:         UdpTransport transport = new UdpTransport(wireFormat, consumerPort);
1:         return new CommandJoiner(transport, wireFormat);
commit:4f446eb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.openwire.OpenWireFormat;
/////////////////////////////////////////////////////////////////////////
0:     protected int consumerPort = 8830;
1:     protected String producerURI = "udp://localhost:" + consumerPort;
0:     //protected String producerURI = "udp://localhost:8830";
0:     //protected String consumerURI = "udp://localhost:8831?port=8830";
1:         
0:         // The WireFormatNegotiator means we can only connect to servers
0:         return new UdpTransport(createWireFormat(), new URI(producerURI));
1:         
0:         //return TransportFactory.connect(new URI(producerURI));
0:         System.out.println("Consumer on port: " + consumerPort);
0:         return new UdpTransport(createWireFormat(), consumerPort);
0:         //return TransportFactory.connect(new URI(consumerURI));
1:     }
1: 
1:     protected OpenWireFormat createWireFormat() {
1:         return new OpenWireFormat();
commit:05b81ba
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.udp;
1: 
1: import org.apache.activemq.transport.Transport;
0: import org.apache.activemq.transport.TransportFactory;
1: 
0: import java.net.URI;
1: 
1: /**
1:  * 
0:  * @version $Revision$
1:  */
1: public class UdpTransportTest extends UdpTestSupport {
1: 
0:     protected String producerURI = "udp://localhost:8830";
0:     protected String consumerURI = "udp://localhost:8831?port=8830";
1: 
1:     protected Transport createProducer() throws Exception {
0:         System.out.println("Producer using URI: " + producerURI);
0:         return TransportFactory.connect(new URI(producerURI));
1:     }
1: 
1:     protected Transport createConsumer() throws Exception {
0:         System.out.println("Consumer using URI: " + consumerURI);
0:         return TransportFactory.connect(new URI(consumerURI));
1:     }
1: 
1: }
============================================================================