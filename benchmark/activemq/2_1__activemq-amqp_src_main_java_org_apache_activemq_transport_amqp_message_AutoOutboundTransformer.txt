1:d54e21b: /*
1:6e69319:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6e69319:  * contributor license agreements.  See the NOTICE file distributed with
1:6e69319:  * this work for additional information regarding copyright ownership.
1:6e69319:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6e69319:  * (the "License"); you may not use this file except in compliance with
1:6e69319:  * the License.  You may obtain a copy of the License at
1:6e69319:  *
1:6e69319:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6e69319:  *
1:6e69319:  * Unless required by applicable law or agreed to in writing, software
1:6e69319:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6e69319:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6e69319:  * See the License for the specific language governing permissions and
1:6e69319:  * limitations under the License.
1:6e69319:  */
1:6e69319: package org.apache.activemq.transport.amqp.message;
4:6e69319: 
1:63d62a7: import static org.apache.activemq.transport.amqp.message.AmqpMessageSupport.JMS_AMQP_NATIVE;
1:63d62a7: 
1:6e69319: import javax.jms.BytesMessage;
1:63d62a7: 
1:63d62a7: import org.apache.activemq.command.ActiveMQBytesMessage;
1:63d62a7: import org.apache.activemq.command.ActiveMQMessage;
1:d54e21b: 
1:6e69319: public class AutoOutboundTransformer extends JMSMappingOutboundTransformer {
1:6e69319: 
1:63d62a7:     private final JMSMappingOutboundTransformer transformer = new JMSMappingOutboundTransformer();
1:6e69319: 
2:6e69319:     @Override
1:63d62a7:     public EncodedMessage transform(ActiveMQMessage message) throws Exception {
1:63d62a7:         if (message == null) {
1:6e69319:             return null;
1:d54e21b:         }
1:d54e21b: 
1:63d62a7:         if (message.getBooleanProperty(JMS_AMQP_NATIVE)) {
1:63d62a7:             if (message instanceof BytesMessage) {
1:63d62a7:                 return AMQPNativeOutboundTransformer.transform(this, (ActiveMQBytesMessage) message);
1:6e69319:             } else {
1:6e69319:                 return null;
3:6e69319:             }
1:6e69319:         } else {
1:63d62a7:             return transformer.transform(message);
1:6e69319:         }
1:6e69319:     }
1:6e69319: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:63d62a7
/////////////////////////////////////////////////////////////////////////
1: import static org.apache.activemq.transport.amqp.message.AmqpMessageSupport.JMS_AMQP_NATIVE;
1: 
1: 
1: import org.apache.activemq.command.ActiveMQBytesMessage;
1: import org.apache.activemq.command.ActiveMQMessage;
1:     private final JMSMappingOutboundTransformer transformer = new JMSMappingOutboundTransformer();
1:     public EncodedMessage transform(ActiveMQMessage message) throws Exception {
1:         if (message == null) {
1:         if (message.getBooleanProperty(JMS_AMQP_NATIVE)) {
1:             if (message instanceof BytesMessage) {
1:                 return AMQPNativeOutboundTransformer.transform(this, (ActiveMQBytesMessage) message);
1:             return transformer.transform(message);
commit:d54e21b
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
0:     public AutoOutboundTransformer(ActiveMQJMSVendor vendor) {
1: 
0:         if (msg == null) {
1:         }
1: 
0:         if (msg.getBooleanProperty(prefixVendor + "NATIVE")) {
0:             if (msg instanceof BytesMessage) {
0:                 return AMQPNativeOutboundTransformer.transform(this, (BytesMessage) msg);
commit:6e69319
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.message;
1: 
1: import javax.jms.BytesMessage;
0: import javax.jms.Message;
1: 
1: public class AutoOutboundTransformer extends JMSMappingOutboundTransformer {
1: 
0:     private final JMSMappingOutboundTransformer transformer;
1: 
0:     public AutoOutboundTransformer(JMSVendor vendor) {
0:         super(vendor);
0:         transformer = new JMSMappingOutboundTransformer(vendor);
1:     }
1: 
1:     @Override
0:     public EncodedMessage transform(Message msg) throws Exception {
0:         if( msg == null )
1:             return null;
0:         if( msg.getBooleanProperty(prefixVendor + "NATIVE") ) {
0:             if( msg instanceof BytesMessage ) {
0:                 return AMQPNativeOutboundTransformer.transform(this, (BytesMessage)msg);
1:             } else {
1:                 return null;
1:             }
1:         } else {
0:             return transformer.transform(msg);
1:         }
1:     }
1: 
1:     @Override
0:     public void setUseByteDestinationTypeAnnotations(boolean useByteDestinationTypeAnnotations)
0:     {
0:         super.setUseByteDestinationTypeAnnotations(useByteDestinationTypeAnnotations);
0:         transformer.setUseByteDestinationTypeAnnotations(useByteDestinationTypeAnnotations);
1:     }
1: }
author:Robert Gemmell
-------------------------------------------------------------------------------
commit:37b1b6a
/////////////////////////////////////////////////////////////////////////
============================================================================