1:2ccbdb8: /**
1:2ccbdb8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:2ccbdb8:  * contributor license agreements.  See the NOTICE file distributed with
1:2ccbdb8:  * this work for additional information regarding copyright ownership.
1:2ccbdb8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:2ccbdb8:  * (the "License"); you may not use this file except in compliance with
1:2ccbdb8:  * the License.  You may obtain a copy of the License at
2:2ccbdb8:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:2ccbdb8:  *
1:2ccbdb8:  * Unless required by applicable law or agreed to in writing, software
1:2ccbdb8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2ccbdb8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2ccbdb8:  * See the License for the specific language governing permissions and
1:2ccbdb8:  * limitations under the License.
1:2ccbdb8:  */
1:2ccbdb8: package org.apache.activemq.transport.tcp;
1:2ccbdb8: 
1:2ccbdb8: import java.io.IOException;
1:2ccbdb8: import java.security.cert.X509Certificate;
1:2ccbdb8: 
1:74a7a8b: import javax.management.remote.JMXPrincipal;
1:74a7a8b: import javax.net.ssl.SSLSocket;
1:74a7a8b: 
1:2ccbdb8: /**
1:0bbc0ac:  * 
1:2ccbdb8:  */
1:933eb2f: public final class SslSocketHelper {
1:933eb2f: 
1:933eb2f:     private SslSocketHelper() {
1:933eb2f:     }
1:933eb2f: 
1:933eb2f:     public static SSLSocket createSSLSocket(String certDistinguishedName, boolean wantAuth, boolean needAuth)
1:933eb2f:         throws IOException {
1:2ccbdb8:         JMXPrincipal principal = new JMXPrincipal(certDistinguishedName);
1:2ccbdb8:         X509Certificate cert = new StubX509Certificate(principal);
1:2ccbdb8:         StubSSLSession sslSession = new StubSSLSession(cert);
1:2ccbdb8: 
1:2ccbdb8:         StubSSLSocket sslSocket = new StubSSLSocket(sslSession);
1:2ccbdb8:         sslSocket.setWantClientAuth(wantAuth);
1:2ccbdb8:         sslSocket.setNeedClientAuth(needAuth);
1:2ccbdb8:         return sslSocket;
1:2ccbdb8:     }
1:2ccbdb8: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1: public final class SslSocketHelper {
1: 
1:     private SslSocketHelper() {
1:     }
1: 
1:     public static SSLSocket createSSLSocket(String certDistinguishedName, boolean wantAuth, boolean needAuth)
1:         throws IOException {
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.management.remote.JMXPrincipal;
1: import javax.net.ssl.SSLSocket;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
author:James Strachan
-------------------------------------------------------------------------------
commit:2ccbdb8
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.tcp;
1: 
0: import javax.management.remote.JMXPrincipal;
0: import javax.net.ssl.SSLSocket;
1: import java.io.IOException;
1: import java.security.cert.X509Certificate;
1: 
1: /**
0:  * @version $Revision$
1:  */
0: public class SslSocketHelper {
0:     public static SSLSocket createSSLSocket(String certDistinguishedName, boolean wantAuth, boolean needAuth) throws IOException {
1:         JMXPrincipal principal = new JMXPrincipal(certDistinguishedName);
1:         X509Certificate cert = new StubX509Certificate(principal);
1:         StubSSLSession sslSession = new StubSSLSession(cert);
1: 
1:         StubSSLSocket sslSocket = new StubSSLSocket(sslSession);
1:         sslSocket.setWantClientAuth(wantAuth);
1:         sslSocket.setNeedClientAuth(needAuth);
1:         return sslSocket;
1:     }
1: }
============================================================================