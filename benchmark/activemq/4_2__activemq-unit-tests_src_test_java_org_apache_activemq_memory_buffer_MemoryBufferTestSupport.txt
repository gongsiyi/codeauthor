1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.memory.buffer;
3:d29ca2a: 
1:d29ca2a: import junit.framework.TestCase;
1:d29ca2a: 
1:93dc39b: import org.apache.activemq.command.ActiveMQMessage;
1:d29ca2a: import org.apache.activemq.memory.buffer.MessageBuffer;
1:d29ca2a: import org.apache.activemq.memory.buffer.MessageQueue;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:93dc39b: 
1:d29ca2a: /**
1:b0c2a40:  *
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public abstract class MemoryBufferTestSupport extends TestCase {
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(MemoryBufferTestSupport.class);
1:d29ca2a: 
1:d29ca2a:     protected MessageBuffer buffer = createMessageBuffer();
1:d29ca2a:     protected MessageQueue qA = buffer.createMessageQueue();
1:d29ca2a:     protected MessageQueue qB = buffer.createMessageQueue();
1:d29ca2a:     protected MessageQueue qC = buffer.createMessageQueue();
1:d29ca2a:     protected int messageCount;
1:d29ca2a: 
1:933eb2f:     protected abstract MessageBuffer createMessageBuffer();
1:933eb2f: 
1:d29ca2a:     protected void setUp() throws Exception {
1:d29ca2a:         buffer = createMessageBuffer();
1:d29ca2a:         qA = buffer.createMessageQueue();
1:d29ca2a:         qB = buffer.createMessageQueue();
1:d29ca2a:         qC = buffer.createMessageQueue();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     protected void dump() {
1:fc00993:         LOG.info("Dumping current state");
1:d29ca2a:         dumpQueue(qA, "A");
1:d29ca2a:         dumpQueue(qB, "B");
1:d29ca2a:         dumpQueue(qC, "C");
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     protected void dumpQueue(MessageQueue queue, String name) {
1:fc00993:         LOG.info("  " + name + " = " + queue.getList());
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     protected ActiveMQMessage createMessage(int size) throws Exception {
1:d29ca2a:         DummyMessage answer = new DummyMessage(size);
1:d29ca2a:         answer.setIntProperty("counter", ++messageCount);
1:d29ca2a:         answer.setJMSMessageID("" + messageCount);
1:d29ca2a:         return answer;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:     protected abstract MessageBuffer createMessageBuffer();
1: 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0:     private static final Log LOG = LogFactory.getLog(MemoryBufferTestSupport.class);
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("Dumping current state");
1:         LOG.info("  " + name + " = " + queue.getList());
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:93dc39b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.ActiveMQMessage;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
0:     protected static final Log log = LogFactory.getLog(MemoryBufferTestSupport.class);
/////////////////////////////////////////////////////////////////////////
0:         log.info("Dumping current state");
0:         log.info("  " + name + " = " + queue.getList());
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.memory.buffer;
1: 
0: import org.apache.activemq.command.ActiveMQMessage;
1: import org.apache.activemq.memory.buffer.MessageBuffer;
1: import org.apache.activemq.memory.buffer.MessageQueue;
1: 
1: import junit.framework.TestCase;
1: 
1: /**
1:  *
0:  * @version $Revision: 1.1 $
1:  */
1: public abstract class MemoryBufferTestSupport extends TestCase {
1: 
0:     protected abstract MessageBuffer createMessageBuffer();
1: 
1:     protected MessageBuffer buffer = createMessageBuffer();
1:     protected MessageQueue qA = buffer.createMessageQueue();
1:     protected MessageQueue qB = buffer.createMessageQueue();
1:     protected MessageQueue qC = buffer.createMessageQueue();
1:     protected int messageCount;
1: 
1:     protected void setUp() throws Exception {
1:         buffer = createMessageBuffer();
1:         qA = buffer.createMessageQueue();
1:         qB = buffer.createMessageQueue();
1:         qC = buffer.createMessageQueue();
1:     }
1: 
1:     protected void dump() {
0:         System.out.println("Dumping current state");
1:         dumpQueue(qA, "A");
1:         dumpQueue(qB, "B");
1:         dumpQueue(qC, "C");
0:         System.out.println();
1:     }
1: 
1:     protected void dumpQueue(MessageQueue queue, String name) {
0:         System.out.println("  " + name + " = " + queue.getList());
1:     }
1: 
1:     protected ActiveMQMessage createMessage(int size) throws Exception {
1:         DummyMessage answer = new DummyMessage(size);
1:         answer.setIntProperty("counter", ++messageCount);
1:         answer.setJMSMessageID("" + messageCount);
1:         return answer;
1:     }
1: 
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(MemoryBufferTestSupport.class);
author:Robert Davies
-------------------------------------------------------------------------------
commit:6d8e2c5
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.memory.buffer.MessageBuffer;
0: import org.apache.activemq.memory.buffer.MessageQueue;
============================================================================