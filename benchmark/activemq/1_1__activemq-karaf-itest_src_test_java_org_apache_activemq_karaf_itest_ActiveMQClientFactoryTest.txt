1:59f27aa: /**
1:59f27aa:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:59f27aa:  * contributor license agreements.  See the NOTICE file distributed with
1:59f27aa:  * this work for additional information regarding copyright ownership.
1:59f27aa:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:59f27aa:  * (the "License"); you may not use this file except in compliance with
1:59f27aa:  * the License.  You may obtain a copy of the License at
1:59f27aa:  *
1:59f27aa:  *      http://www.apache.org/licenses/LICENSE-2.0
1:59f27aa:  *
1:59f27aa:  * Unless required by applicable law or agreed to in writing, software
1:59f27aa:  * distributed under the License is distributed on an "AS IS" BASIS,
1:59f27aa:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:59f27aa:  * See the License for the specific language governing permissions and
1:59f27aa:  * limitations under the License.
1:59f27aa:  */
1:59f27aa: package org.apache.activemq.karaf.itest;
1:59f27aa: 
1:59f27aa: import static org.ops4j.pax.exam.CoreOptions.composite;
1:59f27aa: import static org.ops4j.pax.exam.karaf.options.KarafDistributionOption.replaceConfigurationFile;
1:59f27aa: 
1:59f27aa: import java.io.File;
1:59f27aa: import java.util.concurrent.Callable;
1:59f27aa: 
1:59f27aa: import javax.inject.Inject;
1:59f27aa: import javax.jms.ConnectionFactory;
1:59f27aa: 
1:59f27aa: import org.junit.Test;
1:59f27aa: import org.junit.runner.RunWith;
1:59f27aa: import org.ops4j.pax.exam.Configuration;
1:59f27aa: import org.ops4j.pax.exam.Option;
1:59f27aa: import org.ops4j.pax.exam.junit.PaxExam;
1:59f27aa: 
1:59f27aa: @RunWith(PaxExam.class)
1:50ea308: public class ActiveMQClientFactoryTest extends AbstractFeatureTest {
1:59f27aa:     @Inject
1:59f27aa:     ConnectionFactory connectionFactory;
1:59f27aa: 
1:59f27aa:     /**
1:59f27aa:      * Start karaf with activemq broker and create ConnectionFactory from config
1:59f27aa:      */
1:59f27aa:     @Configuration
1:59f27aa:     public Option[] configure() {
1:59f27aa:         return new Option[] //
1:59f27aa:         {
1:59f27aa:          composite(super.configure("activemq", "activemq-broker", "activemq-cf")),
1:59f27aa:          replaceConfigurationFile("etc/org.apache.activemq.cfg", 
1:50ea308:                                   new File(RESOURCE_BASE + "org.apache.activemq-local.cfg"))
1:59f27aa:         };
1:59f27aa:     }
1:59f27aa: 
1:59f27aa:     @Test
1:59f27aa:     public void testConnection() throws Throwable {
1:59f27aa:         withinReason(new Callable<Boolean>() {
1:59f27aa:             
1:59f27aa:             @Override
1:59f27aa:             public Boolean call() throws Exception {
1:59f27aa:                 connectionFactory.createConnection().close();
1:59f27aa:                 return true;
1:59f27aa:             }
1:59f27aa:         });
1:59f27aa:     }
1:59f27aa: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:50ea308
/////////////////////////////////////////////////////////////////////////
1: public class ActiveMQClientFactoryTest extends AbstractFeatureTest {
/////////////////////////////////////////////////////////////////////////
1:                                   new File(RESOURCE_BASE + "org.apache.activemq-local.cfg"))
commit:59f27aa
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.karaf.itest;
1: 
1: import static org.ops4j.pax.exam.CoreOptions.composite;
1: import static org.ops4j.pax.exam.karaf.options.KarafDistributionOption.replaceConfigurationFile;
1: 
1: import java.io.File;
1: import java.util.concurrent.Callable;
1: 
1: import javax.inject.Inject;
1: import javax.jms.ConnectionFactory;
1: 
1: import org.junit.Test;
1: import org.junit.runner.RunWith;
1: import org.ops4j.pax.exam.Configuration;
1: import org.ops4j.pax.exam.Option;
1: import org.ops4j.pax.exam.junit.PaxExam;
1: 
1: @RunWith(PaxExam.class)
0: public class ActiveMQClientFactoryTest extends AbstractJmsFeatureTest {
1:     @Inject
1:     ConnectionFactory connectionFactory;
1: 
1:     /**
1:      * Start karaf with activemq broker and create ConnectionFactory from config
1:      */
1:     @Configuration
1:     public Option[] configure() {
1:         return new Option[] //
1:         {
1:          composite(super.configure("activemq", "activemq-broker", "activemq-cf")),
1:          replaceConfigurationFile("etc/org.apache.activemq.cfg", 
0:                                   new File("src/test/resources/org/apache/activemq/karaf/itest/org.apache.activemq-local.cfg"))
1:         };
1:     }
1: 
1:     @Test
1:     public void testConnection() throws Throwable {
1:         withinReason(new Callable<Boolean>() {
1:             
1:             @Override
1:             public Boolean call() throws Exception {
1:                 connectionFactory.createConnection().close();
1:                 return true;
1:             }
1:         });
1:     }
1: }
============================================================================