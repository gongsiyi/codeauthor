1:bab4a92: /*
1:bab4a92:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:bab4a92:  * contributor license agreements.  See the NOTICE file distributed with
1:bab4a92:  * this work for additional information regarding copyright ownership.
1:bab4a92:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:bab4a92:  * (the "License"); you may not use this file except in compliance with
1:bab4a92:  * the License.  You may obtain a copy of the License at
1:bab4a92:  *
1:bab4a92:  *      http://www.apache.org/licenses/LICENSE-2.0
1:bab4a92:  *
1:bab4a92:  * Unless required by applicable law or agreed to in writing, software
1:bab4a92:  * distributed under the License is distributed on an "AS IS" BASIS,
1:bab4a92:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bab4a92:  * See the License for the specific language governing permissions and
1:bab4a92:  * limitations under the License.
1:bab4a92:  */
1:bab4a92: package org.apache.activemq.junit;
1:bab4a92: 
1:bab4a92: import java.net.URI;
1:bab4a92: import javax.jms.JMSException;
1:bab4a92: import javax.jms.Topic;
1:bab4a92: 
1:bab4a92: import org.apache.activemq.ActiveMQConnectionFactory;
1:bab4a92: import org.apache.activemq.command.ActiveMQDestination;
1:bab4a92: 
1:bab4a92: public class ActiveMQTopicDurableSubscriberResource extends AbstractActiveMQConsumerResource {
1:bab4a92:     String clientId = "test-client-id";
1:bab4a92:     String subscriberName = "test-subscriber";
1:bab4a92: 
1:bab4a92:     public ActiveMQTopicDurableSubscriberResource(String destinationName, ActiveMQConnectionFactory connectionFactory) {
1:bab4a92:         super(destinationName, connectionFactory);
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     public ActiveMQTopicDurableSubscriberResource(String destinationName, URI brokerURI) {
1:bab4a92:         super(destinationName, brokerURI);
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     public ActiveMQTopicDurableSubscriberResource(String destinationName, EmbeddedActiveMQBroker embeddedActiveMQBroker) {
1:bab4a92:         super(destinationName, embeddedActiveMQBroker);
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     public ActiveMQTopicDurableSubscriberResource(String destinationName, URI brokerURI, String userName, String password) {
1:bab4a92:         super(destinationName, brokerURI, userName, password);
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     @Override
1:bab4a92:     public byte getDestinationType() {
1:bab4a92:         return ActiveMQDestination.TOPIC_TYPE;
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     @Override
1:bab4a92:     protected void createClient() throws JMSException {
1:bab4a92:         consumer = session.createDurableSubscriber((Topic) destination, subscriberName);
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     @Override
1:bab4a92:     public String getClientId() {
1:bab4a92:         return clientId;
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     public void setClientId(String clientId) {
1:bab4a92:         this.clientId = clientId;
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     public String getSubscriberName() {
1:bab4a92:         return subscriberName;
1:bab4a92:     }
1:bab4a92: 
1:bab4a92:     public void setSubscriberName(String subscriberName) {
1:bab4a92:         this.subscriberName = subscriberName;
1:bab4a92:     }
1:bab4a92: }
============================================================================
author:Quinn Stevenson
-------------------------------------------------------------------------------
commit:bab4a92
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.junit;
1: 
1: import java.net.URI;
1: import javax.jms.JMSException;
1: import javax.jms.Topic;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.command.ActiveMQDestination;
1: 
1: public class ActiveMQTopicDurableSubscriberResource extends AbstractActiveMQConsumerResource {
1:     String clientId = "test-client-id";
1:     String subscriberName = "test-subscriber";
1: 
1:     public ActiveMQTopicDurableSubscriberResource(String destinationName, ActiveMQConnectionFactory connectionFactory) {
1:         super(destinationName, connectionFactory);
1:     }
1: 
1:     public ActiveMQTopicDurableSubscriberResource(String destinationName, URI brokerURI) {
1:         super(destinationName, brokerURI);
1:     }
1: 
1:     public ActiveMQTopicDurableSubscriberResource(String destinationName, EmbeddedActiveMQBroker embeddedActiveMQBroker) {
1:         super(destinationName, embeddedActiveMQBroker);
1:     }
1: 
1:     public ActiveMQTopicDurableSubscriberResource(String destinationName, URI brokerURI, String userName, String password) {
1:         super(destinationName, brokerURI, userName, password);
1:     }
1: 
1:     @Override
1:     public byte getDestinationType() {
1:         return ActiveMQDestination.TOPIC_TYPE;
1:     }
1: 
1:     @Override
1:     protected void createClient() throws JMSException {
1:         consumer = session.createDurableSubscriber((Topic) destination, subscriberName);
1:     }
1: 
1:     @Override
1:     public String getClientId() {
1:         return clientId;
1:     }
1: 
1:     public void setClientId(String clientId) {
1:         this.clientId = clientId;
1:     }
1: 
1:     public String getSubscriberName() {
1:         return subscriberName;
1:     }
1: 
1:     public void setSubscriberName(String subscriberName) {
1:         this.subscriberName = subscriberName;
1:     }
1: }
============================================================================