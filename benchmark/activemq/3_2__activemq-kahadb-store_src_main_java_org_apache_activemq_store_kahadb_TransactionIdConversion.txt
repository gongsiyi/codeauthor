1:1595378: /**
1:1595378:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1595378:  * contributor license agreements.  See the NOTICE file distributed with
1:1595378:  * this work for additional information regarding copyright ownership.
1:1595378:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1595378:  * (the "License"); you may not use this file except in compliance with
1:1595378:  * the License.  You may obtain a copy of the License at
1:1595378:  *
1:1595378:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1595378:  *
1:1595378:  * Unless required by applicable law or agreed to in writing, software
1:1595378:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1595378:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1595378:  * See the License for the specific language governing permissions and
1:1595378:  * limitations under the License.
1:1595378:  */
1:1595378: 
1:1595378: package org.apache.activemq.store.kahadb;
1:1595378: 
1:1595378: import org.apache.activemq.command.ConnectionId;
1:1595378: import org.apache.activemq.command.LocalTransactionId;
1:1595378: import org.apache.activemq.command.TransactionId;
1:1595378: import org.apache.activemq.command.XATransactionId;
1:1595378: import org.apache.activemq.protobuf.Buffer;
1:1595378: import org.apache.activemq.store.kahadb.data.KahaLocalTransactionId;
1:1595378: import org.apache.activemq.store.kahadb.data.KahaTransactionInfo;
1:1595378: import org.apache.activemq.store.kahadb.data.KahaXATransactionId;
1:1595378: 
1:1595378: public class TransactionIdConversion {
1:1595378: 
1:1595378:     static KahaTransactionInfo convertToLocal(TransactionId tx) {
1:1595378:         KahaTransactionInfo rc = new KahaTransactionInfo();
1:1595378:         LocalTransactionId t = (LocalTransactionId) tx;
1:1595378:         KahaLocalTransactionId kahaTxId = new KahaLocalTransactionId();
1:1595378:         kahaTxId.setConnectionId(t.getConnectionId().getValue());
1:6b203be:         kahaTxId.setTransactionId(t.getValue());
1:6b203be:         rc.setLocalTransactionId(kahaTxId);
1:1595378:         return rc;
1:1595378:     }
1:1595378: 
1:1595378:     static KahaTransactionInfo convert(TransactionId txid) {
1:1595378:         if (txid == null) {
1:1595378:             return null;
1:1595378:         }
1:1595378:         KahaTransactionInfo rc;
1:1595378: 
1:1595378:         if (txid.isLocalTransaction()) {
1:1595378:             rc = convertToLocal(txid);
1:1595378:         } else {
1:1595378:             rc = new KahaTransactionInfo();
1:1595378:             XATransactionId t = (XATransactionId) txid;
1:1595378:             KahaXATransactionId kahaTxId = new KahaXATransactionId();
1:1595378:             kahaTxId.setBranchQualifier(new Buffer(t.getBranchQualifier()));
1:1595378:             kahaTxId.setGlobalTransactionId(new Buffer(t.getGlobalTransactionId()));
1:1595378:             kahaTxId.setFormatId(t.getFormatId());
1:6b203be:             rc.setXaTransactionId(kahaTxId);
1:1595378:         }
1:1595378:         return rc;
1:1595378:     }
1:1595378: 
1:1595378:     static TransactionId convert(KahaTransactionInfo transactionInfo) {
1:6b203be:         if (transactionInfo.hasLocalTransactionId()) {
1:6b203be:             KahaLocalTransactionId tx = transactionInfo.getLocalTransactionId();
1:1595378:             LocalTransactionId rc = new LocalTransactionId();
1:1595378:             rc.setConnectionId(new ConnectionId(tx.getConnectionId()));
1:6b203be:             rc.setValue(tx.getTransactionId());
1:1595378:             return rc;
1:1595378:         } else {
1:6b203be:             KahaXATransactionId tx = transactionInfo.getXaTransactionId();
1:1595378:             XATransactionId rc = new XATransactionId();
1:1595378:             rc.setBranchQualifier(tx.getBranchQualifier().toByteArray());
1:1595378:             rc.setGlobalTransactionId(tx.getGlobalTransactionId().toByteArray());
1:1595378:             rc.setFormatId(tx.getFormatId());
1:1595378:             return rc;
1:1595378:         }
1:1595378:     }
1:1595378: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:6b203be
/////////////////////////////////////////////////////////////////////////
1:         kahaTxId.setTransactionId(t.getValue());
1:         rc.setLocalTransactionId(kahaTxId);
/////////////////////////////////////////////////////////////////////////
1:             rc.setXaTransactionId(kahaTxId);
1:         if (transactionInfo.hasLocalTransactionId()) {
1:             KahaLocalTransactionId tx = transactionInfo.getLocalTransactionId();
1:             rc.setValue(tx.getTransactionId());
1:             KahaXATransactionId tx = transactionInfo.getXaTransactionId();
author:Gary Tully
-------------------------------------------------------------------------------
commit:1595378
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.store.kahadb;
1: 
1: import org.apache.activemq.command.ConnectionId;
1: import org.apache.activemq.command.LocalTransactionId;
1: import org.apache.activemq.command.TransactionId;
1: import org.apache.activemq.command.XATransactionId;
1: import org.apache.activemq.protobuf.Buffer;
1: import org.apache.activemq.store.kahadb.data.KahaLocalTransactionId;
1: import org.apache.activemq.store.kahadb.data.KahaTransactionInfo;
1: import org.apache.activemq.store.kahadb.data.KahaXATransactionId;
1: 
1: public class TransactionIdConversion {
1: 
1:     static KahaTransactionInfo convertToLocal(TransactionId tx) {
1:         KahaTransactionInfo rc = new KahaTransactionInfo();
1:         LocalTransactionId t = (LocalTransactionId) tx;
1:         KahaLocalTransactionId kahaTxId = new KahaLocalTransactionId();
1:         kahaTxId.setConnectionId(t.getConnectionId().getValue());
0:         kahaTxId.setTransacitonId(t.getValue());
0:         rc.setLocalTransacitonId(kahaTxId);
1:         return rc;
1:     }
1: 
1:     static KahaTransactionInfo convert(TransactionId txid) {
1:         if (txid == null) {
1:             return null;
1:         }
1:         KahaTransactionInfo rc;
1: 
1:         if (txid.isLocalTransaction()) {
1:             rc = convertToLocal(txid);
1:         } else {
1:             rc = new KahaTransactionInfo();
1:             XATransactionId t = (XATransactionId) txid;
1:             KahaXATransactionId kahaTxId = new KahaXATransactionId();
1:             kahaTxId.setBranchQualifier(new Buffer(t.getBranchQualifier()));
1:             kahaTxId.setGlobalTransactionId(new Buffer(t.getGlobalTransactionId()));
1:             kahaTxId.setFormatId(t.getFormatId());
0:             rc.setXaTransacitonId(kahaTxId);
1:         }
1:         return rc;
1:     }
1: 
1:     static TransactionId convert(KahaTransactionInfo transactionInfo) {
0:         if (transactionInfo.hasLocalTransacitonId()) {
0:             KahaLocalTransactionId tx = transactionInfo.getLocalTransacitonId();
1:             LocalTransactionId rc = new LocalTransactionId();
1:             rc.setConnectionId(new ConnectionId(tx.getConnectionId()));
0:             rc.setValue(tx.getTransacitonId());
1:             return rc;
1:         } else {
0:             KahaXATransactionId tx = transactionInfo.getXaTransacitonId();
1:             XATransactionId rc = new XATransactionId();
1:             rc.setBranchQualifier(tx.getBranchQualifier().toByteArray());
1:             rc.setGlobalTransactionId(tx.getGlobalTransactionId().toByteArray());
1:             rc.setFormatId(tx.getFormatId());
1:             return rc;
1:         }
1:     }
1: }
============================================================================