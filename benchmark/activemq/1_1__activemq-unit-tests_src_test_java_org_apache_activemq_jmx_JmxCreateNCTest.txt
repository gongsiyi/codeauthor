1:c2eb486: /**
1:c2eb486:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c2eb486:  * contributor license agreements.  See the NOTICE file distributed with
1:c2eb486:  * this work for additional information regarding copyright ownership.
1:c2eb486:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c2eb486:  * (the "License"); you may not use this file except in compliance with
1:c2eb486:  * the License.  You may obtain a copy of the License at
1:c2eb486:  *
1:c2eb486:  * http://www.apache.org/licenses/LICENSE-2.0
1:c2eb486:  *
1:c2eb486:  * Unless required by applicable law or agreed to in writing, software
1:c2eb486:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c2eb486:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c2eb486:  * See the License for the specific language governing permissions and
1:c2eb486:  * limitations under the License.
1:c2eb486:  */
1:c2eb486: package org.apache.activemq.jmx;
1:c2eb486: 
1:c2eb486: import org.apache.activemq.broker.BrokerService;
1:c2eb486: import org.apache.activemq.broker.jmx.BrokerViewMBean;
1:c2eb486: import org.apache.activemq.broker.jmx.NetworkConnectorViewMBean;
1:c2eb486: import org.junit.Test;
1:c2eb486: 
1:c2eb486: import javax.management.ObjectName;
1:c2eb486: 
1:c2eb486: import static org.junit.Assert.assertEquals;
1:c2eb486: import static org.junit.Assert.assertNotNull;
1:c2eb486: 
1:c2eb486: /**
1:c2eb486:  * This test shows that when we create a network connector via JMX,
1:c2eb486:  * the NC/bridge shows up in the MBean Server
1:c2eb486:  *
1:c2eb486:  * @author <a href="http://www.christianposta.com/blog">Christian Posta</a>
1:c2eb486:  */
1:c2eb486: public class JmxCreateNCTest {
1:c2eb486: 
1:c2eb486:     private static final String BROKER_NAME = "jmx-broker";
1:c2eb486: 
1:c2eb486:     @Test
1:c2eb486:     public void testBridgeRegistration() throws Exception {
1:c2eb486:         BrokerService broker = new BrokerService();
1:c2eb486:         broker.setBrokerName(BROKER_NAME);
1:c2eb486:         broker.setUseJmx(true); // explicitly set this so no funny issues
1:c2eb486:         broker.start();
1:c2eb486:         broker.waitUntilStarted();
1:c2eb486: 
1:c2eb486:         // now create network connector over JMX
1:c2eb486:         ObjectName brokerObjectName = new ObjectName("org.apache.activemq:type=Broker,brokerName=" + BROKER_NAME);
1:c2eb486:         BrokerViewMBean proxy = (BrokerViewMBean) broker.getManagementContext().newProxyInstance(brokerObjectName,
1:c2eb486:                 BrokerViewMBean.class, true);
1:c2eb486: 
1:c2eb486:         assertNotNull("We could not retrieve the broker from JMX", proxy);
1:c2eb486: 
1:c2eb486:         // let's add the NC
1:c2eb486:         String connectoName = proxy.addNetworkConnector("static:(tcp://localhost:61617)");
1:c2eb486:         assertEquals("NC", connectoName);
1:c2eb486: 
1:c2eb486:         // Make sure we can retrieve the NC through JMX
1:c2eb486:         ObjectName networkConnectorObjectName = new ObjectName("org.apache.activemq:type=Broker,brokerName=" + BROKER_NAME +
1:c2eb486:                 ",connector=networkConnectors,networkConnectorName=" + connectoName);
1:c2eb486:         NetworkConnectorViewMBean nc  = (NetworkConnectorViewMBean) broker.getManagementContext().newProxyInstance(networkConnectorObjectName,
1:c2eb486:                 NetworkConnectorViewMBean.class, true);
1:c2eb486: 
1:c2eb486:         assertNotNull(nc);
1:c2eb486:         assertEquals("NC", nc.getName());
1:c2eb486:     }
1:c2eb486: }
============================================================================
author:Christian Posta
-------------------------------------------------------------------------------
commit:c2eb486
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.jmx;
1: 
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.jmx.BrokerViewMBean;
1: import org.apache.activemq.broker.jmx.NetworkConnectorViewMBean;
1: import org.junit.Test;
1: 
1: import javax.management.ObjectName;
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertNotNull;
1: 
1: /**
1:  * This test shows that when we create a network connector via JMX,
1:  * the NC/bridge shows up in the MBean Server
1:  *
1:  * @author <a href="http://www.christianposta.com/blog">Christian Posta</a>
1:  */
1: public class JmxCreateNCTest {
1: 
1:     private static final String BROKER_NAME = "jmx-broker";
1: 
1:     @Test
1:     public void testBridgeRegistration() throws Exception {
1:         BrokerService broker = new BrokerService();
1:         broker.setBrokerName(BROKER_NAME);
1:         broker.setUseJmx(true); // explicitly set this so no funny issues
1:         broker.start();
1:         broker.waitUntilStarted();
1: 
1:         // now create network connector over JMX
1:         ObjectName brokerObjectName = new ObjectName("org.apache.activemq:type=Broker,brokerName=" + BROKER_NAME);
1:         BrokerViewMBean proxy = (BrokerViewMBean) broker.getManagementContext().newProxyInstance(brokerObjectName,
1:                 BrokerViewMBean.class, true);
1: 
1:         assertNotNull("We could not retrieve the broker from JMX", proxy);
1: 
1:         // let's add the NC
1:         String connectoName = proxy.addNetworkConnector("static:(tcp://localhost:61617)");
1:         assertEquals("NC", connectoName);
1: 
1:         // Make sure we can retrieve the NC through JMX
1:         ObjectName networkConnectorObjectName = new ObjectName("org.apache.activemq:type=Broker,brokerName=" + BROKER_NAME +
1:                 ",connector=networkConnectors,networkConnectorName=" + connectoName);
1:         NetworkConnectorViewMBean nc  = (NetworkConnectorViewMBean) broker.getManagementContext().newProxyInstance(networkConnectorObjectName,
1:                 NetworkConnectorViewMBean.class, true);
1: 
1:         assertNotNull(nc);
1:         assertEquals("NC", nc.getName());
1:     }
1: }
============================================================================