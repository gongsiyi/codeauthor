1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.pool;
5:d29ca2a: 
1:d29ca2a: import javax.jms.Connection;
1:d29ca2a: 
1:230a86c: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1:dea0588: import org.junit.Ignore;
1:dea0588: import org.junit.Test;
1:dea0588: import org.slf4j.Logger;
1:dea0588: import org.slf4j.LoggerFactory;
1:230a86c: 
1:d29ca2a: /**
1:0bbc0ac:  * 
1:d29ca2a:  */
1:d29ca2a: public class JmsSendReceiveTwoConnectionsWithSenderUsingPoolTest extends JmsTopicSendReceiveWithTwoConnectionsTest {
1:dea0588:     protected static final Logger LOG = LoggerFactory.getLogger(JmsSendReceiveTwoConnectionsWithSenderUsingPoolTest.class);
1:d29ca2a:     protected PooledConnectionFactory senderConnectionFactory = new PooledConnectionFactory("vm://localhost?broker.persistent=false");
1:d29ca2a: 
1:d29ca2a:     protected Connection createSendConnection() throws Exception {
1:d29ca2a:         return senderConnectionFactory.createConnection();
2:d29ca2a:     }
1:dea0588: 
1:d29ca2a:     protected void setUp() throws Exception {
1:d29ca2a:         verbose = true;
1:d29ca2a:         super.setUp();
1:dea0588:     }
1:d29ca2a: 
1:d29ca2a:     protected void tearDown() throws Exception {
1:d29ca2a:         super.tearDown();
1:d29ca2a:         senderConnectionFactory.stop();
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:gtully
-------------------------------------------------------------------------------
commit:95d20e5
/////////////////////////////////////////////////////////////////////////
author:Kevin Earls
-------------------------------------------------------------------------------
commit:dea0588
/////////////////////////////////////////////////////////////////////////
1: import org.junit.Ignore;
1: import org.junit.Test;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     protected static final Logger LOG = LoggerFactory.getLogger(JmsSendReceiveTwoConnectionsWithSenderUsingPoolTest.class);
/////////////////////////////////////////////////////////////////////////
0:     @Override   // TODO remove this method when AMQ-4991 is fixed
0:     @Ignore("See AMQ-4991") // Ignore doesn't really work here with JUnit3 runner, just adding as documentation
0:     public void testSendReceive() throws Exception {
0:         //super.testSendReceive();
1:     }
1: 
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:bfbe90b
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1: 
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.pool;
1: 
0: import org.apache.activemq.pool.PooledConnectionFactory;
0: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1: 
1: import javax.jms.Connection;
1: 
1: /**
0:  * @version $Revision$
1:  */
1: public class JmsSendReceiveTwoConnectionsWithSenderUsingPoolTest extends JmsTopicSendReceiveWithTwoConnectionsTest {
1: 
1:     protected PooledConnectionFactory senderConnectionFactory = new PooledConnectionFactory("vm://localhost?broker.persistent=false");
1: 
1:     protected Connection createSendConnection() throws Exception {
1:         return senderConnectionFactory.createConnection();
1:     }
1: 
1:     protected void setUp() throws Exception {
1:         verbose = true;
1:         super.setUp();
1:     }
1: 
1:     protected void tearDown() throws Exception {
1:         super.tearDown();
1:         senderConnectionFactory.stop();
1:     }
1: 
1: }
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:2e57fb5
============================================================================