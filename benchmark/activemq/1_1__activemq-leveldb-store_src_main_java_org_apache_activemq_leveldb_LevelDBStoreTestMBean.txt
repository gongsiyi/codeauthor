1:ebafd5c: /**
1:ebafd5c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:ebafd5c:  * contributor license agreements.  See the NOTICE file distributed with
1:ebafd5c:  * this work for additional information regarding copyright ownership.
1:ebafd5c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:ebafd5c:  * (the "License"); you may not use this file except in compliance with
1:ebafd5c:  * the License.  You may obtain a copy of the License at
1:ebafd5c:  *
1:ebafd5c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:ebafd5c:  *
1:ebafd5c:  * Unless required by applicable law or agreed to in writing, software
1:ebafd5c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:ebafd5c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ebafd5c:  * See the License for the specific language governing permissions and
1:ebafd5c:  * limitations under the License.
1:ebafd5c:  */
1:ebafd5c: 
1:ebafd5c: package org.apache.activemq.leveldb;
1:ebafd5c: 
1:ebafd5c: import org.apache.activemq.broker.jmx.MBeanInfo;
1:ebafd5c: 
1:ebafd5c: /**
1:ebafd5c:  * <p>
1:ebafd5c:  * </p>
1:ebafd5c:  *
1:ebafd5c:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:ebafd5c:  */
1:ebafd5c: public interface LevelDBStoreTestMBean {
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Used to set if the log force calls should be suspended")
1:ebafd5c:     void setSuspendForce(boolean value);
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Gets if the log force calls should be suspended")
1:ebafd5c:     boolean getSuspendForce();
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Gets the number of threads waiting to do a log force call.")
1:ebafd5c:     long getForceCalls();
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Used to set if the log write calls should be suspended")
1:ebafd5c:     void setSuspendWrite(boolean value);
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Gets if the log write calls should be suspended")
1:ebafd5c:     boolean getSuspendWrite();
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Gets the number of threads waiting to do a log write call.")
1:ebafd5c:     long getWriteCalls();
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Used to set if the log delete calls should be suspended")
1:ebafd5c:     void setSuspendDelete(boolean value);
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Gets if the log delete calls should be suspended")
1:ebafd5c:     boolean getSuspendDelete();
1:ebafd5c: 
1:ebafd5c:     @MBeanInfo("Gets the number of threads waiting to do a log delete call.")
1:ebafd5c:     long getDeleteCalls();
1:ebafd5c: }
============================================================================
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:ebafd5c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.leveldb;
1: 
1: import org.apache.activemq.broker.jmx.MBeanInfo;
1: 
1: /**
1:  * <p>
1:  * </p>
1:  *
1:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:  */
1: public interface LevelDBStoreTestMBean {
1: 
1:     @MBeanInfo("Used to set if the log force calls should be suspended")
1:     void setSuspendForce(boolean value);
1: 
1:     @MBeanInfo("Gets if the log force calls should be suspended")
1:     boolean getSuspendForce();
1: 
1:     @MBeanInfo("Gets the number of threads waiting to do a log force call.")
1:     long getForceCalls();
1: 
1:     @MBeanInfo("Used to set if the log write calls should be suspended")
1:     void setSuspendWrite(boolean value);
1: 
1:     @MBeanInfo("Gets if the log write calls should be suspended")
1:     boolean getSuspendWrite();
1: 
1:     @MBeanInfo("Gets the number of threads waiting to do a log write call.")
1:     long getWriteCalls();
1: 
1:     @MBeanInfo("Used to set if the log delete calls should be suspended")
1:     void setSuspendDelete(boolean value);
1: 
1:     @MBeanInfo("Gets if the log delete calls should be suspended")
1:     boolean getSuspendDelete();
1: 
1:     @MBeanInfo("Gets the number of threads waiting to do a log delete call.")
1:     long getDeleteCalls();
1: }
============================================================================