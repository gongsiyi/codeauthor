1:5be5a62: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:5be5a62:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5be5a62:  *
1:40a7d3b:  * Unless required by applicable law or agreed to in writing, software
1:5be5a62:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5be5a62:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5be5a62:  * See the License for the specific language governing permissions and
1:5be5a62:  * limitations under the License.
1:5be5a62:  */
1:8abcfd1: package org.apache.activemq.transport.http;
2:40a7d3b: 
1:8abcfd1: import org.apache.activemq.ActiveMQConnectionFactory;
1:8abcfd1: import org.apache.activemq.broker.BrokerService;
1:8abcfd1: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1:40a7d3b: 
2:40a7d3b: /**
1:b0c2a40:  * 
1:40a7d3b:  */
1:40a7d3b: public class HttpJmsSendAndReceiveTest extends JmsTopicSendReceiveWithTwoConnectionsTest {
1:40a7d3b:     protected BrokerService broker;
1:40a7d3b: 
1:40a7d3b:     protected void setUp() throws Exception {
1:40a7d3b:         if (broker == null) {
1:40a7d3b:             broker = createBroker();
1:40a7d3b:             broker.start();
1:40a7d3b:         }
1:40a7d3b:         super.setUp();
1:a21226c:         WaitForJettyListener.waitForJettySocketToAccept(getBrokerURL());
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     protected void tearDown() throws Exception {
1:40a7d3b:         super.tearDown();
1:40a7d3b:         if (broker != null) {
1:40a7d3b:             broker.stop();
1:40a7d3b:         }
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     protected ActiveMQConnectionFactory createConnectionFactory() {
1:40a7d3b:         ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(getBrokerURL());
1:40a7d3b:         return connectionFactory;
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     protected String getBrokerURL() {
1:40a7d3b:         return "http://localhost:8161";
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b:     protected BrokerService createBroker() throws Exception {
1:40a7d3b:         BrokerService answer = new BrokerService();
1:40a7d3b:         answer.setPersistent(false);
1:40a7d3b:         answer.addConnector(getBrokerURL());
1:40a7d3b:         return answer;
1:40a7d3b:     }
1:40a7d3b: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:8abcfd1
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport.http;
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
author:Gary Tully
-------------------------------------------------------------------------------
commit:a21226c
/////////////////////////////////////////////////////////////////////////
1:         WaitForJettyListener.waitForJettySocketToAccept(getBrokerURL());
author:James Strachan
-------------------------------------------------------------------------------
commit:40a7d3b
/////////////////////////////////////////////////////////////////////////
1: /** 
0:  * 
0:  * Copyright 2004 Protique Ltd
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
0:  * 
0:  **/
1: 
0: package org.activemq.transport.http;
1: 
0: import org.activemq.ActiveMQConnectionFactory;
0: import org.activemq.broker.BrokerService;
0: import org.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1: 
1: /**
0:  * @version $Revision$
1:  */
1: public class HttpJmsSendAndReceiveTest extends JmsTopicSendReceiveWithTwoConnectionsTest {
1:     protected BrokerService broker;
1: 
1:     protected void setUp() throws Exception {
1:         if (broker == null) {
1:             broker = createBroker();
1:             broker.start();
1:         }
1:         super.setUp();
1:     }
1: 
1:     protected void tearDown() throws Exception {
1:         super.tearDown();
1:         if (broker != null) {
1:             broker.stop();
1:         }
1:     }
1: 
1:     protected ActiveMQConnectionFactory createConnectionFactory() {
1:         ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(getBrokerURL());
1:         return connectionFactory;
1:     }
1: 
1:     protected String getBrokerURL() {
1:         return "http://localhost:8161";
1:     }
1: 
1:     protected BrokerService createBroker() throws Exception {
1:         BrokerService answer = new BrokerService();
1:         answer.setPersistent(false);
1:         answer.addConnector(getBrokerURL());
1:         return answer;
1:     }
1: }
============================================================================