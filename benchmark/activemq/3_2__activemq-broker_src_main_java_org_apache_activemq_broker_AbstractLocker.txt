1:6ce702d: /**
1:6ce702d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6ce702d:  * contributor license agreements.  See the NOTICE file distributed with
1:6ce702d:  * this work for additional information regarding copyright ownership.
1:6ce702d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6ce702d:  * (the "License"); you may not use this file except in compliance with
1:6ce702d:  * the License.  You may obtain a copy of the License at
1:6ce702d:  *
1:6ce702d:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6ce702d:  *
1:6ce702d:  * Unless required by applicable law or agreed to in writing, software
1:6ce702d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6ce702d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6ce702d:  * See the License for the specific language governing permissions and
1:6ce702d:  * limitations under the License.
1:6ce702d:  */
1:6ce702d: package org.apache.activemq.broker;
1:6ce702d: 
1:6ce702d: import org.apache.activemq.util.ServiceSupport;
1:6ce702d: 
1:6ce702d: import java.io.IOException;
1:6ce702d: 
1:6ce702d: public abstract class AbstractLocker extends ServiceSupport implements Locker {
1:6ce702d: 
1:6ce702d:     public static final long DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL = 10 * 1000;
1:6ce702d: 
1:6ce702d:     protected String name;
1:6ce702d:     protected boolean failIfLocked = false;
1:6ce702d:     protected long lockAcquireSleepInterval = DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL;
1:efaa351:     protected LockableServiceSupport lockable;
1:6ce702d: 
1:6ce702d:     @Override
1:6ce702d:     public boolean keepAlive() throws IOException {
1:170b86a:         return true;
1:6ce702d:     }
1:6ce702d: 
1:6ce702d:     @Override
1:6ce702d:     public void setLockAcquireSleepInterval(long lockAcquireSleepInterval) {
1:6ce702d:         this.lockAcquireSleepInterval = lockAcquireSleepInterval;
1:6ce702d:     }
1:6ce702d: 
1:efaa351:     public long getLockAcquireSleepInterval() {
1:efaa351:         return lockAcquireSleepInterval;
1:efaa351:     }
1:efaa351: 
1:6ce702d:     @Override
1:6ce702d:     public void setName(String name) {
1:6ce702d:         this.name = name;
1:6ce702d:     }
1:6ce702d: 
1:6ce702d:     @Override
1:6ce702d:     public void setFailIfLocked(boolean failIfLocked) {
1:6ce702d:         this.failIfLocked = failIfLocked;
1:6ce702d:     }
1:efaa351: 
1:efaa351:     @Override
1:efaa351:     public void setLockable(LockableServiceSupport lockableServiceSupport) {
1:efaa351:         this.lockable = lockableServiceSupport;
1:efaa351:     }
1:6ce702d: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:efaa351
/////////////////////////////////////////////////////////////////////////
1:     protected LockableServiceSupport lockable;
/////////////////////////////////////////////////////////////////////////
1:     public long getLockAcquireSleepInterval() {
1:         return lockAcquireSleepInterval;
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public void setLockable(LockableServiceSupport lockableServiceSupport) {
1:         this.lockable = lockableServiceSupport;
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:9a8f6e4
/////////////////////////////////////////////////////////////////////////
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:170b86a
/////////////////////////////////////////////////////////////////////////
1:         return true;
commit:6ce702d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker;
1: 
0: import org.apache.activemq.broker.Locker;
1: import org.apache.activemq.util.ServiceSupport;
1: 
1: import java.io.IOException;
1: 
1: public abstract class AbstractLocker extends ServiceSupport implements Locker {
1: 
1:     public static final long DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL = 10 * 1000;
1: 
1:     protected String name;
1:     protected boolean failIfLocked = false;
1:     protected long lockAcquireSleepInterval = DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL;
1: 
1:     @Override
1:     public boolean keepAlive() throws IOException {
0:         return false;
1:     }
1: 
1:     @Override
1:     public void setLockAcquireSleepInterval(long lockAcquireSleepInterval) {
1:         this.lockAcquireSleepInterval = lockAcquireSleepInterval;
1:     }
1: 
1:     @Override
1:     public void setName(String name) {
1:         this.name = name;
1:     }
1: 
1:     @Override
1:     public void setFailIfLocked(boolean failIfLocked) {
1:         this.failIfLocked = failIfLocked;
1:     }
1: }
============================================================================