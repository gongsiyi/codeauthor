1:1005fc5: /**
1:1005fc5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1005fc5:  * contributor license agreements.  See the NOTICE file distributed with
1:1005fc5:  * this work for additional information regarding copyright ownership.
1:1005fc5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1005fc5:  * (the "License"); you may not use this file except in compliance with
1:1005fc5:  * the License.  You may obtain a copy of the License at
1:1005fc5:  *
1:1005fc5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1005fc5:  *
1:1005fc5:  * Unless required by applicable law or agreed to in writing, software
1:1005fc5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1005fc5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1005fc5:  * See the License for the specific language governing permissions and
1:1005fc5:  * limitations under the License.
1:1005fc5:  */
1:1005fc5: package org.apache.activemq.usecases;
1:1005fc5: 
1:1005fc5: import javax.jms.Destination;
1:1005fc5: import javax.jms.Session;
1:1005fc5: import org.apache.activemq.broker.BrokerService;
1:1005fc5: import org.apache.activemq.broker.region.policy.PolicyEntry;
1:1005fc5: import org.apache.activemq.broker.region.policy.PolicyMap;
1:1005fc5: 
1:1005fc5: public class TempTopicProducerFlowControlTest extends TopicProducerFlowControlTest {
1:1005fc5: 
1:1005fc5:     @Override
1:1005fc5:     protected void setDestinationPolicy(BrokerService broker, PolicyMap pm) {
1:1005fc5:         PolicyEntry tpe = new PolicyEntry();
1:1005fc5:         tpe.setTempTopic(true);
1:1005fc5:         tpe.setMemoryLimit(destinationMemLimit);
1:1005fc5:         tpe.setProducerFlowControl(true);
1:1005fc5:         tpe.setAdvisoryWhenFull(true);
1:1005fc5:         pm.setDefaultEntry(tpe);
1:1005fc5: 
1:1005fc5:         broker.setDestinationPolicy(pm);
1:1005fc5:     }
1:1005fc5: 
1:1005fc5:     @Override
1:1005fc5:     protected Destination createDestination(Session session) throws Exception {
1:1005fc5:         return session.createTemporaryTopic();
1:1005fc5:     }
1:1005fc5: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:1005fc5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
1: import javax.jms.Destination;
1: import javax.jms.Session;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.region.policy.PolicyEntry;
1: import org.apache.activemq.broker.region.policy.PolicyMap;
1: 
1: public class TempTopicProducerFlowControlTest extends TopicProducerFlowControlTest {
1: 
1:     @Override
1:     protected void setDestinationPolicy(BrokerService broker, PolicyMap pm) {
1:         PolicyEntry tpe = new PolicyEntry();
1:         tpe.setTempTopic(true);
1:         tpe.setMemoryLimit(destinationMemLimit);
1:         tpe.setProducerFlowControl(true);
1:         tpe.setAdvisoryWhenFull(true);
1:         pm.setDefaultEntry(tpe);
1: 
1:         broker.setDestinationPolicy(pm);
1:     }
1: 
1:     @Override
1:     protected Destination createDestination(Session session) throws Exception {
1:         return session.createTemporaryTopic();
1:     }
1: }
============================================================================