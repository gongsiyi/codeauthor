1:c7c8e53: /**
1:c7c8e53:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c7c8e53:  * contributor license agreements.  See the NOTICE file distributed with
1:c7c8e53:  * this work for additional information regarding copyright ownership.
1:c7c8e53:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c7c8e53:  * (the "License"); you may not use this file except in compliance with
1:c7c8e53:  * the License.  You may obtain a copy of the License at
1:c7c8e53:  *
1:c7c8e53:  *      http://www.apache.org/licenses/LICENSE-2.0
1:c7c8e53:  *
1:c7c8e53:  * Unless required by applicable law or agreed to in writing, software
1:c7c8e53:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c7c8e53:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c7c8e53:  * See the License for the specific language governing permissions and
1:c7c8e53:  * limitations under the License.
1:c7c8e53:  */
1:c7c8e53: package org.apache.activemq.broker.scheduler;
5:c7c8e53: 
1:74846bb: /**
1:74846bb:  * Interface for a scheduled Job object.
1:74846bb:  *
1:74846bb:  * Each Job is identified by a unique Job Id which can be used to reference the Job
1:74846bb:  * in the Job Scheduler store for updates or removal.
1:74846bb:  */
1:c7c8e53: public interface Job {
1:c7c8e53: 
1:c7c8e53:     /**
1:c7c8e53:      * @return the jobId
1:c7c8e53:      */
1:c7c8e53:     public abstract String getJobId();
1:c7c8e53: 
1:c7c8e53:     /**
1:c7c8e53:      * @return the repeat
1:c7c8e53:      */
1:c7c8e53:     public abstract int getRepeat();
1:c7c8e53: 
1:c7c8e53:     /**
1:c7c8e53:      * @return the start
1:c7c8e53:      */
1:c7c8e53:     public abstract long getStart();
1:c7c8e53: 
1:c7c8e53:     /**
1:e3154c3:      * @return the Delay
1:e3154c3:      */
1:e3154c3:     public abstract long getDelay();
1:74846bb: 
1:e3154c3:     /**
1:c7c8e53:      * @return the period
1:c7c8e53:      */
1:c7c8e53:     public abstract long getPeriod();
1:74846bb: 
1:c7c8e53:     /**
1:c7c8e53:      * @return the cron entry
1:c7c8e53:      */
1:c7c8e53:     public abstract String getCronEntry();
1:c7c8e53: 
1:c7c8e53:     /**
1:c7c8e53:      * @return the payload
1:c7c8e53:      */
1:c7c8e53:     public abstract byte[] getPayload();
1:74846bb: 
1:c7c8e53:     /**
1:c7c8e53:      * Get the start time as a Date time string
1:c7c8e53:      * @return the date time
1:c7c8e53:      */
1:c7c8e53:     public String getStartTime();
1:74846bb: 
1:c7c8e53:     /**
1:74846bb:      * Get the time the job is next due to execute
1:c7c8e53:      * @return the date time
1:c7c8e53:      */
1:c7c8e53:     public String getNextExecutionTime();
1:c7c8e53: 
1:74846bb:     /**
1:74846bb:      * Gets the total number of times this job has executed.
1:74846bb:      *
1:74846bb:      * @returns the number of times this job has been executed.
1:74846bb:      */
1:74846bb:     public int getExecutionCount();
1:74846bb: 
1:c7c8e53: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:74846bb
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Interface for a scheduled Job object.
1:  *
1:  * Each Job is identified by a unique Job Id which can be used to reference the Job
1:  * in the Job Scheduler store for updates or removal.
1:  */
/////////////////////////////////////////////////////////////////////////
1: 
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:      * Get the time the job is next due to execute
1:     /**
1:      * Gets the total number of times this job has executed.
1:      *
1:      * @returns the number of times this job has been executed.
1:      */
1:     public int getExecutionCount();
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Robert Davies
-------------------------------------------------------------------------------
commit:e3154c3
/////////////////////////////////////////////////////////////////////////
1:      * @return the Delay
1:      */
1:     public abstract long getDelay();
1:     /**
commit:c7c8e53
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.scheduler;
1: 
1: 
1: public interface Job {
1: 
1:     /**
1:      * @return the jobId
1:      */
1:     public abstract String getJobId();
1: 
1:     /**
1:      * @return the repeat
1:      */
1:     public abstract int getRepeat();
1: 
1:     /**
1:      * @return the start
1:      */
1:     public abstract long getStart();
1: 
1:     /**
1:      * @return the period
1:      */
1:     public abstract long getPeriod();
1:     
1:     /**
1:      * @return the cron entry
1:      */
1:     public abstract String getCronEntry();
1: 
1:     /**
1:      * @return the payload
1:      */
1:     public abstract byte[] getPayload();
1:     
1:     /**
1:      * Get the start time as a Date time string
1:      * @return the date time
1:      */
1:     public String getStartTime();
1:     
1:     /**
0:      * Get the time the job is next due to execute 
1:      * @return the date time
1:      */
1:     public String getNextExecutionTime();
1: 
1: }
============================================================================