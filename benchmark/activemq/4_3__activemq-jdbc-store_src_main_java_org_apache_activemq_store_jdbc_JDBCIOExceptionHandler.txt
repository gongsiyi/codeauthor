1:dc258ab: /**
1:dc258ab:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:dc258ab:  * contributor license agreements.  See the NOTICE file distributed with
1:dc258ab:  * this work for additional information regarding copyright ownership.
1:dc258ab:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:dc258ab:  * (the "License"); you may not use this file except in compliance with
1:dc258ab:  * the License.  You may obtain a copy of the License at
1:dc258ab:  *
1:dc258ab:  *      http://www.apache.org/licenses/LICENSE-2.0
1:dc258ab:  *
1:dc258ab:  * Unless required by applicable law or agreed to in writing, software
1:dc258ab:  * distributed under the License is distributed on an "AS IS" BASIS,
1:dc258ab:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dc258ab:  * See the License for the specific language governing permissions and
1:dc258ab:  * limitations under the License.
1:dc258ab:  */
1:dc258ab: package org.apache.activemq.store.jdbc;
1:dc258ab: 
1:dc258ab: import java.io.IOException;
1:6ce702d: 
1:6ce702d: import org.apache.activemq.broker.Locker;
1:13bbe52: import org.apache.activemq.broker.SuppressReplyException;
1:dc258ab: import org.apache.activemq.util.DefaultIOExceptionHandler;
1:7d98b32: import org.slf4j.Logger;
1:7d98b32: import org.slf4j.LoggerFactory;
1:dc258ab: 
1:dc258ab: /**
1:dc258ab:  * @org.apache.xbean.XBean
1:dc258ab:  */
1:e16815a: /*
1:e16815a:  * @deprecated Use more general {@link org.apache.activemq.util.LeaseLockerIOExceptionHandler} instead
1:e16815a:  */
1:e16815a: @Deprecated
1:dc258ab: public class JDBCIOExceptionHandler extends DefaultIOExceptionHandler {
1:7d98b32:     private static final Logger LOG = LoggerFactory.getLogger(JDBCIOExceptionHandler.class);
1:dc258ab: 
1:dc258ab:     public JDBCIOExceptionHandler() {
1:dc258ab:         setIgnoreSQLExceptions(false);
1:dc258ab:         setStopStartConnectors(true);
1:dc258ab:     }
1:dc258ab: 
1:13bbe52:     // fail only when we get an authoritative answer from the db w/o exceptions
1:dc258ab:     @Override
1:dc258ab:     protected boolean hasLockOwnership() throws IOException {
1:dc258ab:         boolean hasLock = true;
1:dc258ab:         if (broker.getPersistenceAdapter() instanceof JDBCPersistenceAdapter) {
1:dc258ab:             JDBCPersistenceAdapter jdbcPersistenceAdapter = (JDBCPersistenceAdapter) broker.getPersistenceAdapter();
1:97f03d4:             Locker locker = jdbcPersistenceAdapter.getLocker();
1:dc258ab:             if (locker != null) {
1:dc258ab:                 try {
1:dc258ab:                     if (!locker.keepAlive()) {
1:dc258ab:                         hasLock = false;
1:dc258ab:                     }
1:13bbe52:                 } catch (SuppressReplyException ignoreWhileHandlingInProgress) {
1:dc258ab:                 } catch (IOException ignored) {
1:dc258ab:                 }
1:dc258ab: 
1:dc258ab:                 if (!hasLock) {
1:7d98b32:                     LOG.warn("Lock keepAlive failed, no longer lock owner with: {}", locker);
1:13bbe52:                     throw new IOException("Lock keepAlive failed, no longer lock owner with: " + locker);
1:dc258ab:                 }
1:dc258ab:             }
1:dc258ab:         }
1:dc258ab:         return hasLock;
1:dc258ab:     }
1:dc258ab: 
1:dc258ab: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:e16815a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * @deprecated Use more general {@link org.apache.activemq.util.LeaseLockerIOExceptionHandler} instead
1:  */
1: @Deprecated
commit:7d98b32
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(JDBCIOExceptionHandler.class);
/////////////////////////////////////////////////////////////////////////
1:                     LOG.warn("Lock keepAlive failed, no longer lock owner with: {}", locker);
author:Gary Tully
-------------------------------------------------------------------------------
commit:13bbe52
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.SuppressReplyException;
/////////////////////////////////////////////////////////////////////////
1:     // fail only when we get an authoritative answer from the db w/o exceptions
/////////////////////////////////////////////////////////////////////////
1:                 } catch (SuppressReplyException ignoreWhileHandlingInProgress) {
1:                     throw new IOException("Lock keepAlive failed, no longer lock owner with: " + locker);
commit:dc258ab
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.jdbc;
1: 
1: import java.io.IOException;
1: import org.apache.activemq.util.DefaultIOExceptionHandler;
1: 
1: /**
1:  * @org.apache.xbean.XBean
1:  */
1: public class JDBCIOExceptionHandler extends DefaultIOExceptionHandler {
1: 
1:     public JDBCIOExceptionHandler() {
1:         setIgnoreSQLExceptions(false);
1:         setStopStartConnectors(true);
1:     }
1: 
1:     @Override
1:     protected boolean hasLockOwnership() throws IOException {
1:         boolean hasLock = true;
1:         if (broker.getPersistenceAdapter() instanceof JDBCPersistenceAdapter) {
1:             JDBCPersistenceAdapter jdbcPersistenceAdapter = (JDBCPersistenceAdapter) broker.getPersistenceAdapter();
0:             DatabaseLocker locker = jdbcPersistenceAdapter.getDatabaseLocker();
1:             if (locker != null) {
1:                 try {
1:                     if (!locker.keepAlive()) {
1:                         hasLock = false;
1:                     }
1:                 } catch (IOException ignored) {
1:                 }
1: 
1:                 if (!hasLock) {
0:                     throw new IOException("PersistenceAdapter lock no longer valid using: " + locker);
1:                 }
1:             }
1:         }
1:         return hasLock;
1:     }
1: 
1: }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:97f03d4
/////////////////////////////////////////////////////////////////////////
1:             Locker locker = jdbcPersistenceAdapter.getLocker();
commit:6ce702d
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.apache.activemq.broker.Locker;
/////////////////////////////////////////////////////////////////////////
0:             Locker locker = jdbcPersistenceAdapter.getDatabaseLocker();
============================================================================