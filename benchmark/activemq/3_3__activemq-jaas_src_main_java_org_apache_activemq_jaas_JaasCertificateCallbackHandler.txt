1:1a88ac6: /**
1:1a88ac6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1a88ac6:  * contributor license agreements.  See the NOTICE file distributed with
1:1a88ac6:  * this work for additional information regarding copyright ownership.
1:1a88ac6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1a88ac6:  * (the "License"); you may not use this file except in compliance with
1:1a88ac6:  * the License.  You may obtain a copy of the License at
7:1a88ac6:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1a88ac6:  *
1:1a88ac6:  * Unless required by applicable law or agreed to in writing, software
1:1a88ac6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1a88ac6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1a88ac6:  * See the License for the specific language governing permissions and
1:1a88ac6:  * limitations under the License.
1:1a88ac6:  */
7:1a88ac6: 
1:1a88ac6: package org.apache.activemq.jaas;
1:1a88ac6: 
1:1a88ac6: import java.io.IOException;
1:1a88ac6: import java.security.cert.X509Certificate;
1:1a88ac6: 
1:540dd5c: import javax.security.auth.callback.Callback;
1:540dd5c: import javax.security.auth.callback.CallbackHandler;
1:540dd5c: import javax.security.auth.callback.UnsupportedCallbackException;
1:540dd5c: 
1:1a88ac6: /**
1:540dd5c:  * A Standard JAAS callback handler for SSL certificate requests. Will only
1:540dd5c:  * handle callbacks of type CertificateCallback.
1:e917f46:  *
1:1a88ac6:  * @author sepandm@gmail.com (Sepand)
1:1a88ac6:  */
1:1a88ac6: public class JaasCertificateCallbackHandler implements CallbackHandler {
1:1a88ac6:     final X509Certificate certificates[];
1:540dd5c: 
1:1a88ac6:     /**
1:1a88ac6:      * Basic constructor.
1:e917f46:      *
1:e917f46:      * @param certs The certificate returned when calling back.
1:1a88ac6:      */
1:1a88ac6:     public JaasCertificateCallbackHandler(X509Certificate certs[]) {
1:1a88ac6:         certificates = certs;
1:1a88ac6:     }
1:540dd5c: 
1:1a88ac6:     /**
1:1a88ac6:      * Overriding handle method to handle certificates.
1:e917f46:      *
1:1a88ac6:      * @param callbacks The callbacks requested.
1:1a88ac6:      * @throws IOException
1:540dd5c:      * @throws UnsupportedCallbackException Thrown if an unkown Callback type is
1:540dd5c:      *                 encountered.
1:1a88ac6:      */
1:1667d80:     @Override
1:1a88ac6:     public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
1:1a88ac6:         for (int i = 0; i < callbacks.length; i++) {
1:1a88ac6:             Callback callback = callbacks[i];
1:1a88ac6:             if (callback instanceof CertificateCallback) {
1:540dd5c:                 CertificateCallback certCallback = (CertificateCallback)callback;
1:540dd5c: 
1:1a88ac6:                 certCallback.setCertificates(certificates);
1:540dd5c: 
1:1a88ac6:             } else {
1:1a88ac6:                 throw new UnsupportedCallbackException(callback);
1:1a88ac6:             }
1:1a88ac6:         }
1:1a88ac6:     }
1:1a88ac6: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:e917f46
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:      *
1:      * @param certs The certificate returned when calling back.
/////////////////////////////////////////////////////////////////////////
1:      *
author:Gary Tully
-------------------------------------------------------------------------------
commit:1667d80
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import javax.security.auth.callback.Callback;
1: import javax.security.auth.callback.CallbackHandler;
1: import javax.security.auth.callback.UnsupportedCallbackException;
1: 
1:  * A Standard JAAS callback handler for SSL certificate requests. Will only
1:  * handle callbacks of type CertificateCallback.
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:      * @throws UnsupportedCallbackException Thrown if an unkown Callback type is
1:      *                 encountered.
1:                 CertificateCallback certCallback = (CertificateCallback)callback;
1: 
1: 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:1a88ac6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.jaas;
1: 
1: 
0: import javax.security.auth.callback.Callback;
0: import javax.security.auth.callback.CallbackHandler;
0: import javax.security.auth.callback.NameCallback;
0: import javax.security.auth.callback.PasswordCallback;
0: import javax.security.auth.callback.UnsupportedCallbackException;
1: 
1: import java.io.IOException;
1: import java.security.cert.X509Certificate;
1: 
1: /**
0:  * A Standard JAAS callback handler for SSL certificate requests.
1:  * 
0:  * Will only handle callbacks of type CertificateCallback.
1:  * 
1:  * @author sepandm@gmail.com (Sepand)
1:  *
1:  */
1: public class JaasCertificateCallbackHandler implements CallbackHandler {
1:     final X509Certificate certificates[];
1:     
1:     /**
1:      * Basic constructor.
1:      * 
0:      * @param cert The certificate returned when calling back.
1:      */
1:     public JaasCertificateCallbackHandler(X509Certificate certs[]) {
1:         certificates = certs;
1:     }
1:     
1:     /**
1:      * Overriding handle method to handle certificates.
1:      * 
1:      * @param callbacks The callbacks requested.
1:      * @throws IOException
0:      * @throws UnsupportedCallbackException Thrown if an unkown Callback type is encountered.
1:      */
1:     public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
1:         for (int i = 0; i < callbacks.length; i++) {
1:             Callback callback = callbacks[i];
1:             if (callback instanceof CertificateCallback) {
0:                 CertificateCallback certCallback = (CertificateCallback) callback;
1:                 
1:                 certCallback.setCertificates(certificates);
1:                 
1:             } else {
1:                 throw new UnsupportedCallbackException(callback);
1:             }
1:         }
1:     }
1: }
============================================================================