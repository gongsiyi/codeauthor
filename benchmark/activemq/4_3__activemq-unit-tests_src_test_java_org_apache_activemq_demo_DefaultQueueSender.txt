1:d84e052: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d84e052:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d84e052:  *
1:d84e052:  * Unless required by applicable law or agreed to in writing, software
1:d84e052:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d84e052:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d84e052:  * See the License for the specific language governing permissions and
1:d84e052:  * limitations under the License.
1:d84e052:  */
1:d84e052: 
1:d84e052: /**
1:d84e052:  * The SimpleQueueSender class consists only of a main method,
1:d84e052:  * which sends several messages to a queue.
1:d84e052:  *
1:d84e052:  * Run this program in conjunction with SimpleQueueReceiver.
1:d84e052:  * Specify a queue name on the command line when you run the
1:d84e052:  * program.  By default, the program sends one message.  Specify
1:d84e052:  * a number after the queue name to send that number of messages.
1:d84e052:  */
1:d84e052: package org.apache.activemq.demo;
1:d84e052: 
1:d84e052: // START SNIPPET: demo
1:d84e052: 
1:74a7a8b: import javax.jms.Connection;
1:74a7a8b: import javax.jms.ConnectionFactory;
1:74a7a8b: import javax.jms.Destination;
1:74a7a8b: import javax.jms.JMSException;
1:74a7a8b: import javax.jms.Message;
1:74a7a8b: import javax.jms.MessageProducer;
1:74a7a8b: import javax.jms.Session;
1:d84e052: 
1:74a7a8b: import org.apache.activemq.ActiveMQConnectionFactory;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:d84e052: 
1:d84e052: /**
1:d84e052:  * A simple queue sender which does not use JNDI
1:b0c2a40:  * 
1:d84e052:  * 
1:d84e052:  */
1:933eb2f: public final class DefaultQueueSender {
1:933eb2f: 
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(DefaultQueueSender.class);
1:d84e052: 
1:933eb2f:     private DefaultQueueSender() {    
1:933eb2f:     }
1:d84e052: 
1:d84e052:     public static void main(String[] args) {
1:d84e052: 
1:d84e052:         String uri = "tcp://localhost:61616";
1:d84e052:         String text = "Hello World!";
1:d84e052: 
1:d84e052:         Connection connection = null;
1:d84e052: 
1:74a7a8b:         if (args.length < 1) {
1:d84e052:             printUsage();
1:d84e052:             System.exit(1);
4:d84e052:         }
1:d84e052: 
1:d84e052:         int idx = 0;
1:d84e052:         String arg = args[0];
1:d84e052:         if (arg.equals("-uri")) {
1:d84e052:             if (args.length == 1) {
1:d84e052:                 printUsage();
1:d84e052:                 System.exit(1);
1:d84e052:             }
1:d84e052:             uri = args[1];
1:d84e052:             idx += 2;
1:d84e052:         }
1:d84e052:         String queueName = args[idx];
1:fc00993:         LOG.info("Connecting to: " + uri);
1:fc00993:         LOG.info("Queue name is " + queueName);
1:d84e052: 
1:d84e052:         if (++idx < args.length) {
1:d84e052:             text = args[idx];
1:d84e052:         }
1:d84e052: 
1:d84e052:         try {
1:d84e052:             ConnectionFactory factory = new ActiveMQConnectionFactory(uri);
1:d84e052:             connection = factory.createConnection();
1:d84e052:             Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:d84e052:             Destination destination = session.createQueue(queueName);
1:d84e052:             MessageProducer producer = session.createProducer(destination);
1:d84e052: 
1:d84e052:             Message message = session.createTextMessage(text);
1:d84e052:             producer.send(message);
1:74a7a8b:         } catch (JMSException e) {
1:fc00993:             LOG.info("Exception occurred: " + e.toString());
1:74a7a8b:         } finally {
1:d84e052:             if (connection != null) {
1:d84e052:                 try {
1:d84e052:                     connection.close();
1:74a7a8b:                 } catch (JMSException e) {
1:d84e052:                 }
1:d84e052:             }
1:d84e052:         }
1:d84e052:     }
1:d84e052: 
1:d84e052:     protected static void printUsage() {
1:d84e052:         System.out.println("Usage: java DefaultQueueSender [-uri <connection-uri>] " + "<queue-name> [<message-body>]");
1:d84e052:     }
1:d84e052: }
1:d84e052: 
1:d84e052: // END SNIPPET: demo
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: public final class DefaultQueueSender {
0:     private static final Log LOG = LogFactory.getLog(DefaultQueueSender.class);
1: 
1:     private DefaultQueueSender() {    
1:     }
/////////////////////////////////////////////////////////////////////////
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0:     private static final org.apache.commons.logging.Log LOG = org.apache.commons.logging.LogFactory.getLog(DefaultQueueSender.class);
/////////////////////////////////////////////////////////////////////////
1:         LOG.info("Connecting to: " + uri);
1:         LOG.info("Queue name is " + queueName);
/////////////////////////////////////////////////////////////////////////
1:             LOG.info("Exception occurred: " + e.toString());
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.Connection;
1: import javax.jms.ConnectionFactory;
1: import javax.jms.Destination;
1: import javax.jms.JMSException;
1: import javax.jms.Message;
1: import javax.jms.MessageProducer;
0: import javax.jms.QueueSession;
1: import javax.jms.Session;
1: import org.apache.activemq.ActiveMQConnectionFactory;
/////////////////////////////////////////////////////////////////////////
0:     private static final org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory.getLog(DefaultQueueSender.class);
/////////////////////////////////////////////////////////////////////////
1:         if (args.length < 1) {
/////////////////////////////////////////////////////////////////////////
1:         } catch (JMSException e) {
1:         } finally {
1:                 } catch (JMSException e) {
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:93dc39b
/////////////////////////////////////////////////////////////////////////
0:         log.info("Connecting to: " + uri);
0:         log.info("Queue name is " + queueName);
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static final Logger LOG = LoggerFactory.getLogger(DefaultQueueSender.class);
author:James Strachan
-------------------------------------------------------------------------------
commit:d84e052
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: /**
1:  * The SimpleQueueSender class consists only of a main method,
1:  * which sends several messages to a queue.
1:  *
1:  * Run this program in conjunction with SimpleQueueReceiver.
1:  * Specify a queue name on the command line when you run the
1:  * program.  By default, the program sends one message.  Specify
1:  * a number after the queue name to send that number of messages.
1:  */
1: package org.apache.activemq.demo;
1: 
1: // START SNIPPET: demo
1: 
0: import org.apache.activemq.ActiveMQConnectionFactory;
1: 
0: import javax.jms.*;
0: import javax.naming.Context;
0: import javax.naming.InitialContext;
0: import javax.naming.NamingException;
1: 
1: /**
1:  * A simple queue sender which does not use JNDI
1:  * 
0:  * @version $Revision: 1.1 $
1:  */
0: public class DefaultQueueSender {
1: 
0:     private static final org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory
0:             .getLog(DefaultQueueSender.class);
1: 
1:     public static void main(String[] args) {
1: 
1:         String uri = "tcp://localhost:61616";
1:         String text = "Hello World!";
1: 
1:         Connection connection = null;
0:         QueueSession queueSession = null;
1: 
0:         if ((args.length < 1)) {
1:             printUsage();
1:             System.exit(1);
1:         }
1: 
1:         int idx = 0;
1:         String arg = args[0];
1:         if (arg.equals("-uri")) {
1:             if (args.length == 1) {
1:                 printUsage();
1:                 System.exit(1);
1:             }
1:             uri = args[1];
1:             idx += 2;
1:         }
1:         String queueName = args[idx];
0:         System.out.println("Connecting to: " + uri);
0:         System.out.println("Queue name is " + queueName);
1: 
1:         if (++idx < args.length) {
1:             text = args[idx];
1:         }
1: 
1:         try {
1:             ConnectionFactory factory = new ActiveMQConnectionFactory(uri);
1:             connection = factory.createConnection();
1:             Session session = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:             Destination destination = session.createQueue(queueName);
1:             MessageProducer producer = session.createProducer(destination);
1: 
1:             Message message = session.createTextMessage(text);
1:             producer.send(message);
1:         }
0:         catch (JMSException e) {
0:             log.info("Exception occurred: " + e.toString());
1:         }
0:         finally {
1:             if (connection != null) {
1:                 try {
1:                     connection.close();
1:                 }
0:                 catch (JMSException e) {
1:                 }
1:             }
1:         }
1:     }
1: 
1:     protected static void printUsage() {
1:         System.out.println("Usage: java DefaultQueueSender [-uri <connection-uri>] " + "<queue-name> [<message-body>]");
1:     }
1: }
1: 
1: // END SNIPPET: demo
============================================================================