1:8d589ec: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:8d589ec:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8d589ec:  *
1:8d589ec:  * Unless required by applicable law or agreed to in writing, software
1:8d589ec:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8d589ec:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8d589ec:  * See the License for the specific language governing permissions and
1:8d589ec:  * limitations under the License.
1:8d589ec:  */
1:8d589ec: package org.apache.activemq.transport.reliable;
1:8d589ec: 
1:8d589ec: import java.io.IOException;
1:8d589ec: 
1:8d589ec: /**
1:8d589ec:  * Used by a {@link ReplayBuffer} to replay buffers back over an unreliable transport
1:0bbc0ac:  * 
1:8d589ec:  * 
1:8d589ec:  */
1:8d589ec: public interface Replayer {
1:8d589ec: 
1:8d589ec:     /**
1:8d589ec:      * Sends the given buffer back to the transport
1:8d589ec:      * if the buffer could be found - otherwise maybe send some kind
1:8d589ec:      * of exception
1:8d589ec:      * 
1:8d589ec:      * @param commandId the command ID
1:8d589ec:      * @param buffer the buffer to be sent - or null if the buffer no longer exists in the buffer
1:8d589ec:      */
1:8d589ec:     void sendBuffer(int commandId, Object buffer) throws IOException;
1:8d589ec: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:8d589ec
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.reliable;
1: 
1: import java.io.IOException;
1: 
1: /**
1:  * Used by a {@link ReplayBuffer} to replay buffers back over an unreliable transport
1:  * 
0:  * @version $Revision$
1:  */
1: public interface Replayer {
1: 
1:     /**
1:      * Sends the given buffer back to the transport
1:      * if the buffer could be found - otherwise maybe send some kind
1:      * of exception
1:      * 
1:      * @param commandId the command ID
1:      * @param buffer the buffer to be sent - or null if the buffer no longer exists in the buffer
1:      */
1:     void sendBuffer(int commandId, Object buffer) throws IOException;
1: }
============================================================================