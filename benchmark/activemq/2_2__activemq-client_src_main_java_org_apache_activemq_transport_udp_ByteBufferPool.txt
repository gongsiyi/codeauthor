1:eba4c9c: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:eba4c9c:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:eba4c9c:  *
1:eba4c9c:  * Unless required by applicable law or agreed to in writing, software
1:eba4c9c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:eba4c9c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:eba4c9c:  * See the License for the specific language governing permissions and
1:eba4c9c:  * limitations under the License.
1:eba4c9c:  */
1:eba4c9c: package org.apache.activemq.transport.udp;
2:eba4c9c: 
1:eba4c9c: import java.nio.ByteBuffer;
1:eba4c9c: 
1:74a7a8b: import org.apache.activemq.Service;
1:74a7a8b: 
1:eba4c9c: /**
1:eba4c9c:  * Represents a pool of {@link ByteBuffer} instances. 
1:eba4c9c:  * This strategy could just create new buffers for each call or
1:eba4c9c:  * it could pool them.
1:0bbc0ac:  * 
1:eba4c9c:  * 
1:eba4c9c:  */
1:eba4c9c: public interface ByteBufferPool extends Service {
1:eba4c9c: 
1:eba4c9c:     /**
1:eba4c9c:      * Extract a buffer from the pool.
1:eba4c9c:      */
1:eba4c9c:     ByteBuffer borrowBuffer();
1:eba4c9c: 
1:eba4c9c:     /**
1:eba4c9c:      * Returns the buffer to the pool or just discards it for a non-pool strategy
1:eba4c9c:      */
1:eba4c9c:     void returnBuffer(ByteBuffer buffer);
1:eba4c9c: 
1:eba4c9c:     /**
1:eba4c9c:      * Sets the default size of the buffers
1:eba4c9c:      */
1:eba4c9c:     void setDefaultSize(int defaultSize);
1:eba4c9c: 
1:eba4c9c: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.Service;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:eba4c9c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.udp;
1: 
0: import org.apache.activemq.Service;
1: 
1: import java.nio.ByteBuffer;
1: 
1: /**
1:  * Represents a pool of {@link ByteBuffer} instances. 
1:  * This strategy could just create new buffers for each call or
1:  * it could pool them.
1:  * 
0:  * @version $Revision$
1:  */
1: public interface ByteBufferPool extends Service {
1: 
1:     /**
1:      * Extract a buffer from the pool.
1:      */
1:     ByteBuffer borrowBuffer();
1: 
1:     /**
1:      * Returns the buffer to the pool or just discards it for a non-pool strategy
1:      */
1:     void returnBuffer(ByteBuffer buffer);
1: 
1:     /**
1:      * Sets the default size of the buffers
1:      */
1:     void setDefaultSize(int defaultSize);
1: 
1: }
============================================================================