1:a677c21: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a677c21:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a677c21:  *
1:a677c21:  * Unless required by applicable law or agreed to in writing, software
1:a677c21:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a677c21:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a677c21:  * See the License for the specific language governing permissions and
1:a677c21:  * limitations under the License.
1:a677c21:  */
1:a677c21: package org.apache.activemq.usecases;
2:a677c21: 
1:a677c21: import javax.jms.JMSException;
1:a677c21: 
1:a677c21: import org.apache.activemq.ActiveMQConnectionFactory;
1:a677c21: import org.apache.activemq.broker.BrokerService;
1:a677c21: import org.apache.activemq.broker.TransportConnector;
1:74a7a8b: import org.apache.activemq.xbean.BrokerFactoryBean;
1:a677c21: import org.springframework.core.io.ClassPathResource;
1:a677c21: 
1:a677c21: /**
1:b0c2a40:  * 
1:a677c21:  */
1:a677c21: public class TwoBrokerTopicSendReceiveUsingTcpTest extends TwoBrokerTopicSendReceiveTest {
1:a677c21:     private BrokerService receiverBroker;
1:a677c21:     private BrokerService senderBroker;
1:a677c21: 
1:a677c21:     protected void setUp() throws Exception {
1:a677c21:         BrokerFactoryBean brokerFactory;
1:a677c21: 
1:a677c21:         brokerFactory = new BrokerFactoryBean(new ClassPathResource("org/apache/activemq/usecases/receiver.xml"));
1:a677c21:         brokerFactory.afterPropertiesSet();
1:a677c21:         receiverBroker = brokerFactory.getBroker();
1:a677c21: 
1:a677c21:         brokerFactory = new BrokerFactoryBean(new ClassPathResource("org/apache/activemq/usecases/sender.xml"));
1:a677c21:         brokerFactory.afterPropertiesSet();
1:a677c21:         senderBroker = brokerFactory.getBroker();
1:a677c21: 
1:a677c21:         super.setUp();
1:a677c21:     }
1:a677c21: 
1:a677c21:     protected void tearDown() throws Exception {
1:a677c21:         super.tearDown();
1:a677c21: 
1:a677c21:         if (receiverBroker != null) {
1:a677c21:             receiverBroker.stop();
1:a677c21:         }
1:a677c21:         if (senderBroker != null) {
1:a677c21:             senderBroker.stop();
1:a677c21:         }
1:a677c21:     }
1:a677c21: 
1:a677c21:     
1:a677c21:     protected ActiveMQConnectionFactory createReceiverConnectionFactory() throws JMSException {
1:a677c21:         try {
1:a677c21:             ActiveMQConnectionFactory fac =  new ActiveMQConnectionFactory(((TransportConnector)receiverBroker.getTransportConnectors().get(0)).getConnectUri());
1:a677c21:             return fac;
1:a677c21:         } catch (Exception e) {
1:a677c21:             e.printStackTrace();
1:a677c21:             return null;
1:a677c21:         }
1:a677c21:     }
1:a677c21: 
1:a677c21:     protected ActiveMQConnectionFactory createSenderConnectionFactory() throws JMSException {
1:a677c21:         try {
1:a677c21:             ActiveMQConnectionFactory fac = new ActiveMQConnectionFactory(((TransportConnector)senderBroker.getTransportConnectors().get(0)).getConnectUri());
1:a677c21:             return fac;
1:a677c21:         } catch (Exception e) {
1:a677c21:             e.printStackTrace();
1:a677c21:             return null;
1:a677c21:         }
1:a677c21: 
1:a677c21:     }
1:a677c21: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.xbean.BrokerFactoryBean;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:2fe01ce
/////////////////////////////////////////////////////////////////////////
author:James Strachan
-------------------------------------------------------------------------------
commit:a677c21
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
1: import javax.jms.JMSException;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
0: import org.apache.activemq.xbean.BrokerFactoryBean;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.TransportConnector;
1: import org.springframework.core.io.ClassPathResource;
1: 
0: import java.io.IOException;
0: import java.net.URISyntaxException;
1: 
1: /**
0:  * @version $Revision: 1.1.1.1 $
1:  */
1: public class TwoBrokerTopicSendReceiveUsingTcpTest extends TwoBrokerTopicSendReceiveTest {
1:     private BrokerService receiverBroker;
1:     private BrokerService senderBroker;
1: 
1:     protected void setUp() throws Exception {
1:         BrokerFactoryBean brokerFactory;
1: 
1:         brokerFactory = new BrokerFactoryBean(new ClassPathResource("org/apache/activemq/usecases/receiver.xml"));
1:         brokerFactory.afterPropertiesSet();
1:         receiverBroker = brokerFactory.getBroker();
1: 
1:         brokerFactory = new BrokerFactoryBean(new ClassPathResource("org/apache/activemq/usecases/sender.xml"));
1:         brokerFactory.afterPropertiesSet();
1:         senderBroker = brokerFactory.getBroker();
1: 
1:         super.setUp();
0:         Thread.sleep(2000);
1:     }
1: 
1:     protected void tearDown() throws Exception {
1:         super.tearDown();
1: 
1:         if (receiverBroker != null) {
1:             receiverBroker.stop();
1:         }
1:         if (senderBroker != null) {
1:             senderBroker.stop();
1:         }
1:     }
1: 
1:     
1:     protected ActiveMQConnectionFactory createReceiverConnectionFactory() throws JMSException {
1:         try {
1:             ActiveMQConnectionFactory fac =  new ActiveMQConnectionFactory(((TransportConnector)receiverBroker.getTransportConnectors().get(0)).getConnectUri());
1:             return fac;
1:         } catch (Exception e) {
1:             e.printStackTrace();
1:             return null;
1:         }
1:     }
1: 
1:     protected ActiveMQConnectionFactory createSenderConnectionFactory() throws JMSException {
1:         try {
1:             ActiveMQConnectionFactory fac = new ActiveMQConnectionFactory(((TransportConnector)senderBroker.getTransportConnectors().get(0)).getConnectUri());
1:             return fac;
1:         } catch (Exception e) {
1:             e.printStackTrace();
1:             return null;
1:         }
1: 
1:     }
1: }
============================================================================