1:1a88ac6: /**
1:1a88ac6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1a88ac6:  * contributor license agreements.  See the NOTICE file distributed with
1:1a88ac6:  * this work for additional information regarding copyright ownership.
1:1a88ac6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1a88ac6:  * (the "License"); you may not use this file except in compliance with
1:1a88ac6:  * the License.  You may obtain a copy of the License at
2:1a88ac6:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1a88ac6:  *
1:1a88ac6:  * Unless required by applicable law or agreed to in writing, software
1:1a88ac6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1a88ac6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1a88ac6:  * See the License for the specific language governing permissions and
1:1a88ac6:  * limitations under the License.
1:1a88ac6:  */
1:1a88ac6: package org.apache.activemq.jaas;
2:1a88ac6: 
1:540dd5c: import java.io.IOException;
1:540dd5c: 
1:1a88ac6: import javax.security.auth.callback.Callback;
1:1a88ac6: import javax.security.auth.callback.CallbackHandler;
1:1a88ac6: import javax.security.auth.callback.NameCallback;
1:1a88ac6: import javax.security.auth.callback.PasswordCallback;
1:1a88ac6: import javax.security.auth.callback.UnsupportedCallbackException;
1:1a88ac6: 
1:1a88ac6: /**
1:1a88ac6:  * A JASS username password CallbackHandler.
1:1a88ac6:  */
1:648826b: public class JassCredentialCallbackHandler implements CallbackHandler {
1:1a88ac6: 
1:1a88ac6:     private final String username;
1:1a88ac6:     private final String password;
1:1a88ac6: 
1:648826b:     public JassCredentialCallbackHandler(String username, String password) {
1:1a88ac6:         this.username = username;
1:1a88ac6:         this.password = password;
3:1a88ac6:     }
1:1a88ac6: 
1:1667d80:     @Override
1:1a88ac6:     public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
1:1a88ac6:         for (int i = 0; i < callbacks.length; i++) {
1:1a88ac6:             Callback callback = callbacks[i];
1:1a88ac6:             if (callback instanceof PasswordCallback) {
1:540dd5c:                 PasswordCallback passwordCallback = (PasswordCallback)callback;
1:1a88ac6:                 if (password == null) {
1:1a88ac6:                     passwordCallback.setPassword(null);
1:540dd5c:                 } else {
1:1a88ac6:                     passwordCallback.setPassword(password.toCharArray());
1:1a88ac6:                 }
1:1a88ac6:             } else if (callback instanceof NameCallback) {
1:540dd5c:                 NameCallback nameCallback = (NameCallback)callback;
1:1a88ac6:                 if (username == null) {
1:1a88ac6:                     nameCallback.setName(null);
1:540dd5c:                 } else {
1:1a88ac6:                     nameCallback.setName(username);
1:1a88ac6:                 }
1:1a88ac6:             }
1:1a88ac6:         }
1:1a88ac6:     }
1:1a88ac6: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:1667d80
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1: 
/////////////////////////////////////////////////////////////////////////
1:                 PasswordCallback passwordCallback = (PasswordCallback)callback;
1:                 } else {
1:                 NameCallback nameCallback = (NameCallback)callback;
1:                 } else {
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:648826b
/////////////////////////////////////////////////////////////////////////
1: public class JassCredentialCallbackHandler implements CallbackHandler {
1:     public JassCredentialCallbackHandler(String username, String password) {
commit:1a88ac6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.jaas;
1: 
1: import javax.security.auth.callback.Callback;
1: import javax.security.auth.callback.CallbackHandler;
1: import javax.security.auth.callback.NameCallback;
1: import javax.security.auth.callback.PasswordCallback;
1: import javax.security.auth.callback.UnsupportedCallbackException;
0: import java.io.IOException;
1: 
1: 
1: /**
1:  * A JASS username password CallbackHandler.
1:  */
0: public class JassCredentialCallback implements CallbackHandler {
1: 
1:     private final String username;
1:     private final String password;
1: 
0:     public JassCredentialCallback(String username, String password) {
1:         this.username = username;
1:         this.password = password;
1:     }
1: 
1:     public void handle(Callback[] callbacks) throws IOException, UnsupportedCallbackException {
1:         for (int i = 0; i < callbacks.length; i++) {
1:             Callback callback = callbacks[i];
1:             if (callback instanceof PasswordCallback) {
0:                 PasswordCallback passwordCallback = (PasswordCallback) callback;
1:                 if (password == null) {
1:                     passwordCallback.setPassword(null);
1:                 }
0:                 else {
1:                     passwordCallback.setPassword(password.toCharArray());
1:                 }
1:             } else if (callback instanceof NameCallback) {
0:                 NameCallback nameCallback = (NameCallback) callback;
1:                 if (username == null) {
1:                     nameCallback.setName(null);
1:                 }
0:                 else {
1:                     nameCallback.setName(username);
1:                 }
1:             }
1:         }
1:     }
1: }
============================================================================