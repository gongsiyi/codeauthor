4:a677c21: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a677c21:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a677c21:  *
1:a677c21:  * Unless required by applicable law or agreed to in writing, software
1:a677c21:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a677c21:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a677c21:  * See the License for the specific language governing permissions and
1:a677c21:  * limitations under the License.
4:a677c21:  */
1:a677c21: package org.apache.activemq.usecases;
4:a677c21: 
1:a677c21: import javax.jms.JMSException;
1:a1a6766: import javax.jms.Message;
1:a1a6766: 
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:a677c21: 
1:a677c21: public class ConsumeQueuePrefetchTest extends ConsumeTopicPrefetchTest {
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(ConsumeQueuePrefetchTest.class);
1:a1a6766:     
1:a677c21:     protected void setUp() throws Exception {
1:a677c21:         topic = false;
1:a677c21:         super.setUp();
3:a677c21:     }
1:a1a6766:     
1:a1a6766:     public void testInflightWithConsumerPerMessage() throws JMSException {
1:a1a6766:         makeMessages(prefetchSize);
1:a1a6766: 
1:a1a6766:         LOG.info("About to send and receive: " + prefetchSize + " on destination: " + destination
1:a1a6766:                 + " of type: " + destination.getClass().getName());
1:a1a6766: 
1:a1a6766:         for (int i = 0; i < prefetchSize; i++) {
1:a1a6766:             Message message = session.createTextMessage(messageTexts[i]);
1:a1a6766:             producer.send(message);
1:a1a6766:         }
1:a1a6766: 
1:a1a6766:         validateConsumerPrefetch(this.getSubject(), prefetchSize);
1:a1a6766:         
1:a1a6766:         // new consumer per 20 messages
1:a1a6766:         for (int i = 0; i < prefetchSize; i+=20) {
1:a1a6766:             consumer.close();
1:a1a6766:             consumer = session.createConsumer(destination);
1:a1a6766:             validateConsumerPrefetch(this.getSubject(), prefetchSize - i);
1:a1a6766:             for (int j=0; j<20; j++) {
1:a1a6766:                 Message message = consumeMessge(i+j);
1:a1a6766:                 message.acknowledge();
1:a1a6766:             }
1:a1a6766:         }
1:a1a6766:     }
1:a677c21: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(ConsumeQueuePrefetchTest.class);
author:Gary Tully
-------------------------------------------------------------------------------
commit:a1a6766
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.Message;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
0:     private static final Log LOG = LogFactory.getLog(ConsumeQueuePrefetchTest.class);
1:     
1:     
1:     public void testInflightWithConsumerPerMessage() throws JMSException {
1:         makeMessages(prefetchSize);
1: 
1:         LOG.info("About to send and receive: " + prefetchSize + " on destination: " + destination
1:                 + " of type: " + destination.getClass().getName());
1: 
1:         for (int i = 0; i < prefetchSize; i++) {
1:             Message message = session.createTextMessage(messageTexts[i]);
1:             producer.send(message);
1:         }
1: 
1:         validateConsumerPrefetch(this.getSubject(), prefetchSize);
1:         
1:         // new consumer per 20 messages
1:         for (int i = 0; i < prefetchSize; i+=20) {
1:             consumer.close();
1:             consumer = session.createConsumer(destination);
1:             validateConsumerPrefetch(this.getSubject(), prefetchSize - i);
1:             for (int j=0; j<20; j++) {
1:                 Message message = consumeMessge(i+j);
1:                 message.acknowledge();
1:             }
1:         }
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:a677c21
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
1: import javax.jms.JMSException;
1: 
1: /**
0:  * @version $Revision: 1.1.1.1 $
1:  */
1: public class ConsumeQueuePrefetchTest extends ConsumeTopicPrefetchTest {
1: 
1:     /**
0:      * TODO disabled failing test cases until we fix queue dispatching
1:      */
0:     public void testSendDoublePrefetchSize() throws JMSException {
1:     }
1: 
1:     /**
0:      * TODO disabled failing test cases until we fix queue dispatching
1:      */
0:     public void testSendPrefetchSizePlusOne() throws JMSException {
1:     }
1: 
1:     protected void setUp() throws Exception {
1:         topic = false;
1:         super.setUp();
1:     }
1: }
============================================================================