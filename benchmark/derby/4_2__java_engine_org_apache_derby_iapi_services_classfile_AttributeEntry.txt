1:fe77ca5: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.classfile.AttributeEntry
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:fe77ca5: 
2:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: package org.apache.derby.iapi.services.classfile;
1:fe77ca5: 
1:fe77ca5: import java.io.IOException;
1:fe77ca5: 
1:fe77ca5: class AttributeEntry {
1:fe77ca5: 
1:fe77ca5: 	private int attribute_name_index;
1:fe77ca5: 	private ClassFormatOutput infoOut;
1:fe77ca5: 	byte[] infoIn;
1:fe77ca5: 
1:fe77ca5: 	AttributeEntry(int name_index, ClassFormatOutput info) {
1:fe77ca5: 		super();
1:fe77ca5: 
1:fe77ca5: 		attribute_name_index = name_index;
1:fe77ca5: 		this.infoOut = info;
1:fe77ca5: 	}
1:fe77ca5: 
1:fe77ca5: 
1:fe77ca5: 	AttributeEntry(ClassInput in) throws IOException {
1:fe77ca5: 		attribute_name_index = in.getU2();
1:fe77ca5: 		infoIn = in.getU1Array(in.getU4());
1:fe77ca5: 	}
1:fe77ca5: 
1:fe77ca5: 	int getNameIndex() { return attribute_name_index; }
1:fe77ca5: 
1:fe77ca5: 	void put(ClassFormatOutput out) throws IOException {
1:fe77ca5: 		out.putU2(attribute_name_index);
1:fe77ca5: 		if (infoOut != null) {
1:fe77ca5: 			out.putU4(infoOut.size());
1:fe77ca5: 			infoOut.writeTo(out);
1:fe77ca5: 		} else {
1:fe77ca5: 			out.putU4(infoIn.length);
1:fe77ca5: 			out.write(infoIn);
1:fe77ca5: 		}
1:fe77ca5: 	}
1:fe77ca5: 
2:fe77ca5: 	/**
1:fe77ca5: 		This is exact.
1:fe77ca5: 	*/
1:fe77ca5: 	int classFileSize() {
1:fe77ca5: 		return 2 + 4 + 
1:fe77ca5: 			((infoOut != null) ? infoOut.size() : infoIn.length);
1:fe77ca5: 	}
1:fe77ca5: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.classfile.AttributeEntry
1: 
0:    Copyright 2000, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.classfile
0:    (C) Copyright IBM Corp. 2000, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.classfile;
1: 
1: import java.io.IOException;
1: 
1: class AttributeEntry {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2000_2004;
1: 
1: 	private int attribute_name_index;
1: 	private ClassFormatOutput infoOut;
1: 	byte[] infoIn;
1: 
1: 	AttributeEntry(int name_index, ClassFormatOutput info) {
1: 		super();
1: 
1: 		attribute_name_index = name_index;
1: 		this.infoOut = info;
1: 	}
1: 
1: 
1: 	AttributeEntry(ClassInput in) throws IOException {
1: 		attribute_name_index = in.getU2();
1: 		infoIn = in.getU1Array(in.getU4());
1: 	}
1: 
1: 	int getNameIndex() { return attribute_name_index; }
1: 
1: 	void put(ClassFormatOutput out) throws IOException {
1: 		out.putU2(attribute_name_index);
1: 		if (infoOut != null) {
1: 			out.putU4(infoOut.size());
1: 			infoOut.writeTo(out);
1: 		} else {
1: 			out.putU4(infoIn.length);
1: 			out.write(infoIn);
1: 		}
1: 	}
1: 
1: 	/**
1: 		This is exact.
1: 	*/
1: 	int classFileSize() {
1: 		return 2 + 4 + 
1: 			((infoOut != null) ? infoOut.size() : infoIn.length);
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.classfile
0:    (C) Copyright IBM Corp. 2000, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.services.classfile;
0: 
0: import java.io.IOException;
0: 
0: class AttributeEntry {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2000_2004;
0: 
0: 	private int attribute_name_index;
0: 	private ClassFormatOutput infoOut;
0: 	byte[] infoIn;
0: 
0: 	AttributeEntry(int name_index, ClassFormatOutput info) {
0: 		super();
0: 
0: 		attribute_name_index = name_index;
0: 		this.infoOut = info;
0: 	}
0: 
0: 
0: 	AttributeEntry(ClassInput in) throws IOException {
0: 		attribute_name_index = in.getU2();
0: 		infoIn = in.getU1Array(in.getU4());
0: 	}
0: 
0: 	int getNameIndex() { return attribute_name_index; }
0: 
0: 	void put(ClassFormatOutput out) throws IOException {
0: 		out.putU2(attribute_name_index);
0: 		if (infoOut != null) {
0: 			out.putU4(infoOut.size());
0: 			infoOut.writeTo(out);
0: 		} else {
0: 			out.putU4(infoIn.length);
0: 			out.write(infoIn);
0: 		}
0: 	}
0: 
0: 	/**
0: 		This is exact.
0: 	*/
0: 	int classFileSize() {
0: 		return 2 + 4 + 
0: 			((infoOut != null) ? infoOut.size() : infoIn.length);
0: 	}
0: }
============================================================================