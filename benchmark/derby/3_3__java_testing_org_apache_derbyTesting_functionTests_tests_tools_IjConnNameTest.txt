1:4109a77: /*
1:4109a77: 
1:4109a77:    Derby - Class org.apache.derbyTesting.functionTests.tests.tools.IjConnNameTest
1:4109a77: 
1:4109a77:        Licensed to the Apache Software Foundation (ASF) under one
1:4109a77:        or more contributor license agreements.  See the NOTICE file
1:4109a77:        distributed with this work for additional information
1:4109a77:        regarding copyright ownership.  The ASF licenses this file
1:4109a77:        to you under the Apache License, Version 2.0 (the
1:4109a77:        "License"); you may not use this file except in compliance
1:4109a77:        with the License.  You may obtain a copy of the License at
1:4109a77: 
1:4109a77:          http://www.apache.org/licenses/LICENSE-2.0
1:4109a77: 
1:4109a77:        Unless required by applicable law or agreed to in writing,
1:4109a77:        software distributed under the License is distributed on an
1:4109a77:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:4109a77:        KIND, either express or implied.  See the License for the
1:4109a77:        specific language governing permissions and limitations
1:4109a77:        under the License
1:4109a77: */
1:503e54d: package org.apache.derbyTesting.functionTests.tests.tools;
12:503e54d: 
1:503e54d: import java.util.Properties;
1:503e54d: import junit.framework.Test;
1:503e54d: import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:503e54d: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1:503e54d: import org.apache.derbyTesting.junit.JDBC;
1:503e54d: import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
1:c393694: import org.apache.derbyTesting.junit.TestConfiguration;
1:503e54d: 
1:503e54d: 
1:503e54d: 
1:503e54d: 
1:503e54d: /**
1:503e54d:  * Test case for ijConnName.sql. 
1:503e54d:  *
1:503e54d:  */
1:503e54d: public class IjConnNameTest extends ScriptTestCase {
1:503e54d: 
1:503e54d:     private static String test_script = "ijConnName";
1:503e54d: 
1:503e54d:     public IjConnNameTest(String name) {
1:503e54d:         super(name, true);
9:503e54d:     }    
1:503e54d: 
1:503e54d:     public static Test suite() {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("IjConnNameTest");
1:503e54d:         
1:503e54d:         // Test does not run on J2ME
1:503e54d:         if (JDBC.vmSupportsJSR169())
1:503e54d:             return suite;
1:503e54d:         
1:503e54d:         Properties props = new Properties();
1:503e54d:         
1:503e54d:         props.setProperty("ij.connection.connOne", "jdbc:derby:wombat;create=true");
1:503e54d:         props.setProperty("ij.connection.connFour", "jdbc:derby:nevercreated");     
1:503e54d:         
1:503e54d:         props.setProperty("ij.showNoConnectionsAtStart", "true");
1:503e54d:         props.setProperty("ij.showNoCountForSelect", "true");
1:503e54d:         
1:503e54d:         Test test = new SystemPropertyTestSetup(new IjConnNameTest(test_script), props);
1:503e54d:         //test = SecurityManagerSetup.noSecurityManager(test);
1:503e54d:         test = new CleanDatabaseTestSetup(test);   
1:503e54d:         
1:503e54d:         return getIJConfig(test); 
1:503e54d:     }
1:503e54d:     
1:503e54d:     public void tearDown() throws Exception {
1:503e54d:         // attempt to get rid of the extra database.
1:503e54d:         // this also will get done if there are failures, and the database will
1:503e54d:         // not be saved in the 'fail' directory.
1:c393694:         removeDirectory(
1:c393694:             TestConfiguration.getCurrent().getDatabasePath("lemming"));
1:503e54d:         super.tearDown();
1:503e54d:     }   
1:503e54d: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("IjConnNameTest");
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:c393694
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.TestConfiguration;
/////////////////////////////////////////////////////////////////////////
1:         removeDirectory(
1:             TestConfiguration.getCurrent().getDatabasePath("lemming"));
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:4109a77
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.tools.IjConnNameTest
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
commit:503e54d
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derbyTesting.functionTests.tests.tools;
1: 
0: import java.io.File;
1: 
0: import java.security.AccessController;
1: import java.util.Properties;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: 
1: import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
1: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1: import org.apache.derbyTesting.junit.JDBC;
0: import org.apache.derbyTesting.junit.SecurityManagerSetup;
1: import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
1: 
1: 
1: 
1: 
1: /**
1:  * Test case for ijConnName.sql. 
1:  *
1:  */
1: public class IjConnNameTest extends ScriptTestCase {
1: 
1:     private static String test_script = "ijConnName";
1: 
1:     public IjConnNameTest(String name) {
1:         super(name, true);
1:     }    
1: 
1:     public static Test suite() {
0:         TestSuite suite = new TestSuite("IjConnNameTest");
1:         
1:         // Test does not run on J2ME
1:         if (JDBC.vmSupportsJSR169())
1:             return suite;
1:         
1:         Properties props = new Properties();
1:         
1:         props.setProperty("ij.connection.connOne", "jdbc:derby:wombat;create=true");
1:         props.setProperty("ij.connection.connFour", "jdbc:derby:nevercreated");     
1:         
1:         props.setProperty("ij.showNoConnectionsAtStart", "true");
1:         props.setProperty("ij.showNoCountForSelect", "true");
1:         
1:         Test test = new SystemPropertyTestSetup(new IjConnNameTest(test_script), props);
1:         //test = SecurityManagerSetup.noSecurityManager(test);
1:         test = new CleanDatabaseTestSetup(test);   
1:         
1:         return getIJConfig(test); 
1:     }
1:     
1:     public void tearDown() throws Exception {
1:         // attempt to get rid of the extra database.
1:         // this also will get done if there are failures, and the database will
1:         // not be saved in the 'fail' directory.
0:         AccessController.doPrivileged(new java.security.PrivilegedAction() {
0:             public Object run() {
0:                     removeDatabase("lemming" );
0:                 return null;
1:             }
1:             
0:             void removeDatabase(String dbName)
0:             {
0:                 //TestConfiguration config = TestConfiguration.getCurrent();
0:                 dbName = dbName.replace('/', File.separatorChar);
0:                 String dsh = getSystemProperty("derby.system.home");
0:                 if (dsh == null) {
0:                     fail("not implemented");
0:                 } else {
0:                     dbName = dsh + File.separator + dbName;
1:                 }
0:                 removeDirectory(dbName);
1:             }
1: 
0:             void removeDirectory(String path)
0:             {
0:                 final File dir = new File(path);
0:                 removeDir(dir);
1:             }
1: 
0:             private void removeDir(File dir) {
1:                 
0:                 // Check if anything to do!
0:                 // Database may not have been created.
0:                 if (!dir.exists())
0:                     return;
1: 
0:                 String[] list = dir.list();
1: 
0:                 // Some JVMs return null for File.list() when the
0:                 // directory is empty.
0:                 if (list != null) {
0:                     for (int i = 0; i < list.length; i++) {
0:                         File entry = new File(dir, list[i]);
1: 
0:                         if (entry.isDirectory()) {
0:                             removeDir(entry);
0:                         } else {
0:                             entry.delete();
0:                             //assertTrue(entry.getPath(), entry.delete());
1:                         }
1:                     }
1:                 }
0:                 dir.delete();
0:                 //assertTrue(dir.getPath(), dir.delete());
1:             }
0:         });
1:         super.tearDown();
1:     }   
1: }
============================================================================