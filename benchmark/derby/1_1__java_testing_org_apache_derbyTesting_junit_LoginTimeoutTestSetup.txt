1:f40e25a: /*
1:f40e25a:  * Derby - Class org.apache.derbyTesting.junit.LoginTimeoutTestSetup
1:f40e25a:  *
1:f40e25a:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f40e25a:  * contributor license agreements.  See the NOTICE file distributed with
1:f40e25a:  * this work for additional information regarding copyright ownership.
1:f40e25a:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f40e25a:  * (the "License"); you may not use this file except in compliance with
1:f40e25a:  * the License.  You may obtain a copy of the License at
1:f40e25a:  *
1:f40e25a:  *    http://www.apache.org/licenses/LICENSE-2.0
1:f40e25a:  *
1:f40e25a:  * Unless required by applicable law or agreed to in writing,
1:f40e25a:  * software distributed under the License is distributed on an
1:f40e25a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
1:f40e25a:  * either express or implied. See the License for the specific
1:f40e25a:  * language governing permissions and limitations under the License.
1:f40e25a:  */
1:f40e25a: 
1:f40e25a: package org.apache.derbyTesting.junit;
1:f40e25a: 
1:f40e25a: import junit.framework.Test;
1:f40e25a: 
1:f40e25a: /**
1:f40e25a:  * A decorator that changes the login timeout for the current configuration
1:f40e25a:  * and resets it afterwards.
1:f40e25a:  */
1:f40e25a: public class LoginTimeoutTestSetup extends BaseJDBCTestSetup {
1:f40e25a: 
1:f40e25a:     private int originalLoginTimeout;
1:f40e25a:     private final int newLoginTimeout;
1:f40e25a: 
1:f40e25a:     /**
1:f40e25a:      * Create a decorator that makes {@code test} run with a login timeout.
1:f40e25a:      *
1:f40e25a:      * @param test the test to decorate
1:f40e25a:      * @param timeout the login timeout in seconds
1:f40e25a:      */
1:f40e25a:     public LoginTimeoutTestSetup(Test test, int timeout) {
1:f40e25a:         super(test);
1:f40e25a:         newLoginTimeout = timeout;
1:f40e25a:     }
1:f40e25a: 
1:f40e25a:     @Override
1:f40e25a:     protected void setUp() throws Exception {
1:f40e25a:         TestConfiguration config = getTestConfiguration();
1:f40e25a:         originalLoginTimeout = config.getLoginTimeout();
1:f40e25a:         config.setLoginTimeout(newLoginTimeout);
1:f40e25a:     }
1:f40e25a: 
1:f40e25a:     @Override
1:f40e25a:     protected void tearDown() throws Exception {
1:f40e25a:         getTestConfiguration().setLoginTimeout(originalLoginTimeout);
1:f40e25a:         super.tearDown();
1:f40e25a:     }
1:f40e25a: 
1:f40e25a: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:f40e25a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Derby - Class org.apache.derbyTesting.junit.LoginTimeoutTestSetup
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
1:  * either express or implied. See the License for the specific
1:  * language governing permissions and limitations under the License.
1:  */
1: 
1: package org.apache.derbyTesting.junit;
1: 
1: import junit.framework.Test;
1: 
1: /**
1:  * A decorator that changes the login timeout for the current configuration
1:  * and resets it afterwards.
1:  */
1: public class LoginTimeoutTestSetup extends BaseJDBCTestSetup {
1: 
1:     private int originalLoginTimeout;
1:     private final int newLoginTimeout;
1: 
1:     /**
1:      * Create a decorator that makes {@code test} run with a login timeout.
1:      *
1:      * @param test the test to decorate
1:      * @param timeout the login timeout in seconds
1:      */
1:     public LoginTimeoutTestSetup(Test test, int timeout) {
1:         super(test);
1:         newLoginTimeout = timeout;
1:     }
1: 
1:     @Override
1:     protected void setUp() throws Exception {
1:         TestConfiguration config = getTestConfiguration();
1:         originalLoginTimeout = config.getLoginTimeout();
1:         config.setLoginTimeout(newLoginTimeout);
1:     }
1: 
1:     @Override
1:     protected void tearDown() throws Exception {
1:         getTestConfiguration().setLoginTimeout(originalLoginTimeout);
1:         super.tearDown();
1:     }
1: 
1: }
============================================================================