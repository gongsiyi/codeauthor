1:1d8d201: /*
1:1d8d201: 
1:1d8d201:    Derby - Class org.apache.derbyBuild.jirasoap.FilteredIssueListerAntWrapper
1:1d8d201: 
1:1d8d201:    Licensed to the Apache Software Foundation (ASF) under one or more
1:1d8d201:    contributor license agreements.  See the NOTICE file distributed with
1:1d8d201:    this work for additional information regarding copyright ownership.
1:1d8d201:    The ASF licenses this file to you under the Apache License, Version 2.0
1:1d8d201:    (the "License"); you may not use this file except in compliance with
1:1d8d201:    the License.  You may obtain a copy of the License at
1:1d8d201: 
1:1d8d201:       http://www.apache.org/licenses/LICENSE-2.0
1:1d8d201: 
1:1d8d201:    Unless required by applicable law or agreed to in writing, software
1:1d8d201:    distributed under the License is distributed on an "AS IS" BASIS,
1:1d8d201:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1d8d201:    See the License for the specific language governing permissions and
1:1d8d201:    limitations under the License.
1:1d8d201: 
1:1d8d201:  */
1:1d8d201: 
1:1d8d201: package org.apache.derbyBuild.jirasoap;
1:1d8d201: 
1:1d8d201: import org.apache.tools.ant.BuildException;
1:1d8d201: 
1:1d8d201: /**
1:1d8d201:  * Wrapper for invoking {@code FilteredIssueLister} from ant.
1:1d8d201:  */
1:1d8d201: public class FilteredIssueListerAntWrapper {
1:1d8d201: 
1:1d8d201:     private String user;
1:1d8d201:     private String password;
1:1d8d201:     private String releaseVersion;
1:695493d:     /** JIRA filter id, or 0 (zero) for JQL. */
1:1d8d201:     private long filterId;
1:1d8d201:     private String output;
1:1d8d201: 
1:1d8d201:     public FilteredIssueListerAntWrapper() {};
1:1d8d201: 
1:1d8d201:     public void setUser(String user) {
1:1d8d201:         this.user = user;
1:1d8d201:     }
1:1d8d201: 
1:1d8d201:     public void setPassword(String password) {
1:1d8d201:         this.password = password;
1:1d8d201:     }
1:1d8d201: 
1:1d8d201:     public void setReleaseVersion(String releaseVersion) {
1:1d8d201:         this.releaseVersion = releaseVersion;
1:1d8d201:     }
1:1d8d201: 
1:1d8d201:     public void setFilterId(String id)
1:1d8d201:             throws BuildException {
1:695493d:         // NOTE: A filter id of 0 (zero) will be treated specially,
1:695493d:         //       resulting in a JQL query being generated.
1:1d8d201:         try {
1:1d8d201:             filterId = Long.parseLong(id);
1:1d8d201:         } catch (NumberFormatException nfe) {
1:1d8d201:             throw new BuildException(
1:1d8d201:                     "invalid JIRA filter id (only digits allowed): " + id, nfe);
1:1d8d201:         }
1:1d8d201:     }
1:1d8d201: 
1:1d8d201:     public void setOutputFile(String output) {
1:1d8d201:         this.output = output;
1:1d8d201:     }
1:1d8d201: 
1:2bbd830:     public void setReportDisqualifications(String bool) {
1:2bbd830:         System.setProperty("reportDisqualifications", bool);
1:2bbd830:     }
1:2bbd830: 
1:1d8d201:     public void execute()
1:1d8d201:             throws BuildException {
1:1d8d201:         try {
1:1d8d201:             FilteredIssueLister issueLister =
1:1d8d201:                 new FilteredIssueLister(user, password);
1:695493d:             // NOTE: A filter id of 0 (zero) will be treated specially,
1:695493d:             //       resulting in a JQL query being generated.
1:1d8d201:             issueLister.prepareReleaseNotes(
1:1d8d201:                     releaseVersion, filterId, output, null);
1:1d8d201:         } catch (Exception e) {
1:1d8d201:             throw new BuildException(e);
1:1d8d201:         }
1:1d8d201: 
1:1d8d201:     }
1:1d8d201: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:2bbd830
/////////////////////////////////////////////////////////////////////////
1:     public void setReportDisqualifications(String bool) {
1:         System.setProperty("reportDisqualifications", bool);
1:     }
1: 
commit:695493d
/////////////////////////////////////////////////////////////////////////
1:     /** JIRA filter id, or 0 (zero) for JQL. */
/////////////////////////////////////////////////////////////////////////
1:         // NOTE: A filter id of 0 (zero) will be treated specially,
1:         //       resulting in a JQL query being generated.
/////////////////////////////////////////////////////////////////////////
1:             // NOTE: A filter id of 0 (zero) will be treated specially,
1:             //       resulting in a JQL query being generated.
commit:1d8d201
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyBuild.jirasoap.FilteredIssueListerAntWrapper
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyBuild.jirasoap;
1: 
1: import org.apache.tools.ant.BuildException;
1: 
1: /**
1:  * Wrapper for invoking {@code FilteredIssueLister} from ant.
1:  */
1: public class FilteredIssueListerAntWrapper {
1: 
1:     private String user;
1:     private String password;
1:     private String releaseVersion;
1:     private long filterId;
1:     private String output;
1: 
1:     public FilteredIssueListerAntWrapper() {};
1: 
1:     public void setUser(String user) {
1:         this.user = user;
1:     }
1: 
1:     public void setPassword(String password) {
1:         this.password = password;
1:     }
1: 
1:     public void setReleaseVersion(String releaseVersion) {
1:         this.releaseVersion = releaseVersion;
1:     }
1: 
1:     public void setFilterId(String id)
1:             throws BuildException {
1:         try {
1:             filterId = Long.parseLong(id);
1:         } catch (NumberFormatException nfe) {
1:             throw new BuildException(
1:                     "invalid JIRA filter id (only digits allowed): " + id, nfe);
1:         }
1:     }
1: 
1:     public void setOutputFile(String output) {
1:         this.output = output;
1:     }
1: 
1:     public void execute()
1:             throws BuildException {
1:         try {
1:             FilteredIssueLister issueLister =
1:                 new FilteredIssueLister(user, password);
1:             issueLister.prepareReleaseNotes(
1:                     releaseVersion, filterId, output, null);
1:         } catch (Exception e) {
1:             throw new BuildException(e);
1:         }
1: 
1:     }
1: }
============================================================================