1:b8d1d8a: /*
1:b8d1d8a:  
1:b8d1d8a:  Derby - Class org.apache.derbyTesting.system.nstest.init.NWServerThread
1:b8d1d8a:  
1:b8d1d8a:  Licensed to the Apache Software Foundation (ASF) under one or more
1:b8d1d8a:  contributor license agreements.  See the NOTICE file distributed with
1:b8d1d8a:  this work for additional information regarding copyright ownership.
1:b8d1d8a:  The ASF licenses this file to You under the Apache License, Version 2.0
1:b8d1d8a:  (the "License"); you may not use this file except in compliance with
1:b8d1d8a:  the License.  You may obtain a copy of the License at
1:b8d1d8a:  
1:b8d1d8a:  http://www.apache.org/licenses/LICENSE-2.0
1:b8d1d8a:  
1:b8d1d8a:  Unless required by applicable law or agreed to in writing, software
1:b8d1d8a:  distributed under the License is distributed on an "AS IS" BASIS,
1:b8d1d8a:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b8d1d8a:  See the License for the specific language governing permissions and
1:b8d1d8a:  limitations under the License.
1:b8d1d8a:  
1:b8d1d8a:  */
1:b8d1d8a: package org.apache.derbyTesting.system.nstest.init;
1:b8d1d8a: 
1:b8d1d8a: import java.io.PrintWriter;
1:b8d1d8a: import java.net.InetAddress;
1:b8d1d8a: 
1:b8d1d8a: import org.apache.derby.drda.NetworkServerControl;
1:b8d1d8a: 
1:c043274: import org.apache.derbyTesting.system.nstest.NsTest;
1:c043274: 
1:b8d1d8a: /**
1:b8d1d8a:  * NWServerThread: Start a Network Server in a new Thread, based on the
1:b8d1d8a:  * NsTest.START_SERVER_IN_SAME_VM setting
1:b8d1d8a:  */
1:b8d1d8a: public class NWServerThread extends Thread {
1:b8d1d8a: 
1:b8d1d8a: 	InetAddress inetaddr = null;
1:b8d1d8a: 
1:b8d1d8a: 	String address = "localhost";
1:b8d1d8a: 
1:b8d1d8a: 	int port = 1900;
1:b8d1d8a: 
1:b8d1d8a: 	public NWServerThread(String address, int port) throws Exception {
1:b8d1d8a: 		if (!(address == null)) {
1:b8d1d8a: 			if (!(address.equals(""))) {
1:b8d1d8a: 				this.address = address;
1:b8d1d8a: 			}
1:b8d1d8a: 		}
1:b8d1d8a: 		if (port > 0) {
1:b8d1d8a: 			this.port = port;
1:b8d1d8a: 		}
1:b8d1d8a: 
1:b8d1d8a: 		try {
1:b8d1d8a: 			inetaddr = InetAddress.getByName(address);
1:b8d1d8a: 
1:b8d1d8a: 		} catch (Exception e) {
1:c043274: 			NsTest.logger
1:b8d1d8a: 					.println("Invalid host address passed, cannot start server");
1:c043274: 			if ( NsTest.justCountErrors() ) { NsTest.printException( NWServerThread.class.getName(), e ); }
1:c043274:             else { e.printStackTrace( NsTest.logger ); }
1:b8d1d8a: 			throw e;
1:b8d1d8a: 		}
1:b8d1d8a: 	}
1:b8d1d8a: 
1:b8d1d8a: 	/*
1:b8d1d8a: 	 * Implementation of the run() method to start the server
1:b8d1d8a: 	 * 
1:b8d1d8a: 	 */
1:b8d1d8a: 	public void run() {
1:b8d1d8a: 		try {
1:b8d1d8a: 			NetworkServerControl nsw = new NetworkServerControl(inetaddr, port);
1:c043274: 			nsw.start(new PrintWriter(NsTest.logger));
1:c043274: 			NsTest.logger.println("===> Derby Network Server on " + address + ":"
1:b8d1d8a: 					+ port + " <===");
1:b8d1d8a: 		} catch (Exception e) {
1:b8d1d8a: 			;
1:c043274:             if ( NsTest.justCountErrors() ) { NsTest.printException( NWServerThread.class.getName(), e ); }
1:c043274: 			else { e.printStackTrace( NsTest.logger ); }
1:b8d1d8a: 		}
1:b8d1d8a: 	}
1:b8d1d8a: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:c043274
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.system.nstest.NsTest;
1: 
/////////////////////////////////////////////////////////////////////////
1: 			NsTest.logger
1: 			if ( NsTest.justCountErrors() ) { NsTest.printException( NWServerThread.class.getName(), e ); }
1:             else { e.printStackTrace( NsTest.logger ); }
/////////////////////////////////////////////////////////////////////////
1: 			nsw.start(new PrintWriter(NsTest.logger));
1: 			NsTest.logger.println("===> Derby Network Server on " + address + ":"
1:             if ( NsTest.justCountErrors() ) { NsTest.printException( NWServerThread.class.getName(), e ); }
1: 			else { e.printStackTrace( NsTest.logger ); }
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:b8d1d8a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:  Derby - Class org.apache.derbyTesting.system.nstest.init.NWServerThread
1:  
1:  Licensed to the Apache Software Foundation (ASF) under one or more
1:  contributor license agreements.  See the NOTICE file distributed with
1:  this work for additional information regarding copyright ownership.
1:  The ASF licenses this file to You under the Apache License, Version 2.0
1:  (the "License"); you may not use this file except in compliance with
1:  the License.  You may obtain a copy of the License at
1:  
1:  http://www.apache.org/licenses/LICENSE-2.0
1:  
1:  Unless required by applicable law or agreed to in writing, software
1:  distributed under the License is distributed on an "AS IS" BASIS,
1:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  See the License for the specific language governing permissions and
1:  limitations under the License.
1:  
1:  */
1: package org.apache.derbyTesting.system.nstest.init;
1: 
1: import java.io.PrintWriter;
1: import java.net.InetAddress;
1: 
1: import org.apache.derby.drda.NetworkServerControl;
1: 
1: /**
1:  * NWServerThread: Start a Network Server in a new Thread, based on the
1:  * NsTest.START_SERVER_IN_SAME_VM setting
1:  */
1: public class NWServerThread extends Thread {
1: 
1: 	InetAddress inetaddr = null;
1: 
1: 	String address = "localhost";
1: 
1: 	int port = 1900;
1: 
1: 	public NWServerThread(String address, int port) throws Exception {
1: 		if (!(address == null)) {
1: 			if (!(address.equals(""))) {
1: 				this.address = address;
1: 			}
1: 		}
1: 		if (port > 0) {
1: 			this.port = port;
1: 		}
1: 
1: 		try {
1: 			inetaddr = InetAddress.getByName(address);
1: 
1: 		} catch (Exception e) {
0: 			System.out
1: 					.println("Invalid host address passed, cannot start server");
0: 			e.printStackTrace();
1: 			throw e;
1: 		}
1: 	}
1: 
1: 	/*
1: 	 * Implementation of the run() method to start the server
1: 	 * 
1: 	 */
1: 	public void run() {
1: 		try {
1: 			NetworkServerControl nsw = new NetworkServerControl(inetaddr, port);
0: 			nsw.start(new PrintWriter(System.out));
0: 			System.out.println("===> Derby Network Server on " + address + ":"
1: 					+ port + " <===");
1: 		} catch (Exception e) {
1: 			;
0: 			e.printStackTrace();
1: 		}
1: 	}
1: }
============================================================================