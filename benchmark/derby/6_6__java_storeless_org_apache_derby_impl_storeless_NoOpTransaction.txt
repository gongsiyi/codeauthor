1:a96a2ab: /*
1:a96a2ab: 
1:a96a2ab:    Derby - Class org.apache.impl.storeless.NoOpTransaction
1:a96a2ab: 
1:a96a2ab:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a96a2ab:    contributor license agreements.  See the NOTICE file distributed with
1:a96a2ab:    this work for additional information regarding copyright ownership.
1:a96a2ab:    The ASF licenses this file to You under the Apache License, Version 2.0
1:a96a2ab:    (the "License"); you may not use this file except in compliance with
1:a96a2ab:    the License.  You may obtain a copy of the License at
1:a96a2ab: 
1:a96a2ab:       http://www.apache.org/licenses/LICENSE-2.0
1:a96a2ab: 
1:a96a2ab:    Unless required by applicable law or agreed to in writing, software
1:a96a2ab:    distributed under the License is distributed on an "AS IS" BASIS,
1:a96a2ab:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a96a2ab:    See the License for the specific language governing permissions and
1:a96a2ab:    limitations under the License.
1:a96a2ab: 
1:a96a2ab:  */
1:a96a2ab: package org.apache.derby.impl.storeless;
1:a96a2ab: 
1:a96a2ab: import java.io.Serializable;
1:a96a2ab: import java.util.Properties;
1:a96a2ab: 
1:a96a2ab: import org.apache.derby.iapi.error.StandardException;
1:a96a2ab: import org.apache.derby.iapi.services.context.ContextManager;
1:a96a2ab: import org.apache.derby.iapi.services.io.FormatableBitSet;
1:a96a2ab: import org.apache.derby.iapi.services.io.Storable;
1:3c1f634: import org.apache.derby.iapi.services.locks.CompatibilitySpace;
1:a96a2ab: import org.apache.derby.iapi.store.access.AccessFactory;
1:a96a2ab: import org.apache.derby.iapi.store.access.BackingStoreHashtable;
1:a96a2ab: import org.apache.derby.iapi.store.access.ColumnOrdering;
1:a96a2ab: import org.apache.derby.iapi.store.access.ConglomerateController;
1:a96a2ab: import org.apache.derby.iapi.store.access.DatabaseInstant;
1:a96a2ab: import org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo;
1:a96a2ab: import org.apache.derby.iapi.store.access.FileResource;
1:a96a2ab: import org.apache.derby.iapi.store.access.GroupFetchScanController;
1:a96a2ab: import org.apache.derby.iapi.store.access.Qualifier;
1:a96a2ab: import org.apache.derby.iapi.store.access.RowLocationRetRowSource;
1:a96a2ab: import org.apache.derby.iapi.store.access.ScanController;
1:a96a2ab: import org.apache.derby.iapi.store.access.SortController;
1:a96a2ab: import org.apache.derby.iapi.store.access.SortCostController;
1:a96a2ab: import org.apache.derby.iapi.store.access.SortObserver;
1:a96a2ab: import org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo;
1:a96a2ab: import org.apache.derby.iapi.store.access.StoreCostController;
1:a96a2ab: import org.apache.derby.iapi.store.access.TransactionController;
1:a96a2ab: import org.apache.derby.iapi.store.raw.Loggable;
1:a96a2ab: import org.apache.derby.iapi.types.DataValueDescriptor;
1:722a889: import org.apache.derby.iapi.types.DataValueFactory;
1:a96a2ab: 
1:a96a2ab: /**
1:a96a2ab:  * A TransactionController that does nothing.
1:a96a2ab:  * This allows the existing transaction aware language
1:a96a2ab:  * code to remain unchanged while not supporting transactions
1:a96a2ab:  * for the storeless engine.
1:a96a2ab:  */
1:a96a2ab: class NoOpTransaction implements TransactionController {
1:a96a2ab: 
1:a96a2ab:     public AccessFactory getAccessManager() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean conglomerateExists(long conglomId) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long createConglomerate(String implementation,
1:a96a2ab:             DataValueDescriptor[] template, ColumnOrdering[] columnOrder,
1:b61f876:             int[] collation_ids,
1:a96a2ab:             Properties properties, int temporaryFlag) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long createAndLoadConglomerate(String implementation,
1:a96a2ab:             DataValueDescriptor[] template, ColumnOrdering[] columnOrder,
1:b61f876:             int[] collation_ids,
1:a96a2ab:             Properties properties, int temporaryFlag,
1:a96a2ab:             RowLocationRetRowSource rowSource, long[] rowCount)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long recreateAndLoadConglomerate(String implementation,
1:a96a2ab:             boolean recreate_ifempty, DataValueDescriptor[] template,
1:b61f876:             ColumnOrdering[] columnOrder, 
1:b61f876:             int[] collation_ids,
1:b61f876:             Properties properties,
1:a96a2ab:             int temporaryFlag, long orig_conglomId,
1:a96a2ab:             RowLocationRetRowSource rowSource, long[] rowCount)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void addColumnToConglomerate(long conglomId, int column_id,
1:b61f876:             Storable template_column, int collation_id) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void dropConglomerate(long conglomId) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long findConglomid(long containerid) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long findContainerid(long conglomid) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:ceaf7df:     public TransactionController startNestedUserTransaction(
1:ceaf7df:     boolean readOnly,
1:ceaf7df:     boolean flush_log_on_xact_end)
1:a96a2ab:             throws StandardException {
1:a96a2ab:         return this;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public Properties getUserCreateConglomPropList() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public ConglomerateController openConglomerate(long conglomId,
1:a96a2ab:             boolean hold, int open_mode, int lock_level, int isolation_level)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public ConglomerateController openCompiledConglomerate(boolean hold,
1:a96a2ab:             int open_mode, int lock_level, int isolation_level,
1:a96a2ab:             StaticCompiledOpenConglomInfo static_info,
1:a96a2ab:             DynamicCompiledOpenConglomInfo dynamic_info)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public BackingStoreHashtable createBackingStoreHashtableFromScan(
1:a96a2ab:             long conglomId, int open_mode, int lock_level, int isolation_level,
1:a96a2ab:             FormatableBitSet scanColumnList,
1:a96a2ab:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:a96a2ab:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:a96a2ab:             int stopSearchOperator, long max_rowcnt, int[] key_column_numbers,
1:a96a2ab:             boolean remove_duplicates, long estimated_rowcnt,
1:a96a2ab:             long max_inmemory_rowcnt, int initialCapacity, float loadFactor,
1:1e762f5:             boolean collect_runtimestats, boolean skipNullKeyColumns,
1:e81e52c:             boolean keepAfterCommit,
1:e81e52c:             boolean includeRowLocations)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public ScanController openScan(long conglomId, boolean hold, int open_mode,
1:a96a2ab:             int lock_level, int isolation_level,
1:a96a2ab:             FormatableBitSet scanColumnList,
1:a96a2ab:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:a96a2ab:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:a96a2ab:             int stopSearchOperator) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public ScanController openCompiledScan(boolean hold, int open_mode,
1:a96a2ab:             int lock_level, int isolation_level,
1:a96a2ab:             FormatableBitSet scanColumnList,
1:a96a2ab:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:a96a2ab:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:a96a2ab:             int stopSearchOperator, StaticCompiledOpenConglomInfo static_info,
1:a96a2ab:             DynamicCompiledOpenConglomInfo dynamic_info)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public GroupFetchScanController openGroupFetchScan(long conglomId,
1:a96a2ab:             boolean hold, int open_mode, int lock_level, int isolation_level,
1:a96a2ab:             FormatableBitSet scanColumnList,
1:a96a2ab:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:a96a2ab:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:a96a2ab:             int stopSearchOperator) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public GroupFetchScanController defragmentConglomerate(long conglomId,
1:a96a2ab:             boolean online, boolean hold, int open_mode, int lock_level,
1:a96a2ab:             int isolation_level) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void purgeConglomerate(long conglomId) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void compressConglomerate(long conglomId) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean fetchMaxOnBtree(long conglomId, int open_mode,
1:a96a2ab:             int lock_level, int isolation_level,
1:a96a2ab:             FormatableBitSet scanColumnList, DataValueDescriptor[] fetchRow)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public StoreCostController openStoreCost(long conglomId)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public int countOpens(int which_to_count) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public String debugOpened() throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public FileResource getFileHandler() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:3c1f634:     public CompatibilitySpace getLockSpace() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public StaticCompiledOpenConglomInfo getStaticCompiledConglomInfo(
1:a96a2ab:             long conglomId) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public DynamicCompiledOpenConglomInfo getDynamicCompiledConglomInfo(
1:a96a2ab:             long conglomId) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long[] getCacheStats(String cacheName) {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void resetCacheStats(String cacheName) {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void logAndDo(Loggable operation) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public long createSort(Properties implParameters,
1:a96a2ab:             DataValueDescriptor[] template, ColumnOrdering[] columnOrdering,
1:a96a2ab:             SortObserver sortObserver, boolean alreadyInOrder,
1:a96a2ab:             long estimatedRows, int estimatedRowSize) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void dropSort(long sortid) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public SortController openSort(long id) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:402f3c2:     public SortCostController openSortCostController()
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public RowLocationRetRowSource openSortRowSource(long id)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public ScanController openSortScan(long id, boolean hold)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean anyoneBlocked() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void abort() throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void commit() throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public DatabaseInstant commitNoSync(int commitflag)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void destroy() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public ContextManager getContextManager() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public String getTransactionIdString() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public String getActiveStateTxIdString() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean isIdle() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean isGlobal() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean isPristine() {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public int releaseSavePoint(String name, Object kindOfSavepoint)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public int rollbackToSavePoint(String name, boolean close_controllers,
1:a96a2ab:             Object kindOfSavepoint) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public int setSavePoint(String name, Object kindOfSavepoint)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return 0;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public Object createXATransactionFromLocalTransaction(int format_id,
1:a96a2ab:             byte[] global_id, byte[] branch_id) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public Serializable getProperty(String key) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public Serializable getPropertyDefault(String key) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public boolean propertyDefaultIsVisible(String key)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return false;
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void setProperty(String key, Serializable value,
1:a96a2ab:             boolean dbOnlyProperty) throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public void setPropertyDefault(String key, Serializable value)
1:a96a2ab:             throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab: 
1:a96a2ab:     }
1:a96a2ab: 
1:a96a2ab:     public Properties getProperties() throws StandardException {
1:cc23071:         // Auto-generated method stub
1:a96a2ab:         return null;
1:a96a2ab:     }
1:722a889:     public DataValueFactory getDataValueFactory() throws StandardException {
1:cc23071:         // Auto-generated method stub
1:722a889:         return(null);
1:722a889:     }
1:a96a2ab: 
1:85e3e12:     public void setNoLockWait(boolean noWait) {
1:cc23071:         // Auto-generated method stub
1:85e3e12:     }
1:85e3e12: 
1:a96a2ab: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:e81e52c
/////////////////////////////////////////////////////////////////////////
1:             boolean keepAfterCommit,
1:             boolean includeRowLocations)
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:402f3c2
/////////////////////////////////////////////////////////////////////////
1:     public SortCostController openSortCostController()
commit:85e3e12
/////////////////////////////////////////////////////////////////////////
1:     public void setNoLockWait(boolean noWait) {
0:         // TODO Auto-generated method stub
1:     }
1: 
commit:3c1f634
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.services.locks.CompatibilitySpace;
/////////////////////////////////////////////////////////////////////////
1:     public CompatibilitySpace getLockSpace() {
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:ceaf7df
/////////////////////////////////////////////////////////////////////////
1:     public TransactionController startNestedUserTransaction(
1:     boolean readOnly,
1:     boolean flush_log_on_xact_end)
commit:722a889
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.types.DataValueFactory;
/////////////////////////////////////////////////////////////////////////
1:     public DataValueFactory getDataValueFactory() throws StandardException {
0:         // TODO Auto-generated method stub
1:         return(null);
1:     }
commit:b61f876
/////////////////////////////////////////////////////////////////////////
1:             int[] collation_ids,
/////////////////////////////////////////////////////////////////////////
1:             int[] collation_ids,
/////////////////////////////////////////////////////////////////////////
1:             ColumnOrdering[] columnOrder, 
1:             int[] collation_ids,
1:             Properties properties,
/////////////////////////////////////////////////////////////////////////
1:             Storable template_column, int collation_id) throws StandardException {
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:cc23071
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
1:         // Auto-generated method stub
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1e762f5
/////////////////////////////////////////////////////////////////////////
1:             boolean collect_runtimestats, boolean skipNullKeyColumns,
0:             boolean keepAfterCommit)
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:a96a2ab
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.impl.storeless.NoOpTransaction
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derby.impl.storeless;
1: 
1: import java.io.Serializable;
1: import java.util.Properties;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.services.context.ContextManager;
1: import org.apache.derby.iapi.services.io.FormatableBitSet;
1: import org.apache.derby.iapi.services.io.Storable;
1: import org.apache.derby.iapi.store.access.AccessFactory;
1: import org.apache.derby.iapi.store.access.BackingStoreHashtable;
1: import org.apache.derby.iapi.store.access.ColumnOrdering;
1: import org.apache.derby.iapi.store.access.ConglomerateController;
1: import org.apache.derby.iapi.store.access.DatabaseInstant;
1: import org.apache.derby.iapi.store.access.DynamicCompiledOpenConglomInfo;
1: import org.apache.derby.iapi.store.access.FileResource;
1: import org.apache.derby.iapi.store.access.GroupFetchScanController;
1: import org.apache.derby.iapi.store.access.Qualifier;
1: import org.apache.derby.iapi.store.access.RowLocationRetRowSource;
1: import org.apache.derby.iapi.store.access.ScanController;
1: import org.apache.derby.iapi.store.access.SortController;
1: import org.apache.derby.iapi.store.access.SortCostController;
1: import org.apache.derby.iapi.store.access.SortObserver;
1: import org.apache.derby.iapi.store.access.StaticCompiledOpenConglomInfo;
1: import org.apache.derby.iapi.store.access.StoreCostController;
1: import org.apache.derby.iapi.store.access.TransactionController;
1: import org.apache.derby.iapi.store.raw.Loggable;
1: import org.apache.derby.iapi.types.DataValueDescriptor;
1: 
1: /**
1:  * A TransactionController that does nothing.
1:  * This allows the existing transaction aware language
1:  * code to remain unchanged while not supporting transactions
1:  * for the storeless engine.
1:  */
1: class NoOpTransaction implements TransactionController {
1: 
1:     public AccessFactory getAccessManager() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public boolean conglomerateExists(long conglomId) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public long createConglomerate(String implementation,
1:             DataValueDescriptor[] template, ColumnOrdering[] columnOrder,
1:             Properties properties, int temporaryFlag) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public long createAndLoadConglomerate(String implementation,
1:             DataValueDescriptor[] template, ColumnOrdering[] columnOrder,
1:             Properties properties, int temporaryFlag,
1:             RowLocationRetRowSource rowSource, long[] rowCount)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public long recreateAndLoadConglomerate(String implementation,
1:             boolean recreate_ifempty, DataValueDescriptor[] template,
0:             ColumnOrdering[] columnOrder, Properties properties,
1:             int temporaryFlag, long orig_conglomId,
1:             RowLocationRetRowSource rowSource, long[] rowCount)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public void addColumnToConglomerate(long conglomId, int column_id,
0:             Storable template_column) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public void dropConglomerate(long conglomId) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public long findConglomid(long containerid) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public long findContainerid(long conglomid) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
0:     public TransactionController startNestedUserTransaction(boolean readOnly)
1:             throws StandardException {
1:         return this;
1:     }
1: 
1:     public Properties getUserCreateConglomPropList() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public ConglomerateController openConglomerate(long conglomId,
1:             boolean hold, int open_mode, int lock_level, int isolation_level)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public ConglomerateController openCompiledConglomerate(boolean hold,
1:             int open_mode, int lock_level, int isolation_level,
1:             StaticCompiledOpenConglomInfo static_info,
1:             DynamicCompiledOpenConglomInfo dynamic_info)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public BackingStoreHashtable createBackingStoreHashtableFromScan(
1:             long conglomId, int open_mode, int lock_level, int isolation_level,
1:             FormatableBitSet scanColumnList,
1:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:             int stopSearchOperator, long max_rowcnt, int[] key_column_numbers,
1:             boolean remove_duplicates, long estimated_rowcnt,
1:             long max_inmemory_rowcnt, int initialCapacity, float loadFactor,
0:             boolean collect_runtimestats, boolean skipNullKeyColumns)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public ScanController openScan(long conglomId, boolean hold, int open_mode,
1:             int lock_level, int isolation_level,
1:             FormatableBitSet scanColumnList,
1:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:             int stopSearchOperator) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public ScanController openCompiledScan(boolean hold, int open_mode,
1:             int lock_level, int isolation_level,
1:             FormatableBitSet scanColumnList,
1:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:             int stopSearchOperator, StaticCompiledOpenConglomInfo static_info,
1:             DynamicCompiledOpenConglomInfo dynamic_info)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public GroupFetchScanController openGroupFetchScan(long conglomId,
1:             boolean hold, int open_mode, int lock_level, int isolation_level,
1:             FormatableBitSet scanColumnList,
1:             DataValueDescriptor[] startKeyValue, int startSearchOperator,
1:             Qualifier[][] qualifier, DataValueDescriptor[] stopKeyValue,
1:             int stopSearchOperator) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public GroupFetchScanController defragmentConglomerate(long conglomId,
1:             boolean online, boolean hold, int open_mode, int lock_level,
1:             int isolation_level) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public void purgeConglomerate(long conglomId) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public void compressConglomerate(long conglomId) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public boolean fetchMaxOnBtree(long conglomId, int open_mode,
1:             int lock_level, int isolation_level,
1:             FormatableBitSet scanColumnList, DataValueDescriptor[] fetchRow)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public StoreCostController openStoreCost(long conglomId)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public int countOpens(int which_to_count) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public String debugOpened() throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public FileResource getFileHandler() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
0:     public Object getLockObject() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public StaticCompiledOpenConglomInfo getStaticCompiledConglomInfo(
1:             long conglomId) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public DynamicCompiledOpenConglomInfo getDynamicCompiledConglomInfo(
1:             long conglomId) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public long[] getCacheStats(String cacheName) {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public void resetCacheStats(String cacheName) {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public void logAndDo(Loggable operation) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public long createSort(Properties implParameters,
1:             DataValueDescriptor[] template, ColumnOrdering[] columnOrdering,
1:             SortObserver sortObserver, boolean alreadyInOrder,
1:             long estimatedRows, int estimatedRowSize) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public void dropSort(long sortid) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public SortController openSort(long id) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
0:     public SortCostController openSortCostController(Properties implParameters)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public RowLocationRetRowSource openSortRowSource(long id)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public ScanController openSortScan(long id, boolean hold)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public boolean anyoneBlocked() {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public void abort() throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public void commit() throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public DatabaseInstant commitNoSync(int commitflag)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public void destroy() {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public ContextManager getContextManager() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public String getTransactionIdString() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public String getActiveStateTxIdString() {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public boolean isIdle() {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public boolean isGlobal() {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public boolean isPristine() {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public int releaseSavePoint(String name, Object kindOfSavepoint)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public int rollbackToSavePoint(String name, boolean close_controllers,
1:             Object kindOfSavepoint) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public int setSavePoint(String name, Object kindOfSavepoint)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return 0;
1:     }
1: 
1:     public Object createXATransactionFromLocalTransaction(int format_id,
1:             byte[] global_id, byte[] branch_id) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public Serializable getProperty(String key) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public Serializable getPropertyDefault(String key) throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1:     public boolean propertyDefaultIsVisible(String key)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1:         return false;
1:     }
1: 
1:     public void setProperty(String key, Serializable value,
1:             boolean dbOnlyProperty) throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public void setPropertyDefault(String key, Serializable value)
1:             throws StandardException {
0:         // TODO Auto-generated method stub
1: 
1:     }
1: 
1:     public Properties getProperties() throws StandardException {
0:         // TODO Auto-generated method stub
1:         return null;
1:     }
1: 
1: }
============================================================================