1:6c42ee6: /*
1:6384512:  
1:6384512:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectSimpleDSTest
1:6384512:  
1:6384512:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6384512:    contributor license agreements.  See the NOTICE file distributed with
1:6384512:    this work for additional information regarding copyright ownership.
1:6384512:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6384512:    (the "License"); you may not use this file except in compliance with
1:6384512:    the License.  You may obtain a copy of the License at
1:6384512:  
1:6384512:       http://www.apache.org/licenses/LICENSE-2.0
1:6384512:  
1:6384512:    Unless required by applicable law or agreed to in writing, software
1:6384512:    distributed under the License is distributed on an "AS IS" BASIS,
1:6384512:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6384512:    See the License for the specific language governing permissions and
1:6384512:    limitations under the License.
1:6384512:  
2:6384512:  */
1:6384512: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1:6384512: 
1:6384512: import java.io.File;
1:6384512: import java.sql.Connection;
1:6384512: import java.sql.SQLException;
1:6384512: 
1:6384512: import javax.sql.DataSource;
1:6384512: 
1:6384512: import junit.framework.Test;
1:6384512: 
1:6384512: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:6384512: import org.apache.derbyTesting.junit.JDBCDataSource;
1:6384512: import org.apache.derbyTesting.junit.TestConfiguration;
1:6384512: 
1:6384512: public class InternationalConnectSimpleDSTest extends BaseJDBCTestCase {
1:6384512: 
1:6384512:     /**
1:6384512:      * Test chinese characters in 
1:6384512:      * - Database Name
1:6384512:      * - User 
1:6384512:      * - Password
1:6384512:      * This test runs with J2ME and tests only simple DataSource.
1:6384512:      * DriverManager, XADataSource and ConnectionPoolDataSource are tested with
1:6384512:      * InternationalConnectTests which runs on J2SE.
1:6384512:      */
1:6384512:   
1:6384512:     public InternationalConnectSimpleDSTest(String name) {
1:6384512:         super(name);
3:6384512:     }
1:6384512: 
1:6384512:     /**
1:6384512:      * Test Connection for chinese database name, user and password.
1:6384512:      * @throws SQLException
1:6c42ee6:      */
1:6384512:     public void testSimpleDSConnect() throws SQLException {
1:6384512:         // Test chinese database name.
1:6384512:         DataSource ds = JDBCDataSource.getDataSource();
1:6384512:         JDBCDataSource.setBeanProperty(ds, "databaseName", "\u4e10");
1:6384512:         JDBCDataSource.setBeanProperty(ds, "createDatabase", "create");        
2:6384512:         try {
1:6384512:             Connection conn = ds.getConnection();
1:6384512:             conn.close();
1:6384512:         } catch (SQLException se ) {
1:6384512:             if (usingEmbedded())
1:6384512:                 throw se;
1:6384512:             else
1:6384512:                 assertSQLState("22005",se);
1:6c42ee6:         }   
1:6384512:         // Chinese user
1:6384512:         try {
1:6384512:             JDBCDataSource.setBeanProperty(ds, "user", "\u4e10");
1:6384512:             Connection conn = ds.getConnection();
1:6384512:             conn.close();
1:6384512:         } catch (SQLException se ) {
1:6384512:             if (usingEmbedded())
1:6384512:                 throw se;
1:6384512:             else
1:6384512:                 assertSQLState("22005",se);
1:6384512:         } 
1:6384512:         // Chinese password
1:6384512:         try {
1:6384512:             JDBCDataSource.setBeanProperty(ds, "password", "\u4e10");            
1:6384512:             Connection conn = ds.getConnection();
1:6384512:             conn.close();
1:6384512:         } catch (SQLException se ) {
1:6384512:             if (usingEmbedded())
1:6384512:                 throw se;
1:6384512:             else
1:6384512:                 assertSQLState("22005",se);
1:6384512:         } 
1:6384512:     }
1:6384512:     
1:6384512:     public void tearDown() {
1:58355bb:     	// Shutdown Derby before trying to remove the db.
1:58355bb:     	// Because of  DERBY-4149, just shutting down the database
1:58355bb:     	// is not good enough because it will fail and the 
1:58355bb:     	// directory won't be removed.    	
1:58355bb:         TestConfiguration.getCurrent().shutdownEngine();    	               
1:6384512:         removeDirectory(getSystemProperty("derby.system.home") +
1:6384512:                 File.separator + "\u4e10");
1:6384512:     }
1:6384512:    
1:6384512:     public static Test suite() {
1:6384512:         return TestConfiguration.defaultSuite(InternationalConnectSimpleDSTest.class);
1:6384512:     }
1:6384512:     
1:6384512: }
============================================================================
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:cd5b86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:6c42ee6
/////////////////////////////////////////////////////////////////////////
0: import junit.framework.TestSuite;
/////////////////////////////////////////////////////////////////////////
1:         /*
0:          * IBM's jvms on iseries have a bug that causes this fixture to fail
0:          * and leave behind a hard-to-remove file, see DERBY-4149.
0:          * Skip on that O.S.
1:          */
0:         if (getSystemProperty("os.name").startsWith("OS/400")) {
0:             return(new TestSuite ("emtpy InternationalConnectSimpleDSTest"));
1:         }
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:58355bb
/////////////////////////////////////////////////////////////////////////
1:     	// Shutdown Derby before trying to remove the db.
1:     	// Because of  DERBY-4149, just shutting down the database
1:     	// is not good enough because it will fail and the 
1:     	// directory won't be removed.    	
1:         TestConfiguration.getCurrent().shutdownEngine();    	               
commit:6384512
/////////////////////////////////////////////////////////////////////////
0: /*
1:  
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.InternationalConnectSimpleDSTest
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1: 
1: import java.io.File;
1: import java.sql.Connection;
1: import java.sql.SQLException;
1: 
1: import javax.sql.DataSource;
1: 
1: import junit.framework.Test;
1: 
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.JDBCDataSource;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class InternationalConnectSimpleDSTest extends BaseJDBCTestCase {
1: 
1:     /**
1:      * Test chinese characters in 
1:      * - Database Name
1:      * - User 
1:      * - Password
1:      * This test runs with J2ME and tests only simple DataSource.
1:      * DriverManager, XADataSource and ConnectionPoolDataSource are tested with
1:      * InternationalConnectTests which runs on J2SE.
1:      */
1:   
1:     public InternationalConnectSimpleDSTest(String name) {
1:         super(name);
1:     }
1: 
1:     /**
1:      * Test Connection for chinese database name, user and password.
1:      * @throws SQLException
1:      */
1:     public void testSimpleDSConnect() throws SQLException {
1:         // Test chinese database name.
1:         DataSource ds = JDBCDataSource.getDataSource();
1:         JDBCDataSource.setBeanProperty(ds, "databaseName", "\u4e10");
1:         JDBCDataSource.setBeanProperty(ds, "createDatabase", "create");        
1:         try {
1:             Connection conn = ds.getConnection();
1:             conn.close();
1:         } catch (SQLException se ) {
1:             if (usingEmbedded())
1:                 throw se;
1:             else
1:                 assertSQLState("22005",se);
1:         }   
1:         // Chinese user
1:         try {
1:             JDBCDataSource.setBeanProperty(ds, "user", "\u4e10");
1:             Connection conn = ds.getConnection();
1:             conn.close();
1:         } catch (SQLException se ) {
1:             if (usingEmbedded())
1:                 throw se;
1:             else
1:                 assertSQLState("22005",se);
1:         } 
1:         // Chinese password
1:         try {
1:             JDBCDataSource.setBeanProperty(ds, "password", "\u4e10");            
1:             Connection conn = ds.getConnection();
1:             conn.close();
1:         } catch (SQLException se ) {
1:             if (usingEmbedded())
1:                 throw se;
1:             else
1:                 assertSQLState("22005",se);
1:         } 
1:     }
1:     
1:     public void tearDown() {
0:         DataSource ds = JDBCDataSource.getDataSource("\u4e10");
0:         JDBCDataSource.setBeanProperty(ds, "shutdownDatabase", "shutdown");
1:         try {
0:             ds.getConnection();
0:         } catch (SQLException se) {
0:             // ignore shutdown exception 
1:         }
1:         removeDirectory(getSystemProperty("derby.system.home") +
1:                 File.separator + "\u4e10");
1:     }
1:    
1:     public static Test suite() {
1:         return TestConfiguration.defaultSuite(InternationalConnectSimpleDSTest.class);
1:     }
1:     
1: }
============================================================================