1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.sql.compile.Parser
1:7ecc1f2: 
1:d4580ab:    Licensed to the Apache Software Foundation (ASF) under one or more
1:d4580ab:    contributor license agreements.  See the NOTICE file distributed with
1:d4580ab:    this work for additional information regarding copyright ownership.
1:d4580ab:    The ASF licenses this file to you under the Apache License, Version 2.0
1:d4580ab:    (the "License"); you may not use this file except in compliance with
1:d4580ab:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
3:eac0369: 
3:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.sql.compile;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * The Parser interface is intended to work with Jack-generated parsers (now JavaCC).
1:eac0369:  * We will specify "STATIC=false" when building Jack parsers - this specifies
1:eac0369:  * that the generated classes will not be static, which will allow there to be
1:eac0369:  * more than one parser (this is necessary in a multi-threaded server).
1:eac0369:  * Non-static parsers do not have to be re-initialized every time they are
1:eac0369:  * used (unlike static parsers, for which one must call ReInit() between calls
1:eac0369:  * to the parser).
1:eac0369:  *
1:eac0369:  */
1:eac0369: 
1:eac0369: 
1:eac0369: public interface Parser
1:eac0369: {
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	 * Parses the given statement and returns a query tree. The query tree
1:eac0369: 	 * at this point is a simple syntactic translation of the statement.
1:eac0369: 	 * No binding will have taken place, and no decisions will have been
1:eac0369: 	 * made regarding processing strategy.
1:eac0369: 	 *
1:6b50965: 	 * @param statementSQLText	The Statement to parse.
1:eac0369: 	 * @param paramDefaults	Parameter defaults
1:eac0369: 	 * @return	A new QueryTree representing the syntax of the Statement
1:eac0369: 	 *
1:eac0369: 	 * @exception StandardException		Thrown on failure
1:eac0369: 	 */
1:70a4f2d: 	public Visitable parseStatement(String statementSQLText,
1:eac0369: 		Object[] paramDefaults) 
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: 
1:70a4f2d: 	public Visitable parseStatement(String statementSQLText)
1:eac0369: 		throws StandardException;
1:eac0369: 
1:d9878ca:     /**
1:d9878ca:      * Parse an SQL fragment that represents a {@code <search condition>}.
1:d9878ca:      *
1:d9878ca:      * @param sqlFragment the SQL fragment to parse
1:d9878ca:      * @return a parse tree representing the search condition
1:d9878ca:      * @throws StandardException if the SQL fragment could not be parsed
1:d9878ca:      */
1:d9878ca:     public Visitable parseSearchCondition(String sqlFragment)
1:d9878ca:         throws StandardException;
1:d9878ca: 
1:eac0369: 	/**
1:eac0369: 	 * Returns the current SQL text string that is being parsed.
1:eac0369: 	 *
1:eac0369: 	 * @return	Current SQL text string.
1:eac0369: 	 *
1:eac0369: 	 */
1:eac0369: 	public	String		getSQLtext();
1:eac0369: 
1:eac0369: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:d9878ca
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Parse an SQL fragment that represents a {@code <search condition>}.
1:      *
1:      * @param sqlFragment the SQL fragment to parse
1:      * @return a parse tree representing the search condition
1:      * @throws StandardException if the SQL fragment could not be parsed
1:      */
1:     public Visitable parseSearchCondition(String sqlFragment)
1:         throws StandardException;
1: 
commit:70a4f2d
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 	public Visitable parseStatement(String statementSQLText,
1: 	public Visitable parseStatement(String statementSQLText)
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:be0b54f
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.impl.sql.compile.StatementNode;
/////////////////////////////////////////////////////////////////////////
0: 	public StatementNode	parseStatement(String statementSQLText,
0: 	public StatementNode parseStatement(String statementSQLText)
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.sql.compile.Parser
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql.compile
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql.compile;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
0: /* Strictly speaking we shouldn't import classes under the impl hierarchy here
0:  * but this is work in progress.
0:  * manish - Wed Mar 28 13:05:19 PST 2001
1:  */
0: import	org.apache.derby.impl.sql.compile.QueryTreeNode;
1: 
1: /**
1:  * The Parser interface is intended to work with Jack-generated parsers (now JavaCC).
1:  * We will specify "STATIC=false" when building Jack parsers - this specifies
1:  * that the generated classes will not be static, which will allow there to be
1:  * more than one parser (this is necessary in a multi-threaded server).
1:  * Non-static parsers do not have to be re-initialized every time they are
1:  * used (unlike static parsers, for which one must call ReInit() between calls
1:  * to the parser).
1:  *
0:  * @author Jeff Lichtman
1:  */
1: 
1: 
1: public interface Parser
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 
1: 	/**
1: 	 * Parses the given statement and returns a query tree. The query tree
1: 	 * at this point is a simple syntactic translation of the statement.
1: 	 * No binding will have taken place, and no decisions will have been
1: 	 * made regarding processing strategy.
1: 	 *
0: 	 * @param statement	The Statement to parse.
1: 	 * @param paramDefaults	Parameter defaults
1: 	 * @return	A new QueryTree representing the syntax of the Statement
1: 	 *
1: 	 * @exception StandardException		Thrown on failure
1: 	 */
0: 	public QueryTreeNode	parseStatement(String statementSQLText,
1: 		Object[] paramDefaults) 
1: 		throws StandardException;
1: 
1: 
0: 	public QueryTreeNode parseStatement(String statementSQLText)
1: 		throws StandardException;
1: 
1: 	/**
1: 	 * Returns the current SQL text string that is being parsed.
1: 	 *
1: 	 * @return	Current SQL text string.
1: 	 *
1: 	 */
1: 	public	String		getSQLtext();
1: 
1: }
author:David Van Couvering
-------------------------------------------------------------------------------
commit:d4580ab
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:6b50965
/////////////////////////////////////////////////////////////////////////
1: 	 * @param statementSQLText	The Statement to parse.
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql.compile
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.sql.compile;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: /* Strictly speaking we shouldn't import classes under the impl hierarchy here
0:  * but this is work in progress.
0:  * manish - Wed Mar 28 13:05:19 PST 2001
0:  */
0: import	org.apache.derby.impl.sql.compile.QueryTreeNode;
0: 
0: /**
0:  * The Parser interface is intended to work with Jack-generated parsers (now JavaCC).
0:  * We will specify "STATIC=false" when building Jack parsers - this specifies
0:  * that the generated classes will not be static, which will allow there to be
0:  * more than one parser (this is necessary in a multi-threaded server).
0:  * Non-static parsers do not have to be re-initialized every time they are
0:  * used (unlike static parsers, for which one must call ReInit() between calls
0:  * to the parser).
0:  *
0:  * @author Jeff Lichtman
0:  */
0: 
0: 
0: public interface Parser
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 
0: 	/**
0: 	 * Parses the given statement and returns a query tree. The query tree
0: 	 * at this point is a simple syntactic translation of the statement.
0: 	 * No binding will have taken place, and no decisions will have been
0: 	 * made regarding processing strategy.
0: 	 *
0: 	 * @param statement	The Statement to parse.
0: 	 * @param paramDefaults	Parameter defaults
0: 	 * @return	A new QueryTree representing the syntax of the Statement
0: 	 *
0: 	 * @exception StandardException		Thrown on failure
0: 	 */
0: 	public QueryTreeNode	parseStatement(String statementSQLText,
0: 		Object[] paramDefaults) 
0: 		throws StandardException;
0: 
0: 
0: 	public QueryTreeNode parseStatement(String statementSQLText)
0: 		throws StandardException;
0: 
0: 	/**
0: 	 * Returns the current SQL text string that is being parsed.
0: 	 *
0: 	 * @return	Current SQL text string.
0: 	 *
0: 	 */
0: 	public	String		getSQLtext();
0: 
0: }
============================================================================