1:eac0369: /*
1:345de35: 
1:345de35:    Derby - Class org.apache.derby.catalog.DependableFinder
1:345de35: 
1:2f36947:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2f36947:    contributor license agreements.  See the NOTICE file distributed with
1:2f36947:    this work for additional information regarding copyright ownership.
1:2f36947:    The ASF licenses this file to You under the Apache License, Version 2.0
1:2f36947:    (the "License"); you may not use this file except in compliance with
1:2f36947:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
6:eac0369: 
4:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.catalog;
1:eac0369: 
1:2bb479f: import org.apache.derby.iapi.error.StandardException;
1:2bb479f: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
1:2bb479f: 
4:eac0369: /**
1:eac0369: 	
1:eac0369:   A DependableFinder is an object that can find an in-memory
1:eac0369:   Dependable, given the Dependable's ID.
1:eac0369:   
1:eac0369:   
1:eac0369:   <P>
1:eac0369:   The DependableFinder is able to write itself to disk and,
1:eac0369:   once read back into memory, locate the in-memory Dependable that it
1:eac0369:   represents.
1:eac0369: 
1:eac0369:   <P>
1:eac0369:   DependableFinder objects are stored in SYS.SYSDEPENDS to record
1:eac0369:   dependencies between database objects.
1:eac0369:   */
1:eac0369: public interface DependableFinder
1:eac0369: {
1:eac0369: 	/**
2:eac0369: 	  *	Get the in-memory object associated with the passed-in object ID.
5:eac0369: 	  *
1:2bb479f:       * @param dd DataDictionary to use for lookup.
1:eac0369: 	  *	@param	dependableObjectID the ID of a Dependable. Used to locate that Dependable.
1:eac0369: 	  *
2:eac0369: 	  *	@return	the associated Dependable
1:2bb479f: 	  * @exception StandardException		thrown if the object cannot be found or on error o
1:eac0369: 	  */
1:2bb479f:     public	Dependable	getDependable(DataDictionary dd,
1:2bb479f:             UUID dependableObjectID) throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  * The name of the class of Dependables as a "SQL Object" which this
1:eac0369: 	  * Finder can find.
1:cacb73f: 	  * This is a value like "Table" or "View".
1:eac0369: 	  *	Every DependableFinder can find some class of Dependables. 
1:eac0369: 	  *
1:eac0369: 	  *
1:eac0369: 	  *	@return	String type of the "SQL Object" which this Finder can find.
1:eac0369: 	  * @see Dependable
1:eac0369: 	  */
1:eac0369: 	public	String	getSQLObjectType();
1:eac0369: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:801cf0d
/////////////////////////////////////////////////////////////////////////
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:2bb479f
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
1: 
/////////////////////////////////////////////////////////////////////////
1:       * @param dd DataDictionary to use for lookup.
1: 	  * @exception StandardException		thrown if the object cannot be found or on error o
1:     public	Dependable	getDependable(DataDictionary dd,
1:             UUID dependableObjectID) throws StandardException;
/////////////////////////////////////////////////////////////////////////
commit:cacb73f
/////////////////////////////////////////////////////////////////////////
1: 	  * This is a value like "Table" or "View".
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.catalog.DependableFinder
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:4dede3b
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.catalog
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.catalog;
1: 
0: import java.sql.SQLException;
1: 
1: /**
1: 	
1:   A DependableFinder is an object that can find an in-memory
1:   Dependable, given the Dependable's ID.
1:   
1:   
1:   <P>
1:   The DependableFinder is able to write itself to disk and,
1:   once read back into memory, locate the in-memory Dependable that it
1:   represents.
1: 
1:   <P>
1:   DependableFinder objects are stored in SYS.SYSDEPENDS to record
1:   dependencies between database objects.
1:   */
1: public interface DependableFinder
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/**
1: 	  *	Get the in-memory object associated with the passed-in object ID.
1: 	  *
1: 	  *	@param	dependableObjectID the ID of a Dependable. Used to locate that Dependable.
1: 	  *
1: 	  *	@return	the associated Dependable
0: 	  * @exception SQLException		thrown on error
1: 	  */
0: 	public	Dependable	getDependable(UUID dependableObjectID) throws SQLException;
1: 
1: 	/**
1: 	  *	Get the in-memory object associated with the passed-in object ID.
1: 	  *
0: 	  *	@param	dependableObjectID the UUID of the Dependable as a String.
0: 	  * Used to locate that Dependable
1: 	  *
1: 	  *	@return	the associated Dependable
0: 	  * @exception SQLException		thrown on error
1: 	  */
0: 	public	Dependable	getDependable(String dependableObjectID) throws SQLException;
1: 
1: 	/**
1: 	  * The name of the class of Dependables as a "SQL Object" which this
1: 	  * Finder can find.
0: 	  * This is a value like "Table", "View", or "Publication".
1: 	  *	Every DependableFinder can find some class of Dependables. 
1: 	  *
1: 	  *
1: 	  *	@return	String type of the "SQL Object" which this Finder can find.
1: 	  * @see Dependable
1: 	  */
1: 	public	String	getSQLObjectType();
1: 
1: 	/**
0: 	  * Get the name of the SQL Object that corresponds to the specified 
0: 	  * UUID String. For example, if getSQLObjectType() returns "Table", 
0: 	  * this will return the table name.
1: 	  *
0: 	  *	@param	idString the UUID String of a Dependable. Used to locate that Dependable.
1: 	  *
0: 	  *	@return	String		Name of the associated Dependable
0: 	  * @exception SQLException		thrown on error
1: 	  */
0: 	public	String	getSQLObjectName(String idString) throws SQLException;
1: 
1: }
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:2f36947
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.catalog
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.catalog;
0: 
0: import java.sql.SQLException;
0: 
0: /**
0: 	
0:   A DependableFinder is an object that can find an in-memory
0:   Dependable, given the Dependable's ID.
0:   
0:   
0:   <P>
0:   The DependableFinder is able to write itself to disk and,
0:   once read back into memory, locate the in-memory Dependable that it
0:   represents.
0: 
0:   <P>
0:   DependableFinder objects are stored in SYS.SYSDEPENDS to record
0:   dependencies between database objects.
0:   */
0: public interface DependableFinder
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/**
0: 	  *	Get the in-memory object associated with the passed-in object ID.
0: 	  *
0: 	  *	@param	dependableObjectID the ID of a Dependable. Used to locate that Dependable.
0: 	  *
0: 	  *	@return	the associated Dependable
0: 	  * @exception SQLException		thrown on error
0: 	  */
0: 	public	Dependable	getDependable(UUID dependableObjectID) throws SQLException;
0: 
0: 	/**
0: 	  *	Get the in-memory object associated with the passed-in object ID.
0: 	  *
0: 	  *	@param	dependableObjectID the UUID of the Dependable as a String.
0: 	  * Used to locate that Dependable
0: 	  *
0: 	  *	@return	the associated Dependable
0: 	  * @exception SQLException		thrown on error
0: 	  */
0: 	public	Dependable	getDependable(String dependableObjectID) throws SQLException;
0: 
0: 	/**
0: 	  * The name of the class of Dependables as a "SQL Object" which this
0: 	  * Finder can find.
0: 	  * This is a value like "Table", "View", or "Publication".
0: 	  *	Every DependableFinder can find some class of Dependables. 
0: 	  *
0: 	  *
0: 	  *	@return	String type of the "SQL Object" which this Finder can find.
0: 	  * @see Dependable
0: 	  */
0: 	public	String	getSQLObjectType();
0: 
0: 	/**
0: 	  * Get the name of the SQL Object that corresponds to the specified 
0: 	  * UUID String. For example, if getSQLObjectType() returns "Table", 
0: 	  * this will return the table name.
0: 	  *
0: 	  *	@param	idString the UUID String of a Dependable. Used to locate that Dependable.
0: 	  *
0: 	  *	@return	String		Name of the associated Dependable
0: 	  * @exception SQLException		thrown on error
0: 	  */
0: 	public	String	getSQLObjectName(String idString) throws SQLException;
0: 
0: }
============================================================================