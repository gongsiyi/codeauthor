1:eac0369: /*
3:eac0369: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.classfile.VMOpcode
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.services.classfile;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * This contains all the opcodes for the JVM
1:eac0369:  * as defined in The Java Virtual Machine Specification.
1:eac0369:  *
1:eac0369:  * REMIND: might want a debugging version of this,
1:eac0369:  * that stored the stack depth and operand expectations.
1:eac0369:  */
1:5d24b1a: public interface VMOpcode {
1:eac0369:     short BAD = -999; // used in mapping arrays to say "don't do that"
1:eac0369:     short NOP = 0;
1:eac0369:     short ACONST_NULL = 1;
1:eac0369:     short ICONST_M1 = 2;
1:eac0369:     short ICONST_0 = 3;
1:eac0369:     short ICONST_1 = 4;
1:eac0369:     short ICONST_2 = 5;
1:eac0369:     short ICONST_3 = 6;
1:eac0369:     short ICONST_4 = 7;
1:eac0369:     short ICONST_5 = 8;
1:eac0369:     short LCONST_0 = 9;
1:eac0369:     short LCONST_1 = 10;
1:eac0369:     short FCONST_0 = 11;
1:eac0369:     short FCONST_1 = 12;
1:eac0369:     short FCONST_2 = 13;
1:eac0369:     short DCONST_0 = 14;
1:eac0369:     short DCONST_1 = 15;
1:eac0369:     short BIPUSH = 16;
1:eac0369:     short SIPUSH = 17;
1:eac0369:     short LDC = 18;
1:eac0369:     short LDC_W = 19;
1:eac0369:     short LDC2_W = 20;
1:eac0369:     short ILOAD = 21;
1:eac0369:     short LLOAD = 22;
1:eac0369:     short FLOAD = 23;
1:eac0369:     short DLOAD = 24;
1:eac0369:     short ALOAD = 25;
1:eac0369:     short ILOAD_0 = 26;
1:eac0369:     short ILOAD_1 = 27;
1:eac0369:     short ILOAD_2 = 28;
1:eac0369:     short ILOAD_3 = 29;
1:eac0369:     short LLOAD_0 = 30;
1:eac0369:     short LLOAD_1 = 31;
1:eac0369:     short LLOAD_2 = 32;
1:eac0369:     short LLOAD_3 = 33;
1:eac0369:     short FLOAD_0 = 34;
1:eac0369:     short FLOAD_1 = 35;
1:eac0369:     short FLOAD_2 = 36;
1:eac0369:     short FLOAD_3 = 37;
1:eac0369:     short DLOAD_0 = 38;
1:eac0369:     short DLOAD_1 = 39;
1:eac0369:     short DLOAD_2 = 40;
1:eac0369:     short DLOAD_3 = 41;
1:eac0369:     short ALOAD_0 = 42;
1:eac0369:     short ALOAD_1 = 43;
1:eac0369:     short ALOAD_2 = 44;
1:eac0369:     short ALOAD_3 = 45;
1:eac0369:     short IALOAD = 46;
1:eac0369:     short LALOAD = 47;
1:eac0369:     short FALOAD = 48;
1:eac0369:     short DALOAD = 49;
1:eac0369:     short AALOAD = 50;
1:eac0369:     short BALOAD = 51;
1:eac0369:     short CALOAD = 52;
1:eac0369:     short SALOAD = 53;
1:eac0369:     short ISTORE = 54;
1:eac0369:     short LSTORE = 55;
1:eac0369:     short FSTORE = 56;
1:eac0369:     short DSTORE = 57;
1:eac0369:     short ASTORE = 58;
1:eac0369:     short ISTORE_0 = 59;
1:eac0369:     short ISTORE_1 = 60;
1:eac0369:     short ISTORE_2 = 61;
1:eac0369:     short ISTORE_3 = 62;
1:eac0369:     short LSTORE_0 = 63;
1:eac0369:     short LSTORE_1 = 64;
1:eac0369:     short LSTORE_2 = 65;
1:eac0369:     short LSTORE_3 = 66;
1:eac0369:     short FSTORE_0 = 67;
1:eac0369:     short FSTORE_1 = 68;
1:eac0369:     short FSTORE_2 = 69;
1:eac0369:     short FSTORE_3 = 70;
1:eac0369:     short DSTORE_0 = 71;
1:eac0369:     short DSTORE_1 = 72;
1:eac0369:     short DSTORE_2 = 73;
1:eac0369:     short DSTORE_3 = 74;
1:eac0369:     short ASTORE_0 = 75;
1:eac0369:     short ASTORE_1 = 76;
1:eac0369:     short ASTORE_2 = 77;
1:eac0369:     short ASTORE_3 = 78;
1:eac0369:     short IASTORE = 79;
1:eac0369:     short LASTORE = 80;
1:eac0369:     short FASTORE = 81;
1:eac0369:     short DASTORE = 82;
1:eac0369:     short AASTORE = 83;
1:eac0369:     short BASTORE = 84;
1:eac0369:     short CASTORE = 85;
1:eac0369:     short SASTORE = 86;
1:eac0369:     short POP = 87;
1:eac0369:     short POP2 = 88;
1:eac0369:     short DUP = 89;
1:eac0369:     short DUP_X1 = 90;
1:eac0369:     short DUP_X2 = 91;
1:eac0369:     short DUP2 = 92;
1:eac0369:     short DUP2_X1 = 93;
1:eac0369:     short DUP2_X2 = 94;
1:eac0369:     short SWAP = 95;
1:eac0369:     short IADD = 96;
1:eac0369:     short LADD = 97;
1:eac0369:     short FADD = 98;
1:eac0369:     short DADD = 99;
1:eac0369:     short ISUB = 100;
1:eac0369:     short LSUB = 101;
1:eac0369:     short FSUB = 102;
1:eac0369:     short DSUB = 103;
1:eac0369:     short IMUL = 104;
1:eac0369:     short LMUL = 105;
1:eac0369:     short FMUL = 106;
1:eac0369:     short DMUL = 107;
1:eac0369:     short IDIV = 108;
1:eac0369:     short LDIV = 109;
1:eac0369:     short FDIV = 110;
1:eac0369:     short DDIV = 111;
1:eac0369:     short IREM = 112;
1:eac0369:     short LREM = 113;
1:eac0369:     short FREM = 114;
1:eac0369:     short DREM = 115;
1:eac0369:     short INEG = 116;
1:eac0369:     short LNEG = 117;
1:eac0369:     short FNEG = 118;
1:eac0369:     short DNEG = 119;
1:eac0369:     short ISHL = 120;
1:eac0369:     short LSHL = 121;
1:eac0369:     short ISHR = 122;
1:eac0369:     short LSHR = 123;
1:eac0369:     short IUSHR = 124;
1:eac0369:     short LUSHR = 125;
1:eac0369:     short IAND = 126;
1:eac0369:     short LAND = 127;
1:eac0369:     short IOR = 128;
1:eac0369:     short LOR = 129;
1:eac0369:     short IXOR = 130;
1:eac0369:     short LXOR = 131;
1:eac0369:     short IINC = 132;
1:eac0369:     short I2L = 133;
1:eac0369:     short I2F = 134;
1:eac0369:     short I2D = 135;
1:eac0369:     short L2I = 136;
1:eac0369:     short L2F = 137;
1:eac0369:     short L2D = 138;
1:eac0369:     short F2I = 139;
1:eac0369:     short F2L = 140;
1:eac0369:     short F2D = 141;
1:eac0369:     short D2I = 142;
1:eac0369:     short D2L = 143;
1:eac0369:     short D2F = 144;
1:eac0369:     short I2B = 145;
1:eac0369:     short I2C = 146;
1:eac0369:     short I2S = 147;
1:eac0369:     short LCMP = 148;
1:eac0369:     short FCMPL = 149;
1:eac0369:     short FCMPG = 150;
1:eac0369:     short DCMPL = 151;
1:eac0369:     short DCMPG = 152;
1:eac0369:     short IFEQ = 153;
1:eac0369:     short IFNE = 154;
1:eac0369:     short IFLT = 155;
1:eac0369:     short IFGE = 156;
1:eac0369:     short IFGT = 157;
1:eac0369:     short IFLE = 158;
1:eac0369:     short IF_ICMPEQ = 159;
1:eac0369:     short IF_ICMPNE = 160;
1:eac0369:     short IF_ICMPLT = 161;
1:eac0369:     short IF_ICMPGE = 162;
1:eac0369:     short IF_ICMPGT = 163;
1:eac0369:     short IF_ICMPLE = 164;
1:eac0369:     short IF_ACMPEQ = 165;
1:eac0369:     short IF_ACMPNE = 166;
1:eac0369:     short GOTO = 167;
1:eac0369:     short JSR = 168;
1:eac0369:     short RET = 169;
1:eac0369:     short TABLESWITCH = 170;
1:eac0369:     short LOOKUPSWITCH = 171;
1:eac0369:     short IRETURN = 172;
1:eac0369:     short LRETURN = 173;
1:eac0369:     short FRETURN = 174;
1:eac0369:     short DRETURN = 175;
1:eac0369:     short ARETURN = 176;
1:eac0369:     short RETURN = 177;
1:eac0369:     short GETSTATIC = 178;
1:eac0369:     short PUTSTATIC = 179;
1:eac0369:     short GETFIELD = 180;
1:eac0369:     short PUTFIELD = 181;
1:eac0369:     short INVOKEVIRTUAL = 182;
1:eac0369:     short INVOKESPECIAL = 183;
1:eac0369:     short INVOKESTATIC = 184;
1:eac0369:     short INVOKEINTERFACE = 185;
1:eac0369:     short XXXUNUSEDXXX = 186;
1:eac0369:     short NEW = 187;
1:eac0369:     short NEWARRAY = 188;
1:eac0369:     short ANEWARRAY = 189;
1:eac0369:     short ARRAYLENGTH = 190;
1:eac0369:     short ATHROW = 191;
1:eac0369:     short CHECKCAST = 192;
1:eac0369:     short INSTANCEOF = 193;
1:eac0369:     short MONITORENTER = 194;
1:eac0369:     short MONITOREXIT = 195;
1:eac0369:     short WIDE = 196;
1:eac0369:     short MULTIANEWARRAY = 197;
1:eac0369:     short IFNULL = 198;
1:eac0369:     short IFNONNULL = 199;
1:eac0369:     short GOTO_W = 200;
1:eac0369:     short JSR_W = 201;
1:eac0369:     short BREAKPOINT = 202;
1:af01856:     
1:af01856:     
1:af01856:     /**
1:af01856:      * Maximum code length in a single method.
1:af01856:      * See section 4.10 of JVM spec version 1.
1:af01856:      */
1:af01856:     int MAX_CODE_LENGTH = 65535;
1:7e52071:     
1:7e52071:     /**
1:7e52071:      * Instruction length for IF (IFNULL, IFEQ) etc.
1:7e52071:      * Used in conditional handling.
1:7e52071:      */
1:7e52071:     int IF_INS_LENGTH = 3;
1:7e52071:     
1:7e52071:     /**
1:7e52071:      * Instruction length for GOTO etc.
1:7e52071:      * Used in conditional handling.
1:7e52071:      */
1:7e52071:     int GOTO_INS_LENGTH = 3;
1:7e52071: 
1:7e52071:     /**
1:7e52071:      * Instruction length for GOTO_W.
1:7e52071:      * Used in conditional handling.
1:7e52071:     */
1:7e52071:     int GOTO_W_INS_LENGTH = 5;
1:ee1cc94:     
1:ee1cc94:     /**
1:ee1cc94:      * Maximum number of entries in the constant pool.
1:ee1cc94:      * See section 4.10 of JVM spec version 1.
1:ee1cc94:       */
1:ee1cc94:     int MAX_CONSTANT_POOL_ENTRIES = 65535;
1:7e52071:    
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:ee1cc94
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * Maximum number of entries in the constant pool.
1:      * See section 4.10 of JVM spec version 1.
1:       */
1:     int MAX_CONSTANT_POOL_ENTRIES = 65535;
commit:7e52071
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * Instruction length for IF (IFNULL, IFEQ) etc.
1:      * Used in conditional handling.
1:      */
1:     int IF_INS_LENGTH = 3;
1:     
1:     /**
1:      * Instruction length for GOTO etc.
1:      * Used in conditional handling.
1:      */
1:     int GOTO_INS_LENGTH = 3;
1: 
1:     /**
1:      * Instruction length for GOTO_W.
1:      * Used in conditional handling.
1:     */
1:     int GOTO_W_INS_LENGTH = 5;
1:    
commit:af01856
/////////////////////////////////////////////////////////////////////////
1:     
1:     
1:     /**
1:      * Maximum code length in a single method.
1:      * See section 4.10 of JVM spec version 1.
1:      */
1:     int MAX_CODE_LENGTH = 65535;
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.classfile.VMOpcode
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
1: public interface VMOpcode {
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.classfile
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.classfile;
1: 
1: /**
1:  * This contains all the opcodes for the JVM
1:  * as defined in The Java Virtual Machine Specification.
1:  *
1:  * REMIND: might want a debugging version of this,
1:  * that stored the stack depth and operand expectations.
1:  */
0: public interface VMOpcode { 
1: 
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1:     short BAD = -999; // used in mapping arrays to say "don't do that"
1:     short NOP = 0;
1:     short ACONST_NULL = 1;
1:     short ICONST_M1 = 2;
1:     short ICONST_0 = 3;
1:     short ICONST_1 = 4;
1:     short ICONST_2 = 5;
1:     short ICONST_3 = 6;
1:     short ICONST_4 = 7;
1:     short ICONST_5 = 8;
1:     short LCONST_0 = 9;
1:     short LCONST_1 = 10;
1:     short FCONST_0 = 11;
1:     short FCONST_1 = 12;
1:     short FCONST_2 = 13;
1:     short DCONST_0 = 14;
1:     short DCONST_1 = 15;
1:     short BIPUSH = 16;
1:     short SIPUSH = 17;
1:     short LDC = 18;
1:     short LDC_W = 19;
1:     short LDC2_W = 20;
1:     short ILOAD = 21;
1:     short LLOAD = 22;
1:     short FLOAD = 23;
1:     short DLOAD = 24;
1:     short ALOAD = 25;
1:     short ILOAD_0 = 26;
1:     short ILOAD_1 = 27;
1:     short ILOAD_2 = 28;
1:     short ILOAD_3 = 29;
1:     short LLOAD_0 = 30;
1:     short LLOAD_1 = 31;
1:     short LLOAD_2 = 32;
1:     short LLOAD_3 = 33;
1:     short FLOAD_0 = 34;
1:     short FLOAD_1 = 35;
1:     short FLOAD_2 = 36;
1:     short FLOAD_3 = 37;
1:     short DLOAD_0 = 38;
1:     short DLOAD_1 = 39;
1:     short DLOAD_2 = 40;
1:     short DLOAD_3 = 41;
1:     short ALOAD_0 = 42;
1:     short ALOAD_1 = 43;
1:     short ALOAD_2 = 44;
1:     short ALOAD_3 = 45;
1:     short IALOAD = 46;
1:     short LALOAD = 47;
1:     short FALOAD = 48;
1:     short DALOAD = 49;
1:     short AALOAD = 50;
1:     short BALOAD = 51;
1:     short CALOAD = 52;
1:     short SALOAD = 53;
1:     short ISTORE = 54;
1:     short LSTORE = 55;
1:     short FSTORE = 56;
1:     short DSTORE = 57;
1:     short ASTORE = 58;
1:     short ISTORE_0 = 59;
1:     short ISTORE_1 = 60;
1:     short ISTORE_2 = 61;
1:     short ISTORE_3 = 62;
1:     short LSTORE_0 = 63;
1:     short LSTORE_1 = 64;
1:     short LSTORE_2 = 65;
1:     short LSTORE_3 = 66;
1:     short FSTORE_0 = 67;
1:     short FSTORE_1 = 68;
1:     short FSTORE_2 = 69;
1:     short FSTORE_3 = 70;
1:     short DSTORE_0 = 71;
1:     short DSTORE_1 = 72;
1:     short DSTORE_2 = 73;
1:     short DSTORE_3 = 74;
1:     short ASTORE_0 = 75;
1:     short ASTORE_1 = 76;
1:     short ASTORE_2 = 77;
1:     short ASTORE_3 = 78;
1:     short IASTORE = 79;
1:     short LASTORE = 80;
1:     short FASTORE = 81;
1:     short DASTORE = 82;
1:     short AASTORE = 83;
1:     short BASTORE = 84;
1:     short CASTORE = 85;
1:     short SASTORE = 86;
1:     short POP = 87;
1:     short POP2 = 88;
1:     short DUP = 89;
1:     short DUP_X1 = 90;
1:     short DUP_X2 = 91;
1:     short DUP2 = 92;
1:     short DUP2_X1 = 93;
1:     short DUP2_X2 = 94;
1:     short SWAP = 95;
1:     short IADD = 96;
1:     short LADD = 97;
1:     short FADD = 98;
1:     short DADD = 99;
1:     short ISUB = 100;
1:     short LSUB = 101;
1:     short FSUB = 102;
1:     short DSUB = 103;
1:     short IMUL = 104;
1:     short LMUL = 105;
1:     short FMUL = 106;
1:     short DMUL = 107;
1:     short IDIV = 108;
1:     short LDIV = 109;
1:     short FDIV = 110;
1:     short DDIV = 111;
1:     short IREM = 112;
1:     short LREM = 113;
1:     short FREM = 114;
1:     short DREM = 115;
1:     short INEG = 116;
1:     short LNEG = 117;
1:     short FNEG = 118;
1:     short DNEG = 119;
1:     short ISHL = 120;
1:     short LSHL = 121;
1:     short ISHR = 122;
1:     short LSHR = 123;
1:     short IUSHR = 124;
1:     short LUSHR = 125;
1:     short IAND = 126;
1:     short LAND = 127;
1:     short IOR = 128;
1:     short LOR = 129;
1:     short IXOR = 130;
1:     short LXOR = 131;
1:     short IINC = 132;
1:     short I2L = 133;
1:     short I2F = 134;
1:     short I2D = 135;
1:     short L2I = 136;
1:     short L2F = 137;
1:     short L2D = 138;
1:     short F2I = 139;
1:     short F2L = 140;
1:     short F2D = 141;
1:     short D2I = 142;
1:     short D2L = 143;
1:     short D2F = 144;
1:     short I2B = 145;
1:     short I2C = 146;
1:     short I2S = 147;
1:     short LCMP = 148;
1:     short FCMPL = 149;
1:     short FCMPG = 150;
1:     short DCMPL = 151;
1:     short DCMPG = 152;
1:     short IFEQ = 153;
1:     short IFNE = 154;
1:     short IFLT = 155;
1:     short IFGE = 156;
1:     short IFGT = 157;
1:     short IFLE = 158;
1:     short IF_ICMPEQ = 159;
1:     short IF_ICMPNE = 160;
1:     short IF_ICMPLT = 161;
1:     short IF_ICMPGE = 162;
1:     short IF_ICMPGT = 163;
1:     short IF_ICMPLE = 164;
1:     short IF_ACMPEQ = 165;
1:     short IF_ACMPNE = 166;
1:     short GOTO = 167;
1:     short JSR = 168;
1:     short RET = 169;
1:     short TABLESWITCH = 170;
1:     short LOOKUPSWITCH = 171;
1:     short IRETURN = 172;
1:     short LRETURN = 173;
1:     short FRETURN = 174;
1:     short DRETURN = 175;
1:     short ARETURN = 176;
1:     short RETURN = 177;
1:     short GETSTATIC = 178;
1:     short PUTSTATIC = 179;
1:     short GETFIELD = 180;
1:     short PUTFIELD = 181;
1:     short INVOKEVIRTUAL = 182;
1:     short INVOKESPECIAL = 183;
1:     short INVOKESTATIC = 184;
1:     short INVOKEINTERFACE = 185;
1:     short XXXUNUSEDXXX = 186;
1:     short NEW = 187;
1:     short NEWARRAY = 188;
1:     short ANEWARRAY = 189;
1:     short ARRAYLENGTH = 190;
1:     short ATHROW = 191;
1:     short CHECKCAST = 192;
1:     short INSTANCEOF = 193;
1:     short MONITORENTER = 194;
1:     short MONITOREXIT = 195;
1:     short WIDE = 196;
1:     short MULTIANEWARRAY = 197;
1:     short IFNULL = 198;
1:     short IFNONNULL = 199;
1:     short GOTO_W = 200;
1:     short JSR_W = 201;
1:     short BREAKPOINT = 202;
1: }
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.classfile
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.services.classfile;
0: 
0: /**
0:  * This contains all the opcodes for the JVM
0:  * as defined in The Java Virtual Machine Specification.
0:  *
0:  * REMIND: might want a debugging version of this,
0:  * that stored the stack depth and operand expectations.
0:  */
0: public interface VMOpcode { 
0: 
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0:     short BAD = -999; // used in mapping arrays to say "don't do that"
0:     short NOP = 0;
0:     short ACONST_NULL = 1;
0:     short ICONST_M1 = 2;
0:     short ICONST_0 = 3;
0:     short ICONST_1 = 4;
0:     short ICONST_2 = 5;
0:     short ICONST_3 = 6;
0:     short ICONST_4 = 7;
0:     short ICONST_5 = 8;
0:     short LCONST_0 = 9;
0:     short LCONST_1 = 10;
0:     short FCONST_0 = 11;
0:     short FCONST_1 = 12;
0:     short FCONST_2 = 13;
0:     short DCONST_0 = 14;
0:     short DCONST_1 = 15;
0:     short BIPUSH = 16;
0:     short SIPUSH = 17;
0:     short LDC = 18;
0:     short LDC_W = 19;
0:     short LDC2_W = 20;
0:     short ILOAD = 21;
0:     short LLOAD = 22;
0:     short FLOAD = 23;
0:     short DLOAD = 24;
0:     short ALOAD = 25;
0:     short ILOAD_0 = 26;
0:     short ILOAD_1 = 27;
0:     short ILOAD_2 = 28;
0:     short ILOAD_3 = 29;
0:     short LLOAD_0 = 30;
0:     short LLOAD_1 = 31;
0:     short LLOAD_2 = 32;
0:     short LLOAD_3 = 33;
0:     short FLOAD_0 = 34;
0:     short FLOAD_1 = 35;
0:     short FLOAD_2 = 36;
0:     short FLOAD_3 = 37;
0:     short DLOAD_0 = 38;
0:     short DLOAD_1 = 39;
0:     short DLOAD_2 = 40;
0:     short DLOAD_3 = 41;
0:     short ALOAD_0 = 42;
0:     short ALOAD_1 = 43;
0:     short ALOAD_2 = 44;
0:     short ALOAD_3 = 45;
0:     short IALOAD = 46;
0:     short LALOAD = 47;
0:     short FALOAD = 48;
0:     short DALOAD = 49;
0:     short AALOAD = 50;
0:     short BALOAD = 51;
0:     short CALOAD = 52;
0:     short SALOAD = 53;
0:     short ISTORE = 54;
0:     short LSTORE = 55;
0:     short FSTORE = 56;
0:     short DSTORE = 57;
0:     short ASTORE = 58;
0:     short ISTORE_0 = 59;
0:     short ISTORE_1 = 60;
0:     short ISTORE_2 = 61;
0:     short ISTORE_3 = 62;
0:     short LSTORE_0 = 63;
0:     short LSTORE_1 = 64;
0:     short LSTORE_2 = 65;
0:     short LSTORE_3 = 66;
0:     short FSTORE_0 = 67;
0:     short FSTORE_1 = 68;
0:     short FSTORE_2 = 69;
0:     short FSTORE_3 = 70;
0:     short DSTORE_0 = 71;
0:     short DSTORE_1 = 72;
0:     short DSTORE_2 = 73;
0:     short DSTORE_3 = 74;
0:     short ASTORE_0 = 75;
0:     short ASTORE_1 = 76;
0:     short ASTORE_2 = 77;
0:     short ASTORE_3 = 78;
0:     short IASTORE = 79;
0:     short LASTORE = 80;
0:     short FASTORE = 81;
0:     short DASTORE = 82;
0:     short AASTORE = 83;
0:     short BASTORE = 84;
0:     short CASTORE = 85;
0:     short SASTORE = 86;
0:     short POP = 87;
0:     short POP2 = 88;
0:     short DUP = 89;
0:     short DUP_X1 = 90;
0:     short DUP_X2 = 91;
0:     short DUP2 = 92;
0:     short DUP2_X1 = 93;
0:     short DUP2_X2 = 94;
0:     short SWAP = 95;
0:     short IADD = 96;
0:     short LADD = 97;
0:     short FADD = 98;
0:     short DADD = 99;
0:     short ISUB = 100;
0:     short LSUB = 101;
0:     short FSUB = 102;
0:     short DSUB = 103;
0:     short IMUL = 104;
0:     short LMUL = 105;
0:     short FMUL = 106;
0:     short DMUL = 107;
0:     short IDIV = 108;
0:     short LDIV = 109;
0:     short FDIV = 110;
0:     short DDIV = 111;
0:     short IREM = 112;
0:     short LREM = 113;
0:     short FREM = 114;
0:     short DREM = 115;
0:     short INEG = 116;
0:     short LNEG = 117;
0:     short FNEG = 118;
0:     short DNEG = 119;
0:     short ISHL = 120;
0:     short LSHL = 121;
0:     short ISHR = 122;
0:     short LSHR = 123;
0:     short IUSHR = 124;
0:     short LUSHR = 125;
0:     short IAND = 126;
0:     short LAND = 127;
0:     short IOR = 128;
0:     short LOR = 129;
0:     short IXOR = 130;
0:     short LXOR = 131;
0:     short IINC = 132;
0:     short I2L = 133;
0:     short I2F = 134;
0:     short I2D = 135;
0:     short L2I = 136;
0:     short L2F = 137;
0:     short L2D = 138;
0:     short F2I = 139;
0:     short F2L = 140;
0:     short F2D = 141;
0:     short D2I = 142;
0:     short D2L = 143;
0:     short D2F = 144;
0:     short I2B = 145;
0:     short I2C = 146;
0:     short I2S = 147;
0:     short LCMP = 148;
0:     short FCMPL = 149;
0:     short FCMPG = 150;
0:     short DCMPL = 151;
0:     short DCMPG = 152;
0:     short IFEQ = 153;
0:     short IFNE = 154;
0:     short IFLT = 155;
0:     short IFGE = 156;
0:     short IFGT = 157;
0:     short IFLE = 158;
0:     short IF_ICMPEQ = 159;
0:     short IF_ICMPNE = 160;
0:     short IF_ICMPLT = 161;
0:     short IF_ICMPGE = 162;
0:     short IF_ICMPGT = 163;
0:     short IF_ICMPLE = 164;
0:     short IF_ACMPEQ = 165;
0:     short IF_ACMPNE = 166;
0:     short GOTO = 167;
0:     short JSR = 168;
0:     short RET = 169;
0:     short TABLESWITCH = 170;
0:     short LOOKUPSWITCH = 171;
0:     short IRETURN = 172;
0:     short LRETURN = 173;
0:     short FRETURN = 174;
0:     short DRETURN = 175;
0:     short ARETURN = 176;
0:     short RETURN = 177;
0:     short GETSTATIC = 178;
0:     short PUTSTATIC = 179;
0:     short GETFIELD = 180;
0:     short PUTFIELD = 181;
0:     short INVOKEVIRTUAL = 182;
0:     short INVOKESPECIAL = 183;
0:     short INVOKESTATIC = 184;
0:     short INVOKEINTERFACE = 185;
0:     short XXXUNUSEDXXX = 186;
0:     short NEW = 187;
0:     short NEWARRAY = 188;
0:     short ANEWARRAY = 189;
0:     short ARRAYLENGTH = 190;
0:     short ATHROW = 191;
0:     short CHECKCAST = 192;
0:     short INSTANCEOF = 193;
0:     short MONITORENTER = 194;
0:     short MONITOREXIT = 195;
0:     short WIDE = 196;
0:     short MULTIANEWARRAY = 197;
0:     short IFNULL = 198;
0:     short IFNONNULL = 199;
0:     short GOTO_W = 200;
0:     short JSR_W = 201;
0:     short BREAKPOINT = 202;
0: }
============================================================================