1:52b11fa: /*
1:36cea34: 
1:06c6a70:  Derby - Class org.apache.derbyTesting.functionTests.tests.derbynet.NSinSameJVMTest
1:db23351: 
1:52b11fa:  Licensed to the Apache Software Foundation (ASF) under one or more
1:52b11fa:  contributor license agreements.  See the NOTICE file distributed with
1:52b11fa:  this work for additional information regarding copyright ownership.
1:52b11fa:  The ASF licenses this file to You under the Apache License, Version 2.0
1:52b11fa:  (the "License"); you may not use this file except in compliance with
1:52b11fa:  the License.  You may obtain a copy of the License at
3:52b11fa: 
1:52b11fa:  http://www.apache.org/licenses/LICENSE-2.0
1:52b11fa: 
1:52b11fa:  Unless required by applicable law or agreed to in writing, software
1:52b11fa:  distributed under the License is distributed on an "AS IS" BASIS,
1:52b11fa:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:52b11fa:  See the License for the specific language governing permissions and
1:52b11fa:  limitations under the License.
1:52b11fa: 
1:52b11fa:  */
1:52b11fa: package org.apache.derbyTesting.functionTests.tests.derbynet;
1:52b11fa: 
1:52b11fa: import java.sql.Connection;
1:52b11fa: import java.sql.ResultSet;
1:52b11fa: import java.sql.Statement;
1:52b11fa: import junit.framework.Test;
1:52b11fa: import org.apache.derby.drda.NetworkServerControl;
1:52b11fa: import org.apache.derbyTesting.junit.JDBC;
1:52b11fa: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:52b11fa: import org.apache.derbyTesting.junit.TestConfiguration;
1:06c6a70: import org.apache.derbyTesting.junit.NetworkServerTestSetup;
1:52b11fa: 
1:52b11fa: public class NSinSameJVMTest extends BaseJDBCTestCase {
1:52b11fa:     public NSinSameJVMTest(String name) {
1:52b11fa:         super(name);
1:36cea34:     }
1:db23351: 
1:52b11fa:     protected void tearDown() throws Exception {
1:52b11fa:         super.tearDown();
1:db23351:     }
1:52b11fa: 
1:52b11fa:     /**
1:06c6a70:      * Test NetworkServer start and shutdown on a different port other than 1527
1:06c6a70:      * in the same jvm
1:06c6a70:      *
1:52b11fa:      * @throws Exception
1:52b11fa:      */
1:52b11fa:     public void testShutdown() throws Exception {
1:06c6a70:         NetworkServerControl serverControl= NetworkServerTestSetup.getNetworkServerControl();
1:52b11fa:         Connection connection = null;
1:06c6a70:         // Just connect, do something
1:52b11fa:         connection = getConnection();
1:52b11fa:         Statement stmt = connection.createStatement();
1:06c6a70:         ResultSet rs = stmt
1:06c6a70:         .executeQuery("Select  tablename   from  sys.systables");
1:52b11fa:         JDBC.assertDrainResults(rs);
1:06c6a70:         // Leave the connection open before shutdown
1:52b11fa:         serverControl.shutdown();
1:36cea34:     }
1:36cea34: 
1:52b11fa:     public static Test suite() {
1:52b11fa:         Test test;
1:06c6a70:         test = TestConfiguration
1:06c6a70:         .clientServerSuiteWithAlternativePort(NSinSameJVMTest.class);
1:52b11fa:         return test;
5:52b11fa:     }
1:52b11fa: }
============================================================================
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:928226b
/////////////////////////////////////////////////////////////////////////
commit:36cea34
/////////////////////////////////////////////////////////////////////////
1:         
0:         // DERBY-1465 - starting another server on the same
0:         // port fails
0:         try { 
0:             serverControl.start(null);
0:             fail ("Should have gotten an exception - see DERBY-1465");
0:         } catch (Exception e) {
0:             if (e.getMessage().indexOf("java.net.BindException") == -1) { 
0:                 throw e; 
1:             } 
1:         }
1:         
commit:c38c5e1
/////////////////////////////////////////////////////////////////////////
commit:8da4728
/////////////////////////////////////////////////////////////////////////
0:             // commenting out until intermittent failure has been resolved.
0: 	    //fail ("Should have gotten an exception - see DERBY-1465");
commit:db23351
/////////////////////////////////////////////////////////////////////////
1:         
0:         // DERBY-1465 - starting another server on the same
0:         // port fails and should throw an exception as well as log it
0:         try { 
0:             serverControl.start(null);
0:             fail ("Should have gotten an exception - see DERBY-1465");
0:         } catch (Exception e) {
0:             assertTrue(e.getMessage().indexOf("java.net.BindException") > 1);
1:         }
1:         
commit:52b11fa
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:  Derby - Class org.apache.derbyTesting.functionTests.tests.derbynet.DRDAProtocolTest
1: 
1:  Licensed to the Apache Software Foundation (ASF) under one or more
1:  contributor license agreements.  See the NOTICE file distributed with
1:  this work for additional information regarding copyright ownership.
1:  The ASF licenses this file to You under the Apache License, Version 2.0
1:  (the "License"); you may not use this file except in compliance with
1:  the License.  You may obtain a copy of the License at
1: 
1:  http://www.apache.org/licenses/LICENSE-2.0
1: 
1:  Unless required by applicable law or agreed to in writing, software
1:  distributed under the License is distributed on an "AS IS" BASIS,
1:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  See the License for the specific language governing permissions and
1:  limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.functionTests.tests.derbynet;
1: 
0: import java.net.InetAddress;
1: import java.sql.Connection;
1: import java.sql.ResultSet;
1: import java.sql.Statement;
1: import junit.framework.Test;
1: import org.apache.derby.drda.NetworkServerControl;
1: import org.apache.derbyTesting.junit.JDBC;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class NSinSameJVMTest extends BaseJDBCTestCase {
1: 	public NSinSameJVMTest(String name) {
1: 		super(name);
1: 	}
1: 
1: 	protected void tearDown() throws Exception {
1: 		super.tearDown();
1: 	}
0: 	/** Test NetworkServer start and shutdown on a different port 
0: 	 * other than 1527 in the same jvm
1: 	 * @throws Exception
0: 	 **/
1: 	public void testShutdown() throws Exception {
0: 		final int NETWORKSERVER_PORT = 20000; //port to start the server
0: 		NetworkServerControl serverControl = null;
0: 		try {
0: 			serverControl = new NetworkServerControl(InetAddress
0: 					.getByName("localhost"), NETWORKSERVER_PORT);//initialized for the shutdown.
1: 			Connection connection = null;
0: 			// Just connect, do something and close the connection
1: 			connection = getConnection();
1: 			Statement stmt = connection.createStatement();
0: 			ResultSet rs = stmt.executeQuery("Select  tablename   from  sys.systables");	
1: 			JDBC.assertDrainResults(rs);
1: 			serverControl.shutdown();
0: 			Thread.sleep(5000);
0: 		} catch (Exception e) {
0: 			System.out.print("FAIL: Unexpected exception" + e.getMessage());
0: 			e.printStackTrace();
1: 		}
1: 	}
1: 	 /**
0:      * Construct the name of the server policy file.
1:      */
1: 	public static Test suite() {
1:         Test test;
0:         test = TestConfiguration.clientServerSuite(NSinSameJVMTest.class,20000);
1:         return test;
1:     }
1: }
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:06c6a70
/////////////////////////////////////////////////////////////////////////
1:  Derby - Class org.apache.derbyTesting.functionTests.tests.derbynet.NSinSameJVMTest
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.NetworkServerTestSetup;
0:     public NSinSameJVMTest(String name) {
0:         super(name);
0:     }
0:     protected void tearDown() throws Exception {
0:         super.tearDown();
0:     }
0: 
0:     /**
1:      * Test NetworkServer start and shutdown on a different port other than 1527
1:      * in the same jvm
1:      *
0:      * @throws Exception
0:     public void testShutdown() throws Exception {
1:         NetworkServerControl serverControl= NetworkServerTestSetup.getNetworkServerControl();
0:         Connection connection = null;
1:         // Just connect, do something
0:         connection = getConnection();
0:         Statement stmt = connection.createStatement();
1:         ResultSet rs = stmt
1:         .executeQuery("Select  tablename   from  sys.systables");
0:         JDBC.assertDrainResults(rs);
1:         // Leave the connection open before shutdown
0:         serverControl.shutdown();
0:     }
0: 
0:     public static Test suite() {
1:         test = TestConfiguration
1:         .clientServerSuiteWithAlternativePort(NSinSameJVMTest.class);
============================================================================