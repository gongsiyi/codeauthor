1:2bc809f: /*
2:2bc809f: 
1:2bc809f:    Derby - Class org.apache.derbyTesting.unitTests.services.T_CacheException
1:2bc809f: 
1:c38b841:    Licensed to the Apache Software Foundation (ASF) under one or more
1:c38b841:    contributor license agreements.  See the NOTICE file distributed with
1:c38b841:    this work for additional information regarding copyright ownership.
1:c38b841:    The ASF licenses this file to You under the Apache License, Version 2.0
1:c38b841:    (the "License"); you may not use this file except in compliance with
1:c38b841:    the License.  You may obtain a copy of the License at
1:2bc809f: 
1:2bc809f:       http://www.apache.org/licenses/LICENSE-2.0
1:2bc809f: 
1:2bc809f:    Unless required by applicable law or agreed to in writing, software
1:2bc809f:    distributed under the License is distributed on an "AS IS" BASIS,
1:2bc809f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2bc809f:    See the License for the specific language governing permissions and
1:2bc809f:    limitations under the License.
1:2bc809f: 
1:2bc809f:  */
1:2bc809f: 
1:2bc809f: package org.apache.derbyTesting.unitTests.services;
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.error.StandardException;
1:2bc809f: 
1:2bc809f: /**
1:2bc809f: 
1:2bc809f: */
1:2bc809f: public  class T_CacheException extends T_StandardException {
1:2bc809f: 
1:2bc809f: 	public static final int		ERROR = 0;
1:2bc809f: 	public static final int     INVALID_KEY = 1;
1:2bc809f: 	public static final int		IDENTITY_FAIL = 2;
1:2bc809f: 
1:2bc809f: 	protected int type;
1:2bc809f: 
1:2bc809f: 		
1:2bc809f: 	protected T_CacheException(String message, int type) {
1:2bc809f: 		super("cache.S", message);
1:2bc809f: 		this.type = type;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	public static StandardException invalidKey() {
1:2bc809f: 		return new T_CacheException("invalid key passed", INVALID_KEY);
1:2bc809f: 	}
1:2bc809f: 	public static StandardException identityFail() {
1:2bc809f: 		return new T_CacheException("identity change failed", IDENTITY_FAIL);
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	protected int getType() {
1:2bc809f: 		return type;
1:2bc809f: 	}
1:2bc809f: }
1:2bc809f: 
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:c38b841
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:2bc809f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.services.T_CacheException
1: 
0:    Copyright 1997, 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.unitTests.services;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1: 
1: */
1: public  class T_CacheException extends T_StandardException {
1: 
1: 	public static final int		ERROR = 0;
1: 	public static final int     INVALID_KEY = 1;
1: 	public static final int		IDENTITY_FAIL = 2;
1: 
1: 	protected int type;
1: 
1: 		
1: 	protected T_CacheException(String message, int type) {
1: 		super("cache.S", message);
1: 		this.type = type;
1: 	}
1: 
1: 	public static StandardException invalidKey() {
1: 		return new T_CacheException("invalid key passed", INVALID_KEY);
1: 	}
1: 	public static StandardException identityFail() {
1: 		return new T_CacheException("identity change failed", IDENTITY_FAIL);
1: 	}
1: 
1: 	protected int getType() {
1: 		return type;
1: 	}
1: }
1: 
============================================================================