1:e5114fd: /*
1:e5114fd: 
1:e5114fd:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.SampleSQLData
1:e5114fd: 
1:e5114fd:    Licensed to the Apache Software Foundation (ASF) under one or more
1:e5114fd:    contributor license agreements.  See the NOTICE file distributed with
1:e5114fd:    this work for additional information regarding copyright ownership.
1:e5114fd:    The ASF licenses this file to you under the Apache License, Version 2.0
1:e5114fd:    (the "License"); you may not use this file except in compliance with
1:e5114fd:    the License.  You may obtain a copy of the License at
1:e5114fd: 
1:e5114fd:      http://www.apache.org/licenses/LICENSE-2.0
1:e5114fd: 
1:e5114fd:    Unless required by applicable law or agreed to in writing, software
1:e5114fd:    distributed under the License is distributed on an "AS IS" BASIS,
1:e5114fd:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e5114fd:    See the License for the specific language governing permissions and
1:e5114fd:    limitations under the License.
1:e5114fd: 
1:e5114fd:  */
1:e5114fd: 
1:e5114fd: /**
1:e5114fd:  * A simple SQLData class.
1:e5114fd:  */
1:e5114fd: package org.apache.derbyTesting.functionTests.tests.lang;
1:e5114fd: 
1:e5114fd: import java.sql.SQLData;
1:e5114fd: import java.sql.SQLException;
1:e5114fd: import java.sql.SQLInput;
1:e5114fd: import java.sql.SQLOutput;
1:e5114fd: 
1:e5114fd: public class SampleSQLData implements SQLData
1:e5114fd: {
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd:     //
1:e5114fd:     // CONSTANTS
1:e5114fd:     //
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd: 
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd:     //
1:e5114fd:     // STATE
1:e5114fd:     //
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd: 
1:e5114fd:     private byte[] _data;
1:e5114fd:     
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd:     //
1:e5114fd:     // CONSTRUCTOR
1:e5114fd:     //
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd: 
1:e5114fd:     public SampleSQLData() {}
1:e5114fd: 
1:e5114fd:     public SampleSQLData( byte[] data )
1:e5114fd:     {
1:e5114fd:         _data = data;
1:e5114fd:     }
1:e5114fd: 
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd:     //
1:e5114fd:     // FUNCTIONS
1:e5114fd:     //
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd: 
1:e5114fd:     public static SampleSQLData makeSampleSQLData( int length )
1:e5114fd:     {
1:e5114fd:         return new SampleSQLData( new byte[ length ] );
1:e5114fd:     }
1:e5114fd: 
1:e5114fd:     public static String toString( SampleSQLData data ) { return data._data.toString(); }
1:e5114fd:     
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd:     //
1:e5114fd:     // SQLData BEHAVIOR
1:e5114fd:     //
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd: 
1:e5114fd:     public String getSQLTypeName() { return "SampleSQLData"; }
1:e5114fd:     
1:e5114fd:     public void writeSQL( SQLOutput out ) throws SQLException
1:e5114fd:     {
1:e5114fd:         out.writeBytes( _data );
1:e5114fd:     }
1:e5114fd: 
1:e5114fd:     public void readSQL( SQLInput in, String typeName ) throws SQLException
1:e5114fd:     {
1:e5114fd:         _data = in.readBytes();
1:e5114fd:     }
1:e5114fd: 
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd:     //
1:e5114fd:     // OTHER Object OVERRIDES
1:e5114fd:     //
1:e5114fd:     ///////////////////////////////////////////////////////////////////////////////////
1:e5114fd: 
1:e5114fd:     public String toString()
1:e5114fd:     {
1:e5114fd:         return "SampleSQLData( " + _data.length + " )";
1:e5114fd:     }
1:e5114fd: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:e5114fd
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.SampleSQLData
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:      http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: /**
1:  * A simple SQLData class.
1:  */
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.SQLData;
1: import java.sql.SQLException;
1: import java.sql.SQLInput;
1: import java.sql.SQLOutput;
1: 
1: public class SampleSQLData implements SQLData
1: {
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTANTS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     private byte[] _data;
1:     
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public SampleSQLData() {}
1: 
1:     public SampleSQLData( byte[] data )
1:     {
1:         _data = data;
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // FUNCTIONS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public static SampleSQLData makeSampleSQLData( int length )
1:     {
1:         return new SampleSQLData( new byte[ length ] );
1:     }
1: 
1:     public static String toString( SampleSQLData data ) { return data._data.toString(); }
1:     
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // SQLData BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public String getSQLTypeName() { return "SampleSQLData"; }
1:     
1:     public void writeSQL( SQLOutput out ) throws SQLException
1:     {
1:         out.writeBytes( _data );
1:     }
1: 
1:     public void readSQL( SQLInput in, String typeName ) throws SQLException
1:     {
1:         _data = in.readBytes();
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // OTHER Object OVERRIDES
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public String toString()
1:     {
1:         return "SampleSQLData( " + _data.length + " )";
1:     }
1: }
============================================================================