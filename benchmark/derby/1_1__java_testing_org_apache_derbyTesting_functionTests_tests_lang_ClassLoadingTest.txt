1:35b010b: /*
1:35b010b: 
1:35b010b: Derby - Class org.apache.derbyTesting.functionTests.tests.lang.ClassLoadingTest
1:35b010b: 
1:35b010b: Licensed to the Apache Software Foundation (ASF) under one or more
1:35b010b: contributor license agreements.  See the NOTICE file distributed with
1:35b010b: this work for additional information regarding copyright ownership.
1:35b010b: The ASF licenses this file to You under the Apache License, Version 2.0
1:35b010b: (the "License"); you may not use this file except in compliance with
1:35b010b: the License.  You may obtain a copy of the License at
1:35b010b: 
1:35b010b: http://www.apache.org/licenses/LICENSE-2.0
1:35b010b: 
1:35b010b: Unless required by applicable law or agreed to in writing, software
1:35b010b: distributed under the License is distributed on an "AS IS" BASIS,
1:35b010b: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:35b010b: See the License for the specific language governing permissions and
1:35b010b: limitations under the License.
1:35b010b: 
1:35b010b: */
1:35b010b: package org.apache.derbyTesting.functionTests.tests.lang;
1:35b010b: 
1:35b010b: import java.sql.Connection;
1:35b010b: 
1:35b010b: import junit.framework.Test;
1:35b010b: 
1:35b010b: import org.apache.derbyTesting.junit.TestConfiguration;
1:35b010b: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:35b010b: 
1:35b010b: import org.apache.derby.iapi.util.ByteArray;
1:35b010b: import org.apache.derby.impl.jdbc.EmbedConnection;
1:35b010b: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1:35b010b: import org.apache.derby.iapi.services.loader.ClassFactory;
1:35b010b: 
1:35b010b: /**
1:35b010b:  * Test limitations on class loading.
1:35b010b:  */
1:35b010b: public class ClassLoadingTest extends BaseJDBCTestCase
1:35b010b: {
1:35b010b: 
1:35b010b:     public ClassLoadingTest(String name)
1:35b010b:     {
1:35b010b:         super( name );
1:35b010b:     }
1:35b010b: 
1:35b010b:     public static Test suite(){
1:35b010b:         return TestConfiguration.embeddedSuite( ClassLoadingTest.class );
1:35b010b:     }
1:35b010b: 
1:35b010b:     /**
1:35b010b:      * Test that you can't use Derby's custom class loader to load arbitrary
1:35b010b:      * class files. See DERBY-6654.
1:35b010b:      **/
1:35b010b:     public void test_01_6654()
1:35b010b:         throws Exception
1:35b010b:     {
1:35b010b:         ByteArray               classBytes = new ByteArray( new byte[] { (byte) 1 } );
1:35b010b:         Connection  conn = getConnection();
1:35b010b:         LanguageConnectionContext lcc = ConstraintCharacteristicsTest.getLCC( conn );
1:35b010b:         ClassFactory    classFactory = lcc.getLanguageConnectionFactory().getClassFactory();
1:35b010b:         String      className1 = "BadClassName";
1:35b010b:         String      className2 = "bad.class.Name";
1:35b010b: 
1:35b010b:         vet6654( classFactory, className1, classBytes );
1:35b010b:         vet6654( classFactory, className2, classBytes );
1:35b010b:     }
1:35b010b:     private void    vet6654( ClassFactory classFactory, String className, ByteArray classBytes )
1:35b010b:         throws Exception
1:35b010b:     {
1:35b010b:         try {
1:35b010b:             classFactory.loadGeneratedClass( className, classBytes );
1:35b010b:             fail( "Should not have been able to load class " + className );
1:35b010b:         }
1:35b010b:         catch (IllegalArgumentException iae) { println( "Caught expected IllegalArgumentException" ); }
1:35b010b:     }
1:35b010b: 
1:35b010b: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:35b010b
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: Derby - Class org.apache.derbyTesting.functionTests.tests.lang.ClassLoadingTest
1: 
1: Licensed to the Apache Software Foundation (ASF) under one or more
1: contributor license agreements.  See the NOTICE file distributed with
1: this work for additional information regarding copyright ownership.
1: The ASF licenses this file to You under the Apache License, Version 2.0
1: (the "License"); you may not use this file except in compliance with
1: the License.  You may obtain a copy of the License at
1: 
1: http://www.apache.org/licenses/LICENSE-2.0
1: 
1: Unless required by applicable law or agreed to in writing, software
1: distributed under the License is distributed on an "AS IS" BASIS,
1: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: See the License for the specific language governing permissions and
1: limitations under the License.
1: 
1: */
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.Connection;
1: 
1: import junit.framework.Test;
1: 
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: 
1: import org.apache.derby.iapi.util.ByteArray;
1: import org.apache.derby.impl.jdbc.EmbedConnection;
1: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1: import org.apache.derby.iapi.services.loader.ClassFactory;
1: 
1: /**
1:  * Test limitations on class loading.
1:  */
1: public class ClassLoadingTest extends BaseJDBCTestCase
1: {
1: 
1:     public ClassLoadingTest(String name)
1:     {
1:         super( name );
1:     }
1: 
1:     public static Test suite(){
1:         return TestConfiguration.embeddedSuite( ClassLoadingTest.class );
1:     }
1: 
1:     /**
1:      * Test that you can't use Derby's custom class loader to load arbitrary
1:      * class files. See DERBY-6654.
1:      **/
1:     public void test_01_6654()
1:         throws Exception
1:     {
1:         ByteArray               classBytes = new ByteArray( new byte[] { (byte) 1 } );
1:         Connection  conn = getConnection();
1:         LanguageConnectionContext lcc = ConstraintCharacteristicsTest.getLCC( conn );
1:         ClassFactory    classFactory = lcc.getLanguageConnectionFactory().getClassFactory();
1:         String      className1 = "BadClassName";
1:         String      className2 = "bad.class.Name";
1: 
1:         vet6654( classFactory, className1, classBytes );
1:         vet6654( classFactory, className2, classBytes );
1:     }
1:     private void    vet6654( ClassFactory classFactory, String className, ByteArray classBytes )
1:         throws Exception
1:     {
1:         try {
1:             classFactory.loadGeneratedClass( className, classBytes );
1:             fail( "Should not have been able to load class " + className );
1:         }
1:         catch (IllegalArgumentException iae) { println( "Caught expected IllegalArgumentException" ); }
1:     }
1: 
1: }
============================================================================