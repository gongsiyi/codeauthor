1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.sql.dictionary.ConsInfo
1:7ecc1f2: 
1:2e658c2:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2e658c2:    contributor license agreements.  See the NOTICE file distributed with
1:2e658c2:    this work for additional information regarding copyright ownership.
1:2e658c2:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2e658c2:    (the "License"); you may not use this file except in compliance with
1:2e658c2:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.sql.dictionary;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.services.io.Formatable;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: 
2:eac0369: /**
1:eac0369:  *	This interface describes the columns in a referenced constraint. Added
1:eac0369:  *	to be the protocol version of ConstraintInfo.
1:eac0369:  *
1:eac0369:  * @version 0.1
1:eac0369:  */
1:eac0369: 
1:eac0369: public interface ConsInfo	extends	Formatable
1:eac0369: {
1:eac0369: 	/**
1:eac0369: 	  *	This ConsInfo describes columns in a referenced table. What is
1:eac0369: 	  *	the schema that the referenced table lives in?
1:eac0369: 	  *
1:eac0369: 	  *	@param	dd	data dictionary to search for schema
1:eac0369: 	  *
1:eac0369: 	  *	@return	schema that referenced table lives in
1:eac0369: 	  *	@exception	StandardException thrown on oops
1:eac0369: 	  */
1:eac0369: 	public SchemaDescriptor getReferencedTableSchemaDescriptor(DataDictionary dd)
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	This ConsInfo describes columns in a referenced table. What is
1:eac0369: 	  *	that table?
1:eac0369: 	  *
1:eac0369: 	  *	@param	dd	data dictionary to search for table
1:eac0369: 	  *
1:eac0369: 	  *	@return	referenced table
1:eac0369: 	  *	@exception	StandardException thrown on oops
1:eac0369: 	  */
1:eac0369: 	public TableDescriptor getReferencedTableDescriptor(DataDictionary dd)
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	This ConsInfo describes columns in a referenced table. What are
1:eac0369: 	  *	their names?
1:eac0369: 	  *
1:eac0369: 	  *	@return	array of referenced column names
1:eac0369: 	  */
1:eac0369: 	public String[] getReferencedColumnNames();
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	Get the name of the table that these column live in.
1:eac0369: 	  *
1:eac0369: 	  *	@return	referenced table name
1:eac0369: 	  */
1:eac0369: 	public String getReferencedTableName();
1:eac0369: 
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	Get the referential Action for an Update.
1:eac0369: 	  *
1:eac0369: 	  *	@return	referential Action for update
1:eac0369: 	  */
1:eac0369: 
1:eac0369: 	public int getReferentialActionUpdateRule();
1:eac0369: 	
1:eac0369: 	/**
1:eac0369: 	  *	Get the referential Action for a Delete.
1:eac0369: 	  *
1:eac0369: 	  *	@return	referential Action Delete rule
1:eac0369: 	  */
1:eac0369: 	public int getReferentialActionDeleteRule();
1:eac0369: 
1:eac0369: }
1:eac0369: 
1:eac0369: 
1:eac0369: 
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:David Van Couvering
-------------------------------------------------------------------------------
commit:2e658c2
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.sql.dictionary.ConsInfo
1: 
0:    Copyright 2000, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql.dictionary
0:    (C) Copyright IBM Corp. 2000, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql.dictionary;
1: 
1: import org.apache.derby.iapi.services.io.Formatable;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1:  *	This interface describes the columns in a referenced constraint. Added
1:  *	to be the protocol version of ConstraintInfo.
1:  *
1:  * @version 0.1
0:  * @author Rick Hillegas
1:  */
1: 
1: public interface ConsInfo	extends	Formatable
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2000_2004;
1: 	/**
1: 	  *	This ConsInfo describes columns in a referenced table. What is
1: 	  *	the schema that the referenced table lives in?
1: 	  *
1: 	  *	@param	dd	data dictionary to search for schema
1: 	  *
1: 	  *	@return	schema that referenced table lives in
1: 	  *	@exception	StandardException thrown on oops
1: 	  */
1: 	public SchemaDescriptor getReferencedTableSchemaDescriptor(DataDictionary dd)
1: 		throws StandardException;
1: 
1: 	/**
1: 	  *	This ConsInfo describes columns in a referenced table. What is
1: 	  *	that table?
1: 	  *
1: 	  *	@param	dd	data dictionary to search for table
1: 	  *
1: 	  *	@return	referenced table
1: 	  *	@exception	StandardException thrown on oops
1: 	  */
1: 	public TableDescriptor getReferencedTableDescriptor(DataDictionary dd)
1: 		throws StandardException;
1: 
1: 	/**
1: 	  *	This ConsInfo describes columns in a referenced table. What are
1: 	  *	their names?
1: 	  *
1: 	  *	@return	array of referenced column names
1: 	  */
1: 	public String[] getReferencedColumnNames();
1: 
1: 	/**
1: 	  *	Get the name of the table that these column live in.
1: 	  *
1: 	  *	@return	referenced table name
1: 	  */
1: 	public String getReferencedTableName();
1: 
1: 
1: 	/**
1: 	  *	Get the referential Action for an Update.
1: 	  *
1: 	  *	@return	referential Action for update
1: 	  */
1: 
1: 	public int getReferentialActionUpdateRule();
1: 	
1: 	/**
1: 	  *	Get the referential Action for a Delete.
1: 	  *
1: 	  *	@return	referential Action Delete rule
1: 	  */
1: 	public int getReferentialActionDeleteRule();
1: 
1: }
1: 
1: 
1: 
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql.dictionary
0:    (C) Copyright IBM Corp. 2000, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.sql.dictionary;
0: 
0: import org.apache.derby.iapi.services.io.Formatable;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: /**
0:  *	This interface describes the columns in a referenced constraint. Added
0:  *	to be the protocol version of ConstraintInfo.
0:  *
0:  * @version 0.1
0:  * @author Rick Hillegas
0:  */
0: 
0: public interface ConsInfo	extends	Formatable
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2000_2004;
0: 	/**
0: 	  *	This ConsInfo describes columns in a referenced table. What is
0: 	  *	the schema that the referenced table lives in?
0: 	  *
0: 	  *	@param	dd	data dictionary to search for schema
0: 	  *
0: 	  *	@return	schema that referenced table lives in
0: 	  *	@exception	StandardException thrown on oops
0: 	  */
0: 	public SchemaDescriptor getReferencedTableSchemaDescriptor(DataDictionary dd)
0: 		throws StandardException;
0: 
0: 	/**
0: 	  *	This ConsInfo describes columns in a referenced table. What is
0: 	  *	that table?
0: 	  *
0: 	  *	@param	dd	data dictionary to search for table
0: 	  *
0: 	  *	@return	referenced table
0: 	  *	@exception	StandardException thrown on oops
0: 	  */
0: 	public TableDescriptor getReferencedTableDescriptor(DataDictionary dd)
0: 		throws StandardException;
0: 
0: 	/**
0: 	  *	This ConsInfo describes columns in a referenced table. What are
0: 	  *	their names?
0: 	  *
0: 	  *	@return	array of referenced column names
0: 	  */
0: 	public String[] getReferencedColumnNames();
0: 
0: 	/**
0: 	  *	Get the name of the table that these column live in.
0: 	  *
0: 	  *	@return	referenced table name
0: 	  */
0: 	public String getReferencedTableName();
0: 
0: 
0: 	/**
0: 	  *	Get the referential Action for an Update.
0: 	  *
0: 	  *	@return	referential Action for update
0: 	  */
0: 
0: 	public int getReferentialActionUpdateRule();
0: 	
0: 	/**
0: 	  *	Get the referential Action for a Delete.
0: 	  *
0: 	  *	@return	referential Action Delete rule
0: 	  */
0: 	public int getReferentialActionDeleteRule();
0: 
0: }
0: 
0: 
0: 
============================================================================