1:33776ff: /*
5:33776ff: 
1:33776ff:    Derby - Class org.apache.derby.client.net.NetCallableStatement
1:33776ff: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:33776ff: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:33776ff: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:33776ff: 
1:33776ff: */
1:33776ff: package org.apache.derby.client.net;
1:33776ff: 
1:69e3d06: import org.apache.derby.client.am.ClientCallableStatement;
1:33776ff: import org.apache.derby.client.am.MaterialPreparedStatement;
1:70f7692: import org.apache.derby.client.am.SqlException;
1:cbd0ff1: import org.apache.derby.jdbc.ClientDriver;
1:407e52d: import org.apache.derby.client.ClientPooledConnection;
1:33776ff: 
1:0326967: class NetCallableStatement extends NetPreparedStatement
1:70f7692:         implements MaterialPreparedStatement {
1:33776ff: 
1:69e3d06:     ClientCallableStatement callableStatement_;
1:33776ff: 
1:70f7692:     //-----------------------------state------------------------------------------
1:33776ff: 
1:70f7692:     //---------------------constructors/finalizer---------------------------------
1:33776ff: 
1:70f7692:     private void initNetCallableStatement() {
1:70f7692:         callableStatement_ = null;
3:70f7692:     }
1:33776ff: 
1:69e3d06:     // Relay constructor for all NetCallableStatement, constructors
1:0326967:     private NetCallableStatement(ClientCallableStatement statement,
1:70f7692:                          NetAgent netAgent,
1:70f7692:                          NetConnection netConnection) throws SqlException {
1:70f7692:         super(statement, netAgent, netConnection);
1:70f7692:         initNetCallableStatement();
1:70f7692:         initNetCallableStatement(statement);
1:70f7692:     }
1:33776ff: 
1:0326967:     private void resetNetCallableStatement(ClientCallableStatement statement,
1:70f7692:                                    NetAgent netAgent,
1:70f7692:                                    NetConnection netConnection) throws SqlException {
1:70f7692:         super.resetNetPreparedStatement(statement, netAgent, netConnection);
1:70f7692:         initNetCallableStatement();
1:70f7692:         initNetCallableStatement(statement);
1:70f7692:     }
1:33776ff: 
1:69e3d06:     private void initNetCallableStatement(ClientCallableStatement statement) {
1:70f7692:         callableStatement_ = statement;
1:70f7692:         callableStatement_.materialCallableStatement_ = this;
1:33776ff: 
1:70f7692:     }
1:33776ff: 
1:33776ff: 
1:70f7692:     // Called by abstract Connection.prepareCall().newCallableStatement()
1:70f7692:     // for jdbc 2 callable statements with scroll attributes.
1:70f7692:     NetCallableStatement(NetAgent netAgent,
3:70f7692:                          NetConnection netConnection,
3:70f7692:                          String sql,
1:70f7692:                          int type,
1:70f7692:                          int concurrency,
1:407e52d:                          int holdability,
1:407e52d:                          ClientPooledConnection cpc) throws SqlException {
1:cbd0ff1:         this(ClientDriver.getFactory().newCallableStatement(netAgent,
1:407e52d:                 netConnection, sql, type, concurrency, holdability,cpc),
1:70f7692:                 netAgent,
1:70f7692:                 netConnection);
1:70f7692:     }
1:33776ff: 
3:70f7692:     void resetNetCallableStatement(NetAgent netAgent,
1:70f7692:                                    NetConnection netConnection,
1:70f7692:                                    String sql,
1:70f7692:                                    int type,
1:70f7692:                                    int concurrency,
2:70f7692:                                    int holdability) throws SqlException {
1:70f7692:         callableStatement_.resetCallableStatement(netAgent, netConnection, sql, type, concurrency, holdability);
3:70f7692:         resetNetCallableStatement(callableStatement_, netAgent, netConnection);
1:70f7692:     }
1:33776ff: 
1:33776ff: 
1:70f7692: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:0326967
/////////////////////////////////////////////////////////////////////////
1: class NetCallableStatement extends NetPreparedStatement
/////////////////////////////////////////////////////////////////////////
1:     private NetCallableStatement(ClientCallableStatement statement,
/////////////////////////////////////////////////////////////////////////
1:     private void resetNetCallableStatement(ClientCallableStatement statement,
commit:69e3d06
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.client.am.ClientCallableStatement;
/////////////////////////////////////////////////////////////////////////
1:     ClientCallableStatement callableStatement_;
/////////////////////////////////////////////////////////////////////////
1:     // Relay constructor for all NetCallableStatement, constructors
0:     NetCallableStatement(ClientCallableStatement statement,
/////////////////////////////////////////////////////////////////////////
0:     void resetNetCallableStatement(ClientCallableStatement statement,
/////////////////////////////////////////////////////////////////////////
1:     private void initNetCallableStatement(ClientCallableStatement statement) {
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:ab750e3
/////////////////////////////////////////////////////////////////////////
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:2349a90
/////////////////////////////////////////////////////////////////////////
0:     private void initNetCallableStatement(CallableStatement statement) {
commit:c50ba59
/////////////////////////////////////////////////////////////////////////
commit:407e52d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.client.ClientPooledConnection;
/////////////////////////////////////////////////////////////////////////
1:                          int holdability,
1:                          ClientPooledConnection cpc) throws SqlException {
1:                 netConnection, sql, type, concurrency, holdability,cpc),
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:cbd0ff1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.jdbc.ClientDriver;
0: import org.apache.derby.client.am.ClientJDBCObjectFactory;
/////////////////////////////////////////////////////////////////////////
1:         this(ClientDriver.getFactory().newCallableStatement(netAgent,
0:                 netConnection, sql, type, concurrency, holdability),
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:70f7692
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.client.am.Section;
1: import org.apache.derby.client.am.SqlException;
1:         implements MaterialPreparedStatement {
0:     CallableStatement callableStatement_;
1:     //-----------------------------state------------------------------------------
1:     //---------------------constructors/finalizer---------------------------------
1:     private void initNetCallableStatement() {
1:         callableStatement_ = null;
1:     }
0:     // Relay constructor for all NetCallableStatement constructors
0:     NetCallableStatement(CallableStatement statement,
1:                          NetAgent netAgent,
1:                          NetConnection netConnection) throws SqlException {
1:         super(statement, netAgent, netConnection);
1:         initNetCallableStatement();
1:         initNetCallableStatement(statement);
1:     }
0:     void resetNetCallableStatement(CallableStatement statement,
1:                                    NetAgent netAgent,
1:                                    NetConnection netConnection) throws SqlException {
1:         super.resetNetPreparedStatement(statement, netAgent, netConnection);
1:         initNetCallableStatement();
1:         initNetCallableStatement(statement);
1:     }
0:     private void initNetCallableStatement(CallableStatement statement) throws SqlException {
1:         callableStatement_ = statement;
1:         callableStatement_.materialCallableStatement_ = this;
1:     }
1:     // Called by abstract Connection.prepareCall().newCallableStatement()
1:     // for jdbc 2 callable statements with scroll attributes.
1:     NetCallableStatement(NetAgent netAgent,
1:                          NetConnection netConnection,
1:                          String sql,
1:                          int type,
1:                          int concurrency,
1:                          int holdability) throws SqlException {
0:         this(new CallableStatement(netAgent, netConnection, sql, type, concurrency, holdability),
1:                 netAgent,
1:                 netConnection);
1:     }
1:     void resetNetCallableStatement(NetAgent netAgent,
1:                                    NetConnection netConnection,
1:                                    String sql,
1:                                    int type,
1:                                    int concurrency,
1:                                    int holdability) throws SqlException {
1:         callableStatement_.resetCallableStatement(netAgent, netConnection, sql, type, concurrency, holdability);
1:         resetNetCallableStatement(callableStatement_, netAgent, netConnection);
1:     }
1:     void resetNetCallableStatement(NetAgent netAgent,
1:                                    NetConnection netConnection,
1:                                    String sql,
0:                                    Section section) throws SqlException {
0:         callableStatement_.resetCallableStatement(netAgent, netConnection, sql, section);
1:         resetNetCallableStatement(callableStatement_, netAgent, netConnection);
1:     }
1:     void resetNetCallableStatement(NetAgent netAgent,
1:                                    NetConnection netConnection,
1:                                    String sql,
0:                                    Section section,
0:                                    ColumnMetaData parameterMetaData,
0:                                    ColumnMetaData resultSetMetaData) throws SqlException {
0:         callableStatement_.resetCallableStatement(netAgent, netConnection, sql, section, parameterMetaData, resultSetMetaData);
1:         resetNetCallableStatement(callableStatement_, netAgent, netConnection);
1:     }
0:     protected void finalize() throws java.lang.Throwable {
0:         super.finalize();
1:     }
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.net.NetCallableStatement
1: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: package org.apache.derby.client.net;
1: 
0: import org.apache.derby.client.am.CallableStatement;
0: import org.apache.derby.client.am.Section;
0: import org.apache.derby.client.am.ColumnMetaData;
0: import org.apache.derby.client.am.SqlException;
1: import org.apache.derby.client.am.MaterialPreparedStatement;
1: 
0: public class NetCallableStatement extends NetPreparedStatement
0:   implements MaterialPreparedStatement
0: {
1: 
0:   CallableStatement callableStatement_;
1: 
0:   //-----------------------------state------------------------------------------
1: 
0:   //---------------------constructors/finalizer---------------------------------
1: 
0:   private void initNetCallableStatement()
0:   {
0:     callableStatement_ = null;
0:   }
1: 
0:   // Relay constructor for all NetCallableStatement constructors
0:   NetCallableStatement (CallableStatement statement,
0:                        NetAgent netAgent,
0:                        NetConnection netConnection) throws SqlException
0:   {
0:     super (statement, netAgent, netConnection);
0:     initNetCallableStatement();
0:     initNetCallableStatement (statement);
0:   }
1: 
0:   void resetNetCallableStatement (CallableStatement statement,
0:                                  NetAgent netAgent,
0:                                  NetConnection netConnection) throws SqlException
0:   {
0:     super.resetNetPreparedStatement(statement, netAgent, netConnection);
0:     initNetCallableStatement();
0:     initNetCallableStatement (statement);
0:   }
1: 
0:   private void initNetCallableStatement (CallableStatement statement
0:                                         ) throws SqlException
0:   {
0:     callableStatement_ = statement;
0:     callableStatement_.materialCallableStatement_ = this;
1: 
0:   }
1: 
1: 
0:   // Called by abstract Connection.prepareCall().newCallableStatement()
0:   // for jdbc 2 callable statements with scroll attributes.
0:   NetCallableStatement (NetAgent netAgent,
0:                        NetConnection netConnection,
0:                        String sql,
0:                        int type,
0:                        int concurrency,
0:                        int holdability) throws SqlException
0:   {
0:     this (new CallableStatement (netAgent, netConnection, sql, type, concurrency, holdability),
0:           netAgent,
0:           netConnection);
0:   }
1: 
0:   void resetNetCallableStatement (NetAgent netAgent,
0:                                  NetConnection netConnection,
0:                                  String sql,
0:                                  int type,
0:                                  int concurrency,
0:                                  int holdability) throws SqlException
0:   {
0:     callableStatement_.resetCallableStatement(netAgent, netConnection, sql, type, concurrency, holdability);
0:     resetNetCallableStatement(callableStatement_, netAgent, netConnection);
0:   }
1: 
0:   void resetNetCallableStatement (NetAgent netAgent,
0:                                  NetConnection netConnection,
0:                                  String sql,
0:                                  Section section) throws SqlException
0:   {
0:     callableStatement_.resetCallableStatement(netAgent, netConnection, sql, section);
0:     resetNetCallableStatement(callableStatement_, netAgent, netConnection);
0:   }
1: 
1: 
0:   void resetNetCallableStatement (NetAgent netAgent,
0:                                  NetConnection netConnection,
0:                                  String sql,
0:                                  Section section,
0:                                  ColumnMetaData parameterMetaData,
0:                                  ColumnMetaData resultSetMetaData) throws SqlException
0:   {
0:     callableStatement_.resetCallableStatement(netAgent, netConnection, sql, section, parameterMetaData, resultSetMetaData);
0:     resetNetCallableStatement(callableStatement_, netAgent, netConnection);
0:   }
1: 
0:   protected void finalize () throws java.lang.Throwable
0:   {
0:     super.finalize();
0:   }
1: 
0: }
============================================================================