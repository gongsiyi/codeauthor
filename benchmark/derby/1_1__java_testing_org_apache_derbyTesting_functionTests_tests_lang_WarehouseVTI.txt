1:33521af: /*
1:33521af: 
1:33521af: Derby - Class org.apache.derbyTesting.functionTests.tests.lang.WarehouseVTI
1:33521af: 
1:33521af: Licensed to the Apache Software Foundation (ASF) under one or more
1:33521af: contributor license agreements.  See the NOTICE file distributed with
1:33521af: this work for additional information regarding copyright ownership.
1:33521af: The ASF licenses this file to You under the Apache License, Version 2.0
1:33521af: (the "License"); you may not use this file except in compliance with
1:33521af: the License.  You may obtain a copy of the License at
1:33521af: 
1:33521af:    http://www.apache.org/licenses/LICENSE-2.0
1:33521af: 
1:33521af: Unless required by applicable law or agreed to in writing, software
1:33521af: distributed under the License is distributed on an "AS IS" BASIS,
1:33521af: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33521af: See the License for the specific language governing permissions and
1:33521af: limitations under the License.
1:33521af: 
1:33521af: */
1:33521af: 
1:33521af: package org.apache.derbyTesting.functionTests.tests.lang;
1:33521af: 
1:33521af: import java.sql.SQLException;
1:33521af: 
1:33521af: /**
1:33521af:  * Cooked up VTI to test SYSCS_BULK_INSERT  
1:33521af:  */
1:33521af: public class WarehouseVTI extends TableVTI {
1:33521af:     private int maxRows;
1:33521af:     private int row = 0;
1:33521af:     
1:33521af: public WarehouseVTI(String schemaName,String tableName,String maxRows)
1:33521af:     throws SQLException
1:33521af: {
1:33521af:     super(tableName);
1:33521af:     this.maxRows = Integer.parseInt(maxRows);
1:33521af: }
1:33521af:  
1:33521af:  public boolean next() {
1:33521af: 
1:33521af:      if (++row <= maxRows)
1:33521af:          return true;
1:33521af:      else
1:33521af:          return false;
1:33521af: 
1:33521af:  }
1:33521af: 
1:33521af:  public int getInt(int col)
1:33521af: 
1:33521af:  {
1:33521af:      switch (col) {
1:33521af:      case 1:
1:33521af:          return row;
1:33521af:      default:
1:33521af:          System.out.println("ERROR! INVALID COLUMN");
1:33521af:      }
1:33521af:      return 0;
1:33521af:  }
1:33521af: 
1:33521af: }  
============================================================================
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:33521af
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: Derby - Class org.apache.derbyTesting.functionTests.tests.lang.WarehouseVTI
1: 
1: Licensed to the Apache Software Foundation (ASF) under one or more
1: contributor license agreements.  See the NOTICE file distributed with
1: this work for additional information regarding copyright ownership.
1: The ASF licenses this file to You under the Apache License, Version 2.0
1: (the "License"); you may not use this file except in compliance with
1: the License.  You may obtain a copy of the License at
1: 
1:    http://www.apache.org/licenses/LICENSE-2.0
1: 
1: Unless required by applicable law or agreed to in writing, software
1: distributed under the License is distributed on an "AS IS" BASIS,
1: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: See the License for the specific language governing permissions and
1: limitations under the License.
1: 
1: */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.SQLException;
1: 
1: /**
1:  * Cooked up VTI to test SYSCS_BULK_INSERT  
1:  */
1: public class WarehouseVTI extends TableVTI {
1:     private int maxRows;
1:     private int row = 0;
1:     
1: public WarehouseVTI(String schemaName,String tableName,String maxRows)
1:     throws SQLException
1: {
1:     super(tableName);
1:     this.maxRows = Integer.parseInt(maxRows);
1: }
1:  
1:  public boolean next() {
1: 
1:      if (++row <= maxRows)
1:          return true;
1:      else
1:          return false;
1: 
1:  }
1: 
1:  public int getInt(int col)
1: 
1:  {
1:      switch (col) {
1:      case 1:
1:          return row;
1:      default:
1:          System.out.println("ERROR! INVALID COLUMN");
1:      }
1:      return 0;
1:  }
1: 
1: }  
============================================================================