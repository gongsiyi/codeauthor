1:75defd0: /*
1:75defd0: 
1:75defd0:    Derby - Class org.apache.derby.impl.store.raw.data.BaseDataFileFactoryJ4
1:75defd0: 
1:75defd0:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75defd0:    contributor license agreements.  See the NOTICE file distributed with
1:75defd0:    this work for additional information regarding copyright ownership.
1:75defd0:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75defd0:    (the "License"); you may not use this file except in compliance with
1:75defd0:    the License.  You may obtain a copy of the License at
1:75defd0: 
1:75defd0:       http://www.apache.org/licenses/LICENSE-2.0
1:75defd0: 
1:75defd0:    Unless required by applicable law or agreed to in writing, software
1:75defd0:    distributed under the License is distributed on an "AS IS" BASIS,
1:75defd0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:75defd0:    See the License for the specific language governing permissions and
1:75defd0:    limitations under the License.
1:75defd0: 
1:75defd0:  */
1:75defd0: 
1:75defd0: package org.apache.derby.impl.store.raw.data;
1:75defd0: 
1:75defd0: import org.apache.derby.iapi.services.cache.Cacheable;
1:75defd0: 
1:75defd0: /**
1:75defd0:  * This class overloads BaseDataFileFactory to produce RAFContainer4 objects
1:75defd0:  * instead of RAFContainer objects. It makes no other change to its superclass'
1:75defd0:  * behavior.
1:75defd0:  */
1:75defd0: public class BaseDataFileFactoryJ4 extends BaseDataFileFactory {
1:75defd0: 
1:75defd0:     /**
1:75defd0:      * Do-nothing constructor (as in the superclass) - real initialization
1:75defd0:      * is done by super's boot().
1:75defd0:      */
1:75defd0:     public BaseDataFileFactoryJ4() {
1:75defd0:     }
1:75defd0: 
1:75defd0:     /**
1:75defd0:      * Overrides newRAFContainer in BaseDataFileFactory to produce RAFContainer4
1:75defd0:      * objects capable of exploiting the NIO API available in Java 1.4+
1:75defd0:      */
1:75defd0:     protected Cacheable newRAFContainer(BaseDataFileFactory factory) {
1:75defd0:         return new RAFContainer4(factory);
1:75defd0:     }
1:75defd0: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:75defd0
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.store.raw.data.BaseDataFileFactoryJ4
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.impl.store.raw.data;
1: 
1: import org.apache.derby.iapi.services.cache.Cacheable;
1: 
1: /**
1:  * This class overloads BaseDataFileFactory to produce RAFContainer4 objects
1:  * instead of RAFContainer objects. It makes no other change to its superclass'
1:  * behavior.
1:  */
1: public class BaseDataFileFactoryJ4 extends BaseDataFileFactory {
1: 
1:     /**
1:      * Do-nothing constructor (as in the superclass) - real initialization
1:      * is done by super's boot().
1:      */
1:     public BaseDataFileFactoryJ4() {
1:     }
1: 
1:     /**
1:      * Overrides newRAFContainer in BaseDataFileFactory to produce RAFContainer4
1:      * objects capable of exploiting the NIO API available in Java 1.4+
1:      */
1:     protected Cacheable newRAFContainer(BaseDataFileFactory factory) {
1:         return new RAFContainer4(factory);
1:     }
1: }
============================================================================