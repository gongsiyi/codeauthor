1:33776ff: /*
2:33776ff: 
1:33776ff:    Derby - Class org.apache.derby.client.net.ResultSetReply
1:33776ff: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:33776ff: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:33776ff: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:33776ff: 
1:33776ff: */
1:33776ff: 
1:33776ff: package org.apache.derby.client.net;
1:33776ff: 
1:70f7692: import org.apache.derby.client.am.Agent;
1:33776ff: import org.apache.derby.client.am.ResultSetCallbackInterface;
1:33776ff: import org.apache.derby.client.am.SqlException;
1:33776ff: 
1:33776ff: 
1:0326967: class ResultSetReply extends StatementReply {
1:70f7692:     private ResultSetReplyInterface materialResultSetReply_;
1:33776ff: 
1:0326967:     ResultSetReply(Agent agent,
1:70f7692:                           ResultSetReplyInterface materialResultSetReply,
1:70f7692:                           StatementReplyInterface materialStatementReply,
1:70f7692:                           ConnectionReplyInterface materialConnectionReply) {
1:70f7692:         super(agent, materialStatementReply, materialConnectionReply);
1:70f7692:         materialResultSetReply_ = materialResultSetReply;
1:70f7692:     }
1:33776ff: 
1:0326967:     void readFetch(ResultSetCallbackInterface resultSet) throws SqlException {
1:70f7692:         materialResultSetReply_.readFetch(resultSet);
1:70f7692:         agent_.checkForChainBreakingException_();
1:70f7692:     }
1:33776ff: 
1:33776ff: 
1:70f7692:     // think about splitting out the position cursor stuff from the fetch stuff
1:0326967:     void readScrollableFetch(ResultSetCallbackInterface resultSet)
1:0326967:             throws SqlException {
1:70f7692:         materialResultSetReply_.readScrollableFetch(resultSet);
1:70f7692:         agent_.checkForChainBreakingException_();
1:70f7692:     }
1:33776ff: 
1:70f7692:     public void readPositioningFetch(ResultSetCallbackInterface resultSet) throws SqlException {
1:70f7692:         materialResultSetReply_.readPositioningFetch(resultSet);
1:70f7692:         agent_.checkForChainBreakingException_();
1:70f7692:     }
1:33776ff: 
1:0326967:     void readCursorClose(ResultSetCallbackInterface resultSet)
1:0326967:             throws SqlException {
1:70f7692:         materialResultSetReply_.readCursorClose(resultSet);
1:70f7692:         agent_.checkForChainBreakingException_();
1:70f7692:     }
6:33776ff: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:0326967
/////////////////////////////////////////////////////////////////////////
1: class ResultSetReply extends StatementReply {
1:     ResultSetReply(Agent agent,
/////////////////////////////////////////////////////////////////////////
1:     void readFetch(ResultSetCallbackInterface resultSet) throws SqlException {
1:     void readScrollableFetch(ResultSetCallbackInterface resultSet)
1:             throws SqlException {
/////////////////////////////////////////////////////////////////////////
1:     void readCursorClose(ResultSetCallbackInterface resultSet)
1:             throws SqlException {
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:70f7692
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.client.am.Agent;
0: public class ResultSetReply extends StatementReply {
1:     private ResultSetReplyInterface materialResultSetReply_;
0:     public ResultSetReply(Agent agent,
1:                           ResultSetReplyInterface materialResultSetReply,
1:                           StatementReplyInterface materialStatementReply,
1:                           ConnectionReplyInterface materialConnectionReply) {
1:         super(agent, materialStatementReply, materialConnectionReply);
1:         materialResultSetReply_ = materialResultSetReply;
1:     }
0:     public void readFetch(ResultSetCallbackInterface resultSet) throws SqlException {
1:         materialResultSetReply_.readFetch(resultSet);
1:         agent_.checkForChainBreakingException_();
1:     }
1:     // think about splitting out the position cursor stuff from the fetch stuff
0:     public void readScrollableFetch(ResultSetCallbackInterface resultSet) throws SqlException {
1:         materialResultSetReply_.readScrollableFetch(resultSet);
1:         agent_.checkForChainBreakingException_();
1:     }
1:     public void readPositioningFetch(ResultSetCallbackInterface resultSet) throws SqlException {
1:         materialResultSetReply_.readPositioningFetch(resultSet);
1:         agent_.checkForChainBreakingException_();
1:     }
0:     public void readCursorClose(ResultSetCallbackInterface resultSet) throws SqlException {
1:         materialResultSetReply_.readCursorClose(resultSet);
1:         agent_.checkForChainBreakingException_();
1:     }
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.net.ResultSetReply
1: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.client.net;
1: 
1: import org.apache.derby.client.am.ResultSetCallbackInterface;
1: import org.apache.derby.client.am.SqlException;
0: import org.apache.derby.client.am.Agent;
1: 
1: 
0: public class ResultSetReply extends StatementReply
0: {
0:   private ResultSetReplyInterface materialResultSetReply_;
1: 
0:   public ResultSetReply (Agent agent,
0:                          ResultSetReplyInterface materialResultSetReply,
0:                          StatementReplyInterface materialStatementReply,
0:                          ConnectionReplyInterface materialConnectionReply)
0:   {
0:     super (agent, materialStatementReply, materialConnectionReply);
0:     materialResultSetReply_ = materialResultSetReply;
1:   }
1: 
0:   public void readFetch (ResultSetCallbackInterface resultSet) throws SqlException
0:   {
0:     materialResultSetReply_.readFetch(resultSet);
0:     agent_.checkForChainBreakingException_();
1:   }
1: 
1: 
0:   // think about splitting out the position cursor stuff from the fetch stuff 
0:   public void readScrollableFetch (ResultSetCallbackInterface resultSet) throws SqlException
0:   {
0:     materialResultSetReply_.readScrollableFetch(resultSet);
0:     agent_.checkForChainBreakingException_();
1:   }
1: 
0:   public void readPositioningFetch (ResultSetCallbackInterface resultSet) throws SqlException
0:   {
0:     materialResultSetReply_.readPositioningFetch(resultSet);
0:     agent_.checkForChainBreakingException_();
1:   }
1: 
0:   public void readCursorClose (ResultSetCallbackInterface resultSet) throws SqlException
0:   {
0:     materialResultSetReply_.readCursorClose(resultSet);
0:     agent_.checkForChainBreakingException_();
1:   }
1: }
============================================================================