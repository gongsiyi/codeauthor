1:eac0369: /*
2:eac0369: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.types.ConcatableDataValue
1:7ecc1f2: 
1:2431ece:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2431ece:    contributor license agreements.  See the NOTICE file distributed with
1:2431ece:    this work for additional information regarding copyright ownership.
1:2431ece:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2431ece:    (the "License"); you may not use this file except in compliance with
1:2431ece:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.types;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * The ConcatableDataValue interface corresponds to the
1:eac0369:  * SQL 92 string value data type.  It is implemented by
1:eac0369:  * datatypes that have a length, and can be concatenated.
1:eac0369:  * It is implemented by the character datatypes and the
1:eac0369:  * bit datatypes.  
1:eac0369:  *
1:eac0369:  * The following methods are defined herein:
1:eac0369:  *		charLength()
1:eac0369:  *
1:eac0369:  * The following is defined by the sub classes (bit and char)
1:eac0369:  *		concatenate()
1:eac0369:  * 
1:eac0369:  */
1:eac0369: public interface ConcatableDataValue extends DataValueDescriptor, VariableSizeDataValue
1:eac0369: {
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	 * The SQL char_length() function.
1:eac0369: 	 *
1:eac0369: 	 * @param result	The result of a previous call to this method,
1:eac0369: 	 *					null if not called yet.
1:eac0369: 	 *
1:eac0369: 	 * @return	A NumberDataValue containing the result of the char_length
1:eac0369: 	 *
1:eac0369: 	 * @exception StandardException		Thrown on error
1:eac0369: 	 */
1:eac0369: 	public NumberDataValue charLength(NumberDataValue result)
1:eac0369: 							throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	 * substr() function matchs DB2 syntax and behaviour.
1:eac0369: 	 *
1:eac0369: 	 * @param start		Start of substr
1:eac0369: 	 * @param length	Length of substr
1:eac0369: 	 * @param result	The result of a previous call to this method,
1:eac0369: 	 *					null if not called yet.
1:eac0369: 	 * @param maxLen	Maximum length of the result string
1:eac0369: 	 *
1:eac0369: 	 * @return	A ConcatableDataValue containing the result of the substr()
1:eac0369: 	 *
1:eac0369: 	 * @exception StandardException		Thrown on error
1:eac0369: 	 */
1:eac0369: 	public ConcatableDataValue substring(
1:eac0369: 				NumberDataValue start,
1:eac0369: 				NumberDataValue length,
1:eac0369: 				ConcatableDataValue result,
1:eac0369: 				int maxLen)
1:eac0369: 		throws StandardException;
1:eac0369: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:2431ece
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.types.ConcatableDataValue
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.types
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.types;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1:  * The ConcatableDataValue interface corresponds to the
1:  * SQL 92 string value data type.  It is implemented by
1:  * datatypes that have a length, and can be concatenated.
1:  * It is implemented by the character datatypes and the
1:  * bit datatypes.  
1:  *
1:  * The following methods are defined herein:
1:  *		charLength()
1:  *
1:  * The following is defined by the sub classes (bit and char)
1:  *		concatenate()
1:  * 
0:  * @author	jamie
1:  */
1: public interface ConcatableDataValue extends DataValueDescriptor, VariableSizeDataValue
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 
1: 	/**
1: 	 * The SQL char_length() function.
1: 	 *
1: 	 * @param result	The result of a previous call to this method,
1: 	 *					null if not called yet.
1: 	 *
1: 	 * @return	A NumberDataValue containing the result of the char_length
1: 	 *
1: 	 * @exception StandardException		Thrown on error
1: 	 */
1: 	public NumberDataValue charLength(NumberDataValue result)
1: 							throws StandardException;
1: 
1: 	/**
1: 	 * substr() function matchs DB2 syntax and behaviour.
1: 	 *
1: 	 * @param start		Start of substr
1: 	 * @param length	Length of substr
1: 	 * @param result	The result of a previous call to this method,
1: 	 *					null if not called yet.
1: 	 * @param maxLen	Maximum length of the result string
1: 	 *
1: 	 * @return	A ConcatableDataValue containing the result of the substr()
1: 	 *
1: 	 * @exception StandardException		Thrown on error
1: 	 */
1: 	public ConcatableDataValue substring(
1: 				NumberDataValue start,
1: 				NumberDataValue length,
1: 				ConcatableDataValue result,
1: 				int maxLen)
1: 		throws StandardException;
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.types
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.types;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: /**
0:  * The ConcatableDataValue interface corresponds to the
0:  * SQL 92 string value data type.  It is implemented by
0:  * datatypes that have a length, and can be concatenated.
0:  * It is implemented by the character datatypes and the
0:  * bit datatypes.  
0:  *
0:  * The following methods are defined herein:
0:  *		charLength()
0:  *
0:  * The following is defined by the sub classes (bit and char)
0:  *		concatenate()
0:  * 
0:  * @author	jamie
0:  */
0: public interface ConcatableDataValue extends DataValueDescriptor, VariableSizeDataValue
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 
0: 	/**
0: 	 * The SQL char_length() function.
0: 	 *
0: 	 * @param result	The result of a previous call to this method,
0: 	 *					null if not called yet.
0: 	 *
0: 	 * @return	A NumberDataValue containing the result of the char_length
0: 	 *
0: 	 * @exception StandardException		Thrown on error
0: 	 */
0: 	public NumberDataValue charLength(NumberDataValue result)
0: 							throws StandardException;
0: 
0: 	/**
0: 	 * substr() function matchs DB2 syntax and behaviour.
0: 	 *
0: 	 * @param start		Start of substr
0: 	 * @param length	Length of substr
0: 	 * @param result	The result of a previous call to this method,
0: 	 *					null if not called yet.
0: 	 * @param maxLen	Maximum length of the result string
0: 	 *
0: 	 * @return	A ConcatableDataValue containing the result of the substr()
0: 	 *
0: 	 * @exception StandardException		Thrown on error
0: 	 */
0: 	public ConcatableDataValue substring(
0: 				NumberDataValue start,
0: 				NumberDataValue length,
0: 				ConcatableDataValue result,
0: 				int maxLen)
0: 		throws StandardException;
0: }
============================================================================