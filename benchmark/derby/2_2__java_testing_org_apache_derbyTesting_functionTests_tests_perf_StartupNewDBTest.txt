1:621d67a: /*
1:621d67a:  
1:621d67a:    Derby - Class org.apache.derbyTesting.functionTests.test.perf.StartupTest
1:621d67a:  
1:621d67a:    Licensed to the Apache Software Foundation (ASF) under one
1:621d67a:    or more contributor license agreements.  See the NOTICE file
1:621d67a:    distributed with this work for additional information
1:621d67a:    regarding copyright ownership.  The ASF licenses this file
1:621d67a:    to you under the Apache License, Version 2.0 (the
1:621d67a:    "License"); you may not use this file except in compliance
1:621d67a:    with the License.  You may obtain a copy of the License at
1:621d67a:  
1:621d67a:      http://www.apache.org/licenses/LICENSE-2.0
1:621d67a:  
1:621d67a:    Unless required by applicable law or agreed to in writing,
1:621d67a:    software distributed under the License is distributed on an
1:621d67a:    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:621d67a:    KIND, either express or implied.  See the License for the
1:621d67a:    specific language governing permissions and limitations
1:621d67a:    under the License.
1:621d67a:  */
1:621d67a: 
1:621d67a: package org.apache.derbyTesting.functionTests.tests.perf;
1:621d67a: 
1:3bd1dd8: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:621d67a: 
1:621d67a: import java.sql.*;
1:621d67a: 
1:621d67a: /**
1:621d67a:  * This test test the timing of starting up Derby.  It tries to divide the
1:621d67a:  * total time up into reasonable chunks.  It's written as a JUnit test but
1:621d67a:  * really can't be automated because the timings are so dependent upon
1:621d67a:  * the exact hardware, operating system and software environment the test
1:621d67a:  * is running in.  I just use JUnit because of the convenient framework
1:621d67a:  * it gives me...
1:621d67a:  */
1:621d67a: public class StartupNewDBTest extends BaseJDBCTestCase {
1:621d67a:     public StartupNewDBTest(String name) {
1:621d67a:         super(name);
1:621d67a:     }
1:621d67a:     
1:621d67a:     public void testNewDB() throws Exception {
1:621d67a:         long startTime = System.currentTimeMillis();
1:621d67a:         System.out.println("Testing startup with a NEW database... " +
1:621d67a:             "All measurements are in milliseconds.");
1:621d67a:         
1:621d67a:         // Load the driver
1:621d67a:         Class driver = Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
1:621d67a:         long currentTime = System.currentTimeMillis();
1:621d67a:         System.out.println("Loading driver:  " + (currentTime - startTime));
1:621d67a:         
1:621d67a:         // Create a database                
1:621d67a:         startTime = System.currentTimeMillis();
1:621d67a:         Connection conn = 
1:621d67a:             DriverManager.getConnection("jdbc:derby:newdb;create=true");
1:621d67a:         currentTime = System.currentTimeMillis();
1:621d67a:         System.out.println("Open connection with creating new database:  " 
1:621d67a:             + (currentTime - startTime));
1:621d67a:                 
1:621d67a:         // Create a table
1:621d67a:         startTime = System.currentTimeMillis();
1:621d67a:         Statement stmt = conn.createStatement();
1:621d67a:         stmt.execute("CREATE TABLE test_table(id integer primary key, " +
1:621d67a:             "last_name varchar(80), first_name varchar(80), " +
1:621d67a:             "mi char(1), address varchar(100), city varchar(80))");
1:621d67a:         currentTime = System.currentTimeMillis();
1:621d67a:         System.out.println("Creating a table:  " 
1:621d67a:             + (currentTime - startTime));
1:621d67a:     }
1:621d67a: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:3bd1dd8
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
author:David Van Couvering
-------------------------------------------------------------------------------
commit:621d67a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derbyTesting.functionTests.test.perf.StartupTest
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one
1:    or more contributor license agreements.  See the NOTICE file
1:    distributed with this work for additional information
1:    regarding copyright ownership.  The ASF licenses this file
1:    to you under the Apache License, Version 2.0 (the
1:    "License"); you may not use this file except in compliance
1:    with the License.  You may obtain a copy of the License at
1:  
1:      http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing,
1:    software distributed under the License is distributed on an
1:    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:    KIND, either express or implied.  See the License for the
1:    specific language governing permissions and limitations
1:    under the License.
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.perf;
1: 
0: import org.apache.derbyTesting.functionTests.util.BaseJDBCTestCase;
1: 
1: import java.sql.*;
1: 
1: /**
1:  * This test test the timing of starting up Derby.  It tries to divide the
1:  * total time up into reasonable chunks.  It's written as a JUnit test but
1:  * really can't be automated because the timings are so dependent upon
1:  * the exact hardware, operating system and software environment the test
1:  * is running in.  I just use JUnit because of the convenient framework
1:  * it gives me...
1:  */
1: public class StartupNewDBTest extends BaseJDBCTestCase {
1:     public StartupNewDBTest(String name) {
1:         super(name);
1:     }
1:     
1:     public void testNewDB() throws Exception {
1:         long startTime = System.currentTimeMillis();
1:         System.out.println("Testing startup with a NEW database... " +
1:             "All measurements are in milliseconds.");
1:         
1:         // Load the driver
1:         Class driver = Class.forName("org.apache.derby.jdbc.EmbeddedDriver");
1:         long currentTime = System.currentTimeMillis();
1:         System.out.println("Loading driver:  " + (currentTime - startTime));
1:         
1:         // Create a database                
1:         startTime = System.currentTimeMillis();
1:         Connection conn = 
1:             DriverManager.getConnection("jdbc:derby:newdb;create=true");
1:         currentTime = System.currentTimeMillis();
1:         System.out.println("Open connection with creating new database:  " 
1:             + (currentTime - startTime));
1:                 
1:         // Create a table
1:         startTime = System.currentTimeMillis();
1:         Statement stmt = conn.createStatement();
1:         stmt.execute("CREATE TABLE test_table(id integer primary key, " +
1:             "last_name varchar(80), first_name varchar(80), " +
1:             "mi char(1), address varchar(100), city varchar(80))");
1:         currentTime = System.currentTimeMillis();
1:         System.out.println("Creating a table:  " 
1:             + (currentTime - startTime));
1:     }
1: }
============================================================================