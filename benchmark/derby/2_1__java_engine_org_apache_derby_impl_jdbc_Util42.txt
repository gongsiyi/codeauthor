1:7cfb7e6: /*
1:7cfb7e6:  
1:7cfb7e6:    Derby - Class org.apache.derby.impl.jdbc.Util42
1:7cfb7e6:  
1:7cfb7e6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:7cfb7e6:    contributor license agreements.  See the NOTICE file distributed with
1:7cfb7e6:    this work for additional information regarding copyright ownership.
1:7cfb7e6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:7cfb7e6:    (the "License"); you may not use this file except in compliance with
1:7cfb7e6:    the License.  You may obtain a copy of the License at
1:7cfb7e6:  
1:7cfb7e6:       http://www.apache.org/licenses/LICENSE-2.0
1:7cfb7e6:  
1:7cfb7e6:    Unless required by applicable law or agreed to in writing, software
1:7cfb7e6:    distributed under the License is distributed on an "AS IS" BASIS,
1:7cfb7e6:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7cfb7e6:    See the License for the specific language governing permissions and
1:7cfb7e6:    limitations under the License.
1:7cfb7e6:  
1:7cfb7e6:  */
1:7cfb7e6: 
1:7cfb7e6: package org.apache.derby.impl.jdbc;
1:7cfb7e6: 
1:7cfb7e6: import java.sql.JDBCType;
1:7cfb7e6: import java.sql.SQLException;
1:7cfb7e6: import java.sql.SQLType;
1:7cfb7e6: import java.sql.Types;
1:7cfb7e6: 
1:7cfb7e6: import org.apache.derby.iapi.reference.SQLState;
1:7cfb7e6: 
1:7cfb7e6: /**
1:7cfb7e6:  * <p>
1:7cfb7e6:  * Utility methods for JDBC 4.2
1:7cfb7e6:  * </p>
1:7cfb7e6:  */
1:7cfb7e6: public class Util42
1:7cfb7e6: {    
1:7cfb7e6:     /**
1:7cfb7e6:      * <p>
1:7cfb7e6:      * Get the int type id from java.sql.Types which corresponds to the SQLType.
1:7cfb7e6:      * </p>
1:7cfb7e6:      */
1:4c2fc4a:     public  static  int getTypeAsInt( SQLType sqlType )
1:7cfb7e6:         throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         // must correspond to something in java.sql.Types
1:7cfb7e6:         if ( sqlType instanceof JDBCType )
1:7cfb7e6:         {
1:7cfb7e6:             int     jdbcType = ((JDBCType) sqlType).getVendorTypeNumber();
1:7cfb7e6:             
1:4c2fc4a:             Util.checkForSupportedDataType( jdbcType );
1:7cfb7e6:         
1:7cfb7e6:             return jdbcType;
1:7cfb7e6:         }
1:7cfb7e6: 
1:4c2fc4a:         throw Util.generateCsSQLException( SQLState.DATA_TYPE_NOT_SUPPORTED, sqlType );
1:7cfb7e6:     }
1:7cfb7e6:     
1:7cfb7e6: }    
1:7cfb7e6: 
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4c2fc4a
/////////////////////////////////////////////////////////////////////////
1:     public  static  int getTypeAsInt( SQLType sqlType )
/////////////////////////////////////////////////////////////////////////
1:             Util.checkForSupportedDataType( jdbcType );
1:         throw Util.generateCsSQLException( SQLState.DATA_TYPE_NOT_SUPPORTED, sqlType );
commit:7cfb7e6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derby.impl.jdbc.Util42
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derby.impl.jdbc;
1: 
1: import java.sql.JDBCType;
1: import java.sql.SQLException;
1: import java.sql.SQLType;
1: import java.sql.Types;
1: 
1: import org.apache.derby.iapi.reference.SQLState;
1: 
1: /**
1:  * <p>
1:  * Utility methods for JDBC 4.2
1:  * </p>
1:  */
1: public class Util42
1: {    
1:     /**
1:      * <p>
1:      * Get the int type id from java.sql.Types which corresponds to the SQLType.
1:      * </p>
1:      */
0:     public  static  int getTypeAsInt( ConnectionChild connChild, SQLType sqlType )
1:         throws SQLException
1:     {
1:         // must correspond to something in java.sql.Types
1:         if ( sqlType instanceof JDBCType )
1:         {
1:             int     jdbcType = ((JDBCType) sqlType).getVendorTypeNumber();
1:             
0:             connChild.checkForSupportedDataType( jdbcType );
1:         
1:             return jdbcType;
1:         }
1: 
0:         throw connChild.newSQLException
0:             ( SQLState.DATA_TYPE_NOT_SUPPORTED, sqlType.toString() );
1:     }
1:     
1: }    
1: 
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:e25c098
/////////////////////////////////////////////////////////////////////////
0:             ( SQLState.DATA_TYPE_NOT_SUPPORTED, sqlType );
============================================================================