1:cb2e1a4: /*
2:cb2e1a4: 
1:cb2e1a4:    Derby - Class org.apache.derby.impl.jdbc.BiggerTemporaryClobTest
1:cb2e1a4: 
1:cb2e1a4:    Licensed to the Apache Software Foundation (ASF) under one
1:cb2e1a4:    or more contributor license agreements.  See the NOTICE file
1:cb2e1a4:    distributed with this work for additional information
1:cb2e1a4:    regarding copyright ownership.  The ASF licenses this file
1:cb2e1a4:    to you under the Apache License, Version 2.0 (the
1:cb2e1a4:    "License"); you may not use this file except in compliance
1:cb2e1a4:    with the License.  You may obtain a copy of the License at
1:cb2e1a4: 
1:cb2e1a4:      http://www.apache.org/licenses/LICENSE-2.0
1:cb2e1a4: 
1:cb2e1a4:    Unless required by applicable law or agreed to in writing,
1:cb2e1a4:    software distributed under the License is distributed on an
1:cb2e1a4:    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:cb2e1a4:    KIND, either express or implied.  See the License for the
1:cb2e1a4:    specific language governing permissions and limitations
1:cb2e1a4:    under the License.
1:cb2e1a4: 
1:cb2e1a4:  */
1:cb2e1a4: package org.apache.derby.impl.jdbc;
1:cb2e1a4: 
1:cb2e1a4: import junit.framework.Test;
1:f695643: import junit.framework.TestCase;
1:1ae02c9: import org.apache.derbyTesting.functionTests.util.streams.CharAlphabet;
1:1ae02c9: import org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:cb2e1a4: 
1:cb2e1a4: /**
1:cb2e1a4:  * Test basic operations on a read-wrote Clob that is kept on disk.
1:cb2e1a4:  */
1:cb2e1a4: public class BiggerTemporaryClobTest
1:cb2e1a4:     extends InternalClobTest {
1:cb2e1a4: 
1:cb2e1a4:     private static final long CLOBLENGTH = 287*1024-115; //~287 KB
1:cb2e1a4:     private static final long BYTES_PER_CHAR = 3; // Only Tamil characters.
1:cb2e1a4: 
1:cb2e1a4:     public BiggerTemporaryClobTest(String name) {
1:cb2e1a4:         super(name);
1:cb2e1a4:     }
1:cb2e1a4: 
1:cb2e1a4:     /**
1:cb2e1a4:      * Creates a bigger read-write Clob that is being kept on disk due to its
1:cb2e1a4:      * size.
1:cb2e1a4:      */
1:cb2e1a4:     public void setUp()
1:cb2e1a4:             throws Exception {
1:cb2e1a4:         super.initialCharLength = CLOBLENGTH;
1:7672693:         super.headerLength = 2 + 3;
1:7672693:        // All tamil letters. Also add the header bytes.
1:7672693:         super.initialByteLength = CLOBLENGTH *3 + headerLength;
1:cb2e1a4:         super.bytesPerChar = BYTES_PER_CHAR;
1:cb2e1a4:         EmbedStatement embStmt = (EmbedStatement)createStatement();
1:10e4538:         iClob = new TemporaryClob(embStmt);
1:cb2e1a4:         transferData(
1:cb2e1a4:             new LoopingAlphabetReader(CLOBLENGTH, CharAlphabet.cjkSubset()),
1:cb2e1a4:             iClob.getWriter(1L),
1:cb2e1a4:             CLOBLENGTH);
1:cb2e1a4:         assertEquals(CLOBLENGTH, iClob.getCharLength());
1:cb2e1a4:     }
1:cb2e1a4: 
1:cb2e1a4:     public void tearDown()
1:cb2e1a4:             throws Exception {
1:cb2e1a4:         this.iClob.release();
1:cb2e1a4:         this.iClob = null;
1:cb2e1a4:         super.tearDown();
1:cb2e1a4:     }
1:cb2e1a4: 
1:cb2e1a4:     public static Test suite()
1:cb2e1a4:             throws Exception {
1:f695643:         Class<? extends TestCase> theClass = BiggerTemporaryClobTest.class;
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite(
1:1ae02c9:             theClass, "BiggerTemporaryClobTest suite");
1:cb2e1a4:         suite.addTest(addModifyingTests(theClass));
1:cb2e1a4:         return suite;
1:cb2e1a4:     }
1:cb2e1a4: } // End class BiggerTemporaryClobTest
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.functionTests.util.streams.CharAlphabet;
1: import org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite(
1:             theClass, "BiggerTemporaryClobTest suite");
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:7672693
/////////////////////////////////////////////////////////////////////////
1:         super.headerLength = 2 + 3;
1:        // All tamil letters. Also add the header bytes.
1:         super.initialByteLength = CLOBLENGTH *3 + headerLength;
commit:f695643
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.TestCase;
/////////////////////////////////////////////////////////////////////////
1:         Class<? extends TestCase> theClass = BiggerTemporaryClobTest.class;
commit:b0c495f
/////////////////////////////////////////////////////////////////////////
0:         iClob = new TemporaryClob(embCon.getDBName(), embStmt);
commit:cb2e1a4
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.jdbc.BiggerTemporaryClobTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one
1:    or more contributor license agreements.  See the NOTICE file
1:    distributed with this work for additional information
1:    regarding copyright ownership.  The ASF licenses this file
1:    to you under the Apache License, Version 2.0 (the
1:    "License"); you may not use this file except in compliance
1:    with the License.  You may obtain a copy of the License at
1: 
1:      http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing,
1:    software distributed under the License is distributed on an
1:    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:    KIND, either express or implied.  See the License for the
1:    specific language governing permissions and limitations
1:    under the License.
1: 
1:  */
1: package org.apache.derby.impl.jdbc;
1: 
0: import org.apache.derbyTesting.functionTests.util.streams.CharAlphabet;
0: import org.apache.derbyTesting.functionTests.util.streams.LoopingAlphabetReader;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Test basic operations on a read-wrote Clob that is kept on disk.
1:  */
1: public class BiggerTemporaryClobTest
1:     extends InternalClobTest {
1: 
1:     private static final long CLOBLENGTH = 287*1024-115; //~287 KB
1:     private static final long BYTES_PER_CHAR = 3; // Only Tamil characters.
1: 
1:     public BiggerTemporaryClobTest(String name) {
1:         super(name);
1:     }
1: 
1:     /**
1:      * Creates a bigger read-write Clob that is being kept on disk due to its
1:      * size.
1:      */
1:     public void setUp()
1:             throws Exception {
1:         super.initialCharLength = CLOBLENGTH;
0:         super.initialByteLength = CLOBLENGTH *3; // Only Tamil characters.
1:         super.bytesPerChar = BYTES_PER_CHAR;
1:         EmbedStatement embStmt = (EmbedStatement)createStatement();
0:         EmbedConnection embCon =(EmbedConnection)getConnection();
0:         iClob = new ClobStreamControl(embCon.getDBName(), embStmt);
1:         transferData(
1:             new LoopingAlphabetReader(CLOBLENGTH, CharAlphabet.cjkSubset()),
1:             iClob.getWriter(1L),
1:             CLOBLENGTH);
1:         assertEquals(CLOBLENGTH, iClob.getCharLength());
1:     }
1: 
1:     public void tearDown()
1:             throws Exception {
1:         this.iClob.release();
1:         this.iClob = null;
1:         super.tearDown();
1:     }
1: 
1:     public static Test suite()
1:             throws Exception {
0:         Class theClass = BiggerTemporaryClobTest.class;
0:         TestSuite suite = new TestSuite(theClass, "BiggerTemporaryClobTest suite");
1:         suite.addTest(addModifyingTests(theClass));
1:         return suite;
1:     }
1: } // End class BiggerTemporaryClobTest
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:10e4538
/////////////////////////////////////////////////////////////////////////
1:         iClob = new TemporaryClob(embStmt);
============================================================================