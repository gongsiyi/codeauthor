1:e6a963f: /*
1:e6a963f: 
1:e6a963f:    Derby - Class org.apache.derbyTesting.functionTests.tests.management.InactiveManagementMBeanTest
1:e6a963f: 
1:e6a963f:    Licensed to the Apache Software Foundation (ASF) under one or more
1:e6a963f:    contributor license agreements.  See the NOTICE file distributed with
1:e6a963f:    this work for additional information regarding copyright ownership.
1:e6a963f:    The ASF licenses this file to you under the Apache License, Version 2.0
1:e6a963f:    (the "License"); you may not use this file except in compliance with
1:e6a963f:    the License.  You may obtain a copy of the License at
1:e6a963f: 
1:e6a963f:       http://www.apache.org/licenses/LICENSE-2.0
1:e6a963f: 
1:e6a963f:    Unless required by applicable law or agreed to in writing, software
1:e6a963f:    distributed under the License is distributed on an "AS IS" BASIS,
1:e6a963f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e6a963f:    See the License for the specific language governing permissions and
1:e6a963f:    limitations under the License.
1:e6a963f: 
1:e6a963f:  */
1:e6a963f: 
1:e6a963f: package org.apache.derbyTesting.functionTests.tests.management;
1:e6a963f: 
1:e6a963f: import java.util.Set;
1:e6a963f: 
1:e6a963f: import javax.management.ObjectName;
1:e6a963f: 
1:e6a963f: import org.apache.derbyTesting.junit.TestConfiguration;
1:e6a963f: 
1:e6a963f: import junit.framework.Test;
1:e6a963f: 
1:e6a963f: 
1:e6a963f: /**
1:e6a963f:  * Test the ManagementMBean interface provided by Derby
1:e6a963f:  * and installed by the application when Derby is not running.
1:e6a963f:  */
1:e6a963f: public class InactiveManagementMBeanTest extends MBeanTest {
1:e6a963f:     
1:e6a963f:     public InactiveManagementMBeanTest(String name) {
1:e6a963f:         super(name);
1:e6a963f:     }
1:e6a963f:     
1:e6a963f:     public static Test suite() {
1:e6a963f:         
1:e6a963f:         return MBeanTest.suite(InactiveManagementMBeanTest.class, 
1:e6a963f:                                         "InactiveManagementMBeanTest");
1:e6a963f:     }
1:e6a963f:     
1:e6a963f:     /**
1:e6a963f:      * Test that the MBean created by the application can
1:e6a963f:      * successfully start and stop Derby's JMX management.
1:e6a963f:      */
1:e6a963f:     public void testStartStopManagementFromApplication()
1:e6a963f:         throws Exception
1:e6a963f:     {
1:e6a963f:         ObjectName appMgmtBean = getApplicationManagementMBean();
1:e6a963f:         
1:e6a963f:         // Derby should be running.
1:e6a963f:         assertBooleanAttribute(true, appMgmtBean, "ManagementActive");
1:e6a963f:         
1:e6a963f:         assertNotNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:e6a963f:         
1:e6a963f:         // now shutdown Derby.
1:e6a963f:         if (isPlatformJMXClient())
1:e6a963f:         {
1:e6a963f:             // Derby is running embedded within the same virtual machine
1:e6a963f:             getTestConfiguration().shutdownEngine();
1:e6a963f:         }
1:e6a963f:         else
1:e6a963f:         {
1:e6a963f:             // TODO: Need to stop derby running on the remote
1:e6a963f:             // machine but leave the vm up. How to do that?
1:e6a963f:             return;
1:e6a963f:         }
1:e6a963f:         
1:e6a963f:         // Ensure that the state of Derby's management cannot change
1:e6a963f:         // since Derby is not running and that the application's MBean
1:e6a963f:         // continues to work.
1:e6a963f:         assertBooleanAttribute(false, appMgmtBean, "ManagementActive");
1:e6a963f:         assertNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:e6a963f:         
1:e6a963f:         invokeOperation(appMgmtBean, "startManagement");
1:e6a963f:         assertBooleanAttribute(false, appMgmtBean, "ManagementActive");
1:e6a963f:         assertNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:e6a963f:         
1:e6a963f:         invokeOperation(appMgmtBean, "stopManagement");
1:e6a963f:         assertBooleanAttribute(false, appMgmtBean, "ManagementActive");
1:e6a963f:         assertNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:e6a963f:     }
1:e6a963f: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:e6a963f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.management.InactiveManagementMBeanTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.management;
1: 
1: import java.util.Set;
1: 
1: import javax.management.ObjectName;
1: 
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: import junit.framework.Test;
1: 
1: 
1: /**
1:  * Test the ManagementMBean interface provided by Derby
1:  * and installed by the application when Derby is not running.
1:  */
1: public class InactiveManagementMBeanTest extends MBeanTest {
1:     
1:     public InactiveManagementMBeanTest(String name) {
1:         super(name);
1:     }
1:     
1:     public static Test suite() {
1:         
1:         return MBeanTest.suite(InactiveManagementMBeanTest.class, 
1:                                         "InactiveManagementMBeanTest");
1:     }
1:     
1:     /**
1:      * Test that the MBean created by the application can
1:      * successfully start and stop Derby's JMX management.
1:      */
1:     public void testStartStopManagementFromApplication()
1:         throws Exception
1:     {
1:         ObjectName appMgmtBean = getApplicationManagementMBean();
1:         
1:         // Derby should be running.
1:         assertBooleanAttribute(true, appMgmtBean, "ManagementActive");
1:         
1:         assertNotNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:         
1:         // now shutdown Derby.
1:         if (isPlatformJMXClient())
1:         {
1:             // Derby is running embedded within the same virtual machine
1:             getTestConfiguration().shutdownEngine();
1:         }
1:         else
1:         {
1:             // TODO: Need to stop derby running on the remote
1:             // machine but leave the vm up. How to do that?
1:             return;
1:         }
1:         
1:         // Ensure that the state of Derby's management cannot change
1:         // since Derby is not running and that the application's MBean
1:         // continues to work.
1:         assertBooleanAttribute(false, appMgmtBean, "ManagementActive");
1:         assertNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:         
1:         invokeOperation(appMgmtBean, "startManagement");
1:         assertBooleanAttribute(false, appMgmtBean, "ManagementActive");
1:         assertNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:         
1:         invokeOperation(appMgmtBean, "stopManagement");
1:         assertBooleanAttribute(false, appMgmtBean, "ManagementActive");
1:         assertNull(getAttribute(appMgmtBean, "SystemIdentifier"));
1:     }
1: }
============================================================================