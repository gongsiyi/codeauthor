1:a1af992: /*
1:a1af992:  *
1:a1af992:  * Derby - Class org.apache.derbyTesting.junit.DatabaseChangeSetup
1:a1af992:  *
1:a1af992:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a1af992:  * contributor license agreements.  See the NOTICE file distributed with
1:a1af992:  * this work for additional information regarding copyright ownership.
1:a1af992:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a1af992:  * (the "License"); you may not use this file except in compliance with
1:a1af992:  * the License.  You may obtain a copy of the License at
1:a1af992:  *
1:a1af992:  *    http://www.apache.org/licenses/LICENSE-2.0
1:a1af992:  *
1:a1af992:  * Unless required by applicable law or agreed to in writing, 
1:a1af992:  * software distributed under the License is distributed on an 
1:a1af992:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:a1af992:  * either express or implied. See the License for the specific 
1:a1af992:  * language governing permissions and limitations under the License.
1:a1af992:  */
1:a1af992: package org.apache.derbyTesting.junit;
1:a1af992: 
1:a1af992: import junit.framework.Test;
1:a1af992: 
1:a1af992: /**
1:a1af992:  * Change the current configuration's database name at setup.
1:a1af992:  * Previous configuration is restored on tearDown.
1:a1af992:  *
1:a1af992:  */
1:5107349: public  final class DatabaseChangeSetup extends ChangeConfigurationSetup {
1:a1af992: 
1:e5c9e58:     private final String logicalDbName;
1:a1af992:     private final String dbName;
1:3df869c:     private final boolean defaultDb;
1:c0399dc: 
1:c0399dc:     private TestConfiguration   _myTestConfiguration;
1:a1af992:     
1:e5c9e58:     public DatabaseChangeSetup(Test test, String logicalDbName, String dbName, boolean defaultDb) {
1:a1af992:         super(test);
1:e5c9e58:         this.logicalDbName = logicalDbName;
1:a1af992:         this.dbName = dbName;
1:3df869c:         this.defaultDb = defaultDb;
1:a1af992:    }
1:a1af992: 
1:a1af992:     TestConfiguration getNewConfiguration(TestConfiguration old) {
1:c0399dc:         _myTestConfiguration = new TestConfiguration(old, logicalDbName, dbName, defaultDb);
1:c0399dc:         return _myTestConfiguration;
1:a1af992:     }
1:5107349: 
1:c0399dc:     public  TestConfiguration   getTestConfiguration()  { return _myTestConfiguration; }
1:c0399dc:     
1:5107349:     public  String  physicalDatabaseName() { return dbName; }
1:5107349:     
1:a1af992: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:c0399dc
/////////////////////////////////////////////////////////////////////////
1: 
1:     private TestConfiguration   _myTestConfiguration;
/////////////////////////////////////////////////////////////////////////
1:         _myTestConfiguration = new TestConfiguration(old, logicalDbName, dbName, defaultDb);
1:         return _myTestConfiguration;
1:     public  TestConfiguration   getTestConfiguration()  { return _myTestConfiguration; }
1:     
commit:5107349
/////////////////////////////////////////////////////////////////////////
1: public  final class DatabaseChangeSetup extends ChangeConfigurationSetup {
/////////////////////////////////////////////////////////////////////////
1: 
1:     public  String  physicalDatabaseName() { return dbName; }
1:     
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:e5c9e58
/////////////////////////////////////////////////////////////////////////
1:     private final String logicalDbName;
1:     public DatabaseChangeSetup(Test test, String logicalDbName, String dbName, boolean defaultDb) {
1:         this.logicalDbName = logicalDbName;
0:         return new TestConfiguration(old, logicalDbName, dbName, defaultDb);
commit:3df869c
/////////////////////////////////////////////////////////////////////////
1:     private final boolean defaultDb;
0:     public DatabaseChangeSetup(Test test, String dbName, boolean defaultDb) {
1:         this.defaultDb = defaultDb;
0:         return new TestConfiguration(old, dbName, defaultDb);
commit:a1af992
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Derby - Class org.apache.derbyTesting.junit.DatabaseChangeSetup
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, 
1:  * software distributed under the License is distributed on an 
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:  * either express or implied. See the License for the specific 
1:  * language governing permissions and limitations under the License.
1:  */
1: package org.apache.derbyTesting.junit;
1: 
1: import junit.framework.Test;
1: 
1: /**
1:  * Change the current configuration's database name at setup.
1:  * Previous configuration is restored on tearDown.
1:  *
1:  */
0: final class DatabaseChangeSetup extends ChangeConfigurationSetup {
1: 
1:     private final String dbName;
1:     
0:     public DatabaseChangeSetup(Test test, String dbName) {
1:         super(test);
1:         this.dbName = dbName;
1:    }
1: 
1:     TestConfiguration getNewConfiguration(TestConfiguration old) {
0:         return new TestConfiguration(old, dbName);
1:     }
1: }
============================================================================