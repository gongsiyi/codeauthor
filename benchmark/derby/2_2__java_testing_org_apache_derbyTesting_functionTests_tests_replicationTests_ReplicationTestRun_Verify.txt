1:db8dae7: /*
1:db8dae7: 
1:db8dae7: Derby - Class org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationTestRun
1:db8dae7: 
1:db8dae7: Licensed to the Apache Software Foundation (ASF) under one or more
1:db8dae7: contributor license agreements.  See the NOTICE file distributed with
1:db8dae7: this work for additional information regarding copyright ownership.
1:db8dae7: The ASF licenses this file to You under the Apache License, Version 2.0
1:db8dae7: (the "License"); you may not use this file except in compliance with
1:db8dae7: the License.  You may obtain a copy of the License at
1:db8dae7: 
1:db8dae7:    http://www.apache.org/licenses/LICENSE-2.0
1:db8dae7: 
1:db8dae7: Unless required by applicable law or agreed to in writing, software
1:db8dae7: distributed under the License is distributed on an "AS IS" BASIS,
1:db8dae7: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:db8dae7: See the License for the specific language governing permissions and
1:db8dae7: limitations under the License.
1:db8dae7: 
1:db8dae7: */
1:db8dae7: 
1:db8dae7: package org.apache.derbyTesting.functionTests.tests.replicationTests;
1:db8dae7: 
1:db8dae7: import java.sql.Connection;
1:db8dae7: import java.sql.ResultSet;
1:db8dae7: import java.sql.SQLException;
1:db8dae7: import java.sql.Statement;
1:db8dae7: import junit.framework.Test;
1:db8dae7: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:db8dae7: import org.apache.derbyTesting.junit.TestConfiguration;
1:db8dae7: 
1:db8dae7: public class ReplicationTestRun_Verify extends BaseJDBCTestCase
1:db8dae7: {
1:db8dae7:     
1:db8dae7:     public ReplicationTestRun_Verify(String testcaseName)
1:db8dae7:     {
1:db8dae7:         super(testcaseName);
1:db8dae7:     }
1:db8dae7:     
1:db8dae7:     public static Test suite()
1:db8dae7:         throws Exception
1:db8dae7:     {
1:db8dae7:         System.out.println("*** ReplicationTestRun_Verify.suite()");
1:db8dae7:         
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("ReplicationTestRun_Verify");
1:1ae02c9:         System.out.println("*** Done new BaseTestSuite()");
1:db8dae7:         
1:db8dae7:         String masterHostName = System.getProperty("test.serverHost", "localhost");
1:db8dae7:         int masterPortNo = Integer.parseInt(System.getProperty("test.serverPort", "1527"));
1:db8dae7:         
1:db8dae7:         suite.addTest(ReplicationTestRun_Verify.simpleVerify(masterHostName, masterPortNo));
1:db8dae7:         System.out.println("*** Done suite.addTest(StandardTests.simpleTest())");
1:db8dae7:         
1:db8dae7:         return (Test)suite;
1:db8dae7:     }
1:db8dae7: 
1:db8dae7:     private static Test simpleVerify(String serverHost, int serverPort)
1:db8dae7:     {
1:db8dae7:         return TestConfiguration.existingServerSuite(ReplicationTestRun_Verify.class,
1:db8dae7:                 false,serverHost,serverPort);
1:db8dae7:     }
1:db8dae7:     
1:db8dae7:     public void test() // Verification code..
1:db8dae7:     throws SQLException
1:db8dae7:     {
1:db8dae7:         Connection conn = getConnection();
1:db8dae7:         Statement s = conn.createStatement();
1:db8dae7:         ResultSet rs = s.executeQuery("select SCHEMAID, TABLENAME from sys.systables");
1:db8dae7:         while (rs.next())
1:db8dae7:         {
1:db8dae7:             System.out.println(rs.getString(1) + " " + rs.getString(2));
1:db8dae7:         }
1:db8dae7:     }
1:db8dae7:     
1:db8dae7: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("ReplicationTestRun_Verify");
1:         System.out.println("*** Done new BaseTestSuite()");
author:Oystein Grovlen
-------------------------------------------------------------------------------
commit:db8dae7
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: Derby - Class org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationTestRun
1: 
1: Licensed to the Apache Software Foundation (ASF) under one or more
1: contributor license agreements.  See the NOTICE file distributed with
1: this work for additional information regarding copyright ownership.
1: The ASF licenses this file to You under the Apache License, Version 2.0
1: (the "License"); you may not use this file except in compliance with
1: the License.  You may obtain a copy of the License at
1: 
1:    http://www.apache.org/licenses/LICENSE-2.0
1: 
1: Unless required by applicable law or agreed to in writing, software
1: distributed under the License is distributed on an "AS IS" BASIS,
1: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: See the License for the specific language governing permissions and
1: limitations under the License.
1: 
1: */
1: 
1: package org.apache.derbyTesting.functionTests.tests.replicationTests;
1: 
1: import java.sql.Connection;
1: import java.sql.ResultSet;
1: import java.sql.SQLException;
1: import java.sql.Statement;
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
0: import org.apache.derbyTesting.functionTests.tests.derbynet.PrepareStatementTest;
0: import org.apache.derbyTesting.functionTests.tests.lang.AnsiTrimTest;
0: import org.apache.derbyTesting.functionTests.tests.lang.CreateTableFromQueryTest;
0: import org.apache.derbyTesting.functionTests.tests.lang.SimpleTest;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
0: import org.apache.derbyTesting.junit.JDBCClient;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class ReplicationTestRun_Verify extends BaseJDBCTestCase
1: {
1:     
1:     public ReplicationTestRun_Verify(String testcaseName)
1:     {
1:         super(testcaseName);
1:     }
1:     
1:     public static Test suite()
1:         throws Exception
1:     {
1:         System.out.println("*** ReplicationTestRun_Verify.suite()");
1:         
0:         TestSuite suite = new TestSuite("ReplicationTestRun_Verify");
0:         System.out.println("*** Done new TestSuite()");
1:         
1:         String masterHostName = System.getProperty("test.serverHost", "localhost");
1:         int masterPortNo = Integer.parseInt(System.getProperty("test.serverPort", "1527"));
1:         
1:         suite.addTest(ReplicationTestRun_Verify.simpleVerify(masterHostName, masterPortNo));
1:         System.out.println("*** Done suite.addTest(StandardTests.simpleTest())");
1:         
1:         return (Test)suite;
1:     }
1: 
1:     private static Test simpleVerify(String serverHost, int serverPort)
1:     {
1:         return TestConfiguration.existingServerSuite(ReplicationTestRun_Verify.class,
1:                 false,serverHost,serverPort);
1:     }
1:     
1:     public void test() // Verification code..
1:     throws SQLException
1:     {
1:         Connection conn = getConnection();
1:         Statement s = conn.createStatement();
1:         ResultSet rs = s.executeQuery("select SCHEMAID, TABLENAME from sys.systables");
1:         while (rs.next())
1:         {
1:             System.out.println(rs.getString(1) + " " + rs.getString(2));
1:         }
1:     }
1:     
1: }
============================================================================