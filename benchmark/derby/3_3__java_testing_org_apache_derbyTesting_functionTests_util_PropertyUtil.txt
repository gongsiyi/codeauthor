1:67614ad: /*
1:67614ad: 
1:f68f62f:    Derby - Class org.apache.derbyTesting.functionTests.util.PropertyUtil
1:67614ad: 
1:15651f5:    Licensed to the Apache Software Foundation (ASF) under one or more
1:15651f5:    contributor license agreements.  See the NOTICE file distributed with
1:15651f5:    this work for additional information regarding copyright ownership.
1:15651f5:    The ASF licenses this file to You under the Apache License, Version 2.0
1:15651f5:    (the "License"); you may not use this file except in compliance with
1:15651f5:    the License.  You may obtain a copy of the License at
5:f68f62f: 
1:f68f62f:       http://www.apache.org/licenses/LICENSE-2.0
1:f68f62f: 
1:f68f62f:    Unless required by applicable law or agreed to in writing, software
1:f68f62f:    distributed under the License is distributed on an "AS IS" BASIS,
1:f68f62f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f68f62f:    See the License for the specific language governing permissions and
1:f68f62f:    limitations under the License.
1:f68f62f: 
2:67614ad:  */
1:67614ad: 
1:67614ad: package org.apache.derbyTesting.functionTests.util;
1:a0dbbd7: 
1:a0dbbd7: import java.security.AccessController;
1:a0dbbd7: import java.security.PrivilegedAction;
1:a0dbbd7: 
1:a0dbbd7: import org.apache.derby.iapi.services.context.Context;
1:67614ad: import org.apache.derby.iapi.services.context.ContextService;
1:67614ad: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1:67614ad: import java.io.Serializable;
2:67614ad: /**
1:67614ad:     A bread for the internalUtil class
1:67614ad: */
1:67614ad: public abstract class PropertyUtil extends org.apache.derby.iapi.util.PropertyUtil
1:67614ad: {
1:67614ad: 	public static Serializable getDatabasePropertyDefault(String k) throws Exception
1:67614ad: 	{
1:67614ad:         LanguageConnectionContext lcc =
1:a0dbbd7: 			(LanguageConnectionContext) getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1:67614ad: 		if (lcc == null) throw new Exception("getPropertyDefault only works in a connection");
1:67614ad: 		return lcc.getTransactionExecute().getPropertyDefault(k);
1:67614ad: 	}
1:67614ad: 	public static void setDatabasePropertyDefault(String k,Serializable v) throws Exception
1:67614ad: 	{
1:67614ad:         LanguageConnectionContext lcc =
1:a0dbbd7: 			(LanguageConnectionContext) getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1:67614ad: 		if (lcc == null) throw new Exception("getPropertyDefault only works in a connection");
1:67614ad: 		lcc.getTransactionExecute().setPropertyDefault(k,v);
1:67614ad: 	}
1:a0dbbd7:     
1:a0dbbd7:     /**
1:a0dbbd7:      * Privileged lookup of a Context. Must be private so that user code
1:a0dbbd7:      * can't call this entry point.
1:a0dbbd7:      */
1:a0dbbd7:     private  static  Context    getContextOrNull( final String contextID )
1:a0dbbd7:     {
1:a0dbbd7:         if ( System.getSecurityManager() == null )
1:a0dbbd7:         {
1:a0dbbd7:             return ContextService.getContextOrNull( contextID );
1:a0dbbd7:         }
1:a0dbbd7:         else
1:a0dbbd7:         {
1:a0dbbd7:             return AccessController.doPrivileged
1:a0dbbd7:                 (
1:a0dbbd7:                  new PrivilegedAction<Context>()
1:a0dbbd7:                  {
1:a0dbbd7:                      public Context run()
1:a0dbbd7:                      {
1:a0dbbd7:                          return ContextService.getContextOrNull( contextID );
1:a0dbbd7:                      }
1:a0dbbd7:                  }
1:a0dbbd7:                  );
1:a0dbbd7:         }
1:a0dbbd7:     }
1:a0dbbd7: 
1:67614ad: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:a0dbbd7
/////////////////////////////////////////////////////////////////////////
1: 
1: import java.security.AccessController;
1: import java.security.PrivilegedAction;
1: 
1: import org.apache.derby.iapi.services.context.Context;
/////////////////////////////////////////////////////////////////////////
1: 			(LanguageConnectionContext) getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1: 			(LanguageConnectionContext) getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1:     
1:     /**
1:      * Privileged lookup of a Context. Must be private so that user code
1:      * can't call this entry point.
1:      */
1:     private  static  Context    getContextOrNull( final String contextID )
1:     {
1:         if ( System.getSecurityManager() == null )
1:         {
1:             return ContextService.getContextOrNull( contextID );
1:         }
1:         else
1:         {
1:             return AccessController.doPrivileged
1:                 (
1:                  new PrivilegedAction<Context>()
1:                  {
1:                      public Context run()
1:                      {
1:                          return ContextService.getContextOrNull( contextID );
1:                      }
1:                  }
1:                  );
1:         }
1:     }
1: 
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:15651f5
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:67614ad
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derbyTesting.functionTests.util
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.util;
1: import org.apache.derby.iapi.services.context.ContextService;
1: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1: import java.io.Serializable;
1: /**
1:     A bread for the internalUtil class
1: */
1: public abstract class PropertyUtil extends org.apache.derby.iapi.util.PropertyUtil
1: { 
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 	public static Serializable getDatabasePropertyDefault(String k) throws Exception
1: 	{
1:         LanguageConnectionContext lcc =
0: 			(LanguageConnectionContext) ContextService.getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1: 		if (lcc == null) throw new Exception("getPropertyDefault only works in a connection");
1: 		return lcc.getTransactionExecute().getPropertyDefault(k);
1: 	}
1: 	public static void setDatabasePropertyDefault(String k,Serializable v) throws Exception
1: 	{
1:         LanguageConnectionContext lcc =
0: 			(LanguageConnectionContext) ContextService.getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1: 		if (lcc == null) throw new Exception("getPropertyDefault only works in a connection");
1: 		lcc.getTransactionExecute().setPropertyDefault(k,v);
1: 	}
1: }
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:f68f62f
/////////////////////////////////////////////////////////////////////////
0: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.util.PropertyUtil
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
0:  */
1: 
0: package org.apache.derbyTesting.functionTests.util;
0: import org.apache.derby.iapi.services.context.ContextService;
0: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
0: import java.io.Serializable;
0: /**
0:     A bread for the internalUtil class
0: */
0: public abstract class PropertyUtil extends org.apache.derby.iapi.util.PropertyUtil
0: {
0: 	public static Serializable getDatabasePropertyDefault(String k) throws Exception
0: 	{
0:         LanguageConnectionContext lcc =
0: 			(LanguageConnectionContext) ContextService.getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
0: 		if (lcc == null) throw new Exception("getPropertyDefault only works in a connection");
0: 		return lcc.getTransactionExecute().getPropertyDefault(k);
0: 	}
0: 	public static void setDatabasePropertyDefault(String k,Serializable v) throws Exception
0: 	{
0:         LanguageConnectionContext lcc =
0: 			(LanguageConnectionContext) ContextService.getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
0: 		if (lcc == null) throw new Exception("getPropertyDefault only works in a connection");
0: 		lcc.getTransactionExecute().setPropertyDefault(k,v);
0: 	}
0: }
commit:c1c71ef
/////////////////////////////////////////////////////////////////////////
0:    Derby - Class org.apache.derbyTesting.functionTests.util.PropertyUtil
0: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
0: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
0: 
0:       http://www.apache.org/licenses/LICENSE-2.0
0: 
0:    Unless required by applicable law or agreed to in writing, software
0:    distributed under the License is distributed on an "AS IS" BASIS,
0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:    See the License for the specific language governing permissions and
0:    limitations under the License.
commit:cb1ca12
/////////////////////////////////////////////////////////////////////////
0: {
============================================================================