1:b925e45: /*
1:b925e45:  *
1:b925e45:  * Derby - Class org.apache.derbyTesting.system.oe.model.Warehouse
1:b925e45:  *
1:b925e45:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b925e45:  * contributor license agreements.  See the NOTICE file distributed with
1:b925e45:  * this work for additional information regarding copyright ownership.
1:b925e45:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b925e45:  * (the "License"); you may not use this file except in compliance with
1:b925e45:  * the License.  You may obtain a copy of the License at
1:b925e45:  *
1:b925e45:  *    http://www.apache.org/licenses/LICENSE-2.0
1:b925e45:  *
1:b925e45:  * Unless required by applicable law or agreed to in writing, 
1:b925e45:  * software distributed under the License is distributed on an 
1:b925e45:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:b925e45:  * either express or implied. See the License for the specific 
1:b925e45:  * language governing permissions and limitations under the License.
1:b925e45:  */
1:b925e45: package org.apache.derbyTesting.system.oe.model;
1:b925e45: 
1:b925e45: /**
1:b925e45:  * An Order Entry warehouse.
1:b925e45:  * <P>
1:b925e45:  * Fields map to definition in TPC-C for the WAREHOUSE table.
1:b925e45:  * The Java names of fields do not include the W_ prefix
1:b925e45:  * and are in lower case.
1:b925e45:  * <BR>
1:b925e45:  * The columns that map to an address are extracted out as
1:b925e45:  * a Address object with the corresponding Java field address.
1:b925e45:  * <BR>
1:b925e45:  * All fields have Java bean setters and getters.
1:b925e45:  * <BR>
1:b925e45:  * Fields that are DECIMAL in the database map to String in Java
1:b925e45:  * (rather than BigDecimal) to allow running on J2ME/CDC/Foundation.
1:b925e45:  * <P>
1:b925e45:  * Primary key maps to {id}.
1:b925e45:  * 
1:b925e45:  * <P>
1:b925e45:  * A Warehouse object may sparsely populated, when returned from a
1:b925e45:  * business transaction it is only guaranteed to contain  the information
1:b925e45:  * required to display the result of that transaction.
1:b925e45:  */
1:b925e45: public class Warehouse {
1:b925e45:     private short id;
1:b925e45:     private String name;
1:b925e45:     private Address address;
1:b925e45:     private String tax;
1:b925e45:     private String ytd;
1:57403e7:     
1:57403e7:     /**
1:57403e7:      * Clear all information to allow object re-use.
1:57403e7:      */
1:57403e7:     public void clear()
1:57403e7:     {
1:57403e7:         id = 0;
1:57403e7:         name = null;
1:57403e7:         address = null;
1:57403e7:         tax = null;
1:57403e7:         ytd = null;
1:57403e7:     }
1:b925e45: 
1:b925e45:     public Address getAddress() {
1:b925e45:         return address;
1:b925e45:     }
1:b925e45:     public void setAddress(Address address) {
1:b925e45:         this.address = address;
1:b925e45:     }
1:b925e45:     public short getId() {
1:b925e45:         return id;
1:b925e45:     }
1:b925e45:     public void setId(short id) {
1:b925e45:         this.id = id;
1:b925e45:     }
1:b925e45:     public String getName() {
1:b925e45:         return name;
1:b925e45:     }
1:b925e45:     public void setName(String name) {
1:b925e45:         this.name = name;
1:b925e45:     }
1:b925e45:     public String getTax() {
1:b925e45:         return tax;
1:b925e45:     }
1:b925e45:     public void setTax(String tax) {
1:b925e45:         this.tax = tax;
1:b925e45:     }
1:b925e45:     public String getYtd() {
1:b925e45:         return ytd;
1:b925e45:     }
1:b925e45:     public void setYtd(String ytd) {
1:b925e45:         this.ytd = ytd;
1:b925e45:     }
1:b925e45: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:57403e7
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * Clear all information to allow object re-use.
1:      */
1:     public void clear()
1:     {
1:         id = 0;
1:         name = null;
1:         address = null;
1:         tax = null;
1:         ytd = null;
1:     }
commit:b925e45
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Derby - Class org.apache.derbyTesting.system.oe.model.Warehouse
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, 
1:  * software distributed under the License is distributed on an 
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:  * either express or implied. See the License for the specific 
1:  * language governing permissions and limitations under the License.
1:  */
1: package org.apache.derbyTesting.system.oe.model;
1: 
1: /**
1:  * An Order Entry warehouse.
1:  * <P>
1:  * Fields map to definition in TPC-C for the WAREHOUSE table.
1:  * The Java names of fields do not include the W_ prefix
1:  * and are in lower case.
1:  * <BR>
1:  * The columns that map to an address are extracted out as
1:  * a Address object with the corresponding Java field address.
1:  * <BR>
1:  * All fields have Java bean setters and getters.
1:  * <BR>
1:  * Fields that are DECIMAL in the database map to String in Java
1:  * (rather than BigDecimal) to allow running on J2ME/CDC/Foundation.
1:  * <P>
1:  * Primary key maps to {id}.
1:  * 
1:  * <P>
1:  * A Warehouse object may sparsely populated, when returned from a
1:  * business transaction it is only guaranteed to contain  the information
1:  * required to display the result of that transaction.
1:  */
1: public class Warehouse {
1:     private short id;
1:     private String name;
1:     private Address address;
1:     private String tax;
1:     private String ytd;
1: 
1:     public Address getAddress() {
1:         return address;
1:     }
1:     public void setAddress(Address address) {
1:         this.address = address;
1:     }
1:     public short getId() {
1:         return id;
1:     }
1:     public void setId(short id) {
1:         this.id = id;
1:     }
1:     public String getName() {
1:         return name;
1:     }
1:     public void setName(String name) {
1:         this.name = name;
1:     }
1:     public String getTax() {
1:         return tax;
1:     }
1:     public void setTax(String tax) {
1:         this.tax = tax;
1:     }
1:     public String getYtd() {
1:         return ytd;
1:     }
1:     public void setYtd(String ytd) {
1:         this.ytd = ytd;
1:     }
1: }
============================================================================