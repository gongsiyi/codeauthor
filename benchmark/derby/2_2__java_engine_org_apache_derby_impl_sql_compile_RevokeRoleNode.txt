1:ee59de8: /*
3:ee59de8: 
1:ee59de8:    Derby - Class org.apache.derby.impl.sql.compile.RevokeRoleNode
1:ee59de8: 
1:ee59de8:    Licensed to the Apache Software Foundation (ASF) under one or more
1:ee59de8:    contributor license agreements.  See the NOTICE file distributed with
1:ee59de8:    this work for additional information regarding copyright ownership.
1:ee59de8:    The ASF licenses this file to you under the Apache License, Version 2.0
1:ee59de8:    (the "License"); you may not use this file except in compliance with
1:ee59de8:    the License.  You may obtain a copy of the License at
1:ee59de8: 
1:ee59de8: 	  http://www.apache.org/licenses/LICENSE-2.0
1:ee59de8: 
1:ee59de8:    Unless required by applicable law or agreed to in writing, software
1:ee59de8:    distributed under the License is distributed on an "AS IS" BASIS,
1:ee59de8:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ee59de8:    See the License for the specific language governing permissions and
1:ee59de8:    limitations under the License.
1:ee59de8: 
1:ee59de8:  */
1:ee59de8: 
1:ee59de8: package org.apache.derby.impl.sql.compile;
1:ee59de8: 
1:ee59de8: import java.util.Iterator;
1:ee59de8: import java.util.List;
1:3bb140c: import org.apache.derby.iapi.error.StandardException;
1:3bb140c: import org.apache.derby.iapi.services.context.ContextManager;
1:7e51e9d: import org.apache.derby.shared.common.sanity.SanityManager;
1:3bb140c: import org.apache.derby.iapi.sql.execute.ConstantAction;
1:ee59de8: 
1:ee59de8: /**
1:ee59de8:  * This class represents a REVOKE role statement.
1:ee59de8:  */
1:3bb140c: class RevokeRoleNode extends DDLStatementNode
1:ee59de8: {
1:3bb140c:     private List<String> roles;
1:3bb140c:     private List<String> grantees;
1:ee59de8: 
1:ee59de8: 	/**
1:3bb140c:      * Construct a RevokeRoleNode.
1:ee59de8: 	 *
1:ee59de8: 	 * @param roles list of strings containing role name to be revoked
1:ee59de8: 	 * @param grantees list of strings containing grantee names
1:3bb140c:      * @param cm context manager
1:ee59de8: 	 */
1:3bb140c:     RevokeRoleNode( List<String> roles,
1:3bb140c:                     List<String> grantees,
1:3bb140c:                     ContextManager cm) throws StandardException
1:ee59de8: 	{
1:3bb140c:         super(cm);
1:3bb140c:         this.roles = roles;
1:3bb140c:         this.grantees = grantees;
1:ee59de8: 	}
1:ee59de8: 
1:ee59de8: 
1:ee59de8: 	/**
1:ee59de8: 	 * Create the Constant information that will drive the guts of Execution.
1:ee59de8: 	 *
1:ee59de8: 	 * @exception StandardException Standard error policy.
1:ee59de8: 	 */
1:3bb140c:     @Override
1:ee59de8: 	public ConstantAction makeConstantAction() throws StandardException
1:ee59de8: 	{
1:ee59de8: 		return getGenericConstantActionFactory().
1:ee59de8: 			getRevokeRoleConstantAction( roles, grantees);
1:ee59de8: 	}
1:ee59de8: 
1:ee59de8: 	/**
1:ee59de8: 	 * Convert this object to a String.  See comments in QueryTreeNode.java
1:ee59de8: 	 * for how this should be done for tree printing.
1:ee59de8: 	 *
1:ee59de8: 	 * @return	This object as a String
1:ee59de8: 	 */
1:3bb140c:     @Override
1:ee59de8: 	public String toString()
1:ee59de8: 	{
1:ee59de8: 		if (SanityManager.DEBUG) {
1:3bb140c:             StringBuilder sb1 = new StringBuilder();
1:e1f49ca: 
1:e1f49ca:             for( Iterator<?> it = roles.iterator(); it.hasNext();) {
1:ee59de8: 				if( sb1.length() > 0) {
1:ee59de8: 					sb1.append( ", ");
1:ee59de8: 				}
1:ee59de8: 				sb1.append( it.next().toString());
1:ee59de8: 			}
1:ee59de8: 
1:3bb140c:             StringBuilder sb2 = new StringBuilder();
1:e1f49ca: 
1:e1f49ca:             for( Iterator<?> it = grantees.iterator(); it.hasNext();) {
1:ee59de8: 				if( sb2.length() > 0) {
1:ee59de8: 					sb2.append( ", ");
1:ee59de8: 				}
1:ee59de8: 				sb2.append( it.next().toString());
1:ee59de8: 			}
1:e1f49ca: 
1:e1f49ca:             return (super.toString() +
1:ee59de8: 					sb1.toString() +
1:ee59de8: 					" FROM: " +
1:ee59de8: 					sb2.toString() +
1:ee59de8: 					"\n");
1:ee59de8: 		} else {
1:ee59de8: 			return "";
1:ee59de8: 		}
1:ee59de8: 	} // end of toString
1:ee59de8: 
1:ee59de8: 
1:3bb140c:     String statementToString()
1:ee59de8: 	{
1:ee59de8: 		return "REVOKE role";
1:ee59de8: 	}
1:ee59de8: }
============================================================================
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:7e51e9d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.shared.common.sanity.SanityManager;
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:2706d1f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:e1f49ca
/////////////////////////////////////////////////////////////////////////
1: 
1:             for( Iterator<?> it = roles.iterator(); it.hasNext();) {
/////////////////////////////////////////////////////////////////////////
1: 
1:             for( Iterator<?> it = grantees.iterator(); it.hasNext();) {
1: 
1:             return (super.toString() +
commit:3bb140c
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.services.context.ContextManager;
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: import org.apache.derby.iapi.sql.compile.C_NodeTypes;
1: import org.apache.derby.iapi.sql.execute.ConstantAction;
1: class RevokeRoleNode extends DDLStatementNode
1:     private List<String> roles;
1:     private List<String> grantees;
1:      * Construct a RevokeRoleNode.
1:      * @param cm context manager
1:     RevokeRoleNode( List<String> roles,
1:                     List<String> grantees,
1:                     ContextManager cm) throws StandardException
1:         super(cm);
0:         setNodeType(C_NodeTypes.REVOKE_ROLE_NODE);
1:         this.roles = roles;
1:         this.grantees = grantees;
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:             StringBuilder sb1 = new StringBuilder();
/////////////////////////////////////////////////////////////////////////
1:             StringBuilder sb2 = new StringBuilder();
/////////////////////////////////////////////////////////////////////////
1:     String statementToString()
commit:ee59de8
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.sql.compile.RevokeRoleNode
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1: 	  http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.impl.sql.compile;
1: 
0: import org.apache.derby.iapi.sql.execute.ConstantAction;
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: import org.apache.derby.iapi.error.StandardException;
1: 
1: import java.util.Iterator;
1: import java.util.List;
0: import org.apache.derby.iapi.sql.compile.CompilerContext;
0: import org.apache.derby.iapi.sql.conn.Authorizer;
1: 
1: /**
1:  * This class represents a REVOKE role statement.
1:  */
0: public class RevokeRoleNode extends DDLStatementNode
1: {
0: 	private List roles;
0: 	private List grantees;
1: 
1: 	/**
0: 	 * Initialize a RevokeRoleNode.
1: 	 *
1: 	 * @param roles list of strings containing role name to be revoked
1: 	 * @param grantees list of strings containing grantee names
1: 	 */
0: 	public void init(Object roles, Object grantees) throws StandardException
1: 	{
0: 		initAndCheck(null);
0: 		this.roles = (List) roles;
0: 		this.grantees = (List) grantees;
1: 	}
1: 
1: 
1: 	/**
1: 	 * Create the Constant information that will drive the guts of Execution.
1: 	 *
1: 	 * @exception StandardException Standard error policy.
1: 	 */
1: 	public ConstantAction makeConstantAction() throws StandardException
1: 	{
1: 		return getGenericConstantActionFactory().
1: 			getRevokeRoleConstantAction( roles, grantees);
1: 	}
1: 
1: 	/**
1: 	 * Convert this object to a String.  See comments in QueryTreeNode.java
1: 	 * for how this should be done for tree printing.
1: 	 *
1: 	 * @return	This object as a String
1: 	 */
1: 
1: 	public String toString()
1: 	{
1: 		if (SanityManager.DEBUG) {
0: 			StringBuffer sb1 = new StringBuffer();
0: 			for( Iterator it = roles.iterator(); it.hasNext();) {
1: 				if( sb1.length() > 0) {
1: 					sb1.append( ", ");
1: 				}
1: 				sb1.append( it.next().toString());
1: 			}
1: 
0: 			StringBuffer sb2 = new StringBuffer();
0: 			for( Iterator it = grantees.iterator(); it.hasNext();) {
1: 				if( sb2.length() > 0) {
1: 					sb2.append( ", ");
1: 				}
1: 				sb2.append( it.next().toString());
1: 			}
0: 			return (super.toString() +
1: 					sb1.toString() +
1: 					" FROM: " +
1: 					sb2.toString() +
1: 					"\n");
1: 		} else {
1: 			return "";
1: 		}
1: 	} // end of toString
1: 
1: 
0: 	public String statementToString()
1: 	{
1: 		return "REVOKE role";
1: 	}
1: }
============================================================================