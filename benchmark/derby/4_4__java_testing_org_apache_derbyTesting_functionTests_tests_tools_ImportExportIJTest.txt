1:15f7d05: /*
1:15f7d05:  * Derby - Class 
1:15f7d05:  * org.apache.derbyTesting.functionTests.tests.tools.ImportExportIJTest
1:15f7d05:  *
1:15f7d05:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:15f7d05:  * contributor license agreements.  See the NOTICE file distributed with
1:15f7d05:  * this work for additional information regarding copyright ownership.
1:15f7d05:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:15f7d05:  * (the "License"); you may not use this file except in compliance with
1:15f7d05:  * the License.  You may obtain a copy of the License at
1:15f7d05:  *
1:15f7d05:  *    http://www.apache.org/licenses/LICENSE-2.0
1:15f7d05:  *
1:15f7d05:  * Unless required by applicable law or agreed to in writing, 
1:15f7d05:  * software distributed under the License is distributed on an 
1:15f7d05:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:15f7d05:  * either express or implied. See the License for the specific 
1:15f7d05:  * language governing permissions and limitations under the License.
1:15f7d05:  */
4:15f7d05: 
1:15f7d05: package org.apache.derbyTesting.functionTests.tests.tools;
1:f121a69: 
1:f121a69: import java.util.Locale;
1:15f7d05: import junit.framework.Test;
1:15f7d05: import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:15f7d05: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1:f121a69: import org.apache.derbyTesting.junit.LocaleTestSetup;
1:15f7d05: import org.apache.derbyTesting.junit.SupportFilesSetup;
1:f121a69: import org.apache.derbyTesting.junit.TestConfiguration;
1:15f7d05: 
1:15f7d05: /**
1:15f7d05:  *	Test that runs the importExportThruIJ.sql script and compares the output 
1:15f7d05:  *	to importExportThruIJ.out.
1:15f7d05:  */
1:15f7d05: public final class ImportExportIJTest extends ScriptTestCase {
1:15f7d05: 	
1:15f7d05: 	/**
1:15f7d05: 	 * Constructor that runs a single script.
1:15f7d05: 	 * 
1:15f7d05: 	 * @param script - the name of the script
1:15f7d05: 	 */
1:15f7d05: 	private ImportExportIJTest(String script) {
1:f121a69: 		super(script, true);
1:15f7d05: 	}
1:f121a69: 
1:15f7d05: 	
1:15f7d05: 	/**
1:15f7d05: 	 * Return the suite that runs the script.
1:15f7d05: 	 */
1:15f7d05: 	public static Test suite() {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("importExportIJ");
1:128ee49: 		
1:15f7d05:         // only run with embedded
1:15f7d05:         // network server makes slightly different output
1:15f7d05:         // ('statement executed' instead of '# rows inserted/deteled', etc.)
1:15f7d05:         // and this test would never work if the server were on 
1:15f7d05:         // a remote system because the export file would be on the
1:15f7d05:         // server side, and import would be looking on the client.
1:15f7d05:         // Also, running client & embedded would require some cleanup magic to
1:15f7d05:         // remove the exported files (see e.g. ImportExportTest).
1:128ee49: 		Test test = new ImportExportIJTest("importExportIJ");
1:128ee49: 		
1:128ee49:         // This test should run in English locale since it compares error
1:128ee49:         // messages against a canon based on the English message text. Also,
1:128ee49:         // run the test in a fresh database, since the language of the message
1:128ee49:         // text is determined when the database is created.        
1:128ee49:         test = new LocaleTestSetup(test, Locale.ENGLISH);	
1:128ee49:         test = TestConfiguration.singleUseDatabaseDecorator(test);
1:128ee49: 		
1:128ee49: 		suite.addTest(new CleanDatabaseTestSetup(test));
1:128ee49: 
1:128ee49:         return new SupportFilesSetup(suite, new String[] {
1:15f7d05:             "functionTests/testData/ImportExport/TwoLineBadEOF.dat",
1:15f7d05:             "functionTests/testData/ImportExport/NoEOR.dat",
1:15f7d05:             "functionTests/testData/ImportExport/Access1.txt",
1:15f7d05:             "functionTests/testData/ImportExport/AccountData_defaultformat.dat",
1:15f7d05:             "functionTests/testData/ImportExport/AccountData_format1.dat",
1:15f7d05:             "functionTests/testData/ImportExport/AccountData_format2.dat",
1:15f7d05:             "functionTests/testData/ImportExport/AccountData_format2oops.dat",
1:15f7d05:             "functionTests/testData/ImportExport/AccountData_NullFields.dat",
1:15f7d05:             "functionTests/testData/ImportExport/UnsupportedFormat1.dat",
1:15f7d05:             "functionTests/testData/ImportExport/UnsupportedFormat2.dat",
1:15f7d05:             "functionTests/testData/ImportExport/derby-2193.txt",
1:15f7d05:             "functionTests/testData/ImportExport/derby-2193-linenumber.txt"
1:15f7d05:             }
1:15f7d05:         );
1:15f7d05: 	}
1:15f7d05: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("importExportIJ");
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:128ee49
/////////////////////////////////////////////////////////////////////////
1: 		
/////////////////////////////////////////////////////////////////////////
1: 		Test test = new ImportExportIJTest("importExportIJ");
1: 		
1:         // This test should run in English locale since it compares error
1:         // messages against a canon based on the English message text. Also,
1:         // run the test in a fresh database, since the language of the message
1:         // text is determined when the database is created.        
1:         test = new LocaleTestSetup(test, Locale.ENGLISH);	
1:         test = TestConfiguration.singleUseDatabaseDecorator(test);
1: 		
1: 		suite.addTest(new CleanDatabaseTestSetup(test));
1: 
1:         return new SupportFilesSetup(suite, new String[] {
/////////////////////////////////////////////////////////////////////////
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:f121a69
/////////////////////////////////////////////////////////////////////////
1: import java.util.Locale;
1: 
1: import org.apache.derbyTesting.junit.LocaleTestSetup;
1: import org.apache.derbyTesting.junit.TestConfiguration;
/////////////////////////////////////////////////////////////////////////
1: 		super(script, true);
/////////////////////////////////////////////////////////////////////////
1: 
0:         // This test should run in English locale since it compares error
0:         // messages against a canon based on the English message text. Also,
0:         // run the test in a fresh database, since the language of the message
0:         // text is determined when the database is created.
0:         tst = TestConfiguration.singleUseDatabaseDecorator(tst);
0:         return new LocaleTestSetup(tst, Locale.ENGLISH);
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:15f7d05
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Derby - Class 
1:  * org.apache.derbyTesting.functionTests.tests.tools.ImportExportIJTest
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, 
1:  * software distributed under the License is distributed on an 
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:  * either express or implied. See the License for the specific 
1:  * language governing permissions and limitations under the License.
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.tools;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
1: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1: import org.apache.derbyTesting.junit.SupportFilesSetup;
1: 
1: /**
1:  *	Test that runs the importExportThruIJ.sql script and compares the output 
1:  *	to importExportThruIJ.out.
1:  */
1: public final class ImportExportIJTest extends ScriptTestCase {
1: 	
1: 	/**
1: 	 * Constructor that runs a single script.
1: 	 * 
1: 	 * @param script - the name of the script
1: 	 */
1: 	private ImportExportIJTest(String script) {
0: 		super(script);
1: 	}
1: 
1: 	
1: 	/**
1: 	 * Return the suite that runs the script.
1: 	 */
1: 	public static Test suite() {
0: 		TestSuite suite = new TestSuite("importExportIJ");
1:         // only run with embedded
1:         // network server makes slightly different output
1:         // ('statement executed' instead of '# rows inserted/deteled', etc.)
1:         // and this test would never work if the server were on 
1:         // a remote system because the export file would be on the
1:         // server side, and import would be looking on the client.
1:         // Also, running client & embedded would require some cleanup magic to
1:         // remove the exported files (see e.g. ImportExportTest).
0:         suite.addTest(new CleanDatabaseTestSetup(
0:                         new ImportExportIJTest("importExportIJ")));
0:         Test tst = new SupportFilesSetup(suite, new String[] {
1:             "functionTests/testData/ImportExport/TwoLineBadEOF.dat",
1:             "functionTests/testData/ImportExport/NoEOR.dat",
1:             "functionTests/testData/ImportExport/Access1.txt",
1:             "functionTests/testData/ImportExport/AccountData_defaultformat.dat",
1:             "functionTests/testData/ImportExport/AccountData_format1.dat",
1:             "functionTests/testData/ImportExport/AccountData_format2.dat",
1:             "functionTests/testData/ImportExport/AccountData_format2oops.dat",
1:             "functionTests/testData/ImportExport/AccountData_NullFields.dat",
1:             "functionTests/testData/ImportExport/UnsupportedFormat1.dat",
1:             "functionTests/testData/ImportExport/UnsupportedFormat2.dat",
1:             "functionTests/testData/ImportExport/derby-2193.txt",
1:             "functionTests/testData/ImportExport/derby-2193-linenumber.txt"
1:             }
1:         );
0:         return tst;
0: //		return suite;
1: 	}
1: }
============================================================================