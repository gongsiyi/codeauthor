1:77323ec: /*
1:77323ec:  
1:1bac3f3:    Derby - Class org.apache.derby.impl.store.replication.net.SlaveAddress
1:77323ec:  
1:77323ec:    Licensed to the Apache Software Foundation (ASF) under one or more
1:77323ec:    contributor license agreements.  See the NOTICE file distributed with
1:77323ec:    this work for additional information regarding copyright ownership.
1:77323ec:    The ASF licenses this file to you under the Apache License, Version 2.0
1:77323ec:    (the "License"); you may not use this file except in compliance with
1:77323ec:    the License.  You may obtain a copy of the License at
1:77323ec:  
1:77323ec:       http://www.apache.org/licenses/LICENSE-2.0
1:77323ec:  
1:77323ec:    Unless required by applicable law or agreed to in writing, software
1:77323ec:    distributed under the License is distributed on an "AS IS" BASIS,
1:77323ec:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:77323ec:    See the License for the specific language governing permissions and
1:77323ec:    limitations under the License.
1:77323ec:  
1:77323ec:  */
1:77323ec: 
1:1bac3f3: package org.apache.derby.impl.store.replication.net;
1:77323ec: 
1:77323ec: import java.net.InetAddress;
1:77323ec: import java.net.UnknownHostException;
1:77323ec: 
1:77323ec: /**
1:77323ec:  * Encapsulates the host name and the port number of the slave machine.
1:77323ec:  */
1:77323ec: public class SlaveAddress {
1:77323ec:     /**
1:77323ec:      * Contains the IP Address of the slave to replicate to.
1:77323ec:      */
1:77323ec:     private final InetAddress hostAddress;
1:77323ec:     
1:77323ec:     /**
1:77323ec:      * Contains the port number at which the slave is listening for
1:77323ec:      * connections from the master.
1:77323ec:      */
1:77323ec:     private final int portNumber;
1:77323ec:     
1:77323ec:     /**
1:77323ec:      * Used as the default port number if the port number
1:3920fb4:      * is not mentioned. Port number 4851 is registered for Derby Replication
1:3920fb4:      * at IANA (See: http://www.iana.org/assignments/port-numbers)
1:77323ec:      */
1:3920fb4:     public static final int DEFAULT_PORT_NO = 4851;
1:77323ec:     
1:77323ec:     /**
1:77323ec:      *
1:77323ec:      * Constructor initializes the host name and the port number with
1:77323ec:      * valid values. If a valid host name or port number is not provided 
1:77323ec:      * then these are initialized to default values.
1:77323ec:      *
1:77323ec:      * @param hostName a <code>String</code> that contains the host name of
1:77323ec:      *                 the slave.
1:77323ec:      * @param portNumber an <code>int</code> that contains the port number
1:77323ec:      *                   of the slave.
1:77323ec:      *
1:77323ec:      * @throws UnknownHostException If an exception occurs while trying to
1:77323ec:      *                              resolve the host name.
1:77323ec:      */
1:77323ec:     public SlaveAddress(String hostName, int portNumber) 
1:77323ec:     throws UnknownHostException {
1:77323ec:         //InetAddress#getByName will return the default (localhost) 
1:77323ec:         //if no host name is given.  Hence, no explicit handling of 
1:77323ec:         //default is necessary for the host address.
1:77323ec:         hostAddress = InetAddress.getByName(hostName);
1:77323ec:         //Check if a valid port number has been supplied
1:77323ec:         if (portNumber > 0) { //If yes assign the value to port number
1:77323ec:             this.portNumber = portNumber;
1:77323ec:         } else { //If no assign the default value of the port number
1:77323ec:             this.portNumber = DEFAULT_PORT_NO;
1:77323ec:         }
1:77323ec:     }
1:77323ec:     
1:77323ec:     /**
1:77323ec:      * Used to get the IP Address corresponding to the host name of the
1:77323ec:      * slave.
1:77323ec:      *
1:77323ec:      * @return an IP Address corresponding to the slave host name.
1:77323ec:      */
1:77323ec:     public InetAddress getHostAddress() {
1:77323ec:         return hostAddress;
1:77323ec:     }
1:77323ec:     
1:77323ec:     /**
1:77323ec:      * Used to get the port number of the slave.
1:77323ec:      *
1:77323ec:      * @return an int representing the value of the port number of the slave.
1:77323ec:      */
1:77323ec:     public int getPortNumber() {
1:77323ec:         return portNumber;
1:77323ec:     }
1:77323ec: }
============================================================================
author:Oystein Grovlen
-------------------------------------------------------------------------------
commit:1bac3f3
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.store.replication.net.SlaveAddress
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derby.impl.store.replication.net;
commit:3920fb4
/////////////////////////////////////////////////////////////////////////
1:      * is not mentioned. Port number 4851 is registered for Derby Replication
1:      * at IANA (See: http://www.iana.org/assignments/port-numbers)
1:     public static final int DEFAULT_PORT_NO = 4851;
commit:334e9a3
/////////////////////////////////////////////////////////////////////////
0:     public static final int DEFAULT_PORT_NO = 8001;
commit:77323ec
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
0:    Derby - Class org.apache.derby.impl.services.replication.net.SlaveAddress
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
0: package org.apache.derby.impl.services.replication.net;
1: 
1: import java.net.InetAddress;
1: import java.net.UnknownHostException;
1: 
1: /**
1:  * Encapsulates the host name and the port number of the slave machine.
1:  */
1: public class SlaveAddress {
1:     /**
1:      * Contains the IP Address of the slave to replicate to.
1:      */
1:     private final InetAddress hostAddress;
1:     
1:     /**
1:      * Contains the port number at which the slave is listening for
1:      * connections from the master.
1:      */
1:     private final int portNumber;
1:     
1:     /**
1:      * Used as the default port number if the port number
0:      * is not mentioned.
1:      */
0:     private final int DEFAULT_PORT_NO = 8001;
1:     
1:     /**
1:      *
1:      * Constructor initializes the host name and the port number with
1:      * valid values. If a valid host name or port number is not provided 
1:      * then these are initialized to default values.
1:      *
1:      * @param hostName a <code>String</code> that contains the host name of
1:      *                 the slave.
1:      * @param portNumber an <code>int</code> that contains the port number
1:      *                   of the slave.
1:      *
1:      * @throws UnknownHostException If an exception occurs while trying to
1:      *                              resolve the host name.
1:      */
1:     public SlaveAddress(String hostName, int portNumber) 
1:     throws UnknownHostException {
1:         //InetAddress#getByName will return the default (localhost) 
1:         //if no host name is given.  Hence, no explicit handling of 
1:         //default is necessary for the host address.
1:         hostAddress = InetAddress.getByName(hostName);
1:         //Check if a valid port number has been supplied
1:         if (portNumber > 0) { //If yes assign the value to port number
1:             this.portNumber = portNumber;
1:         } else { //If no assign the default value of the port number
1:             this.portNumber = DEFAULT_PORT_NO;
1:         }
1:     }
1:     
1:     /**
1:      * Used to get the IP Address corresponding to the host name of the
1:      * slave.
1:      *
1:      * @return an IP Address corresponding to the slave host name.
1:      */
1:     public InetAddress getHostAddress() {
1:         return hostAddress;
1:     }
1:     
1:     /**
1:      * Used to get the port number of the slave.
1:      *
1:      * @return an int representing the value of the port number of the slave.
1:      */
1:     public int getPortNumber() {
1:         return portNumber;
1:     }
1: }
============================================================================