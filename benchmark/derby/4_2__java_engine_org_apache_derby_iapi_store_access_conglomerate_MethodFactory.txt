1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.store.access.conglomerate.MethodFactory
1:7ecc1f2: 
1:75c7276:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75c7276:    contributor license agreements.  See the NOTICE file distributed with
1:75c7276:    this work for additional information regarding copyright ownership.
1:75c7276:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75c7276:    (the "License"); you may not use this file except in compliance with
1:75c7276:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.store.access.conglomerate;
1:eac0369: 
1:eac0369: import java.util.Properties;
1:eac0369: import org.apache.derby.catalog.UUID;
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import org.apache.derby.iapi.services.monitor.ModuleSupportable;
1:eac0369: 
2:eac0369: /**
1:eac0369: 
1:eac0369:   The interface of all access method factories.  Specific method factories
1:eac0369:   (sorts, conglomerates), extend this interface.
1:eac0369: 
1:eac0369: **/
1:eac0369: 
1:eac0369: public interface MethodFactory extends ModuleSupportable
1:eac0369: {
1:eac0369: 	/**
1:eac0369: 	Used to identify this interface when finding it with the Monitor.
1:eac0369: 	**/
1:eac0369: 	public static final String MODULE = 
1:eac0369: 	  "org.apache.derby.iapi.store.access.conglomerate.MethodFactory";
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Return the default properties for this access method.
1:eac0369: 	**/
1:eac0369: 	Properties defaultProperties();
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Return whether this access method implements the implementation
1:eac0369: 	type given in the argument string.
1:eac0369: 	**/
1:eac0369: 	boolean supportsImplementation(String implementationId);
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Return the primary implementation type for this access method.
1:eac0369: 	Although an access method may implement more than one implementation
1:eac0369: 	type, this is the expected one.  The access manager will put the
1:eac0369: 	primary implementation type in a hash table for fast access.
1:eac0369: 	**/
1:eac0369: 	String primaryImplementationType();
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Return whether this access method supports the format supplied in
1:eac0369: 	the argument.
1:eac0369: 	**/
1:eac0369: 	boolean supportsFormat(UUID formatid);
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Return the primary format that this access method supports.
1:eac0369: 	Although an access method may support more than one format, this
1:eac0369: 	is the usual one.  the access manager will put the primary format
1:eac0369: 	in a hash table for fast access to the appropriate method.
1:eac0369: 	**/
1:eac0369: 	UUID primaryFormat();
1:eac0369: }
1:eac0369: 
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:75c7276
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.store.access.conglomerate.MethodFactory
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access.conglomerate
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.store.access.conglomerate;
1: 
1: import java.util.Properties;
1: import org.apache.derby.catalog.UUID;
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.services.monitor.ModuleSupportable;
1: 
1: /**
1: 
1:   The interface of all access method factories.  Specific method factories
1:   (sorts, conglomerates), extend this interface.
1: 
1: **/
1: 
1: public interface MethodFactory extends ModuleSupportable
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/**
1: 	Used to identify this interface when finding it with the Monitor.
1: 	**/
1: 	public static final String MODULE = 
1: 	  "org.apache.derby.iapi.store.access.conglomerate.MethodFactory";
1: 
1: 	/**
1: 	Return the default properties for this access method.
1: 	**/
1: 	Properties defaultProperties();
1: 
1: 	/**
1: 	Return whether this access method implements the implementation
1: 	type given in the argument string.
1: 	**/
1: 	boolean supportsImplementation(String implementationId);
1: 
1: 	/**
1: 	Return the primary implementation type for this access method.
1: 	Although an access method may implement more than one implementation
1: 	type, this is the expected one.  The access manager will put the
1: 	primary implementation type in a hash table for fast access.
1: 	**/
1: 	String primaryImplementationType();
1: 
1: 	/**
1: 	Return whether this access method supports the format supplied in
1: 	the argument.
1: 	**/
1: 	boolean supportsFormat(UUID formatid);
1: 
1: 	/**
1: 	Return the primary format that this access method supports.
1: 	Although an access method may support more than one format, this
1: 	is the usual one.  the access manager will put the primary format
1: 	in a hash table for fast access to the appropriate method.
1: 	**/
1: 	UUID primaryFormat();
1: }
1: 
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access.conglomerate
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.store.access.conglomerate;
0: 
0: import java.util.Properties;
0: import org.apache.derby.catalog.UUID;
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.services.monitor.ModuleSupportable;
0: 
0: /**
0: 
0:   The interface of all access method factories.  Specific method factories
0:   (sorts, conglomerates), extend this interface.
0: 
0: **/
0: 
0: public interface MethodFactory extends ModuleSupportable
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/**
0: 	Used to identify this interface when finding it with the Monitor.
0: 	**/
0: 	public static final String MODULE = 
0: 	  "org.apache.derby.iapi.store.access.conglomerate.MethodFactory";
0: 
0: 	/**
0: 	Return the default properties for this access method.
0: 	**/
0: 	Properties defaultProperties();
0: 
0: 	/**
0: 	Return whether this access method implements the implementation
0: 	type given in the argument string.
0: 	**/
0: 	boolean supportsImplementation(String implementationId);
0: 
0: 	/**
0: 	Return the primary implementation type for this access method.
0: 	Although an access method may implement more than one implementation
0: 	type, this is the expected one.  The access manager will put the
0: 	primary implementation type in a hash table for fast access.
0: 	**/
0: 	String primaryImplementationType();
0: 
0: 	/**
0: 	Return whether this access method supports the format supplied in
0: 	the argument.
0: 	**/
0: 	boolean supportsFormat(UUID formatid);
0: 
0: 	/**
0: 	Return the primary format that this access method supports.
0: 	Although an access method may support more than one format, this
0: 	is the usual one.  the access manager will put the primary format
0: 	in a hash table for fast access to the appropriate method.
0: 	**/
0: 	UUID primaryFormat();
0: }
0: 
============================================================================