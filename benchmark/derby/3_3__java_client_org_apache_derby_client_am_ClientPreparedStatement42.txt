1:7cfb7e6: /*
2:7cfb7e6: 
1:7cfb7e6:    Derby - Class org.apache.derby.client.am.PreparedStatement42
1:7cfb7e6: 
1:7cfb7e6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:7cfb7e6:    contributor license agreements.  See the NOTICE file distributed with
1:7cfb7e6:    this work for additional information regarding copyright ownership.
1:7cfb7e6:    The ASF licenses this file to You under the Apache License, Version 2.0
1:7cfb7e6:    (the "License"); you may not use this file except in compliance with
1:7cfb7e6:    the License.  You may obtain a copy of the License at
1:7cfb7e6: 
1:7cfb7e6:       http://www.apache.org/licenses/LICENSE-2.0
1:7cfb7e6: 
1:7cfb7e6:    Unless required by applicable law or agreed to in writing, software
1:7cfb7e6:    distributed under the License is distributed on an "AS IS" BASIS,
1:7cfb7e6:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7cfb7e6:    See the License for the specific language governing permissions and
1:7cfb7e6:    limitations under the License.
1:7cfb7e6: 
2:7cfb7e6: */
1:7cfb7e6: 
1:7cfb7e6: package org.apache.derby.client.am;
1:7cfb7e6: 
1:7cfb7e6: import java.sql.SQLException;
1:7cfb7e6: import java.sql.SQLType;
1:7cfb7e6: import org.apache.derby.client.ClientPooledConnection;
1:7cfb7e6: 
1:9a0cdf1: public class  ClientPreparedStatement42 extends ClientPreparedStatement
2:7cfb7e6: {
2:7cfb7e6:     /**
1:7cfb7e6:      * The PreparedStatement used for JDBC 4.2 positioned update statements.
1:7cfb7e6:      * Called by material statement constructors.
1:7cfb7e6:      * It has the ClientPooledConnection as one of its parameters 
1:7cfb7e6:      * this is used to raise the Statement Events when the prepared
1:7cfb7e6:      * statement is closed
1:7cfb7e6:      */
1:69e3d06:     public ClientPreparedStatement42
1:7cfb7e6:         (
1:69e3d06:          Agent agent, ClientConnection connection, String sql,
1:7cfb7e6:          Section section,ClientPooledConnection cpc
1:7cfb7e6:          ) throws SqlException
1:7cfb7e6:     {
1:7cfb7e6:         super(agent, connection,sql,section,cpc);
3:7cfb7e6:     }
1:7cfb7e6:     
1:7cfb7e6:     /**
1:7cfb7e6:      * The PreparedStatementConstructor used for jdbc 4.2 prepared statements 
1:7cfb7e6:      * with scroll attributes. Called by material statement constructors.
1:7cfb7e6:      * It has the ClientPooledConnection as one of its parameters 
1:7cfb7e6:      * this is used to raise the Statement Events when the prepared
1:7cfb7e6:      * statement is closed
1:7cfb7e6:      */
1:69e3d06:     public ClientPreparedStatement42
1:7cfb7e6:         (
1:69e3d06:          Agent agent, ClientConnection connection,String sql,
1:7cfb7e6:          int type, int concurrency, int holdability, int autoGeneratedKeys, 
1:7cfb7e6:          String[] columnNames, int[] columnIndexes, ClientPooledConnection cpc
1:7cfb7e6:          ) throws SqlException
1:7cfb7e6:     {
1:7cfb7e6:         super(agent, connection, sql, type, concurrency, holdability, autoGeneratedKeys,
1:7cfb7e6:                 columnNames, columnIndexes, cpc);
1:7cfb7e6:     }
1:7cfb7e6:     
1:7cfb7e6:     public  void setObject
1:69e3d06:         ( int parameterIndex, Object x, SQLType targetSqlType )
1:7cfb7e6:         throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         synchronized (connection_)
1:7cfb7e6:         {
1:7cfb7e6:             if (agent_.loggingEnabled()) {
1:7cfb7e6:                 agent_.logWriter_.traceEntry( this, "setObject", parameterIndex, x, targetSqlType );
1:7cfb7e6:             }
1:7cfb7e6:             
1:7cfb7e6:             checkStatus();
1:7cfb7e6:             setObject
1:7cfb7e6:                 (
1:7cfb7e6:                  parameterIndex, x,
1:7cfb7e6:                  Utils42.getTypeAsInt( agent_, targetSqlType )
1:7cfb7e6:                  );
1:7cfb7e6:         }
1:7cfb7e6:     }
1:7cfb7e6:     
1:7cfb7e6:     public void setObject
1:7cfb7e6:         (
1:69e3d06:          int parameterIndex, Object x,
1:7cfb7e6:          SQLType targetSqlType, int scaleOrLength
1:7cfb7e6:          )  throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         synchronized (connection_)
1:7cfb7e6:         {
1:7cfb7e6:             if (agent_.loggingEnabled()) {
1:7cfb7e6:                 agent_.logWriter_.traceEntry
1:39b3237:                     ( this, "setObject", parameterIndex, x, targetSqlType, scaleOrLength );
1:7cfb7e6:             }
1:7cfb7e6:             
1:7cfb7e6:             checkStatus();
1:7cfb7e6:             setObject
1:7cfb7e6:                 (
1:7cfb7e6:                  parameterIndex, x,
1:7cfb7e6:                  Utils42.getTypeAsInt( agent_, targetSqlType ),
1:7cfb7e6:                  scaleOrLength
1:7cfb7e6:                  );
1:7cfb7e6:         }
1:7cfb7e6:     }
1:7cfb7e6: 
1:7cfb7e6: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:39b3237
/////////////////////////////////////////////////////////////////////////
1:                     ( this, "setObject", parameterIndex, x, targetSqlType, scaleOrLength );
commit:01c7f83
/////////////////////////////////////////////////////////////////////////
commit:7cfb7e6
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.am.PreparedStatement42
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.client.am;
1: 
1: import java.sql.SQLException;
1: import java.sql.SQLType;
1: import org.apache.derby.client.ClientPooledConnection;
1: 
0: public class  PreparedStatement42 extends  org.apache.derby.client.am.PreparedStatement40
1: {
1:     /**
1:      * The PreparedStatement used for JDBC 4.2 positioned update statements.
1:      * Called by material statement constructors.
1:      * It has the ClientPooledConnection as one of its parameters 
1:      * this is used to raise the Statement Events when the prepared
1:      * statement is closed
1:      */
0:     public PreparedStatement42
1:         (
0:          Agent agent, Connection connection, String sql,
1:          Section section,ClientPooledConnection cpc
1:          ) throws SqlException
1:     {
1:         super(agent, connection,sql,section,cpc);
1:     }
1:     
1:     /**
1:      * The PreparedStatementConstructor used for jdbc 4.2 prepared statements 
1:      * with scroll attributes. Called by material statement constructors.
1:      * It has the ClientPooledConnection as one of its parameters 
1:      * this is used to raise the Statement Events when the prepared
1:      * statement is closed
1:      */
0:     public PreparedStatement42
1:         (
0:          Agent agent, Connection connection,String sql,
1:          int type, int concurrency, int holdability, int autoGeneratedKeys, 
1:          String[] columnNames, int[] columnIndexes, ClientPooledConnection cpc
1:          ) throws SqlException
1:     {
1:         super(agent, connection, sql, type, concurrency, holdability, autoGeneratedKeys,
1:                 columnNames, columnIndexes, cpc);
1:     }
1:     
1:     public  void setObject
0:         ( int parameterIndex, java.lang.Object x, SQLType targetSqlType )
1:         throws SQLException
1:     {
1:         synchronized (connection_)
1:         {
1:             if (agent_.loggingEnabled()) {
1:                 agent_.logWriter_.traceEntry( this, "setObject", parameterIndex, x, targetSqlType );
1:             }
1:             
1:             checkStatus();
1:             setObject
1:                 (
1:                  parameterIndex, x,
1:                  Utils42.getTypeAsInt( agent_, targetSqlType )
1:                  );
1:         }
1:     }
1:     
1:     public void setObject
1:         (
0:          int parameterIndex, java.lang.Object x,
1:          SQLType targetSqlType, int scaleOrLength
1:          )  throws SQLException
1:     {
1:         synchronized (connection_)
1:         {
1:             if (agent_.loggingEnabled()) {
1:                 agent_.logWriter_.traceEntry
0:                     ( this, "setObject", new Integer( parameterIndex ), x, targetSqlType, new Integer( scaleOrLength ) );
1:             }
1:             
1:             checkStatus();
1:             setObject
1:                 (
1:                  parameterIndex, x,
1:                  Utils42.getTypeAsInt( agent_, targetSqlType ),
1:                  scaleOrLength
1:                  );
1:         }
1:     }
1: 
1:     /**
0:      * <p>
0:      * Check for closed statement and extract the SQLException if it is raised.
0:      * </p>
1:      */
0:     private void    checkStatus() throws SQLException
1:     {
0:         try {
0:             checkForClosedStatement();
1:         }
0:         catch (SqlException se) { throw se.getSQLException(); }
1:     }
1: 
1: }
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:9a0cdf1
/////////////////////////////////////////////////////////////////////////
1: public class  ClientPreparedStatement42 extends ClientPreparedStatement
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:69e3d06
/////////////////////////////////////////////////////////////////////////
0: public class  ClientPreparedStatement42 extends ClientPreparedStatement40
/////////////////////////////////////////////////////////////////////////
1:     public ClientPreparedStatement42
1:          Agent agent, ClientConnection connection, String sql,
/////////////////////////////////////////////////////////////////////////
1:     public ClientPreparedStatement42
1:          Agent agent, ClientConnection connection,String sql,
/////////////////////////////////////////////////////////////////////////
1:         ( int parameterIndex, Object x, SQLType targetSqlType )
/////////////////////////////////////////////////////////////////////////
1:          int parameterIndex, Object x,
commit:b13b17c
/////////////////////////////////////////////////////////////////////////
0: public class PreparedStatement42 extends PreparedStatement40
============================================================================