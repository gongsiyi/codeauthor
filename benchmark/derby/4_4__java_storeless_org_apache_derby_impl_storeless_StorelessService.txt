1:a96a2ab: /*
1:a96a2ab: 
1:a96a2ab:    Derby - Class org.apache.impl.storeless.StorelessService
1:a96a2ab: 
1:a96a2ab:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a96a2ab:    contributor license agreements.  See the NOTICE file distributed with
1:a96a2ab:    this work for additional information regarding copyright ownership.
1:a96a2ab:    The ASF licenses this file to You under the Apache License, Version 2.0
1:a96a2ab:    (the "License"); you may not use this file except in compliance with
1:a96a2ab:    the License.  You may obtain a copy of the License at
1:a96a2ab: 
1:a96a2ab:       http://www.apache.org/licenses/LICENSE-2.0
1:a96a2ab: 
1:a96a2ab:    Unless required by applicable law or agreed to in writing, software
1:a96a2ab:    distributed under the License is distributed on an "AS IS" BASIS,
1:a96a2ab:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a96a2ab:    See the License for the specific language governing permissions and
1:a96a2ab:    limitations under the License.
1:a96a2ab: 
1:a96a2ab:  */
1:a96a2ab: package org.apache.derby.impl.storeless;
1:a96a2ab: 
1:a96a2ab: import java.io.IOException;
1:a96a2ab: import java.util.Enumeration;
1:a96a2ab: import java.util.Properties;
1:a96a2ab: 
1:a96a2ab: import org.apache.derby.iapi.error.StandardException;
1:a96a2ab: import org.apache.derby.iapi.reference.EngineType;
1:a96a2ab: import org.apache.derby.iapi.reference.Property;
1:a96a2ab: import org.apache.derby.iapi.services.monitor.PersistentService;
1:a96a2ab: import org.apache.derby.io.StorageFactory;
1:a96a2ab: 
1:a96a2ab: /**
1:a96a2ab:  * PersistentService for the storeless engine.
1:a96a2ab:  * Type is 'storeless' which will correspond to
1:a96a2ab:  * the JDBC URL 'jdbc:derby:storeless'.
1:a96a2ab:  *
1:a96a2ab:  */
1:a96a2ab: public class StorelessService implements PersistentService {
1:a96a2ab: 	
1:a96a2ab: 	public StorelessService()
1:a96a2ab: 	{
1:a96a2ab: 	}
1:a96a2ab: 	
1:a96a2ab: 	public String getType() {
1:a96a2ab: 		return "storeless";
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public Enumeration getBootTimeServices() {
1:a96a2ab: 		return null;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public Properties getServiceProperties(String serviceName, Properties defaultProperties) throws StandardException {
1:a96a2ab: 		
1:a96a2ab: 		Properties service = new Properties(defaultProperties);
1:a96a2ab: 		service.setProperty(Property.SERVICE_PROTOCOL,
1:a96a2ab:                 "org.apache.derby.database.Database");
1:a96a2ab: 		service.setProperty(EngineType.PROPERTY,
1:a96a2ab:                 Integer.toString(getEngineType()));
1:a96a2ab: 		return service;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public void saveServiceProperties(String serviceName, StorageFactory storageFactory, Properties properties, boolean replace) throws StandardException {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		
1:a96a2ab: 	}
1:a96a2ab: 
1:5f5bc5f:     public void saveServiceProperties(String serviceName,
1:5f5bc5f:                                       Properties properties)
1:5f5bc5f:             throws StandardException {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public String createServiceRoot(String name, boolean deleteExisting) throws StandardException {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		return null;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public boolean removeServiceRoot(String serviceName) {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		return false;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public String getCanonicalServiceName(String name) {
1:a96a2ab: 		return name;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public String getUserServiceName(String serviceName) {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		return null;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public boolean isSameService(String serviceName1, String serviceName2) {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		return serviceName1.equals(serviceName2);
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public boolean hasStorageFactory() {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		return false;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab: 	public StorageFactory getStorageFactoryInstance(boolean useHome, String databaseName, String tempDirName, String uniqueName) throws StandardException, IOException {
1:cc23071: 		// Auto-generated method stub
1:a96a2ab: 		return null;
1:a96a2ab: 	}
1:a96a2ab: 
1:a96a2ab:     protected int getEngineType() {
1:a96a2ab:         return EngineType.STORELESS_ENGINE;
1:a96a2ab:     }
1:651c99e: 
1:651c99e:     /** @see PersistentService#createDataWarningFile */
1:651c99e:     public void createDataWarningFile(StorageFactory sf) 
1:651c99e:             throws StandardException {
1:651c99e:         // Auto-generated method stub
1:651c99e:     }
1:a96a2ab: }
============================================================================
author:Mamta Satoor
-------------------------------------------------------------------------------
commit:651c99e
/////////////////////////////////////////////////////////////////////////
1: 
1:     /** @see PersistentService#createDataWarningFile */
1:     public void createDataWarningFile(StorageFactory sf) 
1:             throws StandardException {
1:         // Auto-generated method stub
1:     }
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:cc23071
/////////////////////////////////////////////////////////////////////////
1: 		// Auto-generated method stub
1: 		// Auto-generated method stub
1: 		// Auto-generated method stub
1: 		// Auto-generated method stub
/////////////////////////////////////////////////////////////////////////
1: 		// Auto-generated method stub
1: 		// Auto-generated method stub
1: 		// Auto-generated method stub
1: 		// Auto-generated method stub
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:5f5bc5f
/////////////////////////////////////////////////////////////////////////
1:     public void saveServiceProperties(String serviceName,
1:                                       Properties properties)
1:             throws StandardException {
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:a96a2ab
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.impl.storeless.StorelessService
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derby.impl.storeless;
1: 
1: import java.io.IOException;
1: import java.util.Enumeration;
1: import java.util.Properties;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.reference.EngineType;
1: import org.apache.derby.iapi.reference.Property;
1: import org.apache.derby.iapi.services.monitor.PersistentService;
1: import org.apache.derby.io.StorageFactory;
1: 
1: /**
1:  * PersistentService for the storeless engine.
1:  * Type is 'storeless' which will correspond to
1:  * the JDBC URL 'jdbc:derby:storeless'.
1:  *
1:  */
1: public class StorelessService implements PersistentService {
1: 	
1: 	public StorelessService()
1: 	{
1: 	}
1: 	
1: 	public String getType() {
1: 		return "storeless";
1: 	}
1: 
1: 	public Enumeration getBootTimeServices() {
1: 		return null;
1: 	}
1: 
1: 	public Properties getServiceProperties(String serviceName, Properties defaultProperties) throws StandardException {
1: 		
1: 		Properties service = new Properties(defaultProperties);
1: 		service.setProperty(Property.SERVICE_PROTOCOL,
1:                 "org.apache.derby.database.Database");
1: 		service.setProperty(EngineType.PROPERTY,
1:                 Integer.toString(getEngineType()));
1: 		return service;
1: 	}
1: 
1: 	public void saveServiceProperties(String serviceName, StorageFactory storageFactory, Properties properties, boolean replace) throws StandardException {
0: 		// TODO Auto-generated method stub
1: 		
1: 	}
1: 
0: 	public void saveServiceProperties(String serviceName, Properties properties, boolean replace) throws StandardException {
0: 		// TODO Auto-generated method stub
1: 		
1: 	}
1: 
1: 	public String createServiceRoot(String name, boolean deleteExisting) throws StandardException {
0: 		// TODO Auto-generated method stub
1: 		return null;
1: 	}
1: 
1: 	public boolean removeServiceRoot(String serviceName) {
0: 		// TODO Auto-generated method stub
1: 		return false;
1: 	}
1: 
1: 	public String getCanonicalServiceName(String name) {
1: 		return name;
1: 	}
1: 
1: 	public String getUserServiceName(String serviceName) {
0: 		// TODO Auto-generated method stub
1: 		return null;
1: 	}
1: 
1: 	public boolean isSameService(String serviceName1, String serviceName2) {
0: 		// TODO Auto-generated method stub
1: 		return serviceName1.equals(serviceName2);
1: 	}
1: 
1: 	public boolean hasStorageFactory() {
0: 		// TODO Auto-generated method stub
1: 		return false;
1: 	}
1: 
1: 	public StorageFactory getStorageFactoryInstance(boolean useHome, String databaseName, String tempDirName, String uniqueName) throws StandardException, IOException {
0: 		// TODO Auto-generated method stub
1: 		return null;
1: 	}
1: 
1:     protected int getEngineType() {
1:         return EngineType.STORELESS_ENGINE;
1:     }
1: }
============================================================================