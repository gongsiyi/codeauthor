1:2c38f3c: /*
1:2c38f3c: 
1:2c38f3c:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.JsonSuite
1:2c38f3c: 
1:2c38f3c:        Licensed to the Apache Software Foundation (ASF) under one
1:2c38f3c:        or more contributor license agreements.  See the NOTICE file
1:2c38f3c:        distributed with this work for additional information
1:2c38f3c:        regarding copyright ownership.  The ASF licenses this file
1:2c38f3c:        to you under the Apache License, Version 2.0 (the
1:2c38f3c:        "License"); you may not use this file except in compliance
1:2c38f3c:        with the License.  You may obtain a copy of the License at
1:2c38f3c: 
1:2c38f3c:          http://www.apache.org/licenses/LICENSE-2.0
1:2c38f3c: 
1:2c38f3c:        Unless required by applicable law or agreed to in writing,
1:2c38f3c:        software distributed under the License is distributed on an
1:2c38f3c:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:2c38f3c:        KIND, either express or implied.  See the License for the
1:2c38f3c:        specific language governing permissions and limitations
1:2c38f3c:        under the License
1:2c38f3c: */
1:2c38f3c: package org.apache.derbyTesting.functionTests.tests.lang;
1:2c38f3c: 
1:2c38f3c: import java.util.Properties;
1:2c38f3c: import junit.framework.Test;
1:2c38f3c: import org.apache.derbyTesting.junit.BaseTestCase;
1:2c38f3c: import org.apache.derbyTesting.junit.BaseTestSuite;
1:2c38f3c: import org.apache.derbyTesting.junit.JDBC;
1:2c38f3c: import org.apache.derbyTesting.junit.TestConfiguration;
1:2c38f3c: 
1:2c38f3c: /**
1:2c38f3c:  * Suite holding all of the tests for the optional simple json support.
1:2c38f3c:  *
1:2c38f3c:  */
1:2c38f3c: public class JsonSuite extends BaseTestCase
1:2c38f3c: {
1:2c38f3c: 
1:2c38f3c: 	/**
1:2c38f3c: 	 * Use suite method instead.
1:2c38f3c: 	 */
1:2c38f3c: 	private JsonSuite(String name) { super(name); }
1:2c38f3c: 
1:2c38f3c: 	public static Test suite()
1:2c38f3c:     {
1:2c38f3c:         BaseTestSuite suite = new BaseTestSuite("JsonSuite");
1:2c38f3c:         Properties  properties = TestConfiguration.getSystemProperties();
1:2c38f3c:         
1:2c38f3c:         //
1:2c38f3c:         // If we're told to omit the json tests, make sure
1:2c38f3c:         // that the json jar file isn't on the classpath.
1:2c38f3c:         //
1:2c38f3c:         if ( getBooleanProperty( properties, TestConfiguration.KEY_OMIT_JSON ) )
1:2c38f3c:         {
1:2c38f3c:             assertFalse
1:2c38f3c:                 ( "The json-simple jar file should not be on the classpath!", JDBC.HAVE_JSON_SIMPLE );
1:2c38f3c:         }
1:2c38f3c:         else
1:2c38f3c:         {
1:2c38f3c:             suite.addTest(SimpleJsonTest.suite());
1:6b8ad38:             suite.addTest(SimpleJsonPermsTest.suite());
1:2c38f3c:         }
1:2c38f3c: 
1:2c38f3c:         return suite;
1:2c38f3c: 	}
1:2c38f3c: 
1:2c38f3c:     /** Return the boolean value of a system property */
1:2c38f3c:     private static  boolean getBooleanProperty( Properties properties, String key )
1:2c38f3c:     {
1:2c38f3c:         return Boolean.valueOf( properties.getProperty( key ) ).booleanValue();
1:2c38f3c:     }
1:2c38f3c: 
1:2c38f3c: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6b8ad38
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(SimpleJsonPermsTest.suite());
commit:2c38f3c
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.JsonSuite
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.util.Properties;
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
1: import org.apache.derbyTesting.junit.JDBC;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: /**
1:  * Suite holding all of the tests for the optional simple json support.
1:  *
1:  */
1: public class JsonSuite extends BaseTestCase
1: {
1: 
1: 	/**
1: 	 * Use suite method instead.
1: 	 */
1: 	private JsonSuite(String name) { super(name); }
1: 
1: 	public static Test suite()
1:     {
1:         BaseTestSuite suite = new BaseTestSuite("JsonSuite");
1:         Properties  properties = TestConfiguration.getSystemProperties();
1:         
1:         //
1:         // If we're told to omit the json tests, make sure
1:         // that the json jar file isn't on the classpath.
1:         //
1:         if ( getBooleanProperty( properties, TestConfiguration.KEY_OMIT_JSON ) )
1:         {
1:             assertFalse
1:                 ( "The json-simple jar file should not be on the classpath!", JDBC.HAVE_JSON_SIMPLE );
1:         }
1:         else
1:         {
1:             suite.addTest(SimpleJsonTest.suite());
1:         }
1: 
1:         return suite;
1: 	}
1: 
1:     /** Return the boolean value of a system property */
1:     private static  boolean getBooleanProperty( Properties properties, String key )
1:     {
1:         return Boolean.valueOf( properties.getProperty( key ) ).booleanValue();
1:     }
1: 
1: }
============================================================================