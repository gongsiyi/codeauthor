1:04adc29: /*
1:04adc29: 
1:04adc29:  Derby - Class org.apache.derbyTesting.functionTests.tests.management.RemoteConnectionGetter
1:04adc29: 
1:04adc29:  Licensed to the Apache Software Foundation (ASF) under one or more
1:04adc29:  contributor license agreements.  See the NOTICE file distributed with
1:04adc29:  this work for additional information regarding copyright ownership.
1:04adc29:  The ASF licenses this file to you under the Apache License, Version 2.0
1:04adc29:  (the "License"); you may not use this file except in compliance with
1:04adc29:  the License.  You may obtain a copy of the License at
1:04adc29: 
1:04adc29:  http://www.apache.org/licenses/LICENSE-2.0
1:04adc29: 
1:04adc29:  Unless required by applicable law or agreed to in writing, software
1:04adc29:  distributed under the License is distributed on an "AS IS" BASIS,
1:04adc29:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:04adc29:  See the License for the specific language governing permissions and
1:04adc29:  limitations under the License.
1:04adc29: 
1:04adc29:  */
1:04adc29: package org.apache.derbyTesting.functionTests.tests.management;
1:04adc29: 
1:3b904d7: import java.util.HashMap;
1:3b904d7: import java.util.Map;
1:3b904d7: 
1:04adc29: import javax.management.MBeanServerConnection;
1:04adc29: import javax.management.remote.JMXConnector;
1:04adc29: import javax.management.remote.JMXConnectorFactory;
1:04adc29: import javax.management.remote.JMXServiceURL;
1:04adc29: 
1:04adc29: /**
1:04adc29:  * JMXConnectionGetter using a JMXServiceURL, currently
1:04adc29:  * with no authentication and not using SSL.
1:04adc29:  *
1:04adc29:  */
1:04adc29: class RemoteConnectionGetter implements JMXConnectionGetter {
1:3b904d7:     
1:3b904d7:     static final ThreadLocal<Map<MBeanServerConnection,JMXConnector>> connections =
1:3b904d7:         new ThreadLocal<Map<MBeanServerConnection,JMXConnector>>();
1:04adc29: 
1:04adc29:     private final JMXServiceURL url;
1:04adc29: 
1:04adc29:     RemoteConnectionGetter(JMXServiceURL url) {
1:04adc29:         this.url = url;
1:04adc29:     }
1:04adc29: 
1:cafbf4d:     public MBeanServerConnection getMBeanServerConnection(String user,
1:cafbf4d:             String password) throws Exception {
1:cafbf4d:         
1:cafbf4d:         HashMap<String,String[]> env = new HashMap<String,String[]>();
1:cafbf4d:         if (user != null) {
1:cafbf4d:            String[] credentials = new String[] {
1:cafbf4d:                    user, password };
1:cafbf4d:            env.put("jmx.remote.credentials", credentials);
1:cafbf4d:         }
1:cafbf4d:         
1:cafbf4d:         JMXConnector jmxc = JMXConnectorFactory.connect(url, env);
1:3b904d7:         MBeanServerConnection jmxConn =  jmxc.getMBeanServerConnection();
1:3b904d7:         
1:3b904d7:         Map<MBeanServerConnection,JMXConnector> conns = connections.get();
1:3b904d7:         if (conns == null) {
1:3b904d7:             conns = new HashMap<MBeanServerConnection,JMXConnector>();
1:3b904d7:             connections.set(conns);
1:3b904d7:         }
1:3b904d7:         
1:3b904d7:         conns.put(jmxConn, jmxc);
1:3b904d7:         
1:3b904d7:         return jmxConn;
1:3b904d7:     }
1:3b904d7: 
1:3b904d7:     public void close(MBeanServerConnection jmxConnection) throws Exception {
1:3b904d7:         Map<MBeanServerConnection,JMXConnector> conns = connections.get();
1:3b904d7:         JMXConnector jmxc = conns.remove(jmxConnection);
1:3b904d7:         jmxc.close();
1:04adc29:     }
1:04adc29: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:cafbf4d
/////////////////////////////////////////////////////////////////////////
1:     public MBeanServerConnection getMBeanServerConnection(String user,
1:             String password) throws Exception {
1:         
1:         HashMap<String,String[]> env = new HashMap<String,String[]>();
1:         if (user != null) {
1:            String[] credentials = new String[] {
1:                    user, password };
1:            env.put("jmx.remote.credentials", credentials);
1:         }
1:         
1:         JMXConnector jmxc = JMXConnectorFactory.connect(url, env);
commit:3b904d7
/////////////////////////////////////////////////////////////////////////
1: import java.util.HashMap;
1: import java.util.Map;
1: 
/////////////////////////////////////////////////////////////////////////
1:     
1:     static final ThreadLocal<Map<MBeanServerConnection,JMXConnector>> connections =
1:         new ThreadLocal<Map<MBeanServerConnection,JMXConnector>>();
/////////////////////////////////////////////////////////////////////////
1:         MBeanServerConnection jmxConn =  jmxc.getMBeanServerConnection();
1:         
1:         Map<MBeanServerConnection,JMXConnector> conns = connections.get();
1:         if (conns == null) {
1:             conns = new HashMap<MBeanServerConnection,JMXConnector>();
1:             connections.set(conns);
1:         }
1:         
1:         conns.put(jmxConn, jmxc);
1:         
1:         return jmxConn;
1:     }
1: 
1:     public void close(MBeanServerConnection jmxConnection) throws Exception {
1:         Map<MBeanServerConnection,JMXConnector> conns = connections.get();
1:         JMXConnector jmxc = conns.remove(jmxConnection);
1:         jmxc.close();
commit:04adc29
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:  Derby - Class org.apache.derbyTesting.functionTests.tests.management.RemoteConnectionGetter
1: 
1:  Licensed to the Apache Software Foundation (ASF) under one or more
1:  contributor license agreements.  See the NOTICE file distributed with
1:  this work for additional information regarding copyright ownership.
1:  The ASF licenses this file to you under the Apache License, Version 2.0
1:  (the "License"); you may not use this file except in compliance with
1:  the License.  You may obtain a copy of the License at
1: 
1:  http://www.apache.org/licenses/LICENSE-2.0
1: 
1:  Unless required by applicable law or agreed to in writing, software
1:  distributed under the License is distributed on an "AS IS" BASIS,
1:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  See the License for the specific language governing permissions and
1:  limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.functionTests.tests.management;
1: 
1: import javax.management.MBeanServerConnection;
1: import javax.management.remote.JMXConnector;
1: import javax.management.remote.JMXConnectorFactory;
1: import javax.management.remote.JMXServiceURL;
1: 
1: /**
1:  * JMXConnectionGetter using a JMXServiceURL, currently
1:  * with no authentication and not using SSL.
1:  *
1:  */
1: class RemoteConnectionGetter implements JMXConnectionGetter {
1: 
1:     private final JMXServiceURL url;
1: 
1:     RemoteConnectionGetter(JMXServiceURL url) {
1:         this.url = url;
1:     }
1: 
0:     public MBeanServerConnection getMBeanServerConnection() throws Exception {
0:         // assumes that JMX authentication and SSL is not required (hence null)
0:         JMXConnector jmxc = JMXConnectorFactory.connect(url, null);
0:         return jmxc.getMBeanServerConnection();
1:     }
1: }
============================================================================