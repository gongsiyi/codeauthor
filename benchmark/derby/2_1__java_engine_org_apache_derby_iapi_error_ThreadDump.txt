1:022cb5b: /*
1:022cb5b: 
1:022cb5b:    Derby - Class org.apache.derby.iapi.error.ThreadDump
1:022cb5b: 
1:022cb5b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:022cb5b:    contributor license agreements.  See the NOTICE file distributed with
1:022cb5b:    this work for additional information regarding copyright ownership.
1:022cb5b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:022cb5b:    (the "License"); you may not use this file except in compliance with
1:022cb5b:    the License.  You may obtain a copy of the License at
1:022cb5b: 
1:022cb5b:       http://www.apache.org/licenses/LICENSE-2.0
1:022cb5b: 
1:022cb5b:    Unless required by applicable law or agreed to in writing, software
1:022cb5b:    distributed under the License is distributed on an "AS IS" BASIS,
1:022cb5b:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:022cb5b:    See the License for the specific language governing permissions and
1:022cb5b:    limitations under the License.
1:022cb5b: 
1:022cb5b:  */
1:022cb5b: 
1:022cb5b: package org.apache.derby.iapi.error;
1:022cb5b: 
1:022cb5b: /* Until DERBY-289 related issue settle for shared code
1:022cb5b:  * Engine have similar code as client code even though some of 
1:022cb5b:  * code is potentially sharable. If you fix a bug in ThreadDump for engine, 
1:022cb5b:  * please also change the code in 
1:022cb5b:  * java/shared/org/apache/derby/shared/common/sanity/ThreadDump.java for 
1:022cb5b:  * client if necessary.
1:022cb5b:  */
1:022cb5b: 
1:022cb5b: import java.util.Map;
1:022cb5b: 
1:022cb5b: public class ThreadDump {
1:022cb5b: 
1:022cb5b:     /**
1:022cb5b:      * 
1:022cb5b:      * @return A string representation of a full thread dump
1:022cb5b:      */
1:022cb5b:     public static String getStackDumpString() {
1:022cb5b:         StringBuffer sb = new StringBuffer();
1:022cb5b:         Map<Thread, StackTraceElement[]> st = Thread.getAllStackTraces();
1:022cb5b:         for (Map.Entry<Thread, StackTraceElement[]> e : st.entrySet()) {
1:022cb5b:             StackTraceElement[] lines = e.getValue();
1:022cb5b:             Thread t = e.getKey();
1:022cb5b:             sb.append("Thread name=" + t.getName() + " id=" + t.getId()
1:022cb5b:                     + " priority=" + t.getPriority() + " state=" + t.getState()
1:022cb5b:                     + " isdaemon=" + t.isDaemon() + "\n");
1:022cb5b:             for (int i = 0; i < lines.length; i++) {
1:022cb5b:                 sb.append("\t" + lines[i] + "\n");
1:022cb5b: 
1:022cb5b:             }
1:022cb5b:             sb.append("\n");
1:022cb5b:         }
1:022cb5b:         return sb.toString();
1:022cb5b:     }
1:022cb5b: 
1:022cb5b: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:022cb5b
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.error.ThreadDump
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.error;
1: 
1: /* Until DERBY-289 related issue settle for shared code
1:  * Engine have similar code as client code even though some of 
1:  * code is potentially sharable. If you fix a bug in ThreadDump for engine, 
1:  * please also change the code in 
1:  * java/shared/org/apache/derby/shared/common/sanity/ThreadDump.java for 
1:  * client if necessary.
1:  */
1: 
1: import java.util.Map;
1: 
1: public class ThreadDump {
1: 
1:     /**
1:      * 
1:      * @return A string representation of a full thread dump
1:      */
1:     public static String getStackDumpString() {
1:         StringBuffer sb = new StringBuffer();
1:         Map<Thread, StackTraceElement[]> st = Thread.getAllStackTraces();
1:         for (Map.Entry<Thread, StackTraceElement[]> e : st.entrySet()) {
1:             StackTraceElement[] lines = e.getValue();
1:             Thread t = e.getKey();
1:             sb.append("Thread name=" + t.getName() + " id=" + t.getId()
1:                     + " priority=" + t.getPriority() + " state=" + t.getState()
1:                     + " isdaemon=" + t.isDaemon() + "\n");
1:             for (int i = 0; i < lines.length; i++) {
1:                 sb.append("\t" + lines[i] + "\n");
1: 
1:             }
1:             sb.append("\n");
1:         }
1:         return sb.toString();
1:     }
1: 
1: }
author:Lily Wei
-------------------------------------------------------------------------------
commit:b175fd2
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Derby - Class org.apache.derby.iapi.error.ThreadDump
0: 
0:    Licensed to the Apache Software Foundation (ASF) under one or more
0:    contributor license agreements.  See the NOTICE file distributed with
0:    this work for additional information regarding copyright ownership.
0:    The ASF licenses this file to you under the Apache License, Version 2.0
0:    (the "License"); you may not use this file except in compliance with
0:    the License.  You may obtain a copy of the License at
0: 
0:       http://www.apache.org/licenses/LICENSE-2.0
0: 
0:    Unless required by applicable law or agreed to in writing, software
0:    distributed under the License is distributed on an "AS IS" BASIS,
0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:    See the License for the specific language governing permissions and
0:    limitations under the License.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.error;
0: 
0: /* Until DERBY-289 related issue settle for shared code
0:  * Engine have similar code as client code even though some of 
0:  * code is potentially sharable. If you fix a bug in ThreadDump for engine, 
0:  * please also change the code in 
0:  * java/shared/org/apache/derby/shared/common/sanity/ThreadDump.java for 
0:  * client if necessary.
0:  */
0: 
0: import java.util.Map;
0: 
0: public class ThreadDump {
0: 
0:     /**
0:      * 
0:      * @return A string representation of a full thread dump
0:      */
0:     public static String getStackDumpString() {
0:         StringBuffer sb = new StringBuffer();
0:         Map<Thread, StackTraceElement[]> st = Thread.getAllStackTraces();
0:         for (Map.Entry<Thread, StackTraceElement[]> e : st.entrySet()) {
0:             StackTraceElement[] lines = e.getValue();
0:             Thread t = e.getKey();
0:             sb.append("Thread name=" + t.getName() + " id=" + t.getId()
0:                     + " priority=" + t.getPriority() + " state=" + t.getState()
0:                     + " isdaemon=" + t.isDaemon() + "\n");
0:             for (int i = 0; i < lines.length; i++) {
0:                 sb.append("\t" + lines[i] + "\n");
0: 
0:             }
0:             sb.append("\n");
0:         }
0:         return sb.toString();
0:     }
0: 
0: }
============================================================================