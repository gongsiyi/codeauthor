1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.store.access.conglomerate.Sort
1:7ecc1f2: 
1:75c7276:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75c7276:    contributor license agreements.  See the NOTICE file distributed with
1:75c7276:    this work for additional information regarding copyright ownership.
1:75c7276:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75c7276:    (the "License"); you may not use this file except in compliance with
1:75c7276:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.store.access.conglomerate;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.store.access.conglomerate.TransactionManager;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.store.access.ScanController;
1:eac0369: import org.apache.derby.iapi.store.access.SortController;
1:eac0369: import org.apache.derby.iapi.store.access.TransactionController;
1:7e7a589: import org.apache.derby.iapi.store.access.conglomerate.ScanManager;
1:eac0369: 
2:eac0369: /**
1:eac0369: 
1:eac0369:   The sort interface corresponds to an instance of an in-progress sort.
1:eac0369:   Sorts are not persistent.
1:eac0369: 
1:eac0369: **/
1:eac0369: 
1:eac0369: public interface Sort
1:eac0369: {
1:eac0369: 	/**
1:eac0369: 	Open a sort controller.
1:eac0369: 	<p>
1:eac0369: 	The sort may have been dropped already, in which case
1:eac0369: 	this method should thrown an exception.
1:eac0369: 
1:eac0369:     @exception StandardException Standard exception policy.
1:eac0369: 	**/
1:eac0369: 	SortController open(TransactionManager tran)
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Open a scan controller.
1:eac0369: 	<p>
1:eac0369: 	The sort may have been dropped already, in which case
1:eac0369: 	this method should thrown an exception.
1:eac0369: 
1:eac0369:     @exception StandardException Standard exception policy.
1:eac0369: 	**/
1:eac0369: 
1:7e7a589: 	ScanManager openSortScan(
1:eac0369:     TransactionManager  tran,
1:eac0369:     boolean             hold)
1:eac0369: 			throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Open a row Source to get rows out of the sorter.
1:eac0369: 	<p>
1:eac0369: 	The sort may have been dropped already, in which case
1:eac0369: 	this method should thrown an exception.
1:eac0369: 
1:eac0369:     @exception StandardException Standard exception policy.
1:eac0369: 	**/
1:eac0369: 
1:eac0369: 	ScanControllerRowSource openSortRowSource(TransactionManager tran)
1:eac0369: 			throws StandardException;
1:eac0369: 
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Drop the sort - this means release all its resources.
1:eac0369: 	<p>
1:eac0369: 	Note: drop is like close, it has to be tolerant of
1:eac0369: 	being called more than once, it must succeed or at
1:eac0369: 	least not throw any exceptions.
1:eac0369: 	**/
1:eac0369: 	void drop(TransactionController tran)
1:eac0369:         throws StandardException;
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:7e7a589
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.store.access.conglomerate.ScanManager;
/////////////////////////////////////////////////////////////////////////
1: 	ScanManager openSortScan(
commit:75c7276
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.store.access.conglomerate.Sort
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access.conglomerate
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.store.access.conglomerate;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: import org.apache.derby.iapi.store.access.conglomerate.TransactionManager;
1: 
1: import org.apache.derby.iapi.store.access.ScanController;
1: import org.apache.derby.iapi.store.access.SortController;
1: import org.apache.derby.iapi.store.access.TransactionController;
1: 
1: /**
1: 
1:   The sort interface corresponds to an instance of an in-progress sort.
1:   Sorts are not persistent.
1: 
1: **/
1: 
1: public interface Sort
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/**
1: 	Open a sort controller.
1: 	<p>
1: 	The sort may have been dropped already, in which case
1: 	this method should thrown an exception.
1: 
1:     @exception StandardException Standard exception policy.
1: 	**/
1: 	SortController open(TransactionManager tran)
1: 		throws StandardException;
1: 
1: 	/**
1: 	Open a scan controller.
1: 	<p>
1: 	The sort may have been dropped already, in which case
1: 	this method should thrown an exception.
1: 
1:     @exception StandardException Standard exception policy.
1: 	**/
1: 
0: 	ScanController openSortScan(
1:     TransactionManager  tran,
1:     boolean             hold)
1: 			throws StandardException;
1: 
1: 	/**
1: 	Open a row Source to get rows out of the sorter.
1: 	<p>
1: 	The sort may have been dropped already, in which case
1: 	this method should thrown an exception.
1: 
1:     @exception StandardException Standard exception policy.
1: 	**/
1: 
1: 	ScanControllerRowSource openSortRowSource(TransactionManager tran)
1: 			throws StandardException;
1: 
1: 
1: 	/**
1: 	Drop the sort - this means release all its resources.
1: 	<p>
1: 	Note: drop is like close, it has to be tolerant of
1: 	being called more than once, it must succeed or at
1: 	least not throw any exceptions.
1: 	**/
1: 	void drop(TransactionController tran)
1:         throws StandardException;
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access.conglomerate
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.store.access.conglomerate;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: import org.apache.derby.iapi.store.access.conglomerate.TransactionManager;
0: 
0: import org.apache.derby.iapi.store.access.ScanController;
0: import org.apache.derby.iapi.store.access.SortController;
0: import org.apache.derby.iapi.store.access.TransactionController;
0: 
0: /**
0: 
0:   The sort interface corresponds to an instance of an in-progress sort.
0:   Sorts are not persistent.
0: 
0: **/
0: 
0: public interface Sort
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/**
0: 	Open a sort controller.
0: 	<p>
0: 	The sort may have been dropped already, in which case
0: 	this method should thrown an exception.
0: 
0:     @exception StandardException Standard exception policy.
0: 	**/
0: 	SortController open(TransactionManager tran)
0: 		throws StandardException;
0: 
0: 	/**
0: 	Open a scan controller.
0: 	<p>
0: 	The sort may have been dropped already, in which case
0: 	this method should thrown an exception.
0: 
0:     @exception StandardException Standard exception policy.
0: 	**/
0: 
0: 	ScanController openSortScan(
0:     TransactionManager  tran,
0:     boolean             hold)
0: 			throws StandardException;
0: 
0: 	/**
0: 	Open a row Source to get rows out of the sorter.
0: 	<p>
0: 	The sort may have been dropped already, in which case
0: 	this method should thrown an exception.
0: 
0:     @exception StandardException Standard exception policy.
0: 	**/
0: 
0: 	ScanControllerRowSource openSortRowSource(TransactionManager tran)
0: 			throws StandardException;
0: 
0: 
0: 	/**
0: 	Drop the sort - this means release all its resources.
0: 	<p>
0: 	Note: drop is like close, it has to be tolerant of
0: 	being called more than once, it must succeed or at
0: 	least not throw any exceptions.
0: 	**/
0: 	void drop(TransactionController tran)
0:         throws StandardException;
0: }
============================================================================