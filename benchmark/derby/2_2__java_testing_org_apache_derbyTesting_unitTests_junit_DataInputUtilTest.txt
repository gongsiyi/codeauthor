1:a5d378d: /*
3:a5d378d: 
1:a5d378d:    Derby - Class org.apache.derbyTesting.unitTests.junit.DataInputUtilTest
1:a5d378d: 
1:a5d378d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a5d378d:    contributor license agreements.  See the NOTICE file distributed with
1:a5d378d:    this work for additional information regarding copyright ownership.
1:a5d378d:    The ASF licenses this file to you under the Apache License, Version 2.0
1:a5d378d:    (the "License"); you may not use this file except in compliance with
1:a5d378d:    the License.  You may obtain a copy of the License at
1:a5d378d: 
1:a5d378d:       http://www.apache.org/licenses/LICENSE-2.0
1:a5d378d: 
1:a5d378d:    Unless required by applicable law or agreed to in writing, software
1:a5d378d:    distributed under the License is distributed on an "AS IS" BASIS,
1:a5d378d:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a5d378d:    See the License for the specific language governing permissions and
1:a5d378d:    limitations under the License.
1:a5d378d: 
1:a5d378d:  */
1:a5d378d: package org.apache.derbyTesting.unitTests.junit;
1:a5d378d: 
1:a5d378d: import java.io.ByteArrayInputStream;
1:a5d378d: import java.io.DataInput;
1:a5d378d: import java.io.DataInputStream;
1:a5d378d: import java.io.EOFException;
1:a5d378d: import java.io.IOException;
1:a5d378d: import junit.framework.Test;
1:a5d378d: import junit.framework.TestCase;
1:1ae02c9: import org.apache.derby.iapi.services.io.DataInputUtil;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:a5d378d: 
1:a5d378d: /**
1:a5d378d:  * Test case for DataInputUtil.
1:a5d378d:  */
1:a5d378d: public class DataInputUtilTest extends TestCase {
1:a5d378d: 
1:a5d378d:     public DataInputUtilTest(String name) {
1:a5d378d:         super(name);
1:a5d378d:     }
1:a5d378d: 
1:a5d378d:     public void testSkipFully() throws IOException{
1:a5d378d:         int length = 1024;
1:a5d378d: 
1:a5d378d:         DataInput di = new DataInputStream(
1:a5d378d:                 new ByteArrayInputStream(new byte[length]));
1:a5d378d:         DataInputUtil.skipFully(di, length);
1:a5d378d:         try {
1:a5d378d:             di.readByte();
1:a5d378d:             fail("Should have met EOF!");
1:a5d378d:         } catch (EOFException e) {
1:a5d378d:             assertTrue(true);
1:a5d378d:         }
1:a5d378d: 
1:a5d378d:         di = new DataInputStream(
1:a5d378d:                 new ByteArrayInputStream(new byte[length]));
1:a5d378d:         DataInputUtil.skipFully(di, length - 1);
1:a5d378d:         di.readByte();
1:a5d378d:         try {
1:a5d378d:             di.readByte();
1:a5d378d:             fail("Should have met EOF!");
1:a5d378d:         } catch (EOFException e) {
1:a5d378d:             assertTrue(true);
1:a5d378d:         }
1:a5d378d:     }
1:a5d378d: 
1:a5d378d:     /**
1:a5d378d:      * Returns a suite of tests.
1:a5d378d:      */
1:a5d378d:     public static Test suite() {
1:1ae02c9:         return new BaseTestSuite(
1:1ae02c9:             DataInputUtilTest.class, "DataInputUtilTest tests");
1:a5d378d:     }
1:a5d378d: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.services.io.DataInputUtil;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         return new BaseTestSuite(
1:             DataInputUtilTest.class, "DataInputUtilTest tests");
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:a5d378d
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.junit.DataInputUtilTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.unitTests.junit;
1: 
1: import java.io.ByteArrayInputStream;
1: import java.io.DataInput;
1: import java.io.DataInputStream;
1: import java.io.EOFException;
1: import java.io.IOException;
1: 
0: import org.apache.derby.iapi.services.io.DataInputUtil;
1: 
1: import junit.framework.Test;
1: import junit.framework.TestCase;
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Test case for DataInputUtil.
1:  */
1: public class DataInputUtilTest extends TestCase {
1: 
1:     public DataInputUtilTest(String name) {
1:         super(name);
1:     }
1: 
1:     public void testSkipFully() throws IOException{
1:         int length = 1024;
1: 
1:         DataInput di = new DataInputStream(
1:                 new ByteArrayInputStream(new byte[length]));
1:         DataInputUtil.skipFully(di, length);
1:         try {
1:             di.readByte();
1:             fail("Should have met EOF!");
1:         } catch (EOFException e) {
1:             assertTrue(true);
1:         }
1: 
1:         di = new DataInputStream(
1:                 new ByteArrayInputStream(new byte[length]));
1:         DataInputUtil.skipFully(di, length - 1);
1:         di.readByte();
1:         try {
1:             di.readByte();
1:             fail("Should have met EOF!");
1:         } catch (EOFException e) {
1:             assertTrue(true);
1:         }
1:     }
1: 
1:     /**
1:      * Returns a suite of tests.
1:      */
1:     public static Test suite() {
0:         return new TestSuite(DataInputUtilTest.class, "DataInputUtilTest tests");
1:     }
1: }
============================================================================