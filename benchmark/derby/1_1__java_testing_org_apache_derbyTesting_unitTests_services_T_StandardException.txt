1:2bc809f: /*
2:2bc809f: 
1:2bc809f:    Derby - Class org.apache.derbyTesting.unitTests.services.T_StandardException
1:2bc809f: 
1:c38b841:    Licensed to the Apache Software Foundation (ASF) under one or more
1:c38b841:    contributor license agreements.  See the NOTICE file distributed with
1:c38b841:    this work for additional information regarding copyright ownership.
1:c38b841:    The ASF licenses this file to You under the Apache License, Version 2.0
1:c38b841:    (the "License"); you may not use this file except in compliance with
1:c38b841:    the License.  You may obtain a copy of the License at
1:2bc809f: 
1:2bc809f:       http://www.apache.org/licenses/LICENSE-2.0
1:2bc809f: 
1:2bc809f:    Unless required by applicable law or agreed to in writing, software
1:2bc809f:    distributed under the License is distributed on an "AS IS" BASIS,
1:2bc809f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2bc809f:    See the License for the specific language governing permissions and
1:2bc809f:    limitations under the License.
1:2bc809f: 
1:2bc809f:  */
1:2bc809f: 
1:2bc809f: package org.apache.derbyTesting.unitTests.services;
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.error.StandardException;
1:2bc809f: 
1:2bc809f: import java.text.MessageFormat;
1:2bc809f: /**
1:2bc809f:   A standard exception for testing.
1:2bc809f: 
1:2bc809f:   The messages for this exception are not localized or stored
1:2bc809f:   with the product.
1:2bc809f:  */
1:2bc809f: public class T_StandardException extends StandardException
1:2bc809f: {
1:2bc809f: 	String msgText = "Message text not set";
1:2bc809f: 
1:2bc809f: 	protected T_StandardException(String messageID, String msgText)
1:2bc809f: 	{
1:2bc809f: 		super(messageID);
1:2bc809f: 		myConstructorCommon( messageID, msgText );
1:2bc809f: 	}
1:2bc809f: 	protected T_StandardException(String messageID, String msgText, Throwable t)
1:2bc809f: 	{
1:2bc809f: 		super(messageID, t, (Object[]) null);
1:2bc809f: 		myConstructorCommon( messageID, msgText );
1:2bc809f: 	}
1:2bc809f: 	protected T_StandardException(String messageID, String msgText, Throwable t, Object[] args)
1:2bc809f: 	{
1:2bc809f: 		super(messageID, t, args);
1:2bc809f: 		myConstructorCommon( messageID, msgText );
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	protected	void	myConstructorCommon( String messageID, String msgText )
1:2bc809f: 	{
1:2bc809f: 		this.msgText = msgText;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	public static
1:2bc809f: 	StandardException newT_StandardException(String messageID, Throwable t, String msgText)
1:2bc809f: 	{
1:2bc809f: 		return new T_StandardException(messageID,msgText,t);
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	public static
1:2bc809f: 	StandardException newT_StandardException(String messageID, String msgText)
1:2bc809f: 	{
1:2bc809f: 		return new T_StandardException(messageID,msgText);
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	public String getMessage() {return MessageFormat.format(msgText, getArguments());}
1:2bc809f: 	public String getErrorProperty() {throw new Error("method not supported");}
1:2bc809f: }
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:c38b841
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:2bc809f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.services.T_StandardException
1: 
0:    Copyright 1999, 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.unitTests.services;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: import java.text.MessageFormat;
1: /**
1:   A standard exception for testing.
1: 
1:   The messages for this exception are not localized or stored
1:   with the product.
1:  */
1: public class T_StandardException extends StandardException
1: {
1: 	String msgText = "Message text not set";
1: 
1: 	protected T_StandardException(String messageID, String msgText)
1: 	{
1: 		super(messageID);
1: 		myConstructorCommon( messageID, msgText );
1: 	}
1: 	protected T_StandardException(String messageID, String msgText, Throwable t)
1: 	{
1: 		super(messageID, t, (Object[]) null);
1: 		myConstructorCommon( messageID, msgText );
1: 	}
1: 	protected T_StandardException(String messageID, String msgText, Throwable t, Object[] args)
1: 	{
1: 		super(messageID, t, args);
1: 		myConstructorCommon( messageID, msgText );
1: 	}
1: 
1: 	protected	void	myConstructorCommon( String messageID, String msgText )
1: 	{
1: 		this.msgText = msgText;
1: 	}
1: 
1: 	public static
1: 	StandardException newT_StandardException(String messageID, Throwable t, String msgText)
1: 	{
1: 		return new T_StandardException(messageID,msgText,t);
1: 	}
1: 
1: 	public static
1: 	StandardException newT_StandardException(String messageID, String msgText)
1: 	{
1: 		return new T_StandardException(messageID,msgText);
1: 	}
1: 
1: 	public String getMessage() {return MessageFormat.format(msgText, getArguments());}
1: 	public String getErrorProperty() {throw new Error("method not supported");}
1: }
============================================================================