1:ee0904b: /*
1:ee0904b:  
1:ee0904b:  Derby - Class org.apache.derbyTesting.system.langtest.utils.TestUtils
1:ee0904b:  
1:ee0904b:  Licensed to the Apache Software Foundation (ASF) under one or more
1:ee0904b:  contributor license agreements.  See the NOTICE file distributed with
1:ee0904b:  this work for additional information regarding copyright ownership.
1:ee0904b:  The ASF licenses this file to You under the Apache License, Version 2.0
1:ee0904b:  (the "License"); you may not use this file except in compliance with
1:ee0904b:  the License.  You may obtain a copy of the License at
1:ee0904b:  
1:ee0904b:  http://www.apache.org/licenses/LICENSE-2.0
1:ee0904b:  
1:ee0904b:  Unless required by applicable law or agreed to in writing, software
1:ee0904b:  distributed under the License is distributed on an "AS IS" BASIS,
1:ee0904b:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ee0904b:  See the License for the specific language governing permissions and
1:ee0904b:  limitations under the License.
1:ee0904b:  
1:ee0904b:  */
1:ee0904b: package org.apache.derbyTesting.system.optimizer.utils;
1:ee0904b: /**
1:ee0904b:  * 
1:ee0904b:  * Class TestUtils: Utility class for measuring query times
1:ee0904b:  *
1:ee0904b:  */
1:ee0904b: public class TestUtils {
1:ee0904b: 	static int MILLISECONDS_IN_SEC=1000;
1:ee0904b: 	static int SECONDS_IN_MIN=60;
1:ee0904b: 	static int MINUTES_IN_HR=60;
1:ee0904b: 	
1:ee0904b: 	public static String getTime(long timeInMs)
1:ee0904b: 	{
1:ee0904b: 		StringBuffer stringBuff = new StringBuffer(32);
1:ee0904b: 		//get Hours
1:ee0904b: 		int hours = (int)timeInMs /( MINUTES_IN_HR * SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1:ee0904b: 		if (hours > 0) {
1:ee0904b: 			stringBuff.append(hours);
1:ee0904b: 			stringBuff.append(" hr");
1:ee0904b: 		}
1:ee0904b: 		//get Minutes
1:ee0904b: 		int remainHours = (int)timeInMs % (MINUTES_IN_HR * SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1:ee0904b: 		int minutes = remainHours / (SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1:ee0904b: 		if (minutes > 0) {
1:ee0904b: 			stringBuff.append(minutes);
1:ee0904b: 			stringBuff.append(" min ");
1:ee0904b: 		}
1:ee0904b: 		//get Seconds
1:ee0904b: 		int remainMinutes = remainHours % (SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1:ee0904b: 		int seconds = remainMinutes / MILLISECONDS_IN_SEC;
1:ee0904b: 		int milliseconds = remainMinutes % MILLISECONDS_IN_SEC;
1:ee0904b: 
1:ee0904b: 		stringBuff.append(seconds);
1:ee0904b: 		if (hours == 0 && minutes < 5)
1:ee0904b: 		{
1:ee0904b: 			stringBuff.append('.');
1:ee0904b: 			if (milliseconds < 10)
1:ee0904b: 				stringBuff.append('0');
1:ee0904b: 			if (milliseconds < 100)
1:ee0904b: 				stringBuff.append('0');
1:ee0904b: 			stringBuff.append(milliseconds);
1:ee0904b: 		}
1:ee0904b: 		stringBuff.append(" secs ");
1:ee0904b: 		return stringBuff.toString();
1:ee0904b: 	
1:ee0904b: 	}
1:ee0904b: 
1:ee0904b: }
============================================================================
author:Army
-------------------------------------------------------------------------------
commit:ee0904b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:  Derby - Class org.apache.derbyTesting.system.langtest.utils.TestUtils
1:  
1:  Licensed to the Apache Software Foundation (ASF) under one or more
1:  contributor license agreements.  See the NOTICE file distributed with
1:  this work for additional information regarding copyright ownership.
1:  The ASF licenses this file to You under the Apache License, Version 2.0
1:  (the "License"); you may not use this file except in compliance with
1:  the License.  You may obtain a copy of the License at
1:  
1:  http://www.apache.org/licenses/LICENSE-2.0
1:  
1:  Unless required by applicable law or agreed to in writing, software
1:  distributed under the License is distributed on an "AS IS" BASIS,
1:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  See the License for the specific language governing permissions and
1:  limitations under the License.
1:  
1:  */
1: package org.apache.derbyTesting.system.optimizer.utils;
1: /**
1:  * 
1:  * Class TestUtils: Utility class for measuring query times
1:  *
1:  */
1: public class TestUtils {
1: 	static int MILLISECONDS_IN_SEC=1000;
1: 	static int SECONDS_IN_MIN=60;
1: 	static int MINUTES_IN_HR=60;
1: 	
1: 	public static String getTime(long timeInMs)
1: 	{
1: 		StringBuffer stringBuff = new StringBuffer(32);
1: 		//get Hours
1: 		int hours = (int)timeInMs /( MINUTES_IN_HR * SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1: 		if (hours > 0) {
1: 			stringBuff.append(hours);
1: 			stringBuff.append(" hr");
1: 		}
1: 		//get Minutes
1: 		int remainHours = (int)timeInMs % (MINUTES_IN_HR * SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1: 		int minutes = remainHours / (SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1: 		if (minutes > 0) {
1: 			stringBuff.append(minutes);
1: 			stringBuff.append(" min ");
1: 		}
1: 		//get Seconds
1: 		int remainMinutes = remainHours % (SECONDS_IN_MIN * MILLISECONDS_IN_SEC);
1: 		int seconds = remainMinutes / MILLISECONDS_IN_SEC;
1: 		int milliseconds = remainMinutes % MILLISECONDS_IN_SEC;
1: 
1: 		stringBuff.append(seconds);
1: 		if (hours == 0 && minutes < 5)
1: 		{
1: 			stringBuff.append('.');
1: 			if (milliseconds < 10)
1: 				stringBuff.append('0');
1: 			if (milliseconds < 100)
1: 				stringBuff.append('0');
1: 			stringBuff.append(milliseconds);
1: 		}
1: 		stringBuff.append(" secs ");
1: 		return stringBuff.toString();
1: 	
1: 	}
1: 
1: }
============================================================================