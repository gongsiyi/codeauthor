1:eac0369: /*
1:985fc85: 
1:985fc85:    Derby - Class org.apache.derby.impl.tools.ij.ijResultImpl
1:985fc85: 
1:11bc2d0:    Licensed to the Apache Software Foundation (ASF) under one or more
1:11bc2d0:    contributor license agreements.  See the NOTICE file distributed with
1:11bc2d0:    this work for additional information regarding copyright ownership.
1:11bc2d0:    The ASF licenses this file to You under the Apache License, Version 2.0
1:11bc2d0:    (the "License"); you may not use this file except in compliance with
1:11bc2d0:    the License.  You may obtain a copy of the License at
1:985fc85: 
1:985fc85:       http://www.apache.org/licenses/LICENSE-2.0
1:985fc85: 
1:985fc85:    Unless required by applicable law or agreed to in writing, software
1:985fc85:    distributed under the License is distributed on an "AS IS" BASIS,
1:985fc85:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:985fc85:    See the License for the specific language governing permissions and
1:985fc85:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.tools.ij;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1:eac0369: import java.sql.Connection;
1:eac0369: import java.sql.ResultSet;
1:eac0369: import java.sql.Statement;
1:eac0369: import java.sql.SQLException;
1:eac0369: import java.sql.SQLWarning;
1:eac0369: import java.util.Vector;
1:7b5fc1e: import java.util.List;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * This is an empty impl for reuse of code.
1:eac0369:  *
1:eac0369:  */
1:eac0369: abstract class ijResultImpl implements ijResult {
1:eac0369: 	public boolean isConnection() { return false; }
1:eac0369: 	public boolean isStatement() { return false; }
1:eac0369: 	public boolean isResultSet() throws SQLException { return false; }
1:eac0369: 	public boolean isUpdateCount() throws SQLException { return false; }
1:eac0369: 	public boolean isNextRowOfResultSet() { return false; }
1:eac0369: 	public boolean isVector() { return false; }
1:eac0369: 	public boolean isMulti() { return false; }
1:eac0369: 	public boolean isException() { return false; }
1:7b5fc1e: 	public boolean isMultipleResultSetResult(){ return false; }
1:eac0369: 	public boolean hasWarnings() throws SQLException { return getSQLWarnings()!=null; }
1:eac0369: 
1:eac0369: 	public Connection getConnection() { return null; }
1:eac0369: 	public Statement getStatement() { return null; }
1:eac0369: 	public int getUpdateCount() throws SQLException { return -1; }
1:eac0369: 	public ResultSet getResultSet() throws SQLException { return null; }
1:16d3334: 	public List<ResultSet> getMultipleResultSets() { return null; }
1:eac0369: 	public ResultSet getNextRowOfResultSet() { return null; }
1:eac0369: 	public Vector getVector() { return null; }
1:eac0369: 	public SQLException getException() { return null; }
1:eac0369: 
1:a9217e9: 	public int[] getColumnDisplayList() { return null; }
1:a9217e9: 	public int[] getColumnWidthList() { return null; }
1:a9217e9: 
1:eac0369: 	public void closeStatement() throws SQLException { }
1:eac0369: 
1:eac0369: 	public abstract SQLWarning getSQLWarnings() throws SQLException;
1:eac0369: 	public abstract void clearSQLWarnings() throws SQLException;
1:eac0369: 
1:eac0369: 
1:eac0369: 	public String toString() {
1:eac0369: 		if (isConnection()) return LocalizedResource.getMessage("IJ_Con0",getConnection().toString());
1:eac0369: 		if (isStatement()) return LocalizedResource.getMessage("IJ_Stm0",getStatement().toString());
1:eac0369: 		if (isNextRowOfResultSet()) return LocalizedResource.getMessage("IJ_Row0",getNextRowOfResultSet().toString());
1:eac0369: 		if (isVector()) return LocalizedResource.getMessage("IJ_Vec0",getVector().toString());
1:eac0369: 		if (isMulti()) return LocalizedResource.getMessage("IJ_Mul0",getVector().toString());
1:eac0369: 		if (isException()) return LocalizedResource.getMessage("IJ_Exc0",getException().toString());
1:7b5fc1e: 		if (isMultipleResultSetResult())
1:7b5fc1e: 			return LocalizedResource.getMessage("IJ_MRS0",
1:e5ca925: 										getMultipleResultSets().toString());
1:a9217e9: 		try {
1:a9217e9: 			if (isResultSet()) return LocalizedResource.getMessage("IJ_Rse0",getStatement().toString());
1:a9217e9: 		} catch(SQLException se) {
1:a9217e9: 		}
1:eac0369: 		return LocalizedResource.getMessage("IJ_Unkn0",this.getClass().getName());
1:eac0369: 	}
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:16d3334
/////////////////////////////////////////////////////////////////////////
1: 	public List<ResultSet> getMultipleResultSets() { return null; }
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:e5ca925
/////////////////////////////////////////////////////////////////////////
1: 										getMultipleResultSets().toString());
commit:7b5fc1e
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
/////////////////////////////////////////////////////////////////////////
1: 	public boolean isMultipleResultSetResult(){ return false; }
0: 	public List getMultipleResultSets() { return null; }
/////////////////////////////////////////////////////////////////////////
1: 		if (isMultipleResultSetResult())
1: 			return LocalizedResource.getMessage("IJ_MRS0",
0: 									    getMultipleResultSets().toString());
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:a9217e9
/////////////////////////////////////////////////////////////////////////
1: 	public int[] getColumnDisplayList() { return null; }
1: 	public int[] getColumnWidthList() { return null; }
1: 
/////////////////////////////////////////////////////////////////////////
1: 		try {
1: 			if (isResultSet()) return LocalizedResource.getMessage("IJ_Rse0",getStatement().toString());
1: 		} catch(SQLException se) {
1: 		}
author:David Van Couvering
-------------------------------------------------------------------------------
commit:11bc2d0
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:985fc85
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.tools.ij.ijResultImpl
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:a8ff4fd
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.tools.ij
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.tools.ij;
1: 
1: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1: import java.sql.Connection;
1: import java.sql.ResultSet;
1: import java.sql.Statement;
1: import java.sql.SQLException;
1: import java.sql.SQLWarning;
1: import java.util.Vector;
1: 
1: /**
1:  * This is an empty impl for reuse of code.
1:  *
0:  * @author ames
1:  */
1: abstract class ijResultImpl implements ijResult {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 	public boolean isConnection() { return false; }
1: 	public boolean isStatement() { return false; }
1: 	public boolean isResultSet() throws SQLException { return false; }
1: 	public boolean isUpdateCount() throws SQLException { return false; }
1: 	public boolean isNextRowOfResultSet() { return false; }
1: 	public boolean isVector() { return false; }
1: 	public boolean isMulti() { return false; }
1: 	public boolean isException() { return false; }
1: 	public boolean hasWarnings() throws SQLException { return getSQLWarnings()!=null; }
1: 
1: 	public Connection getConnection() { return null; }
1: 	public Statement getStatement() { return null; }
1: 	public int getUpdateCount() throws SQLException { return -1; }
1: 	public ResultSet getResultSet() throws SQLException { return null; }
1: 	public ResultSet getNextRowOfResultSet() { return null; }
1: 	public Vector getVector() { return null; }
1: 	public SQLException getException() { return null; }
1: 
1: 	public void closeStatement() throws SQLException { }
1: 
1: 	public abstract SQLWarning getSQLWarnings() throws SQLException;
1: 	public abstract void clearSQLWarnings() throws SQLException;
1: 
1: 
1: 	public String toString() {
1: 		if (isConnection()) return LocalizedResource.getMessage("IJ_Con0",getConnection().toString());
1: 		if (isStatement()) return LocalizedResource.getMessage("IJ_Stm0",getStatement().toString());
1: 		if (isNextRowOfResultSet()) return LocalizedResource.getMessage("IJ_Row0",getNextRowOfResultSet().toString());
1: 		if (isVector()) return LocalizedResource.getMessage("IJ_Vec0",getVector().toString());
1: 		if (isMulti()) return LocalizedResource.getMessage("IJ_Mul0",getVector().toString());
1: 		if (isException()) return LocalizedResource.getMessage("IJ_Exc0",getException().toString());
1: 		return LocalizedResource.getMessage("IJ_Unkn0",this.getClass().getName());
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.tools.ij
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.tools.ij;
0: 
0: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
0: import java.sql.Connection;
0: import java.sql.ResultSet;
0: import java.sql.Statement;
0: import java.sql.SQLException;
0: import java.sql.SQLWarning;
0: import java.util.Vector;
0: 
0: /**
0:  * This is an empty impl for reuse of code.
0:  *
0:  * @author ames
0:  */
0: abstract class ijResultImpl implements ijResult {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 	public boolean isConnection() { return false; }
0: 	public boolean isStatement() { return false; }
0: 	public boolean isResultSet() throws SQLException { return false; }
0: 	public boolean isUpdateCount() throws SQLException { return false; }
0: 	public boolean isNextRowOfResultSet() { return false; }
0: 	public boolean isVector() { return false; }
0: 	public boolean isMulti() { return false; }
0: 	public boolean isException() { return false; }
0: 	public boolean hasWarnings() throws SQLException { return getSQLWarnings()!=null; }
0: 
0: 	public Connection getConnection() { return null; }
0: 	public Statement getStatement() { return null; }
0: 	public int getUpdateCount() throws SQLException { return -1; }
0: 	public ResultSet getResultSet() throws SQLException { return null; }
0: 	public ResultSet getNextRowOfResultSet() { return null; }
0: 	public Vector getVector() { return null; }
0: 	public SQLException getException() { return null; }
0: 
0: 	public void closeStatement() throws SQLException { }
0: 
0: 	public abstract SQLWarning getSQLWarnings() throws SQLException;
0: 	public abstract void clearSQLWarnings() throws SQLException;
0: 
0: 
0: 	public String toString() {
0: 		if (isConnection()) return LocalizedResource.getMessage("IJ_Con0",getConnection().toString());
0: 		if (isStatement()) return LocalizedResource.getMessage("IJ_Stm0",getStatement().toString());
0: 		if (isNextRowOfResultSet()) return LocalizedResource.getMessage("IJ_Row0",getNextRowOfResultSet().toString());
0: 		if (isVector()) return LocalizedResource.getMessage("IJ_Vec0",getVector().toString());
0: 		if (isMulti()) return LocalizedResource.getMessage("IJ_Mul0",getVector().toString());
0: 		if (isException()) return LocalizedResource.getMessage("IJ_Exc0",getException().toString());
0: 		return LocalizedResource.getMessage("IJ_Unkn0",this.getClass().getName());
0: 	}
0: }
============================================================================