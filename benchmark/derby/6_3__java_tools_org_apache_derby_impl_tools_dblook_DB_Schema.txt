2:eac0369: /*
1:985fc85: 
1:3abc7d4:    Derby - Class org.apache.derby.impl.tools.dblook.DB_Schema
1:985fc85: 
1:20cdca3:    Licensed to the Apache Software Foundation (ASF) under one or more
1:20cdca3:    contributor license agreements.  See the NOTICE file distributed with
1:20cdca3:    this work for additional information regarding copyright ownership.
1:20cdca3:    The ASF licenses this file to you under the Apache License, Version 2.0
1:20cdca3:    (the "License"); you may not use this file except in compliance with
1:20cdca3:    the License.  You may obtain a copy of the License at
1:985fc85: 
1:985fc85:       http://www.apache.org/licenses/LICENSE-2.0
1:985fc85: 
1:985fc85:    Unless required by applicable law or agreed to in writing, software
1:985fc85:    distributed under the License is distributed on an "AS IS" BASIS,
1:985fc85:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:985fc85:    See the License for the specific language governing permissions and
1:985fc85:    limitations under the License.
4:eac0369: 
3:eac0369:  */
1:eac0369: 
1:3abc7d4: package org.apache.derby.impl.tools.dblook;
1:eac0369: 
1:eac0369: import java.sql.Connection;
1:eac0369: import java.sql.Statement;
1:eac0369: import java.sql.ResultSet;
1:eac0369: import java.sql.SQLException;
1:eac0369: 
1:eac0369: import java.util.HashMap;
1:eac0369: 
1:eac0369: import org.apache.derby.tools.dblook;
1:eac0369: 
1:eac0369: public class DB_Schema {
1:eac0369: 
1:eac0369: 	/* ************************************************
1:eac0369: 	 * Generate the DDL for all schemas in a given
1:eac0369: 	 * database.
1:eac0369: 	 * @param conn Connection to the source database.
1:eac0369: 	 * @param tablesOnly true if we're only generating objects
1:eac0369: 	 *  specific to a particular table (in which case
1:eac0369: 	 *  we don't generate schemas).
1:eac0369: 	 * @return The DDL for the schemas has been written
1:eac0369: 	 *  to output via Logs.java.
1:eac0369: 	 ****/
1:eac0369: 
1:eac0369: 	public static void doSchemas(Connection conn,
1:eac0369: 		boolean tablesOnly) throws SQLException
1:eac0369: 	{
1:eac0369: 
1:eac0369: 		Statement stmt = conn.createStatement();
1:eac0369: 		ResultSet rs = stmt.executeQuery("SELECT SCHEMANAME, SCHEMAID " +
1:eac0369: 			"FROM SYS.SYSSCHEMAS");
1:eac0369: 
1:eac0369: 		boolean firstTime = true;
1:eac0369: 		while (rs.next()) {
1:eac0369: 
1:eac0369: 			String sName = dblook.addQuotes(
1:eac0369: 				dblook.expandDoubleQuotes(rs.getString(1)));
1:eac0369: 			if (tablesOnly || dblook.isIgnorableSchema(sName))
1:eac0369: 				continue;
1:eac0369: 
1:eac0369: 			if (sName.equals("\"APP\""))
1:eac0369: 			// don't have to create this one.
1:eac0369: 				continue;
1:eac0369: 
1:eac0369: 			if (firstTime) {
1:eac0369: 				Logs.reportString("----------------------------------------------");
1:19c10b5: 				Logs.reportMessage("DBLOOK_SchemasHeader");
1:eac0369: 				Logs.reportString("----------------------------------------------\n");
1:eac0369: 			}
1:eac0369: 
1:eac0369: 			Logs.writeToNewDDL("CREATE SCHEMA " + sName);
1:eac0369: 			Logs.writeStmtEndToNewDDL();
1:eac0369: 			Logs.writeNewlineToNewDDL();
1:eac0369: 			firstTime = false;
1:eac0369: 
1:eac0369: 		}
1:eac0369: 
1:eac0369: 		rs.close();
1:eac0369: 		stmt.close();
1:eac0369: 
1:eac0369: 	}
1:eac0369: 
1:eac0369: }
============================================================================
author:David Van Couvering
-------------------------------------------------------------------------------
commit:20cdca3
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:19c10b5
/////////////////////////////////////////////////////////////////////////
1: 				Logs.reportMessage("DBLOOK_SchemasHeader");
commit:3abc7d4
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.tools.dblook.DB_Schema
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derby.impl.tools.dblook;
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:985fc85
/////////////////////////////////////////////////////////////////////////
0:    Derby - Class org.apache.derby.impl.tools.cslook.DB_Schema
1: 
0:    Copyright 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:a8ff4fd
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.tools.cslook
0:    (C) Copyright IBM Corp. 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
0: package org.apache.derby.impl.tools.cslook;
1: 
1: import java.sql.Connection;
1: import java.sql.Statement;
1: import java.sql.ResultSet;
1: import java.sql.SQLException;
1: 
1: import java.util.HashMap;
1: 
1: import org.apache.derby.tools.dblook;
1: 
1: public class DB_Schema {
1: 
1: 	/* 
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
1: 
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2004;
1: 
1: 	/* ************************************************
1: 	 * Generate the DDL for all schemas in a given
1: 	 * database.
1: 	 * @param conn Connection to the source database.
1: 	 * @param tablesOnly true if we're only generating objects
1: 	 *  specific to a particular table (in which case
1: 	 *  we don't generate schemas).
1: 	 * @return The DDL for the schemas has been written
1: 	 *  to output via Logs.java.
1: 	 ****/
1: 
1: 	public static void doSchemas(Connection conn,
1: 		boolean tablesOnly) throws SQLException
1: 	{
1: 
1: 		Statement stmt = conn.createStatement();
1: 		ResultSet rs = stmt.executeQuery("SELECT SCHEMANAME, SCHEMAID " +
1: 			"FROM SYS.SYSSCHEMAS");
1: 
1: 		boolean firstTime = true;
1: 		while (rs.next()) {
1: 
1: 			String sName = dblook.addQuotes(
1: 				dblook.expandDoubleQuotes(rs.getString(1)));
1: 			if (tablesOnly || dblook.isIgnorableSchema(sName))
1: 				continue;
1: 
1: 			if (sName.equals("\"APP\""))
1: 			// don't have to create this one.
1: 				continue;
1: 
1: 			if (firstTime) {
1: 				Logs.reportString("----------------------------------------------");
0: 				Logs.reportMessage("CSLOOK_Header", "schemas");
1: 				Logs.reportString("----------------------------------------------\n");
1: 			}
1: 
1: 			Logs.writeToNewDDL("CREATE SCHEMA " + sName);
1: 			Logs.writeStmtEndToNewDDL();
1: 			Logs.writeNewlineToNewDDL();
1: 			firstTime = false;
1: 
1: 		}
1: 
1: 		rs.close();
1: 		stmt.close();
1: 
1: 	}
1: 
1: }
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:89cd70b
/////////////////////////////////////////////////////////////////////////
0: 				Logs.reportMessage("CSLOOK_SchemasHeader");
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.tools.cslook
0:    (C) Copyright IBM Corp. 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.tools.cslook;
0: 
0: import java.sql.Connection;
0: import java.sql.Statement;
0: import java.sql.ResultSet;
0: import java.sql.SQLException;
0: 
0: import java.util.HashMap;
0: 
0: import org.apache.derby.tools.dblook;
0: 
0: public class DB_Schema {
0: 
0: 	/* 
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2004;
0: 
0: 	/* ************************************************
0: 	 * Generate the DDL for all schemas in a given
0: 	 * database.
0: 	 * @param conn Connection to the source database.
0: 	 * @param tablesOnly true if we're only generating objects
0: 	 *  specific to a particular table (in which case
0: 	 *  we don't generate schemas).
0: 	 * @return The DDL for the schemas has been written
0: 	 *  to output via Logs.java.
0: 	 ****/
0: 
0: 	public static void doSchemas(Connection conn,
0: 		boolean tablesOnly) throws SQLException
0: 	{
0: 
0: 		Statement stmt = conn.createStatement();
0: 		ResultSet rs = stmt.executeQuery("SELECT SCHEMANAME, SCHEMAID " +
0: 			"FROM SYS.SYSSCHEMAS");
0: 
0: 		boolean firstTime = true;
0: 		while (rs.next()) {
0: 
0: 			String sName = dblook.addQuotes(
0: 				dblook.expandDoubleQuotes(rs.getString(1)));
0: 			if (tablesOnly || dblook.isIgnorableSchema(sName))
0: 				continue;
0: 
0: 			if (sName.equals("\"APP\""))
0: 			// don't have to create this one.
0: 				continue;
0: 
0: 			if (firstTime) {
0: 				Logs.reportString("----------------------------------------------");
0: 				Logs.reportMessage("CSLOOK_Header", "schemas");
0: 				Logs.reportString("----------------------------------------------\n");
0: 			}
0: 
0: 			Logs.writeToNewDDL("CREATE SCHEMA " + sName);
0: 			Logs.writeStmtEndToNewDDL();
0: 			Logs.writeNewlineToNewDDL();
0: 			firstTime = false;
0: 
0: 		}
0: 
0: 		rs.close();
0: 		stmt.close();
0: 
0: 	}
0: 
0: }
============================================================================