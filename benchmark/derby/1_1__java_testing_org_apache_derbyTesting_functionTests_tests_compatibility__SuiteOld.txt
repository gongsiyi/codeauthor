1:a69fa12: /*
1:a69fa12: 
1:a69fa12:    Derby - Class org.apache.derbyTesting.functionTests.tests.compatibility._SuiteOld
1:a69fa12: 
1:a69fa12:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a69fa12:    contributor license agreements.  See the NOTICE file distributed with
1:a69fa12:    this work for additional information regarding copyright ownership.
1:a69fa12:    The ASF licenses this file to you under the Apache License, Version 2.0
1:a69fa12:    (the "License"); you may not use this file except in compliance with
1:a69fa12:    the License.  You may obtain a copy of the License at
1:a69fa12: 
1:a69fa12:       http://www.apache.org/licenses/LICENSE-2.0
1:a69fa12: 
1:a69fa12:    Unless required by applicable law or agreed to in writing, software
1:a69fa12:    distributed under the License is distributed on an "AS IS" BASIS,
1:a69fa12:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a69fa12:    See the License for the specific language governing permissions and
1:a69fa12:    limitations under the License.
1:a69fa12: 
1:a69fa12:  */
1:a69fa12: package org.apache.derbyTesting.functionTests.tests.compatibility;
1:a69fa12: 
1:a69fa12: import junit.framework.Test;
1:a69fa12: 
1:a69fa12: /**
1:a69fa12:  * Tests all the newest branch releases and trunk against each other.
1:a69fa12:  * <p>
1:a69fa12:  * This suite is limited in that only the latest releases of old branches
1:a69fa12:  * are included in the test set. It is still testing old releases against
1:a69fa12:  * each other, which is somewhat uninteresting since they the old releases
1:a69fa12:  * don't change.
1:a69fa12:  */
1:a69fa12: public class _SuiteOld
1:a69fa12:         extends _Suite {
1:a69fa12: 
1:a69fa12:     public _SuiteOld(String name) {
1:a69fa12:         super(name);
1:a69fa12:         throw new IllegalStateException("invoke suite() instead");
1:a69fa12:     }
1:a69fa12: 
1:a69fa12:     /**
1:a69fa12:      * Returns an extended suite of compatibility tests.
1:a69fa12:      *
1:a69fa12:      * @return A test suite.
1:a69fa12:      */
1:a69fa12:     public static Test suite() {
1:a69fa12:         configurator = VersionCombinationConfigurator.getInstanceOld();
1:a69fa12:         return _Suite.suite();
1:a69fa12:     }
1:a69fa12: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:a69fa12
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.compatibility._SuiteOld
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.functionTests.tests.compatibility;
1: 
1: import junit.framework.Test;
1: 
1: /**
1:  * Tests all the newest branch releases and trunk against each other.
1:  * <p>
1:  * This suite is limited in that only the latest releases of old branches
1:  * are included in the test set. It is still testing old releases against
1:  * each other, which is somewhat uninteresting since they the old releases
1:  * don't change.
1:  */
1: public class _SuiteOld
1:         extends _Suite {
1: 
1:     public _SuiteOld(String name) {
1:         super(name);
1:         throw new IllegalStateException("invoke suite() instead");
1:     }
1: 
1:     /**
1:      * Returns an extended suite of compatibility tests.
1:      *
1:      * @return A test suite.
1:      */
1:     public static Test suite() {
1:         configurator = VersionCombinationConfigurator.getInstanceOld();
1:         return _Suite.suite();
1:     }
1: }
============================================================================