1:33776ff: /*
1:5d2e2bd: 
1:33776ff:    Derby - Class org.apache.derby.client.am.DisconnectException
1:1b39163: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:1b39163: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:1b39163: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:1b39163: 
1:33776ff: */
1:5d2e2bd: 
1:33776ff: package org.apache.derby.client.am;
1:1b39163: 
1:b2a1747: import org.apache.derby.shared.common.reference.SQLState;
1:b2a1747: 
1:70f7692: public class DisconnectException extends SqlException {
1:0326967:     private DisconnectException(Agent agent, ClientMessageId msgid,
1:1b39163:         Object[] args, SqlCode sqlcode, Throwable t)  {
1:1b39163:         super(agent != null ? agent.logWriter_ : null, msgid,
1:1b39163:             args, sqlcode, t);
1:1b39163:         
1:5d2e2bd:         // make the call to close the streams and socket.
1:5d2e2bd:         if (agent != null) {
1:5d2e2bd:             agent.disconnectEvent();
3:1b39163:         }
1:1b39163:     }
1:1b39163: 
5:1b39163:     public DisconnectException(Agent agent, ClientMessageId msgid,
1:e1a79c3:                                Throwable t, Object... args) {
1:1b39163:         this(agent, msgid, args, SqlCode.disconnectError, (Throwable)t);
1:1b39163:     }
1:1b39163: 
1:e1a79c3:     public DisconnectException(Agent agent, ClientMessageId msgid,
1:e1a79c3:                                Object... args) {
1:e1a79c3:         this(agent, msgid, (Throwable) null, args);
1:1b39163:     }
1:1b39163:     
1:70f7692:     public DisconnectException(Agent agent, SqlException e) {
1:b2a1747:         super(agent.logWriter_,
1:b2a1747:             new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),
1:e1a79c3:             e, e.getMessage());
1:1b39163:     }
1:1b39163: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:e1a79c3
/////////////////////////////////////////////////////////////////////////
1:                                Throwable t, Object... args) {
1:     public DisconnectException(Agent agent, ClientMessageId msgid,
1:                                Object... args) {
1:         this(agent, msgid, (Throwable) null, args);
1:             e, e.getMessage());
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:0326967
/////////////////////////////////////////////////////////////////////////
1:     private DisconnectException(Agent agent, ClientMessageId msgid,
/////////////////////////////////////////////////////////////////////////
0:     private DisconnectException(Agent agent, ClientMessageId msgid,
0:     private DisconnectException(Agent agent, ClientMessageId msgid,
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:David Van Couvering
-------------------------------------------------------------------------------
commit:b2a1747
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.shared.common.reference.SQLState;
1: 
/////////////////////////////////////////////////////////////////////////
1:         super(agent.logWriter_,
1:             new ClientMessageId(SQLState.DRDA_CONNECTION_TERMINATED),
0:             e.getMessage(), e);
commit:1b39163
/////////////////////////////////////////////////////////////////////////
1:     public DisconnectException(Agent agent, ClientMessageId msgid,
1:         Object[] args, SqlCode sqlcode, Throwable t)  {
1:         super(agent != null ? agent.logWriter_ : null, msgid,
1:             args, sqlcode, t);
1:     
1:     public DisconnectException(Agent agent, ClientMessageId msgid,
0:         Object[] args, SqlCode sqlcode) {
0:         this(agent, msgid, args, sqlcode, (Throwable)null);
1:     }
1: 
0:     public DisconnectException(Agent agent, ClientMessageId msgid, SqlCode sqlcode) {
0:         this(agent, msgid, (Object[]) null, sqlcode);
1:     }
1: 
1:     public DisconnectException(Agent agent, ClientMessageId msgid,
0:         Object[] args) {
0:         this(agent, msgid, args, SqlCode.disconnectError);
1:     }
1:     
1:     public DisconnectException(Agent agent, ClientMessageId msgid,
0:         Object[] args, Throwable t) {
1:         this(agent, msgid, args, SqlCode.disconnectError, (Throwable)t);
1:     }
1:     
1:     public DisconnectException(Agent agent, ClientMessageId msgid,
0:         Object arg1, Throwable t) {
0:         this(agent, msgid, new Object[] { arg1 }, t);
1:     }
1: 
0:     public DisconnectException(Agent agent, ClientMessageId msgid) {
0:         this(agent, msgid, (Object[])null);
1:     }
1:     
0:     public DisconnectException(Agent agent, ClientMessageId msgid, Object arg1) {
0:         this(agent, msgid, new Object[] { arg1 });
1:     }
1:         
0:     public DisconnectException(Agent agent, ClientMessageId msgid, Object arg1,
0:         Object arg2) {
0:         this(agent, msgid, new Object[] { arg1, arg2 });
1:     }
1:     
/////////////////////////////////////////////////////////////////////////
0:         this(agent, (String)null, SqlState.undefined);
/////////////////////////////////////////////////////////////////////////
commit:e65b4db
/////////////////////////////////////////////////////////////////////////
0:     public DisconnectException(Agent agent, ClientMessageId msgid, SqlCode sqlcode) {
0:     public DisconnectException(Agent agent, ClientMessageId msgid) {
commit:5d2e2bd
/////////////////////////////////////////////////////////////////////////
0:     public DisconnectException(Agent agent, MessageId msgid, SqlCode sqlcode) {
0:         super(agent != null ? agent.logWriter_ : null, msgid, sqlcode);
0:     }
0:     public DisconnectException(Agent agent, MessageId msgid) {
0:         super(agent != null ? agent.logWriter_ : null, msgid, 
0:             SqlCode.disconnectError);
1:         
1:         // make the call to close the streams and socket.
1:         if (agent != null) {
1:             agent.disconnectEvent();
0:         }
0:     }
1:         
0:     // Old constructors for backward compatibility until all classes
0:     // have been internationalized
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:70f7692
/////////////////////////////////////////////////////////////////////////
1: public class DisconnectException extends SqlException {
0:     public DisconnectException(Agent agent, String reason, SqlState sqlstate, SqlCode sqlcode) {
0:         super(agent.logWriter_, reason, sqlstate, sqlcode);
0:     }
0:     public DisconnectException(Agent agent, String reason, SqlState sqlstate) {
0:         super(agent.logWriter_, reason, sqlstate, SqlCode.disconnectError);
0:         // make the call to close the streams and socket.
0:         if (agent != null) {
0:             agent.disconnectEvent();
0:         }
0:     }
0:     public DisconnectException(java.lang.Throwable throwable, Agent agent, String reason, SqlState sqlstate) {
0:         super(agent.logWriter_, throwable, reason, sqlstate, SqlCode.disconnectError);
0:         // make the call to close the streams and socket.
0:         if (agent != null) {
0:             agent.disconnectEvent();
0:         }
0:     }
0:     public DisconnectException(Agent agent) {
0:         this(agent, null, SqlState.undefined);
0:     }
0:     public DisconnectException(java.lang.Throwable throwable, Agent agent) {
0:         this(throwable, agent, null, SqlState.undefined);
0:     }
0:     public DisconnectException(Agent agent, String reason) {
0:         this(agent, reason, SqlState.undefined);
0:     }
0:     public DisconnectException(Throwable throwable, Agent agent, String reason) {
0:         this(throwable, agent, reason, SqlState.undefined);
0:     }
0: 
1:     public DisconnectException(Agent agent, SqlException e) {
0:         this(agent, e.getMessage());
0:         setNextException(e);
0:     }
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
0: 
1:    Derby - Class org.apache.derby.client.am.DisconnectException
0: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
0: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
0: 
1:       http://www.apache.org/licenses/LICENSE-2.0
0: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
0: 
1: */
0: 
1: package org.apache.derby.client.am;
0: 
0: public class DisconnectException extends SqlException
0: {
0: 
0:   public DisconnectException (Agent agent, String reason, SqlState sqlstate, SqlCode sqlcode) 
0:   {
0:     super (agent.logWriter_, reason, sqlstate, sqlcode);
0:   }  
0:     
0:   public DisconnectException (Agent agent, String reason, SqlState sqlstate)
0:   {
0:     super (agent.logWriter_, reason, sqlstate, SqlCode.disconnectError);
0:     // make the call to close the streams and socket.
0:     if (agent != null) agent.disconnectEvent();
0:   }
0: 
0:   public DisconnectException (java.lang.Throwable throwable, Agent agent, String reason, SqlState sqlstate)
0:   {
0:     super (agent.logWriter_, throwable, reason, sqlstate, SqlCode.disconnectError);
0:     // make the call to close the streams and socket.
0:     if (agent != null) agent.disconnectEvent();
0:   }
0: 
0:   public DisconnectException (Agent agent)
0:   {
0:     this (agent, null, SqlState.undefined);
0:   }
0: 
0:   public DisconnectException (java.lang.Throwable throwable, Agent agent)
0:   {
0:     this (throwable, agent, null, SqlState.undefined);
0:   }
0: 
0:   public DisconnectException (Agent agent, String reason)
0:   {
0:     this (agent, reason, SqlState.undefined);
0:   }
0: 
0:   public DisconnectException (Throwable throwable, Agent agent, String reason)
0:   {
0:     this (throwable, agent, reason, SqlState.undefined);
0:   }
0: 
0:   public DisconnectException (Agent agent, SqlException e)
0:   {
0:     this (agent, e.getMessage());
0:     setNextException (e);
0:   }
0: }
0: 
0: 
============================================================================