1:782dbe1: /*
1:782dbe1: 
1:782dbe1:    Derby - Class org.apache.derby.impl.sql.execute.xplain.XPLAINDefaultVisitor
1:782dbe1: 
1:782dbe1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:782dbe1:    contributor license agreements.  See the NOTICE file distributed with
1:782dbe1:    this work for additional information regarding copyright ownership.
1:782dbe1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:782dbe1:    (the "License"); you may not use this file except in compliance with
1:782dbe1:    the License.  You may obtain a copy of the License at
1:782dbe1: 
1:782dbe1:       http://www.apache.org/licenses/LICENSE-2.0
1:782dbe1: 
1:782dbe1:    Unless required by applicable law or agreed to in writing, software
1:782dbe1:    distributed under the License is distributed on an "AS IS" BASIS,
1:782dbe1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:782dbe1:    See the License for the specific language governing permissions and
1:782dbe1:    limitations under the License.
1:782dbe1: 
1:782dbe1:  */
1:782dbe1: 
1:48a9884: package org.apache.derby.impl.sql.execute.xplain;
1:48a9884: 
1:48a9884: import java.sql.SQLException;
1:48a9884: 
1:48a9884: import org.apache.derby.iapi.services.monitor.Monitor;
1:48a9884: import org.apache.derby.iapi.services.stream.HeaderPrintWriter;
1:48a9884: import org.apache.derby.iapi.sql.Activation;
1:48a9884: import org.apache.derby.iapi.sql.conn.ConnectionUtil;
1:48a9884: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1:48a9884: import org.apache.derby.iapi.sql.execute.RunTimeStatistics;
1:48a9884: import org.apache.derby.iapi.sql.execute.xplain.XPLAINVisitor;
1:5825332: import org.apache.derby.iapi.sql.execute.ResultSetStatistics;
1:48a9884: /**
1:48a9884:  * This is the Default Visitor which produces explain information like the 
1:48a9884:  * old getRuntimeStatistics() approach. <br/>
1:48a9884:  * It exists to support backward-compatibility.
1:48a9884:  * The only thing this visitor does, is to log the output of the statistics to the 
1:48a9884:  * default log stream. (the file derby.log)
1:48a9884:  *
1:48a9884:  */
1:48a9884: public class XPLAINDefaultVisitor implements XPLAINVisitor {
1:48a9884: 
1:48a9884:     public XPLAINDefaultVisitor(){
1:48a9884:         // System.out.println("Default Style XPLAIN Visitor created");
1:48a9884:     }
1:48a9884: 
1:48a9884:     public void visit(ResultSetStatistics statistics) {
1:48a9884:         // default do nothing, because no traversal is done
1:48a9884:     }
1:48a9884: 
1:48a9884:     public void reset() {
1:48a9884:         // TODO Auto-generated method stub
1:48a9884:         
1:48a9884:     }
1:48a9884: 
1:48a9884:     public void doXPLAIN(RunTimeStatistics rss, Activation activation) {
1:48a9884:         LanguageConnectionContext lcc;
1:48a9884:         try {
1:48a9884:             lcc = ConnectionUtil.getCurrentLCC();
1:48a9884:             HeaderPrintWriter istream = lcc.getLogQueryPlan() ? Monitor.getStream() : null;
1:48a9884:             if (istream != null){
1:48a9884:                 istream.printlnWithHeader(LanguageConnectionContext.xidStr + 
1:48a9884:                       lcc.getTransactionExecute().getTransactionIdString() +
1:48a9884:                       "), " +
1:48a9884:                       LanguageConnectionContext.lccStr +
1:48a9884:                       lcc.getInstanceNumber() +
1:48a9884:                       "), " +
1:48a9884:                       rss.getStatementText() + " ******* " +
1:48a9884:                       rss.getStatementExecutionPlanText());
1:48a9884:             }
1:48a9884:         } catch (SQLException e) {
1:48a9884:             e.printStackTrace();
1:48a9884:         }
1:48a9884:         
1:48a9884:     }
1:48a9884: 
1:48a9884:     public void setNumberOfChildren(int noChildren) {
1:48a9884:         // do nothing
1:48a9884:         
1:48a9884:     }
1:48a9884: 
1:48a9884: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:5825332
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.sql.execute.ResultSetStatistics;
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:782dbe1
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.sql.execute.xplain.XPLAINDefaultVisitor
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:48a9884
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derby.impl.sql.execute.xplain;
1: 
1: import java.sql.SQLException;
1: 
1: import org.apache.derby.iapi.services.monitor.Monitor;
1: import org.apache.derby.iapi.services.stream.HeaderPrintWriter;
1: import org.apache.derby.iapi.sql.Activation;
1: import org.apache.derby.iapi.sql.conn.ConnectionUtil;
1: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1: import org.apache.derby.iapi.sql.execute.RunTimeStatistics;
1: import org.apache.derby.iapi.sql.execute.xplain.XPLAINVisitor;
0: import org.apache.derby.impl.sql.execute.rts.ResultSetStatistics;
1: /**
1:  * This is the Default Visitor which produces explain information like the 
1:  * old getRuntimeStatistics() approach. <br/>
1:  * It exists to support backward-compatibility.
1:  * The only thing this visitor does, is to log the output of the statistics to the 
1:  * default log stream. (the file derby.log)
1:  *
1:  */
1: public class XPLAINDefaultVisitor implements XPLAINVisitor {
1: 
1:     public XPLAINDefaultVisitor(){
1:         // System.out.println("Default Style XPLAIN Visitor created");
1:     }
1: 
1:     public void visit(ResultSetStatistics statistics) {
1:         // default do nothing, because no traversal is done
1:     }
1: 
1:     public void reset() {
1:         // TODO Auto-generated method stub
1:         
1:     }
1: 
1:     public void doXPLAIN(RunTimeStatistics rss, Activation activation) {
1:         LanguageConnectionContext lcc;
1:         try {
1:             lcc = ConnectionUtil.getCurrentLCC();
1:             HeaderPrintWriter istream = lcc.getLogQueryPlan() ? Monitor.getStream() : null;
1:             if (istream != null){
1:                 istream.printlnWithHeader(LanguageConnectionContext.xidStr + 
1:                       lcc.getTransactionExecute().getTransactionIdString() +
1:                       "), " +
1:                       LanguageConnectionContext.lccStr +
1:                       lcc.getInstanceNumber() +
1:                       "), " +
1:                       rss.getStatementText() + " ******* " +
1:                       rss.getStatementExecutionPlanText());
1:             }
1:         } catch (SQLException e) {
1:             e.printStackTrace();
1:         }
1:         
1:     }
1: 
1:     public void setNumberOfChildren(int noChildren) {
1:         // do nothing
1:         
1:     }
1: 
1: }
============================================================================