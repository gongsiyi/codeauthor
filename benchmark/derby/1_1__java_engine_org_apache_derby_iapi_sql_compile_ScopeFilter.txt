1:fc9fd0d: /*
1:fc9fd0d: 
1:fc9fd0d:    Derby - Class org.apache.derby.iapi.sql.compile.ScopeFilter
1:fc9fd0d: 
1:fc9fd0d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:fc9fd0d:    contributor license agreements.  See the NOTICE file distributed with
1:fc9fd0d:    this work for additional information regarding copyright ownership.
1:fc9fd0d:    The ASF licenses this file to you under the Apache License, Version 2.0
1:fc9fd0d:    (the "License"); you may not use this file except in compliance with
1:fc9fd0d:    the License.  You may obtain a copy of the License at
1:fc9fd0d: 
1:fc9fd0d:       http://www.apache.org/licenses/LICENSE-2.0
1:fc9fd0d: 
1:fc9fd0d:    Unless required by applicable law or agreed to in writing, software
1:fc9fd0d:    distributed under the License is distributed on an "AS IS" BASIS,
1:fc9fd0d:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc9fd0d:    See the License for the specific language governing permissions and
1:fc9fd0d:    limitations under the License.
1:fc9fd0d: 
1:fc9fd0d:  */
1:fc9fd0d: 
1:fc9fd0d: package org.apache.derby.iapi.sql.compile;
1:fc9fd0d: 
1:fc9fd0d: import java.util.List;
1:fc9fd0d: 
1:fc9fd0d: import org.apache.derby.iapi.error.StandardException;
1:fc9fd0d: 
1:fc9fd0d: /**
1:fc9fd0d:  * Filter which passes Visitables only if the compiler is inside
1:fc9fd0d:  * a named scope.
1:fc9fd0d:  *
1:fc9fd0d:  */
1:fc9fd0d: public class ScopeFilter implements VisitableFilter
1:fc9fd0d: {
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d:     //
1:fc9fd0d:     //  CONSTANTS
1:fc9fd0d:     //
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d: 
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d:     //
1:fc9fd0d:     //  STATE
1:fc9fd0d:     //
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d: 
1:fc9fd0d:     private CompilerContext _compilerContext;
1:fc9fd0d:     private String  _scopeName;
1:fc9fd0d:     private int     _minDepth;
1:fc9fd0d:     
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d:     //
1:fc9fd0d:     //  CONSTRUCTOR
1:fc9fd0d:     //
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d: 
1:fc9fd0d:     /** Construct a filter for the given scope and minimal expected depth. */
1:fc9fd0d:     public  ScopeFilter
1:fc9fd0d:         (
1:fc9fd0d:          CompilerContext    compilerContext,
1:fc9fd0d:          String                 scopeName,
1:fc9fd0d:          int                    minDepth
1:fc9fd0d:          )
1:fc9fd0d:     {
1:fc9fd0d:         _compilerContext = compilerContext;
1:fc9fd0d:         _scopeName = scopeName;
1:fc9fd0d:         _minDepth = minDepth;
1:fc9fd0d:     }
1:fc9fd0d:     
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d:     //
1:fc9fd0d:     //  VisitableFilter BEHAVIOR
1:fc9fd0d:     //
1:fc9fd0d:     ///////////////////////////////////////////////////////////////////////////
1:fc9fd0d:     
1:fc9fd0d: 	public  boolean accept( Visitable visitable ) 
1:fc9fd0d: 		throws StandardException
1:fc9fd0d:     {
1:fc9fd0d:         return (_compilerContext.scopeDepth( _scopeName ) >= _minDepth);
1:fc9fd0d:     }
1:fc9fd0d:     
1:fc9fd0d: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:fc9fd0d
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.sql.compile.ScopeFilter
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql.compile;
1: 
1: import java.util.List;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1:  * Filter which passes Visitables only if the compiler is inside
1:  * a named scope.
1:  *
1:  */
1: public class ScopeFilter implements VisitableFilter
1: {
1:     ///////////////////////////////////////////////////////////////////////////
1:     //
1:     //  CONSTANTS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////
1: 
1:     ///////////////////////////////////////////////////////////////////////////
1:     //
1:     //  STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////////
1: 
1:     private CompilerContext _compilerContext;
1:     private String  _scopeName;
1:     private int     _minDepth;
1:     
1:     ///////////////////////////////////////////////////////////////////////////
1:     //
1:     //  CONSTRUCTOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////
1: 
1:     /** Construct a filter for the given scope and minimal expected depth. */
1:     public  ScopeFilter
1:         (
1:          CompilerContext    compilerContext,
1:          String                 scopeName,
1:          int                    minDepth
1:          )
1:     {
1:         _compilerContext = compilerContext;
1:         _scopeName = scopeName;
1:         _minDepth = minDepth;
1:     }
1:     
1:     ///////////////////////////////////////////////////////////////////////////
1:     //
1:     //  VisitableFilter BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////
1:     
1: 	public  boolean accept( Visitable visitable ) 
1: 		throws StandardException
1:     {
1:         return (_compilerContext.scopeDepth( _scopeName ) >= _minDepth);
1:     }
1:     
1: }
============================================================================