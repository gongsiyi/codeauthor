1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.types.VariableSizeDataValue
1:7ecc1f2: 
1:2431ece:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2431ece:    contributor license agreements.  See the NOTICE file distributed with
1:2431ece:    this work for additional information regarding copyright ownership.
1:2431ece:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2431ece:    (the "License"); you may not use this file except in compliance with
1:2431ece:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.types;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * The VariableSizeDataValue interface corresponds to 
1:eac0369:  * Datatypes that have adjustable width. 
1:eac0369:  *
1:eac0369:  * The following methods are defined herein:
1:eac0369:  *		setWidth()
1:eac0369:  *
1:eac0369:  */
1:eac0369: public interface VariableSizeDataValue 
1:eac0369: {
1:eac0369: 
1:eac0369: 	public static int IGNORE_PRECISION = -1;
1:eac0369: 
1:eac0369: 	/*
1:eac0369: 	 * Set the width and scale (if relevant).  Sort of a poor
1:eac0369: 	 * man's normalize.  Used when we need to normalize a datatype
1:eac0369: 	 * but we don't want to use a NormalizeResultSet (e.g.
1:eac0369: 	 * for an operator that can change the width/scale of a
1:eac0369: 	 * datatype, namely CastNode).
1:eac0369: 	 *
1:eac0369: 	 * @param desiredWidth width
1:eac0369: 	 * @param desiredScale scale, if relevant (ignored for strings)
1:eac0369: 	 * @param errorOnTrunc	throw an error on truncation of value
1:eac0369: 	 *
1:eac0369: 	 * @exception StandardException		Thrown on error
1:eac0369: 	 */
1:806114c: 	public void setWidth(int desiredWidth,
1:eac0369: 									int desiredScale,
1:eac0369: 									boolean errorOnTrunc)
1:eac0369: 							throws StandardException;
1:eac0369: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:2431ece
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:806114c
/////////////////////////////////////////////////////////////////////////
1: 	public void setWidth(int desiredWidth,
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.types.VariableSizeDataValue
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.types
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.types;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1:  * The VariableSizeDataValue interface corresponds to 
1:  * Datatypes that have adjustable width. 
1:  *
1:  * The following methods are defined herein:
1:  *		setWidth()
1:  *
0:  * @author	jamie
1:  */
1: public interface VariableSizeDataValue 
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 
1: 	public static int IGNORE_PRECISION = -1;
1: 
1: 	/*
1: 	 * Set the width and scale (if relevant).  Sort of a poor
1: 	 * man's normalize.  Used when we need to normalize a datatype
1: 	 * but we don't want to use a NormalizeResultSet (e.g.
1: 	 * for an operator that can change the width/scale of a
1: 	 * datatype, namely CastNode).
1: 	 *
1: 	 * @param desiredWidth width
1: 	 * @param desiredScale scale, if relevant (ignored for strings)
1: 	 * @param errorOnTrunc	throw an error on truncation of value
1: 	 *
1: 	 * @exception StandardException		Thrown on error
1: 	 */
0: 	public DataValueDescriptor setWidth(int desiredWidth,
1: 									int desiredScale,
1: 									boolean errorOnTrunc)
1: 							throws StandardException;
1: }
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.types
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.types;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: /**
0:  * The VariableSizeDataValue interface corresponds to 
0:  * Datatypes that have adjustable width. 
0:  *
0:  * The following methods are defined herein:
0:  *		setWidth()
0:  *
0:  * @author	jamie
0:  */
0: public interface VariableSizeDataValue 
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 
0: 	public static int IGNORE_PRECISION = -1;
0: 
0: 	/*
0: 	 * Set the width and scale (if relevant).  Sort of a poor
0: 	 * man's normalize.  Used when we need to normalize a datatype
0: 	 * but we don't want to use a NormalizeResultSet (e.g.
0: 	 * for an operator that can change the width/scale of a
0: 	 * datatype, namely CastNode).
0: 	 *
0: 	 * @param desiredWidth width
0: 	 * @param desiredScale scale, if relevant (ignored for strings)
0: 	 * @param errorOnTrunc	throw an error on truncation of value
0: 	 *
0: 	 * @exception StandardException		Thrown on error
0: 	 */
0: 	public DataValueDescriptor setWidth(int desiredWidth,
0: 									int desiredScale,
0: 									boolean errorOnTrunc)
0: 							throws StandardException;
0: }
============================================================================