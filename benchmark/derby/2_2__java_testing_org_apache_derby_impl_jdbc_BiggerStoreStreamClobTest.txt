1:cb2e1a4: /*
1:cb2e1a4: 
1:cb2e1a4:    Derby - Class org.apache.derby.impl.jdbc.BiggerStoreStreamTest
1:cb2e1a4: 
1:cb2e1a4:    Licensed to the Apache Software Foundation (ASF) under one
1:cb2e1a4:    or more contributor license agreements.  See the NOTICE file
1:cb2e1a4:    distributed with this work for additional information
1:cb2e1a4:    regarding copyright ownership.  The ASF licenses this file
1:cb2e1a4:    to you under the Apache License, Version 2.0 (the
1:cb2e1a4:    "License"); you may not use this file except in compliance
1:cb2e1a4:    with the License.  You may obtain a copy of the License at
1:cb2e1a4: 
1:cb2e1a4:      http://www.apache.org/licenses/LICENSE-2.0
1:cb2e1a4: 
1:cb2e1a4:    Unless required by applicable law or agreed to in writing,
1:cb2e1a4:    software distributed under the License is distributed on an
1:cb2e1a4:    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:cb2e1a4:    KIND, either express or implied.  See the License for the
1:cb2e1a4:    specific language governing permissions and limitations
1:cb2e1a4:    under the License.
1:cb2e1a4: 
1:cb2e1a4:  */
1:cb2e1a4: package org.apache.derby.impl.jdbc;
1:cb2e1a4: 
1:7672693: import java.io.InputStream;
1:cb2e1a4: import junit.framework.Test;
1:7672693: import org.apache.derby.iapi.jdbc.CharacterStreamDescriptor;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:cb2e1a4: 
1:cb2e1a4: /**
1:cb2e1a4:  * Tests basic operations on a bigger read-only Clob from the store module.
1:cb2e1a4:  */
1:cb2e1a4: public class BiggerStoreStreamClobTest
1:cb2e1a4:     extends InternalClobTest {
1:cb2e1a4: 
1:cb2e1a4:     private static final long CLOBLENGTH = 67*1024+19; // ~97 KB
1:cb2e1a4:     private static final long BYTES_PER_CHAR = 1; // All modern Latin
1:cb2e1a4: 
1:cb2e1a4:     public BiggerStoreStreamClobTest(String name) {
1:cb2e1a4:         super(name);
1:cb2e1a4:     }
1:cb2e1a4: 
1:cb2e1a4:     public void setUp()
1:cb2e1a4:             throws Exception {
1:cb2e1a4:         super.initialCharLength = CLOBLENGTH;
1:7672693:         super.headerLength = 2 +3;
1:7672693:         // The fake stream uses ascii. Add header and EOF marker.
1:7672693:         super.initialByteLength = CLOBLENGTH + headerLength;
1:cb2e1a4:         super.bytesPerChar = BYTES_PER_CHAR;
1:cb2e1a4:         EmbedStatement embStmt = (EmbedStatement)createStatement();
1:7672693:         InputStream is = new FakeStoreStream(CLOBLENGTH);
1:7672693:         CharacterStreamDescriptor csd =
1:7672693:                 new CharacterStreamDescriptor.Builder().stream(is).
1:7672693:                     charLength(initialCharLength).byteLength(0L).
1:7672693:                     curCharPos(CharacterStreamDescriptor.BEFORE_FIRST).
1:7672693:                     dataOffset(2L).build();
1:7672693:         iClob = new StoreStreamClob(csd, embStmt);
1:cb2e1a4:         assertEquals(CLOBLENGTH, iClob.getCharLength());
1:cb2e1a4:     }
1:cb2e1a4: 
1:cb2e1a4:     public void tearDown()
1:cb2e1a4:             throws Exception {
1:cb2e1a4:         this.iClob.release();
1:cb2e1a4:         this.iClob = null;
1:cb2e1a4:         super.tearDown();
1:cb2e1a4:     }
1:cb2e1a4: 
1:cb2e1a4:     public static Test suite() {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite(
1:1ae02c9:             BiggerStoreStreamClobTest.class,
1:1ae02c9:             "BiggerStoreStreamClobTest suite");
1:cb2e1a4:         return suite;
1:cb2e1a4:     }
1:cb2e1a4: } // End class BiggerStoreStreamClobTest
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite(
1:             BiggerStoreStreamClobTest.class,
1:             "BiggerStoreStreamClobTest suite");
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:7672693
/////////////////////////////////////////////////////////////////////////
1: import java.io.InputStream;
1: import org.apache.derby.iapi.jdbc.CharacterStreamDescriptor;
/////////////////////////////////////////////////////////////////////////
1:         super.headerLength = 2 +3;
1:         // The fake stream uses ascii. Add header and EOF marker.
1:         super.initialByteLength = CLOBLENGTH + headerLength;
1:         InputStream is = new FakeStoreStream(CLOBLENGTH);
1:         CharacterStreamDescriptor csd =
1:                 new CharacterStreamDescriptor.Builder().stream(is).
1:                     charLength(initialCharLength).byteLength(0L).
1:                     curCharPos(CharacterStreamDescriptor.BEFORE_FIRST).
1:                     dataOffset(2L).build();
1:         iClob = new StoreStreamClob(csd, embStmt);
commit:cb2e1a4
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.jdbc.BiggerStoreStreamTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one
1:    or more contributor license agreements.  See the NOTICE file
1:    distributed with this work for additional information
1:    regarding copyright ownership.  The ASF licenses this file
1:    to you under the Apache License, Version 2.0 (the
1:    "License"); you may not use this file except in compliance
1:    with the License.  You may obtain a copy of the License at
1: 
1:      http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing,
1:    software distributed under the License is distributed on an
1:    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:    KIND, either express or implied.  See the License for the
1:    specific language governing permissions and limitations
1:    under the License.
1: 
1:  */
1: package org.apache.derby.impl.jdbc;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Tests basic operations on a bigger read-only Clob from the store module.
1:  */
1: public class BiggerStoreStreamClobTest
1:     extends InternalClobTest {
1: 
1:     private static final long CLOBLENGTH = 67*1024+19; // ~97 KB
1:     private static final long BYTES_PER_CHAR = 1; // All modern Latin
1: 
1:     public BiggerStoreStreamClobTest(String name) {
1:         super(name);
1:     }
1: 
1:     public void setUp()
1:             throws Exception {
1:         super.initialCharLength = CLOBLENGTH;
0:         super.initialByteLength = CLOBLENGTH; // The fake stream uses ascii.
1:         super.bytesPerChar = BYTES_PER_CHAR;
1:         EmbedStatement embStmt = (EmbedStatement)createStatement();
0:         iClob = new StoreStreamClob(new FakeStoreStream(CLOBLENGTH), embStmt);
1:         assertEquals(CLOBLENGTH, iClob.getCharLength());
1:     }
1: 
1:     public void tearDown()
1:             throws Exception {
1:         this.iClob.release();
1:         this.iClob = null;
1:         super.tearDown();
1:     }
1: 
1:     public static Test suite() {
0:         TestSuite suite = new TestSuite(BiggerStoreStreamClobTest.class,
0:                                         "BiggerStoreStreamClobTest suite");
1:         return suite;
1:     }
1: } // End class BiggerStoreStreamClobTest
============================================================================