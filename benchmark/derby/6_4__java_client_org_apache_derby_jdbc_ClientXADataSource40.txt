1:17d490d: /*
1:a12152a: 
1:17d490d:    Derby - Class org.apache.derby.jdbc.ClientXADataSource40
1:ce40a31: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:09869c6: 
1:17d490d:       http://www.apache.org/licenses/LICENSE-2.0
1:09869c6: 
1:17d490d:    Unless required by applicable law or agreed to in writing, software
1:17d490d:    distributed under the License is distributed on an "AS IS" BASIS,
1:17d490d:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:17d490d:    See the License for the specific language governing permissions and
1:17d490d:    limitations under the License.
1:09869c6: 
1:8a44c0f: */
1:8a44c0f: 
1:17d490d: package org.apache.derby.jdbc;
2:ceb7210: 
1:69e3d06: import javax.sql.XADataSource;
1:ceb7210: 
1:8a44c0f: /**
1:fd584b0:    <P>
1:fd584b0:    This is a vacuous, deprecated class. At one time, it had real behavior and helped us support
1:fd584b0:    separate datasources for Java 5 and Java 6.
1:fd584b0:    Now that we no longer support Java 5, all functionality has migrated into the superclass, ClientXADataSource.
1:fd584b0:    This class is preserved for backward compatibility reasons.
1:fd584b0:    </P>
1:c712a5b:    @deprecated Use {@link ClientXADataSource} instead.
3:ceb7210:  */
1:8269b78: public class ClientXADataSource40 extends ClientXADataSource
1:69e3d06:     implements XADataSource /* compile-time check for 4.1 extension */
1:a12152a: {
1:4ba78a4:    private static final long serialVersionUID = -3463444509507830926L;
1:a12152a: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4ba78a4
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:    private static final long serialVersionUID = -3463444509507830926L;
commit:a12152a
/////////////////////////////////////////////////////////////////////////
0: import java.sql.ShardingKeyBuilder;
0: import java.sql.SQLException;
0: import java.sql.SQLFeatureNotSupportedException;
/////////////////////////////////////////////////////////////////////////
0:     private static final long serialVersionUID = -3463444509507830926L;
1: 
0:     /** Added by Java 9 */
0:     public ShardingKeyBuilder createShardingKeyBuilder()
0:         throws SQLException
1:     {
0:         throw new java.sql.SQLFeatureNotSupportedException();
1:     }
commit:80d39ee
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:    private static final long serialVersionUID = -3463444509507830926L;
commit:ce40a31
/////////////////////////////////////////////////////////////////////////
0: import java.sql.ShardingKeyBuilder;
0: import java.sql.SQLException;
0: import java.sql.SQLFeatureNotSupportedException;
/////////////////////////////////////////////////////////////////////////
0:     private static final long serialVersionUID = -3463444509507830926L;
1: 
0:     /** Added by Java 9 */
0:     public ShardingKeyBuilder createShardingKeyBuilder()
0:         throws SQLException
0:     {
0:         throw new java.sql.SQLFeatureNotSupportedException();
0:     }
commit:fd584b0
/////////////////////////////////////////////////////////////////////////
1:    <P>
1:    This is a vacuous, deprecated class. At one time, it had real behavior and helped us support
1:    separate datasources for Java 5 and Java 6.
1:    Now that we no longer support Java 5, all functionality has migrated into the superclass, ClientXADataSource.
1:    This class is preserved for backward compatibility reasons.
1:    </P>
commit:0ede6f3
/////////////////////////////////////////////////////////////////////////
0:  * Use ClientXADataSource40 if your application runs at JDBC level 4.0 (or higher).
0:  * Use ClientXADataSource
commit:09869c6
/////////////////////////////////////////////////////////////////////////
0: import java.sql.SQLFeatureNotSupportedException;
0: import java.util.logging.Logger;
/////////////////////////////////////////////////////////////////////////
1: 
0:     ////////////////////////////////////////////////////////////////////
0:     //
0:     // INTRODUCED BY JDBC 4.1 IN JAVA 7
0:     //
0:     ////////////////////////////////////////////////////////////////////
1: 
0:     public  Logger getParentLogger()
0:         throws SQLFeatureNotSupportedException
0:     {
0:         throw (SQLFeatureNotSupportedException)
0:             (
0:              new SqlException( null, new ClientMessageId(SQLState.NOT_IMPLEMENTED), "getParentLogger" )
0:              ).getSQLException();
0:     }
1:     
commit:d6e7d39
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:8a44c0f
/////////////////////////////////////////////////////////////////////////
0: import javax.sql.DataSource;
/////////////////////////////////////////////////////////////////////////
0:      * This method forwards all the calls to default query object provided by 
0:      * the jdk.
0:      * @param ifc interface to generated concreate class
0:      * @param dataSource DataSource to use when invoking methods that access the Data Source
0:      * @return concrete class generated by default qury object generator
1:      */
0:     public <T extends BaseQuery> T createQueryObject(Class<T> ifc, DataSource dataSource ) 
0:                                                     throws SQLException {
0:         return QueryObjectFactory.createDefaultQueryObject (ifc, dataSource);
0:     }   
1:     
1: 	/**
commit:ceb7210
/////////////////////////////////////////////////////////////////////////
0: import java.sql.QueryObjectFactory;
0: import org.apache.derby.client.am.ClientMessageId;
0: import org.apache.derby.shared.common.reference.SQLState;
/////////////////////////////////////////////////////////////////////////
0:     }
1:     
0:     /**
0:      * This method forwards all the calls to default query object provided by 
0:      * the jdk.
0:      * @param ifc interface to generated concreate class
0:      * @return concreat class generated by default qury object generator
1:      */
0:     public <T extends BaseQuery> T createQueryObject(Class<T> ifc) 
0:                                                     throws SQLException {
0:         return QueryObjectFactory.createDefaultQueryObject (ifc, this);
0:     }   
1:     
0:     /**
0:      * Returns false unless <code>interfaces</code> is implemented 
0:      * 
0:      * @param  interfaces             a Class defining an interface.
0:      * @return true                   if this implements the interface or 
0:      *                                directly or indirectly wraps an object 
0:      *                                that does.
0:      * @throws java.sql.SQLException  if an error occurs while determining 
0:      *                                whether this is a wrapper for an object 
0:      *                                with the given interface.
1:      */
0:     public boolean isWrapperFor(Class<?> interfaces) throws SQLException {
0:         return interfaces.isInstance(this);
0:     }
1:     
0:     /**
0:      * Returns <code>this</code> if this class implements the interface
0:      *
0:      * @param  interfaces a Class defining an interface
0:      * @return an object that implements the interface
0:      * @throws java.sql.SQLExption if no object if found that implements the 
0:      * interface
1:      */
0:     public <T> T unwrap(java.lang.Class<T> interfaces)
0:                                    throws SQLException {
0:         try { 
0:             return interfaces.cast(this);
0:         } catch (ClassCastException cce) {
0:             throw new SqlException(null,new ClientMessageId(
0:                     SQLState.UNABLE_TO_UNWRAP), interfaces).getSQLException();
0:         }
0:     }
commit:54792be
/////////////////////////////////////////////////////////////////////////
0:  * <p>
0:  * This is Derby's network XADataSource for use with JDBC4.0.
0:  * </p>
0:  * An XADataSource is a factory for XAConnection objects.  It represents a
0:  * RM in a DTP environment.  An object that implements the XADataSource
0:  * interface is typically registered with a JNDI service provider.   	
0:  * <P>
0:  * ClientXADataSource40 supports the JDBC 4.0 specification
0:  * for the J2SE 6.0 Java Virtual Machine environment. Use ClientXADataSource
0:  * if your application runs in the following environments:
0:  * <UL>
0:  * <LI> JDBC 3.0 - Java 2 - JDK 1.4, J2SE 5.0
0:  * <LI> JDBC 2.0 - Java 2 - JDK 1.2,1.3
0:  * </UL>
0:  *
0:  * <P>ClientXADataSource40 is serializable and referenceable.</p>
0:  *
0:  * <P>See ClientDataSource40 for DataSource properties.</p>
commit:17d490d
/////////////////////////////////////////////////////////////////////////
1: /*
0: 
1:    Derby - Class org.apache.derby.jdbc.ClientXADataSource40
0: 
0:    Copyright (c) 2006 The Apache Software Foundation or its licensors, where applicable.
0: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
0: 
1:       http://www.apache.org/licenses/LICENSE-2.0
0: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
0: 
0: */
0: 
1: package org.apache.derby.jdbc;
0: 
0: import java.sql.BaseQuery;
0: import java.sql.QueryObjectGenerator;
0: import java.sql.SQLException;
0: import javax.sql.DataSource;
0: import javax.sql.XAConnection;
0: import org.apache.derby.client.ClientXAConnection40;
0: import org.apache.derby.client.am.SQLExceptionFactory;
0: import org.apache.derby.client.am.SqlException;
0: import org.apache.derby.client.net.NetLogWriter;
0: 
0: /**
0:  * XADataSource for jdbc4.0
0:  */
0: public class ClientXADataSource40 extends ClientXADataSource {
0:     /**
0:      * Retrieves the QueryObjectGenerator for the given JDBC driver.  If the
0:      * JDBC driver does not provide its own QueryObjectGenerator, NULL is
0:      * returned.
0:      *
0:      * @return The QueryObjectGenerator for this JDBC Driver or NULL if the
0:      * driver does not provide its own implementation
0:      * @exception SQLException if a database access error occurs
0:      */
0:     public QueryObjectGenerator getQueryObjectGenerator() throws SQLException {
0:         return null;
0:     }
0:     
0:     /**
0:      * creates a jdbc4.0 XAConnection
0:      * @param user 
0:      * @param password 
0:      * @return XAConnection
0:      */
0:     public XAConnection getXAConnection(String user, String password) throws SQLException {
0:         try {
0:             NetLogWriter dncLogWriter = (NetLogWriter) 
0:                         super.computeDncLogWriterForNewConnection("_xads");
0:             return new ClientXAConnection40 (this, dncLogWriter, user, password);
0:         } catch ( SqlException se ) {
0:             throw se.getSQLException();
0:         }
0:     }    
0: }
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:c712a5b
/////////////////////////////////////////////////////////////////////////
1:    @deprecated Use {@link ClientXADataSource} instead.
commit:04fc939
/////////////////////////////////////////////////////////////////////////
0:  * <p>
0:  * </p>
0:  *
0:  *   <li>Java SE 6 (JDBC 4.0) and</li>
0:  *   <li>Java SE 7 (JDBC 4.1) and</li>
0:  *   <li>full Java SE 8 (JDBC 4.2).</li>
0:  * </p>
0:  *
0:  * <p>
0:  * Those platforms are also supported by {@code ClientXADataSource}
0:  * now, and applications should use {@code ClientXADataSource}
0:  * instead of this class. This class is provided only for backward
0:  * compatibility and may be removed in later versions of Derby.
0:  * </p>
0:  *
0:  * </p>
0:  *
0:  * </p>
0:  *
/////////////////////////////////////////////////////////////////////////
commit:7f6e8aa
/////////////////////////////////////////////////////////////////////////
0:  * interface is typically registered with a JNDI service provider.
commit:5ef7a0d
/////////////////////////////////////////////////////////////////////////
0:  * This is Derby's network XADataSource for use with JDBC 4.1.
0:  * Use ClientXADataSource40 if your application runs at JDBC level 4.1 (or
0:  * higher). Use ClientXADataSource
0:  * <LI> JDBC 4.0 - Java SE 6
0:  * <LI> JDBC 3.0 - J2SE 5.0
/////////////////////////////////////////////////////////////////////////
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:69e3d06
/////////////////////////////////////////////////////////////////////////
1: import javax.sql.XADataSource;
/////////////////////////////////////////////////////////////////////////
1:     implements XADataSource /* compile-time check for 4.1 extension */
commit:a24588c
/////////////////////////////////////////////////////////////////////////
0:  *   <li>Java SE 7 (JDBC 4.1) and
0:  *   <li>full Java SE 8 (JDBC 4.2).
commit:cb88209
/////////////////////////////////////////////////////////////////////////
0:  * running on the following platforms:
0:  * <p>
0:  * <ul>
0:  *   <li>JDBC 4.1 - Java SE 7
0:  *   <li>JDBC 4.2 - full Java SE 8
0:  * </ul>
0:  * <p>
0:  * Use BasicClientXADataSource40 if your application runs on Java 8
0:  * Compact Profile 2.
0:  * <p>
0:  * Use ClientXADataSource if your application runs on the following
0:  * platforms:
0:  * <p>
0:  * <p>
commit:2913612
/////////////////////////////////////////////////////////////////////////
0:  * This datasource is suitable for a client/server use of Derby,
0:  * running on full Java SE 7, corresponding to JDBC 4.1.
0:  * <p/>
0:  * Use ClientXADataSource if your application runs in the following
0:  * environments:
0:  * <ul>
0:  *   <li> JDBC 4.0 - Java SE 6
0:  *   <li> JDBC 3.0 - J2SE 5.0
0:  * </ul>
0:  *
commit:8269b78
/////////////////////////////////////////////////////////////////////////
1: public class ClientXADataSource40 extends ClientXADataSource
0:     implements javax.sql.XADataSource /* compile-time check for 4.1 extension */
0: {
0:    private static final long serialVersionUID = -3463444509507830926L;
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:6eb29f6
/////////////////////////////////////////////////////////////////////////
0:  * interface is typically registered with a JNDI service provider.       
author:Army
-------------------------------------------------------------------------------
commit:8fcae92
/////////////////////////////////////////////////////////////////////////
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
============================================================================