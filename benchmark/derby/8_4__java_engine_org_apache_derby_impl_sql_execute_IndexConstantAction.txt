1:eac0369: /*
1:345de35: 
1:345de35:    Derby - Class org.apache.derby.impl.sql.execute.IndexConstantAction
1:345de35: 
1:f6123ee:    Licensed to the Apache Software Foundation (ASF) under one or more
1:f6123ee:    contributor license agreements.  See the NOTICE file distributed with
1:f6123ee:    this work for additional information regarding copyright ownership.
1:f6123ee:    The ASF licenses this file to you under the Apache License, Version 2.0
1:f6123ee:    (the "License"); you may not use this file except in compliance with
1:f6123ee:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
5:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.sql.execute;
1:eac0369: 
1:eac0369: import org.apache.derby.catalog.UUID;
1:7e51e9d: import org.apache.derby.shared.common.sanity.SanityManager;
1:eac0369: 
2:eac0369: /**
1:eac0369:  *	This class is the superclass for the classes that describe actions 
1:eac0369:  *  that are ALWAYS performed for a CREATE/DROP INDEX Statement at Execution time.
2:eac0369:  *
1:eac0369:  */
1:eac0369: 
1:eac0369: public abstract class IndexConstantAction extends DDLSingleTableConstantAction
1:eac0369: {
1:eac0369: 
1:eac0369: 	String				indexName;
1:eac0369: 	String				tableName;
1:eac0369: 	String				schemaName;
1:eac0369: 
1:f6d02c9:     /** Set by CreateConstraintConstantAction */
1:f6d02c9:     protected transient   UUID    constraintID;
1:f6d02c9: 
1:eac0369: 	// CONSTRUCTORS
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	 *	Make the ConstantAction for a CREATE/DROP INDEX statement.
1:eac0369: 	 *
1:eac0369: 	 *	@param	tableId				The table uuid
1:eac0369: 	 *	@param	indexName			Index name.
1:eac0369: 	 *	@param	tableName			The table name
1:6b50965: 	 *	@param	schemaName					Schema that index lives in.
1:eac0369: 	 *
1:eac0369: 	 */
1:eac0369: 	protected	IndexConstantAction(
1:eac0369: 								UUID				tableId,
1:eac0369: 								String				indexName,
1:eac0369: 								String				tableName,
1:eac0369: 								String schemaName)
1:eac0369: 	{
1:eac0369: 		super(tableId);
1:eac0369: 		this.indexName = indexName;
1:eac0369: 		this.tableName = tableName;
1:eac0369: 		this.schemaName = schemaName;
1:eac0369: 
1:eac0369: 		if (SanityManager.DEBUG)
1:eac0369: 		{
1:eac0369: 			SanityManager.ASSERT(schemaName != null, "Schema name is null");
1:eac0369: 		}
1:eac0369: 	}
1:f6d02c9: 
1:eac0369:     // CLASS METHODS
1:eac0369: 
1:f6d02c9: 	/**
1:eac0369: 	  *	Get the index name.
1:eac0369: 	  *
1:eac0369: 	  *	@return	the name of the index
1:eac0369: 	  */
1:eac0369:     public	String	getIndexName() { return indexName; }
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	 * Set the index name at execution time.
1:eac0369: 	 * Useful for unnamed constraints which have a backing index.
1:eac0369: 	 *
1:eac0369: 	 * @param indexName		The (generated) index name.
1:eac0369: 	 */
1:eac0369: 	public void setIndexName(String indexName)
1:eac0369: 	{
1:eac0369: 		this.indexName = indexName;
1:eac0369: 	}
1:eac0369: 
1:eac0369:     /**
1:f6d02c9:      * Set the id for the constraint which may be driving this index action.
1:f6d02c9:      * This is called by CreateConstraintConstantAction.
1:f6d02c9:      * @param constraintID The id of the constraint
1:f6d02c9:      */
1:f6d02c9:     public void setConstraintID(UUID constraintID) {
1:f6d02c9:         this.constraintID = constraintID;
1:f6d02c9:     }
1:f6d02c9: 
1:eac0369: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:f6d02c9
/////////////////////////////////////////////////////////////////////////
1:     /** Set by CreateConstraintConstantAction */
1:     protected transient   UUID    constraintID;
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Set the id for the constraint which may be driving this index action.
1:      * This is called by CreateConstraintConstantAction.
1:      * @param constraintID The id of the constraint
1:      */
1:     public void setConstraintID(UUID constraintID) {
1:         this.constraintID = constraintID;
1:     }
1: 
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:7e51e9d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.shared.common.sanity.SanityManager;
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:1e2aae0
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.iapi.services.sanity.SanityManager;
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.sql.execute.IndexConstantAction
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:9e5097f
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.execute
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.sql.execute;
1: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1: 
0: import org.apache.derby.iapi.sql.dictionary.ColumnDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator;
0: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
0: import org.apache.derby.iapi.sql.dictionary.DataDictionaryContext;
0: import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
1: 
0: import org.apache.derby.iapi.sql.execute.ConstantAction;
0: import org.apache.derby.iapi.store.access.TransactionController;
1: 
1: import org.apache.derby.catalog.UUID;
1: 
1: /**
1:  *	This class is the superclass for the classes that describe actions 
1:  *  that are ALWAYS performed for a CREATE/DROP INDEX Statement at Execution time.
1:  *
0:  *	@author Jerry Brenner
1:  */
1: 
1: public abstract class IndexConstantAction extends DDLSingleTableConstantAction
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 
1: 	String				indexName;
1: 	String				tableName;
1: 	String				schemaName;
1: 
1: 	// CONSTRUCTORS
1: 
1: 	/**
1: 	 *	Make the ConstantAction for a CREATE/DROP INDEX statement.
1: 	 *
1: 	 *	@param	tableId				The table uuid
1: 	 *	@param	indexName			Index name.
1: 	 *	@param	tableName			The table name
0: 	 *	@param	sd					Schema that index lives in.
1: 	 *
1: 	 */
1: 	protected	IndexConstantAction(
1: 								UUID				tableId,
1: 								String				indexName,
1: 								String				tableName,
1: 								String schemaName)
1: 	{
1: 		super(tableId);
1: 		this.indexName = indexName;
1: 		this.tableName = tableName;
1: 		this.schemaName = schemaName;
1: 
1: 		if (SanityManager.DEBUG)
1: 		{
1: 			SanityManager.ASSERT(schemaName != null, "Schema name is null");
1: 		}
1: 	}
1: 
1:     // CLASS METHODS
1: 
1: 	/**
1: 	  *	Get the index name.
1: 	  *
1: 	  *	@return	the name of the index
1: 	  */
1:     public	String	getIndexName() { return indexName; }
1: 
1: 	/**
1: 	 * Set the index name at execution time.
1: 	 * Useful for unnamed constraints which have a backing index.
1: 	 *
1: 	 * @param indexName		The (generated) index name.
1: 	 *
0: 	 * @return Nothing.
1: 	 */
1: 	public void setIndexName(String indexName)
1: 	{
1: 		this.indexName = indexName;
1: 	}
1: }
author:David Van Couvering
-------------------------------------------------------------------------------
commit:f6123ee
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:6b50965
/////////////////////////////////////////////////////////////////////////
1: 	 *	@param	schemaName					Schema that index lives in.
/////////////////////////////////////////////////////////////////////////
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:318307e
/////////////////////////////////////////////////////////////////////////
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.execute
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.sql.execute;
0: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
0: 
0: import org.apache.derby.iapi.sql.dictionary.ColumnDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.ConstraintDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.DataDescriptorGenerator;
0: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
0: import org.apache.derby.iapi.sql.dictionary.DataDictionaryContext;
0: import org.apache.derby.iapi.sql.dictionary.SchemaDescriptor;
0: import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
0: 
0: import org.apache.derby.iapi.sql.execute.ConstantAction;
0: import org.apache.derby.iapi.store.access.TransactionController;
0: 
0: import org.apache.derby.catalog.UUID;
0: 
0: /**
0:  *	This class is the superclass for the classes that describe actions 
0:  *  that are ALWAYS performed for a CREATE/DROP INDEX Statement at Execution time.
0:  *
0:  *	@author Jerry Brenner
0:  */
0: 
0: public abstract class IndexConstantAction extends DDLSingleTableConstantAction
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 
0: 	String				indexName;
0: 	String				tableName;
0: 	String				schemaName;
0: 
0: 	// CONSTRUCTORS
0: 
0: 	/**
0: 	 *	Make the ConstantAction for a CREATE/DROP INDEX statement.
0: 	 *
0: 	 *	@param	tableId				The table uuid
0: 	 *	@param	indexName			Index name.
0: 	 *	@param	tableName			The table name
0: 	 *	@param	sd					Schema that index lives in.
0: 	 *
0: 	 */
0: 	protected	IndexConstantAction(
0: 								UUID				tableId,
0: 								String				indexName,
0: 								String				tableName,
0: 								String schemaName)
0: 	{
0: 		super(tableId);
0: 		this.indexName = indexName;
0: 		this.tableName = tableName;
0: 		this.schemaName = schemaName;
0: 
0: 		if (SanityManager.DEBUG)
0: 		{
0: 			SanityManager.ASSERT(schemaName != null, "Schema name is null");
0: 		}
0: 	}
0: 
0:     // CLASS METHODS
0: 
0: 	/**
0: 	  *	Get the index name.
0: 	  *
0: 	  *	@return	the name of the index
0: 	  */
0:     public	String	getIndexName() { return indexName; }
0: 
0: 	/**
0: 	 * Set the index name at execution time.
0: 	 * Useful for unnamed constraints which have a backing index.
0: 	 *
0: 	 * @param indexName		The (generated) index name.
0: 	 *
0: 	 * @return Nothing.
0: 	 */
0: 	public void setIndexName(String indexName)
0: 	{
0: 		this.indexName = indexName;
0: 	}
0: }
============================================================================