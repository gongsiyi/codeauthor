1:fe77ca5: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.sql.LanguageFactory
1:7ecc1f2: 
1:4590cd8:    Licensed to the Apache Software Foundation (ASF) under one or more
1:4590cd8:    contributor license agreements.  See the NOTICE file distributed with
1:4590cd8:    this work for additional information regarding copyright ownership.
1:4590cd8:    The ASF licenses this file to you under the Apache License, Version 2.0
1:4590cd8:    (the "License"); you may not use this file except in compliance with
1:4590cd8:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
3:fe77ca5: 
3:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: package org.apache.derby.iapi.sql;
1:fe77ca5: 
1:fe77ca5: import org.apache.derby.iapi.error.StandardException;
1:fe77ca5: import org.apache.derby.iapi.services.loader.ClassInspector;
1:fe77ca5: 
3:fe77ca5: /**
1:fe77ca5:  * Factory interface for the Language.Interface protocol.
1:fe77ca5:  * This is used via the Database API by users, and is presented
1:fe77ca5:  * as a System Module (not a service module).  That could change,
1:fe77ca5:  * but for now this is valid for any database. 
3:fe77ca5:  *
1:fe77ca5:  */
1:fe77ca5: public interface LanguageFactory
1:fe77ca5: {
1:fe77ca5: 	/**
1:fe77ca5: 		Used to locate this factory by the Monitor basic service.
1:fe77ca5: 		There needs to be a language factory per database.
1:fe77ca5: 	 */
1:fe77ca5: 	String MODULE = "org.apache.derby.iapi.sql.LanguageFactory";
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 	 * Get a ParameterValueSet
1:fe77ca5: 	 *
1:fe77ca5: 	 * @param numParms	The number of parameters in the
1:fe77ca5: 	 *			ParameterValueSet
1:fe77ca5: 	 * @param hasReturnParam	true if this parameter set
1:fe77ca5: 	 *			has a return parameter.  The return parameter
1:fe77ca5: 	 *			is always the 1st parameter in the list.  It
1:fe77ca5: 	 *			is due to a callableStatement like this: <i>
1:fe77ca5: 	 *			? = CALL myMethod()</i>
1:fe77ca5: 	 *
1:fe77ca5: 	 * @return	A new ParameterValueSet with the given number of parms
1:fe77ca5: 	 */
1:fe77ca5: 	ParameterValueSet newParameterValueSet(ClassInspector ci, int numParms, boolean hasReturnParam);
1:fe77ca5: 
1:fe77ca5: 	/**
1:c69c8b0: 	 * Get a new result description from the input result
1:c69c8b0: 	 * description.  Picks only the columns in the column
1:c69c8b0: 	 * array from the inputResultDescription.
1:c69c8b0: 	 *
1:c69c8b0:  	 * @param inputResultDescription the input rd
1:c69c8b0: 	 * @param theCols non null array of ints
1:c69c8b0: 	 *
1:c69c8b0: 	 * @return ResultDescription the rd
1:c69c8b0: 	 */
1:c69c8b0: 	public ResultDescription getResultDescription
1:c69c8b0: 	(
1:c69c8b0: 		ResultDescription	inputResultDescription,
1:c69c8b0: 		int[]				theCols
1:c69c8b0: 	);
1:c69c8b0: 
1:c69c8b0: 	/**
1:fe77ca5: 	 * Get a new result description
1:fe77ca5: 	 *
1:fe77ca5:  	 * @param cols an array of col descriptors
1:fe77ca5: 	 * @param type the statement type
1:fe77ca5: 	 *
2:fe77ca5: 	 * @return ResultDescription the rd
1:fe77ca5: 	 */
2:fe77ca5: 	public ResultDescription getResultDescription
2:fe77ca5: 	(
1:fe77ca5: 		ResultColumnDescriptor[]	cols,
1:fe77ca5: 		String						type
2:fe77ca5: 	);
1:fe77ca5: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:c69c8b0
/////////////////////////////////////////////////////////////////////////
1: 	 * Get a new result description from the input result
1: 	 * description.  Picks only the columns in the column
1: 	 * array from the inputResultDescription.
1: 	 *
1:  	 * @param inputResultDescription the input rd
1: 	 * @param theCols non null array of ints
1: 	 *
1: 	 * @return ResultDescription the rd
1: 	 */
1: 	public ResultDescription getResultDescription
1: 	(
1: 		ResultDescription	inputResultDescription,
1: 		int[]				theCols
1: 	);
1: 
1: 	/**
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:51572c8
/////////////////////////////////////////////////////////////////////////
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.sql.LanguageFactory
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.services.loader.ClassInspector;
1: 
1: /**
1:  * Factory interface for the Language.Interface protocol.
1:  * This is used via the Database API by users, and is presented
1:  * as a System Module (not a service module).  That could change,
1:  * but for now this is valid for any database. 
1:  *
0:  * @author Jeff Lichtman
1:  */
1: public interface LanguageFactory
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/**
1: 		Used to locate this factory by the Monitor basic service.
1: 		There needs to be a language factory per database.
1: 	 */
1: 	String MODULE = "org.apache.derby.iapi.sql.LanguageFactory";
1: 
1: 	/**
1: 	 * Get a ParameterValueSet
1: 	 *
1: 	 * @param numParms	The number of parameters in the
1: 	 *			ParameterValueSet
1: 	 * @param hasReturnParam	true if this parameter set
1: 	 *			has a return parameter.  The return parameter
1: 	 *			is always the 1st parameter in the list.  It
1: 	 *			is due to a callableStatement like this: <i>
1: 	 *			? = CALL myMethod()</i>
1: 	 *
1: 	 * @return	A new ParameterValueSet with the given number of parms
1: 	 */
1: 	ParameterValueSet newParameterValueSet(ClassInspector ci, int numParms, boolean hasReturnParam);
1: 
1: 	/**
0: 	 * Get a new result description from the input result
0: 	 * description.  Picks only the columns in the column
0: 	 * array from the inputResultDescription.
1: 	 *
0:  	 * @param inputResultDescription the input rd
0: 	 * @param theCols non null array of ints
1: 	 *
1: 	 * @return ResultDescription the rd
1: 	 */
1: 	public ResultDescription getResultDescription
1: 	(
0: 		ResultDescription	inputResultDescription,
0: 		int[]				theCols
1: 	);
1: 
1: 	/**
1: 	 * Get a new result description
1: 	 *
1:  	 * @param cols an array of col descriptors
1: 	 * @param type the statement type
1: 	 *
1: 	 * @return ResultDescription the rd
1: 	 */
1: 	public ResultDescription getResultDescription
1: 	(
1: 		ResultColumnDescriptor[]	cols,
1: 		String						type
1: 	);
1: }
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:David Van Couvering
-------------------------------------------------------------------------------
commit:4590cd8
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.sql;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.services.loader.ClassInspector;
0: 
0: /**
0:  * Factory interface for the Language.Interface protocol.
0:  * This is used via the Database API by users, and is presented
0:  * as a System Module (not a service module).  That could change,
0:  * but for now this is valid for any database. 
0:  *
0:  * @author Jeff Lichtman
0:  */
0: public interface LanguageFactory
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/**
0: 		Used to locate this factory by the Monitor basic service.
0: 		There needs to be a language factory per database.
0: 	 */
0: 	String MODULE = "org.apache.derby.iapi.sql.LanguageFactory";
0: 
0: 	/**
0: 	 * Get a ParameterValueSet
0: 	 *
0: 	 * @param numParms	The number of parameters in the
0: 	 *			ParameterValueSet
0: 	 * @param hasReturnParam	true if this parameter set
0: 	 *			has a return parameter.  The return parameter
0: 	 *			is always the 1st parameter in the list.  It
0: 	 *			is due to a callableStatement like this: <i>
0: 	 *			? = CALL myMethod()</i>
0: 	 *
0: 	 * @return	A new ParameterValueSet with the given number of parms
0: 	 */
0: 	ParameterValueSet newParameterValueSet(ClassInspector ci, int numParms, boolean hasReturnParam);
0: 
0: 	/**
0: 	 * Get a new result description from the input result
0: 	 * description.  Picks only the columns in the column
0: 	 * array from the inputResultDescription.
0: 	 *
0:  	 * @param inputResultDescription the input rd
0: 	 * @param theCols non null array of ints
0: 	 *
0: 	 * @return ResultDescription the rd
0: 	 */
0: 	public ResultDescription getResultDescription
0: 	(
0: 		ResultDescription	inputResultDescription,
0: 		int[]				theCols
0: 	);
0: 
0: 	/**
0: 	 * Get a new result description
0: 	 *
0:  	 * @param cols an array of col descriptors
0: 	 * @param type the statement type
0: 	 *
0: 	 * @return ResultDescription the rd
0: 	 */
0: 	public ResultDescription getResultDescription
0: 	(
0: 		ResultColumnDescriptor[]	cols,
0: 		String						type
0: 	);
0: }
============================================================================