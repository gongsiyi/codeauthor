1:7cfb7e6: /*
2:7cfb7e6:  
1:7cfb7e6:    Derby - Class org.apache.derby.impl.jdbc.EmbedPreparedStatement42
1:7cfb7e6:  
1:7cfb7e6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:7cfb7e6:    contributor license agreements.  See the NOTICE file distributed with
1:7cfb7e6:    this work for additional information regarding copyright ownership.
1:7cfb7e6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:7cfb7e6:    (the "License"); you may not use this file except in compliance with
1:7cfb7e6:    the License.  You may obtain a copy of the License at
1:7cfb7e6:  
1:7cfb7e6:       http://www.apache.org/licenses/LICENSE-2.0
1:7cfb7e6:  
1:7cfb7e6:    Unless required by applicable law or agreed to in writing, software
1:7cfb7e6:    distributed under the License is distributed on an "AS IS" BASIS,
1:7cfb7e6:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7cfb7e6:    See the License for the specific language governing permissions and
1:7cfb7e6:    limitations under the License.
1:7cfb7e6:  
1:7cfb7e6:  */
1:7cfb7e6: 
1:7cfb7e6: package org.apache.derby.impl.jdbc;
1:7cfb7e6: 
1:7cfb7e6: import java.sql.SQLException;
1:7cfb7e6: import java.sql.SQLType;
1:7cfb7e6: 
1:7cfb7e6: /**
1:7cfb7e6:  * <p>
1:7cfb7e6:  * PreparedStatement methods added by JDBC 4.2 which require Java 8.
1:7cfb7e6:  * </p>
1:7cfb7e6:  */
1:b5f2776: public class EmbedPreparedStatement42 extends EmbedPreparedStatement
1:7cfb7e6: {    
1:7cfb7e6:     public EmbedPreparedStatement42
1:7cfb7e6:         (
1:7cfb7e6:          EmbedConnection conn, String sql, boolean forMetaData,
1:7cfb7e6:          int resultSetType, int resultSetConcurrency, int resultSetHoldability,
1:7cfb7e6:          int autoGeneratedKeys, int[] columnIndexes, String[] columnNames
1:7cfb7e6:          ) throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         super(conn, sql, forMetaData, resultSetType, resultSetConcurrency, resultSetHoldability,
1:7cfb7e6:             autoGeneratedKeys, columnIndexes, columnNames);
1:7cfb7e6:     }
1:7cfb7e6: 
1:7cfb7e6:     public  void setObject
1:7cfb7e6:         ( int parameterIndex, java.lang.Object x, SQLType targetSqlType )
1:7cfb7e6:         throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         checkStatus();
1:7cfb7e6:         setObject
1:7cfb7e6:             (
1:7cfb7e6:              parameterIndex, x,
1:4c2fc4a:              Util42.getTypeAsInt( targetSqlType )
1:7cfb7e6:              );
1:7cfb7e6:     }
1:7cfb7e6:     
1:7cfb7e6:     public void setObject
1:7cfb7e6:         (
1:7cfb7e6:          int parameterIndex, java.lang.Object x,
1:7cfb7e6:          SQLType targetSqlType, int scaleOrLength
1:7cfb7e6:          )  throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         checkStatus();
1:7cfb7e6:         setObject
1:7cfb7e6:             (
1:7cfb7e6:              parameterIndex, x,
1:4c2fc4a:              Util42.getTypeAsInt( targetSqlType ),
1:7cfb7e6:              scaleOrLength
1:7cfb7e6:              );
1:7cfb7e6:     }
1:7cfb7e6: 
1:7cfb7e6: }    
1:7cfb7e6: 
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:b5f2776
/////////////////////////////////////////////////////////////////////////
1: public class EmbedPreparedStatement42 extends EmbedPreparedStatement
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4c2fc4a
/////////////////////////////////////////////////////////////////////////
1:              Util42.getTypeAsInt( targetSqlType )
/////////////////////////////////////////////////////////////////////////
1:              Util42.getTypeAsInt( targetSqlType ),
commit:7cfb7e6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derby.impl.jdbc.EmbedPreparedStatement42
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derby.impl.jdbc;
1: 
0: import java.sql.JDBCType;
1: import java.sql.SQLException;
1: import java.sql.SQLType;
0: import java.sql.Types;
1: 
0: import org.apache.derby.iapi.reference.SQLState;
1: 
1: /**
1:  * <p>
1:  * PreparedStatement methods added by JDBC 4.2 which require Java 8.
1:  * </p>
1:  */
0: public class EmbedPreparedStatement42 extends EmbedPreparedStatement40
1: {    
1:     public EmbedPreparedStatement42
1:         (
1:          EmbedConnection conn, String sql, boolean forMetaData,
1:          int resultSetType, int resultSetConcurrency, int resultSetHoldability,
1:          int autoGeneratedKeys, int[] columnIndexes, String[] columnNames
1:          ) throws SQLException
1:     {
1:         super(conn, sql, forMetaData, resultSetType, resultSetConcurrency, resultSetHoldability,
1:             autoGeneratedKeys, columnIndexes, columnNames);
1:     }
1: 
1:     public  void setObject
1:         ( int parameterIndex, java.lang.Object x, SQLType targetSqlType )
1:         throws SQLException
1:     {
1:         checkStatus();
1:         setObject
1:             (
1:              parameterIndex, x,
0:              Util42.getTypeAsInt( this, targetSqlType )
1:              );
1:     }
1:     
1:     public void setObject
1:         (
1:          int parameterIndex, java.lang.Object x,
1:          SQLType targetSqlType, int scaleOrLength
1:          )  throws SQLException
1:     {
1:         checkStatus();
1:         setObject
1:             (
1:              parameterIndex, x,
0:              Util42.getTypeAsInt( this, targetSqlType ),
1:              scaleOrLength
1:              );
1:     }
1: 
1: }    
1: 
============================================================================