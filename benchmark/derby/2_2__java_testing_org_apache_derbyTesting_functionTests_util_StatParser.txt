1:67614ad: /*
1:67614ad: 
1:f68f62f:    Derby - Class org.apache.derbyTesting.functionTests.util.StatParser
1:67614ad: 
1:15651f5:    Licensed to the Apache Software Foundation (ASF) under one or more
1:15651f5:    contributor license agreements.  See the NOTICE file distributed with
1:15651f5:    this work for additional information regarding copyright ownership.
1:15651f5:    The ASF licenses this file to You under the Apache License, Version 2.0
1:15651f5:    (the "License"); you may not use this file except in compliance with
1:15651f5:    the License.  You may obtain a copy of the License at
11:f68f62f: 
1:f68f62f:       http://www.apache.org/licenses/LICENSE-2.0
1:f68f62f: 
1:f68f62f:    Unless required by applicable law or agreed to in writing, software
1:f68f62f:    distributed under the License is distributed on an "AS IS" BASIS,
1:f68f62f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f68f62f:    See the License for the specific language governing permissions and
1:f68f62f:    limitations under the License.
1:f68f62f: 
2:67614ad:  */
1:67614ad: 
1:67614ad: package org.apache.derbyTesting.functionTests.util;
1:67614ad: 
2:67614ad: /**
1:67614ad:  * Utilities for parsing runtimestats
1:67614ad:  *
1:67614ad:  * RESOLVE: This class should be internationalized.
1:67614ad:  */
1:67614ad: public class StatParser
1:67614ad: {
1:67614ad: 	public static String getScanCols(String runTimeStats)
1:67614ad: 		throws Throwable
1:67614ad: 	{
1:67614ad: 		if (runTimeStats == null)
1:67614ad: 		{
1:67614ad: 			return "The RunTimeStatistics string passed in is null";
1:67614ad: 		}
1:67614ad: 
1:67614ad: 		int startIndex;
1:67614ad: 		int endIndex = 0;
1:67614ad: 		int indexIndex;
1:67614ad: 
1:67614ad: 		StringBuffer strbuf = new StringBuffer();
1:67614ad: 
1:67614ad: 		/*
1:67614ad: 		** We need to know if we used an index
1:67614ad: 		*/
1:67614ad: 		if ((indexIndex = runTimeStats.indexOf("Index Scan ResultSet")) != -1)
1:67614ad: 		{
1:67614ad: 			int textend = runTimeStats.indexOf("\n", indexIndex);
1:67614ad: 			strbuf.append(runTimeStats.substring(indexIndex, textend+1));
1:67614ad: 		}
1:67614ad: 		else
1:67614ad: 		{
1:67614ad: 			strbuf.append("TableScan\n");
1:67614ad: 		}
1:67614ad: 
1:67614ad: 		int count = 0;
1:67614ad: 		while ((startIndex = runTimeStats.indexOf("Bit set of columns fetched", endIndex)) != -1)
1:67614ad: 		{
1:67614ad: 			count++;
1:67614ad: 			endIndex = runTimeStats.indexOf("}", startIndex);
1:67614ad: 			if (endIndex == -1)
1:67614ad: 			{
1:67614ad: 				endIndex = runTimeStats.indexOf("All", startIndex);
1:67614ad: 				if (endIndex == -1)
1:67614ad: 				{
1:67614ad: 					throw new Throwable("couldn't find the closing } on "+
1:67614ad: 						"columnFetchedBitSet in "+runTimeStats);
1:67614ad: 				}
1:67614ad: 				endIndex+=5;
1:67614ad: 			}
1:67614ad: 			else
1:67614ad: 			{
1:67614ad: 				endIndex++;
1:67614ad: 			}
1:67614ad: 			strbuf.append(runTimeStats.substring(startIndex, endIndex));
1:67614ad: 			strbuf.append("\n");
1:67614ad: 		}
1:67614ad: 		if (count == 0)
1:67614ad: 		{
1:67614ad: 			throw new Throwable("couldn't find string 'Bit set of columns fetched' in :\n"+
1:67614ad: 				runTimeStats);
1:67614ad: 		}
1:67614ad: 
1:67614ad: 		return strbuf.toString();
1:67614ad: 	}
1:67614ad: }	
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:15651f5
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:67614ad
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derbyTesting.functionTests.util
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.util;
1: 
1: /**
1:  * Utilities for parsing runtimestats
1:  *
1:  * RESOLVE: This class should be internationalized.
1:  */
1: public class StatParser
1: { 
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 	public static String getScanCols(String runTimeStats)
1: 		throws Throwable
1: 	{
1: 		if (runTimeStats == null)
1: 		{
1: 			return "The RunTimeStatistics string passed in is null";
1: 		}
1: 
1: 		int startIndex;
1: 		int endIndex = 0;
1: 		int indexIndex;
1: 
1: 		StringBuffer strbuf = new StringBuffer();
1: 
1: 		/*
1: 		** We need to know if we used an index
1: 		*/
1: 		if ((indexIndex = runTimeStats.indexOf("Index Scan ResultSet")) != -1)
1: 		{
1: 			int textend = runTimeStats.indexOf("\n", indexIndex);
1: 			strbuf.append(runTimeStats.substring(indexIndex, textend+1));
1: 		}
1: 		else
1: 		{
1: 			strbuf.append("TableScan\n");
1: 		}
1: 
1: 		int count = 0;
1: 		while ((startIndex = runTimeStats.indexOf("Bit set of columns fetched", endIndex)) != -1)
1: 		{
1: 			count++;
1: 			endIndex = runTimeStats.indexOf("}", startIndex);
1: 			if (endIndex == -1)
1: 			{
1: 				endIndex = runTimeStats.indexOf("All", startIndex);
1: 				if (endIndex == -1)
1: 				{
1: 					throw new Throwable("couldn't find the closing } on "+
1: 						"columnFetchedBitSet in "+runTimeStats);
1: 				}
1: 				endIndex+=5;
1: 			}
1: 			else
1: 			{
1: 				endIndex++;
1: 			}
1: 			strbuf.append(runTimeStats.substring(startIndex, endIndex));
1: 			strbuf.append("\n");
1: 		}
1: 		if (count == 0)
1: 		{
1: 			throw new Throwable("couldn't find string 'Bit set of columns fetched' in :\n"+
1: 				runTimeStats);
1: 		}
1: 
1: 		return strbuf.toString();
1: 	}
1: }	
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:f68f62f
/////////////////////////////////////////////////////////////////////////
0: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.util.StatParser
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
0:  */
1: 
0: package org.apache.derbyTesting.functionTests.util;
1: 
0: /**
0:  * Utilities for parsing runtimestats
0:  *
0:  * RESOLVE: This class should be internationalized.
0:  */
0: public class StatParser
0: {
0: 	public static String getScanCols(String runTimeStats)
0: 		throws Throwable
0: 	{
0: 		if (runTimeStats == null)
0: 		{
0: 			return "The RunTimeStatistics string passed in is null";
0: 		}
1: 
0: 		int startIndex;
0: 		int endIndex = 0;
0: 		int indexIndex;
1: 
0: 		StringBuffer strbuf = new StringBuffer();
1: 
0: 		/*
0: 		** We need to know if we used an index
0: 		*/
0: 		if ((indexIndex = runTimeStats.indexOf("Index Scan ResultSet")) != -1)
0: 		{
0: 			int textend = runTimeStats.indexOf("\n", indexIndex);
0: 			strbuf.append(runTimeStats.substring(indexIndex, textend+1));
0: 		}
0: 		else
0: 		{
0: 			strbuf.append("TableScan\n");
0: 		}
1: 
0: 		int count = 0;
0: 		while ((startIndex = runTimeStats.indexOf("Bit set of columns fetched", endIndex)) != -1)
0: 		{
0: 			count++;
0: 			endIndex = runTimeStats.indexOf("}", startIndex);
0: 			if (endIndex == -1)
0: 			{
0: 				endIndex = runTimeStats.indexOf("All", startIndex);
0: 				if (endIndex == -1)
0: 				{
0: 					throw new Throwable("couldn't find the closing } on "+
0: 						"columnFetchedBitSet in "+runTimeStats);
0: 				}
0: 				endIndex+=5;
0: 			}
0: 			else
0: 			{
0: 				endIndex++;
0: 			}
0: 			strbuf.append(runTimeStats.substring(startIndex, endIndex));
0: 			strbuf.append("\n");
0: 		}
0: 		if (count == 0)
0: 		{
0: 			throw new Throwable("couldn't find string 'Bit set of columns fetched' in :\n"+
0: 				runTimeStats);
0: 		}
1: 
0: 		return strbuf.toString();
0: 	}
0: }	
commit:c1c71ef
/////////////////////////////////////////////////////////////////////////
0:    Derby - Class org.apache.derbyTesting.functionTests.util.StatParser
0: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
0: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
0: 
0:       http://www.apache.org/licenses/LICENSE-2.0
0: 
0:    Unless required by applicable law or agreed to in writing, software
0:    distributed under the License is distributed on an "AS IS" BASIS,
0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:    See the License for the specific language governing permissions and
0:    limitations under the License.
commit:cb1ca12
/////////////////////////////////////////////////////////////////////////
0: {
============================================================================