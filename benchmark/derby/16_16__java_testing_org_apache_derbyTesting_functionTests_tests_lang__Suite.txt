1:12e892f: /*
1:7c88053: 
1:95011a0:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang._Suite
1:5a27a07: 
1:12e892f:        Licensed to the Apache Software Foundation (ASF) under one
1:12e892f:        or more contributor license agreements.  See the NOTICE file
1:12e892f:        distributed with this work for additional information
1:12e892f:        regarding copyright ownership.  The ASF licenses this file
1:12e892f:        to you under the Apache License, Version 2.0 (the
1:12e892f:        "License"); you may not use this file except in compliance
1:12e892f:        with the License.  You may obtain a copy of the License at
1:855480f: 
1:12e892f:          http://www.apache.org/licenses/LICENSE-2.0
1:963d9f4: 
1:12e892f:        Unless required by applicable law or agreed to in writing,
1:12e892f:        software distributed under the License is distributed on an
1:12e892f:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:12e892f:        KIND, either express or implied.  See the License for the
1:12e892f:        specific language governing permissions and limitations
1:12e892f:        under the License
1:12e892f: */
1:12e892f: package org.apache.derbyTesting.functionTests.tests.lang;
1:de7372b: 
1:1ae02c9: import junit.framework.Test;
1:de7372b: import org.apache.derbyTesting.functionTests.suites.XMLSuite;
1:76432e1: import org.apache.derbyTesting.functionTests.tests.nist.NistScripts;
1:3bd1dd8: import org.apache.derbyTesting.junit.BaseTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:3bd1dd8: import org.apache.derbyTesting.junit.JDBC;
1:dfe413c: 
1:12e892f: /**
1:12e892f:  * Suite to run all JUnit tests in this package:
1:12e892f:  * org.apache.derbyTesting.functionTests.tests.lang
1:5bfe324:  * <P>
1:5bfe324:  * All tests are run "as-is", just as if they were run
1:5bfe324:  * individually. Thus this test is just a collection
1:5bfe324:  * of all the JUNit tests in this package (excluding itself).
1:5bfe324:  * While the old test harness is in use, some use of decorators
1:5bfe324:  * may be required.
1:12e892f:  *
1:12e892f:  */
1:12e892f: public class _Suite extends BaseTestCase  {
1:aa2a5da: 
1:12e892f: 	/**
1:12e892f: 	 * Use suite method instead.
1:12e892f: 	 */
1:12e892f: 	private _Suite(String name) {
1:12e892f: 		super(name);
2:12e892f: 	}
1:a1f09e9: 
1:4a08a15:     public static Test suite() throws Exception {
1:76432e1: 
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("lang");
1:b1397ec:         
1:1069778:         // DERBY-1315 and DERBY-1735 need to be addressed
1:1069778:         // before re-enabling this test as it's memory use is
1:1069778:         // different on different vms leading to failures in
1:1069778:         // the nightly runs.
1:1069778:         // suite.addTest(largeCodeGen.suite());
1:dc56246: 	  
1:f246c9c: 		suite.addTest(org.apache.derbyTesting.functionTests.tests.memory.TriggerTests.suite());
1:dc56246: 	  suite.addTest(CheckConstraintTest.suite());
1:fb3b060:         suite.addTest(AnsiTrimTest.suite());
1:de0d258:         suite.addTest(AlterTableTest.suite());
1:a62e82e:         suite.addTest(CreateTableFromQueryTest.suite());     
1:a62e82e:         suite.addTest(ColumnDefaultsTest.suite());
1:3082e5d:         suite.addTest(CompressTableTest.suite());
1:e1e7492:         suite.addTest(DatabaseClassLoadingTest.suite());
1:8a78aa5:         suite.addTest(DropTableTest.suite());
1:8a78aa5: 	  suite.addTest(DynamicLikeOptimizationTest.suite());
1:9247f31:         suite.addTest(ExistsWithSubqueriesTest.suite());
1:ad0c80a:         suite.addTest(FloatTypesTest.suite());
1:97734e3:         suite.addTest(GrantRevokeTest.suite());
1:568075c:         suite.addTest(GroupByExpressionTest.suite());
1:587fc40:         suite.addTest(InbetweenTest.suite());
1:0b97566:         suite.addTest(InsertTest.suite());
1:2d9b17d:         suite.addTest(JoinTest.suite());
1:946f53d:         suite.addTest(LangProcedureTest.suite());
1:2571c1c:         suite.addTest(LangScripts.suite());
1:1998441:         suite.addTest(LikeTest.suite());
1:1c8ca70:         suite.addTest(LojReorderTest.suite());
1:ce0b604:         suite.addTest(MathTrigFunctionsTest.suite());
1:2571c1c:         suite.addTest(OuterJoinTest.suite());
1:0af1665:         suite.addTest(PredicateTest.suite());
1:aa2a5da:         suite.addTest(PrepareExecuteDDL.suite());
1:9a428e4:         suite.addTest(ReferentialActionsTest.suite());
1:305269a:         suite.addTest(RolesTest.suite());
1:eb38311:         suite.addTest(RolesConferredPrivilegesTest.suite());
1:6950a39:         suite.addTest(SQLSessionContextTest.suite());
1:aa2a5da:         suite.addTest(RoutineSecurityTest.suite());
1:d8a9518:         suite.addTest(RoutineTest.suite());
1:9f60172:         suite.addTest(RoutinesDefinersRightsTest.suite());
1:f05a2f8:         suite.addTest(SQLAuthorizationPropTest.suite());
1:a43ee19:         suite.addTest(StatementPlanCacheTest.suite());
1:6da924f:         suite.addTest(StreamsTest.suite());
1:7e23da1:         suite.addTest(SubqueryFlatteningTest.suite());
1:bb579f8:         suite.addTest(TimeHandlingTest.suite());
1:13e0e08:         suite.addTest(TriggerTest.suite());
1:1725dd1:         suite.addTest(TriggerWhenClauseTest.suite());
1:7775fc7:         suite.addTest(TruncateTableTest.suite());
1:16fdfe0:         suite.addTest(VTITest.suite());
1:b0db140:         suite.addTest(SysDiagVTIMappingTest.suite());
1:73e5558:         suite.addTest(UpdatableResultSetTest.suite());
1:10ded9d:         suite.addTest(CurrentOfTest.suite());
1:32cefc3: 	    suite.addTest(CursorTest.suite());
1:fffce91:         suite.addTest(CastingTest.suite());
1:f19e86d:         suite.addTest(ScrollCursors2Test.suite());
1:aa53134:         suite.addTest(NullIfTest.suite());
1:ab72e35:         suite.addTest(InListMultiProbeTest.suite());
1:2e57170:         suite.addTest(InPredicateTest.suite());
1:40d333e:         suite.addTest(SecurityPolicyReloadingTest.suite());
1:74592e2:         suite.addTest(CurrentOfTest.suite());
1:77de125:         suite.addTest(UnaryArithmeticParameterTest.suite());
1:c96b799:         suite.addTest(HoldCursorTest.suite());
1:b17e04d:         suite.addTest(ShutdownDatabaseTest.suite());
1:7257ae6:         suite.addTest(StalePlansTest.suite());
1:2099e21:         suite.addTest(SystemCatalogTest.suite());
1:81f2fcc:         suite.addTest(ForBitDataTest.suite());
1:0edfef6:         suite.addTest(DistinctTest.suite());
1:0edfef6:         suite.addTest(GroupByTest.suite());
1:61bcf0e:         suite.addTest(UpdateCursorTest.suite());
1:487531a:         suite.addTest(CoalesceTest.suite());
1:e8668b9:         suite.addTest(ProcedureInTriggerTest.suite());
1:8a6cb02:         suite.addTest(ForUpdateTest.suite());
1:32dba1c:         suite.addTest(CollationTest.suite());
1:44aecca:         suite.addTest(CollationTest2.suite());
1:40c2e1d:         suite.addTest(ScrollCursors1Test.suite());
1:7fb2efb:         suite.addTest(SimpleTest.suite());
1:9c9a3ab:         suite.addTest(ReleaseCompileLocksTest.suite());
1:4d8deb6:         suite.addTest(LazyDefaultSchemaCreationTest.suite());
1:32cefc3:         suite.addTest(ErrorCodeTest.suite());
1:6c0fb2b:         suite.addTest(TimestampArithTest.suite());
1:2ee5c41:         suite.addTest(SpillHashTest.suite());
1:a1d6109:         suite.addTest(CaseExpressionTest.suite());
1:7e60c2a:         suite.addTest(CharUTF8Test.suite());
1:003a313:         suite.addTest(AggregateClassLoadingTest.suite());
1:96c1585:         suite.addTest(LockTableTest.suite());
1:4aef9b0:         suite.addTest(TableFunctionTest.suite());
1:f9596d4:         suite.addTest(VarargsTest.suite());
1:ca2807d:         suite.addTest(DeclareGlobalTempTableJavaTest.suite());
1:ca2807d:         suite.addTest(PrimaryKeyTest.suite());
1:9854874:         suite.addTest(RenameTableTest.suite());
1:4fb75d3:         suite.addTest(RenameIndexTest.suite());
1:8a6cb02:         suite.addTest(Bug5052rtsTest.suite());
1:8a6cb02:         suite.addTest(Bug5054Test.suite());
1:8a6cb02:         suite.addTest(Bug4356Test.suite());
1:7d788ea:         suite.addTest(SynonymTest.suite());
1:a4d3e58:         suite.addTest(CommentTest.suite());
1:de51906:         suite.addTest(NestedWhereSubqueryTest.suite());
1:b2d7261:         suite.addTest(ConglomerateSharingTest.suite());
1:28e234d:         suite.addTest(NullableUniqueConstraintTest.suite());
1:a52a206:         suite.addTest(UniqueConstraintSetNullTest.suite());
1:09ea7c0:         suite.addTest(UniqueConstraintMultiThreadedTest.suite());
1:5c13d96:         suite.addTest(ViewsTest.suite());
1:2483560:         suite.addTest(DeadlockDetectionTest.suite());
1:855480f:         suite.addTest(DeadlockModeTest.suite());
1:5c04fbc:         suite.addTest(AnsiSignaturesTest.suite());
1:6bd82a5:         suite.addTest(PredicatePushdownTest.suite());
1:ead590c:         suite.addTest(UngroupedAggregatesNegativeTest.suite());
1:48a9884:         suite.addTest(XplainStatisticsTest.suite());
1:02f8e49:         suite.addTest(SelectivityTest.suite());
1:3235c13:         suite.addTest(Derby6587Test.suite());
1:de7372b:         // Add the XML tests, which exist as a separate suite
1:de7372b:         // so that users can "run all XML tests" easily.
1:de7372b:         suite.addTest(XMLSuite.suite());
1:f05a2f8:          
1:76432e1:         // Add the NIST suite in from the nist package since
1:76432e1:         // it is a SQL language related test.
1:76432e1:         suite.addTest(NistScripts.suite());
1:32cefc3:         
1:dfe413c:         // Add the java tests that run using a master
1:dfe413c:         // file (ie. partially converted).
1:dfe413c:         suite.addTest(LangHarnessJavaTest.suite());
1:de7372b:         		
1:35888a6:         suite.addTest(ResultSetsFromPreparedStatementTest.suite());
1:dc5f56a:         if (!isPhoneME())
1:7869c71:         { // Disable temporarily until CVM/phoneME is fixed.. See DERBY-4290)
1:200a5ea:         suite.addTest(OrderByAndSortAvoidance.suite());
1:7869c71:         }
1:aa2a5da: 
1:2ecd630:         // tests that do not run with JSR169
1:2ecd630:         if (JDBC.vmSupportsJDBC3())  
1:2ecd630:         {
1:2ecd630:             // test uses triggers interwoven with other tasks
1:2ecd630:             // triggers may cause a generated class which calls 
1:2ecd630:             // java.sql.DriverManager, which will fail with JSR169.
1:2ecd630:             // also, test calls procedures which use DriverManager
1:2ecd630:             // to get the default connection.
1:2ecd630:             suite.addTest(GrantRevokeDDLTest.suite());
1:2ecd630: 
1:7c88053:             // test uses regex classes that are not available in Foundation 1.1
1:7c88053:             suite.addTest(ErrorMessageTest.suite());
1:6f255ff:             // Test uses DriverManager to connect to database in jar.
1:6f255ff:             suite.addTest(DBInJarTest.suite());
1:7bd5f71:             suite.addTest(ConnectTest.suite());
1:f10793f:             
1:f10793f:             // test uses PooledConnections and Savepoints
1:f10793f:             suite.addTest(DeclareGlobalTempTableJavaJDBC30Test.suite());
1:c8603c4: 
1:c8603c4:             // requires Java 5 (generics)
1:c8603c4:             suite.addTest(UserDefinedAggregatesTest.suite());
1:f3c6217:             suite.addTest(UDAPermsTest.suite());
1:2ecd630:         }
1:ea335da:          // tests that require Java 6
1:ea335da:         if (JDBC.vmSupportsJDBC4())  
1:ea335da:         {
1:ea335da:             suite.addTest(OptionalToolsTest.suite());
1:ea335da:         }
1:ea335da:        
1:a1f09e9:         suite.addTest(BigDataTest.suite());
1:3459db5:         suite.addTest(MixedCaseExpressionTest.suite());
1:963d9f4:         suite.addTest(UpdateStatisticsTest.suite());
1:292e7b6:         suite.addTest(MiscErrorsTest.suite());
1:87d0d61:         suite.addTest(NullsTest.suite());
1:5a27a07:         suite.addTest(ArithmeticTest.suite());
1:e11756a:         suite.addTest(ConstantExpressionTest.suite());
1:2bfe0a6:         suite.addTest(OptimizerOverridesTest.suite());
1:45ac509:         suite.addTest(PrecedenceTest.suite());
1:9f4b339:         suite.addTest(GeneratedColumnsTest.suite());
1:9a9b932:         suite.addTest(GeneratedColumnsPermsTest.suite());
1:a2d0847:         suite.addTest(RestrictedVTITest.suite());
1:29007f0:         suite.addTest(AwareVTITest.suite());
1:fa292b9:         suite.addTest(UDTTest.suite());
1:98c7520:         suite.addTest(UDTPermsTest.suite());
1:4d79a2f:         suite.addTest(BooleanValuesTest.suite());
1:e432522:         suite.addTest(AlterColumnTest.suite());
1:57d42a5:         suite.addTest(UserLobTest.suite());
1:8e21cdc:         suite.addTest(OffsetFetchNextTest.suite());
1:d36ca18:         suite.addTest(TriggerBeforeTrigTest.suite());
1:8a59583:         suite.addTest(TriggerGeneralTest.suite());
1:80eb35f:         suite.addTest(SequenceTest.suite());
1:a4cbe6f:         suite.addTest(SequencePermsTest.suite());
1:139ca85:         suite.addTest(SequenceGeneratorTest.suite());
1:431cefd:         suite.addTest(DBOAccessTest.suite());
1:7a9ce7e:         suite.addTest(OLAPTest.suite());
1:108305b:         suite.addTest(OrderByAndOffsetFetchInSubqueries.suite());
1:74d0488:         suite.addTest(Derby5005Test.suite());
1:3d7c3d5:         suite.addTest(AutoIncrementTest.suite());
1:5b35651:         suite.addTest(HalfCreatedDatabaseTest.suite());
1:5107349:         suite.addTest(NativeAuthenticationServiceTest.suite());
1:213d360:         suite.addTest(Derby5652.suite());
1:898c8da:         suite.addTest(TruncateTableAndOnlineBackupTest.suite()); 
1:af2d9d2:         suite.addTest(QueryPlanTest.suite());
1:86db097:         suite.addTest(JoinDeadlockTest.suite());
1:232f5ef:         suite.addTest(Derby6131.suite());
1:53521cc:         suite.addTest(AggBuiltinTest.suite());
1:a56ecfa:         suite.addTest(NewOptimizerOverridesTest.suite());
1:661c2e6:         suite.addTest(MergeStatementTest.suite());
1:7fd0c6e:         suite.addTest(IdentitySequenceTest.suite());
1:748a5b6:         suite.addTest(NestedCommitTest.suite());
1:efb65fe:         suite.addTest(ForeignKeysNonSpsTest.suite());
1:562dccb:         suite.addTest(LOBDB2compatibilityTest.suite());
1:358b3c8:         suite.addTest(CurrentSchemaTest.suite());
1:02fcca3:         suite.addTest(Test_6496.suite());
1:09bee7d:         suite.addTest(ConstraintCharacteristicsTest.suite());
1:4cc0287:         suite.addTest(ForeignKeysDeferrableTest.suite());
1:ae2d0e5:         suite.addTest(DB2IsolationLevelsTest.suite());
1:d847ced:         suite.addTest(LuceneSuite.suite());
1:2c38f3c:         suite.addTest(JsonSuite.suite());
1:43ec835:         suite.addTest(ConsistencyCheckerTest.suite());
1:28c4dc4:         suite.addTest(RawDBReaderTest.suite());
1:6bd3847:         suite.addTest(Derby5866TriggerOrderTest.suite());
1:a0dbbd7:         suite.addTest(NoDBInternalsPermissionTest.suite());
1:edcd511:         suite.addTest(ClassLoadingTest.suite());
1:2ecd630:         return suite;
1:12e892f: 	}
1:12e892f: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:28c4dc4
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RawDBReaderTest.suite());
commit:2c38f3c
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(JsonSuite.suite());
commit:edcd511
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ClassLoadingTest.suite());
commit:a0dbbd7
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NoDBInternalsPermissionTest.suite());
commit:7fd0c6e
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(IdentitySequenceTest.suite());
commit:d847ced
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LuceneSuite.suite());
commit:02fcca3
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Test_6496.suite());
commit:29007f0
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AwareVTITest.suite());
commit:661c2e6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(MergeStatementTest.suite());
commit:23e89eb
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(XMLOptimizerTraceTest.suite());
commit:a56ecfa
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NewOptimizerOverridesTest.suite());
commit:ea335da
/////////////////////////////////////////////////////////////////////////
1:          // tests that require Java 6
1:         if (JDBC.vmSupportsJDBC4())  
1:         {
1:             suite.addTest(OptionalToolsTest.suite());
1:         }
1:        
commit:f9596d4
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(VarargsTest.suite());
commit:f3c6217
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(UDAPermsTest.suite());
commit:c8603c4
/////////////////////////////////////////////////////////////////////////
1: 
1:             // requires Java 5 (generics)
1:             suite.addTest(UserDefinedAggregatesTest.suite());
/////////////////////////////////////////////////////////////////////////
commit:22d64f5
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(UserDefinedAggregatesTest.suite());
commit:213d360
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5652.suite());
commit:c5b9acb
/////////////////////////////////////////////////////////////////////////
commit:a3d7a74
/////////////////////////////////////////////////////////////////////////
0:         //DERBY-5601 Hang in NativeAuthenticationServiceTest on Windows.
0:         // Disable there for the moment.
0:         if ( !getSystemProperty("os.name").startsWith("Windows") ) { suite.addTest(NativeAuthenticationServiceTest.suite()); }
commit:5107349
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NativeAuthenticationServiceTest.suite());
commit:92268ac
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(NativeAuthProcs.suite());
commit:431cefd
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DBOAccessTest.suite());
commit:5b35651
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(HalfCreatedDatabaseTest.suite());
commit:4d79a2f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(BooleanValuesTest.suite());
commit:139ca85
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SequenceGeneratorTest.suite());
commit:a4cbe6f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SequencePermsTest.suite());
commit:98c7520
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UDTPermsTest.suite());
commit:fa292b9
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UDTTest.suite());
commit:a2d0847
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RestrictedVTITest.suite());
commit:80eb35f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SequenceTest.suite());
commit:57d42a5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UserLobTest.suite());
commit:9a9b932
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(GeneratedColumnsPermsTest.suite());
commit:9f4b339
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(GeneratedColumnsTest.suite());
commit:5c04fbc
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AnsiSignaturesTest.suite());
commit:4aef9b0
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TableFunctionTest.suite());
commit:40d333e
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SecurityPolicyReloadingTest.suite());
commit:483783f
/////////////////////////////////////////////////////////////////////////
0:         //suite.addTest(SecurityPolicyReloadingTest.suite());
commit:59a5a70
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(SecurityPolicyReloadingTest.suite());
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:06340a7
/////////////////////////////////////////////////////////////////////////
commit:2571c1c
/////////////////////////////////////////////////////////////////////////
1: 	  suite.addTest(LangScripts.suite());
1: 	  suite.addTest(OuterJoinTest.suite());
commit:8a78aa5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DropTableTest.suite());
1: 	  suite.addTest(DynamicLikeOptimizationTest.suite());
commit:587fc40
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(InbetweenTest.suite());
commit:a62e82e
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CreateTableFromQueryTest.suite());     
1:         suite.addTest(ColumnDefaultsTest.suite());
commit:dc56246
/////////////////////////////////////////////////////////////////////////
1: 	  
1: 	  suite.addTest(CheckConstraintTest.suite());
commit:de0d258
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AlterTableTest.suite());
commit:48a9884
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(XplainStatisticsTest.suite());
commit:9247f31
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ExistsWithSubqueriesTest.suite());
commit:3098ab0
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(XMLTypeAndOpsTest.suite());
0:         suite.addTest(XMLMissingClassesTest.suite());
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("lang");
commit:4cc0287
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ForeignKeysDeferrableTest.suite());
commit:8a59583
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TriggerGeneralTest.suite());
commit:d36ca18
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TriggerBeforeTrigTest.suite());
commit:86db097
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(JoinDeadlockTest.suite());
commit:43ec835
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ConsistencyCheckerTest.suite());
commit:748a5b6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NestedCommitTest.suite());
commit:53521cc
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AggBuiltinTest.suite());
commit:358b3c8
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CurrentSchemaTest.suite());
commit:562dccb
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LOBDB2compatibilityTest.suite());
commit:efb65fe
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ForeignKeysNonSpsTest.suite());
commit:ae2d0e5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DB2IsolationLevelsTest.suite());
commit:09bee7d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ConstraintCharacteristicsTest.suite());
commit:946f53d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LangProcedureTest.suite());
0:         suite.addTest(LangScripts.suite());
0:         suite.addTest(OuterJoinTest.suite());
commit:74d0488
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5005Test.suite());
commit:1c8ca70
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LojReorderTest.suite());
commit:9f60172
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RoutinesDefinersRightsTest.suite());
commit:108305b
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OrderByAndOffsetFetchInSubqueries.suite());
commit:685cec9
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(OrderByInSubqueries.suite());
commit:7a9ce7e
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OLAPTest.suite());
commit:3527fd5
/////////////////////////////////////////////////////////////////////////
commit:8e21cdc
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OffsetFetchNextTest.suite());
commit:e432522
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AlterColumnTest.suite());
commit:eb38311
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RolesConferredPrivilegesTest.suite());
commit:4d8deb6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LazyDefaultSchemaCreationTest.suite());
commit:6950a39
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SQLSessionContextTest.suite());
commit:a4d3e58
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CommentTest.suite());
commit:305269a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RolesTest.suite());
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:3235c13
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby6587Test.suite());
commit:96c1585
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LockTableTest.suite());
commit:898c8da
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TruncateTableAndOnlineBackupTest.suite()); 
commit:3ec6a93
/////////////////////////////////////////////////////////////////////////
0:         //suite.addTest(TruncateTableAndOnlineBackupTest.suite()); 
commit:521b4d2
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(TruncateTableAndOnlineBackupTest.suite()); 
commit:e15789d
/////////////////////////////////////////////////////////////////////////
commit:d5492b9
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(NativeAuthenticationServiceTest.suite());
commit:3d7c3d5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AutoIncrementTest.suite());
commit:09ea7c0
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UniqueConstraintMultiThreadedTest.suite());
commit:f10793f
/////////////////////////////////////////////////////////////////////////
1:             
1:             // test uses PooledConnections and Savepoints
1:             suite.addTest(DeclareGlobalTempTableJavaJDBC30Test.suite());
commit:45ac509
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(PrecedenceTest.suite());
commit:2bfe0a6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OptimizerOverridesTest.suite());
commit:2ecd630
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         // tests that do not run with JSR169
1:         if (JDBC.vmSupportsJDBC3())  
1:         {
1:             // test uses triggers interwoven with other tasks
1:             // triggers may cause a generated class which calls 
1:             // java.sql.DriverManager, which will fail with JSR169.
1:             // also, test calls procedures which use DriverManager
1:             // to get the default connection.
1:             suite.addTest(GrantRevokeDDLTest.suite());
1:         }
1: 
1:         return suite;
commit:487531a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CoalesceTest.suite());
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:4a08a15
/////////////////////////////////////////////////////////////////////////
1:     public static Test suite() throws Exception {
commit:6bd3847
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5866TriggerOrderTest.suite());
commit:1725dd1
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TriggerWhenClauseTest.suite());
commit:af2d9d2
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(QueryPlanTest.suite());
commit:2e57170
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(InPredicateTest.suite());
commit:dc5f56a
/////////////////////////////////////////////////////////////////////////
1:         if (!isPhoneME())
commit:2483560
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DeadlockDetectionTest.suite());
commit:1998441
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LikeTest.suite());
commit:0af1665
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(PredicateTest.suite());
commit:2d9b17d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(JoinTest.suite());
commit:0b97566
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(InsertTest.suite());
commit:ad0c80a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(FloatTypesTest.suite());
commit:7e23da1
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SubqueryFlatteningTest.suite());
commit:9a428e4
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ReferentialActionsTest.suite());
commit:3082e5d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CompressTableTest.suite());
commit:628fa8c
/////////////////////////////////////////////////////////////////////////
commit:7c88053
/////////////////////////////////////////////////////////////////////////
1: 
1:             // test uses regex classes that are not available in Foundation 1.1
1:             suite.addTest(ErrorMessageTest.suite());
commit:74d40b2
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(DynamicLikeOptimizationTest.suite());
commit:7257ae6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(StalePlansTest.suite());
commit:35888a6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ResultSetsFromPreparedStatementTest.suite());
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:232f5ef
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby6131.suite());
commit:a52a206
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UniqueConstraintSetNullTest.suite());
commit:28e234d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NullableUniqueConstraintTest.suite());
commit:44aecca
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CollationTest2.suite());
commit:16fdfe0
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(VTITest.suite());        
commit:f05a2f8
/////////////////////////////////////////////////////////////////////////
1:         
0:         // This test internally sets derby.database.sqlAuthorization to true
0:         // This property is not resettable and hence may affect other tests 
0:         // using it and sharing the same database.
1:         suite.addTest(SQLAuthorizationPropTest.suite());
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:0b402b7
/////////////////////////////////////////////////////////////////////////
0:         //DERBY-5601 Hang in NativeAuthenticationServiceTest
0:         // Temporarily disable
0:         //suite.addTest(NativeAuthenticationServiceTest.suite());
commit:02f8e49
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SelectivityTest.suite());
commit:87d0d61
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NullsTest.suite());
commit:e11756a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ConstantExpressionTest.suite());
commit:5a27a07
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ArithmeticTest.suite());
1:         
commit:7bd5f71
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(ConnectTest.suite());
commit:ead590c
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UngroupedAggregatesNegativeTest.suite());
commit:a1f09e9
/////////////////////////////////////////////////////////////////////////
1:         
1:         suite.addTest(BigDataTest.suite());
commit:6bd82a5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(PredicatePushdownTest.suite());
commit:6f255ff
/////////////////////////////////////////////////////////////////////////
1:             // Test uses DriverManager to connect to database in jar.
1:             suite.addTest(DBInJarTest.suite());
commit:855480f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DeadlockModeTest.suite());
1:         
commit:5c13d96
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ViewsTest.suite());
commit:8a6cb02
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ForUpdateTest.suite());
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Bug5052rtsTest.suite());
1:         suite.addTest(Bug5054Test.suite());
1:         suite.addTest(Bug4356Test.suite());
commit:4fb75d3
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RenameIndexTest.suite());
commit:9854874
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RenameTableTest.suite());
commit:ca2807d
/////////////////////////////////////////////////////////////////////////
0: 	suite.addTest(ForUpdateTest.suite());
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DeclareGlobalTempTableJavaTest.suite());
1:         suite.addTest(PrimaryKeyTest.suite());
commit:6c9ce64
/////////////////////////////////////////////////////////////////////////
commit:7e60c2a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CharUTF8Test.suite());
commit:003a313
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AggregateClassLoadingTest.suite());
commit:2ee5c41
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SpillHashTest.suite());
commit:6c0fb2b
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TimestampArithTest.suite());
commit:9c9a3ab
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ReleaseCompileLocksTest.suite());
commit:32cefc3
/////////////////////////////////////////////////////////////////////////
1: 	suite.addTest(CursorTest.suite());
/////////////////////////////////////////////////////////////////////////
0: 	suite.addTest(ForUpdateTest.suite());
1: 
1:         suite.addTest(ErrorCodeTest.suite());
commit:48154b2
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(ErrorCodeTest.suite());
commit:40c2e1d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ScrollCursors1Test.suite());
commit:7fb2efb
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SimpleTest.suite());
commit:1d94b69
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(ScrollCursors1.suite());
commit:32dba1c
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CollationTest.suite());
commit:e8668b9
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ProcedureInTriggerTest.suite());
commit:c96b799
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(HoldCursorTest.suite());
commit:74592e2
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CurrentOfTest.suite());
commit:aa53134
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NullIfTest.suite());
commit:f19e86d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ScrollCursors2Test.suite());
commit:fffce91
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CastingTest.suite());
commit:c872753
/////////////////////////////////////////////////////////////////////////
0: 	suite.addTest(CursorTest.suite());
author:Mamta Satoor
-------------------------------------------------------------------------------
commit:f246c9c
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(org.apache.derbyTesting.functionTests.tests.memory.TriggerTests.suite());
commit:200a5ea
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OrderByAndSortAvoidance.suite());
commit:963d9f4
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UpdateStatisticsTest.suite());
1: 
commit:7d788ea
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SynonymTest.suite());
author:Ole Solberg
-------------------------------------------------------------------------------
commit:7869c71
/////////////////////////////////////////////////////////////////////////
0:         if (!( System.getProperty("java.vm.name").equals("CVM")
0:             && System.getProperty("java.vm.version").startsWith("phoneme") ) )
1:         { // Disable temporarily until CVM/phoneME is fixed.. See DERBY-4290)
1:         }
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:292e7b6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(MiscErrorsTest.suite());
commit:3459db5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(MixedCaseExpressionTest.suite());
commit:b01b9ac
/////////////////////////////////////////////////////////////////////////
0:         // [TEMPORARY] Commented out because the test class is missing.
0:         //suite.addTest(ErrorCodeTest.suite());
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:7775fc7
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TruncateTableTest.suite());
commit:08feb26
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(OLAPTest.suite());
commit:de51906
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(NestedWhereSubqueryTest.suite());
author:Army
-------------------------------------------------------------------------------
commit:b2d7261
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ConglomerateSharingTest.suite());
commit:fb3b060
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AnsiTrimTest.suite());
commit:a1d6109
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CaseExpressionTest.suite());
commit:0787955
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(ExistsWithSetOpsTest.suite());
commit:ab72e35
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(InListMultiProbeTest.suite());
commit:1453acc
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(CreateTableFromQueryTest.suite());
commit:b0db140
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SysDiagVTIMappingTest.suite());
commit:de7372b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.functionTests.suites.XMLSuite;
/////////////////////////////////////////////////////////////////////////
1: 
1:         // Add the XML tests, which exist as a separate suite
1:         // so that users can "run all XML tests" easily.
1:         suite.addTest(XMLSuite.suite());
1:          
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7e0823d
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(AggregateClassLoadingTest.suite());
commit:b17e04d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ShutdownDatabaseTest.suite());
commit:13e0e08
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TriggerTest.suite());
commit:a43ee19
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(StatementPlanCacheTest.suite());
commit:dfe413c
/////////////////////////////////////////////////////////////////////////
1:         
1:         // Add the java tests that run using a master
1:         // file (ie. partially converted).
1:         suite.addTest(LangHarnessJavaTest.suite());
commit:6da924f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(StreamsTest.suite());
commit:10ded9d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(CurrentOfTest.suite());
commit:d8a9518
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RoutineTest.suite());
commit:e1e7492
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DatabaseClassLoadingTest.suite());
commit:cef7d1e
/////////////////////////////////////////////////////////////////////////
0:         //suite.addTest(DatabaseClassLoadingTest.suite());
commit:aa2a5da
/////////////////////////////////////////////////////////////////////////
1: 
0: 		suite.addTest(LangScripts.suite());
1:         suite.addTest(PrepareExecuteDDL.suite());
1:         suite.addTest(RoutineSecurityTest.suite());
0:         suite.addTest(SQLAuthorizationPropTest.suite());
/////////////////////////////////////////////////////////////////////////
1:         		
commit:c61536a
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(PrepareExecuteDDL.suite());
commit:76432e1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.functionTests.tests.nist.NistScripts;
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(VTITest.suite());
1:         // Add the NIST suite in from the nist package since
1:         // it is a SQL language related test.
1:         suite.addTest(NistScripts.suite());
1:         
commit:bb579f8
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TimeHandlingTest.suite());
commit:ce0b604
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(MathTrigFunctionsTest.suite());
commit:7a2df4c
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(suite.addTest(MathTrigFunctionsTest.suite());
commit:568075c
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(GroupByExpressionTest.suite());
commit:5bfe324
/////////////////////////////////////////////////////////////////////////
1:  * <P>
1:  * All tests are run "as-is", just as if they were run
1:  * individually. Thus this test is just a collection
1:  * of all the JUNit tests in this package (excluding itself).
1:  * While the old test harness is in use, some use of decorators
1:  * may be required.
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(LangScripts.suite());
commit:95011a0
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang._Suite
commit:1069778
/////////////////////////////////////////////////////////////////////////
1:         // DERBY-1315 and DERBY-1735 need to be addressed
1:         // before re-enabling this test as it's memory use is
1:         // different on different vms leading to failures in
1:         // the nightly runs.
1:         // suite.addTest(largeCodeGen.suite());
commit:b1397ec
/////////////////////////////////////////////////////////////////////////
1:         
0:         suite.addTest(largeCodeGen.suite());
commit:3bd1dd8
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: import org.apache.derbyTesting.junit.JDBC;
commit:12e892f
/////////////////////////////////////////////////////////////////////////
1: /*
0: 
0:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi._Suite
0: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
0: 
1:          http://www.apache.org/licenses/LICENSE-2.0
0: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
1: package org.apache.derbyTesting.functionTests.tests.lang;
0: 
0: import org.apache.derbyTesting.functionTests.util.BaseTestCase;
0: import org.apache.derbyTesting.functionTests.util.JDBC;
0: 
0: import junit.framework.Test; 
0: import junit.framework.TestSuite;
0: 
1: /**
1:  * Suite to run all JUnit tests in this package:
1:  * org.apache.derbyTesting.functionTests.tests.lang
1:  *
1:  */
1: public class _Suite extends BaseTestCase  {
0: 
1: 	/**
1: 	 * Use suite method instead.
1: 	 */
1: 	private _Suite(String name) {
1: 		super(name);
1: 	}
0: 
0: 	public static Test suite() {
0: 
0: 		TestSuite suite = new TestSuite("lang");
0: 
0: 		// suite.addTest(PrepareExecuteDDL.suite());
0: 		// suite.addTest(LangScripts.suite());
0: 		
0: 		// Tests that are compiled using 1.4 target need to
0: 		// be added this way, otherwise creating the suite
0: 		// will throw an invalid class version error
0: 		if (JDBC.vmSupportsJDBC3() || JDBC.vmSupportsJSR169())
0: 		{
1: 		}
0: 
0: 		return suite;
1: 	}
1: }
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:3af7c7b
/////////////////////////////////////////////////////////////////////////
0: 	    suite.addTest(CursorTest.suite());
/////////////////////////////////////////////////////////////////////////
0: 	    suite.addTest(ForUpdateTest.suite());
0:         suite.addTest(GrantRevokeDDLTest.suite());
0:         suite.addTest(GrantRevokeDDLTest.suite());
0: 
commit:61bcf0e
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UpdateCursorTest.suite());
commit:81f2fcc
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ForBitDataTest.suite());
commit:0edfef6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DistinctTest.suite());
1:         suite.addTest(GroupByTest.suite());
commit:2099e21
/////////////////////////////////////////////////////////////////////////
0: 	    suite.addTest(CursorTest.suite());
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SystemCatalogTest.suite());
commit:97734e3
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(GrantRevokeTest.suite());
author:Jean T. Anderson
-------------------------------------------------------------------------------
commit:77de125
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UnaryArithmeticParameterTest.suite());
author:Fernanda Torres Pizzorno
-------------------------------------------------------------------------------
commit:73e5558
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UpdatableResultSetTest.suite());
============================================================================