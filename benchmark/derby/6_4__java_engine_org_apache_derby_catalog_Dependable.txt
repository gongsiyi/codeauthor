1:eac0369: /*
1:345de35: 
1:345de35:    Derby - Class org.apache.derby.catalog.Dependable
1:345de35: 
1:2f36947:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2f36947:    contributor license agreements.  See the NOTICE file distributed with
1:2f36947:    this work for additional information regarding copyright ownership.
1:2f36947:    The ASF licenses this file to You under the Apache License, Version 2.0
1:2f36947:    (the "License"); you may not use this file except in compliance with
1:2f36947:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.catalog;
1:eac0369: 
3:eac0369: /**
1:eac0369: 	
1:eac0369:   * A Dependable is an in-memory representation of an object managed
1:eac0369:   *	by the Dependency System.
1:eac0369:   * 
1:eac0369:   * There are two kinds of Dependables:
1:eac0369:   * Providers and Dependents. Dependents depend on Providers and
1:eac0369:   *	are responsible for executing compensating logic when their
1:eac0369:   *	Providers change.
1:eac0369:   * <P>
1:eac0369:   * The fields represent the known Dependables.
1:eac0369:   * <P>
1:eac0369:   * Persistent dependencies (those between database objects) are
1:eac0369:   * stored in SYS.SYSDEPENDS.
1:eac0369:   *
1:eac0369:   * @see org.apache.derby.catalog.DependableFinder
1:eac0369:   */
1:eac0369: public interface Dependable
1:eac0369: {
1:eac0369: 	/*
1:eac0369: 	  *	Universe of known Dependables. 
1:eac0369: 	  */
1:eac0369: 
1:eac0369: 	public static final String ALIAS						= "Alias";
1:eac0369: 	public static final String CONGLOMERATE					= "Conglomerate";
1:eac0369: 	public static final String CONSTRAINT					= "Constraint";
1:eac0369: 	public static final String DEFAULT						= "Default";
1:eac0369: 	public static final String HEAP							= "Heap";
1:eac0369: 	public static final String INDEX						= "Index";
1:eac0369: 	public static final String PREPARED_STATEMENT 			= "PreparedStatement";
1:e4caed2: 	public static final String ACTIVATION                   = "Activation";
1:eac0369: 	public static final String FILE                         = "File";
1:eac0369: 	public static final String STORED_PREPARED_STATEMENT	= "StoredPreparedStatement";
1:eac0369: 	public static final String TABLE						= "Table";
1:eac0369: 	public static final String COLUMNS_IN_TABLE				= "ColumnsInTable";
1:eac0369: 	public static final String TRIGGER						= "Trigger";
1:eac0369: 	public static final String VIEW							= "View";
1:eac0369: 	public static final String SCHEMA						= "Schema";
1:2d2e717: 	public static final String TABLE_PERMISSION             = "TablePrivilege";
1:2d2e717: 	public static final String COLUMNS_PERMISSION           = "ColumnsPrivilege";
1:2d2e717: 	public static final String ROUTINE_PERMISSION           = "RoutinePrivilege";
1:7e729b6: 	public static final String ROLE_GRANT                   = "RoleGrant";
1:bb40bcb:     public static final String SEQUENCE                     = "Sequence";
1:bb40bcb:     public static final String PERM                         = "Perm";
1:eac0369: 
1:eac0369: 
1:bb40bcb:     /**
1:eac0369: 	  *	Get an object which can be written to disk and which,
1:eac0369: 	  *	when read from disk, will find or reconstruct this in-memory
1:eac0369: 	  * Dependable.
1:eac0369: 	  *
1:eac0369: 	  *	@return		A Finder object that can be written to disk if this is a
1:eac0369: 	  *					Persistent Dependable.
1:eac0369: 	  *				Null if this is not a persistent dependable.
1:eac0369: 	  */
1:eac0369: 	public	DependableFinder	getDependableFinder();
1:eac0369: 
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	Get the name of this Dependable OBJECT. This is useful
1:eac0369: 	  *	for diagnostic messages.
1:eac0369: 	  *
1:eac0369: 	  *	@return	Name of Dependable OBJECT.
1:eac0369: 	  */
1:eac0369: 	public	String	getObjectName();
1:eac0369: 
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	Get the UUID of this Dependable OBJECT.
1:eac0369: 	  *
1:eac0369: 	  *	@return	UUID of this OBJECT.
1:eac0369: 	  */
1:eac0369: 	public	UUID	getObjectID();
1:eac0369: 
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  *	Return whether or not this Dependable is persistent. Persistent
1:eac0369: 	  *	dependencies are stored in SYS.SYSDEPENDS.
1:eac0369: 	  *
1:eac0369: 	  *	@return	true if this Dependable is persistent.
1:eac0369: 	  */
1:eac0369: 	public	boolean	isPersistent();
1:eac0369: 
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  * Get the unique class id for the Dependable.
1:eac0369: 	  *	Every Dependable belongs to a class of Dependables. 
1:eac0369: 	  *
1:eac0369: 	  *	@return	type of this Dependable.
1:eac0369: 	  */
1:eac0369: 	public	String	getClassType();
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:bb40bcb
/////////////////////////////////////////////////////////////////////////
1:     public static final String SEQUENCE                     = "Sequence";
1:     public static final String PERM                         = "Perm";
1:     /**
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:e4caed2
/////////////////////////////////////////////////////////////////////////
1: 	public static final String ACTIVATION                   = "Activation";
commit:7e729b6
/////////////////////////////////////////////////////////////////////////
1: 	public static final String ROLE_GRANT                   = "RoleGrant";
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:2f36947
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:2d2e717
/////////////////////////////////////////////////////////////////////////
1: 	public static final String TABLE_PERMISSION             = "TablePrivilege";
1: 	public static final String COLUMNS_PERMISSION           = "ColumnsPrivilege";
1: 	public static final String ROUTINE_PERMISSION           = "RoutinePrivilege";
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.catalog.Dependable
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:4dede3b
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.catalog
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.catalog;
1: 
1: /**
1: 	
1:   * A Dependable is an in-memory representation of an object managed
1:   *	by the Dependency System.
1:   * 
1:   * There are two kinds of Dependables:
1:   * Providers and Dependents. Dependents depend on Providers and
1:   *	are responsible for executing compensating logic when their
1:   *	Providers change.
1:   * <P>
1:   * The fields represent the known Dependables.
1:   * <P>
1:   * Persistent dependencies (those between database objects) are
1:   * stored in SYS.SYSDEPENDS.
1:   *
1:   * @see org.apache.derby.catalog.DependableFinder
1:   */
1: public interface Dependable
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/*
1: 	  *	Universe of known Dependables. 
1: 	  */
1: 
1: 	public static final String ALIAS						= "Alias";
1: 	public static final String CONGLOMERATE					= "Conglomerate";
1: 	public static final String CONSTRAINT					= "Constraint";
1: 	public static final String DEFAULT						= "Default";
1: 	public static final String HEAP							= "Heap";
1: 	public static final String INDEX						= "Index";
1: 	public static final String PREPARED_STATEMENT 			= "PreparedStatement";
1: 	public static final String FILE                         = "File";
1: 	public static final String STORED_PREPARED_STATEMENT	= "StoredPreparedStatement";
1: 	public static final String TABLE						= "Table";
1: 	public static final String COLUMNS_IN_TABLE				= "ColumnsInTable";
1: 	public static final String TRIGGER						= "Trigger";
1: 	public static final String VIEW							= "View";
1: 	public static final String SCHEMA						= "Schema";
1: 
1: 
1: 	/**
1: 	  *	Get an object which can be written to disk and which,
1: 	  *	when read from disk, will find or reconstruct this in-memory
1: 	  * Dependable.
1: 	  *
1: 	  *	@return		A Finder object that can be written to disk if this is a
1: 	  *					Persistent Dependable.
1: 	  *				Null if this is not a persistent dependable.
1: 	  */
1: 	public	DependableFinder	getDependableFinder();
1: 
1: 
1: 	/**
1: 	  *	Get the name of this Dependable OBJECT. This is useful
1: 	  *	for diagnostic messages.
1: 	  *
1: 	  *	@return	Name of Dependable OBJECT.
1: 	  */
1: 	public	String	getObjectName();
1: 
1: 
1: 	/**
1: 	  *	Get the UUID of this Dependable OBJECT.
1: 	  *
1: 	  *	@return	UUID of this OBJECT.
1: 	  */
1: 	public	UUID	getObjectID();
1: 
1: 
1: 	/**
1: 	  *	Return whether or not this Dependable is persistent. Persistent
1: 	  *	dependencies are stored in SYS.SYSDEPENDS.
1: 	  *
1: 	  *	@return	true if this Dependable is persistent.
1: 	  */
1: 	public	boolean	isPersistent();
1: 
1: 
1: 	/**
1: 	  * Get the unique class id for the Dependable.
1: 	  *	Every Dependable belongs to a class of Dependables. 
1: 	  *
1: 	  *	@return	type of this Dependable.
1: 	  */
1: 	public	String	getClassType();
1: }
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.catalog
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.catalog;
0: 
0: /**
0: 	
0:   * A Dependable is an in-memory representation of an object managed
0:   *	by the Dependency System.
0:   * 
0:   * There are two kinds of Dependables:
0:   * Providers and Dependents. Dependents depend on Providers and
0:   *	are responsible for executing compensating logic when their
0:   *	Providers change.
0:   * <P>
0:   * The fields represent the known Dependables.
0:   * <P>
0:   * Persistent dependencies (those between database objects) are
0:   * stored in SYS.SYSDEPENDS.
0:   *
0:   * @see org.apache.derby.catalog.DependableFinder
0:   */
0: public interface Dependable
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/*
0: 	  *	Universe of known Dependables. 
0: 	  */
0: 
0: 	public static final String ALIAS						= "Alias";
0: 	public static final String CONGLOMERATE					= "Conglomerate";
0: 	public static final String CONSTRAINT					= "Constraint";
0: 	public static final String DEFAULT						= "Default";
0: 	public static final String HEAP							= "Heap";
0: 	public static final String INDEX						= "Index";
0: 	public static final String PREPARED_STATEMENT 			= "PreparedStatement";
0: 	public static final String FILE                         = "File";
0: 	public static final String STORED_PREPARED_STATEMENT	= "StoredPreparedStatement";
0: 	public static final String TABLE						= "Table";
0: 	public static final String COLUMNS_IN_TABLE				= "ColumnsInTable";
0: 	public static final String TRIGGER						= "Trigger";
0: 	public static final String VIEW							= "View";
0: 	public static final String SCHEMA						= "Schema";
0: 
0: 
0: 	/**
0: 	  *	Get an object which can be written to disk and which,
0: 	  *	when read from disk, will find or reconstruct this in-memory
0: 	  * Dependable.
0: 	  *
0: 	  *	@return		A Finder object that can be written to disk if this is a
0: 	  *					Persistent Dependable.
0: 	  *				Null if this is not a persistent dependable.
0: 	  */
0: 	public	DependableFinder	getDependableFinder();
0: 
0: 
0: 	/**
0: 	  *	Get the name of this Dependable OBJECT. This is useful
0: 	  *	for diagnostic messages.
0: 	  *
0: 	  *	@return	Name of Dependable OBJECT.
0: 	  */
0: 	public	String	getObjectName();
0: 
0: 
0: 	/**
0: 	  *	Get the UUID of this Dependable OBJECT.
0: 	  *
0: 	  *	@return	UUID of this OBJECT.
0: 	  */
0: 	public	UUID	getObjectID();
0: 
0: 
0: 	/**
0: 	  *	Return whether or not this Dependable is persistent. Persistent
0: 	  *	dependencies are stored in SYS.SYSDEPENDS.
0: 	  *
0: 	  *	@return	true if this Dependable is persistent.
0: 	  */
0: 	public	boolean	isPersistent();
0: 
0: 
0: 	/**
0: 	  * Get the unique class id for the Dependable.
0: 	  *	Every Dependable belongs to a class of Dependables. 
0: 	  *
0: 	  *	@return	type of this Dependable.
0: 	  */
0: 	public	String	getClassType();
0: }
============================================================================