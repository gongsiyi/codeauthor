1:0be2189: /*
1:0be2189:  
1:0be2189:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.Wrapper42DBMD
1:0be2189:  
1:0be2189:    Licensed to the Apache Software Foundation (ASF) under one or more
1:0be2189:    contributor license agreements.  See the NOTICE file distributed with
1:0be2189:    this work for additional information regarding copyright ownership.
1:0be2189:    The ASF licenses this file to you under the Apache License, Version 2.0
1:0be2189:    (the "License"); you may not use this file except in compliance with
1:0be2189:    the License.  You may obtain a copy of the License at
1:0be2189:  
1:0be2189:       http://www.apache.org/licenses/LICENSE-2.0
1:0be2189:  
1:0be2189:    Unless required by applicable law or agreed to in writing, software
1:0be2189:    distributed under the License is distributed on an "AS IS" BASIS,
1:0be2189:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0be2189:    See the License for the specific language governing permissions and
1:0be2189:    limitations under the License.
1:0be2189:  
1:0be2189:  */
1:0be2189: 
1:0be2189: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1:0be2189: 
1:0be2189: import java.sql.SQLException;
1:0be2189: 
1:0be2189: import org.apache.derby.impl.jdbc.EmbedDatabaseMetaData;
1:69e3d06: import org.apache.derby.client.am.ClientDatabaseMetaData;
1:0be2189: 
1:0be2189: /**
1:0be2189:  * A wrapper around the new DatabaseMetaData methods added by JDBC 4.2.
1:0be2189:  */
1:0be2189: public  class   Wrapper42DBMD   extends Wrapper41DBMD
1:0be2189: {
1:0be2189:     ///////////////////////////////////////////////////////////////////////
1:0be2189:     //
1:0be2189:     // STATE
1:0be2189:     //
1:0be2189:     ///////////////////////////////////////////////////////////////////////
1:0be2189: 
1:0be2189:     ///////////////////////////////////////////////////////////////////////
1:0be2189:     //
1:0be2189:     // CONSTRUCTORS
1:0be2189:     //
1:0be2189:     ///////////////////////////////////////////////////////////////////////
1:0be2189: 
1:0be2189:     public Wrapper42DBMD( Object wrapped ) throws Exception { super( wrapped ); }
1:0be2189:     
1:0be2189:     ///////////////////////////////////////////////////////////////////////
1:0be2189:     //
1:0be2189:     // JDBC 4.2 BEHAVIOR
1:0be2189:     //
1:0be2189:     ///////////////////////////////////////////////////////////////////////
1:0be2189: 
1:40b723c:     public  long getMaxLogicalLobSize() throws SQLException
1:0be2189:     {
1:40b723c:         if ( _embedded != null ) { return _embedded.getMaxLogicalLobSize(); }
1:40b723c:         else if ( _netclient != null ) { return _netclient.getMaxLogicalLobSize(); }
1:0be2189:         else { throw nothingWrapped(); }
1:0be2189:     }
1:0be2189: 
1:0be2189:     public  boolean supportsRefCursors() throws SQLException
1:0be2189:     {
1:0be2189:         if ( _embedded != null ) { return _embedded.supportsRefCursors(); }
1:0be2189:         else if ( _netclient != null ) { return _netclient.supportsRefCursors(); }
1:0be2189:         else { throw nothingWrapped(); }
1:0be2189:     }
1:0be2189: 
1:0be2189: }
1:0be2189: 
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:69e3d06
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.client.am.ClientDatabaseMetaData;
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:40b723c
/////////////////////////////////////////////////////////////////////////
1:     public  long getMaxLogicalLobSize() throws SQLException
1:         if ( _embedded != null ) { return _embedded.getMaxLogicalLobSize(); }
1:         else if ( _netclient != null ) { return _netclient.getMaxLogicalLobSize(); }
commit:0be2189
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.Wrapper42DBMD
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1: 
1: import java.sql.SQLException;
1: 
1: import org.apache.derby.impl.jdbc.EmbedDatabaseMetaData;
0: import org.apache.derby.client.am.DatabaseMetaData;
1: 
1: /**
1:  * A wrapper around the new DatabaseMetaData methods added by JDBC 4.2.
1:  */
1: public  class   Wrapper42DBMD   extends Wrapper41DBMD
1: {
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTORS
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public Wrapper42DBMD( Object wrapped ) throws Exception { super( wrapped ); }
1:     
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // JDBC 4.2 BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
0:     public  long getMaxLogicalLOBSize() throws SQLException
1:     {
0:         if ( _embedded != null ) { return _embedded.getMaxLogicalLOBSize(); }
0:         else if ( _netclient != null ) { return _netclient.getMaxLogicalLOBSize(); }
1:         else { throw nothingWrapped(); }
1:     }
1: 
1:     public  boolean supportsRefCursors() throws SQLException
1:     {
1:         if ( _embedded != null ) { return _embedded.supportsRefCursors(); }
1:         else if ( _netclient != null ) { return _netclient.supportsRefCursors(); }
1:         else { throw nothingWrapped(); }
1:     }
1: 
1: }
1: 
============================================================================