1:29007f0: /*
1:29007f0: 
1:29007f0:    Derby - Class org.apache.derby.vti.VTIContext
1:29007f0: 
1:29007f0:    Licensed to the Apache Software Foundation (ASF) under one or more
1:29007f0:    contributor license agreements.  See the NOTICE file distributed with
1:29007f0:    this work for additional information regarding copyright ownership.
1:29007f0:    The ASF licenses this file to You under the Apache License, Version 2.0
1:29007f0:    (the "License"); you may not use this file except in compliance with
1:29007f0:    the License.  You may obtain a copy of the License at
1:29007f0: 
1:29007f0:       http://www.apache.org/licenses/LICENSE-2.0
1:29007f0: 
1:29007f0:    Unless required by applicable law or agreed to in writing, software
1:29007f0:    distributed under the License is distributed on an "AS IS" BASIS,
1:29007f0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:29007f0:    See the License for the specific language governing permissions and
1:29007f0:    limitations under the License.
1:29007f0: 
1:29007f0:  */
1:29007f0: 
1:29007f0: package org.apache.derby.vti;
1:29007f0: 
1:29007f0: /**
1:29007f0:  * <p>
1:29007f0:  * Context parameter which is passed to an AwareVTI.
1:29007f0:  * </p>
1:29007f0:  */
1:29007f0: public class VTIContext
1:29007f0: {
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     //  CONSTANTS
1:29007f0:     //
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0:     
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     //  STATE
1:29007f0:     //
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0: 
1:29007f0:     private String  _vtiSchema;
1:29007f0:     private String  _vtiTable;
1:29007f0:     private String  _statementText;
1:29007f0:     
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     //  CONSTRUCTOR
1:29007f0:     //
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0: 
1:29007f0:     /**
1:29007f0:      * <p>
1:29007f0:      * Construct from pieces.
1:29007f0:      * </p>
1:29007f0:      *
1:29007f0:      * @param   vtiSchema   Name of the schema holding the table function.
1:29007f0:      * @param   vtiTable      Name of the table function.
1:29007f0:      * @param   statementText   Text of the statement which is invoking the table function.
1:29007f0:      */
1:29007f0:     public  VTIContext
1:29007f0:         (
1:29007f0:          String vtiSchema,
1:29007f0:          String vtiTable,
1:29007f0:          String statementText
1:29007f0:          )
1:29007f0:     {
1:29007f0:         _vtiSchema = vtiSchema;
1:29007f0:         _vtiTable = vtiTable;
1:29007f0:         _statementText = statementText;
1:29007f0:     }
1:29007f0:     
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     //  PUBLIC BEHAVIOR
1:29007f0:     //
1:29007f0:     /////////////////////////////////////////////////////////////////
1:29007f0: 
1:29007f0:     /** Return the name of the schema holding the table function */
1:29007f0:     public  String  vtiSchema() { return _vtiSchema; }
1:29007f0: 
1:29007f0:     /** Return the unqualified table function name */
1:29007f0:     public  String  vtiTable()  { return _vtiTable; }
1:29007f0: 
1:29007f0:     /** Return the text of the statement which invoked the table function */
1:29007f0:     public  String  statementText() { return _statementText; }
1:29007f0:     
1:29007f0: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:29007f0
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.vti.VTIContext
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.vti;
1: 
1: /**
1:  * <p>
1:  * Context parameter which is passed to an AwareVTI.
1:  * </p>
1:  */
1: public class VTIContext
1: {
1:     /////////////////////////////////////////////////////////////////
1:     //
1:     //  CONSTANTS
1:     //
1:     /////////////////////////////////////////////////////////////////
1:     
1:     /////////////////////////////////////////////////////////////////
1:     //
1:     //  STATE
1:     //
1:     /////////////////////////////////////////////////////////////////
1: 
1:     private String  _vtiSchema;
1:     private String  _vtiTable;
1:     private String  _statementText;
1:     
1:     /////////////////////////////////////////////////////////////////
1:     //
1:     //  CONSTRUCTOR
1:     //
1:     /////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * <p>
1:      * Construct from pieces.
1:      * </p>
1:      *
1:      * @param   vtiSchema   Name of the schema holding the table function.
1:      * @param   vtiTable      Name of the table function.
1:      * @param   statementText   Text of the statement which is invoking the table function.
1:      */
1:     public  VTIContext
1:         (
1:          String vtiSchema,
1:          String vtiTable,
1:          String statementText
1:          )
1:     {
1:         _vtiSchema = vtiSchema;
1:         _vtiTable = vtiTable;
1:         _statementText = statementText;
1:     }
1:     
1:     /////////////////////////////////////////////////////////////////
1:     //
1:     //  PUBLIC BEHAVIOR
1:     //
1:     /////////////////////////////////////////////////////////////////
1: 
1:     /** Return the name of the schema holding the table function */
1:     public  String  vtiSchema() { return _vtiSchema; }
1: 
1:     /** Return the unqualified table function name */
1:     public  String  vtiTable()  { return _vtiTable; }
1: 
1:     /** Return the text of the statement which invoked the table function */
1:     public  String  statementText() { return _statementText; }
1:     
1: }
============================================================================