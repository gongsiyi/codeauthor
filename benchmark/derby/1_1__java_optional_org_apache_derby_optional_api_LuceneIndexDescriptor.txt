1:a4e6298: /*
1:a4e6298: 
1:a4e6298:    Derby - Class org.apache.derby.optional.api.LuceneIndexDescriptor
1:a4e6298: 
1:a4e6298:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a4e6298:    contributor license agreements.  See the NOTICE file distributed with
1:a4e6298:    this work for additional information regarding copyright ownership.
1:a4e6298:    The ASF licenses this file to You under the Apache License, Version 2.0
1:a4e6298:    (the "License"); you may not use this file except in compliance with
1:a4e6298:    the License.  You may obtain a copy of the License at
1:a4e6298: 
1:a4e6298:       http://www.apache.org/licenses/LICENSE-2.0
1:a4e6298: 
1:a4e6298:    Unless required by applicable law or agreed to in writing, software
1:a4e6298:    distributed under the License is distributed on an "AS IS" BASIS,
1:a4e6298:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a4e6298:    See the License for the specific language governing permissions and
1:a4e6298:    limitations under the License.
1:a4e6298: 
1:a4e6298:  */
1:a4e6298: 
1:a4e6298: package org.apache.derby.optional.api;
1:a4e6298: 
1:a4e6298: import java.sql.SQLException;
1:a4e6298: 
1:a4e6298: import org.apache.lucene.analysis.Analyzer;
1:a4e6298: import org.apache.lucene.queryparser.classic.QueryParser;
1:a4e6298: 
1:a4e6298: /**
1:a4e6298:  * <p>
1:a4e6298:  * A descriptor for how a Lucene index is created and queried.
1:a4e6298:  * </p>
1:a4e6298:  */
1:a4e6298: public interface LuceneIndexDescriptor
1:a4e6298: {
1:a4e6298:     /**
1:a4e6298:      * Get the names of the fields which are created when text is indexed.
1:a4e6298:      * These fields can be mentioned later on when querying the index.
1:a4e6298:      */
1:a4e6298:     public  String[]    getFieldNames();
1:a4e6298:     
1:a4e6298:     /** Get the Analyzer used to create index terms */
1:a4e6298:     public Analyzer getAnalyzer()   throws SQLException;
1:a4e6298: 
1:a4e6298:     /** Get the QueryParser used to parse query text */
1:a4e6298:     public  QueryParser getQueryParser()    throws SQLException;
1:a4e6298: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:a4e6298
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.optional.api.LuceneIndexDescriptor
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.optional.api;
1: 
1: import java.sql.SQLException;
1: 
1: import org.apache.lucene.analysis.Analyzer;
1: import org.apache.lucene.queryparser.classic.QueryParser;
1: 
1: /**
1:  * <p>
1:  * A descriptor for how a Lucene index is created and queried.
1:  * </p>
1:  */
1: public interface LuceneIndexDescriptor
1: {
1:     /**
1:      * Get the names of the fields which are created when text is indexed.
1:      * These fields can be mentioned later on when querying the index.
1:      */
1:     public  String[]    getFieldNames();
1:     
1:     /** Get the Analyzer used to create index terms */
1:     public Analyzer getAnalyzer()   throws SQLException;
1: 
1:     /** Get the QueryParser used to parse query text */
1:     public  QueryParser getQueryParser()    throws SQLException;
1: }
============================================================================