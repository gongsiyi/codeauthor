1:f06ca0f: /*
1:f06ca0f: 
1:f06ca0f:    Derby - Class org.apache.derby.iapi.transaction.TransactionListener
1:f06ca0f: 
1:f06ca0f:    Licensed to the Apache Software Foundation (ASF) under one or more
1:f06ca0f:    contributor license agreements.  See the NOTICE file distributed with
1:f06ca0f:    this work for additional information regarding copyright ownership.
1:f06ca0f:    The ASF licenses this file to You under the Apache License, Version 2.0
1:f06ca0f:    (the "License"); you may not use this file except in compliance with
1:f06ca0f:    the License.  You may obtain a copy of the License at
1:f06ca0f: 
1:f06ca0f:       http://www.apache.org/licenses/LICENSE-2.0
1:f06ca0f: 
1:f06ca0f:    Unless required by applicable law or agreed to in writing, software
1:f06ca0f:    distributed under the License is distributed on an "AS IS" BASIS,
1:f06ca0f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f06ca0f:    See the License for the specific language governing permissions and
1:f06ca0f:    limitations under the License.
1:f06ca0f: 
1:f06ca0f:  */
1:f06ca0f: package org.apache.derby.iapi.transaction;
1:f06ca0f: 
1:f06ca0f: import org.apache.derby.iapi.error.StandardException;
1:f06ca0f: 
1:f06ca0f: /**
1:f06ca0f:  * An interface that must be implemented by a object that
1:f06ca0f:  * wants to be notified when a significant transaction event occurs.
1:f06ca0f:  */
1:f06ca0f: public interface TransactionListener {
1:f06ca0f:     
1:f06ca0f:     /**
1:f06ca0f:      * Notifies registered listener that the transaction
1:f06ca0f:      * is about to commit. Called before the commit is
1:f06ca0f:      * recorded and flushed to the transaction log device.
1:f06ca0f:      * 
1:f06ca0f:      * @return true to remove this listener once this
1:f06ca0f:      * method returns.
1:f06ca0f:      * 
1:f06ca0f:      * @throws StandardException If thrown the commit attempt
1:f06ca0f:      * will be stopped and instead the transaction will be rolled back.
1:f06ca0f:      */
1:f06ca0f:     boolean preCommit() throws StandardException;
1:f06ca0f:     
1:f06ca0f:     /**
1:f06ca0f:      * Notifies registered listener that the transaction
1:f06ca0f:      * is about to rollback. Called before any physical rollback.
1:f06ca0f:      * The listener will be removed from the current transaction
1:f06ca0f:      * once the method returns.
1:f06ca0f:      * 
1:f06ca0f:      * @throws StandardException If thrown the rollback attempt
1:f06ca0f:      * will be stopped and instead the database will be shut down.
1:f06ca0f:      * 
1:f06ca0f:      * TODO: Define behaviour on exception during rollback.
1:f06ca0f:      */
1:f06ca0f:     void preRollback() throws StandardException;
1:f06ca0f: 
1:f06ca0f:     // to support statement/savepoint rollback.
1:f06ca0f:     // void preSavepointRollback() throws StandardException;
1:f06ca0f: 
1:f06ca0f: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:f06ca0f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.transaction.TransactionListener
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derby.iapi.transaction;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1:  * An interface that must be implemented by a object that
1:  * wants to be notified when a significant transaction event occurs.
1:  */
1: public interface TransactionListener {
1:     
1:     /**
1:      * Notifies registered listener that the transaction
1:      * is about to commit. Called before the commit is
1:      * recorded and flushed to the transaction log device.
1:      * 
1:      * @return true to remove this listener once this
1:      * method returns.
1:      * 
1:      * @throws StandardException If thrown the commit attempt
1:      * will be stopped and instead the transaction will be rolled back.
1:      */
1:     boolean preCommit() throws StandardException;
1:     
1:     /**
1:      * Notifies registered listener that the transaction
1:      * is about to rollback. Called before any physical rollback.
1:      * The listener will be removed from the current transaction
1:      * once the method returns.
1:      * 
1:      * @throws StandardException If thrown the rollback attempt
1:      * will be stopped and instead the database will be shut down.
1:      * 
1:      * TODO: Define behaviour on exception during rollback.
1:      */
1:     void preRollback() throws StandardException;
1: 
1:     // to support statement/savepoint rollback.
1:     // void preSavepointRollback() throws StandardException;
1: 
1: }
============================================================================