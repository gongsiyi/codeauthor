1:aaea357: /*
2:aaea357: 
1:aaea357: 	Derby - Class org.apache.derby.ui.decorator.DerbyIsRunningDecorator
1:aaea357: 	
1:23683f1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1:23683f1: 	contributor license agreements.  See the NOTICE file distributed with
1:23683f1: 	this work for additional information regarding copyright ownership.
1:23683f1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1:23683f1: 	(the "License"); you may not use this file except in compliance with
1:23683f1: 	the License.  You may obtain a copy of the License at
1:aaea357: 	
1:aaea357: 	   http://www.apache.org/licenses/LICENSE-2.0
1:aaea357: 	
1:aaea357: 	Unless required by applicable law or agreed to in writing, software
1:aaea357: 	distributed under the License is distributed on an "AS IS" BASIS,
1:aaea357: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:aaea357: 	See the License for the specific language governing permissions and
1:aaea357: 	limitations under the License.
1:aaea357: 
1:aaea357: */
1:aaea357: 
1:aaea357: 
1:aaea357: package org.apache.derby.ui.decorate;
1:aaea357: 
1:aaea357: import org.apache.derby.ui.DerbyPlugin;
1:aaea357: import org.apache.derby.ui.common.CommonNames;
1:aaea357: import org.apache.derby.ui.util.DerbyServerUtils;
1:aaea357: import org.apache.derby.ui.util.Logger;
1:aaea357: import org.apache.derby.ui.util.SelectionUtil;
1:aaea357: import org.eclipse.core.resources.IProject;
1:aaea357: import org.eclipse.core.runtime.CoreException;
1:aaea357: import org.eclipse.core.runtime.IStatus;
1:aaea357: import org.eclipse.core.runtime.Platform;
1:aaea357: import org.eclipse.jdt.core.IJavaProject;
1:aaea357: import org.eclipse.jface.resource.ImageDescriptor;
1:aaea357: import org.eclipse.jface.viewers.IDecoration;
1:aaea357: import org.eclipse.jface.viewers.ILightweightLabelDecorator;
1:aaea357: import org.eclipse.jface.viewers.LabelProvider;
1:aaea357: import org.eclipse.jface.viewers.LabelProviderChangedEvent;
1:aaea357: import org.eclipse.swt.widgets.Display;
1:aaea357: import org.eclipse.ui.IDecoratorManager;
1:aaea357: 
1:aaea357: 
1:aaea357: 
1:aaea357: public class DerbyIsRunningDecorator     extends LabelProvider
1:aaea357: implements ILightweightLabelDecorator {
1:aaea357: 
1:aaea357: 
1:aaea357: 	private static final ImageDescriptor derbyRunningImageDesc = ImageDescriptor.
1:aaea357: 	createFromURL(Platform.getBundle(CommonNames.UI_PATH).getEntry("/icons/"+CommonNames.ISRUNNING+".gif"));
1:aaea357: 	
1:aaea357:     public void decorate(Object element, IDecoration decoration) {
1:aaea357:     	IProject proj=null;
1:aaea357:     	if(element instanceof IJavaProject){
1:aaea357:     		proj = ((IJavaProject)element).getProject();
1:aaea357:     	}else{
1:aaea357:     		proj=(IProject)element;
1:aaea357:     	}
1:aaea357:     	try {
1:aaea357: 			if (DerbyServerUtils.getDefault().getRunning(proj)) {
1:aaea357: 				decoration.addOverlay(derbyRunningImageDesc);
1:aaea357: 			}
1:aaea357:     	}
1:aaea357:     	catch (CoreException ce) {
1:aaea357:     		Logger.log(SelectionUtil.getStatusMessages(ce),IStatus.ERROR);
1:aaea357:     	}
1:aaea357:     }
1:aaea357: 
1:aaea357: 
1:aaea357:     	private void startUpdateDecor(IProject proj) {
1:aaea357:     	final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); 
1:aaea357: 		Display.getDefault().asyncExec(new Runnable() {
1:aaea357: 			public void run() {
1:aaea357: 				fireLabelProviderChanged(evnt);
1:aaea357: 			}
1:aaea357: 		});
1:aaea357:     }
1:aaea357: 
1:aaea357:     	public static void performUpdateDecor(IProject proj) {
1:aaea357:     		IDecoratorManager dm = DerbyPlugin.getDefault().getWorkbench().getDecoratorManager();
1:aaea357:     		DerbyIsRunningDecorator decorator = (DerbyIsRunningDecorator)dm.getBaseLabelProvider(CommonNames.RUNDECORATOR);
1:aaea357:     		decorator.startUpdateDecor(proj);
1:aaea357:         }
1:aaea357:         	
1:aaea357: }
============================================================================
author:Jean T. Anderson
-------------------------------------------------------------------------------
commit:23683f1
/////////////////////////////////////////////////////////////////////////
1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1: 	contributor license agreements.  See the NOTICE file distributed with
1: 	this work for additional information regarding copyright ownership.
1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1: 	(the "License"); you may not use this file except in compliance with
1: 	the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: 	Derby - Class org.apache.derby.ui.decorator.DerbyIsRunningDecorator
1: 	
0: 	Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 	
0: 	Licensed under the Apache License, Version 2.0 (the "License");
0: 	you may not use this file except in compliance with the License.
0: 	You may obtain a copy of the License at
1: 	
1: 	   http://www.apache.org/licenses/LICENSE-2.0
1: 	
1: 	Unless required by applicable law or agreed to in writing, software
1: 	distributed under the License is distributed on an "AS IS" BASIS,
1: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: 	See the License for the specific language governing permissions and
1: 	limitations under the License.
1: 
1: */
1: 
1: 
1: package org.apache.derby.ui.decorate;
1: 
1: import org.apache.derby.ui.DerbyPlugin;
1: import org.apache.derby.ui.common.CommonNames;
1: import org.apache.derby.ui.util.DerbyServerUtils;
1: import org.apache.derby.ui.util.Logger;
1: import org.apache.derby.ui.util.SelectionUtil;
1: import org.eclipse.core.resources.IProject;
1: import org.eclipse.core.runtime.CoreException;
1: import org.eclipse.core.runtime.IStatus;
1: import org.eclipse.core.runtime.Platform;
1: import org.eclipse.jdt.core.IJavaProject;
1: import org.eclipse.jface.resource.ImageDescriptor;
1: import org.eclipse.jface.viewers.IDecoration;
1: import org.eclipse.jface.viewers.ILightweightLabelDecorator;
1: import org.eclipse.jface.viewers.LabelProvider;
1: import org.eclipse.jface.viewers.LabelProviderChangedEvent;
1: import org.eclipse.swt.widgets.Display;
1: import org.eclipse.ui.IDecoratorManager;
1: 
1: 
1: 
1: public class DerbyIsRunningDecorator     extends LabelProvider
1: implements ILightweightLabelDecorator {
1: 
1: 
1: 	private static final ImageDescriptor derbyRunningImageDesc = ImageDescriptor.
1: 	createFromURL(Platform.getBundle(CommonNames.UI_PATH).getEntry("/icons/"+CommonNames.ISRUNNING+".gif"));
1: 	
1:     public void decorate(Object element, IDecoration decoration) {
1:     	IProject proj=null;
1:     	if(element instanceof IJavaProject){
1:     		proj = ((IJavaProject)element).getProject();
1:     	}else{
1:     		proj=(IProject)element;
1:     	}
1:     	try {
1: 			if (DerbyServerUtils.getDefault().getRunning(proj)) {
1: 				decoration.addOverlay(derbyRunningImageDesc);
1: 			}
1:     	}
1:     	catch (CoreException ce) {
1:     		Logger.log(SelectionUtil.getStatusMessages(ce),IStatus.ERROR);
1:     	}
1:     }
1: 
1: 
1:     	private void startUpdateDecor(IProject proj) {
1:     	final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); 
1: 		Display.getDefault().asyncExec(new Runnable() {
1: 			public void run() {
1: 				fireLabelProviderChanged(evnt);
1: 			}
1: 		});
1:     }
1: 
1:     	public static void performUpdateDecor(IProject proj) {
1:     		IDecoratorManager dm = DerbyPlugin.getDefault().getWorkbench().getDecoratorManager();
1:     		DerbyIsRunningDecorator decorator = (DerbyIsRunningDecorator)dm.getBaseLabelProvider(CommonNames.RUNDECORATOR);
1:     		decorator.startUpdateDecor(proj);
1:         }
1:         	
1: }
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:00daaff
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0: 	Derby - Class org.apache.derby.ui.decorator.DerbyIsRunningDecorator
0: 	
0: 	Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
0: 	
0: 	Licensed under the Apache License, Version 2.0 (the "License");
0: 	you may not use this file except in compliance with the License.
0: 	You may obtain a copy of the License at
0: 	
0: 	   http://www.apache.org/licenses/LICENSE-2.0
0: 	
0: 	Unless required by applicable law or agreed to in writing, software
0: 	distributed under the License is distributed on an "AS IS" BASIS,
0: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0: 	See the License for the specific language governing permissions and
0: 	limitations under the License.
0: 
0: */
0: 
0: 
0: package org.apache.derby.ui.decorate;
0: 
0: import org.apache.derby.ui.DerbyPlugin;
0: import org.apache.derby.ui.common.CommonNames;
0: import org.apache.derby.ui.util.DerbyServerUtils;
0: import org.apache.derby.ui.util.Logger;
0: import org.apache.derby.ui.util.SelectionUtil;
0: import org.eclipse.core.resources.IProject;
0: import org.eclipse.core.runtime.CoreException;
0: import org.eclipse.core.runtime.IStatus;
0: import org.eclipse.core.runtime.Platform;
0: import org.eclipse.jdt.core.IJavaProject;
0: import org.eclipse.jface.resource.ImageDescriptor;
0: import org.eclipse.jface.viewers.IDecoration;
0: import org.eclipse.jface.viewers.ILightweightLabelDecorator;
0: import org.eclipse.jface.viewers.LabelProvider;
0: import org.eclipse.jface.viewers.LabelProviderChangedEvent;
0: import org.eclipse.swt.widgets.Display;
0: import org.eclipse.ui.IDecoratorManager;
0: 
0: 
0: 
0: public class DerbyIsRunningDecorator     extends LabelProvider
0: implements ILightweightLabelDecorator {
0: 
0: 
0: 	private static final ImageDescriptor derbyRunningImageDesc = ImageDescriptor.
0: 	createFromURL(Platform.getBundle(CommonNames.UI_PATH).getEntry("/icons/"+CommonNames.ISRUNNING+".gif"));
0: 	
0:     public void decorate(Object element, IDecoration decoration) {
0:     	IProject proj=null;
0:     	if(element instanceof IJavaProject){
0:     		proj = ((IJavaProject)element).getProject();
0:     	}else{
0:     		proj=(IProject)element;
0:     	}
0:     	try {
0: 			if (DerbyServerUtils.getDefault().getRunning(proj)) {
0: 				decoration.addOverlay(derbyRunningImageDesc);
0: 			}
0:     	}
0:     	catch (CoreException ce) {
0:     		Logger.log(SelectionUtil.getStatusMessages(ce),IStatus.ERROR);
0:     	}
0:     }
0: 
0: 
0:     	private void startUpdateDecor(IProject proj) {
0:     	final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); 
0: 		Display.getDefault().asyncExec(new Runnable() {
0: 			public void run() {
0: 				fireLabelProviderChanged(evnt);
0: 			}
0: 		});
0:     }
0: 
0:     	public static void performUpdateDecor(IProject proj) {
0:     		IDecoratorManager dm = DerbyPlugin.getDefault().getWorkbench().getDecoratorManager();
0:     		DerbyIsRunningDecorator decorator = (DerbyIsRunningDecorator)dm.getBaseLabelProvider(CommonNames.RUNDECORATOR);
0:     		decorator.startUpdateDecor(proj);
0:         }
0:         	
0: }
============================================================================