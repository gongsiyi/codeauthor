1:eac0369: /*
2:eac0369: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.store.raw.D_ContainerKey
1:7ecc1f2: 
1:75c7276:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75c7276:    contributor license agreements.  See the NOTICE file distributed with
1:75c7276:    this work for additional information regarding copyright ownership.
1:75c7276:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75c7276:    (the "License"); you may not use this file except in compliance with
1:75c7276:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.store.raw;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.services.diag.DiagnosticableGeneric;
1:eac0369: 
1:eac0369: import java.util.Properties;
1:eac0369: 
2:eac0369: /**
1:eac0369: 
1:eac0369: The D_BaseContainerHandle class provides diagnostic information about the
1:eac0369: BaseContainerHandle class.  Currently this info is a single string of the form
1:eac0369:     TABLE(conglomerate_id, container_id)
1:eac0369: **/
1:eac0369: 
1:eac0369: public class D_ContainerKey extends DiagnosticableGeneric
1:eac0369: {
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * Return string identifying the underlying container.
1:eac0369:      * <p>
1:eac0369:      *
1:eac0369: 	 * @return A string of the form TABLE(conglomerate_id, container_id).
1:eac0369: 	 **/
1:eac0369:     public String diag()
1:eac0369:     {
1:eac0369:       return(diag_object.toString());
1:eac0369:     }
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * Return a set of properties describing the the key used to lock container.
1:eac0369:      * <p>
1:eac0369:      * Used by debugging code to print the lock table on demand.
1:eac0369:      *
1:eac0369:      **/
1:eac0369:     public void diag_detail(Properties prop)
1:eac0369:     {
1:eac0369:         ContainerKey        key         = (ContainerKey) diag_object;
1:eac0369: 
1:eac0369:         prop.put(RowLock.DIAG_CONTAINERID, Long.toString(key.getContainerId()));
1:eac0369: 
1:eac0369:         prop.put(RowLock.DIAG_SEGMENTID, Long.toString(key.getSegmentId()));
1:eac0369: 
1:eac0369:         // The following 2 don't make sense for container locks, just set
1:eac0369:         // them to 0 to make it easier for now to tree container locks and
1:eac0369:         // row locks similarly.  
1:eac0369:         prop.put(RowLock.DIAG_PAGENUM, Integer.toString(0));
1:eac0369:         prop.put(RowLock.DIAG_RECID,   Integer.toString(0));
1:eac0369:     }
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:75c7276
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.store.raw.D_ContainerKey
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.raw
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.store.raw;
1: 
1: import org.apache.derby.iapi.services.diag.DiagnosticableGeneric;
1: 
1: import java.util.Properties;
1: 
1: /**
1: 
1: The D_BaseContainerHandle class provides diagnostic information about the
1: BaseContainerHandle class.  Currently this info is a single string of the form
1:     TABLE(conglomerate_id, container_id)
1: **/
1: 
1: public class D_ContainerKey extends DiagnosticableGeneric
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 
1:     /**
1:      * Return string identifying the underlying container.
1:      * <p>
1:      *
1: 	 * @return A string of the form TABLE(conglomerate_id, container_id).
1: 	 **/
1:     public String diag()
1:     {
1:       return(diag_object.toString());
1:     }
1: 
1:     /**
1:      * Return a set of properties describing the the key used to lock container.
1:      * <p>
1:      * Used by debugging code to print the lock table on demand.
1:      *
1:      **/
1:     public void diag_detail(Properties prop)
1:     {
1:         ContainerKey        key         = (ContainerKey) diag_object;
1: 
1:         prop.put(RowLock.DIAG_CONTAINERID, Long.toString(key.getContainerId()));
1: 
1:         prop.put(RowLock.DIAG_SEGMENTID, Long.toString(key.getSegmentId()));
1: 
1:         // The following 2 don't make sense for container locks, just set
1:         // them to 0 to make it easier for now to tree container locks and
1:         // row locks similarly.  
1:         prop.put(RowLock.DIAG_PAGENUM, Integer.toString(0));
1:         prop.put(RowLock.DIAG_RECID,   Integer.toString(0));
1:     }
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.raw
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.store.raw;
0: 
0: import org.apache.derby.iapi.services.diag.DiagnosticableGeneric;
0: 
0: import java.util.Properties;
0: 
0: /**
0: 
0: The D_BaseContainerHandle class provides diagnostic information about the
0: BaseContainerHandle class.  Currently this info is a single string of the form
0:     TABLE(conglomerate_id, container_id)
0: **/
0: 
0: public class D_ContainerKey extends DiagnosticableGeneric
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 
0:     /**
0:      * Return string identifying the underlying container.
0:      * <p>
0:      *
0: 	 * @return A string of the form TABLE(conglomerate_id, container_id).
0: 	 **/
0:     public String diag()
0:     {
0:       return(diag_object.toString());
0:     }
0: 
0:     /**
0:      * Return a set of properties describing the the key used to lock container.
0:      * <p>
0:      * Used by debugging code to print the lock table on demand.
0:      *
0:      **/
0:     public void diag_detail(Properties prop)
0:     {
0:         ContainerKey        key         = (ContainerKey) diag_object;
0: 
0:         prop.put(RowLock.DIAG_CONTAINERID, Long.toString(key.getContainerId()));
0: 
0:         prop.put(RowLock.DIAG_SEGMENTID, Long.toString(key.getSegmentId()));
0: 
0:         // The following 2 don't make sense for container locks, just set
0:         // them to 0 to make it easier for now to tree container locks and
0:         // row locks similarly.  
0:         prop.put(RowLock.DIAG_PAGENUM, Integer.toString(0));
0:         prop.put(RowLock.DIAG_RECID,   Integer.toString(0));
0:     }
0: }
============================================================================