1:ff22a62: /*
1:ff22a62: 
1:ff22a62:    Derby - Class org.apache.derbyDemo.scores.util.Logger
1:ff22a62: 
1:ff22a62:    Licensed to the Apache Software Foundation (ASF) under one or more
1:ff22a62:    contributor license agreements.  See the NOTICE file distributed with
1:ff22a62:    this work for additional information regarding copyright ownership.
1:ff22a62:    The ASF licenses this file to You under the Apache License, Version 2.0
1:ff22a62:    (the "License"); you may not use this file except in compliance with
1:ff22a62:    the License.  You may obtain a copy of the License at
1:ff22a62: 
1:ff22a62:       http://www.apache.org/licenses/LICENSE-2.0
1:ff22a62: 
1:ff22a62:    Unless required by applicable law or agreed to in writing, software
1:ff22a62:    distributed under the License is distributed on an "AS IS" BASIS,
1:ff22a62:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ff22a62:    See the License for the specific language governing permissions and
1:ff22a62:    limitations under the License.
1:ff22a62: 
1:ff22a62:  */
1:ff22a62: 
1:ff22a62: package org.apache.derbyDemo.scores.util;
1:ff22a62: 
1:ff22a62: import java.io.*;
1:ff22a62: 
1:ff22a62: /**
1:ff22a62:  * <p>
1:ff22a62:  * Utility class for logging messages.
1:ff22a62:  * </p>
1:ff22a62:  *
1:ff22a62:  */
1:ff22a62: public  class   Logger
1:ff22a62: {
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62:     //
1:ff22a62:     // CONSTANTS
1:ff22a62:     //
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62: 
1:ff22a62:     private static  final   String  BANNER_BRACKET =
1:ff22a62:         "-----------------------------------------------------";
1:ff22a62:     private static  final   String  BANNER_INDENTATION =
1:ff22a62:         "-- ";
1:ff22a62:     
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62:     //
1:ff22a62:     // STATE
1:ff22a62:     //
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62: 
1:ff22a62:     private static      Logger      _logger;
1:ff22a62:     private             PrintStream _printStream;
1:ff22a62:     private             boolean     _loggingEnabled = true;
1:ff22a62:     
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62:     //
1:ff22a62:     // CONSTRUCTOR
1:ff22a62:     //
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Construct out of thin air.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  Logger()
1:ff22a62:     {
1:ff22a62:         _printStream = System.out;
1:ff22a62:     }
1:ff22a62: 
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62:     //
1:ff22a62:     // PUBLIC BEHAVIOR
1:ff22a62:     //
1:ff22a62:     ////////////////////////////////////////////////////////
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Get the logging tool.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  static  Logger  getLogger()
1:ff22a62:     {
1:ff22a62:         if ( _logger == null ) { _logger = new Logger(); }
1:ff22a62:         
1:ff22a62:         return _logger;
1:ff22a62:     }
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Report whether logging is enabled.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  boolean isLoggingEnabled() { return _loggingEnabled; }
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Enable or disable printing.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  void    enableLogging( boolean enableLogging )
1:ff22a62:     {
1:ff22a62:         _loggingEnabled = enableLogging;
1:ff22a62:     }
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Log a text message.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  void    log( String text )
1:ff22a62:     {
1:ff22a62:         if ( _loggingEnabled) { _printStream.println( text ); }
1:ff22a62:     }
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Log an exception.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  void    log( Throwable t )
1:ff22a62:     {
1:ff22a62:         log( t.getMessage() );
1:ff22a62: 
1:ff22a62:         t.printStackTrace( _printStream );
1:ff22a62:     }
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Get the PrintStream used by this Logger.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  PrintStream getPrintStream() { return _printStream; }
1:ff22a62: 
1:ff22a62:     /**
1:ff22a62:      * <p>
1:ff22a62:      * Print a message inside a banner comment.
1:ff22a62:      * </p>
1:ff22a62:      */
1:ff22a62:     public  void    logBanner( String text )
1:ff22a62:     {
1:ff22a62:         log( "\n" );
1:ff22a62:         log( BANNER_BRACKET );
1:ff22a62:         log( BANNER_INDENTATION );
1:ff22a62:         log( BANNER_INDENTATION + text );
1:ff22a62:         log( BANNER_INDENTATION );
1:ff22a62:         log( BANNER_BRACKET );
1:ff22a62:         log( "\n" );
1:ff22a62:     }
1:ff22a62:     
1:ff22a62: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:ff22a62
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyDemo.scores.util.Logger
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyDemo.scores.util;
1: 
1: import java.io.*;
1: 
1: /**
1:  * <p>
1:  * Utility class for logging messages.
1:  * </p>
1:  *
0:  * @author Rick Hillegas
1:  */
1: public  class   Logger
1: {
1:     ////////////////////////////////////////////////////////
1:     //
1:     // CONSTANTS
1:     //
1:     ////////////////////////////////////////////////////////
1: 
1:     private static  final   String  BANNER_BRACKET =
1:         "-----------------------------------------------------";
1:     private static  final   String  BANNER_INDENTATION =
1:         "-- ";
1:     
1:     ////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ////////////////////////////////////////////////////////
1: 
1:     private static      Logger      _logger;
1:     private             PrintStream _printStream;
1:     private             boolean     _loggingEnabled = true;
1:     
1:     ////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTOR
1:     //
1:     ////////////////////////////////////////////////////////
1: 
1:     /**
1:      * <p>
1:      * Construct out of thin air.
1:      * </p>
1:      */
1:     public  Logger()
1:     {
1:         _printStream = System.out;
1:     }
1: 
1:     ////////////////////////////////////////////////////////
1:     //
1:     // PUBLIC BEHAVIOR
1:     //
1:     ////////////////////////////////////////////////////////
1: 
1:     /**
1:      * <p>
1:      * Get the logging tool.
1:      * </p>
1:      */
1:     public  static  Logger  getLogger()
1:     {
1:         if ( _logger == null ) { _logger = new Logger(); }
1:         
1:         return _logger;
1:     }
1: 
1:     /**
1:      * <p>
1:      * Report whether logging is enabled.
1:      * </p>
1:      */
1:     public  boolean isLoggingEnabled() { return _loggingEnabled; }
1: 
1:     /**
1:      * <p>
1:      * Enable or disable printing.
1:      * </p>
1:      */
1:     public  void    enableLogging( boolean enableLogging )
1:     {
1:         _loggingEnabled = enableLogging;
1:     }
1: 
1:     /**
1:      * <p>
1:      * Log a text message.
1:      * </p>
1:      */
1:     public  void    log( String text )
1:     {
1:         if ( _loggingEnabled) { _printStream.println( text ); }
1:     }
1: 
1:     /**
1:      * <p>
1:      * Log an exception.
1:      * </p>
1:      */
1:     public  void    log( Throwable t )
1:     {
1:         log( t.getMessage() );
1: 
1:         t.printStackTrace( _printStream );
1:     }
1: 
1:     /**
1:      * <p>
1:      * Get the PrintStream used by this Logger.
1:      * </p>
1:      */
1:     public  PrintStream getPrintStream() { return _printStream; }
1: 
1:     /**
1:      * <p>
1:      * Print a message inside a banner comment.
1:      * </p>
1:      */
1:     public  void    logBanner( String text )
1:     {
1:         log( "\n" );
1:         log( BANNER_BRACKET );
1:         log( BANNER_INDENTATION );
1:         log( BANNER_INDENTATION + text );
1:         log( BANNER_INDENTATION );
1:         log( BANNER_BRACKET );
1:         log( "\n" );
1:     }
1:     
1: }
============================================================================