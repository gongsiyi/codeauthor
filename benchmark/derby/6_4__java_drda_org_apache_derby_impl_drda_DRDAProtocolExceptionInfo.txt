1:eac0369: /*
1:d7258ed: 
1:d7258ed:    Derby - Class org.apache.derby.impl.drda.DRDAProtocolExceptionInfo
1:d7258ed: 
1:59e5225:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59e5225:    contributor license agreements.  See the NOTICE file distributed with
1:59e5225:    this work for additional information regarding copyright ownership.
1:59e5225:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59e5225:    (the "License"); you may not use this file except in compliance with
1:59e5225:    the License.  You may obtain a copy of the License at
1:d7258ed: 
1:d7258ed:       http://www.apache.org/licenses/LICENSE-2.0
1:d7258ed: 
1:d7258ed:    Unless required by applicable law or agreed to in writing, software
1:d7258ed:    distributed under the License is distributed on an "AS IS" BASIS,
1:d7258ed:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d7258ed:    See the License for the specific language governing permissions and
1:d7258ed:    limitations under the License.
5:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.drda;
1:eac0369: 
1:7df5ffe: class DRDAProtocolExceptionInfo {
1:eac0369:     
1:eac0369:     /*
1:eac0369:       Holds static information about the protocol error
1:eac0369:       to put in the Hash Table
1:eac0369:     */
1:640fe0a:     
1:640fe0a:     /**
1:640fe0a:      * errorCodePoint specifies the code point of the error reply message, (e.g.
1:640fe0a:      * CodePoint.SYNTAXRM) whereas errCdCodePoint specifies the code point of an
1:640fe0a:      * extra required field in that reply message. Most error reply messages
1:640fe0a:      * have one or two required fields that are quite common, like SVRCOD
1:640fe0a:      * (severity code) or RDBNAM (database name). Some error reply messages
1:640fe0a:      * additionally have required fields that are specific to them.
1:640fe0a:      * errCdCodePoint is used to specify these. For instance, SYNTAXRM has a
1:640fe0a:      * required field called SYNERRCD, and PRCCNVRM has a required field called
1:640fe0a:      * PRCCNVCD.
1:640fe0a:      */
1:db9a013:     protected int errorCodePoint;
1:eac0369:     
1:eac0369:     // Severity Code
1:eac0369:     protected int svrcod;
1:eac0369:     
1:640fe0a:     /**
1:640fe0a:      * The CodePoint describing the error condition for the errorCodePoint.
1:640fe0a:      * (e.g. CodePoint.SYNERRCD, when errorCodePoint is CodePoint.SYNTAXRM)
1:640fe0a:      */
1:eac0369:     protected int errCdCodePoint ;
1:eac0369:     
1:eac0369:     // Sends an originating Codepoint
1:eac0369:     protected boolean sendsCodpntArg;
1:4f996a4:     
1:7df5ffe:     DRDAProtocolExceptionInfo(int errorCodePoint, int svrcod,  
1:4f996a4:                     int errCdCodePoint,
1:4f996a4:                     boolean sendsCodpntArg)
1:eac0369:     {
1:4f996a4:     this.errorCodePoint = errorCodePoint;
1:4f996a4:     this.svrcod = svrcod;
1:4f996a4:     this.errCdCodePoint = errCdCodePoint;
1:4f996a4:     this.sendsCodpntArg = sendsCodpntArg;
1:eac0369:     }
1:eac0369:     
1:eac0369:     
1:eac0369: }
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:db9a013
/////////////////////////////////////////////////////////////////////////
1:     protected int errorCodePoint;
commit:640fe0a
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * errorCodePoint specifies the code point of the error reply message, (e.g.
1:      * CodePoint.SYNTAXRM) whereas errCdCodePoint specifies the code point of an
1:      * extra required field in that reply message. Most error reply messages
1:      * have one or two required fields that are quite common, like SVRCOD
1:      * (severity code) or RDBNAM (database name). Some error reply messages
1:      * additionally have required fields that are specific to them.
1:      * errCdCodePoint is used to specify these. For instance, SYNTAXRM has a
1:      * required field called SYNERRCD, and PRCCNVRM has a required field called
1:      * PRCCNVCD.
1:      */
1:     /**
1:      * The CodePoint describing the error condition for the errorCodePoint.
1:      * (e.g. CodePoint.SYNERRCD, when errorCodePoint is CodePoint.SYNTAXRM)
1:      */
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:4f996a4
/////////////////////////////////////////////////////////////////////////
0:     protected int errorCodePoint;       
/////////////////////////////////////////////////////////////////////////
1:     
1:                     int errCdCodePoint,
1:                     boolean sendsCodpntArg)
1:     this.errorCodePoint = errorCodePoint;
1:     this.svrcod = svrcod;
1:     this.errCdCodePoint = errCdCodePoint;
1:     this.sendsCodpntArg = sendsCodpntArg;
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59e5225
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7df5ffe
/////////////////////////////////////////////////////////////////////////
1: class DRDAProtocolExceptionInfo {
/////////////////////////////////////////////////////////////////////////
1:     DRDAProtocolExceptionInfo(int errorCodePoint, int svrcod,  
commit:d7258ed
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.drda.DRDAProtocolExceptionInfo
1: 
0:    Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:141cd31
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.drda
0:    (C) Copyright IBM Corp. 2002, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.drda;
1: 
0: public class DRDAProtocolExceptionInfo {
0: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
1: 
1: 
0:     private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2002_2004;
1:     
1:     /*
1:       Holds static information about the protocol error
1:       to put in the Hash Table
1:     */
0:     // The Codepoint of the error (e.g CodePoint.SYTNAXRM)
0:     protected int errorCodePoint;	   
1:     
1:     // Severity Code
1:     protected int svrcod;
1:     
0:     // The CodePoint describing the errCD (e.g. CodePint.SYNERRCD)
1:     protected int errCdCodePoint ;
1:     
1:     // Sends an originating Codepoint
1:     protected boolean sendsCodpntArg;
1: 	
0:     protected DRDAProtocolExceptionInfo(int errorCodePoint, int svrcod,  
0: 					int errCdCodePoint,
0: 					boolean sendsCodpntArg)
1:     {
0: 	this.errorCodePoint = errorCodePoint;
0: 	this.svrcod = svrcod;
0: 	this.errCdCodePoint = errCdCodePoint;
0: 	this.sendsCodpntArg = sendsCodpntArg;
1:     }
1:     
1:     
1: }
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
1: 
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.drda
0:    (C) Copyright IBM Corp. 2002, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.drda;
0: 
0: public class DRDAProtocolExceptionInfo {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 
0: 
0:     private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2002_2004;
0:     
0:     /*
0:       Holds static information about the protocol error
0:       to put in the Hash Table
0:     */
0:     // The Codepoint of the error (e.g CodePoint.SYTNAXRM)
0:     protected int errorCodePoint;	   
0:     
0:     // Severity Code
0:     protected int svrcod;
0:     
0:     // The CodePoint describing the errCD (e.g. CodePint.SYNERRCD)
0:     protected int errCdCodePoint ;
0:     
0:     // Sends an originating Codepoint
0:     protected boolean sendsCodpntArg;
0: 	
0:     protected DRDAProtocolExceptionInfo(int errorCodePoint, int svrcod,  
0: 					int errCdCodePoint,
0: 					boolean sendsCodpntArg)
0:     {
0: 	this.errorCodePoint = errorCodePoint;
0: 	this.svrcod = svrcod;
0: 	this.errCdCodePoint = errCdCodePoint;
0: 	this.sendsCodpntArg = sendsCodpntArg;
0:     }
0:     
0:     
0: }
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
0: 
============================================================================