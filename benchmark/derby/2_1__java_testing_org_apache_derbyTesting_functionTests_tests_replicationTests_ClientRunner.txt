1:db8dae7: /*
1:db8dae7:  
1:db8dae7: Derby - Class org.apache.derbyTesting.functionTests.tests.replicationTests.ClientRunner
1:db8dae7:  
1:db8dae7: Licensed to the Apache Software Foundation (ASF) under one or more
1:db8dae7: contributor license agreements.  See the NOTICE file distributed with
1:db8dae7: this work for additional information regarding copyright ownership.
1:db8dae7: The ASF licenses this file to You under the Apache License, Version 2.0
1:db8dae7: (the "License"); you may not use this file except in compliance with
1:db8dae7: the License.  You may obtain a copy of the License at
1:db8dae7:  
1:db8dae7:    http://www.apache.org/licenses/LICENSE-2.0
1:db8dae7:  
1:db8dae7: Unless required by applicable law or agreed to in writing, software
1:db8dae7: distributed under the License is distributed on an "AS IS" BASIS,
1:db8dae7: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:db8dae7: See the License for the specific language governing permissions and
1:db8dae7: limitations under the License.
1:db8dae7:  
1:db8dae7:  */
1:db8dae7: 
1:db8dae7: package org.apache.derbyTesting.functionTests.tests.replicationTests;
1:db8dae7: 
1:db8dae7: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:db8dae7: 
1:db8dae7: public class ClientRunner extends BaseJDBCTestCase // FIXME! Use ClientRunner in e.g. Shutdown.... etc.
1:db8dae7: {
1:db8dae7:     private static ReplicationRun repRun = new ReplicationRun("ClientRunner");
1:db8dae7:     
1:db8dae7:     public ClientRunner(String testcaseName)
1:db8dae7:     {
1:db8dae7:         super(testcaseName);
1:db8dae7:     }
1:db8dae7:     
1:db8dae7:     /* */
1:db8dae7:     // Client reads from the same property file as the 'ReplicationRun' test 
1:db8dae7:     // which controls the complete replication test!
1:db8dae7:     static String replicatedDb = null;
1:db8dae7:     static String jvmVersion = null;
1:db8dae7:     static String slaveJvmVersion = null;
1:db8dae7:     static String derbyVersion = null;
1:db8dae7:     static String derbySlaveVersion = null;
1:db8dae7:     static String masterServerHost = null;
1:db8dae7:     static int masterServerPort = -1;
1:db8dae7:     static String slaveServerHost = null;
1:db8dae7:     static int slaveServerPort = -1;
1:db8dae7:     static int slaveReplPort = -1;
1:db8dae7:     static String masterDatabasePath = null;
1:db8dae7:     static String slaveDatabasePath = null;
1:db8dae7:     static String testClientHost = null;
1:db8dae7:     /* */
1:db8dae7:     
1:db8dae7:     public static void initEnvironment()
1:db8dae7:     throws Exception
1:db8dae7:     {
1:db8dae7:         System.out.println("**** ClientRunner.init()");
1:db8dae7:         System.out.println("'ClientRunner' can not be run outside the 'ReplicationRun' framework.");
1:db8dae7:         
1:db8dae7:         repRun.initEnvironment();
1:db8dae7:         testClientHost=      repRun.testClientHost;
1:db8dae7:         derbyVersion =       repRun.derbyVersion;
1:db8dae7:         jvmVersion =         repRun.jvmVersion;
1:db8dae7:         replicatedDb =       repRun.replicatedDb;
1:db8dae7:         masterServerHost =   repRun.masterServerHost;
1:db8dae7:         masterServerPort =   repRun.masterServerPort;
1:db8dae7:         masterDatabasePath = repRun.masterDatabasePath;
1:db8dae7:         slaveServerHost =    repRun.slaveServerHost;
1:db8dae7:         slaveServerPort =    repRun.slaveServerPort;
1:db8dae7:         slaveReplPort =      repRun.slaveReplPort;
1:db8dae7:         slaveDatabasePath =  repRun.slaveDatabasePath;
1:db8dae7:         slaveJvmVersion =    repRun.slaveJvmVersion;
1:db8dae7:         derbySlaveVersion =  repRun.derbySlaveVersion;
1:db8dae7:         
1:db8dae7:     }
1:db8dae7:     
1:db8dae7: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
author:Oystein Grovlen
-------------------------------------------------------------------------------
commit:db8dae7
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1: Derby - Class org.apache.derbyTesting.functionTests.tests.replicationTests.ClientRunner
1:  
1: Licensed to the Apache Software Foundation (ASF) under one or more
1: contributor license agreements.  See the NOTICE file distributed with
1: this work for additional information regarding copyright ownership.
1: The ASF licenses this file to You under the Apache License, Version 2.0
1: (the "License"); you may not use this file except in compliance with
1: the License.  You may obtain a copy of the License at
1:  
1:    http://www.apache.org/licenses/LICENSE-2.0
1:  
1: Unless required by applicable law or agreed to in writing, software
1: distributed under the License is distributed on an "AS IS" BASIS,
1: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: See the License for the specific language governing permissions and
1: limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.replicationTests;
1: 
0: import java.io.IOException;
0: import java.sql.Connection;
0: import java.sql.DriverManager;
0: import java.sql.PreparedStatement;
0: import java.sql.ResultSet;
0: import java.sql.SQLException;
0: import java.sql.Statement;
0: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
0: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class ClientRunner extends BaseJDBCTestCase // FIXME! Use ClientRunner in e.g. Shutdown.... etc.
1: {
1:     private static ReplicationRun repRun = new ReplicationRun("ClientRunner");
1:     
1:     public ClientRunner(String testcaseName)
1:     {
1:         super(testcaseName);
1:     }
1:     
1:     /* */
1:     // Client reads from the same property file as the 'ReplicationRun' test 
1:     // which controls the complete replication test!
1:     static String replicatedDb = null;
1:     static String jvmVersion = null;
1:     static String slaveJvmVersion = null;
1:     static String derbyVersion = null;
1:     static String derbySlaveVersion = null;
1:     static String masterServerHost = null;
1:     static int masterServerPort = -1;
1:     static String slaveServerHost = null;
1:     static int slaveServerPort = -1;
1:     static int slaveReplPort = -1;
1:     static String masterDatabasePath = null;
1:     static String slaveDatabasePath = null;
1:     static String testClientHost = null;
1:     /* */
1:     
1:     public static void initEnvironment()
1:     throws Exception
1:     {
1:         System.out.println("**** ClientRunner.init()");
1:         System.out.println("'ClientRunner' can not be run outside the 'ReplicationRun' framework.");
1:         
1:         repRun.initEnvironment();
1:         testClientHost=      repRun.testClientHost;
1:         derbyVersion =       repRun.derbyVersion;
1:         jvmVersion =         repRun.jvmVersion;
1:         replicatedDb =       repRun.replicatedDb;
1:         masterServerHost =   repRun.masterServerHost;
1:         masterServerPort =   repRun.masterServerPort;
1:         masterDatabasePath = repRun.masterDatabasePath;
1:         slaveServerHost =    repRun.slaveServerHost;
1:         slaveServerPort =    repRun.slaveServerPort;
1:         slaveReplPort =      repRun.slaveReplPort;
1:         slaveDatabasePath =  repRun.slaveDatabasePath;
1:         slaveJvmVersion =    repRun.slaveJvmVersion;
1:         derbySlaveVersion =  repRun.derbySlaveVersion;
1:         
1:     }
1:     
1: }
============================================================================