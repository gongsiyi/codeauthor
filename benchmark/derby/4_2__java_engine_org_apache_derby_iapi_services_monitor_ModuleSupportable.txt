1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.monitor.ModuleSupportable
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
3:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.services.monitor;
1:eac0369: 
1:eac0369: import java.util.Properties;
1:eac0369: 
2:eac0369: /**
1:eac0369: 	Allows a module to check its environment
1:eac0369: 	before it is selected as an implementation.
1:eac0369: */
1:eac0369: 
1:5d24b1a: public interface ModuleSupportable {
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 		See if this implementation can support any attributes that are listed in properties.
1:eac0369: 		This call may be made on a newly created instance before the
1:eac0369: 		boot() method has been called, or after the boot method has
1:eac0369: 		been called for a running module.
1:eac0369: 		<P>
1:eac0369: 		The module can check for attributes in the properties to
1:eac0369: 		see if it can fulfill the required behaviour. E.g. the raw
1:eac0369: 		store may define an attribute called RawStore.Recoverable.
1:eac0369: 		If a temporary raw store is required the property RawStore.recoverable=false
1:eac0369: 		would be added to the properties before calling bootServiceModule. If a
1:eac0369: 		raw store cannot support this attribute its canSupport method would
1:eac0369: 		return null. Also see the Monitor class's prologue to see how the
1:eac0369: 		identifier is used in looking up properties.
1:eac0369: 		<BR><B>Actually a better way maybe to have properties of the form
1:eac0369: 		RawStore.Attributes.mandatory=recoverable,smallfootprint and
1:eac0369: 		RawStore.Attributes.requested=oltp,fast
1:eac0369: 		</B>
1:eac0369: 
1:eac0369: 		@return true if this instance can be used, false otherwise.
1:eac0369: 	*/
1:eac0369: 	public boolean canSupport(Properties properties);
1:eac0369: 
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.monitor.ModuleSupportable
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
1: public interface ModuleSupportable {
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.monitor
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.monitor;
1: 
1: import java.util.Properties;
1: 
1: /**
1: 	Allows a module to check its environment
1: 	before it is selected as an implementation.
1: */
1: 
0: public interface ModuleSupportable { 
1: 
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 
1: 	/**
1: 		See if this implementation can support any attributes that are listed in properties.
1: 		This call may be made on a newly created instance before the
1: 		boot() method has been called, or after the boot method has
1: 		been called for a running module.
1: 		<P>
1: 		The module can check for attributes in the properties to
1: 		see if it can fulfill the required behaviour. E.g. the raw
1: 		store may define an attribute called RawStore.Recoverable.
1: 		If a temporary raw store is required the property RawStore.recoverable=false
1: 		would be added to the properties before calling bootServiceModule. If a
1: 		raw store cannot support this attribute its canSupport method would
1: 		return null. Also see the Monitor class's prologue to see how the
1: 		identifier is used in looking up properties.
1: 		<BR><B>Actually a better way maybe to have properties of the form
1: 		RawStore.Attributes.mandatory=recoverable,smallfootprint and
1: 		RawStore.Attributes.requested=oltp,fast
1: 		</B>
1: 
1: 		@return true if this instance can be used, false otherwise.
1: 	*/
1: 	public boolean canSupport(Properties properties);
1: 
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.monitor
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.services.monitor;
0: 
0: import java.util.Properties;
0: 
0: /**
0: 	Allows a module to check its environment
0: 	before it is selected as an implementation.
0: */
0: 
0: public interface ModuleSupportable { 
0: 
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 
0: 	/**
0: 		See if this implementation can support any attributes that are listed in properties.
0: 		This call may be made on a newly created instance before the
0: 		boot() method has been called, or after the boot method has
0: 		been called for a running module.
0: 		<P>
0: 		The module can check for attributes in the properties to
0: 		see if it can fulfill the required behaviour. E.g. the raw
0: 		store may define an attribute called RawStore.Recoverable.
0: 		If a temporary raw store is required the property RawStore.recoverable=false
0: 		would be added to the properties before calling bootServiceModule. If a
0: 		raw store cannot support this attribute its canSupport method would
0: 		return null. Also see the Monitor class's prologue to see how the
0: 		identifier is used in looking up properties.
0: 		<BR><B>Actually a better way maybe to have properties of the form
0: 		RawStore.Attributes.mandatory=recoverable,smallfootprint and
0: 		RawStore.Attributes.requested=oltp,fast
0: 		</B>
0: 
0: 		@return true if this instance can be used, false otherwise.
0: 	*/
0: 	public boolean canSupport(Properties properties);
0: 
0: }
============================================================================