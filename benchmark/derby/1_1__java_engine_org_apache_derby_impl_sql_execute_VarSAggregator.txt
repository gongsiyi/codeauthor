1:a0e4e78: /*
1:a0e4e78: 
1:a0e4e78:    Derby - Class org.apache.derby.impl.sql.execute.VarSAggregator
1:a0e4e78: 
1:a0e4e78:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a0e4e78:    contributor license agreements.  See the NOTICE file distributed with
1:a0e4e78:    this work for additional information regarding copyright ownership.
1:a0e4e78:    The ASF licenses this file to you under the Apache License, Version 2.0
1:a0e4e78:    (the "License"); you may not use this file except in compliance with
1:a0e4e78:    the License.  You may obtain a copy of the License at
1:a0e4e78: 
1:a0e4e78:       http://www.apache.org/licenses/LICENSE-2.0
1:a0e4e78: 
1:a0e4e78:    Unless required by applicable law or agreed to in writing, software
1:a0e4e78:    distributed under the License is distributed on an "AS IS" BASIS,
1:a0e4e78:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a0e4e78:    See the License for the specific language governing permissions and
1:a0e4e78:    limitations under the License.
1:a0e4e78: 
1:a0e4e78:  */
1:a0e4e78: 
1:a0e4e78: package org.apache.derby.impl.sql.execute;
1:a0e4e78: 
1:a0e4e78: /**
1:a0e4e78:  * <p>
1:a0e4e78:  * This class implements the SQL Standard VAR_SAMP() aggregator,
1:a0e4e78:  * computing the variance over a sample.  It uses the IBM formula described
1:a0e4e78:  * <a href="http://www-01.ibm.com/support/knowledgecenter/ssw_ibm_i_71/db2/rbafzcolvarsamp.htm">here</a>:
1:a0e4e78:  * </p>
1:a0e4e78:  *
1:a0e4e78:  * <blockquote><pre><b>
1:a0e4e78:  * [ sum(x<sub>i</sub><sup>2</sup>) - sum(x<sub>i</sub>)<sup>2</sup>/n ]/(n-1)
1:a0e4e78:  * 
1:a0e4e78:  * where
1:a0e4e78:  * 
1:a0e4e78:  * n is the number of items in the population
1:a0e4e78:  * x<sub>1</sub> ... x<sub>n</sub> are the items in the population
1:a0e4e78:  * </b></pre></blockquote>
1:a0e4e78:  */
1:a0e4e78: public class VarSAggregator<V extends Number> extends VarPAggregator<V> {
1:a0e4e78: 
1:a0e4e78: 	private static final long serialVersionUID = -741087542836440595L;
1:a0e4e78: 
1:a0e4e78: 	@Override
1:a0e4e78: 	protected Double computeVar() {
1:a0e4e78: 		if (count <= 1) return null;
1:a0e4e78: 		// See IBM Forumula:  http://www-01.ibm.com/support/knowledgecenter/ssw_ibm_i_71/db2/rbafzcolvarsamp.htm
1:a0e4e78: 		return (sums.x2 - (Math.pow(sums.x, 2) / count)) / (count - 1);
1:a0e4e78: 	}
1:a0e4e78: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:a0e4e78
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.sql.execute.VarSAggregator
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.impl.sql.execute;
1: 
1: /**
1:  * <p>
1:  * This class implements the SQL Standard VAR_SAMP() aggregator,
1:  * computing the variance over a sample.  It uses the IBM formula described
1:  * <a href="http://www-01.ibm.com/support/knowledgecenter/ssw_ibm_i_71/db2/rbafzcolvarsamp.htm">here</a>:
1:  * </p>
1:  *
1:  * <blockquote><pre><b>
1:  * [ sum(x<sub>i</sub><sup>2</sup>) - sum(x<sub>i</sub>)<sup>2</sup>/n ]/(n-1)
1:  * 
1:  * where
1:  * 
1:  * n is the number of items in the population
1:  * x<sub>1</sub> ... x<sub>n</sub> are the items in the population
1:  * </b></pre></blockquote>
1:  */
1: public class VarSAggregator<V extends Number> extends VarPAggregator<V> {
1: 
1: 	private static final long serialVersionUID = -741087542836440595L;
1: 
1: 	@Override
1: 	protected Double computeVar() {
1: 		if (count <= 1) return null;
1: 		// See IBM Forumula:  http://www-01.ibm.com/support/knowledgecenter/ssw_ibm_i_71/db2/rbafzcolvarsamp.htm
1: 		return (sums.x2 - (Math.pow(sums.x, 2) / count)) / (count - 1);
1: 	}
1: }
============================================================================