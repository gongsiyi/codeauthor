1:87f37d6: /*
2:87f37d6: 
1:87f37d6:    Derby - Class org.apache.derbyTesting.functionTests.tests.ang.LangHarnessJavaTest
1:87f37d6: 
1:87f37d6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:87f37d6:    contributor license agreements.  See the NOTICE file distributed with
1:87f37d6:    this work for additional information regarding copyright ownership.
1:87f37d6:    The ASF licenses this file to You under the Apache License, Version 2.0
1:87f37d6:    (the "License"); you may not use this file except in compliance with
1:87f37d6:    the License.  You may obtain a copy of the License at
1:87f37d6: 
1:87f37d6:       http://www.apache.org/licenses/LICENSE-2.0
1:87f37d6: 
1:87f37d6:    Unless required by applicable law or agreed to in writing, software
1:87f37d6:    distributed under the License is distributed on an "AS IS" BASIS,
1:87f37d6:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:87f37d6:    See the License for the specific language governing permissions and
1:87f37d6:    limitations under the License.
1:87f37d6: 
1:87f37d6:  */
1:87f37d6: package org.apache.derbyTesting.functionTests.tests.lang;
1:87f37d6: 
1:87f37d6: import junit.framework.Test;
1:87f37d6: import org.apache.derbyTesting.functionTests.util.HarnessJavaTest;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:1ae02c9: import org.apache.derbyTesting.junit.TestConfiguration;
1:87f37d6: 
1:87f37d6: /**
1:87f37d6:  * Run a lang '.java' test from the old harness in the Junit infrastructure.
1:87f37d6:  * The test's output is compared to a master file using the facilities
1:87f37d6:  * of the super class CanonTestCase.
1:87f37d6:  * <BR>
1:87f37d6:  * This allows a faster switch to running all tests under a single
1:87f37d6:  * JUnit infrastructure. Running a test using this class does not
1:87f37d6:  * preclude it from being converted to a real JUnit assert based test.
1:87f37d6:  *
1:87f37d6:  */
1:87f37d6: public class LangHarnessJavaTest extends HarnessJavaTest {
1:87f37d6:     
1:87f37d6:     /**
1:87f37d6:      * Tests that run in both client and embedded.
1:87f37d6:      * Ideally both for a test of JDBC api functionality.
1:87f37d6:      */
1:87f37d6:     private static final String[] LANG_TESTS_BOTH =
1:87f37d6:     {
1:2dabb85:         //"AIjdbc",
1:87f37d6:     };
1:87f37d6:     
1:87f37d6:     /**
1:87f37d6:      * Tests that only run in embedded.
1:87f37d6:      */
1:87f37d6:     private static final String[] LANG_TESTS_EMEBDDED=
1:87f37d6:     {
1:87f37d6:         // old derbylang.runall suite
1:6af5d79:         //"AIjdbc", CONVERTED (jdbcapi/AIjdbcTest)
1:6af5d79:         //"bug4356", CONVERTED (Bug4356Test)
1:6af5d79:         //"bug5052rts", CONVERTED (Bug5052rtsTest)
1:6af5d79:         //"bug5054", CONVERTED (Bug5054Test)
1:6af5d79:         //"casting", CONVERTED (CastingTest)
1:6af5d79:         //"closed", CONVERTED/DISCARDED (DatabaseMetadataTest - DERBY-2514)
1:87f37d6:         "concateTests",
1:6af5d79:         // "currentof", CONVERTED (CurrentOfTest)
1:6af5d79:         // "cursor", CONVERTED: (CursorTest)
1:87f37d6:         "dbManagerLimits",
1:855480f:         //"deadlockMode", CONVERTED (DeadlockModeTest)
1:6af5d79:         // "declareGlobalTempTableJava", CONVERTED DeclareGlobalTempTableJavaTest)
1:6af5d79:         // "declareGlobalTempTableJavaJDBC30", CONVERTED DeclareGlobalTempTableJavaJDBC30Test)
1:6af5d79:         // "errorStream", CONVERTED (engine/errorStreamTest)
1:6af5d79:         // "forbitdata", CONVERTED (ForBitDataTest)
1:6af5d79:         // "grantRevoke", CONVERTED (GrantRevokeTest)
1:87f37d6:         "JitTest",
1:6af5d79:         // "logStream", CONVERTED (engine/errorStreamTest)
1:87f37d6:         // "maxMemPerTab", TODO: investigate/convert
1:87f37d6:         // "outparams", TODO: investigate/convert
1:6af5d79:         // "procedure", CONVERTED (LangProcedureTest)
1:5e94b1c:         // "repeat", CONVERTED (StatementPlanCacheTest)
1:87f37d6:         "simpleThreadWrapper",
1:6af5d79:         // "SpillHash", CONVERTED (SpillHashTest)
1:6af5d79:         // "stmtCache3", DISCARDED (StatementPlanCacheTest - DERBY-2332)
1:6af5d79:         // "streams", CONVERTED (StreamsTest)
1:6af5d79:         // "timestampArith", CONVERTED (TimeStampArithTest)
1:6af5d79:         // "triggerStream", DISCARDED (TriggerTest - DERBY-1102)
1:6af5d79:         // "unaryArithmeticDynamicParameter", CONVERTED (UnaryArithmeticParameterTest)
1:6af5d79:         // "updateCursor", CONVERTED (UpdateCursorTest)
1:87f37d6:         // "wisconsin", TODO: investigate/convert - needs ext files. 
1:6af5d79:         // "ShutdownDatabase", CONVERTED (ShutdownDatabaseTest)
1:87f37d6:         };
1:87f37d6:     
1:87f37d6:     private LangHarnessJavaTest(String name) {
1:87f37d6:         super(name);
1:87f37d6:      }
1:87f37d6: 
1:87f37d6:     protected String getArea() {
1:87f37d6:         return "lang";
1:87f37d6:     }
1:0ce4bbb: 
1:0ce4bbb:     /**
1:0ce4bbb:      * Run a set of language tests (.java files).
1:0ce4bbb:      *
1:0ce4bbb:      * @param args names of the tests to run (the .java suffix should not be
1:0ce4bbb:      * included in the name of a test)
1:0ce4bbb:      */
1:0ce4bbb:     public static void main(String[] args) {
1:0ce4bbb:         junit.textui.TestRunner.run(baseSuite("main()", args));
1:0ce4bbb:     }
1:87f37d6:     
1:87f37d6:     public static Test suite()
1:87f37d6:     {
1:1ae02c9:         BaseTestSuite suite =
1:1ae02c9:             new BaseTestSuite("jdbcapi: old harness java tests");
1:1ae02c9: 
1:87f37d6:         suite.addTest(baseSuite("embedded", LANG_TESTS_BOTH));
1:87f37d6:         suite.addTest(baseSuite("embedded", LANG_TESTS_EMEBDDED));
1:87f37d6:         
1:2dabb85:         suite.addTest(TestConfiguration.clientServerDecorator(
1:2dabb85:                 baseSuite("clientserver", LANG_TESTS_BOTH)));
1:87f37d6:         return suite;
1:87f37d6:     }
1:87f37d6:    
1:87f37d6:     private static Test baseSuite(String which, String[] set) {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("lang: " + which);
1:87f37d6:         for (int i = 0; i < set.length; i++)
1:87f37d6:         {
1:87f37d6:             suite.addTest(decorate(new LangHarnessJavaTest(set[i])));
1:87f37d6:         }
1:87f37d6:         return suite;
1:87f37d6:     }
1:87f37d6: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
1: import org.apache.derbyTesting.junit.TestConfiguration;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite =
1:             new BaseTestSuite("jdbcapi: old harness java tests");
1: 
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("lang: " + which);
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:6af5d79
/////////////////////////////////////////////////////////////////////////
1:         //"AIjdbc", CONVERTED (jdbcapi/AIjdbcTest)
1:         //"bug4356", CONVERTED (Bug4356Test)
1:         //"bug5052rts", CONVERTED (Bug5052rtsTest)
1:         //"bug5054", CONVERTED (Bug5054Test)
1:         //"casting", CONVERTED (CastingTest)
1:         //"closed", CONVERTED/DISCARDED (DatabaseMetadataTest - DERBY-2514)
1:         // "currentof", CONVERTED (CurrentOfTest)
1:         // "cursor", CONVERTED: (CursorTest)
1:         // "declareGlobalTempTableJava", CONVERTED DeclareGlobalTempTableJavaTest)
1:         // "declareGlobalTempTableJavaJDBC30", CONVERTED DeclareGlobalTempTableJavaJDBC30Test)
1:         // "errorStream", CONVERTED (engine/errorStreamTest)
1:         // "forbitdata", CONVERTED (ForBitDataTest)
1:         // "grantRevoke", CONVERTED (GrantRevokeTest)
1:         // "logStream", CONVERTED (engine/errorStreamTest)
1:         // "procedure", CONVERTED (LangProcedureTest)
1:         // "SpillHash", CONVERTED (SpillHashTest)
1:         // "stmtCache3", DISCARDED (StatementPlanCacheTest - DERBY-2332)
1:         // "streams", CONVERTED (StreamsTest)
1:         // "timestampArith", CONVERTED (TimeStampArithTest)
1:         // "triggerStream", DISCARDED (TriggerTest - DERBY-1102)
1:         // "unaryArithmeticDynamicParameter", CONVERTED (UnaryArithmeticParameterTest)
1:         // "updateCursor", CONVERTED (UpdateCursorTest)
1:         // "ShutdownDatabase", CONVERTED (ShutdownDatabaseTest)
commit:b0ff7cf
/////////////////////////////////////////////////////////////////////////
commit:2dabb85
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derbyTesting.junit.TestConfiguration;
/////////////////////////////////////////////////////////////////////////
0:         "AIjdbc",
/////////////////////////////////////////////////////////////////////////
1:         //"AIjdbc",
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TestConfiguration.clientServerDecorator(
1:                 baseSuite("clientserver", LANG_TESTS_BOTH)));
commit:487531a
/////////////////////////////////////////////////////////////////////////
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:015b39a
/////////////////////////////////////////////////////////////////////////
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:855480f
/////////////////////////////////////////////////////////////////////////
1:         //"deadlockMode", CONVERTED (DeadlockModeTest)
commit:8a6cb02
/////////////////////////////////////////////////////////////////////////
0:         //"bug4356",
0:         //"bug5052rts",
0:         //"bug5054",
commit:0049cca
/////////////////////////////////////////////////////////////////////////
commit:32d1091
/////////////////////////////////////////////////////////////////////////
0:         //"AIjdbc",
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:0ce4bbb
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Run a set of language tests (.java files).
1:      *
1:      * @param args names of the tests to run (the .java suffix should not be
1:      * included in the name of a test)
1:      */
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(baseSuite("main()", args));
1:     }
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:5e94b1c
/////////////////////////////////////////////////////////////////////////
1:         // "repeat", CONVERTED (StatementPlanCacheTest)
commit:87f37d6
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.ang.LangHarnessJavaTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.functionTests.util.HarnessJavaTest;
1: 
1: /**
1:  * Run a lang '.java' test from the old harness in the Junit infrastructure.
1:  * The test's output is compared to a master file using the facilities
1:  * of the super class CanonTestCase.
1:  * <BR>
1:  * This allows a faster switch to running all tests under a single
1:  * JUnit infrastructure. Running a test using this class does not
1:  * preclude it from being converted to a real JUnit assert based test.
1:  *
1:  */
1: public class LangHarnessJavaTest extends HarnessJavaTest {
1:     
1:     /**
1:      * Tests that run in both client and embedded.
1:      * Ideally both for a test of JDBC api functionality.
1:      */
1:     private static final String[] LANG_TESTS_BOTH =
1:     {
1:     };
1:     
1:     /**
1:      * Tests that only run in embedded.
1:      */
1:     private static final String[] LANG_TESTS_EMEBDDED=
1:     {
1:         // old derbylang.runall suite
0:         "AIjdbc",
0:         // "AggregateClassLoading", TODO: investigate/convert
0:         "CharUTF8",
0:         "bug4356",
0:         "bug5052rts",
0:         "bug5054",
0:         //"casting", TODO: investigate/convert, uses TestUtil.isNetFramework()
0:         //"closed", TODO: investigate/convert
0:         // "coalesceTests", TODO: investigate/convert
1:         "concateTests",
0:         // "currentof", being converted
0:         // "cursor", TODO: investigate/convert
1:         "dbManagerLimits",
0:         "deadlockMode",
0:         // "declareGlobalTempTableJava", TODO: investigate/convert
0:         // "declareGlobalTempTableJavaJDBC30", TODO: uses TestUtil.isNetFramework()
0:         // "errorStream", TODO: investigate/convert
0:         // "forbitdata", TODO: investigate/convert
0:         // "grantRevoke", TODO: uses TestUtil.isNetFramework()
0:         // "holdCursorJavaReflection", TODO don't care holdability supported.
1:         "JitTest",
0:         // "logStream", TODO: investigate/convert
0:         "longStringColumn",
1:         // "maxMemPerTab", TODO: investigate/convert
1:         // "outparams", TODO: investigate/convert
0:         // "procedure", TODO: uses TestUtil.isNetFramework()
0:         "repeat", 
1:         "simpleThreadWrapper",
0:         // "SpillHash", TODO: calls System.exit
0:         // "stmtCache3", TODO: investigate/convert
0:         // "streams",TODO: convert
0:         // "timestampArith", TODO calls exit?
0:         // "triggerStream", TODO: investigate/convert - simple master update?
0:         // "unaryArithmeticDynamicParameter", TODO: investigate/convert - simple master update?
0:         // "updateCursor", TODO: investigate/convert 
1:         // "wisconsin", TODO: investigate/convert - needs ext files. 
0:         // "ShutdownDatabase", TODO: convert
1:         };
1:     
1:     private LangHarnessJavaTest(String name) {
1:         super(name);
1:      }
1: 
1:     protected String getArea() {
1:         return "lang";
1:     }
1:     
1:     public static Test suite()
1:     {
0:         TestSuite suite = new TestSuite("jdbcapi: old harness java tests");
1:         suite.addTest(baseSuite("embedded", LANG_TESTS_BOTH));
1:         suite.addTest(baseSuite("embedded", LANG_TESTS_EMEBDDED));
1:         
0:         //suite.addTest(TestConfiguration.clientServerDecorator(
0:         //        baseSuite("clientserver", LANG_TESTS_BOTH)));
1:         return suite;
1:     }
1:    
1:     private static Test baseSuite(String which, String[] set) {
0:         TestSuite suite = new TestSuite("lang: " + which);
1:         for (int i = 0; i < set.length; i++)
1:         {
1:             suite.addTest(decorate(new LangHarnessJavaTest(set[i])));
1:         }
1:         return suite;
1:     }
1: }
============================================================================