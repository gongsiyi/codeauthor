1:74d0488: /*
1:74d0488:  * Class org.apache.derbyTesting.functionTests.tests.lang.Derby5005Test
1:74d0488:  *
1:74d0488:  * Licensed to the Apache Software Foundation (ASF) under one
1:74d0488:  * or more contributor license agreements.  See the NOTICE file
1:74d0488:  * distributed with this work for additional information
1:74d0488:  * regarding copyright ownership.  The ASF licenses this file
1:74d0488:  * to you under the Apache License, Version 2.0 (the
1:74d0488:  * "License"); you may not use this file except in compliance
1:74d0488:  * with the License.  You may obtain a copy of the License at
1:74d0488:  *
1:74d0488:  *   http://www.apache.org/licenses/LICENSE-2.0
1:74d0488:  *
1:74d0488:  * Unless required by applicable law or agreed to in writing,
1:74d0488:  * software distributed under the License is distributed on an
1:74d0488:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:74d0488:  * KIND, either express or implied.  See the License for the
1:74d0488:  * specific language governing permissions and limitations
1:74d0488:  * under the License.
1:74d0488:  */
1:74d0488: 
1:74d0488: package org.apache.derbyTesting.functionTests.tests.lang;
1:74d0488: 
1:74d0488: import java.sql.SQLException;
1:74d0488: import java.sql.Statement;
1:74d0488: import junit.framework.Test;
1:74d0488: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:1ae02c9: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1:74d0488: import org.apache.derbyTesting.junit.JDBC;
1:74d0488: 
1:74d0488: public class Derby5005Test extends BaseJDBCTestCase {
1:74d0488: 
1:74d0488:     public Derby5005Test(String name) {
1:74d0488:         super(name);
1:74d0488:     }
1:74d0488: 
1:74d0488:     /**
1:74d0488:      * Construct top level suite in this JUnit test
1:74d0488:      *
1:74d0488:      * @return A suite containing embedded and client suites.
1:74d0488:      */
1:74d0488:     public static Test suite()
1:74d0488:     {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("Derby5005Test");
1:74d0488: 
1:74d0488:         suite.addTest(makeSuite());
1:74d0488:         // suite.addTest(
1:74d0488:         //      TestConfiguration.clientServerDecorator(makeSuite()));
1:74d0488: 
1:74d0488:         return suite;
1:74d0488:     }
1:74d0488: 
1:74d0488:     /**
1:74d0488:      * Construct suite of tests
1:74d0488:      *
1:74d0488:      * @return A suite containing the test cases.
1:74d0488:      */
1:74d0488:     private static Test makeSuite()
1:74d0488:     {
1:74d0488:         return new CleanDatabaseTestSetup(
1:1ae02c9:             new BaseTestSuite(Derby5005Test.class)) {
1:74d0488:                 protected void decorateSQL(Statement s)
1:74d0488:                         throws SQLException {
1:74d0488:                     getConnection().setAutoCommit(false);
1:74d0488: 
1:74d0488:                     s.execute("create table app.a (a integer)");
1:74d0488:                     s.execute("create view app.v as select * from app.a");
1:74d0488:                     s.execute("insert into app.a (a) values(1)");
1:74d0488: 
1:74d0488:                     getConnection().commit();
1:74d0488:                 }
1:74d0488:             };
1:74d0488:     }
1:74d0488: 
1:74d0488:     public void testInsertSelectOrderBy5005() throws SQLException {
1:74d0488: 
1:74d0488:         Statement s = createStatement();
1:74d0488: 
1:74d0488:         JDBC.assertFullResultSet(
1:74d0488:             s.executeQuery("select app.a.a from app.a where app.a.a <> 2 " +
1:74d0488:                            "order by app.a.a asc"),
1:74d0488:             new String[][]{{"1"}});
1:74d0488: 
1:74d0488:         JDBC.assertFullResultSet(
1:74d0488:             s.executeQuery("select app.v.a from app.v where app.v.a <> 2 " +
1:74d0488:                            "order by v.a asc"),
1:74d0488:             new String[][]{{"1"}});
1:74d0488: 
1:74d0488:         // Next query fails in DERBY-5005:
1:74d0488:         JDBC.assertFullResultSet(
1:74d0488:             s.executeQuery("select v.a from app.v where v.a <> 2 " +
1:74d0488:                            "order by app.v.a asc"),
1:74d0488:             new String[][]{{"1"}});
1:74d0488:     }
1:74d0488: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
1: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("Derby5005Test");
/////////////////////////////////////////////////////////////////////////
1:             new BaseTestSuite(Derby5005Test.class)) {
commit:74d0488
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Class org.apache.derbyTesting.functionTests.tests.lang.Derby5005Test
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.SQLException;
1: import java.sql.Statement;
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
0: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.JDBC;
0: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class Derby5005Test extends BaseJDBCTestCase {
1: 
1:     public Derby5005Test(String name) {
1:         super(name);
1:     }
1: 
1:     /**
1:      * Construct top level suite in this JUnit test
1:      *
1:      * @return A suite containing embedded and client suites.
1:      */
1:     public static Test suite()
1:     {
0:         TestSuite suite = new TestSuite("Derby5005Test");
1: 
1:         suite.addTest(makeSuite());
1:         // suite.addTest(
1:         //      TestConfiguration.clientServerDecorator(makeSuite()));
1: 
1:         return suite;
1:     }
1: 
1:     /**
1:      * Construct suite of tests
1:      *
1:      * @return A suite containing the test cases.
1:      */
1:     private static Test makeSuite()
1:     {
1:         return new CleanDatabaseTestSetup(
0:             new TestSuite(Derby5005Test.class)) {
1:                 protected void decorateSQL(Statement s)
1:                         throws SQLException {
1:                     getConnection().setAutoCommit(false);
1: 
1:                     s.execute("create table app.a (a integer)");
1:                     s.execute("create view app.v as select * from app.a");
1:                     s.execute("insert into app.a (a) values(1)");
1: 
1:                     getConnection().commit();
1:                 }
1:             };
1:     }
1: 
1:     public void testInsertSelectOrderBy5005() throws SQLException {
1: 
1:         Statement s = createStatement();
1: 
1:         JDBC.assertFullResultSet(
1:             s.executeQuery("select app.a.a from app.a where app.a.a <> 2 " +
1:                            "order by app.a.a asc"),
1:             new String[][]{{"1"}});
1: 
1:         JDBC.assertFullResultSet(
1:             s.executeQuery("select app.v.a from app.v where app.v.a <> 2 " +
1:                            "order by v.a asc"),
1:             new String[][]{{"1"}});
1: 
1:         // Next query fails in DERBY-5005:
1:         JDBC.assertFullResultSet(
1:             s.executeQuery("select v.a from app.v where v.a <> 2 " +
1:                            "order by app.v.a asc"),
1:             new String[][]{{"1"}});
1:     }
1: }
============================================================================