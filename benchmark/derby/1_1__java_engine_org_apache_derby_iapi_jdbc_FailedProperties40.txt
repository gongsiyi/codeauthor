1:7bac3b3: /*
3:7bac3b3:  
1:7bac3b3:    Derby - Class org.apache.derby.impl.jdbc.FailedProperties40
1:7bac3b3:  
1:2431ece:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2431ece:    contributor license agreements.  See the NOTICE file distributed with
1:2431ece:    this work for additional information regarding copyright ownership.
1:2431ece:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2431ece:    (the "License"); you may not use this file except in compliance with
1:2431ece:    the License.  You may obtain a copy of the License at
1:7bac3b3:  
1:7bac3b3:       http://www.apache.org/licenses/LICENSE-2.0
1:7bac3b3:  
1:7bac3b3:    Unless required by applicable law or agreed to in writing, software
1:7bac3b3:    distributed under the License is distributed on an "AS IS" BASIS,
1:7bac3b3:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7bac3b3:    See the License for the specific language governing permissions and
1:7bac3b3:    limitations under the License.
1:7bac3b3:  
1:7bac3b3:  */
1:7bac3b3: 
1:7bac3b3: package org.apache.derby.iapi.jdbc;
1:7bac3b3: 
1:7bac3b3: import java.util.Properties;
1:7bac3b3: import java.util.Enumeration;
1:7c3b39d: import java.util.Map;
1:7c3b39d: import java.util.HashMap;
1:7c3b39d: import java.sql.SQLClientInfoException;
1:7c3b39d: import java.sql.ClientInfoStatus;
1:7bac3b3: 
1:7bac3b3:     /**
1:7bac3b3:      * Class <code>FailedProperties40</code> is a helper class for the
1:7c3b39d:      * SQLClientInfoException. It provides convenient access to data
1:7c3b39d:      * that is needed when constructing SQLClientInfoExceptions. Should
1:7bac3b3:      * be kept in sync with its client side counter part
1:7bac3b3:      * (org.apache.derby.client.am.FailedProperties40).
1:7c3b39d:      * @see java.sql.SQLClientInfoException
1:7bac3b3:      * @see org.apache.derby.client.am.FailedProperties40
1:7bac3b3:      */
1:7bac3b3: public class FailedProperties40 {
1:7c3b39d:     private final HashMap<String,ClientInfoStatus> failedProps_ = 
1:7c3b39d: 	new HashMap<String,ClientInfoStatus>();
1:7bac3b3:     private final String firstKey_;
1:7bac3b3:     private final String firstValue_;
1:7c3b39d: 
1:7c3b39d:     /**
1:7c3b39d:      * Helper method that creates a Propery object from the name-value
1:7c3b39d:      * pair given as arguments.
1:7c3b39d:      * @param name property key
1:7c3b39d:      * @param value property value
1:7c3b39d:      * @return the created <code>Properties</code> object
1:7c3b39d:      */
1:7c3b39d:     public static Properties makeProperties(String name, String value) {
1:7c3b39d: 	Properties p = new Properties();
1:7c3b39d: 	if (name != null || value != null)
1:7c3b39d: 	    p.setProperty(name, value);
1:7c3b39d: 	return p;
1:7c3b39d:     }
1:7bac3b3:     /**
1:7bac3b3:      * Creates a new <code>FailedProperties40</code> instance. Since
1:7bac3b3:      * Derby doesn't support any properties, all the keys from the
1:7bac3b3:      * <code>props</code> parameter are added to the
1:7bac3b3:      * <code>failedProps_</code> member with value
1:7bac3b3:      * REASON_UNKNOWN_PROPERTY.
1:7bac3b3:      *
1:7bac3b3:      * @param props a <code>Properties</code> value. Can be null or empty
1:7bac3b3:      */
1:7bac3b3:     public FailedProperties40(Properties props) {
1:7bac3b3:         if (props == null || props.isEmpty()) {
1:7bac3b3:             firstKey_ = null;
1:7bac3b3:             firstValue_ = null;
1:7bac3b3:             return;
1:7bac3b3:         }
1:7bac3b3:         Enumeration e = props.keys();
1:7bac3b3:         firstKey_ = (String)e.nextElement();
1:7bac3b3:         firstValue_ = props.getProperty(firstKey_);
1:7c3b39d:         failedProps_.put(firstKey_, ClientInfoStatus.REASON_UNKNOWN_PROPERTY);
1:7bac3b3:         while (e.hasMoreElements()) {
1:7c3b39d:             failedProps_.put((String)e.nextElement(), 
1:7c3b39d: 			     ClientInfoStatus.REASON_UNKNOWN_PROPERTY);
1:7bac3b3:         }
1:7bac3b3:     }
1:7bac3b3: 
1:7bac3b3:     /**
1:7c3b39d:      * <code>getProperties</code> provides a
1:dbed020:      * <code>Map&glt;String,ClientInfoStatus&gt;</code> object describing the
1:7c3b39d:      * failed properties (as specified in the javadoc for
1:7c3b39d:      * java.sql.SQLClientInfoException).
1:7bac3b3:      *
1:dbed020:      * @return a <code>Map&lt;String,ClientInfoStatus&gt;</code> object with
1:7c3b39d:      * the failed property keys and the reason why each failed
1:7bac3b3:      */
1:7c3b39d:     public Map<String,ClientInfoStatus> getProperties() { return failedProps_; }
1:7bac3b3: 
1:7bac3b3:     /**
1:7bac3b3:      * <code>getFirstKey</code> returns the first property key. Used
1:7c3b39d:      * when SQLClientInfoException is thrown with a parameterized error
1:7bac3b3:      * message.
1:7bac3b3:      *
1:7bac3b3:      * @return a <code>String</code> value
1:7bac3b3:      */
1:7bac3b3:     public String getFirstKey() { return firstKey_; }
1:7bac3b3: 
1:7bac3b3:     /**
1:7bac3b3:      * <code>getFirstValue</code> returns the first property value. Used
1:7c3b39d:      * when SQLClientInfoException is thrown with a parameterized error
1:7bac3b3:      * message.
1:7bac3b3:      *
1:7bac3b3:      * @return a <code>String</code> value
1:7bac3b3:      */
1:7bac3b3:     public String getFirstValue() { return firstValue_; }
1:7bac3b3: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:dbed020
/////////////////////////////////////////////////////////////////////////
1:      * <code>Map&glt;String,ClientInfoStatus&gt;</code> object describing the
1:      * @return a <code>Map&lt;String,ClientInfoStatus&gt;</code> object with
commit:2431ece
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:7c3b39d
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: import java.util.HashMap;
1: import java.sql.SQLClientInfoException;
1: import java.sql.ClientInfoStatus;
1:      * SQLClientInfoException. It provides convenient access to data
1:      * that is needed when constructing SQLClientInfoExceptions. Should
1:      * @see java.sql.SQLClientInfoException
1:     private final HashMap<String,ClientInfoStatus> failedProps_ = 
1: 	new HashMap<String,ClientInfoStatus>();
1: 
1:     /**
1:      * Helper method that creates a Propery object from the name-value
1:      * pair given as arguments.
1:      * @param name property key
1:      * @param value property value
1:      * @return the created <code>Properties</code> object
1:      */
1:     public static Properties makeProperties(String name, String value) {
1: 	Properties p = new Properties();
1: 	if (name != null || value != null)
1: 	    p.setProperty(name, value);
1: 	return p;
1:     }
/////////////////////////////////////////////////////////////////////////
1:         failedProps_.put(firstKey_, ClientInfoStatus.REASON_UNKNOWN_PROPERTY);
1:             failedProps_.put((String)e.nextElement(), 
1: 			     ClientInfoStatus.REASON_UNKNOWN_PROPERTY);
1:      * <code>getProperties</code> provides a
0:      * <code>Map<String,ClientInfoStatus></code> object describing the
1:      * failed properties (as specified in the javadoc for
1:      * java.sql.SQLClientInfoException).
0:      * @return a <code>Map<String,ClientInfoStatus></code> object with
1:      * the failed property keys and the reason why each failed
1:     public Map<String,ClientInfoStatus> getProperties() { return failedProps_; }
1:      * when SQLClientInfoException is thrown with a parameterized error
/////////////////////////////////////////////////////////////////////////
1:      * when SQLClientInfoException is thrown with a parameterized error
commit:7bac3b3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derby.impl.jdbc.FailedProperties40
1:  
0:    Copyright 2006 The Apache Software Foundation or its licensors, as applicable.
1:  
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derby.iapi.jdbc;
1: 
1: import java.util.Properties;
1: import java.util.Enumeration;
0: import java.sql.ClientInfoException;
1: 
1:     /**
1:      * Class <code>FailedProperties40</code> is a helper class for the
0:      * ClientInfoException. It provides convenient access to data
0:      * that is needed when constructing ClientInfoExceptions. Should
1:      * be kept in sync with its client side counter part
1:      * (org.apache.derby.client.am.FailedProperties40).
1:      * @see org.apache.derby.client.am.FailedProperties40
1:      */
1: public class FailedProperties40 {
0:     private final Properties failedProps_ = new Properties();
1:     private final String firstKey_;
1:     private final String firstValue_;
1:     
1:     /**
1:      * Creates a new <code>FailedProperties40</code> instance. Since
1:      * Derby doesn't support any properties, all the keys from the
1:      * <code>props</code> parameter are added to the
1:      * <code>failedProps_</code> member with value
1:      * REASON_UNKNOWN_PROPERTY.
1:      *
1:      * @param props a <code>Properties</code> value. Can be null or empty
1:      */
1:     public FailedProperties40(Properties props) {
1:         if (props == null || props.isEmpty()) {
1:             firstKey_ = null;
1:             firstValue_ = null;
1:             return;
1:         }
1:         Enumeration e = props.keys();
1:         firstKey_ = (String)e.nextElement();
1:         firstValue_ = props.getProperty(firstKey_);
0:         failedProps_.setProperty(firstKey_, ""+ClientInfoException.
0:                                  REASON_UNKNOWN_PROPERTY);
1:         while (e.hasMoreElements()) {
0:             failedProps_.setProperty((String)e.nextElement(), 
0:                                      ""+ClientInfoException.
0:                                      REASON_UNKNOWN_PROPERTY);
1:         }
1:     }
1: 
1:     /**
0:      * <code>getProperties</code> provides a <code>Properties</code>
0:      * object describing the failed properties (as specified in the
0:      * javadoc for java.sql.ClientInfoException).
1:      *
0:      * @return a <code>Properties</code> object with the failed
0:      * property keys and the reason why each failed
1:      */
0:     public Properties getProperties() { return failedProps_; }
1: 
1:     /**
1:      * <code>getFirstKey</code> returns the first property key. Used
0:      * when ClientInfoException is thrown with a parameterized error
1:      * message.
1:      *
1:      * @return a <code>String</code> value
1:      */
1:     public String getFirstKey() { return firstKey_; }
1: 
1:     /**
1:      * <code>getFirstValue</code> returns the first property value. Used
0:      * when ClientInfoException is thrown with a parameterized error
1:      * message.
1:      *
1:      * @return a <code>String</code> value
1:      */
1:     public String getFirstValue() { return firstValue_; }
1: }
============================================================================