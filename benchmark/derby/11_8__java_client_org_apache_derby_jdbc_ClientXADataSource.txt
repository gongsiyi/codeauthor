1:33776ff: /*
1:8fcae92: 
1:33776ff:    Derby - Class org.apache.derby.jdbc.ClientXADataSource
10:33776ff: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:33776ff: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:33776ff: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:33776ff: 
1:8fcae92: */
1:33776ff: 
1:33776ff: package org.apache.derby.jdbc;
1:33776ff: 
1:a12152a: import java.sql.SQLException;
1:70f7692: import javax.sql.XAConnection;
1:33776ff: 
1:54792be: /**
1:54792be:  * <p>
1:2913612:  * This datasource is suitable for a client/server use of Derby,
1:fd584b0:  * running on full Java SE 6 and higher, corresponding to JDBC 4.0 and higher.
1:54792be:  * </p>
1:54792be:  * An XADataSource is a factory for XAConnection objects.  It represents a
1:54792be:  * RM in a DTP environment.  An object that implements the XADataSource
1:54792be:  * interface is typically registered with a JNDI service provider.
1:54792be:  * <P>
1:54792be:  * ClientXADataSource automatically supports the correct JDBC specification version
1:54792be:  * for the Java Virtual Machine's environment.
1:54792be:  * <UL>
1:04fc939:  * <LI> JDBC 4.2 - Java SE 8 </LI>
1:04fc939:  * <LI> JDBC 4.1 - Java SE 7 </LI>
1:04fc939:  * <LI> JDBC 4.0 - Java SE 6 </LI>
1:54792be:  * </UL>
1:54792be:  *
1:54792be:  * <P>ClientXADataSource is serializable and referenceable.</p>
1:54792be:  *
1:54792be:  * <P>See ClientDataSource for DataSource properties.</p>
1:54792be:  */
1:8269b78: public class ClientXADataSource
1:8269b78:     extends ClientDataSource implements ClientXADataSourceInterface {
1:8269b78: 
1:33776ff:     public static final String className__ = "org.apache.derby.jdbc.ClientXADataSource";
1:33776ff: 
1:33776ff:     // following serialVersionUID was generated by the JDK's serialver program
1:33776ff:     // verify it everytime that ClientXADataSource is modified
1:02d3427:     private static final long serialVersionUID = 7057075094707674880L;
1:33776ff: 
1:70f7692:     public ClientXADataSource() {
1:b3bfe12:     }
1:a12152a: 
1:7863d83:     @Override
1:02d3427:     public XAConnection getXAConnection() throws SQLException {
1:8269b78:         return getXAConnectionMinion();
1:17d490d:     }
1:ce40a31: 
1:7863d83:     @Override
1:02d3427:     public XAConnection getXAConnection(String user, String password) throws SQLException {
1:8269b78:         return getXAConnectionMinion(user, password);
1:a12152a:     }    
1:ce40a31: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4ba78a4
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:a12152a
/////////////////////////////////////////////////////////////////////////
0: import java.sql.ShardingKeyBuilder;
1: import java.sql.SQLException;
0: import java.sql.SQLFeatureNotSupportedException;
/////////////////////////////////////////////////////////////////////////
1: 
0:     /** Added by Java 9 */
0:     public ShardingKeyBuilder createShardingKeyBuilder()
0:         throws SQLException
0:     {
0:         throw new java.sql.SQLFeatureNotSupportedException();
1:     }
commit:80d39ee
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:ce40a31
/////////////////////////////////////////////////////////////////////////
0: import java.sql.ShardingKeyBuilder;
0: import java.sql.SQLException;
0: import java.sql.SQLFeatureNotSupportedException;
/////////////////////////////////////////////////////////////////////////
1: 
0:     /** Added by Java 9 */
0:     public ShardingKeyBuilder createShardingKeyBuilder()
0:         throws SQLException
0:     {
0:         throw new java.sql.SQLFeatureNotSupportedException();
1:     }
commit:fd584b0
/////////////////////////////////////////////////////////////////////////
1:  * running on full Java SE 6 and higher, corresponding to JDBC 4.0 and higher.
commit:ceb7210
/////////////////////////////////////////////////////////////////////////
0: public class ClientXADataSource extends ClientDataSource implements XADataSource {
commit:54792be
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * <p>
0:  * This is Derby's network XADataSource for use with JDBC3.0 and JDBC2.0.
1:  * </p>
1:  * An XADataSource is a factory for XAConnection objects.  It represents a
1:  * RM in a DTP environment.  An object that implements the XADataSource
1:  * interface is typically registered with a JNDI service provider.   	
1:  * <P>
1:  * ClientXADataSource automatically supports the correct JDBC specification version
1:  * for the Java Virtual Machine's environment.
1:  * <UL>
0:  * <LI> JDBC 3.0 - Java 2 - JDK 1.4, J2SE 5.0
0:  * <LI> JDBC 2.0 - Java 2 - JDK 1.2,1.3
1:  * </UL>
1:  *
1:  * <P>ClientXADataSource is serializable and referenceable.</p>
1:  *
1:  * <P>See ClientDataSource for DataSource properties.</p>
1:  */
commit:17d490d
/////////////////////////////////////////////////////////////////////////
0: import javax.sql.DataSource;
/////////////////////////////////////////////////////////////////////////
0: public class ClientXADataSource extends ClientBaseDataSource implements XADataSource {
/////////////////////////////////////////////////////////////////////////
1:     }    
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:7863d83
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
commit:b565f41
/////////////////////////////////////////////////////////////////////////
commit:cb88209
/////////////////////////////////////////////////////////////////////////
0:  * If running on Java SE 7 or higher, consider a more capable data source.
commit:2913612
/////////////////////////////////////////////////////////////////////////
1:  * This datasource is suitable for a client/server use of Derby,
0:  * running on full Java SE 5 or 6, corresponding to JDBC 3.0 and 4.0.
0:  * If running on Java SE 7 og higher, consider a more capable data source.
commit:8269b78
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public class ClientXADataSource
1:     extends ClientDataSource implements ClientXADataSourceInterface {
1: 
/////////////////////////////////////////////////////////////////////////
1:         return getXAConnectionMinion();
1:         return getXAConnectionMinion(user, password);
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:04fc939
/////////////////////////////////////////////////////////////////////////
0:  * <p>
0:  * running on full Java SE 6, 7 or 8, corresponding to JDBC 4.0, 4.1 and 4.2.
/////////////////////////////////////////////////////////////////////////
1:  * <LI> JDBC 4.2 - Java SE 8 </LI>
1:  * <LI> JDBC 4.1 - Java SE 7 </LI>
1:  * <LI> JDBC 4.0 - Java SE 6 </LI>
commit:7f6e8aa
/////////////////////////////////////////////////////////////////////////
0:  * interface is typically registered with a JNDI service provider.
commit:5ef7a0d
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.client.net.NetLogWriter;
0:  * This is Derby's network XADataSource for use with JDBC 3.0 and JDBC 4.0.
/////////////////////////////////////////////////////////////////////////
0:  * <LI> JDBC 4.0 - Java SE 6
0:  * <LI> JDBC 3.0 - J2SE 5.0
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:6eb29f6
/////////////////////////////////////////////////////////////////////////
0:  * interface is typically registered with a JNDI service provider.       
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:b3bfe12
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         NetLogWriter dncLogWriter = null;
0:         try {
0:             updateDataSourceValues(
0:                     tokenizeAttributes(getConnectionAttributes(), null));
0:             dncLogWriter = (NetLogWriter)
0:                     super.computeDncLogWriterForNewConnection("_xads");
0:             return getXAConnectionX(
0:                     dncLogWriter, this, getUser(), getPassword());
0:         } catch (SqlException se) {
0:             // The method below may throw an exception.
0:             handleConnectionException(dncLogWriter, se);
0:             // If the exception wasn't handled so far, re-throw it.
0:             throw se.getSQLException();
1:         }
0:             updateDataSourceValues(
0:                     tokenizeAttributes(getConnectionAttributes(), null));
commit:9a82758
/////////////////////////////////////////////////////////////////////////
0:         NetLogWriter dncLogWriter = null;
0:             dncLogWriter = (NetLogWriter)
0:                     super.computeDncLogWriterForNewConnection("_xads");
0:             // The method below may throw an exception.
0:             handleConnectionException(dncLogWriter, se);
0:             // If the exception wasn't handled so far, re-throw it.
author:Army
-------------------------------------------------------------------------------
commit:8fcae92
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.client.am.LogWriter;
/////////////////////////////////////////////////////////////////////////
0:             return getXAConnectionX(dncLogWriter, this, user, password);
1: 
0:     /**
0:      * Method that establishes the initial physical connection
0:      * using DS properties instead of CPDS properties.
1:      */
0:     private XAConnection getXAConnectionX(LogWriter dncLogWriter,
0:         ClientBaseDataSource ds, String user, String password)
0:         throws SQLException
0:     {
0:         return ClientDriver.getFactory().newClientXAConnection(ds,
0:                 dncLogWriter, user, password);
0:     }   
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:David Van Couvering
-------------------------------------------------------------------------------
commit:d506170
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.client.am.SqlException;
/////////////////////////////////////////////////////////////////////////
0:         try
0:         {
0:             NetLogWriter dncLogWriter = (NetLogWriter) super.computeDncLogWriterForNewConnection("_xads");
0:             return new ClientXAConnection(this, dncLogWriter, user, password);
0:         }
0:         catch ( SqlException se )
0:         {
0:             throw se.getSQLException();
0:         }
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:93ab830
/////////////////////////////////////////////////////////////////////////
0:         return getXAConnection(getUser(), getPassword());
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:c5beeff
/////////////////////////////////////////////////////////////////////////
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.jdbc.ClientXADataSource
1: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
0: */
1: 
1: package org.apache.derby.jdbc;
1: 
0: import javax.sql.*;
0: import org.apache.derby.client.ClientXAConnection;
1: 
1: 
0: public class ClientXADataSource extends ClientDataSource implements XADataSource,
0:                                                                   java.io.Serializable,
0:                                                                   javax.naming.Referenceable
0: {
1:   public static final String className__ = "org.apache.derby.jdbc.ClientXADataSource";
1: 
1:   // following serialVersionUID was generated by the JDK's serialver program
1:   // verify it everytime that ClientXADataSource is modified
0:   static final long serialVersionUID = 7057075094707674880L;
1: 
0:   private String password = null;
0:   synchronized public void setPassword (String password) { this.password = password; }
0:   public final static String propertyKey_password = "password";
1: 
0:   public ClientXADataSource()
0:   {
0:     this.setResultSetHoldability( org.apache.derby.client.ClientBaseDataSource.CLOSE_CURSORS_AT_COMMIT );
0:   }
1: 
0:   public XAConnection getXAConnection() throws java.sql.SQLException
0:   {
1: 
0:     return getXAConnection(this.user, this.password);
0:   }
1: 
0:   public XAConnection getXAConnection (String user, String password) throws java.sql.SQLException
0:   {
0:     org.apache.derby.client.am.LogWriter dncLogWriter = super.computeDncLogWriterForNewConnection ("_xads");
1: 
1: 
0:     ClientXAConnection xaConn_ = new ClientXAConnection( this,
0:           (org.apache.derby.client.net.NetLogWriter) dncLogWriter,
0:           user,
0:           password);
0:     return xaConn_;
0:   }
0: }
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:001d07a
/////////////////////////////////////////////////////////////////////////
commit:02d3427
/////////////////////////////////////////////////////////////////////////
0: import java.sql.SQLException;
0: import org.apache.derby.client.net.NetLogWriter;
0: public class ClientXADataSource extends ClientDataSource implements XADataSource {
1:     private static final long serialVersionUID = 7057075094707674880L;
/////////////////////////////////////////////////////////////////////////
0:         this.setResultSetHoldability(CLOSE_CURSORS_AT_COMMIT);
1:     public XAConnection getXAConnection() throws SQLException {
0:         return getXAConnection(user, password);
1:     public XAConnection getXAConnection(String user, String password) throws SQLException {
0:         NetLogWriter dncLogWriter = (NetLogWriter) super.computeDncLogWriterForNewConnection("_xads");
0:         return new ClientXAConnection(this, dncLogWriter, user, password);
commit:70f7692
/////////////////////////////////////////////////////////////////////////
1: import javax.sql.XAConnection;
0: import javax.sql.XADataSource;
0: 
0:         java.io.Serializable,
0:         javax.naming.Referenceable {
0:     public static final String className__ = "org.apache.derby.jdbc.ClientXADataSource";
0:     // following serialVersionUID was generated by the JDK's serialver program
0:     // verify it everytime that ClientXADataSource is modified
0:     static final long serialVersionUID = 7057075094707674880L;
0:     private String password = null;
0:     synchronized public void setPassword(String password) {
0:         this.password = password;
0:     }
0:     public final static String propertyKey_password = "password";
1:     public ClientXADataSource() {
0:         this.setResultSetHoldability(org.apache.derby.client.ClientBaseDataSource.CLOSE_CURSORS_AT_COMMIT);
0:     }
0:     public XAConnection getXAConnection() throws java.sql.SQLException {
0: 
0:         return getXAConnection(this.user, this.password);
0:     }
0: 
0:     public XAConnection getXAConnection(String user, String password) throws java.sql.SQLException {
0:         org.apache.derby.client.am.LogWriter dncLogWriter = super.computeDncLogWriterForNewConnection("_xads");
0:         ClientXAConnection xaConn_ = new ClientXAConnection(this,
0:                 (org.apache.derby.client.net.NetLogWriter) dncLogWriter,
0:                 user,
0:                 password);
0:         return xaConn_;
0:     }
============================================================================