1:2371470: /*
1:2371470:     Derby - Class org.apache.derby.client.net.PublicBufferOutputStream
1:2371470: 
1:2371470:     Licensed to the Apache Software Foundation (ASF) under one
1:2371470:     or more contributor license agreements.  See the NOTICE file
1:2371470:     distributed with this work for additional information
1:2371470:     regarding copyright ownership.  The ASF licenses this file
1:2371470:     to you under the Apache License, Version 2.0 (the
1:2371470:     "License"); you may not use this file except in compliance
1:2371470:     with the License.  You may obtain a copy of the License at
1:2371470: 
1:2371470:     http://www.apache.org/licenses/LICENSE-2.0
1:2371470: 
1:2371470:     Unless required by applicable law or agreed to in writing,
1:2371470:     software distributed under the License is distributed on an
1:2371470:     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:2371470:     KIND, either express or implied.  See the License for the
1:2371470:     specific language governing permissions and limitations
1:2371470:     under the License.
1:2371470: */
1:2371470: package org.apache.derby.client.net;
1:2371470: 
1:2371470: import java.io.ByteArrayOutputStream;
1:2371470: 
1:2371470: /**
1:2371470:  * A ByteArrayOutputStream which gives a direct reference of the buffer array
1:2371470:  */
1:0326967: class PublicBufferOutputStream extends ByteArrayOutputStream {
1:2371470: 
1:0326967:     PublicBufferOutputStream() {
1:2371470:         super();
1:2371470:     }
1:2371470: 
1:2371470:     public PublicBufferOutputStream(int size) {
1:2371470:         super(size);
1:2371470:     }
1:2371470: 
1:2371470:     /**
1:2371470:      * Get a reference to the buffer array stored in the byte array
1:2371470:      * output stream
1:2371470:      */
1:2371470:     public byte[] getBuffer() {
1:2371470:         return buf;
1:2371470:     }
1:2371470: 
1:2371470: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:0326967
/////////////////////////////////////////////////////////////////////////
1: class PublicBufferOutputStream extends ByteArrayOutputStream {
1:     PublicBufferOutputStream() {
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:2371470
/////////////////////////////////////////////////////////////////////////
1: /*
1:     Derby - Class org.apache.derby.client.net.PublicBufferOutputStream
1: 
1:     Licensed to the Apache Software Foundation (ASF) under one
1:     or more contributor license agreements.  See the NOTICE file
1:     distributed with this work for additional information
1:     regarding copyright ownership.  The ASF licenses this file
1:     to you under the Apache License, Version 2.0 (the
1:     "License"); you may not use this file except in compliance
1:     with the License.  You may obtain a copy of the License at
1: 
1:     http://www.apache.org/licenses/LICENSE-2.0
1: 
1:     Unless required by applicable law or agreed to in writing,
1:     software distributed under the License is distributed on an
1:     "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:     KIND, either express or implied.  See the License for the
1:     specific language governing permissions and limitations
1:     under the License.
1: */
1: package org.apache.derby.client.net;
1: 
1: import java.io.ByteArrayOutputStream;
1: 
1: /**
1:  * A ByteArrayOutputStream which gives a direct reference of the buffer array
1:  */
0: public class PublicBufferOutputStream extends ByteArrayOutputStream {
1: 
0:     public PublicBufferOutputStream() {
1:         super();
1:     }
1: 
1:     public PublicBufferOutputStream(int size) {
1:         super(size);
1:     }
1: 
1:     /**
1:      * Get a reference to the buffer array stored in the byte array
1:      * output stream
1:      */
1:     public byte[] getBuffer() {
1:         return buf;
1:     }
1: 
1: }
============================================================================