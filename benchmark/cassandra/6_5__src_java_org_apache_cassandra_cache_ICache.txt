1:1adcd1c: /*
1:1adcd1c:  * Licensed to the Apache Software Foundation (ASF) under one
1:1adcd1c:  * or more contributor license agreements.  See the NOTICE file
1:1adcd1c:  * distributed with this work for additional information
1:1adcd1c:  * regarding copyright ownership.  The ASF licenses this file
1:1adcd1c:  * to you under the Apache License, Version 2.0 (the
1:1adcd1c:  * "License"); you may not use this file except in compliance
1:1adcd1c:  * with the License.  You may obtain a copy of the License at
3:1adcd1c:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1adcd1c:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:80d3dec:  */
1:4d1af49: package org.apache.cassandra.cache;
1:1adcd1c: 
1:dfd78d0: import java.util.Iterator;
1:e688815: 
1:80d3dec: /**
1:4d1af49:  * This is similar to the Map interface, but requires maintaining a given capacity
1:4d1af49:  * and does not require put or remove to return values, which lets SerializingCache
1:4d1af49:  * be more efficient by avoiding deserialize except on get.
1:1adcd1c:  */
1:30bb255: public interface ICache<K, V> extends CacheSize
1:4d1af49: {
1:4d1af49:     public void put(K key, V value);
3:4d1af49: 
1:c9270f4:     public boolean putIfAbsent(K key, V value);
1:4d1af49: 
1:c9270f4:     public boolean replace(K key, V old, V value);
1:4d1af49: 
1:4d1af49:     public V get(K key);
1:4d1af49: 
1:4d1af49:     public void remove(K key);
1:4d1af49: 
1:4d1af49:     public void clear();
1:80d3dec: 
1:dfd78d0:     public Iterator<K> keyIterator();
1:4d1af49: 
1:dfd78d0:     public Iterator<K> hotKeyIterator(int n);
1:4d1af49: 
1:295aedb:     public boolean containsKey(K key);
1:4d1af49: }
============================================================================
author:Branimir Lambov
-------------------------------------------------------------------------------
commit:30bb255
/////////////////////////////////////////////////////////////////////////
1: public interface ICache<K, V> extends CacheSize
/////////////////////////////////////////////////////////////////////////
author:Robert Stupp
-------------------------------------------------------------------------------
commit:dfd78d0
/////////////////////////////////////////////////////////////////////////
1: import java.util.Iterator;
/////////////////////////////////////////////////////////////////////////
1:     public Iterator<K> keyIterator();
1:     public Iterator<K> hotKeyIterator(int n);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:a3734e5
/////////////////////////////////////////////////////////////////////////
commit:e688815
/////////////////////////////////////////////////////////////////////////
0:     public Set<K> hotKeySet(int n);
1: 
commit:1adcd1c
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * 
0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * 
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  * 
1:  */
1: 
commit:80d3dec
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
0:      * @return true if the cache implementation inherently copies the cached values; otherwise,
0:      * the caller should copy manually before caching shared values like Thrift ByteBuffers.
1:      */
0:     public boolean isPutCopying();
commit:4d1af49
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.cache;
1: 
0: import java.util.Set;
1: 
0: /**
1:  * This is similar to the Map interface, but requires maintaining a given capacity
1:  * and does not require put or remove to return values, which lets SerializingCache
1:  * be more efficient by avoiding deserialize except on get.
0:  */
0: public interface ICache<K, V>
1: {
0:     public int capacity();
1: 
0:     public void setCapacity(int capacity);
1: 
1:     public void put(K key, V value);
1: 
1:     public V get(K key);
1: 
1:     public void remove(K key);
1: 
0:     public int size();
1: 
1:     public void clear();
1: 
0:     public Set<K> keySet();
1: }
author:Vijay Parthasarathy
-------------------------------------------------------------------------------
commit:ac362da
commit:0267293
/////////////////////////////////////////////////////////////////////////
0:     public long capacity();
0:     public void setCapacity(long capacity);
/////////////////////////////////////////////////////////////////////////
0:     public long weightedSize();
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:5c7ccb0
commit:c9270f4
/////////////////////////////////////////////////////////////////////////
1:     public boolean putIfAbsent(K key, V value);
0: 
1:     public boolean replace(K key, V old, V value);
0: 
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
0:  *
/////////////////////////////////////////////////////////////////////////
0:  *
0:  *
0:  *
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
0: package org.apache.cassandra.cache;
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:295aedb
/////////////////////////////////////////////////////////////////////////
0:     public int weightedSize();
0: 
1:     public boolean containsKey(K key);
0: 
============================================================================