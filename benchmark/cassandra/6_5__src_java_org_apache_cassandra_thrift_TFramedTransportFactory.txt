1:7db46ef: /*
1:7db46ef:  *
1:7db46ef:  * Licensed to the Apache Software Foundation (ASF) under one
1:7db46ef:  * or more contributor license agreements.  See the NOTICE file
1:7db46ef:  * distributed with this work for additional information
1:7db46ef:  * regarding copyright ownership.  The ASF licenses this file
1:7db46ef:  * to you under the Apache License, Version 2.0 (the
1:7db46ef:  * "License"); you may not use this file except in compliance
1:7db46ef:  * with the License.  You may obtain a copy of the License at
1:7db46ef:  *
1:7db46ef:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7db46ef:  *
1:7db46ef:  * Unless required by applicable law or agreed to in writing,
1:7db46ef:  * software distributed under the License is distributed on an
1:7db46ef:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:7db46ef:  * KIND, either express or implied.  See the License for the
1:7db46ef:  * specific language governing permissions and limitations
1:7db46ef:  * under the License.
1:7db46ef:  *
1:7db46ef:  */
1:2336d94: package org.apache.cassandra.thrift;
1:56e0ad1: 
1:56e0ad1: import java.util.Collections;
1:56e0ad1: import java.util.Map;
1:56e0ad1: import java.util.Set;
1:56e0ad1: 
1:7db46ef: import org.apache.thrift.transport.TFramedTransport;
1:7db46ef: import org.apache.thrift.transport.TSocket;
1:7db46ef: import org.apache.thrift.transport.TTransport;
1:7db46ef: import org.apache.thrift.transport.TTransportException;
1:73d828e: 
1:b973a33: public class TFramedTransportFactory implements ITransportFactory
1:56e0ad1: {
1:2336d94:     private static final String THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB = "cassandra.thrift.framed.size_mb";
1:2336d94:     private int thriftFramedTransportSizeMb = 15; // 15Mb is the default for C* & Hadoop ConfigHelper
1:2336d94: 
1:7aafe05:     @SuppressWarnings("resource")
1:2336d94:     public TTransport openTransport(String host, int port) throws TTransportException
2:7db46ef:     {
1:56e0ad1:         TSocket socket = new TSocket(host, port);
1:2336d94:         TTransport transport = new TFramedTransport(socket, thriftFramedTransportSizeMb * 1024 * 1024);
1:56e0ad1:         transport.open();
1:56e0ad1:         return transport;
1:56e0ad1:     }
1:56e0ad1: 
1:56e0ad1:     public void setOptions(Map<String, String> options)
1:56e0ad1:     {
1:2336d94:         if (options.containsKey(THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB))
1:2336d94:             thriftFramedTransportSizeMb = Integer.parseInt(options.get(THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB));
1:56e0ad1:     }
1:56e0ad1: 
1:56e0ad1:     public Set<String> supportedOptions()
1:56e0ad1:     {
1:2336d94:         return Collections.singleton(THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB);
1:56e0ad1:     }
2:7db46ef: }
============================================================================
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:7aafe05
/////////////////////////////////////////////////////////////////////////
1:     @SuppressWarnings("resource")
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:2336d94
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.thrift;
1:     private static final String THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB = "cassandra.thrift.framed.size_mb";
1:     private int thriftFramedTransportSizeMb = 15; // 15Mb is the default for C* & Hadoop ConfigHelper
1: 
1:     public TTransport openTransport(String host, int port) throws TTransportException
1:         TTransport transport = new TFramedTransport(socket, thriftFramedTransportSizeMb * 1024 * 1024);
1:         if (options.containsKey(THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB))
1:             thriftFramedTransportSizeMb = Integer.parseInt(options.get(THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB));
1:         return Collections.singleton(THRIFT_FRAMED_TRANSPORT_SIZE_IN_MB);
author:Dave Brosius
-------------------------------------------------------------------------------
commit:fd6d19b
/////////////////////////////////////////////////////////////////////////
commit:9b0c3de
/////////////////////////////////////////////////////////////////////////
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:b973a33
/////////////////////////////////////////////////////////////////////////
0: import sun.plugin2.message.transport.TransportFactory;
1: public class TFramedTransportFactory implements ITransportFactory
commit:56e0ad1
/////////////////////////////////////////////////////////////////////////
1: import java.util.Collections;
1: import java.util.Map;
1: import java.util.Set;
1: 
/////////////////////////////////////////////////////////////////////////
0: public class TFramedTransportFactory implements ITransportFactory, TClientTransportFactory
/////////////////////////////////////////////////////////////////////////
1: 
0:     //
0:     public TTransport openTransport(String host, int port, Configuration conf) throws TTransportException
1:     {
1:         TSocket socket = new TSocket(host, port);
0:         TTransport transport = new TFramedTransport(socket, ConfigHelper.getThriftFramedTransportSize(conf));
1:         transport.open();
1:         return transport;
1:     }
1: 
1:     public void setOptions(Map<String, String> options)
1:     {
1:     }
1: 
1:     public Set<String> supportedOptions()
1:     {
0:         return Collections.emptySet();
1:     }
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:73d828e
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.hadoop.ConfigHelper;
0: import org.apache.hadoop.conf.Configuration;
1: 
0:     public TTransport openTransport(TSocket socket, Configuration conf) throws TTransportException
0:         TTransport transport = new TFramedTransport(socket, ConfigHelper.getThriftFramedTransportSize(conf));
author:Brandon Williams
-------------------------------------------------------------------------------
commit:7db46ef
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.thrift;
0: 
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
0: 
1: import org.apache.thrift.transport.TFramedTransport;
1: import org.apache.thrift.transport.TSocket;
1: import org.apache.thrift.transport.TTransport;
1: import org.apache.thrift.transport.TTransportException;
0: 
0: public class TFramedTransportFactory implements ITransportFactory
1: {
0:     public TTransport openTransport(TSocket socket) throws TTransportException
1:     {
0:         TTransport transport = new TFramedTransport(socket);
0:         transport.open();
0:         return transport;
1:     }
1: }
============================================================================