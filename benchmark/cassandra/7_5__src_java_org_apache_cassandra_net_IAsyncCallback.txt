1:07cf56f: /*
1:066ef58:  * Licensed to the Apache Software Foundation (ASF) under one
1:066ef58:  * or more contributor license agreements.  See the NOTICE file
1:066ef58:  * distributed with this work for additional information
1:066ef58:  * regarding copyright ownership.  The ASF licenses this file
1:066ef58:  * to you under the Apache License, Version 2.0 (the
1:066ef58:  * "License"); you may not use this file except in compliance
1:066ef58:  * with the License.  You may obtain a copy of the License at
1:066ef58:  *
1:066ef58:  *     http://www.apache.org/licenses/LICENSE-2.0
1:066ef58:  *
1:066ef58:  * Unless required by applicable law or agreed to in writing, software
1:066ef58:  * distributed under the License is distributed on an "AS IS" BASIS,
1:066ef58:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:066ef58:  * See the License for the specific language governing permissions and
1:066ef58:  * limitations under the License.
2:066ef58:  */
1:066ef58: package org.apache.cassandra.net;
4:066ef58: 
1:8b0e186: import java.net.InetAddress;
1:8b0e186: 
1:8b0e186: import com.google.common.base.Predicate;
1:8b0e186: 
1:8b0e186: import org.apache.cassandra.gms.FailureDetector;
1:8b0e186: 
3:066ef58: /**
1:443d534:  * implementors of IAsyncCallback need to make sure that any public methods
1:443d534:  * are threadsafe with respect to response() being called from the message
1:443d534:  * service.  In particular, if any shared state is referenced, making
1:443d534:  * response alone synchronized will not suffice.
1:066ef58:  */
1:3d4c2f9: public interface IAsyncCallback<T>
1:066ef58: {
1:557bbbc:     Predicate<InetAddress> isAlive = new Predicate<InetAddress>()
1:8b0e186:     {
1:8b0e186:         public boolean apply(InetAddress endpoint)
1:8b0e186:         {
1:8b0e186:             return FailureDetector.instance.isAlive(endpoint);
1:8b0e186:         }
1:8b0e186:     };
1:8b0e186: 
1:066ef58:     /**
1:1782c88:      * @param msg response received.
1:066ef58:      */
1:557bbbc:     void response(MessageIn<T> msg);
1:3d4c2f9: 
1:3d4c2f9:     /**
1:3d4c2f9:      * @return true if this callback is on the read path and its latency should be
1:3d4c2f9:      * given as input to the dynamic snitch.
1:3d4c2f9:      */
1:3d4c2f9:     boolean isLatencyForSnitch();
1:d43b9ce: 
1:d43b9ce:     default boolean supportsBackPressure()
1:d43b9ce:     {
1:d43b9ce:         return false;
1:d43b9ce:     }
1:066ef58: }
============================================================================
author:Sergio Bossa
-------------------------------------------------------------------------------
commit:d43b9ce
/////////////////////////////////////////////////////////////////////////
1: 
1:     default boolean supportsBackPressure()
1:     {
1:         return false;
1:     }
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:557bbbc
/////////////////////////////////////////////////////////////////////////
1:     Predicate<InetAddress> isAlive = new Predicate<InetAddress>()
/////////////////////////////////////////////////////////////////////////
1:     void response(MessageIn<T> msg);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:8b0e186
/////////////////////////////////////////////////////////////////////////
1: import java.net.InetAddress;
1: 
1: import com.google.common.base.Predicate;
1: 
1: import org.apache.cassandra.gms.FailureDetector;
1: 
/////////////////////////////////////////////////////////////////////////
0:     public static Predicate<InetAddress> isAlive = new Predicate<InetAddress>()
1:     {
1:         public boolean apply(InetAddress endpoint)
1:         {
1:             return FailureDetector.instance.isAlive(endpoint);
1:         }
1:     };
1: 
commit:3d4c2f9
/////////////////////////////////////////////////////////////////////////
1: public interface IAsyncCallback<T>
1: 
1:     /**
1:      * @return true if this callback is on the read path and its latency should be
1:      * given as input to the dynamic snitch.
1:      */
1:     boolean isLatencyForSnitch();
commit:a06be23
/////////////////////////////////////////////////////////////////////////
0: public interface IAsyncCallback<T> extends IMessageCallback
0:     public void response(MessageIn<T> msg);
commit:5d46a01
/////////////////////////////////////////////////////////////////////////
0:     public void response(MessageIn msg);
commit:14d0647
/////////////////////////////////////////////////////////////////////////
0: public interface IAsyncCallback extends IMessageCallback
commit:1782c88
/////////////////////////////////////////////////////////////////////////
1: 	 * @param msg response received.
0:      * Calls to response() are serialized by ResponseVerbHandler.
commit:d7e4924
/////////////////////////////////////////////////////////////////////////
commit:066ef58
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.net;
1: 
1: /**
0:  * Author : Avinash Lakshman ( alakshman@facebook.com) & Prashant Malik ( pmalik@facebook.com )
1:  */
1: 
0: public interface IAsyncCallback 
1: {
1: 	/**
0: 	 * @param msg responses to be returned
1: 	 */
0: 	public void response(Message msg);
1:     
1:     /**
0:      * Attach some application specific context to the
0:      * callback.
0:      * @param o application specific context
1:      */
0:     public void attachContext(Object o);
1: }
commit:71739ef
commit:0eef9ed
/////////////////////////////////////////////////////////////////////////
0: 	 * @param msg responses to be returned
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
commit:686139a
/////////////////////////////////////////////////////////////////////////
0:     /**
0:      * @param msg response received.
0:      */
0:     public void response(Message msg);
author:Gary Dusbabek
-------------------------------------------------------------------------------
commit:443d534
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * implementors of IAsyncCallback need to make sure that any public methods
1:  * are threadsafe with respect to response() being called from the message
1:  * service.  In particular, if any shared state is referenced, making
1:  * response alone synchronized will not suffice.
0:  */
author:Avinash Lakshman
-------------------------------------------------------------------------------
commit:5206290
/////////////////////////////////////////////////////////////////////////
0:     
0:     /**
0:      * Attach some application specific context to the
0:      * callback.
0:      * @param o application specific context
0:      */
0:     public void attachContext(Object o);
author:Prashant Malik
-------------------------------------------------------------------------------
commit:1f91e99
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.apache.cassandra.net;
0: 
0: /**
0:  * Author : Avinash Lakshman ( alakshman@facebook.com) & Prashant Malik ( pmalik@facebook.com )
0:  */
0: 
0: public interface IAsyncCallback 
0: {
0: 	/**
0: 	 * @param response responses to be returned
0: 	 */
0: 	public void response(Message msg);
0: }
============================================================================