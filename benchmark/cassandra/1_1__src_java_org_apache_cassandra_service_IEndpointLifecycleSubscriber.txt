1:63a8bfe: /*
1:63a8bfe:  * Licensed to the Apache Software Foundation (ASF) under one
1:63a8bfe:  * or more contributor license agreements.  See the NOTICE file
1:63a8bfe:  * distributed with this work for additional information
1:63a8bfe:  * regarding copyright ownership.  The ASF licenses this file
1:63a8bfe:  * to you under the Apache License, Version 2.0 (the
1:63a8bfe:  * "License"); you may not use this file except in compliance
1:63a8bfe:  * with the License.  You may obtain a copy of the License at
1:63a8bfe:  *
1:63a8bfe:  *     http://www.apache.org/licenses/LICENSE-2.0
1:63a8bfe:  *
1:63a8bfe:  * Unless required by applicable law or agreed to in writing, software
1:63a8bfe:  * distributed under the License is distributed on an "AS IS" BASIS,
1:63a8bfe:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:63a8bfe:  * See the License for the specific language governing permissions and
1:63a8bfe:  * limitations under the License.
1:63a8bfe:  */
1:63a8bfe: package org.apache.cassandra.service;
1:63a8bfe: 
1:63a8bfe: import java.net.InetAddress;
1:63a8bfe: 
1:63a8bfe: /**
1:63a8bfe:  * Interface on which interested parties can be notified of high level endpoint
1:63a8bfe:  * state changes.
1:63a8bfe:  *
1:63a8bfe:  * Note that while IEndpointStateChangeSubscriber notify about gossip related
1:63a8bfe:  * changes (IEndpointStateChangeSubscriber.onJoin() is called when a node join
1:63a8bfe:  * gossip), this interface allows to be notified about higher level events.
1:63a8bfe:  */
1:63a8bfe: public interface IEndpointLifecycleSubscriber
1:63a8bfe: {
1:63a8bfe:     /**
1:63a8bfe:      * Called when a new node joins the cluster, i.e. either has just been
1:63a8bfe:      * bootstrapped or "instajoins".
1:63a8bfe:      *
1:63a8bfe:      * @param endpoint the newly added endpoint.
1:63a8bfe:      */
1:63a8bfe:     public void onJoinCluster(InetAddress endpoint);
1:63a8bfe: 
1:63a8bfe:     /**
1:63a8bfe:      * Called when a new node leave the cluster (decommission or removeToken).
1:63a8bfe:      *
1:63a8bfe:      * @param endpoint the endpoint that is leaving.
1:63a8bfe:      */
1:63a8bfe:     public void onLeaveCluster(InetAddress endpoint);
1:63a8bfe: 
1:63a8bfe:     /**
1:63a8bfe:      * Called when a node is marked UP.
1:63a8bfe:      *
1:63a8bfe:      * @param endpoint the endpoint marked UP.
1:63a8bfe:      */
1:63a8bfe:     public void onUp(InetAddress endpoint);
1:63a8bfe: 
1:63a8bfe:     /**
1:63a8bfe:      * Called when a node is marked DOWN.
1:63a8bfe:      *
1:63a8bfe:      * @param endpoint the endpoint marked DOWN.
1:63a8bfe:      */
1:63a8bfe:     public void onDown(InetAddress endpoint);
1:63a8bfe: 
1:63a8bfe:     /**
1:63a8bfe:      * Called when a node has moved (to a new token).
1:63a8bfe:      *
1:63a8bfe:      * @param endpoint the endpoint that has moved.
1:63a8bfe:      */
1:63a8bfe:     public void onMove(InetAddress endpoint);
1:63a8bfe: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:63a8bfe
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.service;
1: 
1: import java.net.InetAddress;
1: 
1: /**
1:  * Interface on which interested parties can be notified of high level endpoint
1:  * state changes.
1:  *
1:  * Note that while IEndpointStateChangeSubscriber notify about gossip related
1:  * changes (IEndpointStateChangeSubscriber.onJoin() is called when a node join
1:  * gossip), this interface allows to be notified about higher level events.
1:  */
1: public interface IEndpointLifecycleSubscriber
1: {
1:     /**
1:      * Called when a new node joins the cluster, i.e. either has just been
1:      * bootstrapped or "instajoins".
1:      *
1:      * @param endpoint the newly added endpoint.
1:      */
1:     public void onJoinCluster(InetAddress endpoint);
1: 
1:     /**
1:      * Called when a new node leave the cluster (decommission or removeToken).
1:      *
1:      * @param endpoint the endpoint that is leaving.
1:      */
1:     public void onLeaveCluster(InetAddress endpoint);
1: 
1:     /**
1:      * Called when a node is marked UP.
1:      *
1:      * @param endpoint the endpoint marked UP.
1:      */
1:     public void onUp(InetAddress endpoint);
1: 
1:     /**
1:      * Called when a node is marked DOWN.
1:      *
1:      * @param endpoint the endpoint marked DOWN.
1:      */
1:     public void onDown(InetAddress endpoint);
1: 
1:     /**
1:      * Called when a node has moved (to a new token).
1:      *
1:      * @param endpoint the endpoint that has moved.
1:      */
1:     public void onMove(InetAddress endpoint);
1: }
============================================================================