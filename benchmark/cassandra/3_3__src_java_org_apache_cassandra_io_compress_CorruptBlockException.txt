1:07cf56f: /*
1:ba1821f:  * Licensed to the Apache Software Foundation (ASF) under one
1:ba1821f:  * or more contributor license agreements.  See the NOTICE file
1:ba1821f:  * distributed with this work for additional information
1:ba1821f:  * regarding copyright ownership.  The ASF licenses this file
1:ba1821f:  * to you under the Apache License, Version 2.0 (the
1:ba1821f:  * "License"); you may not use this file except in compliance
1:ba1821f:  * with the License.  You may obtain a copy of the License at
1:ba1821f:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:ba1821f:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:ba1821f:  */
1:ba1821f: package org.apache.cassandra.io.compress;
1:ba1821f: 
1:ba1821f: import java.io.IOException;
1:ba1821f: 
1:debb15e: public class CorruptBlockException extends IOException
1:ba1821f: {
1:debb15e:     public CorruptBlockException(String filePath, CompressionMetadata.Chunk chunk)
1:ba1821f:     {
1:a5617d6:         this(filePath, chunk, null);
1:a5617d6:     }
1:a5617d6: 
1:a5617d6:     public CorruptBlockException(String filePath, CompressionMetadata.Chunk chunk, Throwable cause)
1:a5617d6:     {
1:a5617d6:         this(filePath, chunk.offset, chunk.length, cause);
1:ba1821f:     }
1:ba1821f: 
1:debb15e:     public CorruptBlockException(String filePath, long offset, int length)
1:ba1821f:     {
1:a5617d6:         this(filePath, offset, length, null);
1:a5617d6:     }
1:a5617d6: 
1:a5617d6:     public CorruptBlockException(String filePath, long offset, int length, Throwable cause)
1:a5617d6:     {
1:a5617d6:         super(String.format("(%s): corruption detected, chunk at %d of length %d.", filePath, offset, length), cause);
1:ba1821f:     }
1:ba1821f: }
============================================================================
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:a5617d6
/////////////////////////////////////////////////////////////////////////
1:         this(filePath, chunk, null);
1:     }
1: 
1:     public CorruptBlockException(String filePath, CompressionMetadata.Chunk chunk, Throwable cause)
1:     {
1:         this(filePath, chunk.offset, chunk.length, cause);
1:         this(filePath, offset, length, null);
1:     }
1: 
1:     public CorruptBlockException(String filePath, long offset, int length, Throwable cause)
1:     {
1:         super(String.format("(%s): corruption detected, chunk at %d of length %d.", filePath, offset, length), cause);
commit:ba1821f
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.cassandra.io.compress;
1: 
1: import java.io.IOException;
1: 
0: public class CorruptedBlockException extends IOException
1: {
0:     public CorruptedBlockException(String filePath, CompressionMetadata.Chunk chunk)
1:     {
0:         this(filePath, chunk.offset, chunk.length);
1:     }
1: 
0:     public CorruptedBlockException(String filePath, long offset, int length)
1:     {
0:         super(String.format("(%s): corruption detected, chunk at %d of length %d.", filePath, offset, length));
1:     }
1: }
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:debb15e
/////////////////////////////////////////////////////////////////////////
1: public class CorruptBlockException extends IOException
1:     public CorruptBlockException(String filePath, CompressionMetadata.Chunk chunk)
1:     public CorruptBlockException(String filePath, long offset, int length)
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
============================================================================