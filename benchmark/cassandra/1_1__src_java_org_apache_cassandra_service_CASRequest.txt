1:e59ef16: /*
1:e59ef16:  * Licensed to the Apache Software Foundation (ASF) under one
1:e59ef16:  * or more contributor license agreements.  See the NOTICE file
1:e59ef16:  * distributed with this work for additional information
1:e59ef16:  * regarding copyright ownership.  The ASF licenses this file
1:e59ef16:  * to you under the Apache License, Version 2.0 (the
1:e59ef16:  * "License"); you may not use this file except in compliance
1:e59ef16:  * with the License.  You may obtain a copy of the License at
1:e59ef16:  *
1:e59ef16:  *     http://www.apache.org/licenses/LICENSE-2.0
1:e59ef16:  *
1:e59ef16:  * Unless required by applicable law or agreed to in writing, software
1:e59ef16:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e59ef16:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e59ef16:  * See the License for the specific language governing permissions and
1:e59ef16:  * limitations under the License.
1:e59ef16:  */
1:e59ef16: package org.apache.cassandra.service;
1:e59ef16: 
1:a991b64: import org.apache.cassandra.db.SinglePartitionReadCommand;
1:a991b64: import org.apache.cassandra.db.partitions.FilteredPartition;
1:a991b64: import org.apache.cassandra.db.partitions.PartitionUpdate;
1:b09d876: import org.apache.cassandra.exceptions.InvalidRequestException;
1:e59ef16: 
1:e59ef16: /**
1:5db108c:  * Abstract the conditions and updates for a CAS operation.
1:e59ef16:  */
1:5db108c: public interface CASRequest
1:e59ef16: {
1:e59ef16:     /**
1:a991b64:      * The command to use to fetch the value to compare for the CAS.
1:e59ef16:      */
1:a991b64:     public SinglePartitionReadCommand readCommand(int nowInSec);
1:e59ef16: 
1:e59ef16:     /**
1:e59ef16:      * Returns whether the provided CF, that represents the values fetched using the
1:e59ef16:      * readFilter(), match the CAS conditions this object stands for.
1:e59ef16:      */
1:a991b64:     public boolean appliesTo(FilteredPartition current) throws InvalidRequestException;
1:5db108c: 
1:5db108c:     /**
1:5db108c:      * The updates to perform of a CAS success. The values fetched using the readFilter()
1:5db108c:      * are passed as argument.
1:5db108c:      */
1:a991b64:     public PartitionUpdate makeUpdates(FilteredPartition current) throws InvalidRequestException;
1:e59ef16: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:a991b64
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.db.SinglePartitionReadCommand;
1: import org.apache.cassandra.db.partitions.FilteredPartition;
1: import org.apache.cassandra.db.partitions.PartitionUpdate;
/////////////////////////////////////////////////////////////////////////
1:      * The command to use to fetch the value to compare for the CAS.
1:     public SinglePartitionReadCommand readCommand(int nowInSec);
1:     public boolean appliesTo(FilteredPartition current) throws InvalidRequestException;
1:     public PartitionUpdate makeUpdates(FilteredPartition current) throws InvalidRequestException;
commit:5db108c
/////////////////////////////////////////////////////////////////////////
1:  * Abstract the conditions and updates for a CAS operation.
1: public interface CASRequest
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * The updates to perform of a CAS success. The values fetched using the readFilter()
1:      * are passed as argument.
1:      */
0:     public ColumnFamily makeUpdates(ColumnFamily current) throws InvalidRequestException;
commit:b09d876
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.exceptions.InvalidRequestException;
/////////////////////////////////////////////////////////////////////////
0:     public boolean appliesTo(ColumnFamily current) throws InvalidRequestException;
commit:e59ef16
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.service;
1: 
0: import org.apache.cassandra.db.ColumnFamily;
0: import org.apache.cassandra.db.filter.IDiskAtomFilter;
1: 
1: /**
0:  * Abstract the conditions to be fulfilled by a CAS operation.
1:  */
0: public interface CASConditions
1: {
1:     /**
0:      * The filter to use to fetch the value to compare for the CAS.
1:      */
0:     public IDiskAtomFilter readFilter();
1: 
1:     /**
1:      * Returns whether the provided CF, that represents the values fetched using the
1:      * readFilter(), match the CAS conditions this object stands for.
1:      */
0:     public boolean appliesTo(ColumnFamily current);
1: }
============================================================================