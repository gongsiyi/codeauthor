1:f00e7a7: package org.apache.cassandra.metrics;
1:f00e7a7: 
1:f00e7a7: import com.codahale.metrics.Meter;
1:f00e7a7: 
1:f00e7a7: /**
1:f00e7a7:  * Metrics about authentication
1:f00e7a7:  */
1:f00e7a7: public class AuthMetrics
1:f00e7a7: {
1:f00e7a7: 
1:f00e7a7:     public static final AuthMetrics instance = new AuthMetrics();
1:f00e7a7: 
1:f00e7a7:     public static void init()
1:f00e7a7:     {
1:f00e7a7:         // no-op, just used to force instance creation
1:f00e7a7:     }
1:f00e7a7: 
1:f00e7a7:     /** Number and rate of successful logins */
1:f00e7a7:     protected final Meter success;
1:f00e7a7: 
1:f00e7a7:     /** Number and rate of login failures */
1:f00e7a7:     protected final Meter failure;
1:f00e7a7: 
1:f00e7a7:     private AuthMetrics()
1:f00e7a7:     {
1:f00e7a7: 
1:f00e7a7:         success = ClientMetrics.instance.addMeter("AuthSuccess");
1:f00e7a7:         failure = ClientMetrics.instance.addMeter("AuthFailure");
1:f00e7a7:     }
1:f00e7a7: 
1:f00e7a7:     public void markSuccess()
1:f00e7a7:     {
1:f00e7a7:         success.mark();
1:f00e7a7:     }
1:f00e7a7: 
1:f00e7a7:     public void markFailure()
1:f00e7a7:     {
1:f00e7a7:         failure.mark();
1:f00e7a7:     }
1:f00e7a7: }
============================================================================
author:Soumava Ghosh
-------------------------------------------------------------------------------
commit:f00e7a7
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.metrics;
1: 
1: import com.codahale.metrics.Meter;
1: 
1: /**
1:  * Metrics about authentication
1:  */
1: public class AuthMetrics
1: {
1: 
1:     public static final AuthMetrics instance = new AuthMetrics();
1: 
1:     public static void init()
1:     {
1:         // no-op, just used to force instance creation
1:     }
1: 
1:     /** Number and rate of successful logins */
1:     protected final Meter success;
1: 
1:     /** Number and rate of login failures */
1:     protected final Meter failure;
1: 
1:     private AuthMetrics()
1:     {
1: 
1:         success = ClientMetrics.instance.addMeter("AuthSuccess");
1:         failure = ClientMetrics.instance.addMeter("AuthFailure");
1:     }
1: 
1:     public void markSuccess()
1:     {
1:         success.mark();
1:     }
1: 
1:     public void markFailure()
1:     {
1:         failure.mark();
1:     }
1: }
============================================================================