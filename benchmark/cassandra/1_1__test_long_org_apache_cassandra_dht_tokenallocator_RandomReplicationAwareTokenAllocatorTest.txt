1:c6ec31b: /*
1:c6ec31b:  * Licensed to the Apache Software Foundation (ASF) under one
1:c6ec31b:  * or more contributor license agreements.  See the NOTICE file
1:c6ec31b:  * distributed with this work for additional information
1:c6ec31b:  * regarding copyright ownership.  The ASF licenses this file
1:c6ec31b:  * to you under the Apache License, Version 2.0 (the
1:c6ec31b:  * "License"); you may not use this file except in compliance
1:c6ec31b:  * with the License.  You may obtain a copy of the License at
1:c6ec31b:  *
1:c6ec31b:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c6ec31b:  *
1:c6ec31b:  * Unless required by applicable law or agreed to in writing, software
1:c6ec31b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c6ec31b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c6ec31b:  * See the License for the specific language governing permissions and
1:c6ec31b:  * limitations under the License.
1:c6ec31b:  */
1:c6ec31b: 
1:c6ec31b: package org.apache.cassandra.dht.tokenallocator;
1:c6ec31b: 
1:c6ec31b: import org.junit.Test;
1:c6ec31b: 
1:c6ec31b: import org.apache.cassandra.Util;
1:c6ec31b: import org.apache.cassandra.dht.RandomPartitioner;
1:c6ec31b: 
1:c6ec31b: public class RandomReplicationAwareTokenAllocatorTest extends AbstractReplicationAwareTokenAllocatorTest
1:c6ec31b: {
1:c6ec31b:     /** The maximum number of vnodes to use in the tests.
1:c6ec31b:      *  For RandomPartitioner we use a smaller number because
1:c6ec31b:      *  the tests take much longer and would otherwise timeout,
1:c6ec31b:      *  see CASSANDRA-12784.
1:c6ec31b:      * */
1:c6ec31b:     private static final int MAX_VNODE_COUNT = 16;
1:c6ec31b: 
1:c6ec31b:     @Test
1:c6ec31b:     public void testExistingCluster()
1:c6ec31b:     {
1:c6ec31b:         testExistingCluster(new RandomPartitioner(), MAX_VNODE_COUNT);
1:c6ec31b:     }
1:c6ec31b: 
1:c6ec31b:     @Test
1:c6ec31b:     public void testNewClusterr()
1:c6ec31b:     {
1:c6ec31b:         Util.flakyTest(this::flakyTestNewCluster,
1:c6ec31b:                        3,
1:c6ec31b:                        "It tends to fail sometimes due to the random selection of the tokens in the first few nodes.");
1:c6ec31b:     }
1:c6ec31b: 
1:c6ec31b:     private void flakyTestNewCluster()
1:c6ec31b:     {
1:c6ec31b:         testNewCluster(new RandomPartitioner(), MAX_VNODE_COUNT);
1:c6ec31b:     }
1:c6ec31b: 
1:c6ec31b: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:c6ec31b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.dht.tokenallocator;
1: 
1: import org.junit.Test;
1: 
1: import org.apache.cassandra.Util;
1: import org.apache.cassandra.dht.RandomPartitioner;
1: 
1: public class RandomReplicationAwareTokenAllocatorTest extends AbstractReplicationAwareTokenAllocatorTest
1: {
1:     /** The maximum number of vnodes to use in the tests.
1:      *  For RandomPartitioner we use a smaller number because
1:      *  the tests take much longer and would otherwise timeout,
1:      *  see CASSANDRA-12784.
1:      * */
1:     private static final int MAX_VNODE_COUNT = 16;
1: 
1:     @Test
1:     public void testExistingCluster()
1:     {
1:         testExistingCluster(new RandomPartitioner(), MAX_VNODE_COUNT);
1:     }
1: 
1:     @Test
1:     public void testNewClusterr()
1:     {
1:         Util.flakyTest(this::flakyTestNewCluster,
1:                        3,
1:                        "It tends to fail sometimes due to the random selection of the tokens in the first few nodes.");
1:     }
1: 
1:     private void flakyTestNewCluster()
1:     {
1:         testNewCluster(new RandomPartitioner(), MAX_VNODE_COUNT);
1:     }
1: 
1: }
============================================================================