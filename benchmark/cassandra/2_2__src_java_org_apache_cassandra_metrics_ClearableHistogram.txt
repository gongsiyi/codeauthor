1:8896a70: /*
1:8896a70:  * Licensed to the Apache Software Foundation (ASF) under one
1:8896a70:  * or more contributor license agreements.  See the NOTICE file
1:8896a70:  * distributed with this work for additional information
1:8896a70:  * regarding copyright ownership.  The ASF licenses this file
1:8896a70:  * to you under the Apache License, Version 2.0 (the
1:8896a70:  * "License"); you may not use this file except in compliance
1:8896a70:  * with the License.  You may obtain a copy of the License at
1:8896a70:  *
1:8896a70:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8896a70:  *
1:8896a70:  * Unless required by applicable law or agreed to in writing, software
1:8896a70:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8896a70:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8896a70:  * See the License for the specific language governing permissions and
1:8896a70:  * limitations under the License.
1:8896a70:  */
1:8896a70: package org.apache.cassandra.metrics;
1:8896a70: 
1:8896a70: import com.google.common.annotations.VisibleForTesting;
1:8896a70: 
1:8896a70: import com.codahale.metrics.Histogram;
1:8896a70: 
1:8896a70: /**
1:8896a70:  * Adds ability to reset a histogram
1:8896a70:  */
1:8896a70: public class ClearableHistogram extends Histogram
1:8896a70: {
1:2e90259:     private final DecayingEstimatedHistogramReservoir reservoirRef;
1:8896a70: 
1:8896a70:     /**
1:8896a70:      * Creates a new {@link com.codahale.metrics.Histogram} with the given reservoir.
1:8896a70:      *
1:8896a70:      * @param reservoir the reservoir to create a histogram from
1:8896a70:      */
1:2e90259:     public ClearableHistogram(DecayingEstimatedHistogramReservoir reservoir)
1:8896a70:     {
1:8896a70:         super(reservoir);
1:8896a70: 
1:8896a70:         this.reservoirRef = reservoir;
1:8896a70:     }
1:8896a70: 
1:8896a70:     @VisibleForTesting
1:8896a70:     public void clear()
1:8896a70:     {
1:8896a70:         reservoirRef.clear();
1:8896a70:     }
1:8896a70: }
============================================================================
author:Per Otterstrom
-------------------------------------------------------------------------------
commit:2e90259
/////////////////////////////////////////////////////////////////////////
1:     private final DecayingEstimatedHistogramReservoir reservoirRef;
1:     public ClearableHistogram(DecayingEstimatedHistogramReservoir reservoir)
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:8896a70
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.metrics;
1: 
1: import com.google.common.annotations.VisibleForTesting;
1: 
1: import com.codahale.metrics.Histogram;
1: 
1: /**
1:  * Adds ability to reset a histogram
1:  */
1: public class ClearableHistogram extends Histogram
1: {
0:     private final EstimatedHistogramReservoir reservoirRef;
1: 
1:     /**
1:      * Creates a new {@link com.codahale.metrics.Histogram} with the given reservoir.
1:      *
1:      * @param reservoir the reservoir to create a histogram from
1:      */
0:     public ClearableHistogram(EstimatedHistogramReservoir reservoir)
1:     {
1:         super(reservoir);
1: 
1:         this.reservoirRef = reservoir;
1:     }
1: 
1:     @VisibleForTesting
1:     public void clear()
1:     {
1:         reservoirRef.clear();
1:     }
1: }
============================================================================