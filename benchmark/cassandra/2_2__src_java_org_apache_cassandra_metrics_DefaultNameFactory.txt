1:eb390d0: /*
1:eb390d0:  * Licensed to the Apache Software Foundation (ASF) under one
1:eb390d0:  * or more contributor license agreements.  See the NOTICE file
1:eb390d0:  * distributed with this work for additional information
1:eb390d0:  * regarding copyright ownership.  The ASF licenses this file
1:eb390d0:  * to you under the Apache License, Version 2.0 (the
1:eb390d0:  * "License"); you may not use this file except in compliance
1:eb390d0:  * with the License.  You may obtain a copy of the License at
1:eb390d0:  *
1:eb390d0:  *     http://www.apache.org/licenses/LICENSE-2.0
1:eb390d0:  *
1:eb390d0:  * Unless required by applicable law or agreed to in writing, software
1:eb390d0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:eb390d0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:eb390d0:  * See the License for the specific language governing permissions and
1:eb390d0:  * limitations under the License.
1:eb390d0:  */
1:eb390d0: package org.apache.cassandra.metrics;
1:eb390d0: 
1:eb390d0: 
1:eb390d0: /**
1:eb390d0:  * MetricNameFactory that generates default MetricName of metrics.
1:eb390d0:  */
1:eb390d0: public class DefaultNameFactory implements MetricNameFactory
1:eb390d0: {
1:eb390d0:     public static final String GROUP_NAME = "org.apache.cassandra.metrics";
1:eb390d0: 
1:eb390d0:     private final String type;
1:eb390d0:     private final String scope;
1:eb390d0: 
1:eb390d0:     public DefaultNameFactory(String type)
1:eb390d0:     {
1:eb390d0:         this(type, null);
1:eb390d0:     }
1:eb390d0: 
1:eb390d0:     public DefaultNameFactory(String type, String scope)
1:eb390d0:     {
1:eb390d0:         this.type = type;
1:eb390d0:         this.scope = scope;
1:eb390d0:     }
1:eb390d0: 
1:8896a70:     public CassandraMetricsRegistry.MetricName createMetricName(String metricName)
1:eb390d0:     {
1:eb390d0:         return createMetricName(type, metricName, scope);
1:eb390d0:     }
1:eb390d0: 
1:8896a70:     public static CassandraMetricsRegistry.MetricName createMetricName(String type, String metricName, String scope)
1:eb390d0:     {
1:8896a70:         return new CassandraMetricsRegistry.MetricName(GROUP_NAME, type, metricName, scope, createDefaultMBeanName(type, metricName, scope));
1:eb390d0:     }
1:eb390d0: 
1:eb390d0:     protected static String createDefaultMBeanName(String type, String name, String scope)
1:eb390d0:     {
1:eb390d0:         final StringBuilder nameBuilder = new StringBuilder();
1:eb390d0:         nameBuilder.append(GROUP_NAME);
1:eb390d0:         nameBuilder.append(":type=");
1:eb390d0:         nameBuilder.append(type);
1:eb390d0:         if (scope != null)
1:eb390d0:         {
1:eb390d0:             nameBuilder.append(",scope=");
1:eb390d0:             nameBuilder.append(scope);
1:eb390d0:         }
1:eb390d0:         if (name.length() > 0)
1:eb390d0:         {
1:eb390d0:             nameBuilder.append(",name=");
1:eb390d0:             nameBuilder.append(name);
1:eb390d0:         }
1:eb390d0:         return nameBuilder.toString();
1:eb390d0:     }
1:eb390d0: }
============================================================================
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:8896a70
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public CassandraMetricsRegistry.MetricName createMetricName(String metricName)
1:     public static CassandraMetricsRegistry.MetricName createMetricName(String type, String metricName, String scope)
1:         return new CassandraMetricsRegistry.MetricName(GROUP_NAME, type, metricName, scope, createDefaultMBeanName(type, metricName, scope));
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:eb390d0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.metrics;
1: 
0: import com.yammer.metrics.core.MetricName;
1: 
1: /**
1:  * MetricNameFactory that generates default MetricName of metrics.
1:  */
1: public class DefaultNameFactory implements MetricNameFactory
1: {
1:     public static final String GROUP_NAME = "org.apache.cassandra.metrics";
1: 
1:     private final String type;
1:     private final String scope;
1: 
1:     public DefaultNameFactory(String type)
1:     {
1:         this(type, null);
1:     }
1: 
1:     public DefaultNameFactory(String type, String scope)
1:     {
1:         this.type = type;
1:         this.scope = scope;
1:     }
1: 
0:     public MetricName createMetricName(String metricName)
1:     {
1:         return createMetricName(type, metricName, scope);
1:     }
1: 
0:     public static MetricName createMetricName(String type, String metricName, String scope)
1:     {
0:         return new MetricName(GROUP_NAME, type, metricName, scope, createDefaultMBeanName(type, metricName, scope));
1:     }
1: 
1:     protected static String createDefaultMBeanName(String type, String name, String scope)
1:     {
1:         final StringBuilder nameBuilder = new StringBuilder();
1:         nameBuilder.append(GROUP_NAME);
1:         nameBuilder.append(":type=");
1:         nameBuilder.append(type);
1:         if (scope != null)
1:         {
1:             nameBuilder.append(",scope=");
1:             nameBuilder.append(scope);
1:         }
1:         if (name.length() > 0)
1:         {
1:             nameBuilder.append(",name=");
1:             nameBuilder.append(name);
1:         }
1:         return nameBuilder.toString();
1:     }
1: }
============================================================================