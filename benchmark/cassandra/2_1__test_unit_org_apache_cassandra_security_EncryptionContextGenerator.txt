1:765ab3f: /*
1:765ab3f:  *
1:765ab3f:  * Licensed to the Apache Software Foundation (ASF) under one
1:765ab3f:  * or more contributor license agreements.  See the NOTICE file
1:765ab3f:  * distributed with this work for additional information
1:765ab3f:  * regarding copyright ownership.  The ASF licenses this file
1:765ab3f:  * to you under the Apache License, Version 2.0 (the
1:765ab3f:  * "License"); you may not use this file except in compliance
1:765ab3f:  * with the License.  You may obtain a copy of the License at
1:765ab3f:  *
1:765ab3f:  *   http://www.apache.org/licenses/LICENSE-2.0
1:765ab3f:  *
1:765ab3f:  * Unless required by applicable law or agreed to in writing,
1:765ab3f:  * software distributed under the License is distributed on an
1:765ab3f:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:765ab3f:  * KIND, either express or implied.  See the License for the
1:765ab3f:  * specific language governing permissions and limitations
1:765ab3f:  * under the License.
1:765ab3f:  *
1:765ab3f:  */
1:765ab3f: package org.apache.cassandra.security;
1:765ab3f: 
1:765ab3f: import java.util.HashMap;
1:765ab3f: import java.util.Map;
1:765ab3f: 
1:765ab3f: import org.apache.cassandra.config.ParameterizedClass;
1:765ab3f: import org.apache.cassandra.config.TransparentDataEncryptionOptions;
1:765ab3f: 
1:765ab3f: public class EncryptionContextGenerator
1:765ab3f: {
1:765ab3f:     public static final String KEY_ALIAS_1 = "testing:1";
1:765ab3f:     public static final String KEY_ALIAS_2 = "testing:2";
1:765ab3f: 
1:765ab3f:     public static EncryptionContext createContext(boolean init)
1:765ab3f:     {
1:7374e9b:         return createContext(null, init);
1:7374e9b:     }
1:7374e9b: 
1:7374e9b:     public static EncryptionContext createContext(byte[] iv, boolean init)
1:7374e9b:     {
1:7374e9b:         return new EncryptionContext(createEncryptionOptions(), iv, init);
1:765ab3f:     }
1:765ab3f: 
1:765ab3f:     public static TransparentDataEncryptionOptions createEncryptionOptions()
1:765ab3f:     {
1:765ab3f:         Map<String,String> params = new HashMap<>();
1:765ab3f:         params.put("keystore", "test/conf/cassandra.keystore");
1:765ab3f:         params.put("keystore_password", "cassandra");
1:765ab3f:         params.put("store_type", "JCEKS");
1:765ab3f:         ParameterizedClass keyProvider = new ParameterizedClass(JKSKeyProvider.class.getName(), params);
1:765ab3f: 
1:765ab3f:         return new TransparentDataEncryptionOptions("AES/CBC/PKCS5Padding", KEY_ALIAS_1, keyProvider);
1:765ab3f:     }
1:765ab3f: 
1:765ab3f:     public static EncryptionContext createDisabledContext()
1:765ab3f:     {
1:765ab3f:         return new EncryptionContext();
1:765ab3f:     }
1:765ab3f: }
============================================================================
author:Jason Brown
-------------------------------------------------------------------------------
commit:7374e9b
/////////////////////////////////////////////////////////////////////////
1:         return createContext(null, init);
1:     }
1: 
1:     public static EncryptionContext createContext(byte[] iv, boolean init)
1:     {
1:         return new EncryptionContext(createEncryptionOptions(), iv, init);
commit:765ab3f
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
1: package org.apache.cassandra.security;
1: 
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import org.apache.cassandra.config.ParameterizedClass;
1: import org.apache.cassandra.config.TransparentDataEncryptionOptions;
1: 
1: public class EncryptionContextGenerator
1: {
1:     public static final String KEY_ALIAS_1 = "testing:1";
1:     public static final String KEY_ALIAS_2 = "testing:2";
1: 
1:     public static EncryptionContext createContext(boolean init)
1:     {
0:         return new EncryptionContext(createEncryptionOptions(), init);
1:     }
1: 
1:     public static TransparentDataEncryptionOptions createEncryptionOptions()
1:     {
1:         Map<String,String> params = new HashMap<>();
1:         params.put("keystore", "test/conf/cassandra.keystore");
1:         params.put("keystore_password", "cassandra");
1:         params.put("store_type", "JCEKS");
1:         ParameterizedClass keyProvider = new ParameterizedClass(JKSKeyProvider.class.getName(), params);
1: 
1:         return new TransparentDataEncryptionOptions("AES/CBC/PKCS5Padding", KEY_ALIAS_1, keyProvider);
1:     }
1: 
1:     public static EncryptionContext createDisabledContext()
1:     {
1:         return new EncryptionContext();
1:     }
1: }
commit:72f5fbd
/////////////////////////////////////////////////////////////////////////
commit:37160e1
/////////////////////////////////////////////////////////////////////////
0: /*
0:  *
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  *
0:  */
0: package org.apache.cassandra.security;
0: 
0: import java.util.HashMap;
0: import java.util.Map;
0: 
0: import org.apache.cassandra.config.ParameterizedClass;
0: import org.apache.cassandra.config.TransparentDataEncryptionOptions;
0: 
0: public class EncryptionContextGenerator
0: {
0:     public static final String KEY_ALIAS_1 = "testing:1";
0:     public static final String KEY_ALIAS_2 = "testing:2";
0: 
0:     public static EncryptionContext createContext(boolean init)
0:     {
0:         return new EncryptionContext(createEncryptionOptions(), init);
0:     }
0: 
0:     public static TransparentDataEncryptionOptions createEncryptionOptions()
0:     {
0:         Map<String,String> params = new HashMap<>();
0:         params.put("keystore", "test/conf/cassandra.keystore");
0:         params.put("keystore_password", "cassandra");
0:         params.put("store_type", "JCEKS");
0:         ParameterizedClass keyProvider = new ParameterizedClass(JKSKeyProvider.class.getName(), params);
0: 
0:         return new TransparentDataEncryptionOptions("AES/CBC/PKCS5Padding", KEY_ALIAS_1, keyProvider);
0:     }
0: 
0:     public static EncryptionContext createDisabledContext()
0:     {
0:         return new EncryptionContext();
0:     }
0: }
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:ef59624
/////////////////////////////////////////////////////////////////////////
============================================================================