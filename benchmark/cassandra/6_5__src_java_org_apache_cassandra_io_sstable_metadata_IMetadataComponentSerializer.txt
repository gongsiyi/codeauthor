1:74bf5aa: /*
1:74bf5aa:  * Licensed to the Apache Software Foundation (ASF) under one
1:74bf5aa:  * or more contributor license agreements.  See the NOTICE file
1:74bf5aa:  * distributed with this work for additional information
1:74bf5aa:  * regarding copyright ownership.  The ASF licenses this file
1:74bf5aa:  * to you under the Apache License, Version 2.0 (the
1:74bf5aa:  * "License"); you may not use this file except in compliance
1:74bf5aa:  * with the License.  You may obtain a copy of the License at
1:74bf5aa:  *
1:74bf5aa:  *     http://www.apache.org/licenses/LICENSE-2.0
1:74bf5aa:  *
1:74bf5aa:  * Unless required by applicable law or agreed to in writing, software
1:74bf5aa:  * distributed under the License is distributed on an "AS IS" BASIS,
1:74bf5aa:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:74bf5aa:  * See the License for the specific language governing permissions and
1:74bf5aa:  * limitations under the License.
1:74bf5aa:  */
1:74bf5aa: package org.apache.cassandra.io.sstable.metadata;
1:74bf5aa: 
1:74bf5aa: import java.io.IOException;
1:74bf5aa: 
1:0368e97: import org.apache.cassandra.io.sstable.format.Version;
1:03f72ac: import org.apache.cassandra.io.util.DataInputPlus;
1:75508ec: import org.apache.cassandra.io.util.DataOutputPlus;
1:74bf5aa: 
1:74bf5aa: /**
1:74bf5aa:  * Metadata component serializer
1:74bf5aa:  */
1:74bf5aa: public interface IMetadataComponentSerializer<T extends MetadataComponent>
1:74bf5aa: {
1:74bf5aa:     /**
1:74bf5aa:      * Calculate and return serialized size.
1:0600d7d:      *
1:0600d7d:      *
1:74bf5aa:      *
1:0600d7d:      * @param version
1:74bf5aa:      * @param component MetadataComponent to calculate serialized size
1:74bf5aa:      * @return serialized size of this component
1:74bf5aa:      * @throws IOException
1:74bf5aa:      */
1:0600d7d:     int serializedSize(Version version, T component) throws IOException;
1:74bf5aa: 
1:74bf5aa:     /**
1:74bf5aa:      * Serialize metadata component to given output.
1:0600d7d:      *
1:75508ec:      *
1:74bf5aa:      *
1:0600d7d:      * @param version
1:74bf5aa:      * @param component MetadataComponent to serialize
1:74bf5aa:      * @param out  serialize destination
1:74bf5aa:      * @throws IOException
1:74bf5aa:      */
1:0600d7d:     void serialize(Version version, T component, DataOutputPlus out) throws IOException;
1:74bf5aa: 
1:74bf5aa:     /**
1:74bf5aa:      * Deserialize metadata component from given input.
1:74bf5aa:      *
1:74bf5aa:      * @param version serialize version
1:74bf5aa:      * @param in deserialize source
1:74bf5aa:      * @return Deserialized component
1:74bf5aa:      * @throws IOException
1:74bf5aa:      */
1:03f72ac:     T deserialize(Version version, DataInputPlus in) throws IOException;
1:74bf5aa: }
============================================================================
author:Robert Stupp
-------------------------------------------------------------------------------
commit:0600d7d
/////////////////////////////////////////////////////////////////////////
1:      *
1:      *
1:      * @param version
1:     int serializedSize(Version version, T component) throws IOException;
1:      *
1:      * @param version
1:     void serialize(Version version, T component, DataOutputPlus out) throws IOException;
author:Ariel Weisberg
-------------------------------------------------------------------------------
commit:03f72ac
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataInputPlus;
/////////////////////////////////////////////////////////////////////////
1:     T deserialize(Version version, DataInputPlus in) throws IOException;
author:Dave Brosius
-------------------------------------------------------------------------------
commit:b30cdd9
/////////////////////////////////////////////////////////////////////////
author:Jake Luciani
-------------------------------------------------------------------------------
commit:0368e97
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.sstable.format.Version;
/////////////////////////////////////////////////////////////////////////
0:     T deserialize(Version version, DataInput in) throws IOException;
author:belliottsmith
-------------------------------------------------------------------------------
commit:75508ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataOutputPlus;
/////////////////////////////////////////////////////////////////////////
1:      *
0:     void serialize(T component, DataOutputPlus out) throws IOException;
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:74bf5aa
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.io.sstable.metadata;
1: 
0: import java.io.DataInput;
0: import java.io.DataOutput;
1: import java.io.IOException;
1: 
0: import org.apache.cassandra.io.sstable.Descriptor;
1: 
1: /**
1:  * Metadata component serializer
1:  */
1: public interface IMetadataComponentSerializer<T extends MetadataComponent>
1: {
1:     /**
1:      * Calculate and return serialized size.
1:      *
1:      * @param component MetadataComponent to calculate serialized size
1:      * @return serialized size of this component
1:      * @throws IOException
1:      */
0:     int serializedSize(T component) throws IOException;
1: 
1:     /**
1:      * Serialize metadata component to given output.
1:      *
1:      * @param component MetadataComponent to serialize
1:      * @param out  serialize destination
1:      * @throws IOException
1:      */
0:     void serialize(T component, DataOutput out) throws IOException;
1: 
1:     /**
1:      * Deserialize metadata component from given input.
1:      *
1:      * @param version serialize version
1:      * @param in deserialize source
1:      * @return Deserialized component
1:      * @throws IOException
1:      */
0:     T deserialize(Descriptor.Version version, DataInput in) throws IOException;
1: }
============================================================================