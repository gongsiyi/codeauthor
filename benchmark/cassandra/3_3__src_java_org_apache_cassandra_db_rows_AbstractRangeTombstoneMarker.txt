1:a991b64: /*
1:a991b64:  * Licensed to the Apache Software Foundation (ASF) under one
1:a991b64:  * or more contributor license agreements.  See the NOTICE file
1:a991b64:  * distributed with this work for additional information
1:a991b64:  * regarding copyright ownership.  The ASF licenses this file
1:a991b64:  * to you under the Apache License, Version 2.0 (the
1:a991b64:  * "License"); you may not use this file except in compliance
1:a991b64:  * with the License.  You may obtain a copy of the License at
1:a991b64:  *
1:a991b64:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a991b64:  *
1:a991b64:  * Unless required by applicable law or agreed to in writing, software
1:a991b64:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a991b64:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a991b64:  * See the License for the specific language governing permissions and
1:a991b64:  * limitations under the License.
1:a991b64:  */
1:a991b64: package org.apache.cassandra.db.rows;
3:a991b64: 
1:a991b64: import java.nio.ByteBuffer;
1:a991b64: 
1:a991b64: import org.apache.cassandra.config.CFMetaData;
1:2cc26eb: import org.apache.cassandra.db.ClusteringBoundOrBoundary;
1:a991b64: 
1:2cc26eb: public abstract class AbstractRangeTombstoneMarker<B extends ClusteringBoundOrBoundary> implements RangeTombstoneMarker
3:a991b64: {
1:2cc26eb:     protected final B bound;
1:a991b64: 
1:2cc26eb:     protected AbstractRangeTombstoneMarker(B bound)
1:a991b64:     {
1:a991b64:         this.bound = bound;
3:a991b64:     }
1:a991b64: 
1:2cc26eb:     public B clustering()
1:a991b64:     {
1:a991b64:         return bound;
1:a991b64:     }
1:a991b64: 
1:a991b64:     public Unfiltered.Kind kind()
1:a991b64:     {
1:a991b64:         return Unfiltered.Kind.RANGE_TOMBSTONE_MARKER;
1:a991b64:     }
1:a991b64: 
1:2457599:     public boolean isBoundary()
1:2457599:     {
1:2457599:         return bound.isBoundary();
1:2457599:     }
1:2457599: 
1:2457599:     public boolean isOpen(boolean reversed)
1:2457599:     {
1:2457599:         return bound.isOpen(reversed);
1:2457599:     }
1:2457599: 
1:2457599:     public boolean isClose(boolean reversed)
1:2457599:     {
1:2457599:         return bound.isClose(reversed);
1:2457599:     }
1:2457599: 
1:a991b64:     public void validateData(CFMetaData metadata)
1:a991b64:     {
1:2cc26eb:         ClusteringBoundOrBoundary bound = clustering();
2:a991b64:         for (int i = 0; i < bound.size(); i++)
1:a991b64:         {
1:a991b64:             ByteBuffer value = bound.get(i);
1:a991b64:             if (value != null)
1:a991b64:                 metadata.comparator.subtype(i).validate(value);
1:a991b64:         }
1:a991b64:     }
1:a991b64: 
1:a991b64:     public String toString(CFMetaData metadata, boolean fullDetails)
1:a991b64:     {
1:a991b64:         return toString(metadata);
1:a991b64:     }
1:71b1c4a:     public String toString(CFMetaData metadata, boolean includeClusteringKeys, boolean fullDetails)
1:71b1c4a:     {
1:71b1c4a:         return toString(metadata);
1:71b1c4a:     }
1:a991b64: }
============================================================================
author:Branimir Lambov
-------------------------------------------------------------------------------
commit:2cc26eb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.db.ClusteringBoundOrBoundary;
1: public abstract class AbstractRangeTombstoneMarker<B extends ClusteringBoundOrBoundary> implements RangeTombstoneMarker
1:     protected final B bound;
1:     protected AbstractRangeTombstoneMarker(B bound)
1:     public B clustering()
/////////////////////////////////////////////////////////////////////////
1:         ClusteringBoundOrBoundary bound = clustering();
author:Chris Lohfink
-------------------------------------------------------------------------------
commit:71b1c4a
/////////////////////////////////////////////////////////////////////////
1:     public String toString(CFMetaData metadata, boolean includeClusteringKeys, boolean fullDetails)
1:     {
1:         return toString(metadata);
1:     }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:2457599
/////////////////////////////////////////////////////////////////////////
1:     public boolean isBoundary()
1:     {
1:         return bound.isBoundary();
1:     }
1: 
1:     public boolean isOpen(boolean reversed)
1:     {
1:         return bound.isOpen(reversed);
1:     }
1: 
1:     public boolean isClose(boolean reversed)
1:     {
1:         return bound.isClose(reversed);
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
commit:a991b64
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.db.rows;
1: 
1: import java.nio.ByteBuffer;
1: 
1: import org.apache.cassandra.config.CFMetaData;
0: import org.apache.cassandra.db.*;
1: 
0: public abstract class AbstractRangeTombstoneMarker implements RangeTombstoneMarker
1: {
0:     protected final RangeTombstone.Bound bound;
1: 
0:     protected AbstractRangeTombstoneMarker(RangeTombstone.Bound bound)
1:     {
1:         this.bound = bound;
1:     }
1: 
0:     public RangeTombstone.Bound clustering()
1:     {
1:         return bound;
1:     }
1: 
1:     public Unfiltered.Kind kind()
1:     {
1:         return Unfiltered.Kind.RANGE_TOMBSTONE_MARKER;
1:     }
1: 
1:     public void validateData(CFMetaData metadata)
1:     {
0:         Slice.Bound bound = clustering();
1:         for (int i = 0; i < bound.size(); i++)
1:         {
1:             ByteBuffer value = bound.get(i);
1:             if (value != null)
1:                 metadata.comparator.subtype(i).validate(value);
1:         }
1:     }
1: 
1:     public String toString(CFMetaData metadata, boolean fullDetails)
1:     {
1:         return toString(metadata);
1:     }
1: 
0:     protected void copyBoundTo(RangeTombstoneMarker.Writer writer)
1:     {
1:         for (int i = 0; i < bound.size(); i++)
0:             writer.writeClusteringValue(bound.get(i));
0:         writer.writeBoundKind(bound.kind());
1:     }
1: 
0:     public Unfiltered takeAlias()
1:     {
0:         return this;
1:     }
1: }
============================================================================