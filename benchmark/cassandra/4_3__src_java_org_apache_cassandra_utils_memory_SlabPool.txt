1:9f14856: /*
1:9f14856:  * Licensed to the Apache Software Foundation (ASF) under one
1:9f14856:  * or more contributor license agreements.  See the NOTICE file
1:9f14856:  * distributed with this work for additional information
1:9f14856:  * regarding copyright ownership.  The ASF licenses this file
1:9f14856:  * to you under the Apache License, Version 2.0 (the
1:9f14856:  * "License"); you may not use this file except in compliance
1:9f14856:  * with the License.  You may obtain a copy of the License at
1:9f14856:  *
1:9f14856:  *   http://www.apache.org/licenses/LICENSE-2.0
1:9f14856:  *
1:9f14856:  * Unless required by applicable law or agreed to in writing,
1:9f14856:  * software distributed under the License is distributed on an
1:9f14856:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:9f14856:  * KIND, either express or implied.  See the License for the
1:9f14856:  * specific language governing permissions and limitations
1:9f14856:  * under the License.
1:9f14856:  */
1:4b54b8a: package org.apache.cassandra.utils.memory;
1:1a3b5db: 
1:8541cca: public class SlabPool extends MemtablePool
2:4b54b8a: {
1:1a3b5db:     final boolean allocateOnHeap;
1:8541cca: 
1:1a3b5db:     public SlabPool(long maxOnHeapMemory, long maxOffHeapMemory, float cleanupThreshold, Runnable cleaner)
1:4b54b8a:     {
1:1a3b5db:         super(maxOnHeapMemory, maxOffHeapMemory, cleanupThreshold, cleaner);
1:1a3b5db:         this.allocateOnHeap = maxOffHeapMemory == 0;
1:1a3b5db:     }
1:1a3b5db: 
1:8541cca:     public MemtableAllocator newAllocator()
1:1a3b5db:     {
1:1a3b5db:         return new SlabAllocator(onHeap.newAllocator(), offHeap.newAllocator(), allocateOnHeap);
2:4b54b8a:     }
1:4b54b8a: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:2f41243
/////////////////////////////////////////////////////////////////////////
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:8541cca
/////////////////////////////////////////////////////////////////////////
1: public class SlabPool extends MemtablePool
1: 
1:     public MemtableAllocator newAllocator()
commit:1a3b5db
/////////////////////////////////////////////////////////////////////////
0: public class SlabPool extends Pool
1: 
1:     final boolean allocateOnHeap;
1:     public SlabPool(long maxOnHeapMemory, long maxOffHeapMemory, float cleanupThreshold, Runnable cleaner)
1:         super(maxOnHeapMemory, maxOffHeapMemory, cleanupThreshold, cleaner);
1:         this.allocateOnHeap = maxOffHeapMemory == 0;
0:     public SlabAllocator newAllocator()
1:         return new SlabAllocator(onHeap.newAllocator(), offHeap.newAllocator(), allocateOnHeap);
1:     }
1: 
0:     public boolean needToCopyOnHeap()
1:     {
0:         return !allocateOnHeap;
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:9f14856
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:4b54b8a
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.utils.memory;
0: 
0: import org.apache.cassandra.utils.concurrent.OpOrder;
0: 
0: public class HeapSlabPool extends Pool
1: {
0:     public HeapSlabPool(long maxOnHeapMemory, float cleanupThreshold, Runnable cleaner)
1:     {
0:         super(maxOnHeapMemory, cleanupThreshold, cleaner);
1:     }
0: 
0:     public HeapSlabAllocator newAllocator(OpOrder writes)
1:     {
0:         return new HeapSlabAllocator(this);
1:     }
1: }
============================================================================