1:e972ec8: /*
1:e972ec8:  * Licensed to the Apache Software Foundation (ASF) under one
1:e972ec8:  * or more contributor license agreements.  See the NOTICE file
1:e972ec8:  * distributed with this work for additional information
1:e972ec8:  * regarding copyright ownership.  The ASF licenses this file
1:e972ec8:  * to you under the Apache License, Version 2.0 (the
1:e972ec8:  * "License"); you may not use this file except in compliance
1:e972ec8:  * with the License.  You may obtain a copy of the License at
1:07cdfd0:  *
1:a991b64:  *     http://www.apache.org/licenses/LICENSE-2.0
3:07cdfd0:  *
1:a991b64:  * Unless required by applicable law or agreed to in writing, software
1:a991b64:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a991b64:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a991b64:  * See the License for the specific language governing permissions and
1:a991b64:  * limitations under the License.
1:e972ec8:  */
1:e972ec8: 
1:a991b64: package org.apache.cassandra.dht;
1:a991b64: 
1:e2a0d75: import java.math.BigInteger;
1:e2a0d75: 
1:e2a0d75: import org.junit.Test;
1:e2a0d75: 
1:ad84e4d: public class RandomPartitionerTest extends PartitionerTestCase
1:67ae1ee: {
1:4a6b002:     public void initPartitioner()
1:67ae1ee:     {
1:07893d7:         partitioner = RandomPartitioner.instance;
1:67ae1ee:     }
1:e2a0d75: 
1:4fd05e5:     protected boolean shouldStopRecursion(Token left, Token right)
1:4fd05e5:     {
1:4fd05e5:         return left.size(right) < Math.scalb(1, -112);
1:4fd05e5:     }
1:4fd05e5: 
1:e2a0d75:     @Test
1:e2a0d75:     public void testSplit()
1:e2a0d75:     {
1:e2a0d75:         assertSplit(tok("a"), tok("b"), 16);
1:e2a0d75:         assertSplit(tok("a"), tok("bbb"), 16);
1:e2a0d75:     }
1:e2a0d75: 
1:e2a0d75:     @Test
1:e2a0d75:     public void testSplitWrapping()
1:e2a0d75:     {
1:e2a0d75:         assertSplit(tok("b"), tok("a"), 16);
1:e2a0d75:         assertSplit(tok("bbb"), tok("a"), 16);
1:e2a0d75:     }
1:e2a0d75: 
1:e2a0d75:     @Test
1:e2a0d75:     public void testSplitExceedMaximumCase()
1:e2a0d75:     {
1:e2a0d75:         RandomPartitioner.BigIntegerToken left = new RandomPartitioner.BigIntegerToken(RandomPartitioner.MAXIMUM.subtract(BigInteger.valueOf(10)));
1:e2a0d75: 
1:e2a0d75:         assertSplit(left, tok("a"), 16);
1:e2a0d75:     }
1:67ae1ee: }
============================================================================
author:Dikang Gu
-------------------------------------------------------------------------------
commit:4fd05e5
/////////////////////////////////////////////////////////////////////////
1:     protected boolean shouldStopRecursion(Token left, Token right)
1:     {
1:         return left.size(right) < Math.scalb(1, -112);
1:     }
1: 
commit:e2a0d75
/////////////////////////////////////////////////////////////////////////
1: import java.math.BigInteger;
1: 
1: import org.junit.Test;
1: 
1: 
1:     @Test
1:     public void testSplit()
1:     {
1:         assertSplit(tok("a"), tok("b"), 16);
1:         assertSplit(tok("a"), tok("bbb"), 16);
1:     }
1: 
1:     @Test
1:     public void testSplitWrapping()
1:     {
1:         assertSplit(tok("b"), tok("a"), 16);
1:         assertSplit(tok("bbb"), tok("a"), 16);
1:     }
1: 
1:     @Test
1:     public void testSplitExceedMaximumCase()
1:     {
1:         RandomPartitioner.BigIntegerToken left = new RandomPartitioner.BigIntegerToken(RandomPartitioner.MAXIMUM.subtract(BigInteger.valueOf(10)));
1: 
1:         assertSplit(left, tok("a"), 16);
1:     }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:a991b64
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1: package org.apache.cassandra.dht;
1: 
commit:a15c35b
/////////////////////////////////////////////////////////////////////////
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
0:  *
/////////////////////////////////////////////////////////////////////////
0:  *
0:  *
0:  *
commit:37f6a9f
/////////////////////////////////////////////////////////////////////////
author:Branimir Lambov
-------------------------------------------------------------------------------
commit:07893d7
/////////////////////////////////////////////////////////////////////////
1:         partitioner = RandomPartitioner.instance;
commit:ad84e4d
/////////////////////////////////////////////////////////////////////////
1: public class RandomPartitionerTest extends PartitionerTestCase
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:4a6b002
/////////////////////////////////////////////////////////////////////////
0: public class RandomPartitionerTest extends PartitionerTestCase<BigIntegerToken>
1:     public void initPartitioner()
0:         partitioner = new RandomPartitioner();
commit:e972ec8
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  * 
1:  */
1: 
commit:67ae1ee
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.dht;
0: 
0: import static org.junit.Assert.assertEquals;
0: 
0: import org.apache.cassandra.db.DecoratedKey;
0: import org.junit.Test;
0: 
0: public class RandomPartitionerTest
1: {
0: 
0:     @Test
0:     public void testDiskFormat()
1:     {
0:         RandomPartitioner part = new RandomPartitioner();
0:         String key = "key";
0:         DecoratedKey decKey = part.decorateKey(key);
0:         DecoratedKey result = part.convertFromDiskFormat(part.convertToDiskFormat(decKey));
0:         assertEquals(decKey, result);
1:     }
1: }
============================================================================