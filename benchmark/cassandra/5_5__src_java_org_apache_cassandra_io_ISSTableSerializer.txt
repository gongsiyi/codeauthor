1:4d34917: /*
1:4d34917:  * Licensed to the Apache Software Foundation (ASF) under one
1:4d34917:  * or more contributor license agreements.  See the NOTICE file
1:4d34917:  * distributed with this work for additional information
1:4d34917:  * regarding copyright ownership.  The ASF licenses this file
1:4d34917:  * to you under the Apache License, Version 2.0 (the
1:4d34917:  * "License"); you may not use this file except in compliance
1:4d34917:  * with the License.  You may obtain a copy of the License at
1:4d34917:  *
1:4d34917:  *     http://www.apache.org/licenses/LICENSE-2.0
1:4d34917:  *
1:4d34917:  * Unless required by applicable law or agreed to in writing, software
1:4d34917:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4d34917:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4d34917:  * See the License for the specific language governing permissions and
1:4d34917:  * limitations under the License.
1:4d34917:  */
1:4d34917: package org.apache.cassandra.io;
1:4d34917: 
1:4d34917: import java.io.DataInput;
1:4d34917: import java.io.IOException;
1:4d34917: 
1:0368e97: import org.apache.cassandra.io.sstable.format.Version;
1:75508ec: import org.apache.cassandra.io.util.DataOutputPlus;
1:4d34917: 
1:4d34917: public interface ISSTableSerializer<T>
1:4d34917: {
1:4d34917:     /**
1:4d34917:      * Serialize the specified type into the specified DataOutputStream
1:4d34917:      * instance in the format suited for SSTables.
1:75508ec:      *
1:4d34917:      * @param t type that needs to be serialized
1:60d9c7f:      * @param out DataOutput into which serialization needs to happen.
1:4d34917:      * @throws java.io.IOException
1:4d34917:      */
1:75508ec:     public void serializeForSSTable(T t, DataOutputPlus out) throws IOException;
1:4d34917: 
1:4d34917:     /**
1:4d34917:      * Deserialize into the specified DataInputStream instance in the format
1:4d34917:      * suited for SSTables.
1:60d9c7f:      * @param in DataInput from which deserialization needs to happen.
1:9981316:      * @param version the version for the sstable we're reading from
1:4d34917:      * @throws IOException
1:4d34917:      * @return the type that was deserialized
1:4d34917:      */
1:0368e97:     public T deserializeFromSSTable(DataInput in, Version version) throws IOException;
1:4d34917: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:b30cdd9
/////////////////////////////////////////////////////////////////////////
commit:9981316
/////////////////////////////////////////////////////////////////////////
1:      * @param version the version for the sstable we're reading from
author:Jake Luciani
-------------------------------------------------------------------------------
commit:0368e97
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.sstable.format.Version;
/////////////////////////////////////////////////////////////////////////
1:     public T deserializeFromSSTable(DataInput in, Version version) throws IOException;
author:belliottsmith
-------------------------------------------------------------------------------
commit:75508ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataOutputPlus;
1:      *
1:     public void serializeForSSTable(T t, DataOutputPlus out) throws IOException;
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:60d9c7f
/////////////////////////////////////////////////////////////////////////
1:      * @param out DataOutput into which serialization needs to happen.
0:     public void serializeForSSTable(T t, DataOutput out) throws IOException;
1:      * @param in DataInput from which deserialization needs to happen.
0:     public T deserializeFromSSTable(DataInput in, Descriptor.Version version) throws IOException;
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:4d34917
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.io;
1: 
1: import java.io.DataInput;
0: import java.io.DataOutput;
1: import java.io.IOException;
1: 
0: import org.apache.cassandra.io.sstable.Descriptor;
1: 
1: public interface ISSTableSerializer<T>
1: {
1:     /**
1:      * Serialize the specified type into the specified DataOutputStream
1:      * instance in the format suited for SSTables.
1:      * @param t type that needs to be serialized
0:      * @param dos DataOutput into which serialization needs to happen.
1:      * @throws java.io.IOException
1:      */
0:     public void serializeForSSTable(T t, DataOutput dos) throws IOException;
1: 
1:     /**
1:      * Deserialize into the specified DataInputStream instance in the format
1:      * suited for SSTables.
0:      * @param dis DataInput from which deserialization needs to happen.
0:      * @param sstableVersion the version for the sstable we're reading from
1:      * @throws IOException
1:      * @return the type that was deserialized
1:      */
0:     public T deserializeFromSSTable(DataInput dis, Descriptor.Version version) throws IOException;
1: }
============================================================================