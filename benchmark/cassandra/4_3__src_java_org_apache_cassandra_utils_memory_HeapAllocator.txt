1:07cf56f: /*
1:b95a49c:  * Licensed to the Apache Software Foundation (ASF) under one
1:b95a49c:  * or more contributor license agreements.  See the NOTICE file
1:b95a49c:  * distributed with this work for additional information
1:b95a49c:  * regarding copyright ownership.  The ASF licenses this file
1:b95a49c:  * to you under the Apache License, Version 2.0 (the
1:b95a49c:  * "License"); you may not use this file except in compliance
1:b95a49c:  * with the License.  You may obtain a copy of the License at
2:b95a49c:  *
1:b95a49c:  *     http://www.apache.org/licenses/LICENSE-2.0
1:b95a49c:  *
1:b95a49c:  * Unless required by applicable law or agreed to in writing, software
1:b95a49c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b95a49c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b95a49c:  * See the License for the specific language governing permissions and
1:b95a49c:  * limitations under the License.
1:b95a49c:  */
1:4b54b8a: package org.apache.cassandra.utils.memory;
4:b95a49c: 
1:b95a49c: import java.nio.ByteBuffer;
1:4b54b8a: 
1:4b54b8a: public final class HeapAllocator extends AbstractAllocator
1:4b805ad: {
1:b95a49c:     public static final HeapAllocator instance = new HeapAllocator();
1:4b805ad: 
1:4b805ad:     /**
1:4b805ad:      * Normally you should use HeapAllocator.instance, since there is no per-Allocator state.
1:4b805ad:      * This is exposed so that the reflection done by Memtable works when SlabAllocator is disabled.
1:4b805ad:      */
1:4b54b8a:     private HeapAllocator() {}
1:4b805ad: 
1:b95a49c:     public ByteBuffer allocate(int size)
1:4b805ad:     {
1:b95a49c:         return ByteBuffer.allocate(size);
1:4b805ad:     }
1:2f41243: 
1:2f41243:     public boolean allocatingOnHeap()
1:2f41243:     {
1:2f41243:         return true;
1:2f41243:     }
1:4b805ad: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:2f41243
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean allocatingOnHeap()
1:     {
1:         return true;
1:     }
author:Dave Brosius
-------------------------------------------------------------------------------
commit:6643dbd
/////////////////////////////////////////////////////////////////////////
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:4b54b8a
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.utils.memory;
0: import sun.reflect.generics.reflectiveObjects.NotImplementedException;
1: 
1: public final class HeapAllocator extends AbstractAllocator
/////////////////////////////////////////////////////////////////////////
1:     private HeapAllocator() {}
commit:16f19a7
/////////////////////////////////////////////////////////////////////////
commit:4b805ad
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Normally you should use HeapAllocator.instance, since there is no per-Allocator state.
1:      * This is exposed so that the reflection done by Memtable works when SlabAllocator is disabled.
1:      */
0:     public HeapAllocator() {}
1: 
0:     public long getMinimumSize()
1:     {
0:         return 0;
1:     }
1: 
0:     public long getMaximumSize()
1:     {
0:         return Long.MAX_VALUE;
1:     }
commit:b95a49c
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Copyright 2011 The Apache Software Foundation
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.cassandra.utils;
1: 
1: import java.nio.ByteBuffer;
1: 
0: public final class HeapAllocator extends Allocator
0: {
1:     public static final HeapAllocator instance = new HeapAllocator();
1: 
0:     private HeapAllocator() {}
1: 
1:     public ByteBuffer allocate(int size)
0:     {
1:         return ByteBuffer.allocate(size);
0:     }
0: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
============================================================================