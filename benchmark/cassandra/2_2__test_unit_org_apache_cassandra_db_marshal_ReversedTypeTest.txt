1:01f3282: /*
1:01f3282: * Licensed to the Apache Software Foundation (ASF) under one
1:01f3282: * or more contributor license agreements.  See the NOTICE file
1:01f3282: * distributed with this work for additional information
1:01f3282: * regarding copyright ownership.  The ASF licenses this file
1:01f3282: * to you under the Apache License, Version 2.0 (the
1:01f3282: * "License"); you may not use this file except in compliance
1:01f3282: * with the License.  You may obtain a copy of the License at
1:01f3282: *
1:01f3282: *    http://www.apache.org/licenses/LICENSE-2.0
1:01f3282: *
1:01f3282: * Unless required by applicable law or agreed to in writing,
1:01f3282: * software distributed under the License is distributed on an
1:01f3282: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:01f3282: * KIND, either express or implied.  See the License for the
1:01f3282: * specific language governing permissions and limitations
1:01f3282: * under the License.
1:01f3282: */
1:01f3282: package org.apache.cassandra.db.marshal;
1:01f3282: 
1:01f3282: import org.junit.Test;
1:01f3282: 
1:01f3282: import static org.apache.cassandra.utils.ByteBufferUtil.bytes;
1:01f3282: import static org.apache.cassandra.utils.ByteBufferUtil.EMPTY_BYTE_BUFFER;
1:01f3282: 
1:01f3282: public class ReversedTypeTest
1:01f3282: {
1:01f3282:     @Test
1:01f3282:     public void testReverseComparison()
1:01f3282:     {
1:01f3282:         ReversedType<Long> t = ReversedType.getInstance(LongType.instance);
1:01f3282: 
1:9f7a83d:         assert t.compare(bytes(2L), bytes(4L)) > 0;
1:9f7a83d:         assert t.compare(bytes(4L), bytes(2L)) < 0;
1:01f3282: 
1:01f3282:         // the empty byte buffer is always the smaller
1:527d189:         assert t.compare(EMPTY_BYTE_BUFFER, bytes(2L)) > 0;
1:527d189:         assert t.compare(bytes(2L), EMPTY_BYTE_BUFFER) < 0;
1:01f3282:     }
1:01f3282: }
============================================================================
author:Benjamin Lerer
-------------------------------------------------------------------------------
commit:527d189
/////////////////////////////////////////////////////////////////////////
1:         assert t.compare(EMPTY_BYTE_BUFFER, bytes(2L)) > 0;
1:         assert t.compare(bytes(2L), EMPTY_BYTE_BUFFER) < 0;
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:9f7a83d
/////////////////////////////////////////////////////////////////////////
1:         assert t.compare(bytes(2L), bytes(4L)) > 0;
1:         assert t.compare(bytes(4L), bytes(2L)) < 0;
0:         assert t.compare(EMPTY_BYTE_BUFFER, bytes(2L)) < 0;
0:         assert t.compare(bytes(2L), EMPTY_BYTE_BUFFER) > 0;
commit:01f3282
/////////////////////////////////////////////////////////////////////////
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
1: *    http://www.apache.org/licenses/LICENSE-2.0
1: *
1: * Unless required by applicable law or agreed to in writing,
1: * software distributed under the License is distributed on an
1: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1: * KIND, either express or implied.  See the License for the
1: * specific language governing permissions and limitations
1: * under the License.
1: */
1: package org.apache.cassandra.db.marshal;
1: 
1: import org.junit.Test;
1: 
1: import static org.apache.cassandra.utils.ByteBufferUtil.bytes;
1: import static org.apache.cassandra.utils.ByteBufferUtil.EMPTY_BYTE_BUFFER;
1: 
1: public class ReversedTypeTest
1: {
1:     @Test
1:     public void testReverseComparison()
1:     {
1:         ReversedType<Long> t = ReversedType.getInstance(LongType.instance);
1: 
0:         assert t.compare(bytes(2L), bytes(4L)) == 1;
0:         assert t.compare(bytes(4L), bytes(2L)) == -1;
1: 
1:         // the empty byte buffer is always the smaller
0:         assert t.compare(EMPTY_BYTE_BUFFER, bytes(2L)) == -1;
0:         assert t.compare(bytes(2L), EMPTY_BYTE_BUFFER) == 1;
1:     }
1: }
============================================================================