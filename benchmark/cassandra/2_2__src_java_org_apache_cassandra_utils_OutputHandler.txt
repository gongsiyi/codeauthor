1:75453d0: /*
1:75453d0:  * Licensed to the Apache Software Foundation (ASF) under one
1:75453d0:  * or more contributor license agreements.  See the NOTICE file
1:75453d0:  * distributed with this work for additional information
1:75453d0:  * regarding copyright ownership.  The ASF licenses this file
1:75453d0:  * to you under the Apache License, Version 2.0 (the
1:75453d0:  * "License"); you may not use this file except in compliance
1:75453d0:  * with the License.  You may obtain a copy of the License at
1:75453d0:  *
1:75453d0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:75453d0:  *
1:75453d0:  * Unless required by applicable law or agreed to in writing,
1:75453d0:  * software distributed under the License is distributed on an
1:75453d0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:75453d0:  * KIND, either express or implied.  See the License for the
1:75453d0:  * specific language governing permissions and limitations
1:75453d0:  * under the License.
1:75453d0:  */
1:75453d0: package org.apache.cassandra.utils;
1:75453d0: 
1:75453d0: import org.slf4j.Logger;
1:75453d0: import org.slf4j.LoggerFactory;
1:75453d0: 
1:75453d0: public interface OutputHandler
1:75453d0: {
1:75453d0:     // called when an important info need to be displayed
1:75453d0:     public void output(String msg);
1:75453d0: 
1:75453d0:     // called when a less important info need to be displayed
1:75453d0:     public void debug(String msg);
1:75453d0: 
1:75453d0:     // called when the user needs to be warn
1:75453d0:     public void warn(String msg);
1:75453d0:     public void warn(String msg, Throwable th);
1:75453d0: 
1:75453d0:     public static class LogOutput implements OutputHandler
1:75453d0:     {
1:75453d0:         private static Logger logger = LoggerFactory.getLogger(LogOutput.class);
1:75453d0: 
1:75453d0:         public void output(String msg)
1:75453d0:         {
1:75453d0:             logger.info(msg);
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void debug(String msg)
1:75453d0:         {
1:4a849ef:             logger.trace(msg);
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void warn(String msg)
1:75453d0:         {
1:75453d0:             logger.warn(msg);
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void warn(String msg, Throwable th)
1:75453d0:         {
1:75453d0:             logger.warn(msg, th);
1:75453d0:         }
1:75453d0:     }
1:75453d0: 
1:75453d0:     public static class SystemOutput implements OutputHandler
1:75453d0:     {
1:75453d0:         public final boolean debug;
1:75453d0:         public final boolean printStack;
1:75453d0: 
1:75453d0:         public SystemOutput(boolean debug, boolean printStack)
1:75453d0:         {
1:75453d0:             this.debug = debug;
1:75453d0:             this.printStack = printStack;
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void output(String msg)
1:75453d0:         {
1:75453d0:             System.out.println(msg);
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void debug(String msg)
1:75453d0:         {
1:75453d0:             if (debug)
1:75453d0:                 System.out.println(msg);
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void warn(String msg)
1:75453d0:         {
1:75453d0:             warn(msg, null);
1:75453d0:         }
1:75453d0: 
1:75453d0:         public void warn(String msg, Throwable th)
1:75453d0:         {
1:75453d0:             System.out.println("WARNING: " + msg);
1:75453d0:             if (printStack && th != null)
1:75453d0:                 th.printStackTrace(System.out);
1:75453d0:         }
1:75453d0:     }
1:75453d0: }
============================================================================
author:Paulo Motta
-------------------------------------------------------------------------------
commit:4a849ef
/////////////////////////////////////////////////////////////////////////
1:             logger.trace(msg);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:75453d0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.cassandra.utils;
1: 
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: public interface OutputHandler
1: {
1:     // called when an important info need to be displayed
1:     public void output(String msg);
1: 
1:     // called when a less important info need to be displayed
1:     public void debug(String msg);
1: 
1:     // called when the user needs to be warn
1:     public void warn(String msg);
1:     public void warn(String msg, Throwable th);
1: 
1:     public static class LogOutput implements OutputHandler
1:     {
1:         private static Logger logger = LoggerFactory.getLogger(LogOutput.class);
1: 
1:         public void output(String msg)
1:         {
1:             logger.info(msg);
1:         }
1: 
1:         public void debug(String msg)
1:         {
0:             logger.debug(msg);
1:         }
1: 
1:         public void warn(String msg)
1:         {
1:             logger.warn(msg);
1:         }
1: 
1:         public void warn(String msg, Throwable th)
1:         {
1:             logger.warn(msg, th);
1:         }
1:     }
1: 
1:     public static class SystemOutput implements OutputHandler
1:     {
1:         public final boolean debug;
1:         public final boolean printStack;
1: 
1:         public SystemOutput(boolean debug, boolean printStack)
1:         {
1:             this.debug = debug;
1:             this.printStack = printStack;
1:         }
1: 
1:         public void output(String msg)
1:         {
1:             System.out.println(msg);
1:         }
1: 
1:         public void debug(String msg)
1:         {
1:             if (debug)
1:                 System.out.println(msg);
1:         }
1: 
1:         public void warn(String msg)
1:         {
1:             warn(msg, null);
1:         }
1: 
1:         public void warn(String msg, Throwable th)
1:         {
1:             System.out.println("WARNING: " + msg);
1:             if (printStack && th != null)
1:                 th.printStackTrace(System.out);
1:         }
1:     }
1: }
============================================================================