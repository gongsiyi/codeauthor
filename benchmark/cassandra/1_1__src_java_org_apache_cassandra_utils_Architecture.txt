1:73b5cab: /*
1:73b5cab: * Licensed to the Apache Software Foundation (ASF) under one
1:73b5cab: * or more contributor license agreements.  See the NOTICE file
1:73b5cab: * distributed with this work for additional information
1:73b5cab: * regarding copyright ownership.  The ASF licenses this file
1:73b5cab: * to you under the Apache License, Version 2.0 (the
1:73b5cab: * "License"); you may not use this file except in compliance
1:73b5cab: * with the License.  You may obtain a copy of the License at
1:73b5cab: *
1:73b5cab: *    http://www.apache.org/licenses/LICENSE-2.0
1:73b5cab: *
1:73b5cab: * Unless required by applicable law or agreed to in writing,
1:73b5cab: * software distributed under the License is distributed on an
1:73b5cab: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:73b5cab: * KIND, either express or implied.  See the License for the
1:73b5cab: * specific language governing permissions and limitations
1:73b5cab: * under the License.
1:73b5cab: */
3:73b5cab: 
1:73b5cab: package org.apache.cassandra.utils;
1:73b5cab: 
1:73b5cab: import java.util.Collections;
1:73b5cab: import java.util.Set;
1:73b5cab: 
1:73b5cab: import com.google.common.collect.Sets;
1:73b5cab: 
1:73b5cab: public final class Architecture
1:73b5cab: {
1:73b5cab:     // Note that s390x architecture are not officially supported and adding it here is only done out of convenience
1:73b5cab:     // for those that want to run C* on this architecture at their own risk (see #11214)
1:73b5cab:     private static final Set<String> UNALIGNED_ARCH = Collections.unmodifiableSet(Sets.newHashSet(
1:73b5cab:         "i386",
1:73b5cab:         "x86",
1:73b5cab:         "amd64",
1:73b5cab:         "x86_64",
1:73b5cab:         "s390x"
1:73b5cab:     ));
1:68d2526: 
1:73b5cab:     public static final boolean IS_UNALIGNED = UNALIGNED_ARCH.contains(System.getProperty("os.arch"));
1:68d2526: 
1:73b5cab:     private Architecture()
1:73b5cab:     {
1:73b5cab:     }
1:73b5cab: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:68d2526
/////////////////////////////////////////////////////////////////////////
1: 
1: 
commit:73b5cab
/////////////////////////////////////////////////////////////////////////
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
1: *    http://www.apache.org/licenses/LICENSE-2.0
1: *
1: * Unless required by applicable law or agreed to in writing,
1: * software distributed under the License is distributed on an
1: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1: * KIND, either express or implied.  See the License for the
1: * specific language governing permissions and limitations
1: * under the License.
1: */
1: 
1: package org.apache.cassandra.utils;
1: 
1: import java.util.Collections;
1: import java.util.Set;
1: 
1: import com.google.common.collect.Sets;
1: 
1: public final class Architecture
1: {
1:     // Note that s390x architecture are not officially supported and adding it here is only done out of convenience
1:     // for those that want to run C* on this architecture at their own risk (see #11214)
1:     private static final Set<String> UNALIGNED_ARCH = Collections.unmodifiableSet(Sets.newHashSet(
1:         "i386",
1:         "x86",
1:         "amd64",
1:         "x86_64",
1:         "s390x"
1:     ));
1:     
1:     public static final boolean IS_UNALIGNED = UNALIGNED_ARCH.contains(System.getProperty("os.arch"));
1:     
1:     private Architecture()
1:     {
1:     }
1: }
============================================================================