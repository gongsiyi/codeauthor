1:f42e235: /*
1:f42e235:  * Licensed to the Apache Software Foundation (ASF) under one
1:f42e235:  * or more contributor license agreements.  See the NOTICE file
1:f42e235:  * distributed with this work for additional information
1:f42e235:  * regarding copyright ownership.  The ASF licenses this file
1:f42e235:  * to you under the Apache License, Version 2.0 (the
1:f42e235:  * "License"); you may not use this file except in compliance
1:f42e235:  * with the License.  You may obtain a copy of the License at
1:f42e235:  *
1:f42e235:  *     http://www.apache.org/licenses/LICENSE-2.0
1:f42e235:  *
1:f42e235:  * Unless required by applicable law or agreed to in writing, software
1:f42e235:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f42e235:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f42e235:  * See the License for the specific language governing permissions and
1:f42e235:  * limitations under the License.
1:f42e235:  */
1:f42e235: 
1:f42e235: package org.apache.cassandra.stress.util;
1:f42e235: 
1:f42e235: import java.io.PrintStream;
1:f42e235: import java.util.ArrayList;
1:f42e235: import java.util.List;
1:f42e235: 
1:f42e235: public class MultiResultLogger implements ResultLogger
1:f42e235: {
1:f42e235:     private final List<PrintStream> streams = new ArrayList<>();
1:f42e235: 
1:f42e235:     public MultiResultLogger(PrintStream printStream)
1:f42e235:     {
1:f42e235:         streams.add(printStream);
1:f42e235:     }
1:f42e235: 
1:f42e235:     public void println(String line)
1:f42e235:     {
1:f42e235:         for (PrintStream stream : streams)
1:f42e235:         {
1:f42e235:             stream.println(line);
1:f42e235:         }
1:f42e235:     }
1:f42e235: 
1:f42e235:     public void println()
1:f42e235:     {
1:f42e235:         for (PrintStream stream : streams)
1:f42e235:         {
1:f42e235:             stream.println();
1:f42e235:         }
1:f42e235:     }
1:f42e235: 
1:f42e235:     public void printException(Exception e)
1:f42e235:     {
1:f42e235:         for (PrintStream stream : streams)
1:f42e235:         {
1:f42e235:             e.printStackTrace(stream);
1:f42e235:         }
1:f42e235:     }
1:f42e235: 
1:f42e235:     public void flush()
1:f42e235:     {
1:f42e235:         for (PrintStream stream : streams)
1:f42e235:         {
1:f42e235:             stream.flush();
1:f42e235:         }
1:f42e235:     }
1:f42e235: 
1:f42e235:     public void printf(String s, Object... args)
1:f42e235:     {
1:f42e235:         for (PrintStream stream : streams)
1:f42e235:         {
1:f42e235:             stream.printf(s, args);
1:f42e235:         }
1:f42e235:     }
1:f42e235: 
1:f42e235:     public void addStream(PrintStream additionalPrintStream)
1:f42e235:     {
1:f42e235:         streams.add(additionalPrintStream);
1:f42e235:     }
1:f42e235: }
============================================================================
author:Christopher Batey
-------------------------------------------------------------------------------
commit:f42e235
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.stress.util;
1: 
1: import java.io.PrintStream;
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: public class MultiResultLogger implements ResultLogger
1: {
1:     private final List<PrintStream> streams = new ArrayList<>();
1: 
1:     public MultiResultLogger(PrintStream printStream)
1:     {
1:         streams.add(printStream);
1:     }
1: 
1:     public void println(String line)
1:     {
1:         for (PrintStream stream : streams)
1:         {
1:             stream.println(line);
1:         }
1:     }
1: 
1:     public void println()
1:     {
1:         for (PrintStream stream : streams)
1:         {
1:             stream.println();
1:         }
1:     }
1: 
1:     public void printException(Exception e)
1:     {
1:         for (PrintStream stream : streams)
1:         {
1:             e.printStackTrace(stream);
1:         }
1:     }
1: 
1:     public void flush()
1:     {
1:         for (PrintStream stream : streams)
1:         {
1:             stream.flush();
1:         }
1:     }
1: 
1:     public void printf(String s, Object... args)
1:     {
1:         for (PrintStream stream : streams)
1:         {
1:             stream.printf(s, args);
1:         }
1:     }
1: 
1:     public void addStream(PrintStream additionalPrintStream)
1:     {
1:         streams.add(additionalPrintStream);
1:     }
1: }
============================================================================