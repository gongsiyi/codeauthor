1:b851792: /*
1:b851792:  * Licensed to the Apache Software Foundation (ASF) under one
1:b851792:  * or more contributor license agreements.  See the NOTICE file
1:b851792:  * distributed with this work for additional information
1:b851792:  * regarding copyright ownership.  The ASF licenses this file
1:b851792:  * to you under the Apache License, Version 2.0 (the
1:b851792:  * "License"); you may not use this file except in compliance
1:b851792:  * with the License.  You may obtain a copy of the License at
1:b851792:  *
1:b851792:  *     http://www.apache.org/licenses/LICENSE-2.0
1:b851792:  *
1:b851792:  * Unless required by applicable law or agreed to in writing, software
1:b851792:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b851792:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b851792:  * See the License for the specific language governing permissions and
1:b851792:  * limitations under the License.
1:b851792:  */
1:b851792: 
1:b851792: package org.apache.cassandra.io;
1:b851792: 
1:b851792: import org.apache.cassandra.io.sstable.CorruptSSTableException;
1:b851792: 
1:b851792: /**
1:b851792:  * Interface for handling file system errors.
1:b851792:  */
1:b851792: public interface FSErrorHandler
1:b851792: {
1:b851792:     void handleCorruptSSTable(CorruptSSTableException e);
1:b851792:     void handleFSError(FSError e);
1:b851792: }
============================================================================
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:b851792
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.io;
1: 
1: import org.apache.cassandra.io.sstable.CorruptSSTableException;
1: 
1: /**
1:  * Interface for handling file system errors.
1:  */
1: public interface FSErrorHandler
1: {
1:     void handleCorruptSSTable(CorruptSSTableException e);
1:     void handleFSError(FSError e);
1: }
commit:1dd33ec
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.apache.cassandra.io;
0: 
0: import org.apache.cassandra.io.sstable.CorruptSSTableException;
0: 
0: /**
0:  * Interface for handling file system errors.
0:  */
0: public interface FSErrorHandler
0: {
0:     void handleCorruptSSTable(CorruptSSTableException e);
0:     void handleFSError(FSError e);
0: }
============================================================================