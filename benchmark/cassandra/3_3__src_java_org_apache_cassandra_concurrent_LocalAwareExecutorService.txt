1:fbe8a6e: /*
1:dbf6e62:  *
1:fbe8a6e:  * Licensed to the Apache Software Foundation (ASF) under one
1:fbe8a6e:  * or more contributor license agreements.  See the NOTICE file
1:fbe8a6e:  * distributed with this work for additional information
1:fbe8a6e:  * regarding copyright ownership.  The ASF licenses this file
1:fbe8a6e:  * to you under the Apache License, Version 2.0 (the
1:fbe8a6e:  * "License"); you may not use this file except in compliance
1:fbe8a6e:  * with the License.  You may obtain a copy of the License at
1:dbf6e62:  *
1:fbe8a6e:  *   http://www.apache.org/licenses/LICENSE-2.0
1:dbf6e62:  *
1:fbe8a6e:  * Unless required by applicable law or agreed to in writing,
1:fbe8a6e:  * software distributed under the License is distributed on an
1:fbe8a6e:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:fbe8a6e:  * KIND, either express or implied.  See the License for the
1:fbe8a6e:  * specific language governing permissions and limitations
1:fbe8a6e:  * under the License.
1:dbf6e62:  *
1:fbe8a6e:  */
2:fbe8a6e: 
1:fbe8a6e: package org.apache.cassandra.concurrent;
1:fbe8a6e: 
1:fbe8a6e: import java.util.concurrent.ExecutorService;
1:fbe8a6e: 
1:dbf6e62: public interface LocalAwareExecutorService extends ExecutorService
1:fbe8a6e: {
1:fbe8a6e:     // we need a way to inject a TraceState directly into the Executor context without going through
1:fbe8a6e:     // the global Tracing sessions; see CASSANDRA-5668
1:dbf6e62:     public void execute(Runnable command, ExecutorLocals locals);
1:5420b7a: 
1:5420b7a:     // permits executing in the context of the submitting thread
1:5420b7a:     public void maybeExecuteImmediately(Runnable command);
1:fbe8a6e: }
============================================================================
author:Carl Yeksigian
-------------------------------------------------------------------------------
commit:dbf6e62
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
1: public interface LocalAwareExecutorService extends ExecutorService
1:     public void execute(Runnable command, ExecutorLocals locals);
author:belliottsmith
-------------------------------------------------------------------------------
commit:5420b7a
/////////////////////////////////////////////////////////////////////////
1: 
1:     // permits executing in the context of the submitting thread
1:     public void maybeExecuteImmediately(Runnable command);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:fbe8a6e
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
0:  * 
1:  */
1: 
1: package org.apache.cassandra.concurrent;
1: 
1: import java.util.concurrent.ExecutorService;
1: 
0: import org.apache.cassandra.tracing.TraceState;
1: 
0: public interface TracingAwareExecutorService extends ExecutorService
1: {
1:     // we need a way to inject a TraceState directly into the Executor context without going through
1:     // the global Tracing sessions; see CASSANDRA-5668
0:     public void execute(Runnable command, TraceState state);
1: }
============================================================================