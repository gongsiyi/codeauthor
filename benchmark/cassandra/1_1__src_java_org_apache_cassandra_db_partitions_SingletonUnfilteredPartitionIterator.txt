1:a991b64: /*
1:a991b64:  * Licensed to the Apache Software Foundation (ASF) under one
1:a991b64:  * or more contributor license agreements.  See the NOTICE file
1:a991b64:  * distributed with this work for additional information
1:a991b64:  * regarding copyright ownership.  The ASF licenses this file
1:a991b64:  * to you under the Apache License, Version 2.0 (the
1:a991b64:  * "License"); you may not use this file except in compliance
1:a991b64:  * with the License.  You may obtain a copy of the License at
1:a991b64:  *
1:a991b64:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a991b64:  *
1:a991b64:  * Unless required by applicable law or agreed to in writing, software
1:a991b64:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a991b64:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a991b64:  * See the License for the specific language governing permissions and
1:a991b64:  * limitations under the License.
1:a991b64:  */
1:a991b64: package org.apache.cassandra.db.partitions;
1:a991b64: 
1:a991b64: import java.util.NoSuchElementException;
1:a991b64: 
1:8a97969: import org.apache.cassandra.config.CFMetaData;
1:a991b64: import org.apache.cassandra.db.rows.UnfilteredRowIterator;
1:a991b64: 
1:a991b64: public class SingletonUnfilteredPartitionIterator implements UnfilteredPartitionIterator
1:a991b64: {
1:a991b64:     private final UnfilteredRowIterator iter;
1:a991b64:     private final boolean isForThrift;
1:a991b64:     private boolean returned;
1:a991b64: 
1:a991b64:     public SingletonUnfilteredPartitionIterator(UnfilteredRowIterator iter, boolean isForThrift)
1:a991b64:     {
1:a991b64:         this.iter = iter;
1:a991b64:         this.isForThrift = isForThrift;
1:a991b64:     }
1:a991b64: 
1:a991b64:     public boolean isForThrift()
1:a991b64:     {
1:a991b64:         return isForThrift;
1:a991b64:     }
1:a991b64: 
1:8a97969:     public CFMetaData metadata()
1:8a97969:     {
1:8a97969:         return iter.metadata();
1:8a97969:     }
1:8a97969: 
1:a991b64:     public boolean hasNext()
1:a991b64:     {
1:a991b64:         return !returned;
1:a991b64:     }
1:a991b64: 
1:a991b64:     public UnfilteredRowIterator next()
1:a991b64:     {
1:a991b64:         if (returned)
1:a991b64:             throw new NoSuchElementException();
1:a991b64: 
1:a991b64:         returned = true;
1:a991b64:         return iter;
1:a991b64:     }
1:a991b64: 
1:a991b64:     public void remove()
1:a991b64:     {
1:a991b64:         throw new UnsupportedOperationException();
1:a991b64:     }
1:a991b64: 
1:a991b64:     public void close()
1:a991b64:     {
1:86ba227:         if (!returned)
1:86ba227:             iter.close();
1:a991b64:     }
1:a991b64: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:86ba227
/////////////////////////////////////////////////////////////////////////
1:         if (!returned)
1:             iter.close();
commit:8a97969
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.config.CFMetaData;
/////////////////////////////////////////////////////////////////////////
1:     public CFMetaData metadata()
1:     {
1:         return iter.metadata();
1:     }
1: 
commit:a991b64
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.db.partitions;
1: 
1: import java.util.NoSuchElementException;
1: 
1: import org.apache.cassandra.db.rows.UnfilteredRowIterator;
1: 
1: public class SingletonUnfilteredPartitionIterator implements UnfilteredPartitionIterator
1: {
1:     private final UnfilteredRowIterator iter;
1:     private final boolean isForThrift;
1:     private boolean returned;
1: 
1:     public SingletonUnfilteredPartitionIterator(UnfilteredRowIterator iter, boolean isForThrift)
1:     {
1:         this.iter = iter;
1:         this.isForThrift = isForThrift;
1:     }
1: 
1:     public boolean isForThrift()
1:     {
1:         return isForThrift;
1:     }
1: 
1:     public boolean hasNext()
1:     {
1:         return !returned;
1:     }
1: 
1:     public UnfilteredRowIterator next()
1:     {
1:         if (returned)
1:             throw new NoSuchElementException();
1: 
1:         returned = true;
1:         return iter;
1:     }
1: 
1:     public void remove()
1:     {
1:         throw new UnsupportedOperationException();
1:     }
1: 
1:     public void close()
1:     {
0:         iter.close();
1:     }
1: }
============================================================================