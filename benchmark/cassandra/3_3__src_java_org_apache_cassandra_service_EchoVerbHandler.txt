1:576efcd: package org.apache.cassandra.service;
1:60bf7a5: /*
1:68d2526:  *
1:60bf7a5:  * Licensed to the Apache Software Foundation (ASF) under one
1:60bf7a5:  * or more contributor license agreements.  See the NOTICE file
1:60bf7a5:  * distributed with this work for additional information
1:60bf7a5:  * regarding copyright ownership.  The ASF licenses this file
1:60bf7a5:  * to you under the Apache License, Version 2.0 (the
1:60bf7a5:  * "License"); you may not use this file except in compliance
1:60bf7a5:  * with the License.  You may obtain a copy of the License at
1:68d2526:  *
1:60bf7a5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:68d2526:  *
1:60bf7a5:  * Unless required by applicable law or agreed to in writing,
1:60bf7a5:  * software distributed under the License is distributed on an
1:60bf7a5:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:60bf7a5:  * KIND, either express or implied.  See the License for the
1:60bf7a5:  * specific language governing permissions and limitations
1:60bf7a5:  * under the License.
1:68d2526:  *
1:60bf7a5:  */
1:60bf7a5: 
1:576efcd: 
1:576efcd: import org.apache.cassandra.gms.EchoMessage;
1:576efcd: import org.apache.cassandra.net.IVerbHandler;
1:576efcd: import org.apache.cassandra.net.MessageIn;
1:576efcd: import org.apache.cassandra.net.MessageOut;
1:576efcd: import org.apache.cassandra.net.MessagingService;
1:576efcd: import org.slf4j.Logger;
1:576efcd: import org.slf4j.LoggerFactory;
1:576efcd: 
1:576efcd: public class EchoVerbHandler implements IVerbHandler<EchoMessage>
1:576efcd: {
1:576efcd:     private static final Logger logger = LoggerFactory.getLogger(EchoVerbHandler.class);
1:576efcd: 
1:576efcd:     public void doVerb(MessageIn<EchoMessage> message, int id)
1:576efcd:     {
1:fd67615:         MessageOut<EchoMessage> echoMessage = new MessageOut<EchoMessage>(MessagingService.Verb.REQUEST_RESPONSE, EchoMessage.instance, EchoMessage.serializer);
1:576efcd:         logger.trace("Sending a EchoMessage reply {}", message.from);
1:576efcd:         MessagingService.instance().sendReply(echoMessage, id, message.from);
1:576efcd:     }
1:576efcd: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:68d2526
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
commit:fd67615
/////////////////////////////////////////////////////////////////////////
1:         MessageOut<EchoMessage> echoMessage = new MessageOut<EchoMessage>(MessagingService.Verb.REQUEST_RESPONSE, EchoMessage.instance, EchoMessage.serializer);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:60bf7a5
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
0:  * 
1:  */
1: 
commit:b27c61b
/////////////////////////////////////////////////////////////////////////
author:Vijay Parthasarathy
-------------------------------------------------------------------------------
commit:576efcd
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.service;
1: 
1: import org.apache.cassandra.gms.EchoMessage;
1: import org.apache.cassandra.net.IVerbHandler;
1: import org.apache.cassandra.net.MessageIn;
1: import org.apache.cassandra.net.MessageOut;
1: import org.apache.cassandra.net.MessagingService;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: public class EchoVerbHandler implements IVerbHandler<EchoMessage>
1: {
1:     private static final Logger logger = LoggerFactory.getLogger(EchoVerbHandler.class);
1: 
1:     public void doVerb(MessageIn<EchoMessage> message, int id)
1:     {
0:         MessageOut<EchoMessage> echoMessage = new MessageOut<EchoMessage>(MessagingService.Verb.REQUEST_RESPONSE, new EchoMessage(), EchoMessage.serializer);
1:         logger.trace("Sending a EchoMessage reply {}", message.from);
1:         MessagingService.instance().sendReply(echoMessage, id, message.from);
1:     }
1: }
commit:a7b2ff6
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.service;
0: 
0: import org.apache.cassandra.gms.EchoMessage;
0: import org.apache.cassandra.net.IVerbHandler;
0: import org.apache.cassandra.net.MessageIn;
0: import org.apache.cassandra.net.MessageOut;
0: import org.apache.cassandra.net.MessagingService;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
0: 
0: public class EchoVerbHandler implements IVerbHandler<EchoMessage>
0: {
0:     private static final Logger logger = LoggerFactory.getLogger(EchoVerbHandler.class);
0: 
0:     public void doVerb(MessageIn<EchoMessage> message, int id)
0:     {
0:         assert message.payload != null;
0:         MessageOut<EchoMessage> echoMessage = new MessageOut<EchoMessage>(MessagingService.Verb.REQUEST_RESPONSE, new EchoMessage(), EchoMessage.serializer);
0:         logger.trace("Sending a EchoMessage reply {}", message.from);
0:         MessagingService.instance().sendReply(echoMessage, id, message.from);
0:     }
0: }
============================================================================