1:b4133f3: /*
1:b4133f3:  * Licensed to the Apache Software Foundation (ASF) under one
1:b4133f3:  * or more contributor license agreements.  See the NOTICE file
1:b4133f3:  * distributed with this work for additional information
1:b4133f3:  * regarding copyright ownership.  The ASF licenses this file
1:b4133f3:  * to you under the Apache License, Version 2.0 (the
1:b4133f3:  * "License"); you may not use this file except in compliance
1:b4133f3:  * with the License.  You may obtain a copy of the License at
1:b4133f3:  *
1:b4133f3:  *     http://www.apache.org/licenses/LICENSE-2.0
1:b4133f3:  *
1:b4133f3:  * Unless required by applicable law or agreed to in writing, software
1:b4133f3:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b4133f3:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b4133f3:  * See the License for the specific language governing permissions and
1:b4133f3:  * limitations under the License.
1:b4133f3:  */
1:b4133f3: 
1:b4133f3: package org.apache.cassandra.io.util;
1:b4133f3: 
1:b4133f3: public class SsdDiskOptimizationStrategy implements DiskOptimizationStrategy
1:b4133f3: {
1:b4133f3:     private final double diskOptimizationPageCrossChance;
1:b4133f3: 
1:b4133f3:     public SsdDiskOptimizationStrategy(double diskOptimizationPageCrossChance)
1:b4133f3:     {
1:b4133f3:         this.diskOptimizationPageCrossChance = diskOptimizationPageCrossChance;
1:b4133f3:     }
1:b4133f3: 
1:b4133f3:     /**
1:b4133f3:      * For solid state disks only add one page if the chance of crossing to the next page is more
1:b4133f3:      * than a predifined value.
1:b4133f3:      *
1:b4133f3:      * @see org.apache.cassandra.config.Config#disk_optimization_page_cross_chance
1:b4133f3:      */
1:b4133f3:     @Override
1:b4133f3:     public int bufferSize(long recordSize)
1:b4133f3:     {
1:b4133f3:         // The crossing probability is calculated assuming a uniform distribution of record
1:b4133f3:         // start position in a page, so it's the record size modulo the page size divided by
1:b4133f3:         // the total page size.
1:b4133f3:         double pageCrossProbability = (recordSize % 4096) / 4096.;
1:b4133f3:         // if the page cross probability is equal or bigger than disk_optimization_page_cross_chance we add one page
1:b4133f3:         if ((pageCrossProbability - diskOptimizationPageCrossChance) > -1e-16)
1:b4133f3:             recordSize += 4096;
1:b4133f3: 
1:b4133f3:         return roundBufferSize(recordSize);
1:b4133f3:     }
1:b4133f3: }
============================================================================
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:b4133f3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.io.util;
1: 
1: public class SsdDiskOptimizationStrategy implements DiskOptimizationStrategy
1: {
1:     private final double diskOptimizationPageCrossChance;
1: 
1:     public SsdDiskOptimizationStrategy(double diskOptimizationPageCrossChance)
1:     {
1:         this.diskOptimizationPageCrossChance = diskOptimizationPageCrossChance;
1:     }
1: 
1:     /**
1:      * For solid state disks only add one page if the chance of crossing to the next page is more
1:      * than a predifined value.
1:      *
1:      * @see org.apache.cassandra.config.Config#disk_optimization_page_cross_chance
1:      */
1:     @Override
1:     public int bufferSize(long recordSize)
1:     {
1:         // The crossing probability is calculated assuming a uniform distribution of record
1:         // start position in a page, so it's the record size modulo the page size divided by
1:         // the total page size.
1:         double pageCrossProbability = (recordSize % 4096) / 4096.;
1:         // if the page cross probability is equal or bigger than disk_optimization_page_cross_chance we add one page
1:         if ((pageCrossProbability - diskOptimizationPageCrossChance) > -1e-16)
1:             recordSize += 4096;
1: 
1:         return roundBufferSize(recordSize);
1:     }
1: }
============================================================================