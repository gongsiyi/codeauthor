1:07cf56f: /*
1:9e0ee8f:  * Licensed to the Apache Software Foundation (ASF) under one
1:9e0ee8f:  * or more contributor license agreements.  See the NOTICE file
1:9e0ee8f:  * distributed with this work for additional information
1:9e0ee8f:  * regarding copyright ownership.  The ASF licenses this file
1:9e0ee8f:  * to you under the Apache License, Version 2.0 (the
1:9e0ee8f:  * "License"); you may not use this file except in compliance
1:9e0ee8f:  * with the License.  You may obtain a copy of the License at
1:9e0ee8f:  *
1:9e0ee8f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:9e0ee8f:  *
1:9e0ee8f:  * Unless required by applicable law or agreed to in writing, software
1:9e0ee8f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:9e0ee8f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9e0ee8f:  * See the License for the specific language governing permissions and
1:9e0ee8f:  * limitations under the License.
1:9e0ee8f:  */
1:42eea2c: package org.apache.cassandra.utils;
1:9e0ee8f: 
1:c1f2757: import com.google.common.base.Objects;
1:42eea2c: 
1:42eea2c: public class Pair<T1, T2>
1:42eea2c: {
1:42eea2c:     public final T1 left;
1:42eea2c:     public final T2 right;
1:42eea2c: 
1:94e4ace:     protected Pair(T1 left, T2 right)
1:42eea2c:     {
1:42eea2c:         this.left = left;
1:42eea2c:         this.right = right;
1:42eea2c:     }
1:42eea2c: 
1:42eea2c:     @Override
1:c1f2757:     public final int hashCode()
1:42eea2c:     {
1:c1f2757:         int hashCode = 31 + (left == null ? 0 : left.hashCode());
1:c1f2757:         return 31*hashCode + (right == null ? 0 : right.hashCode());
1:42eea2c:     }
1:42eea2c: 
1:42eea2c:     @Override
1:c1f2757:     public final boolean equals(Object o)
1:42eea2c:     {
1:c1f2757:         if(!(o instanceof Pair))
1:c1f2757:             return false;
1:c1f2757:         Pair that = (Pair)o;
1:c1f2757:         // handles nulls properly
1:c1f2757:         return Objects.equal(left, that.left) && Objects.equal(right, that.right);
1:42eea2c:     }
1:42eea2c: 
1:42eea2c:     @Override
1:42eea2c:     public String toString()
1:42eea2c:     {
1:65e99f9:         return "(" + left + "," + right + ")";
1:42eea2c:     }
1:9a48694: 
1:9a48694:     public static <X, Y> Pair<X, Y> create(X x, Y y)
1:9a48694:     {
1:9a48694:         return new Pair<X, Y>(x, y);
1:9a48694:     }
1:42eea2c: }
============================================================================
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:94e4ace
/////////////////////////////////////////////////////////////////////////
1:     protected Pair(T1 left, T2 right)
commit:7af7eb3
/////////////////////////////////////////////////////////////////////////
0:     private Pair(T1 left, T2 right)
commit:9a48694
/////////////////////////////////////////////////////////////////////////
1: 
1:     public static <X, Y> Pair<X, Y> create(X x, Y y)
1:     {
1:         return new Pair<X, Y>(x, y);
1:     }
commit:65e99f9
/////////////////////////////////////////////////////////////////////////
1:         return "(" + left + "," + right + ")";
commit:9e0ee8f
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
commit:42eea2c
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.utils;
1: 
1: public class Pair<T1, T2>
1: {
1:     public final T1 left;
1:     public final T2 right;
1: 
0:     public Pair(T1 left, T2 right)
1:     {
1:         this.left = left;
1:         this.right = right;
1:     }
1: 
1:     @Override
0:     public int hashCode()
1:     {
0:         throw new UnsupportedOperationException("todo");
1:     }
1: 
1:     @Override
0:     public boolean equals(Object obj)
1:     {
0:         throw new UnsupportedOperationException("todo");
1:     }
1: 
1:     @Override
1:     public String toString()
1:     {
0:         return "Pair(" +
0:                "left=" + left +
0:                ", right=" + right +
0:                ')';
1:     }
1: }
author:Dave Brosius
-------------------------------------------------------------------------------
commit:84b25f0
/////////////////////////////////////////////////////////////////////////
0:     public Pair(T1 left, T2 right)
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
0: 
/////////////////////////////////////////////////////////////////////////
0: 
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
0: 
/////////////////////////////////////////////////////////////////////////
0: 
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
author:Chris Goffinet
-------------------------------------------------------------------------------
commit:c1f2757
/////////////////////////////////////////////////////////////////////////
1: import com.google.common.base.Objects;
0: 
0: public class Pair<T1, T2>
/////////////////////////////////////////////////////////////////////////
1:     public final int hashCode()
1:         int hashCode = 31 + (left == null ? 0 : left.hashCode());
1:         return 31*hashCode + (right == null ? 0 : right.hashCode());
0:     
1:     public final boolean equals(Object o)
1:         if(!(o instanceof Pair))
1:             return false;
1:         Pair that = (Pair)o;
1:         // handles nulls properly
1:         return Objects.equal(left, that.left) && Objects.equal(right, that.right);
0:     
author:Jun Rao
-------------------------------------------------------------------------------
commit:77879d5
/////////////////////////////////////////////////////////////////////////
0: public final class Pair<T1, T2>
============================================================================