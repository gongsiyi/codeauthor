1:dc37dea: /*
1:dc37dea:  * Licensed to the Apache Software Foundation (ASF) under one
1:dc37dea:  * or more contributor license agreements.  See the NOTICE file
1:dc37dea:  * distributed with this work for additional information
1:dc37dea:  * regarding copyright ownership.  The ASF licenses this file
1:dc37dea:  * to you under the Apache License, Version 2.0 (the
1:dc37dea:  * "License"); you may not use this file except in compliance
1:dc37dea:  * with the License.  You may obtain a copy of the License at
1:dc37dea:  *
1:dc37dea:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dc37dea:  *
1:dc37dea:  * Unless required by applicable law or agreed to in writing, software
1:dc37dea:  * distributed under the License is distributed on an "AS IS" BASIS,
1:dc37dea:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dc37dea:  * See the License for the specific language governing permissions and
1:dc37dea:  * limitations under the License.
1:dc37dea:  */
1:dc37dea: package org.apache.cassandra.utils.obs;
2:dc37dea: 
1:dc37dea: import java.io.Closeable;
1:dc37dea: import java.io.DataOutput;
1:dc37dea: import java.io.IOException;
1:5ebadc1: 
1:a7f4134: import org.apache.cassandra.utils.concurrent.Ref;
1:a7f4134: 
1:dc37dea: public interface IBitSet extends Closeable
1:dc37dea: {
1:dc37dea:     public long capacity();
1:dc37dea: 
1:dc37dea:     /**
1:dc37dea:      * Returns true or false for the specified bit index. The index should be
1:dc37dea:      * less than the capacity.
1:dc37dea:      */
1:dc37dea:     public boolean get(long index);
1:dc37dea: 
1:dc37dea:     /**
1:dc37dea:      * Sets the bit at the specified index. The index should be less than the
1:dc37dea:      * capacity.
1:dc37dea:      */
1:dc37dea:     public void set(long index);
1:dc37dea: 
1:dc37dea:     /**
1:dc37dea:      * clears the bit. The index should be less than the capacity.
1:dc37dea:      */
1:dc37dea:     public void clear(long index);
1:dc37dea: 
1:60d9c7f:     public void serialize(DataOutput out) throws IOException;
1:dc37dea: 
1:03f72ac:     public long serializedSize();
1:dc37dea: 
1:dc37dea:     public void clear();
1:7a14a77: 
1:5ebadc1:     public void close();
1:dc37dea: 
1:7a14a77:     /**
1:7a14a77:      * Returns the amount of memory in bytes used off heap.
1:7a14a77:      * @return the amount of memory in bytes used off heap
1:7a14a77:      */
1:7a14a77:     public long offHeapSize();
1:a7f4134: 
1:a7f4134:     public void addTo(Ref.IdentityCollection identities);
1:dc37dea: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:a7f4134
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.utils.concurrent.Ref;
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void addTo(Ref.IdentityCollection identities);
author:Ariel Weisberg
-------------------------------------------------------------------------------
commit:03f72ac
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public long serializedSize();
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:9aaea24
author:blerer
-------------------------------------------------------------------------------
commit:7a14a77
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Returns the amount of memory in bytes used off heap.
1:      * @return the amount of memory in bytes used off heap
1:      */
1:     public long offHeapSize();
author:belliottsmith
-------------------------------------------------------------------------------
commit:5ebadc1
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void close();
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:60d9c7f
/////////////////////////////////////////////////////////////////////////
1:     public void serialize(DataOutput out) throws IOException;
commit:dc37dea
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.utils.obs;
1: 
1: import java.io.Closeable;
1: import java.io.DataOutput;
1: import java.io.IOException;
1: 
0: import org.apache.cassandra.db.TypeSizes;
1: 
1: public interface IBitSet extends Closeable
1: {
1:     public long capacity();
1: 
1:     /**
1:      * Returns true or false for the specified bit index. The index should be
1:      * less than the capacity.
1:      */
1:     public boolean get(long index);
1: 
1:     /**
1:      * Sets the bit at the specified index. The index should be less than the
1:      * capacity.
1:      */
1:     public void set(long index);
1: 
1:     /**
1:      * clears the bit. The index should be less than the capacity.
1:      */
1:     public void clear(long index);
1: 
0:     public void serialize(DataOutput dos) throws IOException;
1: 
0:     public long serializedSize(TypeSizes type);
1: 
1:     public void clear();
1: }
============================================================================