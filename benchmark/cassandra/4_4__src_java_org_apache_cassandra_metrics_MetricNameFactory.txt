1:69cedbf: /*
1:69cedbf:  * Licensed to the Apache Software Foundation (ASF) under one
1:69cedbf:  * or more contributor license agreements.  See the NOTICE file
1:69cedbf:  * distributed with this work for additional information
1:69cedbf:  * regarding copyright ownership.  The ASF licenses this file
1:69cedbf:  * to you under the Apache License, Version 2.0 (the
1:69cedbf:  * "License"); you may not use this file except in compliance
1:69cedbf:  * with the License.  You may obtain a copy of the License at
1:69cedbf:  *
1:69cedbf:  *     http://www.apache.org/licenses/LICENSE-2.0
1:69cedbf:  *
1:69cedbf:  * Unless required by applicable law or agreed to in writing, software
1:69cedbf:  * distributed under the License is distributed on an "AS IS" BASIS,
1:69cedbf:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:69cedbf:  * See the License for the specific language governing permissions and
1:69cedbf:  * limitations under the License.
1:69cedbf:  */
1:69cedbf: package org.apache.cassandra.metrics;
2:69cedbf: 
1:3205e5d: 
1:69cedbf: public interface MetricNameFactory
1:69cedbf: {
1:69cedbf:     /**
1:407980c:      * Create a qualified name from given metric name.
1:69cedbf:      *
1:407980c:      * @param metricName part of qualified name.
1:407980c:      * @return new String with given metric name.
1:69cedbf:      */
1:8896a70:     CassandraMetricsRegistry.MetricName createMetricName(String metricName);
1:69cedbf: }
============================================================================
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:8896a70
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     CassandraMetricsRegistry.MetricName createMetricName(String metricName);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:3205e5d
/////////////////////////////////////////////////////////////////////////
0: import com.yammer.metrics.core.MetricName;
1: 
/////////////////////////////////////////////////////////////////////////
0:     MetricName createMetricName(String metricName);
author:Dave Brosius
-------------------------------------------------------------------------------
commit:407980c
/////////////////////////////////////////////////////////////////////////
1:      * Create a qualified name from given metric name.
1:      * @param metricName part of qualified name.
1:      * @return new String with given metric name.
commit:c27a161
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:     String createMetricName(String metricName);
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:69cedbf
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.metrics;
1: 
0: import com.yammer.metrics.core.MetricName;
1: 
1: public interface MetricNameFactory
1: {
1:     /**
0:      * Create {@link MetricName} from given metric name.
1:      *
0:      * @param metricName Name part of {@link MetricName}.
0:      * @return new MetricName with given metric name.
1:      */
0:     MetricName createMetricName(String metricName);
1: }
============================================================================