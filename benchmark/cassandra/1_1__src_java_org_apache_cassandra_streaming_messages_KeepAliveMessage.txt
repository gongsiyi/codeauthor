1:8af61ac: /*
1:8af61ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:8af61ac:  * or more contributor license agreements.  See the NOTICE file
1:8af61ac:  * distributed with this work for additional information
1:8af61ac:  * regarding copyright ownership.  The ASF licenses this file
1:8af61ac:  * to you under the Apache License, Version 2.0 (the
1:8af61ac:  * "License"); you may not use this file except in compliance
1:8af61ac:  * with the License.  You may obtain a copy of the License at
1:8af61ac:  *
1:8af61ac:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8af61ac:  *
1:8af61ac:  * Unless required by applicable law or agreed to in writing, software
1:8af61ac:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8af61ac:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8af61ac:  * See the License for the specific language governing permissions and
1:8af61ac:  * limitations under the License.
1:8af61ac:  */
1:8af61ac: 
1:8af61ac: package org.apache.cassandra.streaming.messages;
1:8af61ac: 
1:8af61ac: import java.io.IOException;
1:8af61ac: import java.nio.channels.ReadableByteChannel;
1:8af61ac: 
1:8af61ac: import org.apache.cassandra.io.util.DataOutputStreamPlus;
1:8af61ac: import org.apache.cassandra.streaming.StreamSession;
1:8af61ac: 
1:8af61ac: public class KeepAliveMessage extends StreamMessage
1:8af61ac: {
1:8af61ac:     public static Serializer<KeepAliveMessage> serializer = new Serializer<KeepAliveMessage>()
1:8af61ac:     {
1:8af61ac:         public KeepAliveMessage deserialize(ReadableByteChannel in, int version, StreamSession session) throws IOException
1:8af61ac:         {
1:8af61ac:             return new KeepAliveMessage();
1:8af61ac:         }
1:8af61ac: 
1:8af61ac:         public void serialize(KeepAliveMessage message, DataOutputStreamPlus out, int version, StreamSession session)
1:8af61ac:         {}
1:8af61ac:     };
1:8af61ac: 
1:8af61ac:     public KeepAliveMessage()
1:8af61ac:     {
1:8af61ac:         super(Type.KEEP_ALIVE);
1:8af61ac:     }
1:8af61ac: 
1:8af61ac:     public String toString()
1:8af61ac:     {
1:8af61ac:         return "keep-alive";
1:8af61ac:     }
1:8af61ac: }
============================================================================
author:Paulo Motta
-------------------------------------------------------------------------------
commit:8af61ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.streaming.messages;
1: 
1: import java.io.IOException;
1: import java.nio.channels.ReadableByteChannel;
1: 
1: import org.apache.cassandra.io.util.DataOutputStreamPlus;
1: import org.apache.cassandra.streaming.StreamSession;
1: 
1: public class KeepAliveMessage extends StreamMessage
1: {
1:     public static Serializer<KeepAliveMessage> serializer = new Serializer<KeepAliveMessage>()
1:     {
1:         public KeepAliveMessage deserialize(ReadableByteChannel in, int version, StreamSession session) throws IOException
1:         {
1:             return new KeepAliveMessage();
1:         }
1: 
1:         public void serialize(KeepAliveMessage message, DataOutputStreamPlus out, int version, StreamSession session)
1:         {}
1:     };
1: 
1:     public KeepAliveMessage()
1:     {
1:         super(Type.KEEP_ALIVE);
1:     }
1: 
1:     public String toString()
1:     {
1:         return "keep-alive";
1:     }
1: }
============================================================================