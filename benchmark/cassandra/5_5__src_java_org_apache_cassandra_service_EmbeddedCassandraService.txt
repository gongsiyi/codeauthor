1:0160ad5: /*
1:0160ad5:  * Licensed to the Apache Software Foundation (ASF) under one
1:0160ad5:  * or more contributor license agreements.  See the NOTICE file
1:0160ad5:  * distributed with this work for additional information
1:0160ad5:  * regarding copyright ownership.  The ASF licenses this file
1:0160ad5:  * to you under the Apache License, Version 2.0 (the
1:0160ad5:  * "License"); you may not use this file except in compliance
1:0160ad5:  * with the License.  You may obtain a copy of the License at
2:07cdfd0:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:07cdfd0:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:c8889a7:  */
1:07cf56f: package org.apache.cassandra.service;
1:266f6b7: 
1:c8889a7: import java.io.IOException;
1:0160ad5: 
1:c8889a7: /**
1:c8889a7:  * An embedded, in-memory cassandra storage service that listens
1:0438494:  * on the thrift interface as configured in cassandra.yaml
1:c8889a7:  * This kind of service is useful when running unit tests of
1:c8889a7:  * services using cassandra for example.
1:07cdfd0:  *
1:9981316:  * See {@link org.apache.cassandra.service.EmbeddedCassandraServiceTest} for usage.
1:c8889a7:  * <p>
1:c8889a7:  * This is the implementation of https://issues.apache.org/jira/browse/CASSANDRA-740
1:c8889a7:  * <p>
1:c8889a7:  * How to use:
1:1506731:  * In the client code simply create a new EmbeddedCassandraService and start it.
1:c8889a7:  * Example:
1:c8889a7:  * <pre>
6:c8889a7: 
1:c8889a7:         cassandra = new EmbeddedCassandraService();
1:1506731:         cassandra.start();
1:c8889a7: 
1:c8889a7:  * </pre>
1:0160ad5:  */
1:1506731: public class EmbeddedCassandraService
1:266f6b7: {
1:c8889a7: 
1:c8889a7:     CassandraDaemon cassandraDaemon;
1:c8889a7: 
1:1506731:     public void start() throws IOException
3:c8889a7:     {
1:9797511:         cassandraDaemon = CassandraDaemon.instance;
1:9797511:         cassandraDaemon.applyConfig();
1:c8889a7:         cassandraDaemon.init(null);
1:c8889a7:         cassandraDaemon.start();
1:266f6b7:     }
3:c8889a7: }
============================================================================
author:Robert Stupp
-------------------------------------------------------------------------------
commit:9797511
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         cassandraDaemon = CassandraDaemon.instance;
1:         cassandraDaemon.applyConfig();
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:266f6b7
/////////////////////////////////////////////////////////////////////////
1: 
0:     public void stop() throws IOException
1:     {
0:         cassandraDaemon.deactivate();
1:     }
commit:6d3a3ee
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.service.CassandraDaemon;
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1: package org.apache.cassandra.service;
author:Dave Brosius
-------------------------------------------------------------------------------
commit:9981316
/////////////////////////////////////////////////////////////////////////
1:  * See {@link org.apache.cassandra.service.EmbeddedCassandraServiceTest} for usage.
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:a19f7f1
/////////////////////////////////////////////////////////////////////////
commit:b803c37
commit:ef25537
/////////////////////////////////////////////////////////////////////////
commit:0438494
/////////////////////////////////////////////////////////////////////////
1:  * on the thrift interface as configured in cassandra.yaml
/////////////////////////////////////////////////////////////////////////
commit:0160ad5
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  * 
1:  */
1: 
author:Gary Dusbabek
-------------------------------------------------------------------------------
commit:1506731
/////////////////////////////////////////////////////////////////////////
1:  * In the client code simply create a new EmbeddedCassandraService and start it.
1:         cassandra.start();
1: public class EmbeddedCassandraService
1:     public void start() throws IOException
commit:c8889a7
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.service;
1: 
0: import java.io.File;
0: import java.io.FileOutputStream;
1: import java.io.IOException;
0: import java.io.InputStream;
0: import java.io.OutputStream;
1: 
0: import org.apache.cassandra.config.DatabaseDescriptor;
0: import org.apache.cassandra.io.util.FileUtils;
0: import org.apache.cassandra.thrift.CassandraDaemon;
0: import org.apache.thrift.transport.TTransportException;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
1: 
1: /**
1:  * An embedded, in-memory cassandra storage service that listens
0:  * on the thrift interface as configured in storage-conf.xml
1:  * This kind of service is useful when running unit tests of
1:  * services using cassandra for example.
0:  *
0:  * See {@link EmbeddedCassandraServiceTest} for usage.
1:  * <p>
1:  * This is the implementation of https://issues.apache.org/jira/browse/CASSANDRA-740
1:  * <p>
1:  * How to use:
0:  * In the client code create a new thread and spawn it with its {@link Thread#start()} method.
1:  * Example:
1:  * <pre>
0:  *      // Tell cassandra where the configuration files are.
0:         System.setProperty("storage-config", "conf");
1: 
1:         cassandra = new EmbeddedCassandraService();
0:         cassandra.init();
1: 
0:         // spawn cassandra in a new thread
0:         Thread t = new Thread(cassandra);
0:         t.setDaemon(true);
0:         t.start();
1: 
1:  * </pre>
0:  * @author Ran Tavory (rantav@gmail.com)
0:  *
1:  */
0: public class EmbeddedCassandraService implements Runnable
1: {
1: 
1:     CassandraDaemon cassandraDaemon;
1: 
0:     public void init() throws TTransportException, IOException
1:     {
0:         cassandraDaemon = new CassandraDaemon();
1:         cassandraDaemon.init(null);
1:     }
1: 
0:     public void run()
1:     {
1:         cassandraDaemon.start();
1:     }
1: }
============================================================================