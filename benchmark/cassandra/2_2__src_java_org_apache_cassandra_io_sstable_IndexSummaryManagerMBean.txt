1:dbd1a72: /*
1:dbd1a72:  * Licensed to the Apache Software Foundation (ASF) under one
1:dbd1a72:  * or more contributor license agreements.  See the NOTICE file
1:dbd1a72:  * distributed with this work for additional information
1:dbd1a72:  * regarding copyright ownership.  The ASF licenses this file
1:dbd1a72:  * to you under the Apache License, Version 2.0 (the
1:dbd1a72:  * "License"); you may not use this file except in compliance
1:dbd1a72:  * with the License.  You may obtain a copy of the License at
1:dbd1a72:  *
1:dbd1a72:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dbd1a72:  *
1:dbd1a72:  * Unless required by applicable law or agreed to in writing, software
1:dbd1a72:  * distributed under the License is distributed on an "AS IS" BASIS,
1:dbd1a72:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dbd1a72:  * See the License for the specific language governing permissions and
1:dbd1a72:  * limitations under the License.
1:dbd1a72:  */
1:dbd1a72: package org.apache.cassandra.io.sstable;
1:dbd1a72: 
1:dbd1a72: import java.io.IOException;
1:dbd1a72: import java.util.Map;
1:dbd1a72: 
1:dbd1a72: public interface IndexSummaryManagerMBean
1:dbd1a72: {
1:dbd1a72:     public long getMemoryPoolCapacityInMB();
1:dbd1a72:     public void setMemoryPoolCapacityInMB(long memoryPoolCapacityInMB);
1:dbd1a72: 
1:dbd1a72:     /**
1:dbd1a72:      * Returns the current actual off-heap memory usage of the index summaries for all non-compacting sstables.
1:dbd1a72:      * @return The amount of memory used in MB.
1:dbd1a72:      */
1:dbd1a72:     public double getMemoryPoolSizeInMB();
1:dbd1a72: 
1:dbd1a72:     /**
1:ee477cc:      * Returns a map of SSTable filenames to their current effective index interval.
1:dbd1a72:      */
1:ee477cc:     public Map<String, Integer> getIndexIntervals();
1:dbd1a72: 
1:ee477cc:     public double getAverageIndexInterval();
1:dbd1a72: 
1:dbd1a72:     public void redistributeSummaries() throws IOException;
1:dbd1a72: 
1:dbd1a72:     public int getResizeIntervalInMinutes();
1:dbd1a72:     public void setResizeIntervalInMinutes(int resizeIntervalInMinutes);
1:dbd1a72: }
============================================================================
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:ee477cc
/////////////////////////////////////////////////////////////////////////
1:      * Returns a map of SSTable filenames to their current effective index interval.
1:     public Map<String, Integer> getIndexIntervals();
1:     public double getAverageIndexInterval();
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:dbd1a72
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.io.sstable;
1: 
1: import java.io.IOException;
1: import java.util.Map;
1: 
1: public interface IndexSummaryManagerMBean
1: {
1:     public long getMemoryPoolCapacityInMB();
1:     public void setMemoryPoolCapacityInMB(long memoryPoolCapacityInMB);
1: 
1:     /**
1:      * Returns the current actual off-heap memory usage of the index summaries for all non-compacting sstables.
1:      * @return The amount of memory used in MB.
1:      */
1:     public double getMemoryPoolSizeInMB();
1: 
1:     /**
0:      * Returns a map of SSTable filenames to their current sampling ratio, where 1.0 indicates that all of the
0:      * original index summary entries have been retained and 0.5 indicates that half of the original entries have
0:      * been discarded.
0:      * @return A map of SSTable filenames to their sampling ratios.
1:      */
0:     public Map<String, Double> getSamplingRatios();
1: 
0:     public double getAverageSamplingRatio();
1: 
1:     public void redistributeSummaries() throws IOException;
1: 
1:     public int getResizeIntervalInMinutes();
1:     public void setResizeIntervalInMinutes(int resizeIntervalInMinutes);
1: }
============================================================================