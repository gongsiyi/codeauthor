1:5805a76: /*
1:5805a76:  * Licensed to the Apache Software Foundation (ASF) under one
1:5805a76:  * or more contributor license agreements.  See the NOTICE file
1:5805a76:  * distributed with this work for additional information
1:5805a76:  * regarding copyright ownership.  The ASF licenses this file
1:5805a76:  * to you under the Apache License, Version 2.0 (the
1:5805a76:  * "License"); you may not use this file except in compliance
1:5805a76:  * with the License.  You may obtain a copy of the License at
1:5805a76:  *
1:5805a76:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5805a76:  *
1:5805a76:  * Unless required by applicable law or agreed to in writing, software
1:5805a76:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5805a76:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5805a76:  * See the License for the specific language governing permissions and
1:5805a76:  * limitations under the License.
1:5805a76:  */
1:5805a76: 
1:5805a76: package org.apache.cassandra.tools.nodetool.stats;
1:5805a76: 
1:5805a76: import java.util.ArrayList;
1:5805a76: import java.util.List;
1:5805a76: 
1:5805a76: public class StatsTable
1:5805a76: {
1:5805a76:     public String name;
1:5805a76:     public boolean isIndex;
1:5805a76:     public boolean isLeveledSstable = false;
1:5805a76:     public Object sstableCount;
1:5805a76:     public String spaceUsedLive;
1:5805a76:     public String spaceUsedTotal;
1:5805a76:     public String spaceUsedBySnapshotsTotal;
1:5805a76:     public boolean offHeapUsed = false;
1:5805a76:     public String offHeapMemoryUsedTotal;
1:5805a76:     public Object sstableCompressionRatio;
1:5805a76:     public Object numberOfKeysEstimate;
1:5805a76:     public Object memtableCellCount;
1:5805a76:     public String memtableDataSize;
1:5805a76:     public boolean memtableOffHeapUsed = false;
1:5805a76:     public String memtableOffHeapMemoryUsed;
1:5805a76:     public Object memtableSwitchCount;
1:5805a76:     public long localReadCount;
1:5805a76:     public double localReadLatencyMs;
1:5805a76:     public long localWriteCount;
1:5805a76:     public double localWriteLatencyMs;
1:5805a76:     public Object pendingFlushes;
1:5805a76:     public Object bloomFilterFalsePositives;
1:5805a76:     public Object bloomFilterFalseRatio;
1:5805a76:     public String bloomFilterSpaceUsed;
1:5805a76:     public boolean bloomFilterOffHeapUsed = false;
1:5805a76:     public String bloomFilterOffHeapMemoryUsed;
1:5805a76:     public boolean indexSummaryOffHeapUsed = false;
1:5805a76:     public String indexSummaryOffHeapMemoryUsed;
1:5805a76:     public boolean compressionMetadataOffHeapUsed = false;
1:5805a76:     public String compressionMetadataOffHeapMemoryUsed;
1:5805a76:     public long compactedPartitionMinimumBytes;
1:5805a76:     public long compactedPartitionMaximumBytes;
1:5805a76:     public long compactedPartitionMeanBytes;
1:9b47dd5:     public double percentRepaired;
1:5805a76:     public double averageLiveCellsPerSliceLastFiveMinutes;
1:5805a76:     public long maximumLiveCellsPerSliceLastFiveMinutes;
1:5805a76:     public double averageTombstonesPerSliceLastFiveMinutes;
1:5805a76:     public long maximumTombstonesPerSliceLastFiveMinutes;
1:5805a76:     public String droppedMutations;
1:5805a76:     public List<String> sstablesInEachLevel = new ArrayList<>();
1:5805a76: }
============================================================================
author:Chris Lohfink
-------------------------------------------------------------------------------
commit:9b47dd5
/////////////////////////////////////////////////////////////////////////
1:     public double percentRepaired;
author:Shogo Hoshii
-------------------------------------------------------------------------------
commit:5805a76
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.tools.nodetool.stats;
1: 
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: public class StatsTable
1: {
1:     public String name;
1:     public boolean isIndex;
1:     public boolean isLeveledSstable = false;
1:     public Object sstableCount;
1:     public String spaceUsedLive;
1:     public String spaceUsedTotal;
1:     public String spaceUsedBySnapshotsTotal;
1:     public boolean offHeapUsed = false;
1:     public String offHeapMemoryUsedTotal;
1:     public Object sstableCompressionRatio;
1:     public Object numberOfKeysEstimate;
1:     public Object memtableCellCount;
1:     public String memtableDataSize;
1:     public boolean memtableOffHeapUsed = false;
1:     public String memtableOffHeapMemoryUsed;
1:     public Object memtableSwitchCount;
1:     public long localReadCount;
1:     public double localReadLatencyMs;
1:     public long localWriteCount;
1:     public double localWriteLatencyMs;
1:     public Object pendingFlushes;
1:     public Object bloomFilterFalsePositives;
1:     public Object bloomFilterFalseRatio;
1:     public String bloomFilterSpaceUsed;
1:     public boolean bloomFilterOffHeapUsed = false;
1:     public String bloomFilterOffHeapMemoryUsed;
1:     public boolean indexSummaryOffHeapUsed = false;
1:     public String indexSummaryOffHeapMemoryUsed;
1:     public boolean compressionMetadataOffHeapUsed = false;
1:     public String compressionMetadataOffHeapMemoryUsed;
1:     public long compactedPartitionMinimumBytes;
1:     public long compactedPartitionMaximumBytes;
1:     public long compactedPartitionMeanBytes;
1:     public double averageLiveCellsPerSliceLastFiveMinutes;
1:     public long maximumLiveCellsPerSliceLastFiveMinutes;
1:     public double averageTombstonesPerSliceLastFiveMinutes;
1:     public long maximumTombstonesPerSliceLastFiveMinutes;
1:     public String droppedMutations;
1:     public List<String> sstablesInEachLevel = new ArrayList<>();
1: }
============================================================================