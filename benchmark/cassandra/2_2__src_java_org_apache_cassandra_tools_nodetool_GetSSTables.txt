1:c5a8190: /*
1:c5a8190:  * Licensed to the Apache Software Foundation (ASF) under one
1:c5a8190:  * or more contributor license agreements.  See the NOTICE file
1:c5a8190:  * distributed with this work for additional information
1:c5a8190:  * regarding copyright ownership.  The ASF licenses this file
1:c5a8190:  * to you under the Apache License, Version 2.0 (the
1:c5a8190:  * "License"); you may not use this file except in compliance
1:c5a8190:  * with the License.  You may obtain a copy of the License at
1:c5a8190:  *
1:c5a8190:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c5a8190:  *
1:c5a8190:  * Unless required by applicable law or agreed to in writing, software
1:c5a8190:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c5a8190:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c5a8190:  * See the License for the specific language governing permissions and
1:c5a8190:  * limitations under the License.
1:c5a8190:  */
1:c5a8190: package org.apache.cassandra.tools.nodetool;
1:c5a8190: 
1:c5a8190: import static com.google.common.base.Preconditions.checkArgument;
1:c5a8190: import io.airlift.command.Arguments;
1:c5a8190: import io.airlift.command.Command;
1:c5a8190: 
1:c5a8190: import java.util.ArrayList;
1:c5a8190: import java.util.List;
1:c5a8190: 
1:e24da8f: import io.airlift.command.Option;
1:c5a8190: import org.apache.cassandra.tools.NodeProbe;
1:c5a8190: import org.apache.cassandra.tools.NodeTool.NodeToolCmd;
1:c5a8190: 
1:c5a8190: @Command(name = "getsstables", description = "Print the sstable filenames that own the key")
1:c5a8190: public class GetSSTables extends NodeToolCmd
1:c5a8190: {
1:e24da8f:     @Option(title = "hex_format",
1:e24da8f:            name = {"-hf", "--hex-format"},
1:e24da8f:            description = "Specify the key in hexadecimal string format")
1:e24da8f:     private boolean hexFormat = false;
1:e24da8f: 
1:e24da8f:     @Arguments(usage = "<keyspace> <cfname> <key>", description = "The keyspace, the column family, and the key")
1:c5a8190:     private List<String> args = new ArrayList<>();
1:c5a8190: 
1:c5a8190:     @Override
1:c5a8190:     public void execute(NodeProbe probe)
1:c5a8190:     {
1:c5a8190:         checkArgument(args.size() == 3, "getsstables requires ks, cf and key args");
1:c5a8190:         String ks = args.get(0);
1:c5a8190:         String cf = args.get(1);
1:c5a8190:         String key = args.get(2);
1:c5a8190: 
1:e24da8f:         List<String> sstables = probe.getSSTables(ks, cf, key, hexFormat);
1:c5a8190:         for (String sstable : sstables)
1:c5a8190:         {
1:c5a8190:             System.out.println(sstable);
1:c5a8190:         }
1:c5a8190:     }
1:c5a8190: }
============================================================================
author:Paulo Motta
-------------------------------------------------------------------------------
commit:e24da8f
/////////////////////////////////////////////////////////////////////////
1: import io.airlift.command.Option;
1:     @Option(title = "hex_format",
1:            name = {"-hf", "--hex-format"},
1:            description = "Specify the key in hexadecimal string format")
1:     private boolean hexFormat = false;
1: 
1:     @Arguments(usage = "<keyspace> <cfname> <key>", description = "The keyspace, the column family, and the key")
/////////////////////////////////////////////////////////////////////////
1:         List<String> sstables = probe.getSSTables(ks, cf, key, hexFormat);
author:Dave Brosius
-------------------------------------------------------------------------------
commit:c5a8190
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.tools.nodetool;
1: 
1: import static com.google.common.base.Preconditions.checkArgument;
1: import io.airlift.command.Arguments;
1: import io.airlift.command.Command;
1: 
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: import org.apache.cassandra.tools.NodeProbe;
1: import org.apache.cassandra.tools.NodeTool.NodeToolCmd;
1: 
1: @Command(name = "getsstables", description = "Print the sstable filenames that own the key")
1: public class GetSSTables extends NodeToolCmd
1: {
0:     @Arguments(usage = "<keyspace> <table> <key>", description = "The keyspace, the table, and the key")
1:     private List<String> args = new ArrayList<>();
1: 
1:     @Override
1:     public void execute(NodeProbe probe)
1:     {
1:         checkArgument(args.size() == 3, "getsstables requires ks, cf and key args");
1:         String ks = args.get(0);
1:         String cf = args.get(1);
1:         String key = args.get(2);
1: 
0:         List<String> sstables = probe.getSSTables(ks, cf, key);
1:         for (String sstable : sstables)
1:         {
1:             System.out.println(sstable);
1:         }
1:     }
1: }
============================================================================