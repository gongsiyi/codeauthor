1:7536429: package org.apache.cassandra.stress.generate;
1:0bc9841: /*
1:0bc9841:  * 
1:0bc9841:  * Licensed to the Apache Software Foundation (ASF) under one
1:0bc9841:  * or more contributor license agreements.  See the NOTICE file
1:0bc9841:  * distributed with this work for additional information
1:0bc9841:  * regarding copyright ownership.  The ASF licenses this file
1:0bc9841:  * to you under the Apache License, Version 2.0 (the
1:0bc9841:  * "License"); you may not use this file except in compliance
1:0bc9841:  * with the License.  You may obtain a copy of the License at
1:0bc9841:  * 
1:0bc9841:  *   http://www.apache.org/licenses/LICENSE-2.0
1:0bc9841:  * 
1:0bc9841:  * Unless required by applicable law or agreed to in writing,
1:0bc9841:  * software distributed under the License is distributed on an
1:0bc9841:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:0bc9841:  * KIND, either express or implied.  See the License for the
1:0bc9841:  * specific language governing permissions and limitations
1:0bc9841:  * under the License.
1:0bc9841:  * 
1:0bc9841:  */
1:7536429: 
1:0bc9841: 
1:7536429: public class DistributionInverted extends Distribution
1:7536429: {
1:7536429: 
1:7536429:     final Distribution wrapped;
1:7536429:     final long min;
1:7536429:     final long max;
1:7536429: 
1:7536429:     public DistributionInverted(Distribution wrapped)
1:7536429:     {
1:7536429:         this.wrapped = wrapped;
1:7536429:         this.min = wrapped.minValue();
1:7536429:         this.max = wrapped.maxValue();
1:7536429:     }
1:7536429: 
1:7536429:     public long next()
1:7536429:     {
1:7536429:         return max - (wrapped.next() - min);
1:7536429:     }
1:7536429: 
1:7536429:     public double nextDouble()
1:7536429:     {
1:7536429:         return max - (wrapped.nextDouble() - min);
1:7536429:     }
1:7536429: 
1:7536429:     public long inverseCumProb(double cumProb)
1:7536429:     {
1:7536429:         return max - (wrapped.inverseCumProb(cumProb) - min);
1:7536429:     }
1:7536429: 
1:7536429:     public void setSeed(long seed)
1:7536429:     {
1:7536429:         wrapped.setSeed(seed);
1:7536429:     }
1:7536429: 
1:0580fb2:     public static Distribution invert(Distribution distribution)
1:0580fb2:     {
1:0580fb2:         if (distribution instanceof DistributionInverted)
1:0580fb2:             return ((DistributionInverted) distribution).wrapped;
1:0580fb2:         return new DistributionInverted(distribution);
1:0580fb2:     }
1:0580fb2: 
1:7536429: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:0580fb2
/////////////////////////////////////////////////////////////////////////
1:     public static Distribution invert(Distribution distribution)
1:     {
1:         if (distribution instanceof DistributionInverted)
1:             return ((DistributionInverted) distribution).wrapped;
1:         return new DistributionInverted(distribution);
1:     }
1: 
commit:7536429
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.stress.generate;
1: 
1: public class DistributionInverted extends Distribution
1: {
1: 
1:     final Distribution wrapped;
1:     final long min;
1:     final long max;
1: 
1:     public DistributionInverted(Distribution wrapped)
1:     {
1:         this.wrapped = wrapped;
1:         this.min = wrapped.minValue();
1:         this.max = wrapped.maxValue();
1:     }
1: 
1:     public long next()
1:     {
1:         return max - (wrapped.next() - min);
1:     }
1: 
1:     public double nextDouble()
1:     {
1:         return max - (wrapped.nextDouble() - min);
1:     }
1: 
1:     public long inverseCumProb(double cumProb)
1:     {
1:         return max - (wrapped.inverseCumProb(cumProb) - min);
1:     }
1: 
1:     public void setSeed(long seed)
1:     {
1:         wrapped.setSeed(seed);
1:     }
1: 
1: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:0bc9841
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  * 
1:  */
1: 
============================================================================