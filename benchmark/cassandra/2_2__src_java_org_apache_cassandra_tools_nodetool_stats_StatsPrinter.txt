1:5805a76: /*
1:5805a76:  * Licensed to the Apache Software Foundation (ASF) under one
1:5805a76:  * or more contributor license agreements.  See the NOTICE file
1:5805a76:  * distributed with this work for additional information
1:5805a76:  * regarding copyright ownership.  The ASF licenses this file
1:5805a76:  * to you under the Apache License, Version 2.0 (the
1:5805a76:  * "License"); you may not use this file except in compliance
1:5805a76:  * with the License.  You may obtain a copy of the License at
1:5805a76:  *
1:5805a76:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5805a76:  *
1:5805a76:  * Unless required by applicable law or agreed to in writing, software
1:5805a76:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5805a76:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5805a76:  * See the License for the specific language governing permissions and
1:5805a76:  * limitations under the License.
1:5805a76:  */
1:27d25c6: 
1:5805a76: package org.apache.cassandra.tools.nodetool.stats;
1:5805a76: 
1:5805a76: import java.io.PrintStream;
1:5805a76: 
1:27d25c6: import org.json.simple.JSONObject;
1:27d25c6: import org.yaml.snakeyaml.DumperOptions;
1:27d25c6: import org.yaml.snakeyaml.Yaml;
1:27d25c6: 
1:27d25c6: /**
1:27d25c6:  * Interface for the Stats printer, that'd output statistics
1:27d25c6:  * given the {@code StatsHolder}
1:27d25c6:  *
1:27d25c6:  * @param <T> Stats property bad type
1:27d25c6:  */
1:27d25c6: public interface StatsPrinter<T extends StatsHolder>
1:5805a76: {
1:27d25c6:     void print(T data, PrintStream out);
1:27d25c6: 
1:27d25c6:     static class JsonPrinter<T extends StatsHolder> implements StatsPrinter<T>
1:27d25c6:     {
1:27d25c6:         @Override
1:27d25c6:         public void print(T data, PrintStream out)
1:27d25c6:         {
1:27d25c6:             JSONObject json = new JSONObject();
1:27d25c6:             json.putAll(data.convert2Map());
1:27d25c6:             out.println(json.toString());
1:27d25c6:         }
1:27d25c6:     }
1:27d25c6: 
1:27d25c6:     static class YamlPrinter<T extends StatsHolder> implements StatsPrinter<T>
1:27d25c6:     {
1:27d25c6:         @Override
1:27d25c6:         public void print(T data, PrintStream out)
1:27d25c6:         {
1:27d25c6:             DumperOptions options = new DumperOptions();
1:27d25c6:             options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);
1:27d25c6: 
1:27d25c6:             Yaml yaml = new Yaml(options);
1:27d25c6:             out.println(yaml.dump(data.convert2Map()));
1:27d25c6:         }
1:27d25c6:     }
1:27d25c6: }
============================================================================
author:Hiroyuki Nishi
-------------------------------------------------------------------------------
commit:27d25c6
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.json.simple.JSONObject;
1: import org.yaml.snakeyaml.DumperOptions;
1: import org.yaml.snakeyaml.Yaml;
1: 
1: /**
1:  * Interface for the Stats printer, that'd output statistics
1:  * given the {@code StatsHolder}
1:  *
1:  * @param <T> Stats property bad type
1:  */
1: public interface StatsPrinter<T extends StatsHolder>
1:     void print(T data, PrintStream out);
1: 
1:     static class JsonPrinter<T extends StatsHolder> implements StatsPrinter<T>
1:     {
1:         @Override
1:         public void print(T data, PrintStream out)
1:         {
1:             JSONObject json = new JSONObject();
1:             json.putAll(data.convert2Map());
1:             out.println(json.toString());
1:         }
1:     }
1: 
1:     static class YamlPrinter<T extends StatsHolder> implements StatsPrinter<T>
1:     {
1:         @Override
1:         public void print(T data, PrintStream out)
1:         {
1:             DumperOptions options = new DumperOptions();
1:             options.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);
1: 
1:             Yaml yaml = new Yaml(options);
1:             out.println(yaml.dump(data.convert2Map()));
1:         }
1:     }
1: }
author:Shogo Hoshii
-------------------------------------------------------------------------------
commit:5805a76
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.tools.nodetool.stats;
1: 
1: import java.io.PrintStream;
1: 
0: public interface StatsPrinter<T>
1: {
0:     void printFormat(T data, PrintStream out);
0: }
============================================================================