1:07cf56f: /*
1:8a3543a:  * Licensed to the Apache Software Foundation (ASF) under one
1:8a3543a:  * or more contributor license agreements.  See the NOTICE file
1:8a3543a:  * distributed with this work for additional information
1:8a3543a:  * regarding copyright ownership.  The ASF licenses this file
1:8a3543a:  * to you under the Apache License, Version 2.0 (the
1:8a3543a:  * "License"); you may not use this file except in compliance
1:8a3543a:  * with the License.  You may obtain a copy of the License at
3:8a3543a:  *
1:8a3543a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8a3543a:  *
1:8a3543a:  * Unless required by applicable law or agreed to in writing, software
1:8a3543a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8a3543a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8a3543a:  * See the License for the specific language governing permissions and
1:8a3543a:  * limitations under the License.
2:8a3543a:  */
1:8a3543a: package org.apache.cassandra.db;
7:8a3543a: 
1:5a6f0b8: import java.io.IOException;
1:8a3543a: 
1:84eeb28: import org.apache.cassandra.io.IVersionedSerializer;
1:03f72ac: import org.apache.cassandra.io.util.DataInputPlus;
1:75508ec: import org.apache.cassandra.io.util.DataOutputPlus;
1:5a6f0b8: import org.apache.cassandra.net.MessageOut;
1:021ec71: import org.apache.cassandra.net.MessagingService;
1:8a3543a: 
3:8a3543a: /**
1:8a3543a:  * A truncate operation descriptor
1:8a3543a:  */
1:5a6f0b8: public class Truncation
5:8a3543a: {
1:587cb58:     public static final IVersionedSerializer<Truncation> serializer = new TruncationSerializer();
1:8a3543a: 
1:8a3543a:     public final String keyspace;
1:8a3543a:     public final String columnFamily;
1:8a3543a: 
1:8a3543a:     public Truncation(String keyspace, String columnFamily)
1:8a3543a:     {
1:8a3543a:         this.keyspace = keyspace;
1:8a3543a:         this.columnFamily = columnFamily;
5:8a3543a:     }
1:8a3543a: 
1:5a6f0b8:     public MessageOut<Truncation> createMessage()
1:8a3543a:     {
1:021ec71:         return new MessageOut<Truncation>(MessagingService.Verb.TRUNCATE, this, serializer);
1:8a3543a:     }
1:8a3543a: 
1:8a3543a:     public String toString()
1:8a3543a:     {
1:8a3543a:         return "Truncation(" + "keyspace='" + keyspace + '\'' + ", cf='" + columnFamily + "\')";
1:8a3543a:     }
1:8a3543a: }
1:8a3543a: 
1:84eeb28: class TruncationSerializer implements IVersionedSerializer<Truncation>
1:8a3543a: {
1:75508ec:     public void serialize(Truncation t, DataOutputPlus out, int version) throws IOException
1:8a3543a:     {
1:60d9c7f:         out.writeUTF(t.keyspace);
1:60d9c7f:         out.writeUTF(t.columnFamily);
1:8a3543a:     }
1:8a3543a: 
1:03f72ac:     public Truncation deserialize(DataInputPlus in, int version) throws IOException
1:8a3543a:     {
1:60d9c7f:         String keyspace = in.readUTF();
1:60d9c7f:         String columnFamily = in.readUTF();
1:8a3543a:         return new Truncation(keyspace, columnFamily);
1:8a3543a:     }
1:84eeb28: 
1:84eeb28:     public long serializedSize(Truncation truncation, int version)
1:84eeb28:     {
1:03f72ac:         return TypeSizes.sizeof(truncation.keyspace) + TypeSizes.sizeof(truncation.columnFamily);
1:84eeb28:     }
1:8a3543a: }
============================================================================
author:Ariel Weisberg
-------------------------------------------------------------------------------
commit:03f72ac
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataInputPlus;
/////////////////////////////////////////////////////////////////////////
1:     public Truncation deserialize(DataInputPlus in, int version) throws IOException
/////////////////////////////////////////////////////////////////////////
1:         return TypeSizes.sizeof(truncation.keyspace) + TypeSizes.sizeof(truncation.columnFamily);
author:belliottsmith
-------------------------------------------------------------------------------
commit:75508ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataOutputPlus;
/////////////////////////////////////////////////////////////////////////
1:     public void serialize(Truncation t, DataOutputPlus out, int version) throws IOException
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:60d9c7f
/////////////////////////////////////////////////////////////////////////
0:     public void serialize(Truncation t, DataOutput out, int version) throws IOException
1:         out.writeUTF(t.keyspace);
1:         out.writeUTF(t.columnFamily);
0:     public Truncation deserialize(DataInput in, int version) throws IOException
1:         String keyspace = in.readUTF();
1:         String columnFamily = in.readUTF();
commit:70554b2
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         return TypeSizes.NATIVE.sizeof(truncation.keyspace) + TypeSizes.NATIVE.sizeof(truncation.columnFamily);
commit:021ec71
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.net.MessagingService;
/////////////////////////////////////////////////////////////////////////
1:         return new MessageOut<Truncation>(MessagingService.Verb.TRUNCATE, this, serializer);
commit:5a6f0b8
/////////////////////////////////////////////////////////////////////////
0: import java.io.DataInput;
0: import java.io.DataOutput;
1: import java.io.IOException;
1: import org.apache.cassandra.net.MessageOut;
1: public class Truncation
/////////////////////////////////////////////////////////////////////////
1:     public MessageOut<Truncation> createMessage()
0:         return new MessageOut<Truncation>(StorageService.Verb.TRUNCATE, this, serializer);
commit:84eeb28
/////////////////////////////////////////////////////////////////////////
0: import java.io.*;
1: import org.apache.cassandra.io.IVersionedSerializer;
/////////////////////////////////////////////////////////////////////////
0:     private static IVersionedSerializer<Truncation> serializer;
/////////////////////////////////////////////////////////////////////////
0:     public static IVersionedSerializer<Truncation> serializer()
/////////////////////////////////////////////////////////////////////////
1: class TruncationSerializer implements IVersionedSerializer<Truncation>
0:     public void serialize(Truncation t, DataOutput dos, int version) throws IOException
0:     public Truncation deserialize(DataInput dis, int version) throws IOException
1: 
1:     public long serializedSize(Truncation truncation, int version)
1:     {
0:         throw new UnsupportedOperationException();
1:     }
commit:4bbf048
/////////////////////////////////////////////////////////////////////////
commit:b803c37
commit:e98eb1c
/////////////////////////////////////////////////////////////////////////
commit:ef25537
/////////////////////////////////////////////////////////////////////////
commit:4023c3b
/////////////////////////////////////////////////////////////////////////
0:         return new Message(FBUtilities.getLocalAddress(), StorageService.Verb.TRUNCATE, bos.toByteArray());
commit:52b6edc
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.concurrent.Stage;
/////////////////////////////////////////////////////////////////////////
0:         return new Message(FBUtilities.getLocalAddress(), Stage.MUTATION, StorageService.Verb.TRUNCATE,
commit:8a3543a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.db;
1: 
0: import java.io.ByteArrayOutputStream;
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
0: import java.io.IOException;
1: 
0: import org.apache.cassandra.concurrent.StageManager;
0: import org.apache.cassandra.io.ICompactSerializer;
0: import org.apache.cassandra.io.util.DataOutputBuffer;
0: import org.apache.cassandra.net.Message;
0: import org.apache.cassandra.service.StorageService;
0: import org.apache.cassandra.utils.FBUtilities;
1: 
1: /**
1:  * A truncate operation descriptor
1:  *
0:  * @author rantav@gmail.com
1:  *
1:  */
0: public class Truncation
1: {
0:     private static ICompactSerializer<Truncation> serializer;
1: 
1:     public final String keyspace;
1:     public final String columnFamily;
1: 
0:     static
1:     {
0:         serializer = new TruncationSerializer();
1:     }
1: 
0:     public static ICompactSerializer<Truncation> serializer()
1:     {
0:         return serializer;
1:     }
1: 
1:     public Truncation(String keyspace, String columnFamily)
1:     {
1:         this.keyspace = keyspace;
1:         this.columnFamily = columnFamily;
1:     }
1: 
1:     /**
0:      * This is equivalent to calling commit. Applies the changes to
0:      * to the table that is obtained by calling Table.open().
1:      */
0:     public void apply() throws IOException
1:     {
0:         Table.open(keyspace).getColumnFamilyStore(columnFamily).truncate();
1:     }
1: 
0:     public Message makeTruncationMessage() throws IOException
1:     {
0:         ByteArrayOutputStream bos = new ByteArrayOutputStream();
0:         DataOutputStream dos = new DataOutputStream(bos);
0:         serializer().serialize(this, dos);
0:         return new Message(FBUtilities.getLocalAddress(), StageManager.MUTATION_STAGE, StorageService.Verb.TRUNCATE,
0:                 bos.toByteArray());
1:     }
1: 
1: 
0:     public DataOutputBuffer getSerializedBuffer() throws IOException
1:     {
0:         DataOutputBuffer buffer = new DataOutputBuffer();
0:         Truncation.serializer().serialize(this, buffer);
0:         return buffer;
1:     }
1: 
1:     public String toString()
1:     {
1:         return "Truncation(" + "keyspace='" + keyspace + '\'' + ", cf='" + columnFamily + "\')";
1:     }
1: }
1: 
0: class TruncationSerializer implements ICompactSerializer<Truncation>
1: {
0:     public void serialize(Truncation t, DataOutputStream dos) throws IOException
1:     {
0:         dos.writeUTF(t.keyspace);
0:         dos.writeUTF(t.columnFamily);
1:     }
1: 
0:     public Truncation deserialize(DataInputStream dis) throws IOException
1:     {
0:         String keyspace = dis.readUTF();
0:         String columnFamily = dis.readUTF();
1:         return new Truncation(keyspace, columnFamily);
1:     }
1: }
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:587cb58
/////////////////////////////////////////////////////////////////////////
1:     public static final IVersionedSerializer<Truncation> serializer = new TruncationSerializer();
commit:f81cc74
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.utils.FBUtilities;
0: 
0: import static org.apache.cassandra.utils.FBUtilities.serializedUTF8Size;
/////////////////////////////////////////////////////////////////////////
0:         return serializedUTF8Size(truncation.keyspace) + serializedUTF8Size(truncation.columnFamily);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:5a6e2b0
/////////////////////////////////////////////////////////////////////////
0:     private static final IVersionedSerializer<Truncation> serializer;
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
author:Brandon Williams
-------------------------------------------------------------------------------
commit:01883da
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.io.util.FastByteArrayOutputStream;
/////////////////////////////////////////////////////////////////////////
0:         FastByteArrayOutputStream bos = new FastByteArrayOutputStream();
commit:127c028
/////////////////////////////////////////////////////////////////////////
0:         return new Message(FBUtilities.getBroadcastAddress(), StorageService.Verb.TRUNCATE, bos.toByteArray(), version);
author:Gary Dusbabek
-------------------------------------------------------------------------------
commit:feca0aa
/////////////////////////////////////////////////////////////////////////
0:     public Message getMessage(Integer version) throws IOException
commit:1ecdd7f
/////////////////////////////////////////////////////////////////////////
0:         serializer().serialize(this, dos, version);
/////////////////////////////////////////////////////////////////////////
0:     public void serialize(Truncation t, DataOutputStream dos, int version) throws IOException
0:     public Truncation deserialize(DataInputStream dis, int version) throws IOException
commit:5d02c51
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.net.MessageProducer;
/////////////////////////////////////////////////////////////////////////
0: public class Truncation implements MessageProducer
/////////////////////////////////////////////////////////////////////////
0:     public Message getMessage(int version) throws IOException
0:         return new Message(FBUtilities.getLocalAddress(), StorageService.Verb.TRUNCATE, bos.toByteArray(), version);
============================================================================