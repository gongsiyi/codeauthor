1:07cf56f: /*
1:066ef58:  * Licensed to the Apache Software Foundation (ASF) under one
1:066ef58:  * or more contributor license agreements.  See the NOTICE file
1:066ef58:  * distributed with this work for additional information
1:066ef58:  * regarding copyright ownership.  The ASF licenses this file
1:066ef58:  * to you under the Apache License, Version 2.0 (the
1:066ef58:  * "License"); you may not use this file except in compliance
1:066ef58:  * with the License.  You may obtain a copy of the License at
1:066ef58:  *
1:066ef58:  *     http://www.apache.org/licenses/LICENSE-2.0
1:066ef58:  *
1:066ef58:  * Unless required by applicable law or agreed to in writing, software
1:066ef58:  * distributed under the License is distributed on an "AS IS" BASIS,
1:066ef58:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:066ef58:  * See the License for the specific language governing permissions and
1:066ef58:  * limitations under the License.
1:066ef58:  */
1:066ef58: package org.apache.cassandra.gms;
4:066ef58: 
1:066ef58: import java.util.concurrent.atomic.AtomicInteger;
1:066ef58: 
2:066ef58: /**
1:07cdfd0:  * A unique version number generator for any state that is generated by the
1:066ef58:  * local node.
1:066ef58:  */
1:2fd3268: 
1:066ef58: public class VersionGenerator
1:066ef58: {
1:5a6e2b0:     private static final AtomicInteger version = new AtomicInteger(0);
1:07cdfd0: 
1:066ef58:     public static int getNextVersion()
1:066ef58:     {
1:910b663:         return version.incrementAndGet();
1:066ef58:     }
1:066ef58: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
1:  * A unique version number generator for any state that is generated by the
1: 
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
0:  * A unique version number generator for any state that is generated by the
1: 
commit:5a6e2b0
/////////////////////////////////////////////////////////////////////////
1:     private static final AtomicInteger version = new AtomicInteger(0);
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
commit:910b663
/////////////////////////////////////////////////////////////////////////
0:     private static AtomicInteger version = new AtomicInteger(0);
1:         return version.incrementAndGet();
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:d7e4924
/////////////////////////////////////////////////////////////////////////
commit:066ef58
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.gms;
1: 
1: import java.util.concurrent.atomic.AtomicInteger;
1: 
1: /**
0:  * A unique version number generator for any state that is generated by the 
1:  * local node.
0:  * Author : Avinash Lakshman ( alakshman@facebook.com) & Prashant Malik ( pmalik@facebook.com )
1:  */
1: 
1: public class VersionGenerator
1: {
0:     private static AtomicInteger version_ = new AtomicInteger(0);
1:     
1:     public static int getNextVersion()
1:     {
0:         return version_.incrementAndGet();
1:     }
1: }
commit:71739ef
author:Prashant Malik
-------------------------------------------------------------------------------
commit:1f91e99
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: package org.apache.cassandra.gms;
0: 
0: import java.util.concurrent.atomic.AtomicInteger;
0: 
0: /**
0:  * A unique version number generator for any state that is generated by the 
0:  * local node.
0:  * Author : Avinash Lakshman ( alakshman@facebook.com) & Prashant Malik ( pmalik@facebook.com )
0:  */
0: 
0: public class VersionGenerator
0: {
0:     private static AtomicInteger version_ = new AtomicInteger(0);
0:     
0:     public static int getNextVersion()
0:     {
0:         return version_.incrementAndGet();
0:     }
0: }
============================================================================