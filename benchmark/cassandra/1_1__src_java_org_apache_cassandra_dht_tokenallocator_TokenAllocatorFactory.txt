1:e2a0d75: /*
1:e2a0d75:  * Licensed to the Apache Software Foundation (ASF) under one
1:e2a0d75:  * or more contributor license agreements.  See the NOTICE file
1:e2a0d75:  * distributed with this work for additional information
1:e2a0d75:  * regarding copyright ownership.  The ASF licenses this file
1:e2a0d75:  * to you under the Apache License, Version 2.0 (the
1:e2a0d75:  * "License"); you may not use this file except in compliance
1:e2a0d75:  * with the License.  You may obtain a copy of the License at
1:e2a0d75:  *
1:e2a0d75:  *     http://www.apache.org/licenses/LICENSE-2.0
1:e2a0d75:  *
1:e2a0d75:  * Unless required by applicable law or agreed to in writing, software
1:e2a0d75:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e2a0d75:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e2a0d75:  * See the License for the specific language governing permissions and
1:e2a0d75:  * limitations under the License.
1:e2a0d75:  */
1:e2a0d75: 
1:e2a0d75: package org.apache.cassandra.dht.tokenallocator;
1:e2a0d75: 
1:e2a0d75: import java.net.InetAddress;
1:e2a0d75: import java.util.NavigableMap;
1:e2a0d75: 
1:e2a0d75: import org.apache.cassandra.dht.IPartitioner;
1:e2a0d75: import org.apache.cassandra.dht.Token;
1:e2a0d75: 
1:e2a0d75: public class TokenAllocatorFactory
1:e2a0d75: {
1:e2a0d75:     public static TokenAllocator<InetAddress> createTokenAllocator(NavigableMap<Token, InetAddress> sortedTokens,
1:e2a0d75:                                                      ReplicationStrategy<InetAddress> strategy,
1:e2a0d75:                                                      IPartitioner partitioner)
1:e2a0d75:     {
1:e2a0d75:         if(strategy.replicas() == 1)
1:e2a0d75:             return new NoReplicationTokenAllocator<>(sortedTokens, strategy, partitioner);
1:e2a0d75:         return new ReplicationAwareTokenAllocator<>(sortedTokens, strategy, partitioner);
1:e2a0d75:     }
1:e2a0d75: }
============================================================================
author:Dikang Gu
-------------------------------------------------------------------------------
commit:e2a0d75
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.dht.tokenallocator;
1: 
1: import java.net.InetAddress;
1: import java.util.NavigableMap;
1: 
1: import org.apache.cassandra.dht.IPartitioner;
1: import org.apache.cassandra.dht.Token;
1: 
1: public class TokenAllocatorFactory
1: {
1:     public static TokenAllocator<InetAddress> createTokenAllocator(NavigableMap<Token, InetAddress> sortedTokens,
1:                                                      ReplicationStrategy<InetAddress> strategy,
1:                                                      IPartitioner partitioner)
1:     {
1:         if(strategy.replicas() == 1)
1:             return new NoReplicationTokenAllocator<>(sortedTokens, strategy, partitioner);
1:         return new ReplicationAwareTokenAllocator<>(sortedTokens, strategy, partitioner);
1:     }
1: }
============================================================================