1:5151169: /*
1:5151169:  * Licensed to the Apache Software Foundation (ASF) under one
1:5151169:  * or more contributor license agreements.  See the NOTICE file
1:5151169:  * distributed with this work for additional information
1:5151169:  * regarding copyright ownership.  The ASF licenses this file
1:5151169:  * to you under the Apache License, Version 2.0 (the
1:5151169:  * "License"); you may not use this file except in compliance
1:5151169:  * with the License.  You may obtain a copy of the License at
1:5151169:  *
1:5151169:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5151169:  *
1:5151169:  * Unless required by applicable law or agreed to in writing, software
1:5151169:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5151169:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5151169:  * See the License for the specific language governing permissions and
1:5151169:  * limitations under the License.
1:5151169:  */
1:5151169: package org.apache.cassandra.streaming.messages;
1:5151169: 
1:5151169: import java.nio.channels.ReadableByteChannel;
1:5151169: 
1:16499ca: import org.apache.cassandra.io.util.DataOutputStreamPlus;
1:5151169: import org.apache.cassandra.streaming.StreamSession;
1:5151169: 
1:5151169: public class CompleteMessage extends StreamMessage
1:5151169: {
1:5151169:     public static Serializer<CompleteMessage> serializer = new Serializer<CompleteMessage>()
1:5151169:     {
1:f55a4f4:         public CompleteMessage deserialize(ReadableByteChannel in, int version, StreamSession session)
1:5151169:         {
1:5151169:             return new CompleteMessage();
1:5151169:         }
1:5151169: 
1:f55a4f4:         public void serialize(CompleteMessage message, DataOutputStreamPlus out, int version, StreamSession session) {}
1:5151169:     };
1:5151169: 
1:5151169:     public CompleteMessage()
1:5151169:     {
1:5151169:         super(Type.COMPLETE);
1:5151169:     }
1:1e73b33: 
1:1e73b33:     @Override
1:1e73b33:     public String toString()
1:1e73b33:     {
1:1e73b33:         return "Complete";
1:1e73b33:     }
1:5151169: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:f55a4f4
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         public CompleteMessage deserialize(ReadableByteChannel in, int version, StreamSession session)
1:         public void serialize(CompleteMessage message, DataOutputStreamPlus out, int version, StreamSession session) {}
author:Ariel Weisberg
-------------------------------------------------------------------------------
commit:16499ca
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataOutputStreamPlus;
/////////////////////////////////////////////////////////////////////////
0:         public void serialize(CompleteMessage message, DataOutputStreamPlus out, int version, StreamSession session) throws IOException {}
author:belliottsmith
-------------------------------------------------------------------------------
commit:75508ec
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.io.util.DataOutputStreamAndChannel;
/////////////////////////////////////////////////////////////////////////
0:         public void serialize(CompleteMessage message, DataOutputStreamAndChannel out, int version, StreamSession session) throws IOException {}
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:1e73b33
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public String toString()
1:     {
1:         return "Complete";
1:     }
commit:5151169
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.streaming.messages;
1: 
0: import java.io.IOException;
1: import java.nio.channels.ReadableByteChannel;
0: import java.nio.channels.WritableByteChannel;
1: 
1: import org.apache.cassandra.streaming.StreamSession;
1: 
1: public class CompleteMessage extends StreamMessage
1: {
1:     public static Serializer<CompleteMessage> serializer = new Serializer<CompleteMessage>()
1:     {
0:         public CompleteMessage deserialize(ReadableByteChannel in, int version, StreamSession session) throws IOException
1:         {
1:             return new CompleteMessage();
1:         }
1: 
0:         public void serialize(CompleteMessage message, WritableByteChannel out, int version, StreamSession session) throws IOException {}
1:     };
1: 
1:     public CompleteMessage()
1:     {
1:         super(Type.COMPLETE);
1:     }
1: }
============================================================================