1:485feef: /*
1:485feef:  * Licensed to the Apache Software Foundation (ASF) under one
1:485feef:  * or more contributor license agreements.  See the NOTICE file
1:485feef:  * distributed with this work for additional information
1:485feef:  * regarding copyright ownership.  The ASF licenses this file
1:485feef:  * to you under the Apache License, Version 2.0 (the
1:485feef:  * "License"); you may not use this file except in compliance
1:485feef:  * with the License.  You may obtain a copy of the License at
1:485feef:  *
1:485feef:  *     http://www.apache.org/licenses/LICENSE-2.0
1:485feef:  *
1:485feef:  * Unless required by applicable law or agreed to in writing, software
1:485feef:  * distributed under the License is distributed on an "AS IS" BASIS,
1:485feef:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:485feef:  * See the License for the specific language governing permissions and
1:485feef:  * limitations under the License.
1:485feef:  */
1:485feef: package org.apache.cassandra.cql3;
1:485feef: 
1:6f93bd1: import java.nio.ByteBuffer;
1:789aa72: import java.util.Map;
1:789aa72: 
1:485feef: import org.apache.cassandra.cql3.statements.BatchStatement;
1:9872b74: import org.apache.cassandra.cql3.statements.ParsedStatement;
1:485feef: import org.apache.cassandra.exceptions.RequestExecutionException;
1:485feef: import org.apache.cassandra.exceptions.RequestValidationException;
1:485feef: import org.apache.cassandra.service.QueryState;
1:485feef: import org.apache.cassandra.transport.messages.ResultMessage;
1:485feef: import org.apache.cassandra.utils.MD5Digest;
1:485feef: 
1:485feef: public interface QueryHandler
1:485feef: {
1:6f93bd1:     ResultMessage process(String query,
1:6f93bd1:                           QueryState state,
1:6f93bd1:                           QueryOptions options,
1:aa83c94:                           Map<String, ByteBuffer> customPayload,
1:aa83c94:                           long queryStartNanoTime) throws RequestExecutionException, RequestValidationException;
1:789aa72: 
1:6f93bd1:     ResultMessage.Prepared prepare(String query,
1:6f93bd1:                                    QueryState state,
1:6f93bd1:                                    Map<String, ByteBuffer> customPayload) throws RequestValidationException;
1:789aa72: 
1:789aa72:     ParsedStatement.Prepared getPrepared(MD5Digest id);
1:789aa72: 
1:789aa72:     ParsedStatement.Prepared getPreparedForThrift(Integer id);
1:789aa72: 
1:6f93bd1:     ResultMessage processPrepared(CQLStatement statement,
1:6f93bd1:                                   QueryState state,
1:6f93bd1:                                   QueryOptions options,
1:aa83c94:                                   Map<String, ByteBuffer> customPayload,
1:aa83c94:                                   long queryStartNanoTime) throws RequestExecutionException, RequestValidationException;
1:789aa72: 
1:6f93bd1:     ResultMessage processBatch(BatchStatement statement,
1:6f93bd1:                                QueryState state,
1:6f93bd1:                                BatchQueryOptions options,
1:aa83c94:                                Map<String, ByteBuffer> customPayload,
1:aa83c94:                                long queryStartNanoTime) throws RequestExecutionException, RequestValidationException;
1:485feef: }
============================================================================
author:Geoffrey Yu
-------------------------------------------------------------------------------
commit:aa83c94
/////////////////////////////////////////////////////////////////////////
1:                           Map<String, ByteBuffer> customPayload,
1:                           long queryStartNanoTime) throws RequestExecutionException, RequestValidationException;
/////////////////////////////////////////////////////////////////////////
1:                                   Map<String, ByteBuffer> customPayload,
1:                                   long queryStartNanoTime) throws RequestExecutionException, RequestValidationException;
1:                                Map<String, ByteBuffer> customPayload,
1:                                long queryStartNanoTime) throws RequestExecutionException, RequestValidationException;
author:Benjamin Lerer
-------------------------------------------------------------------------------
commit:6f93bd1
/////////////////////////////////////////////////////////////////////////
1: import java.nio.ByteBuffer;
/////////////////////////////////////////////////////////////////////////
1:     ResultMessage process(String query,
1:                           QueryState state,
1:                           QueryOptions options,
0:                           Map<String, ByteBuffer> customPayload) throws RequestExecutionException, RequestValidationException;
1:     ResultMessage.Prepared prepare(String query,
1:                                    QueryState state,
1:                                    Map<String, ByteBuffer> customPayload) throws RequestValidationException;
1:     ResultMessage processPrepared(CQLStatement statement,
1:                                   QueryState state,
1:                                   QueryOptions options,
0:                                   Map<String, ByteBuffer> customPayload) throws RequestExecutionException, RequestValidationException;
1:     ResultMessage processBatch(BatchStatement statement,
1:                                QueryState state,
1:                                BatchQueryOptions options,
0:                                Map<String, ByteBuffer> customPayload) throws RequestExecutionException, RequestValidationException;
author:Robert Stupp
-------------------------------------------------------------------------------
commit:789aa72
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: 
/////////////////////////////////////////////////////////////////////////
0:     ResultMessage process(String query, QueryState state, QueryOptions options, Map<String, byte[]> customPayload) throws RequestExecutionException, RequestValidationException;
1: 
0:     ResultMessage.Prepared prepare(String query, QueryState state, Map<String, byte[]> customPayload) throws RequestValidationException;
1: 
1:     ParsedStatement.Prepared getPrepared(MD5Digest id);
1: 
1:     ParsedStatement.Prepared getPreparedForThrift(Integer id);
1: 
0:     ResultMessage processPrepared(CQLStatement statement, QueryState state, QueryOptions options, Map<String, byte[]> customPayload) throws RequestExecutionException, RequestValidationException;
1: 
0:     ResultMessage processBatch(BatchStatement statement, QueryState state, BatchQueryOptions options, Map<String, byte[]> customPayload) throws RequestExecutionException, RequestValidationException;
author:Tyler Hobbs
-------------------------------------------------------------------------------
commit:24c181f
/////////////////////////////////////////////////////////////////////////
0:     public ParsedStatement.Prepared getPreparedForThrift(Integer id);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:9872b74
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.cql3.statements.ParsedStatement;
/////////////////////////////////////////////////////////////////////////
0:     public ParsedStatement.Prepared getPrepared(MD5Digest id);
author:beobal
-------------------------------------------------------------------------------
commit:485feef
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3;
1: 
1: import org.apache.cassandra.cql3.statements.BatchStatement;
1: import org.apache.cassandra.exceptions.RequestExecutionException;
1: import org.apache.cassandra.exceptions.RequestValidationException;
1: import org.apache.cassandra.service.QueryState;
1: import org.apache.cassandra.transport.messages.ResultMessage;
1: import org.apache.cassandra.utils.MD5Digest;
1: 
1: public interface QueryHandler
1: {
0:     public ResultMessage process(String query, QueryState state, QueryOptions options) throws RequestExecutionException, RequestValidationException;
0:     public ResultMessage.Prepared prepare(String query, QueryState state) throws RequestValidationException;
0:     public CQLStatement getPrepared(MD5Digest id);
0:     public CQLStatement getPreparedForThrift(Integer id);
0:     public ResultMessage processPrepared(CQLStatement statement, QueryState state, QueryOptions options) throws RequestExecutionException, RequestValidationException;
0:     public ResultMessage processBatch(BatchStatement statement, QueryState state, BatchQueryOptions options) throws RequestExecutionException, RequestValidationException;
1: }
============================================================================