1:cb5897f: /*
1:cb5897f:  * Licensed to the Apache Software Foundation (ASF) under one
1:cb5897f:  * or more contributor license agreements.  See the NOTICE file
1:cb5897f:  * distributed with this work for additional information
1:cb5897f:  * regarding copyright ownership.  The ASF licenses this file
1:cb5897f:  * to you under the Apache License, Version 2.0 (the
1:cb5897f:  * "License"); you may not use this file except in compliance
1:cb5897f:  * with the License.  You may obtain a copy of the License at
1:cb5897f:  *
1:cb5897f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:cb5897f:  *
1:cb5897f:  * Unless required by applicable law or agreed to in writing, software
1:cb5897f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cb5897f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cb5897f:  * See the License for the specific language governing permissions and
1:cb5897f:  * limitations under the License.
1:cb5897f:  */
1:cb5897f: package org.apache.cassandra.cql3;
5:cb5897f: 
1:e94032a: import java.nio.ByteBuffer;
1:89464ea: import java.util.List;
1:cb5897f: 
1:cb5897f: import org.apache.cassandra.cql3.functions.Function;
1:e94032a: import org.apache.cassandra.db.marshal.AbstractType;
1:cb5897f: 
1:cb5897f: public class Terms
3:cb5897f: {
1:89464ea:     public static void addFunctions(Iterable<Term> terms, List<Function> functions)
1:cb5897f:     {
1:89464ea:         if (terms != null)
1:89464ea:             terms.forEach(t -> t.addFunctionsTo(functions));
2:cb5897f:     }
1:e94032a: 
1:e94032a:     public static ByteBuffer asBytes(String keyspace, String term, AbstractType type)
1:e94032a:     {
1:e94032a:         ColumnSpecification receiver = new ColumnSpecification(keyspace, "--dummy--", new ColumnIdentifier("(dummy)", true), type);
1:e94032a:         Term.Raw rawTerm = CQLFragmentParser.parseAny(CqlParser::term, term, "CQL term");
1:e94032a:         return rawTerm.prepare(keyspace, receiver).bindAndGet(QueryOptions.DEFAULT);
1:e94032a:     }
1:cb5897f: }
============================================================================
author:Benjamin Lerer
-------------------------------------------------------------------------------
commit:89464ea
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1:     public static void addFunctions(Iterable<Term> terms, List<Function> functions)
1:         if (terms != null)
1:             terms.forEach(t -> t.addFunctionsTo(functions));
author:Robert Stupp
-------------------------------------------------------------------------------
commit:e94032a
/////////////////////////////////////////////////////////////////////////
1: import java.nio.ByteBuffer;
1: import org.apache.cassandra.db.marshal.AbstractType;
/////////////////////////////////////////////////////////////////////////
1: 
1:     public static ByteBuffer asBytes(String keyspace, String term, AbstractType type)
1:     {
1:         ColumnSpecification receiver = new ColumnSpecification(keyspace, "--dummy--", new ColumnIdentifier("(dummy)", true), type);
1:         Term.Raw rawTerm = CQLFragmentParser.parseAny(CqlParser::term, term, "CQL term");
1:         return rawTerm.prepare(keyspace, receiver).bindAndGet(QueryOptions.DEFAULT);
1:     }
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:cb5897f
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3;
1: 
0: import java.util.Collections;
1: 
0: import com.google.common.collect.Iterables;
1: 
1: import org.apache.cassandra.cql3.functions.Function;
1: 
1: public class Terms
1: {
1: 
0:     private static com.google.common.base.Function<Term, Iterable<Function>> TO_FUNCTION_ITERABLE =
0:     new com.google.common.base.Function<Term, Iterable<Function>>()
1:     {
0:         public Iterable<Function> apply(Term term)
1:         {
0:             return term.getFunctions();
1:         }
0:     };
1: 
0:     public static Iterable<Function> getFunctions(Iterable<Term> terms)
1:     {
0:         if (terms == null)
0:             return Collections.emptySet();
1: 
0:         return Iterables.concat(Iterables.transform(terms, TO_FUNCTION_ITERABLE));
1:     }
1: }
============================================================================