1:dd020e1: /*
1:3893f24:  * Licensed to the Apache Software Foundation (ASF) under one
1:3893f24:  * or more contributor license agreements.  See the NOTICE file
1:3893f24:  * distributed with this work for additional information
1:3893f24:  * regarding copyright ownership.  The ASF licenses this file
1:3893f24:  * to you under the Apache License, Version 2.0 (the
1:3893f24:  * "License"); you may not use this file except in compliance
1:3893f24:  * with the License.  You may obtain a copy of the License at
1:3893f24:  *
1:3893f24:  *     http://www.apache.org/licenses/LICENSE-2.0
1:3893f24:  *
1:3893f24:  * Unless required by applicable law or agreed to in writing, software
1:3893f24:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3893f24:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3893f24:  * See the License for the specific language governing permissions and
1:3893f24:  * limitations under the License.
1:3893f24:  */
1:3893f24: package org.apache.cassandra.net;
1:a06be23: 
1:3893f24: import java.net.InetAddress;
5:3893f24: 
1:a06be23: import org.apache.cassandra.io.IVersionedSerializer;
1:3893f24: 
1:a06be23: /**
1:3893f24:  * Encapsulates the callback information.
1:a06be23:  * The ability to set the message is useful in cases for when a hint needs 
1:3893f24:  * to be written due to a timeout in the response from a replica.
1:3893f24:  */
1:a06be23: public class CallbackInfo
3:3893f24: {
1:3893f24:     protected final InetAddress target;
1:3d4c2f9:     protected final IAsyncCallback callback;
1:a06be23:     protected final IVersionedSerializer<?> serializer;
1:8a5b90e:     private final boolean failureCallback;
1:8a5b90e: 
3:3893f24:     /**
1:dd020e1:      * Create CallbackInfo without sent message
1:3893f24:      *
1:dd020e1:      * @param target target to send message
1:dd020e1:      * @param callback
1:dd020e1:      * @param serializer serializer to deserialize response message
1:c059a56:      * @param failureCallback True when we have a callback to handle failures
1:3893f24:      */
1:8a5b90e:     public CallbackInfo(InetAddress target, IAsyncCallback callback, IVersionedSerializer<?> serializer, boolean failureCallback)
1:8a5b90e:     {
2:3893f24:         this.target = target;
2:3893f24:         this.callback = callback;
2:a06be23:         this.serializer = serializer;
1:8a5b90e:         this.failureCallback = failureCallback;
1:8a5b90e:     }
1:3893f24: 
1:3893f24:     public boolean shouldHint()
1:3893f24:     {
1:5440a0a:         return false;
3:3893f24:     }
1:c4d3a31: 
1:8a5b90e:     public boolean isFailureCallback()
1:8a5b90e:     {
1:8a5b90e:         return failureCallback;
1:8a5b90e:     }
1:8a5b90e: 
1:c4d3a31:     public String toString()
1:c4d3a31:     {
1:c4d3a31:         return "CallbackInfo(" +
1:c4d3a31:                "target=" + target +
1:c4d3a31:                ", callback=" + callback +
1:c4d3a31:                ", serializer=" + serializer +
1:8a5b90e:                ", failureCallback=" + failureCallback +
1:c4d3a31:                ')';
1:c4d3a31:     }
1:3893f24: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:c059a56
/////////////////////////////////////////////////////////////////////////
1:      * @param failureCallback True when we have a callback to handle failures
author:sankalp kohli
-------------------------------------------------------------------------------
commit:8a5b90e
/////////////////////////////////////////////////////////////////////////
1:     private final boolean failureCallback;
1: 
0:     public CallbackInfo(InetAddress target, IAsyncCallback callback, IVersionedSerializer<?> serializer)
1:     {
0:         this(target, callback, serializer, false);
1:     }
/////////////////////////////////////////////////////////////////////////
1:     public CallbackInfo(InetAddress target, IAsyncCallback callback, IVersionedSerializer<?> serializer, boolean failureCallback)
1:         this.failureCallback = failureCallback;
/////////////////////////////////////////////////////////////////////////
1:     public boolean isFailureCallback()
1:     {
1:         return failureCallback;
1:     }
1: 
1:                ", failureCallback=" + failureCallback +
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:c4d3a31
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String toString()
1:     {
1:         return "CallbackInfo(" +
1:                "target=" + target +
1:                ", callback=" + callback +
1:                ", serializer=" + serializer +
1:                ')';
1:     }
commit:e7c90e0
commit:5440a0a
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:    public CallbackInfo(InetAddress target, IMessageCallback callback, IVersionedSerializer<?> serializer)
1:         return false;
commit:0680372
commit:e394625
/////////////////////////////////////////////////////////////////////////
0:      * @return TRUE iff a hint should be written for this target.
0:      * Assumes it is only called after the write of "sentMessage" to "target" has timed out.
commit:3d4c2f9
/////////////////////////////////////////////////////////////////////////
1:     protected final IAsyncCallback callback;
/////////////////////////////////////////////////////////////////////////
0:     public CallbackInfo(InetAddress target, IAsyncCallback callback, IVersionedSerializer<?> serializer)
0:     public CallbackInfo(InetAddress target, IAsyncCallback callback, MessageOut<?> sentMessage, IVersionedSerializer<?> serializer)
commit:a06be23
/////////////////////////////////////////////////////////////////////////
1: /**
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.apache.cassandra.io.IVersionedSerializer;
1:  * The ability to set the message is useful in cases for when a hint needs 
1: public class CallbackInfo
0:     protected final MessageOut<?> sentMessage;
1:     protected final IVersionedSerializer<?> serializer;
0:     public CallbackInfo(InetAddress target, IMessageCallback callback, IVersionedSerializer<?> serializer)
1:         this.serializer = serializer;
0:         this.sentMessage = null;
0:     public CallbackInfo(InetAddress target, IMessageCallback callback, MessageOut<?> sentMessage, IVersionedSerializer<?> serializer)
0:         this.sentMessage = sentMessage;
1:         this.serializer = serializer;
/////////////////////////////////////////////////////////////////////////
0:         return sentMessage != null && StorageProxy.shouldHint(target);
commit:5a6f0b8
/////////////////////////////////////////////////////////////////////////
0:     protected final MessageOut<?> message;
/////////////////////////////////////////////////////////////////////////
0:     public CallbackInfo(InetAddress target, IMessageCallback callback, MessageOut<?> message)
commit:3893f24
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.net;
1: 
1: import java.net.InetAddress;
1: 
0: import org.apache.cassandra.service.StorageProxy;
1: 
1: /**
1:  * Encapsulates the callback information.
0:  * The ability to set the message is useful in cases for when a hint needs 
1:  * to be written due to a timeout in the response from a replica.
1:  */
0: class CallbackInfo
1: {
1:     protected final InetAddress target;
0:     protected final IMessageCallback callback;
0:     protected final Message message;
1: 
0:     public CallbackInfo(InetAddress target, IMessageCallback callback)
1:     {
1:         this.target = target;
1:         this.callback = callback;
0:         this.message = null;
1:     }
1: 
0:     public CallbackInfo(InetAddress target, IMessageCallback callback, Message message)
1:     {
1:         this.target = target;
1:         this.callback = callback;
0:         this.message = message;
1:     }
1: 
1:     /**
0:      * @return TRUE if a hint should be written for this target and if the CL was achieved. FALSE otherwise.
1:      *
0:      * NOTE:
0:      * Assumes it is only called after the write of "message" to "target" has timed out.
1:      */
1:     public boolean shouldHint()
1:     {
0:         return message != null && StorageProxy.shouldHint(target);
1:     }
1: }
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:dd020e1
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:     /**
1:      * Create CallbackInfo without sent message
0:      *
1:      * @param target target to send message
1:      * @param callback
1:      * @param serializer serializer to deserialize response message
0:      */
0:         this(target, callback, null, serializer);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
0:  * The ability to set the message is useful in cases for when a hint needs
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
0:  * The ability to set the message is useful in cases for when a hint needs
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
0: /*
/////////////////////////////////////////////////////////////////////////
============================================================================