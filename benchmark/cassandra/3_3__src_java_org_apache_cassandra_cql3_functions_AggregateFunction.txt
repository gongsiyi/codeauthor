1:0cad81a: /*
1:0cad81a:  * Licensed to the Apache Software Foundation (ASF) under one
1:0cad81a:  * or more contributor license agreements.  See the NOTICE file
1:0cad81a:  * distributed with this work for additional information
1:0cad81a:  * regarding copyright ownership.  The ASF licenses this file
1:0cad81a:  * to you under the Apache License, Version 2.0 (the
1:0cad81a:  * "License"); you may not use this file except in compliance
1:0cad81a:  * with the License.  You may obtain a copy of the License at
2:0cad81a:  *
1:0cad81a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:0cad81a:  *
1:0cad81a:  * Unless required by applicable law or agreed to in writing, software
1:0cad81a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0cad81a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0cad81a:  * See the License for the specific language governing permissions and
1:0cad81a:  * limitations under the License.
1:0cad81a:  */
1:0cad81a: package org.apache.cassandra.cql3.functions;
1:0cad81a: 
1:0cad81a: import java.nio.ByteBuffer;
1:0cad81a: import java.util.List;
1:0cad81a: 
1:e2f35c7: import org.apache.cassandra.exceptions.InvalidRequestException;
1:e0adc16: import org.apache.cassandra.transport.ProtocolVersion;
1:e2f35c7: 
1:0cad81a: /**
1:0cad81a:  * Performs a calculation on a set of values and return a single value.
1:0cad81a:  */
1:0cad81a: public interface AggregateFunction extends Function
1:0cad81a: {
1:0cad81a:     /**
1:0cad81a:      * Creates a new <code>Aggregate</code> instance.
1:0cad81a:      *
1:0cad81a:      * @return a new <code>Aggregate</code> instance.
1:0cad81a:      */
1:e2f35c7:     public Aggregate newAggregate() throws InvalidRequestException;
1:0cad81a: 
1:0cad81a:     /**
1:0cad81a:      * An aggregation operation.
1:0cad81a:      */
1:0cad81a:     interface Aggregate
1:0cad81a:     {
1:0cad81a:         /**
1:0cad81a:          * Adds the specified input to this aggregate.
1:e0adc16:          *  @param protocolVersion native protocol version
1:0cad81a:          * @param values the values to add to the aggregate.
1:0cad81a:          */
1:e0adc16:         public void addInput(ProtocolVersion protocolVersion, List<ByteBuffer> values) throws InvalidRequestException;
1:0cad81a: 
1:0cad81a:         /**
1:0cad81a:          * Computes and returns the aggregate current value.
1:0cad81a:          *
2:e2f35c7:          * @param protocolVersion native protocol version
1:0cad81a:          * @return the aggregate current value.
1:0cad81a:          */
1:e0adc16:         public ByteBuffer compute(ProtocolVersion protocolVersion) throws InvalidRequestException;
1:0cad81a: 
1:0cad81a:         /**
1:0cad81a:          * Reset this aggregate.
1:0cad81a:          */
1:0cad81a:         public void reset();
1:0cad81a:     }
1:0cad81a: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e0adc16
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.transport.ProtocolVersion;
/////////////////////////////////////////////////////////////////////////
1:          *  @param protocolVersion native protocol version
1:         public void addInput(ProtocolVersion protocolVersion, List<ByteBuffer> values) throws InvalidRequestException;
/////////////////////////////////////////////////////////////////////////
1:         public ByteBuffer compute(ProtocolVersion protocolVersion) throws InvalidRequestException;
author:Robert Stupp
-------------------------------------------------------------------------------
commit:e2f35c7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.exceptions.InvalidRequestException;
1: 
/////////////////////////////////////////////////////////////////////////
1:     public Aggregate newAggregate() throws InvalidRequestException;
/////////////////////////////////////////////////////////////////////////
1:          * @param protocolVersion native protocol version
0:         public void addInput(int protocolVersion, List<ByteBuffer> values) throws InvalidRequestException;
1:          * @param protocolVersion native protocol version
0:         public ByteBuffer compute(int protocolVersion) throws InvalidRequestException;
author:Benjamin Lerer
-------------------------------------------------------------------------------
commit:0cad81a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3.functions;
1: 
1: import java.nio.ByteBuffer;
1: import java.util.List;
1: 
1: /**
1:  * Performs a calculation on a set of values and return a single value.
1:  */
1: public interface AggregateFunction extends Function
1: {
1:     /**
1:      * Creates a new <code>Aggregate</code> instance.
1:      *
1:      * @return a new <code>Aggregate</code> instance.
1:      */
0:     public Aggregate newAggregate();
1: 
1:     /**
1:      * An aggregation operation.
1:      */
1:     interface Aggregate
1:     {
1:         /**
1:          * Adds the specified input to this aggregate.
1:          *
1:          * @param values the values to add to the aggregate.
1:          */
0:         public void addInput(List<ByteBuffer> values);
1: 
1:         /**
1:          * Computes and returns the aggregate current value.
1:          *
1:          * @return the aggregate current value.
1:          */
0:         public ByteBuffer compute();
1: 
1:         /**
1:          * Reset this aggregate.
1:          */
1:         public void reset();
1:     }
1: }
============================================================================