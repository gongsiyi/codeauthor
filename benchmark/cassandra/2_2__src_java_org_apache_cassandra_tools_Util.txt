1:83b9740: /*
1:83b9740:  * Licensed to the Apache Software Foundation (ASF) under one
1:83b9740:  * or more contributor license agreements.  See the NOTICE file
1:83b9740:  * distributed with this work for additional information
1:83b9740:  * regarding copyright ownership.  The ASF licenses this file
1:83b9740:  * to you under the Apache License, Version 2.0 (the
1:83b9740:  * "License"); you may not use this file except in compliance
1:83b9740:  * with the License.  You may obtain a copy of the License at
1:83b9740:  *
1:83b9740:  *     http://www.apache.org/licenses/LICENSE-2.0
1:83b9740:  *
1:83b9740:  * Unless required by applicable law or agreed to in writing, software
1:83b9740:  * distributed under the License is distributed on an "AS IS" BASIS,
1:83b9740:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:83b9740:  * See the License for the specific language governing permissions and
1:83b9740:  * limitations under the License.
1:83b9740:  */
1:83b9740: 
1:83b9740: package org.apache.cassandra.tools;
1:83b9740: 
1:83b9740: import org.apache.cassandra.config.DatabaseDescriptor;
1:83b9740: import org.apache.cassandra.exceptions.ConfigurationException;
1:83b9740: 
1:83b9740: public final class Util
1:83b9740: {
1:83b9740:     private Util()
1:83b9740:     {
1:83b9740:     }
1:83b9740: 
1:83b9740:     /**
1:83b9740:      * This is used by standalone tools to force static initialization of DatabaseDescriptor, and fail if configuration
1:83b9740:      * is bad.
1:83b9740:      */
1:83b9740:     public static void initDatabaseDescriptor()
1:83b9740:     {
1:83b9740:         try
1:83b9740:         {
1:9797511:             DatabaseDescriptor.toolInitialization();
1:83b9740:         }
1:9797511:         catch (Throwable e)
1:83b9740:         {
1:9797511:             boolean logStackTrace = !(e instanceof ConfigurationException) || ((ConfigurationException) e).logStackTrace;
1:9797511:             System.out.println("Exception (" + e.getClass().getName() + ") encountered during startup: " + e.getMessage());
1:83b9740: 
1:83b9740:             if (logStackTrace)
1:83b9740:             {
1:9797511:                 e.printStackTrace();
1:83b9740:                 System.exit(3);
1:83b9740:             }
1:83b9740:             else
1:83b9740:             {
1:9797511:                 System.err.println(e.getMessage());
1:83b9740:                 System.exit(3);
1:83b9740:             }
1:83b9740:         }
1:83b9740:     }
1:83b9740: }
============================================================================
author:Robert Stupp
-------------------------------------------------------------------------------
commit:9797511
/////////////////////////////////////////////////////////////////////////
1:             DatabaseDescriptor.toolInitialization();
1:         catch (Throwable e)
1:             boolean logStackTrace = !(e instanceof ConfigurationException) || ((ConfigurationException) e).logStackTrace;
1:             System.out.println("Exception (" + e.getClass().getName() + ") encountered during startup: " + e.getMessage());
1:                 e.printStackTrace();
1:                 System.err.println(e.getMessage());
author:Carl Yeksigian
-------------------------------------------------------------------------------
commit:83b9740
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.tools;
1: 
1: import org.apache.cassandra.config.DatabaseDescriptor;
1: import org.apache.cassandra.exceptions.ConfigurationException;
1: 
1: public final class Util
1: {
1:     private Util()
1:     {
1:     }
1: 
1:     /**
1:      * This is used by standalone tools to force static initialization of DatabaseDescriptor, and fail if configuration
1:      * is bad.
1:      */
1:     public static void initDatabaseDescriptor()
1:     {
1:         try
1:         {
0:             DatabaseDescriptor.forceStaticInitialization();
1:         }
0:         catch (ExceptionInInitializerError e)
1:         {
0:             Throwable cause = e.getCause();
0:             boolean logStackTrace = !(cause instanceof ConfigurationException) || ((ConfigurationException) cause).logStackTrace;
0:             System.out.println("Exception (" + cause.getClass().getName() + ") encountered during startup: " + cause.getMessage());
1: 
1:             if (logStackTrace)
1:             {
0:                 cause.printStackTrace();
1:                 System.exit(3);
1:             }
1:             else
1:             {
0:                 System.err.println(cause.getMessage());
1:                 System.exit(3);
1:             }
1:         }
1:     }
1: }
============================================================================