1:eaf4b91: /*
1:eaf4b91:  * Licensed to the Apache Software Foundation (ASF) under one
1:eaf4b91:  * or more contributor license agreements.  See the NOTICE file
1:eaf4b91:  * distributed with this work for additional information
1:eaf4b91:  * regarding copyright ownership.  The ASF licenses this file
1:eaf4b91:  * to you under the Apache License, Version 2.0 (the
1:eaf4b91:  * "License"); you may not use this file except in compliance
1:eaf4b91:  * with the License.  You may obtain a copy of the License at
1:eaf4b91:  *
1:eaf4b91:  *     http://www.apache.org/licenses/LICENSE-2.0
1:eaf4b91:  *
1:eaf4b91:  * Unless required by applicable law or agreed to in writing, software
1:eaf4b91:  * distributed under the License is distributed on an "AS IS" BASIS,
1:eaf4b91:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:eaf4b91:  * See the License for the specific language governing permissions and
1:eaf4b91:  * limitations under the License.
1:eaf4b91:  */
1:eaf4b91: 
1:eaf4b91: package org.apache.cassandra.stress.settings;
1:eaf4b91: 
1:eaf4b91: import java.util.Collections;
1:eaf4b91: 
1:eaf4b91: import com.google.common.collect.ImmutableMap;
1:eaf4b91: import org.junit.Test;
1:eaf4b91: 
1:eaf4b91: import static org.junit.Assert.*;
1:eaf4b91: 
1:eaf4b91: public class SettingsMiscTest
1:eaf4b91: {
1:eaf4b91:     @Test
1:eaf4b91:     public void versionTriggersSpecialOption() throws Exception
1:eaf4b91:     {
1:eaf4b91:         assertTrue(SettingsMisc.maybeDoSpecial(ImmutableMap.of("version", new String[] {})));
1:eaf4b91:     }
1:eaf4b91: 
1:eaf4b91:     @Test
1:eaf4b91:     public void noSpecialOptions() throws Exception
1:eaf4b91:     {
1:eaf4b91:         assertFalse(SettingsMisc.maybeDoSpecial(Collections.emptyMap()));
1:eaf4b91:     }
1:eaf4b91: 
1:eaf4b91:     @Test
1:eaf4b91:     public void parsesVersionMatch() throws Exception
1:eaf4b91:     {
1:eaf4b91:         String versionString = SettingsMisc.parseVersionFile("CassandraVersion=TheBestVersion\n");
1:eaf4b91:         assertEquals("Version: TheBestVersion", versionString);
1:eaf4b91:     }
1:eaf4b91: 
1:eaf4b91:     @Test
1:eaf4b91:     public void parsesVersionNoMatch() throws Exception
1:eaf4b91:     {
1:eaf4b91:         String versionString = SettingsMisc.parseVersionFile("VersionFileChangedFormat :(");
1:eaf4b91:         assertEquals("Unable to find version information", versionString);
1:eaf4b91:     }
1:eaf4b91: }
============================================================================
author:Chris Batey
-------------------------------------------------------------------------------
commit:eaf4b91
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.stress.settings;
1: 
1: import java.util.Collections;
1: 
1: import com.google.common.collect.ImmutableMap;
1: import org.junit.Test;
1: 
1: import static org.junit.Assert.*;
1: 
1: public class SettingsMiscTest
1: {
1:     @Test
1:     public void versionTriggersSpecialOption() throws Exception
1:     {
1:         assertTrue(SettingsMisc.maybeDoSpecial(ImmutableMap.of("version", new String[] {})));
1:     }
1: 
1:     @Test
1:     public void noSpecialOptions() throws Exception
1:     {
1:         assertFalse(SettingsMisc.maybeDoSpecial(Collections.emptyMap()));
1:     }
1: 
1:     @Test
1:     public void parsesVersionMatch() throws Exception
1:     {
1:         String versionString = SettingsMisc.parseVersionFile("CassandraVersion=TheBestVersion\n");
1:         assertEquals("Version: TheBestVersion", versionString);
1:     }
1: 
1:     @Test
1:     public void parsesVersionNoMatch() throws Exception
1:     {
1:         String versionString = SettingsMisc.parseVersionFile("VersionFileChangedFormat :(");
1:         assertEquals("Unable to find version information", versionString);
1:     }
1: }
============================================================================