1:7db46ef: /*
1:7db46ef:  *
1:7db46ef:  * Licensed to the Apache Software Foundation (ASF) under one
1:7db46ef:  * or more contributor license agreements.  See the NOTICE file
1:7db46ef:  * distributed with this work for additional information
1:7db46ef:  * regarding copyright ownership.  The ASF licenses this file
1:7db46ef:  * to you under the Apache License, Version 2.0 (the
1:7db46ef:  * "License"); you may not use this file except in compliance
1:7db46ef:  * with the License.  You may obtain a copy of the License at
1:7db46ef:  *
1:7db46ef:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7db46ef:  *
1:7db46ef:  * Unless required by applicable law or agreed to in writing,
1:7db46ef:  * software distributed under the License is distributed on an
1:7db46ef:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:7db46ef:  * KIND, either express or implied.  See the License for the
1:7db46ef:  * specific language governing permissions and limitations
1:7db46ef:  * under the License.
1:7db46ef:  *
1:7db46ef:  */
1:2336d94: package org.apache.cassandra.thrift;
3:7db46ef: 
1:b973a33: import java.util.Map;
1:b973a33: import java.util.Set;
1:7db46ef: 
1:2336d94: import org.apache.thrift.transport.TTransport;
1:7db46ef: 
1:b973a33: /**
1:b973a33:  * Transport factory for establishing thrift connections from clients to a remote server.
1:b973a33:  */
1:7db46ef: public interface ITransportFactory
1:7db46ef: {
1:b973a33:     static final String PROPERTY_KEY = "cassandra.client.transport.factory";
1:b973a33: 
1:b973a33:     /**
1:b973a33:      * Opens a client transport to a thrift server.
1:b973a33:      * Example:
1:b973a33:      *
1:b973a33:      * <pre>
1:b973a33:      * TTransport transport = clientTransportFactory.openTransport(address, port);
1:b973a33:      * Cassandra.Iface client = new Cassandra.Client(new BinaryProtocol(transport));
1:b973a33:      * </pre>
1:b973a33:      *
1:b973a33:      * @param host fully qualified hostname of the server
1:b973a33:      * @param port RPC port of the server
1:b973a33:      * @return open and ready to use transport
1:b973a33:      * @throws Exception implementation defined; usually throws TTransportException or IOException
1:b973a33:      *         if the connection cannot be established
1:b973a33:      */
1:2336d94:     TTransport openTransport(String host, int port) throws Exception;
1:b973a33: 
1:b973a33:     /**
1:b973a33:      * Sets an implementation defined set of options.
1:2336d94:      * Keys in this map must conform to the set set returned by ITransportFactory#supportedOptions.
1:b973a33:      * @param options option map
1:b973a33:      */
1:b973a33:     void setOptions(Map<String, String> options);
1:b973a33: 
1:b973a33:     /**
1:b973a33:      * @return set of options supported by this transport factory implementation
1:b973a33:      */
1:b973a33:     Set<String> supportedOptions();
1:7db46ef: }
1:b973a33: 
============================================================================
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:2336d94
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.thrift;
1: import org.apache.thrift.transport.TTransport;
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     TTransport openTransport(String host, int port) throws Exception;
1:      * Keys in this map must conform to the set set returned by ITransportFactory#supportedOptions.
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:b973a33
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
1: import java.util.Set;
1: /**
1:  * Transport factory for establishing thrift connections from clients to a remote server.
1:  */
1:     static final String PROPERTY_KEY = "cassandra.client.transport.factory";
0:     static final String LONG_OPTION = "transport-factory";
0:     static final String SHORT_OPTION = "tr";
1: 
1:     /**
1:      * Opens a client transport to a thrift server.
1:      * Example:
1:      *
1:      * <pre>
1:      * TTransport transport = clientTransportFactory.openTransport(address, port);
1:      * Cassandra.Iface client = new Cassandra.Client(new BinaryProtocol(transport));
1:      * </pre>
1:      *
1:      * @param host fully qualified hostname of the server
1:      * @param port RPC port of the server
0:      * @param conf Hadoop configuration
1:      * @return open and ready to use transport
1:      * @throws Exception implementation defined; usually throws TTransportException or IOException
1:      *         if the connection cannot be established
1:      */
0:     TTransport openTransport(String host, int port, Configuration conf) throws Exception;
1: 
1:     /**
1:      * Sets an implementation defined set of options.
0:      * Keys in this map must conform to the set set returned by TClientTransportFactory#supportedOptions.
1:      * @param options option map
1:      */
1:     void setOptions(Map<String, String> options);
1: 
1:     /**
1:      * @return set of options supported by this transport factory implementation
1:      */
1:     Set<String> supportedOptions();
1: 
commit:aa7dafa
/////////////////////////////////////////////////////////////////////////
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:73d828e
/////////////////////////////////////////////////////////////////////////
0: import org.apache.hadoop.conf.Configuration;
/////////////////////////////////////////////////////////////////////////
0:     TTransport openTransport(TSocket socket, Configuration conf) throws LoginException, TTransportException;
author:Brandon Williams
-------------------------------------------------------------------------------
commit:7db46ef
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.thrift;
1: 
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
1: 
0: import org.apache.hadoop.conf.Configuration;
0: import org.apache.thrift.transport.TSocket;
0: import org.apache.thrift.transport.TTransport;
0: import org.apache.thrift.transport.TTransportException;
1: 
0: import javax.security.auth.login.LoginException;
0: import java.io.IOException;
1: 
1: 
1: public interface ITransportFactory
1: {
0:     TTransport openTransport(TSocket socket) throws LoginException, TTransportException;
1: }
============================================================================