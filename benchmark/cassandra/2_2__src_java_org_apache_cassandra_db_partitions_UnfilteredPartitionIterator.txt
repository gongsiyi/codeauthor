1:a991b64: /*
1:a991b64:  * Licensed to the Apache Software Foundation (ASF) under one
1:a991b64:  * or more contributor license agreements.  See the NOTICE file
1:a991b64:  * distributed with this work for additional information
1:a991b64:  * regarding copyright ownership.  The ASF licenses this file
1:a991b64:  * to you under the Apache License, Version 2.0 (the
1:a991b64:  * "License"); you may not use this file except in compliance
1:a991b64:  * with the License.  You may obtain a copy of the License at
1:a991b64:  *
1:a991b64:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a991b64:  *
1:a991b64:  * Unless required by applicable law or agreed to in writing, software
1:a991b64:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a991b64:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a991b64:  * See the License for the specific language governing permissions and
1:a991b64:  * limitations under the License.
1:a991b64:  */
1:a991b64: package org.apache.cassandra.db.partitions;
3:a991b64: 
1:8a97969: import org.apache.cassandra.config.CFMetaData;
1:a991b64: import org.apache.cassandra.db.rows.UnfilteredRowIterator;
1:a991b64: 
1:a991b64: /**
1:a991b64:  * An iterator over a number of unfiltered partitions (i.e. partitions containing deletion informations).
1:a991b64:  *
1:a991b64:  * The object returned by a call to next() is only guaranteed to be
1:a991b64:  * valid until the next call to hasNext() or next(). If a consumer wants to keep a
1:a991b64:  * reference on the returned objects for longer than the iteration, it must
1:a991b64:  * make a copy of it explicitely.
1:a991b64:  */
1:6094974: public interface UnfilteredPartitionIterator extends BasePartitionIterator<UnfilteredRowIterator>
1:a991b64: {
1:a991b64:     /**
1:a991b64:      * Whether that partition iterator is for a thrift queries.
1:a991b64:      * <p>
1:a991b64:      * If this is true, the partition iterator may return some empty UnfilteredRowIterator and those
1:a991b64:      * should be preserved as thrift include partitions that "exists" (have some cells even
1:a991b64:      * if this are actually deleted) but have nothing matching the query.
1:a991b64:      *
1:a991b64:      * @return whether the iterator is for a thrift query.
1:a991b64:      */
1:a991b64:     public boolean isForThrift();
1:8a97969: 
1:8a97969:     public CFMetaData metadata();
1:a991b64: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:6094974
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public interface UnfilteredPartitionIterator extends BasePartitionIterator<UnfilteredRowIterator>
/////////////////////////////////////////////////////////////////////////
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:8a97969
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.config.CFMetaData;
/////////////////////////////////////////////////////////////////////////
1:     public CFMetaData metadata();
1: 
commit:a991b64
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.db.partitions;
1: 
0: import java.util.Iterator;
1: 
1: import org.apache.cassandra.db.rows.UnfilteredRowIterator;
1: 
1: /**
1:  * An iterator over a number of unfiltered partitions (i.e. partitions containing deletion informations).
1:  *
1:  * The object returned by a call to next() is only guaranteed to be
1:  * valid until the next call to hasNext() or next(). If a consumer wants to keep a
1:  * reference on the returned objects for longer than the iteration, it must
1:  * make a copy of it explicitely.
1:  */
0: public interface UnfilteredPartitionIterator extends Iterator<UnfilteredRowIterator>, AutoCloseable
1: {
1:     /**
1:      * Whether that partition iterator is for a thrift queries.
1:      * <p>
1:      * If this is true, the partition iterator may return some empty UnfilteredRowIterator and those
1:      * should be preserved as thrift include partitions that "exists" (have some cells even
1:      * if this are actually deleted) but have nothing matching the query.
1:      *
1:      * @return whether the iterator is for a thrift query.
1:      */
1:     public boolean isForThrift();
1: 
0:     public void close();
1: }
============================================================================