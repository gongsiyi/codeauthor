1:8251716: /*
1:8251716: 
1:8251716:    Derby - Class org.apache.derbyTesting.functionTests.tests.engine.ShutdownWithoutDeregisterPermissionTest
1:8251716: 
1:8251716:    Licensed to the Apache Software Foundation (ASF) under one or more
1:8251716:    contributor license agreements.  See the NOTICE file distributed with
1:8251716:    this work for additional information regarding copyright ownership.
1:8251716:    The ASF licenses this file to You under the Apache License, Version 2.0
1:8251716:    (the "License"); you may not use this file except in compliance with
1:8251716:    the License.  You may obtain a copy of the License at
1:8251716: 
1:8251716:       http://www.apache.org/licenses/LICENSE-2.0
1:8251716: 
1:8251716:    Unless required by applicable law or agreed to in writing, software
1:8251716:    distributed under the License is distributed on an "AS IS" BASIS,
1:8251716:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8251716:    See the License for the specific language governing permissions and
1:8251716:    limitations under the License.
1:8251716: 
1:8251716:  */
1:8251716: 
1:8251716: package org.apache.derbyTesting.functionTests.tests.engine;
1:8251716: 
1:8251716: import java.sql.Driver;
1:8251716: import java.sql.DriverManager;
1:8251716: import java.sql.SQLException;
1:8251716: import java.util.Enumeration;
1:8251716: import junit.framework.Test;
1:8251716: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:8251716: import org.apache.derbyTesting.junit.JDBC;
1:8251716: import org.apache.derbyTesting.junit.SecurityManagerSetup;
1:8251716: import org.apache.derbyTesting.junit.TestConfiguration;
1:8251716: 
1:8251716: /**
1:8251716:  * Test that shutdown works even if derby.jar does not have permission to
1:8251716:  * deregister the JDBC driver. Regression test case for DERBY-6224.
1:8251716:  */
1:8251716: public class ShutdownWithoutDeregisterPermissionTest extends BaseJDBCTestCase {
1:8251716:     public ShutdownWithoutDeregisterPermissionTest(String name) {
1:8251716:         super(name);
1:8251716:     }
1:8251716: 
1:8251716:     public static Test suite() {
1:8251716:         return new SecurityManagerSetup(
1:8251716:                 TestConfiguration.embeddedSuite(
1:8251716:                         ShutdownWithoutDeregisterPermissionTest.class),
1:8251716:                 "org/apache/derbyTesting/functionTests/tests/engine/" +
1:8251716:                 "noDeregisterPermission.policy");
1:8251716:     }
1:8251716: 
1:8251716:     public void testShutdownWithoutPermission() throws SQLException {
1:8251716:         // First get a connection to make sure the engine is booted.
1:8251716:         getConnection().close();
1:8251716: 
1:8251716:         // Shut down the engine. This used to fail with an
1:8251716:         // AccessControlException on Java 8 before DERBY-6224.
1:8251716:         TestConfiguration config = TestConfiguration.getCurrent();
1:8251716:         config.shutdownEngine();
1:8251716: 
1:8251716:         // Test whether shutdown deregistered the driver. On versions prior
1:8251716:         // to Java 8/JDBC 4.2, we expect the driver to be deregistered even
1:8251716:         // though the permission is missing, and the call to getDrivers()
1:8251716:         // should not return any instance of AutoloadedDriver.
1:8251716:         // On Java 8/JDBC 4.2 and higher, we expect AutoloadedDriver to
1:8251716:         // be in the list of registered drivers.
1:8251716: 
1:8251716:         Enumeration<Driver> drivers = DriverManager.getDrivers();
1:8251716:         Driver found = null;
1:8251716:         while (found == null && drivers.hasMoreElements()) {
1:8251716:             Driver driver = drivers.nextElement();
1:8251716:             if (driver.getClass().getName().startsWith(
1:8251716:                     "org.apache.derby.jdbc.AutoloadedDriver")) {
1:8251716:                 found = driver;
1:8251716:             }
1:8251716:         }
1:8251716: 
1:8251716:         if (JDBC.vmSupportsJDBC42()) {
1:8251716:             assertNotNull("Expected driver to be registered", found);
1:8251716:         } else {
1:8251716:             assertNull("Expected driver to be deregistered", found);
1:8251716:         }
1:8251716:     }
1:8251716: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:8251716
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.engine.ShutdownWithoutDeregisterPermissionTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.engine;
1: 
1: import java.sql.Driver;
1: import java.sql.DriverManager;
1: import java.sql.SQLException;
1: import java.util.Enumeration;
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.JDBC;
1: import org.apache.derbyTesting.junit.SecurityManagerSetup;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: /**
1:  * Test that shutdown works even if derby.jar does not have permission to
1:  * deregister the JDBC driver. Regression test case for DERBY-6224.
1:  */
1: public class ShutdownWithoutDeregisterPermissionTest extends BaseJDBCTestCase {
1:     public ShutdownWithoutDeregisterPermissionTest(String name) {
1:         super(name);
1:     }
1: 
1:     public static Test suite() {
1:         return new SecurityManagerSetup(
1:                 TestConfiguration.embeddedSuite(
1:                         ShutdownWithoutDeregisterPermissionTest.class),
1:                 "org/apache/derbyTesting/functionTests/tests/engine/" +
1:                 "noDeregisterPermission.policy");
1:     }
1: 
1:     public void testShutdownWithoutPermission() throws SQLException {
1:         // First get a connection to make sure the engine is booted.
1:         getConnection().close();
1: 
1:         // Shut down the engine. This used to fail with an
1:         // AccessControlException on Java 8 before DERBY-6224.
1:         TestConfiguration config = TestConfiguration.getCurrent();
1:         config.shutdownEngine();
1: 
1:         // Test whether shutdown deregistered the driver. On versions prior
1:         // to Java 8/JDBC 4.2, we expect the driver to be deregistered even
1:         // though the permission is missing, and the call to getDrivers()
1:         // should not return any instance of AutoloadedDriver.
1:         // On Java 8/JDBC 4.2 and higher, we expect AutoloadedDriver to
1:         // be in the list of registered drivers.
1: 
1:         Enumeration<Driver> drivers = DriverManager.getDrivers();
1:         Driver found = null;
1:         while (found == null && drivers.hasMoreElements()) {
1:             Driver driver = drivers.nextElement();
1:             if (driver.getClass().getName().startsWith(
1:                     "org.apache.derby.jdbc.AutoloadedDriver")) {
1:                 found = driver;
1:             }
1:         }
1: 
1:         if (JDBC.vmSupportsJDBC42()) {
1:             assertNotNull("Expected driver to be registered", found);
1:         } else {
1:             assertNull("Expected driver to be deregistered", found);
1:         }
1:     }
1: }
============================================================================