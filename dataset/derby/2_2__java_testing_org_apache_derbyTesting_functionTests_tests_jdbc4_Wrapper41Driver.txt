1:09869c6: /*
1:09869c6:  
1:09869c6:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4.Wrapper41Driver
1:09869c6:  
1:09869c6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:09869c6:    contributor license agreements.  See the NOTICE file distributed with
1:09869c6:    this work for additional information regarding copyright ownership.
1:09869c6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:09869c6:    (the "License"); you may not use this file except in compliance with
1:09869c6:    the License.  You may obtain a copy of the License at
1:09869c6:  
1:09869c6:       http://www.apache.org/licenses/LICENSE-2.0
1:09869c6:  
1:09869c6:    Unless required by applicable law or agreed to in writing, software
1:09869c6:    distributed under the License is distributed on an "AS IS" BASIS,
1:09869c6:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:09869c6:    See the License for the specific language governing permissions and
1:09869c6:    limitations under the License.
1:09869c6:  
1:09869c6:  */
1:09869c6: 
1:09869c6: package org.apache.derbyTesting.functionTests.tests.jdbc4;
1:09869c6: 
1:09869c6: import java.sql.Driver;
1:09869c6: import java.sql.SQLException;
1:09869c6: import java.util.logging.Logger;
1:09869c6: 
1:595307e: import org.apache.derby.jdbc.AutoloadedDriver;
1:9a0cdf1: import org.apache.derby.jdbc.ClientDriver;
1:595307e: import org.apache.derby.jdbc.InternalDriver;
1:09869c6: 
1:09869c6: /**
1:09869c6:  * A wrapper around the methods added by JDBC 4.1.
1:09869c6:  * We can eliminate this class after Java 7 goes GA and we are allowed
1:09869c6:  * to use the Java 7 compiler to build our released versions of derbyTesting.jar.
1:09869c6:  */
1:09869c6: public  class   Wrapper41Driver
1:09869c6: {
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // STATE
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:595307e:     private AutoloadedDriver    _embedded;
1:595307e:     private InternalDriver      _driver40;
1:9a0cdf1:     private ClientDriver      _netclient;
1:09869c6:     
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // CONSTRUCTORS
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     public Wrapper41Driver( Object wrapped ) throws Exception
1:09869c6:     {
1:595307e:         if ( wrapped instanceof AutoloadedDriver ) { _embedded = (AutoloadedDriver) wrapped; }
1:595307e:         else if ( wrapped instanceof InternalDriver ) { _driver40 = (InternalDriver) wrapped; }
1:9a0cdf1:         else if ( wrapped instanceof ClientDriver ) { _netclient = (ClientDriver) wrapped; }
1:20bc461:         else { throw nothingWrapped( wrapped ); }
1:09869c6:     }
1:09869c6:     
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // JDBC 4.1 BEHAVIOR
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     public  Logger    getParentLogger() throws SQLException
1:09869c6:     {
1:09869c6:         if ( _embedded != null ) { return _embedded.getParentLogger(); }
1:20bc461:         else if ( _driver40 != null ) { return _driver40.getParentLogger(); }
1:09869c6:         else if ( _netclient != null ) { return _netclient.getParentLogger(); }
1:20bc461:         else { throw nothingWrapped( null ); }
1:09869c6:     }
1:09869c6: 
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // OTHER PUBLIC BEHAVIOR
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     public Driver   getWrappedObject() throws SQLException
1:09869c6:     {
1:09869c6:         if ( _embedded != null ) { return _embedded; }
1:20bc461:         else if ( _driver40 != null ) { return _driver40; }
1:09869c6:         else if ( _netclient != null ) { return _netclient; }
1:20bc461:         else { throw nothingWrapped( null ); }
1:09869c6:     }
1:09869c6: 
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // MINIONS
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:20bc461:     private SQLException nothingWrapped( Object wrapped )
1:20bc461:     {
1:20bc461:         String  wrappedString = (wrapped == null ? "NULL" : wrapped.getClass().getName() );
1:20bc461:         return new SQLException( "Nothing wrapped: " + wrappedString );
1:20bc461:     }
1:09869c6: 
1:09869c6: }
1:09869c6: 
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:595307e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.jdbc.AutoloadedDriver;
1: import org.apache.derby.jdbc.InternalDriver;
/////////////////////////////////////////////////////////////////////////
1:     private AutoloadedDriver    _embedded;
1:     private InternalDriver      _driver40;
/////////////////////////////////////////////////////////////////////////
1:         if ( wrapped instanceof AutoloadedDriver ) { _embedded = (AutoloadedDriver) wrapped; }
1:         else if ( wrapped instanceof InternalDriver ) { _driver40 = (InternalDriver) wrapped; }
commit:9a0cdf1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.jdbc.ClientDriver;
/////////////////////////////////////////////////////////////////////////
1:     private ClientDriver      _netclient;
/////////////////////////////////////////////////////////////////////////
1:         else if ( wrapped instanceof ClientDriver ) { _netclient = (ClientDriver) wrapped; }
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:20bc461
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.jdbc.Driver40;
/////////////////////////////////////////////////////////////////////////
0:     private Driver40            _driver40;
/////////////////////////////////////////////////////////////////////////
0:         else if ( wrapped instanceof Driver40 ) { _driver40 = (Driver40) wrapped; }
1:         else { throw nothingWrapped( wrapped ); }
/////////////////////////////////////////////////////////////////////////
1:         else if ( _driver40 != null ) { return _driver40.getParentLogger(); }
1:         else { throw nothingWrapped( null ); }
/////////////////////////////////////////////////////////////////////////
1:         else if ( _driver40 != null ) { return _driver40; }
1:         else { throw nothingWrapped( null ); }
/////////////////////////////////////////////////////////////////////////
1:     private SQLException nothingWrapped( Object wrapped )
1:     {
1:         String  wrappedString = (wrapped == null ? "NULL" : wrapped.getClass().getName() );
1:         return new SQLException( "Nothing wrapped: " + wrappedString );
1:     }
commit:09869c6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4.Wrapper41Driver
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.jdbc4;
1: 
1: import java.sql.Driver;
1: import java.sql.SQLException;
1: import java.util.logging.Logger;
1: 
0: import org.apache.derby.jdbc.AutoloadedDriver40;
0: import org.apache.derby.jdbc.ClientDriver40;
1: 
1: /**
1:  * A wrapper around the methods added by JDBC 4.1.
1:  * We can eliminate this class after Java 7 goes GA and we are allowed
1:  * to use the Java 7 compiler to build our released versions of derbyTesting.jar.
1:  */
1: public  class   Wrapper41Driver
1: {
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
0:     private AutoloadedDriver40    _embedded;
0:     private ClientDriver40      _netclient;
1:     
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTORS
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public Wrapper41Driver( Object wrapped ) throws Exception
1:     {
0:         if ( wrapped instanceof AutoloadedDriver40 ) { _embedded = (AutoloadedDriver40) wrapped; }
0:         else if ( wrapped instanceof ClientDriver40 ) { _netclient = (ClientDriver40) wrapped; }
0:         else { throw nothingWrapped(); }
1:     }
1:     
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // JDBC 4.1 BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public  Logger    getParentLogger() throws SQLException
1:     {
1:         if ( _embedded != null ) { return _embedded.getParentLogger(); }
1:         else if ( _netclient != null ) { return _netclient.getParentLogger(); }
0:         else { throw nothingWrapped(); }
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // OTHER PUBLIC BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public Driver   getWrappedObject() throws SQLException
1:     {
1:         if ( _embedded != null ) { return _embedded; }
1:         else if ( _netclient != null ) { return _netclient; }
0:         else { throw nothingWrapped(); }
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // MINIONS
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
0:     private SQLException nothingWrapped() { return new SQLException( "Nothing wrapped!" ); }
1: 
1: }
1: 
============================================================================