1:4109a77: /*
1:4109a77: 
1:8a73c4f:    Derby - Class org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest
1:4109a77: 
1:4109a77:        Licensed to the Apache Software Foundation (ASF) under one
1:4109a77:        or more contributor license agreements.  See the NOTICE file
1:4109a77:        distributed with this work for additional information
1:4109a77:        regarding copyright ownership.  The ASF licenses this file
1:4109a77:        to you under the Apache License, Version 2.0 (the
1:4109a77:        "License"); you may not use this file except in compliance
1:4109a77:        with the License.  You may obtain a copy of the License at
1:4109a77: 
1:4109a77:          http://www.apache.org/licenses/LICENSE-2.0
1:4109a77: 
1:4109a77:        Unless required by applicable law or agreed to in writing,
1:4109a77:        software distributed under the License is distributed on an
1:4109a77:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:4109a77:        KIND, either express or implied.  See the License for the
1:4109a77:        specific language governing permissions and limitations
1:4109a77:        under the License
1:4109a77: */
1:2058395: package org.apache.derbyTesting.functionTests.tests.tools;
3:2058395: 
1:2058395: import java.io.ByteArrayInputStream;
1:2058395: import java.io.ByteArrayOutputStream;
1:2058395: import java.io.UnsupportedEncodingException;
1:2058395: import java.sql.Connection;
1:2058395: import java.sql.SQLException;
1:2058395: import java.util.Properties;
1:2058395: import junit.framework.Test;
1:2058395: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:2058395: import org.apache.derbyTesting.junit.Derby;
1:2058395: import org.apache.derbyTesting.junit.JDBC;
1:2058395: import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
1:2058395: import org.apache.derbyTesting.junit.TestConfiguration;
1:2058395: 
1:2058395: 
1:2058395: public class ConnectWrongSubprotocolTest extends BaseJDBCTestCase {
1:2058395: 
1:2058395:     public ConnectWrongSubprotocolTest(String name) {
1:2058395:         super(name);
1:2058395:     }
1:2058395:     
1:2058395:     public static Test suite() {
1:2058395:         // Test does not run on J2ME
1:1ae02c9:         if (JDBC.vmSupportsJSR169()) {
1:1ae02c9:             return new BaseTestSuite(
1:1ae02c9:                 "empty: no support for Driver.sql.Manager with jsr 169");
1:1ae02c9:         }
1:2058395:         
1:2058395:         if (!Derby.hasTools())
1:1ae02c9:             return new BaseTestSuite("empty: no tools support");
1:2058395:         
1:2058395:     	Properties props = new Properties();        
1:2058395:         props.setProperty("ij.connection.wrongSubprotocol", "jdbc:noone:fruitfly;create=true");
1:2058395:         
1:2058395:         Test test = TestConfiguration.embeddedSuite(ConnectWrongSubprotocolTest.class);
1:2058395:         
1:2058395:     	return new SystemPropertyTestSetup(test, props);
1:2058395:     }
1:2058395:     
1:2058395:     public void testConnectWrongSubprotocolWithSystemProperty()
1:2058395:     		throws UnsupportedEncodingException, SQLException {
1:2058395:     	String emptyIjScript = "";
1:2058395:     	boolean useSystemProperties = true;
1:2058395:     	
1:2058395:     	checkConnectWrongSubprotocol(emptyIjScript, useSystemProperties);    	
1:2058395:     }
1:2058395:     
1:2058395:     public void testConnectWrongSubprotoctestolWithoutSystemProperty()
1:2058395:             throws UnsupportedEncodingException, SQLException {
1:2058395:         String ijScriptConnectWrongSubprotocol = "connect 'jdbc:noone:fruitfly;create=true';";
1:2058395:         boolean useSystemProperties = false;
1:2058395:         
1:2058395:         checkConnectWrongSubprotocol(ijScriptConnectWrongSubprotocol, useSystemProperties);
1:2058395:     }
1:2058395:     
1:2058395:     private void checkConnectWrongSubprotocol(String ijScript, boolean useSystemProperties)
1:2058395:             throws UnsupportedEncodingException, SQLException {
1:2058395:         String ijResult = runIjScript(ijScript, useSystemProperties);       
1:2058395:                 assertTrue(ijResult.indexOf("08001") > -1);
1:2058395:         assertTrue(ijResult.indexOf("No suitable driver") > -1);        
1:2058395:     }
1:2058395: 
1:2058395:     private String runIjScript(String ijScript, boolean useSystemProperties) 
1:2058395:             throws UnsupportedEncodingException, SQLException {
1:2058395:         ByteArrayInputStream bais = 
1:bd3d184:         		new ByteArrayInputStream(ijScript.getBytes("US-ASCII"));
1:2058395:         ByteArrayOutputStream baos = new ByteArrayOutputStream(10 * 1024);
1:2058395:         Connection conn = getConnection();
1:2058395:         
1:2058395:         org.apache.derby.tools.ij.runScript(
1:2058395:                 conn,
1:2058395:                 bais,
1:2058395:                 "US-ASCII",
1:2058395:                 baos,
1:2058395:                 "US-ASCII",
1:2058395:                 useSystemProperties);
1:2058395:         
1:2058395:         if (!conn.isClosed() && !conn.getAutoCommit())
1:2058395:             conn.commit();
1:2058395: 
1:bd3d184:         return new String(baos.toByteArray(), "US-ASCII");
1:2058395:     }
1:2058395: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJSR169()) {
1:             return new BaseTestSuite(
1:                 "empty: no support for Driver.sql.Manager with jsr 169");
1:         }
1:             return new BaseTestSuite("empty: no tools support");
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:bd3d184
/////////////////////////////////////////////////////////////////////////
1:         		new ByteArrayInputStream(ijScript.getBytes("US-ASCII"));
/////////////////////////////////////////////////////////////////////////
1:         return new String(baos.toByteArray(), "US-ASCII");
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:8a73c4f
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.tools.ConnectWrongSubprotocolTest
commit:4109a77
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Derby - Class org.apache.derbyTesting.functionTests.tests.tools.IjConnNameTest
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
commit:2058395
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derbyTesting.functionTests.tests.tools;
1: 
1: import java.io.ByteArrayInputStream;
1: import java.io.ByteArrayOutputStream;
1: import java.io.UnsupportedEncodingException;
1: import java.sql.Connection;
1: import java.sql.SQLException;
1: import java.util.Properties;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.Derby;
1: import org.apache.derbyTesting.junit.JDBC;
1: import org.apache.derbyTesting.junit.SystemPropertyTestSetup;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: 
1: public class ConnectWrongSubprotocolTest extends BaseJDBCTestCase {
1: 
1:     public ConnectWrongSubprotocolTest(String name) {
1:         super(name);
1:     }
1:     
1:     public static Test suite() {
1:         // Test does not run on J2ME
0:         if (JDBC.vmSupportsJSR169())
0:             return new TestSuite("empty: no support for Driver.sql.Manager with jsr 169");
1:         
1:         if (!Derby.hasTools())
0:             return new TestSuite("empty: no tools support");
1:         
1:     	Properties props = new Properties();        
1:         props.setProperty("ij.connection.wrongSubprotocol", "jdbc:noone:fruitfly;create=true");
1:         
1:         Test test = TestConfiguration.embeddedSuite(ConnectWrongSubprotocolTest.class);
1:         
1:     	return new SystemPropertyTestSetup(test, props);
1:     }
1:     
1:     public void testConnectWrongSubprotocolWithSystemProperty()
1:     		throws UnsupportedEncodingException, SQLException {
1:     	String emptyIjScript = "";
1:     	boolean useSystemProperties = true;
1:     	
1:     	checkConnectWrongSubprotocol(emptyIjScript, useSystemProperties);    	
1:     }
1:     
1:     public void testConnectWrongSubprotoctestolWithoutSystemProperty()
1:             throws UnsupportedEncodingException, SQLException {
1:         String ijScriptConnectWrongSubprotocol = "connect 'jdbc:noone:fruitfly;create=true';";
1:         boolean useSystemProperties = false;
1:         
1:         checkConnectWrongSubprotocol(ijScriptConnectWrongSubprotocol, useSystemProperties);
1:     }
1:     
1:     private void checkConnectWrongSubprotocol(String ijScript, boolean useSystemProperties)
1:             throws UnsupportedEncodingException, SQLException {
1:         String ijResult = runIjScript(ijScript, useSystemProperties);       
1:                 assertTrue(ijResult.indexOf("08001") > -1);
1:         assertTrue(ijResult.indexOf("No suitable driver") > -1);        
1:     }
1: 
1:     private String runIjScript(String ijScript, boolean useSystemProperties) 
1:             throws UnsupportedEncodingException, SQLException {
1:         ByteArrayInputStream bais = 
0:         		new ByteArrayInputStream(ijScript.getBytes());
1:         ByteArrayOutputStream baos = new ByteArrayOutputStream(10 * 1024);
1:         Connection conn = getConnection();
1:         
1:         org.apache.derby.tools.ij.runScript(
1:                 conn,
1:                 bais,
1:                 "US-ASCII",
1:                 baos,
1:                 "US-ASCII",
1:                 useSystemProperties);
1:         
1:         if (!conn.isClosed() && !conn.getAutoCommit())
1:             conn.commit();
1: 
0:         return new String(baos.toByteArray());
1:     }
1: }
============================================================================