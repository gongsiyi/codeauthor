1:fc9b418: /*
1:fc9b418: 
1:fc9b418:    Derby - Class org.apache.derby.client.net.NetResultSet42
1:fc9b418: 
1:fc9b418:    Licensed to the Apache Software Foundation (ASF) under one or more
1:fc9b418:    contributor license agreements.  See the NOTICE file distributed with
1:fc9b418:    this work for additional information regarding copyright ownership.
1:fc9b418:    The ASF licenses this file to You under the Apache License, Version 2.0
1:fc9b418:    (the "License"); you may not use this file except in compliance with
1:fc9b418:    the License.  You may obtain a copy of the License at
1:fc9b418: 
1:fc9b418:       http://www.apache.org/licenses/LICENSE-2.0
1:fc9b418: 
1:fc9b418:    Unless required by applicable law or agreed to in writing, software
1:fc9b418:    distributed under the License is distributed on an "AS IS" BASIS,
1:fc9b418:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc9b418:    See the License for the specific language governing permissions and
1:fc9b418:    limitations under the License.
1:fc9b418: 
1:fc9b418: */
1:fc9b418: 
1:fc9b418: package org.apache.derby.client.net;
1:fc9b418: 
1:fc9b418: import java.sql.SQLException;
1:fc9b418: import java.sql.SQLType;
1:fc9b418: import org.apache.derby.client.am.Cursor;
1:fc9b418: import org.apache.derby.client.am.SqlException;
1:fc9b418: import org.apache.derby.client.am.Utils42;
1:fc9b418: 
1:fc9b418: 
1:9a0cdf1: class NetResultSet42 extends NetResultSet
1:fc9b418: {
1:fc9b418:     
1:fc9b418:     NetResultSet42(NetAgent netAgent,
1:fc9b418:         NetStatement netStatement,
1:fc9b418:         Cursor cursor,
1:fc9b418:         int qryprctyp,  //protocolType, CodePoint.FIXROWPRC | 
1:fc9b418:                         //              CodePoint.LMTBLKPRC
1:fc9b418:         int sqlcsrhld, // holdOption, 0xF0 for false (default) | 0xF1 for true.
1:fc9b418:         int qryattscr, // scrollOption, 0xF0 for false (default) | 0xF1 for true.
1:fc9b418:         int qryattsns, // sensitivity, CodePoint.QRYUNK | 
1:fc9b418:                        //              CodePoint.QRYINS | 
1:fc9b418:                        //              CodePoint.QRYSNSSTC
1:fc9b418:         int qryattset, // rowsetCursor, 0xF0 for false (default) | 0xF1 for true.
1:fc9b418:         long qryinsid, // instanceIdentifier, 0 (if not returned, check default) or number
1:fc9b418:         int actualResultSetType,
1:fc9b418:         int actualResultSetConcurrency,
1:fc9b418:         int actualResultSetHoldability) //throws DisconnectException
1:fc9b418:     {
1:fc9b418:         super(netAgent, netStatement, cursor, qryprctyp, sqlcsrhld, qryattscr,
1:fc9b418:               qryattsns, qryattset, qryinsid, actualResultSetType,
1:fc9b418:               actualResultSetConcurrency, actualResultSetHoldability);
1:fc9b418:     }
1:fc9b418:     
1:fc9b418:     public void updateObject
1:fc9b418:         ( int columnIndex, Object x, SQLType targetSqlType )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:fc9b418:         checkClosed( "updateObject" );
1:fc9b418:         updateObject( columnIndex, x, Utils42.getTypeAsInt( this.agent_, targetSqlType ) );
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     public void updateObject
1:fc9b418:         ( int columnIndex, Object x, SQLType targetSqlType, int scaleOrLength )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:fc9b418:         checkClosed( "updateObject" );
1:fc9b418:         updateObject( columnIndex, x, Utils42.getTypeAsInt( this.agent_, targetSqlType ) );
1:fc9b418:         // the client driver doesn't seem to adjust the scale, unlike the embedded driver
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     public void updateObject
1:fc9b418:         ( String columnName, Object x, SQLType targetSqlType )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:fc9b418:         checkClosed( "updateObject" );
1:fc9b418:         updateObject( columnName, x, Utils42.getTypeAsInt( this.agent_, targetSqlType ) );
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     public void updateObject
1:fc9b418:         ( String columnName, Object x, SQLType targetSqlType, int scaleOrLength )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:fc9b418:         checkClosed( "updateObject" );
1:fc9b418:         try {
1:fc9b418:             updateObject( findColumnX( columnName, "updateObject" ), x, targetSqlType, scaleOrLength );
1:fc9b418:         } catch (SqlException se) { throw se.getSQLException(); }
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     private void    checkClosed( String methodName )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:fc9b418:         try { checkForClosedResultSet( methodName ); } catch (SqlException se)
1:fc9b418:         { throw se.getSQLException(); }
1:fc9b418:     }
1:fc9b418:     
1:fc9b418: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:9a0cdf1
/////////////////////////////////////////////////////////////////////////
1: class NetResultSet42 extends NetResultSet
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:0326967
/////////////////////////////////////////////////////////////////////////
0: class NetResultSet42 extends NetResultSet40
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:fc9b418
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.net.NetResultSet42
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.client.net;
1: 
1: import java.sql.SQLException;
1: import java.sql.SQLType;
1: import org.apache.derby.client.am.Cursor;
0: import org.apache.derby.client.am.ClientMessageId;
1: import org.apache.derby.client.am.SqlException;
1: import org.apache.derby.client.am.Utils42;
0: import org.apache.derby.shared.common.reference.SQLState;
1: 
1: 
0: public class NetResultSet42 extends NetResultSet40
1: {
1:     
1:     NetResultSet42(NetAgent netAgent,
1:         NetStatement netStatement,
1:         Cursor cursor,
1:         int qryprctyp,  //protocolType, CodePoint.FIXROWPRC | 
1:                         //              CodePoint.LMTBLKPRC
1:         int sqlcsrhld, // holdOption, 0xF0 for false (default) | 0xF1 for true.
1:         int qryattscr, // scrollOption, 0xF0 for false (default) | 0xF1 for true.
1:         int qryattsns, // sensitivity, CodePoint.QRYUNK | 
1:                        //              CodePoint.QRYINS | 
1:                        //              CodePoint.QRYSNSSTC
1:         int qryattset, // rowsetCursor, 0xF0 for false (default) | 0xF1 for true.
1:         long qryinsid, // instanceIdentifier, 0 (if not returned, check default) or number
1:         int actualResultSetType,
1:         int actualResultSetConcurrency,
1:         int actualResultSetHoldability) //throws DisconnectException
1:     {
1:         super(netAgent, netStatement, cursor, qryprctyp, sqlcsrhld, qryattscr,
1:               qryattsns, qryattset, qryinsid, actualResultSetType,
1:               actualResultSetConcurrency, actualResultSetHoldability);
1:     }
1:     
1:     public void updateObject
1:         ( int columnIndex, Object x, SQLType targetSqlType )
1:         throws SQLException
1:     {
1:         checkClosed( "updateObject" );
1:         updateObject( columnIndex, x, Utils42.getTypeAsInt( this.agent_, targetSqlType ) );
1:     }
1: 
1:     public void updateObject
1:         ( int columnIndex, Object x, SQLType targetSqlType, int scaleOrLength )
1:         throws SQLException
1:     {
1:         checkClosed( "updateObject" );
1:         updateObject( columnIndex, x, Utils42.getTypeAsInt( this.agent_, targetSqlType ) );
1:         // the client driver doesn't seem to adjust the scale, unlike the embedded driver
1:     }
1: 
1:     public void updateObject
1:         ( String columnName, Object x, SQLType targetSqlType )
1:         throws SQLException
1:     {
1:         checkClosed( "updateObject" );
1:         updateObject( columnName, x, Utils42.getTypeAsInt( this.agent_, targetSqlType ) );
1:     }
1: 
1:     public void updateObject
1:         ( String columnName, Object x, SQLType targetSqlType, int scaleOrLength )
1:         throws SQLException
1:     {
1:         checkClosed( "updateObject" );
1:         try {
1:             updateObject( findColumnX( columnName, "updateObject" ), x, targetSqlType, scaleOrLength );
1:         } catch (SqlException se) { throw se.getSQLException(); }
1:     }
1: 
1:     private void    checkClosed( String methodName )
1:         throws SQLException
1:     {
1:         try { checkForClosedResultSet( methodName ); } catch (SqlException se)
1:         { throw se.getSQLException(); }
1:     }
1:     
1: }
============================================================================