1:29007f0: /*
1:29007f0: 
1:29007f0: Derby - Class org.apache.derbyTesting.functionTests.tests.lang.DummyAwareVTI
1:29007f0: 
1:29007f0: Licensed to the Apache Software Foundation (ASF) under one or more
1:29007f0: contributor license agreements.  See the NOTICE file distributed with
1:29007f0: this work for additional information regarding copyright ownership.
1:29007f0: The ASF licenses this file to You under the Apache License, Version 2.0
1:29007f0: (the "License"); you may not use this file except in compliance with
1:29007f0: the License.  You may obtain a copy of the License at
1:29007f0: 
1:29007f0: http://www.apache.org/licenses/LICENSE-2.0
1:29007f0: 
1:29007f0: Unless required by applicable law or agreed to in writing, software
1:29007f0: distributed under the License is distributed on an "AS IS" BASIS,
1:29007f0: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:29007f0: See the License for the specific language governing permissions and
1:29007f0: limitations under the License.
1:29007f0: 
1:29007f0: */
1:29007f0: 
1:29007f0: package org.apache.derbyTesting.functionTests.tests.lang;
1:29007f0: 
1:29007f0: import java.sql.SQLException;
1:29007f0: 
1:29007f0: import org.apache.derby.vti.AwareVTI;
1:29007f0: import org.apache.derby.vti.StringColumnVTI;
1:29007f0: import org.apache.derby.vti.VTIContext;
1:29007f0: 
1:29007f0: /**
1:29007f0:  * A VTI which reports its context
1:29007f0:  */
1:29007f0: public class DummyAwareVTI extends StringColumnVTI
1:29007f0: {
1:29007f0:     ///////////////////////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     // STATE
1:29007f0:     //
1:29007f0:     ///////////////////////////////////////////////////////////////////////////////////
1:29007f0: 
1:29007f0:     private VTIContext  _context;
1:29007f0:     private int     _rowCount = 0;
1:29007f0: 
1:29007f0:     ///////////////////////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     // CONSTRUCTOR
1:29007f0:     //
1:29007f0:     ///////////////////////////////////////////////////////////////////////////////////
1:29007f0: 
1:29007f0:     public  DummyAwareVTI()
1:29007f0:     {
1:29007f0:         super( new String[] { "SCHEMA_NAME", "VTI_NAME", "STATEMENT_TEXT" } );
1:29007f0:     }
1:29007f0: 
1:29007f0:     ///////////////////////////////////////////////////////////////////////////////////
1:29007f0:     //
1:29007f0:     // StringColumnVTI BEHAVIOR
1:29007f0:     //
1:29007f0:     ///////////////////////////////////////////////////////////////////////////////////
1:29007f0: 
1:29007f0:     public boolean  next()
1:29007f0:     {
1:29007f0:         if ( _rowCount > 0 ) { return false; }
1:29007f0: 
1:29007f0:         _rowCount++;
1:29007f0: 
1:29007f0:         return true;
1:29007f0:     }
1:29007f0: 
1:29007f0:     public  void    close() {}
1:29007f0: 
1:29007f0:     protected String getRawColumn(int columnNumber)
1:29007f0:         throws java.sql.SQLException
1:29007f0:     {
1:29007f0:         switch( columnNumber )
1:29007f0:         {
1:29007f0:         case 1: return getContext().vtiSchema();
1:29007f0:         case 2: return getContext().vtiTable();
1:29007f0:         case 3: return getContext().statementText();
1:29007f0: 
1:29007f0:         default: throw new SQLException( "Illegal columnNumber " + columnNumber );
1:29007f0:         }
1:29007f0:     }
1:29007f0: 
1:29007f0: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:29007f0
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: Derby - Class org.apache.derbyTesting.functionTests.tests.lang.DummyAwareVTI
1: 
1: Licensed to the Apache Software Foundation (ASF) under one or more
1: contributor license agreements.  See the NOTICE file distributed with
1: this work for additional information regarding copyright ownership.
1: The ASF licenses this file to You under the Apache License, Version 2.0
1: (the "License"); you may not use this file except in compliance with
1: the License.  You may obtain a copy of the License at
1: 
1: http://www.apache.org/licenses/LICENSE-2.0
1: 
1: Unless required by applicable law or agreed to in writing, software
1: distributed under the License is distributed on an "AS IS" BASIS,
1: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: See the License for the specific language governing permissions and
1: limitations under the License.
1: 
1: */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.SQLException;
1: 
1: import org.apache.derby.vti.AwareVTI;
1: import org.apache.derby.vti.StringColumnVTI;
1: import org.apache.derby.vti.VTIContext;
1: 
1: /**
1:  * A VTI which reports its context
1:  */
1: public class DummyAwareVTI extends StringColumnVTI
1: {
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     private VTIContext  _context;
1:     private int     _rowCount = 0;
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public  DummyAwareVTI()
1:     {
1:         super( new String[] { "SCHEMA_NAME", "VTI_NAME", "STATEMENT_TEXT" } );
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // StringColumnVTI BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean  next()
1:     {
1:         if ( _rowCount > 0 ) { return false; }
1: 
1:         _rowCount++;
1: 
1:         return true;
1:     }
1: 
1:     public  void    close() {}
1: 
1:     protected String getRawColumn(int columnNumber)
1:         throws java.sql.SQLException
1:     {
1:         switch( columnNumber )
1:         {
1:         case 1: return getContext().vtiSchema();
1:         case 2: return getContext().vtiTable();
1:         case 3: return getContext().statementText();
1: 
1:         default: throw new SQLException( "Illegal columnNumber " + columnNumber );
1:         }
1:     }
1: 
1: }
============================================================================