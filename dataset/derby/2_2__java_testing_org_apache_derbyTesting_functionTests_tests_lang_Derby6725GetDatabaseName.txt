1:314a19a: /*
1:314a19a:  * Class org.apache.derbyTesting.functionTests.tests.lang.Derby6725GetDatabaseName
1:314a19a:  *
1:314a19a:  * Licensed to the Apache Software Foundation (ASF) under one
1:314a19a:  * or more contributor license agreements.  See the NOTICE file
1:314a19a:  * distributed with this work for additional information
1:314a19a:  * regarding copyright ownership.  The ASF licenses this file
1:314a19a:  * to you under the Apache License, Version 2.0 (the
1:314a19a:  * "License"); you may not use this file except in compliance
1:314a19a:  * with the License.  You may obtain a copy of the License at
1:314a19a:  *
1:314a19a:  *   http://www.apache.org/licenses/LICENSE-2.0
1:314a19a:  *
1:314a19a:  * Unless required by applicable law or agreed to in writing,
1:314a19a:  * software distributed under the License is distributed on an
1:314a19a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:314a19a:  * KIND, either express or implied.  See the License for the
1:314a19a:  * specific language governing permissions and limitations
1:314a19a:  * under the License.
1:314a19a:  */
1:314a19a: 
1:314a19a: package org.apache.derbyTesting.functionTests.tests.lang;
1:314a19a: 
1:3967d8b: import java.io.File;
1:314a19a: import java.sql.Connection;
1:314a19a: import java.sql.SQLException;
1:314a19a: import java.sql.PreparedStatement;
1:314a19a: import java.sql.ResultSet;
1:314a19a: import junit.framework.Test;
1:314a19a: 
1:3967d8b: import org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests;
1:314a19a: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:314a19a: import org.apache.derbyTesting.junit.TestConfiguration;
1:314a19a: 
1:314a19a: public class Derby6725GetDatabaseName extends BaseJDBCTestCase {
1:314a19a: 
1:314a19a:     public Derby6725GetDatabaseName(String name) {
1:314a19a:         super(name);
1:314a19a:     }
1:314a19a: 
1:314a19a:     /**
1:314a19a:      * Construct top level suite in this JUnit test
1:314a19a:      *
1:314a19a:      * @return A suite containing embedded and client suites.
1:314a19a:      */
1:314a19a:     public static Test suite()
1:314a19a:     {
1:314a19a:         Test test;
1:314a19a:         test = TestConfiguration.defaultSuite(Derby6725GetDatabaseName.class);
1:314a19a:         test = TestConfiguration.additionalDatabaseDecorator(test, "FIRSTDB1");
1:314a19a:         test = TestConfiguration.additionalDatabaseDecorator(test, "SECONDDB2");
1:314a19a:         return test;
1:314a19a:     }
1:314a19a: 
1:314a19a:     //Make sure we get correct db name for different databases
1:314a19a:     public void testDatabaseName() throws SQLException {
1:314a19a:     	checkDbName(getConnection(), "wombat");
1:314a19a:     	checkDbName(openConnection("FIRSTDB1"), "singleUse/oneuse0");
1:314a19a:     	checkDbName(openConnection("SECONDDB2"), "singleUse/oneuse1");
1:314a19a:     }
1:314a19a:     
1:314a19a:     private void checkDbName(Connection conn, String expectedDbName) throws SQLException {
1:3967d8b:         File    systemDir = new File( "system" );
1:3967d8b:         File    dbDir = new File( systemDir, expectedDbName );
1:3967d8b:         String  databasePath = PrivilegedFileOpsForTests.getAbsolutePath( dbDir );
1:3967d8b: 
1:314a19a:         PreparedStatement ps = conn.prepareStatement("values syscs_util.SYSCS_GET_DATABASE_NAME()");
1:314a19a:         ResultSet rs = ps.executeQuery();
1:314a19a:         rs.next();
1:3967d8b:         assertEquals( databasePath, rs.getString( 1 ) );
1:314a19a:         rs.close();
1:314a19a:         ps.close();
1:314a19a:     }
1:314a19a: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:3967d8b
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: import org.apache.derbyTesting.functionTests.util.PrivilegedFileOpsForTests;
/////////////////////////////////////////////////////////////////////////
1:         File    systemDir = new File( "system" );
1:         File    dbDir = new File( systemDir, expectedDbName );
1:         String  databasePath = PrivilegedFileOpsForTests.getAbsolutePath( dbDir );
1: 
1:         assertEquals( databasePath, rs.getString( 1 ) );
author:Mamta Satoor
-------------------------------------------------------------------------------
commit:314a19a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Class org.apache.derbyTesting.functionTests.tests.lang.Derby6725GetDatabaseName
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.Connection;
1: import java.sql.SQLException;
1: import java.sql.PreparedStatement;
1: import java.sql.ResultSet;
1: import junit.framework.Test;
1: 
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class Derby6725GetDatabaseName extends BaseJDBCTestCase {
1: 
1:     public Derby6725GetDatabaseName(String name) {
1:         super(name);
1:     }
1: 
1:     /**
1:      * Construct top level suite in this JUnit test
1:      *
1:      * @return A suite containing embedded and client suites.
1:      */
1:     public static Test suite()
1:     {
1:         Test test;
1:         test = TestConfiguration.defaultSuite(Derby6725GetDatabaseName.class);
1:         test = TestConfiguration.additionalDatabaseDecorator(test, "FIRSTDB1");
1:         test = TestConfiguration.additionalDatabaseDecorator(test, "SECONDDB2");
1:         return test;
1:     }
1: 
1:     //Make sure we get correct db name for different databases
1:     public void testDatabaseName() throws SQLException {
1:     	checkDbName(getConnection(), "wombat");
1:     	checkDbName(openConnection("FIRSTDB1"), "singleUse/oneuse0");
1:     	checkDbName(openConnection("SECONDDB2"), "singleUse/oneuse1");
1:     }
1:     
1:     private void checkDbName(Connection conn, String expectedDbName) throws SQLException {
1:         PreparedStatement ps = conn.prepareStatement("values syscs_util.SYSCS_GET_DATABASE_NAME()");
1:         ResultSet rs = ps.executeQuery();
1:         rs.next();
0:         assertEquals( rs.getString( 1 ),  expectedDbName);
1:         rs.close();
1:         ps.close();
1:     }
1: }
============================================================================