1:9206d5b: /*
1:9206d5b:  
1:9206d5b:    Derby - Class org.apache.derby.iapi.jdbc.BrokeredCallableStatement42
1:9206d5b:  
1:9206d5b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:9206d5b:    contributor license agreements.  See the NOTICE file distributed with
1:9206d5b:    this work for additional information regarding copyright ownership.
1:9206d5b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:9206d5b:    (the "License"); you may not use this file except in compliance with
1:9206d5b:    the License.  You may obtain a copy of the License at
1:9206d5b:  
1:9206d5b:       http://www.apache.org/licenses/LICENSE-2.0
1:9206d5b:  
1:9206d5b:    Unless required by applicable law or agreed to in writing, software
1:9206d5b:    distributed under the License is distributed on an "AS IS" BASIS,
1:9206d5b:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9206d5b:    See the License for the specific language governing permissions and
1:9206d5b:    limitations under the License.
1:9206d5b:  
1:9206d5b:  */
1:9206d5b: 
1:9206d5b: package org.apache.derby.iapi.jdbc;
1:9206d5b: 
1:9206d5b: import java.sql.SQLException;
1:9206d5b: import java.sql.SQLType;
1:9206d5b: 
1:863daa0: public class BrokeredCallableStatement42 extends BrokeredCallableStatement
1:9206d5b: {
1:9206d5b:     public BrokeredCallableStatement42( BrokeredStatementControl control, String sql )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         super(control, sql);
1:9206d5b:     }
1:9206d5b:     
1:9206d5b:     public  void registerOutParameter( int parameterIndex, SQLType sqlType )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         getCallableStatement().registerOutParameter( parameterIndex, sqlType );
1:9206d5b:     }
1:9206d5b:     
1:9206d5b:     public  void registerOutParameter( int parameterIndex, SQLType sqlType, int scale )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         getCallableStatement().registerOutParameter( parameterIndex, sqlType, scale );
1:9206d5b:     }
1:9206d5b:     
1:9206d5b:     public  void registerOutParameter( int parameterIndex, SQLType sqlType, String typeName )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         getCallableStatement().registerOutParameter( parameterIndex, sqlType, typeName );
1:9206d5b:     }
1:9206d5b:     
1:9206d5b:     public  void registerOutParameter( String parameterName, SQLType sqlType )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         getCallableStatement().registerOutParameter( parameterName, sqlType );
1:9206d5b:     }
1:9206d5b:     
1:9206d5b:     public  void registerOutParameter( String parameterName, SQLType sqlType, int scale )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         getCallableStatement().registerOutParameter( parameterName, sqlType, scale );
1:9206d5b:     }
1:9206d5b:     
1:9206d5b:     public  void registerOutParameter( String parameterName,  SQLType sqlType, String typeName )
1:9206d5b:         throws SQLException
1:9206d5b:     {
1:9206d5b:         getCallableStatement().registerOutParameter( parameterName, sqlType, typeName );
1:9206d5b:     }
1:9206d5b:     
1:17efc16:     public  void setObject
1:17efc16:         ( int parameterIndex, java.lang.Object x, SQLType sqlType )
1:17efc16:         throws SQLException
1:17efc16:     {
1:17efc16:         getCallableStatement().setObject( parameterIndex, x, sqlType );
1:17efc16:     }
1:17efc16:     
1:17efc16:     public void setObject
1:17efc16:         ( int parameterIndex, java.lang.Object x, SQLType sqlType, int scaleOrLength )
1:17efc16:         throws SQLException
1:17efc16:     {
1:17efc16:         getCallableStatement().setObject( parameterIndex, x, sqlType, scaleOrLength );
1:17efc16:     }
1:17efc16: 
1:17efc16:     public  void setObject( String parameterName, Object x, SQLType sqlType )
1:17efc16:         throws SQLException
1:17efc16:     {
1:17efc16:         getCallableStatement().setObject( parameterName, x, sqlType );
1:17efc16:     }
1:17efc16:     
1:17efc16:     public  void setObject( String parameterName, Object x, SQLType sqlType, int scaleOrLength )
1:17efc16:         throws SQLException
1:17efc16:     {
1:17efc16:         getCallableStatement().setObject( parameterName, x, sqlType, scaleOrLength );
1:17efc16:     }
1:17efc16: 
1:9206d5b: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:863daa0
/////////////////////////////////////////////////////////////////////////
1: public class BrokeredCallableStatement42 extends BrokeredCallableStatement
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:17efc16
/////////////////////////////////////////////////////////////////////////
1:     public  void setObject
1:         ( int parameterIndex, java.lang.Object x, SQLType sqlType )
1:         throws SQLException
1:     {
1:         getCallableStatement().setObject( parameterIndex, x, sqlType );
1:     }
1:     
1:     public void setObject
1:         ( int parameterIndex, java.lang.Object x, SQLType sqlType, int scaleOrLength )
1:         throws SQLException
1:     {
1:         getCallableStatement().setObject( parameterIndex, x, sqlType, scaleOrLength );
1:     }
1: 
1:     public  void setObject( String parameterName, Object x, SQLType sqlType )
1:         throws SQLException
1:     {
1:         getCallableStatement().setObject( parameterName, x, sqlType );
1:     }
1:     
1:     public  void setObject( String parameterName, Object x, SQLType sqlType, int scaleOrLength )
1:         throws SQLException
1:     {
1:         getCallableStatement().setObject( parameterName, x, sqlType, scaleOrLength );
1:     }
1: 
commit:9206d5b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derby.iapi.jdbc.BrokeredCallableStatement42
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derby.iapi.jdbc;
1: 
1: import java.sql.SQLException;
1: import java.sql.SQLType;
1: 
0: public class BrokeredCallableStatement42 extends BrokeredCallableStatement40
1: {
1:     public BrokeredCallableStatement42( BrokeredStatementControl control, String sql )
1:         throws SQLException
1:     {
1:         super(control, sql);
1:     }
1:     
1:     public  void registerOutParameter( int parameterIndex, SQLType sqlType )
1:         throws SQLException
1:     {
1:         getCallableStatement().registerOutParameter( parameterIndex, sqlType );
1:     }
1:     
1:     public  void registerOutParameter( int parameterIndex, SQLType sqlType, int scale )
1:         throws SQLException
1:     {
1:         getCallableStatement().registerOutParameter( parameterIndex, sqlType, scale );
1:     }
1:     
1:     public  void registerOutParameter( int parameterIndex, SQLType sqlType, String typeName )
1:         throws SQLException
1:     {
1:         getCallableStatement().registerOutParameter( parameterIndex, sqlType, typeName );
1:     }
1:     
1:     public  void registerOutParameter( String parameterName, SQLType sqlType )
1:         throws SQLException
1:     {
1:         getCallableStatement().registerOutParameter( parameterName, sqlType );
1:     }
1:     
1:     public  void registerOutParameter( String parameterName, SQLType sqlType, int scale )
1:         throws SQLException
1:     {
1:         getCallableStatement().registerOutParameter( parameterName, sqlType, scale );
1:     }
1:     
1:     public  void registerOutParameter( String parameterName,  SQLType sqlType, String typeName )
1:         throws SQLException
1:     {
1:         getCallableStatement().registerOutParameter( parameterName, sqlType, typeName );
1:     }
1:     
1: }
============================================================================