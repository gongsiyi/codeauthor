1:1d6c1a5: /*
1:1d6c1a5: 
1:1d6c1a5:    Derby - Class org.apache.derby.iapi.jdbc.EngineLOB
1:1d6c1a5: 
1:1d6c1a5:    Licensed to the Apache Software Foundation (ASF) under one or more
1:1d6c1a5:    contributor license agreements.  See the NOTICE file distributed with
1:1d6c1a5:    this work for additional information regarding copyright ownership.
1:1d6c1a5:    The ASF licenses this file to you under the Apache License, Version 2.0
1:1d6c1a5:    (the "License"); you may not use this file except in compliance with
1:1d6c1a5:    the License.  You may obtain a copy of the License at
1:1d6c1a5: 
1:1d6c1a5:       http://www.apache.org/licenses/LICENSE-2.0
1:1d6c1a5: 
1:1d6c1a5:    Unless required by applicable law or agreed to in writing, software
1:1d6c1a5:    distributed under the License is distributed on an "AS IS" BASIS,
1:1d6c1a5:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1d6c1a5:    See the License for the specific language governing permissions and
1:1d6c1a5:    limitations under the License.
1:1d6c1a5: 
1:1d6c1a5:  */
1:1d6c1a5: 
1:1d6c1a5: package org.apache.derby.iapi.jdbc;
1:1d6c1a5: 
1:1d6c1a5: import java.sql.SQLException;
1:1d6c1a5: 
1:1d6c1a5: /**
1:1d6c1a5:  * Additional methods the embedded engine exposes on all of its large object
1:1d6c1a5:  * (LOB) implementations.
1:1d6c1a5:  * <p>
1:1d6c1a5:  * An internal API only, mainly for the network server.
1:1d6c1a5:  * <p>
1:1d6c1a5:  * <b>Implementation note</b>: If a new method is needed, that only applies to
1:1d6c1a5:  * one specific large object type (for instance a Blob), one should consider
1:1d6c1a5:  * creating a new interface that extends from this one.
1:1d6c1a5:  */
1:1d6c1a5: public interface EngineLOB {
1:1d6c1a5: 
1:1d6c1a5:     /**
1:1d6c1a5:      * Returns LOB locator key.
1:1d6c1a5:      * <p>
1:1a1b708:      * The key can be used with
1:1a1b708:      * {@link org.apache.derby.impl.jdbc.EmbedConnection#getLOBMapping} to
1:1d6c1a5:      * retrieve this LOB at a later time.
1:1d6c1a5:      *
1:1d6c1a5:      * @return Locator key for this LOB
1:1d6c1a5:      */
1:1d6c1a5:     public int getLocator();
1:1d6c1a5: 
1:1d6c1a5:     /**
1:1d6c1a5:      * Frees all resources assoicated with this LOB.
1:1d6c1a5:      *
1:1d6c1a5:      * @throws SQLException if an error occurs during cleanup
1:1d6c1a5:      */
1:1d6c1a5:     public void free() throws SQLException;
1:1d6c1a5: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:1a1b708
/////////////////////////////////////////////////////////////////////////
1:      * The key can be used with
1:      * {@link org.apache.derby.impl.jdbc.EmbedConnection#getLOBMapping} to
commit:1d6c1a5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.jdbc.EngineLOB
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.jdbc;
1: 
1: import java.sql.SQLException;
1: 
1: /**
1:  * Additional methods the embedded engine exposes on all of its large object
1:  * (LOB) implementations.
1:  * <p>
1:  * An internal API only, mainly for the network server.
1:  * <p>
1:  * <b>Implementation note</b>: If a new method is needed, that only applies to
1:  * one specific large object type (for instance a Blob), one should consider
1:  * creating a new interface that extends from this one.
1:  */
1: public interface EngineLOB {
1: 
1:     /**
1:      * Returns LOB locator key.
1:      * <p>
0:      * The key can be used with {@link EmbedConnection#getLobMapping} to
1:      * retrieve this LOB at a later time.
1:      *
1:      * @return Locator key for this LOB
1:      */
1:     public int getLocator();
1: 
1:     /**
1:      * Frees all resources assoicated with this LOB.
1:      *
1:      * @throws SQLException if an error occurs during cleanup
1:      */
1:     public void free() throws SQLException;
1: }
============================================================================