1:2bc809f: /*
2:2bc809f: 
1:2bc809f:    Derby - Class org.apache.derbyTesting.unitTests.harness.UnitTestConstants
1:2bc809f: 
1:c38b841:    Licensed to the Apache Software Foundation (ASF) under one or more
1:c38b841:    contributor license agreements.  See the NOTICE file distributed with
1:c38b841:    this work for additional information regarding copyright ownership.
1:c38b841:    The ASF licenses this file to You under the Apache License, Version 2.0
1:c38b841:    (the "License"); you may not use this file except in compliance with
1:c38b841:    the License.  You may obtain a copy of the License at
1:2bc809f: 
1:2bc809f:       http://www.apache.org/licenses/LICENSE-2.0
1:2bc809f: 
1:2bc809f:    Unless required by applicable law or agreed to in writing, software
1:2bc809f:    distributed under the License is distributed on an "AS IS" BASIS,
1:2bc809f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2bc809f:    See the License for the specific language governing permissions and
1:2bc809f:    limitations under the License.
1:2bc809f: 
1:2bc809f:  */
1:2bc809f: 
1:2bc809f: package org.apache.derbyTesting.unitTests.harness;
1:2bc809f: 
1:2bc809f: /**
1:2bc809f:  * UnitTestConstants contains the constants for the
1:2bc809f:  * unit tests to use when registering and running
1:2bc809f:  * the tests.
1:2bc809f:  *
1:2bc809f:  */
1:2bc809f: public interface UnitTestConstants 
1:2bc809f: {
1:2bc809f: 	/**
1:2bc809f: 	  * the duration of a test can be from MICRO to FOREVER.
1:2bc809f: 	  * <p>
1:2bc809f: 	  * MICRO means the test is practically nothing more than
1:2bc809f: 	  * the call; a simple field examination, for example.
1:2bc809f: 	  */
1:2bc809f: 	static final int DURATION_MICRO = 0;
1:2bc809f: 	/**
1:2bc809f: 	  * SHORT means the test is less than a second.
1:2bc809f: 	  */
1:2bc809f: 	static final int DURATION_SHORT = 1;
1:2bc809f: 	/**
1:2bc809f: 	  * MEDIUM means the test is less than 30 seconds.
1:2bc809f: 	  */
1:2bc809f: 	static final int DURATION_MEDIUM = 2;
1:2bc809f: 	/**
1:2bc809f: 	  * LONG means the test might take 1-5 minutes.
1:2bc809f: 	  */
1:2bc809f: 	static final int DURATION_LONG = 3;
1:2bc809f: 	/**
1:2bc809f: 	  * FOREVER means the test takes more than 5 minutes,
1:2bc809f: 	  * or could loop forever if it fails.
1:2bc809f: 	  */
1:2bc809f: 	static final int DURATION_FOREVER = 4;
1:2bc809f: 	
1:2bc809f: 	/**
1:2bc809f: 	  * The TYPE of test says what sort of completeness it
1:2bc809f: 	  * tests; its thoroughness.
1:2bc809f: 	  * <p>
1:2bc809f: 	  * Note the types given here are ordered from simple to
1:2bc809f: 	  * comprehensive. Each category of tests includes 
1:2bc809f: 	  * tests in earlier, simpler catagories. Thus all SANITY
1:2bc809f: 	  * tests are also BASIC tests.
1:2bc809f: 	  */
1:2bc809f: 	
1:2bc809f: 	/**
1:2bc809f: 	  * SANITY means the test is simply a check that
1:2bc809f: 	  * the system is running.  Little more than a consistency
1:2bc809f: 	  * check would be done.
1:2bc809f: 	  */
1:2bc809f: 	static final int TYPE_SANITY = 0;
1:2bc809f: 	/**
1:2bc809f: 	  * BASIC means the test is a basic check that
1:2bc809f: 	  * the system is working. A single, very common construct
1:2bc809f: 	  * would be verified to be working.
1:2bc809f: 	  */
1:2bc809f: 	static final int TYPE_BASIC = 1;
1:2bc809f: 	/**
1:2bc809f: 	  * COMMON means the test verify that the most common 
1:2bc809f: 	  * cases of use of this object are working properly.
1:2bc809f: 	  */
1:2bc809f: 	static final int TYPE_COMMON = 2;
1:2bc809f: 	/**
1:2bc809f: 	  * COMPLETE means that the tests verify that the
1:2bc809f: 	  * object is performing all expected functionality
1:2bc809f: 	  * correctly.
1:2bc809f: 	  */
1:2bc809f: 	static final int TYPE_COMPLETE = 3;
1:2bc809f: 	
1:2bc809f: 	
1:2bc809f: }// UnitTestConstants
1:2bc809f: 
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:c38b841
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:2bc809f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.harness.UnitTestConstants
1: 
0:    Copyright 1997, 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.unitTests.harness;
1: 
1: /**
1:  * UnitTestConstants contains the constants for the
1:  * unit tests to use when registering and running
1:  * the tests.
1:  *
1:  */
1: public interface UnitTestConstants 
1: {
1: 	/**
1: 	  * the duration of a test can be from MICRO to FOREVER.
1: 	  * <p>
1: 	  * MICRO means the test is practically nothing more than
1: 	  * the call; a simple field examination, for example.
1: 	  */
1: 	static final int DURATION_MICRO = 0;
1: 	/**
1: 	  * SHORT means the test is less than a second.
1: 	  */
1: 	static final int DURATION_SHORT = 1;
1: 	/**
1: 	  * MEDIUM means the test is less than 30 seconds.
1: 	  */
1: 	static final int DURATION_MEDIUM = 2;
1: 	/**
1: 	  * LONG means the test might take 1-5 minutes.
1: 	  */
1: 	static final int DURATION_LONG = 3;
1: 	/**
1: 	  * FOREVER means the test takes more than 5 minutes,
1: 	  * or could loop forever if it fails.
1: 	  */
1: 	static final int DURATION_FOREVER = 4;
1: 	
1: 	/**
1: 	  * The TYPE of test says what sort of completeness it
1: 	  * tests; its thoroughness.
1: 	  * <p>
1: 	  * Note the types given here are ordered from simple to
1: 	  * comprehensive. Each category of tests includes 
1: 	  * tests in earlier, simpler catagories. Thus all SANITY
1: 	  * tests are also BASIC tests.
1: 	  */
1: 	
1: 	/**
1: 	  * SANITY means the test is simply a check that
1: 	  * the system is running.  Little more than a consistency
1: 	  * check would be done.
1: 	  */
1: 	static final int TYPE_SANITY = 0;
1: 	/**
1: 	  * BASIC means the test is a basic check that
1: 	  * the system is working. A single, very common construct
1: 	  * would be verified to be working.
1: 	  */
1: 	static final int TYPE_BASIC = 1;
1: 	/**
1: 	  * COMMON means the test verify that the most common 
1: 	  * cases of use of this object are working properly.
1: 	  */
1: 	static final int TYPE_COMMON = 2;
1: 	/**
1: 	  * COMPLETE means that the tests verify that the
1: 	  * object is performing all expected functionality
1: 	  * correctly.
1: 	  */
1: 	static final int TYPE_COMPLETE = 3;
1: 	
1: 	
1: }// UnitTestConstants
1: 
============================================================================