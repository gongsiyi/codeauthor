1:df69fcc: /*
2:df69fcc: 
1:df69fcc:    Derby - Class nserverdemo.NetworkServerUtil
1:df69fcc: 
1:44e2455:    Licensed to the Apache Software Foundation (ASF) under one or more
1:44e2455:    contributor license agreements.  See the NOTICE file distributed with
1:44e2455:    this work for additional information regarding copyright ownership.
1:44e2455:    The ASF licenses this file to You under the Apache License, Version 2.0
1:44e2455:    (the "License"); you may not use this file except in compliance with
1:44e2455:    the License.  You may obtain a copy of the License at
1:df69fcc: 
1:df69fcc:       http://www.apache.org/licenses/LICENSE-2.0
1:df69fcc: 
1:df69fcc:    Unless required by applicable law or agreed to in writing, software
1:df69fcc:    distributed under the License is distributed on an "AS IS" BASIS,
1:df69fcc:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:df69fcc:    See the License for the specific language governing permissions and
1:df69fcc:    limitations under the License.
1:df69fcc: 
1:df69fcc:  */
1:df69fcc: 
1:df69fcc: package nserverdemo;
1:df69fcc: 
1:df69fcc: import java.util.Properties;
1:df69fcc: import java.sql.SQLException;
1:df69fcc: import java.sql.DriverManager;
1:df69fcc: import java.io.IOException;
1:df69fcc: import java.sql.Statement;
1:df69fcc: import java.sql.ResultSet;
1:df69fcc: import java.sql.SQLException;
1:df69fcc: import java.sql.SQLWarning;
1:df69fcc: import java.io.PrintWriter;
1:df69fcc: import java.net.InetAddress;
1:df69fcc: 
1:df69fcc: import org.apache.derby.drda.NetworkServerControl; //derby network server
1:df69fcc: import java.io.FileOutputStream;
1:df69fcc: 
1:df69fcc: /**
1:df69fcc:  * Class for starting the Derby NetworkServer on a separate Thread.
1:df69fcc:  * This class provides methods to start, and shutdown the server
1:df69fcc:  */
1:df69fcc: 
1:df69fcc: public class NetworkServerUtil  {
1:df69fcc: 
1:df69fcc:     private int portNum;
1:df69fcc:     private NetworkServerControl serverControl;
1:df69fcc: 	private PrintWriter pw;
1:df69fcc: 
1:df69fcc:     public NetworkServerUtil(int port, PrintWriter pw) {
1:df69fcc: 
1:df69fcc:         this.portNum = port;
1:df69fcc: 		this.pw = pw;
1:df69fcc:         try {
1:df69fcc:           serverControl = new
1:df69fcc: 			  NetworkServerControl(InetAddress.getByName("localhost"), port);
1:df69fcc:           pw.println("Derby Network Server created");
1:df69fcc:         } catch (Exception e) {
1:df69fcc:             e.printStackTrace();
1:df69fcc:           }
1:df69fcc:     }
1:df69fcc: 
1:df69fcc:     /**
1:df69fcc:      * trace utility of server
1:df69fcc:      */
1:df69fcc:     public void trace(boolean onoff) {
1:df69fcc:       try {
1:df69fcc:         serverControl.trace(onoff);
1:df69fcc:       } catch (Exception e) {
1:df69fcc:           e.printStackTrace();
1:df69fcc:         }
1:df69fcc:     }
1:df69fcc: 
1:df69fcc: 
1:df69fcc: 	/**
1:df69fcc: 	 * Try to test for a connection
1:df69fcc: 	 * Throws exception if unable to get a connection
1:df69fcc: 	 */
1:df69fcc: 	public void testForConnection()
1:df69fcc: 	throws Exception {
1:df69fcc: 		serverControl.ping();
1:df69fcc: 	}
1:df69fcc: 
1:df69fcc: 
1:df69fcc:     /**
1:df69fcc:      * Shutdown the NetworkServer
1:df69fcc:      */
1:df69fcc:     public void shutdown() {
1:df69fcc:         try {
1:df69fcc:             serverControl.shutdown();
1:df69fcc:         } catch (Exception e) {
1:df69fcc:             e.printStackTrace();
1:df69fcc:         }
1:df69fcc:     }
1:df69fcc: 
1:df69fcc: 
1:df69fcc: 	/**
1:df69fcc: 	 * Start Derby Network server
1:df69fcc: 	 * 
1:df69fcc: 	 */
1:df69fcc:     public void start() {
1:df69fcc:         try {
1:df69fcc: 			serverControl.start(pw);
1:df69fcc:         } catch (Exception e) {
1:df69fcc:             e.printStackTrace();
1:df69fcc:         }
1:df69fcc:     }
1:df69fcc: 
1:df69fcc: 
1:df69fcc: }
1:df69fcc: 
1:df69fcc: 
1:df69fcc: 
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:44e2455
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:df69fcc
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class nserverdemo.NetworkServerUtil
1: 
0:    Copyright 2003, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package nserverdemo;
1: 
1: import java.util.Properties;
1: import java.sql.SQLException;
1: import java.sql.DriverManager;
1: import java.io.IOException;
1: import java.sql.Statement;
1: import java.sql.ResultSet;
1: import java.sql.SQLException;
1: import java.sql.SQLWarning;
1: import java.io.PrintWriter;
1: import java.net.InetAddress;
1: 
1: import org.apache.derby.drda.NetworkServerControl; //derby network server
1: import java.io.FileOutputStream;
1: 
1: /**
1:  * Class for starting the Derby NetworkServer on a separate Thread.
1:  * This class provides methods to start, and shutdown the server
1:  */
1: 
1: public class NetworkServerUtil  {
1: 
1:     private int portNum;
1:     private NetworkServerControl serverControl;
1: 	private PrintWriter pw;
1: 
1:     public NetworkServerUtil(int port, PrintWriter pw) {
1: 
1:         this.portNum = port;
1: 		this.pw = pw;
1:         try {
1:           serverControl = new
1: 			  NetworkServerControl(InetAddress.getByName("localhost"), port);
1:           pw.println("Derby Network Server created");
1:         } catch (Exception e) {
1:             e.printStackTrace();
1:           }
1:     }
1: 
1:     /**
1:      * trace utility of server
1:      */
1:     public void trace(boolean onoff) {
1:       try {
1:         serverControl.trace(onoff);
1:       } catch (Exception e) {
1:           e.printStackTrace();
1:         }
1:     }
1: 
1: 
1: 	/**
1: 	 * Try to test for a connection
1: 	 * Throws exception if unable to get a connection
1: 	 */
1: 	public void testForConnection()
1: 	throws Exception {
1: 		serverControl.ping();
1: 	}
1: 
1: 
1:     /**
1:      * Shutdown the NetworkServer
1:      */
1:     public void shutdown() {
1:         try {
1:             serverControl.shutdown();
1:         } catch (Exception e) {
1:             e.printStackTrace();
1:         }
1:     }
1: 
1: 
1: 	/**
1: 	 * Start Derby Network server
1: 	 * 
1: 	 */
1:     public void start() {
1:         try {
1: 			serverControl.start(pw);
1:         } catch (Exception e) {
1:             e.printStackTrace();
1:         }
1:     }
1: 
1: 
1: }
1: 
1: 
1: 
commit:6f35451
/////////////////////////////////////////////////////////////////////////
0: 
0:    Derby - Class nserverdemo.NetworkServerUtil
0: 
0:    Copyright 2003, 2004 The Apache Software Foundation or its licensors, as applicable.
0: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
0: 
0:       http://www.apache.org/licenses/LICENSE-2.0
0: 
0:    Unless required by applicable law or agreed to in writing, software
0:    distributed under the License is distributed on an "AS IS" BASIS,
0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:    See the License for the specific language governing permissions and
0:    limitations under the License.
0: 
/////////////////////////////////////////////////////////////////////////
commit:67614ad
/////////////////////////////////////////////////////////////////////////
============================================================================