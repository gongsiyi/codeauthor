1:eac0369: /*
1:345de35: 
1:345de35:    Derby - Class org.apache.derby.impl.sql.execute.rts.RealHashLeftOuterJoinStatistics
1:345de35: 
1:0cc1b09:    Licensed to the Apache Software Foundation (ASF) under one or more
1:0cc1b09:    contributor license agreements.  See the NOTICE file distributed with
1:0cc1b09:    this work for additional information regarding copyright ownership.
1:0cc1b09:    The ASF licenses this file to you under the Apache License, Version 2.0
1:0cc1b09:    (the "License"); you may not use this file except in compliance with
1:0cc1b09:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.sql.execute.rts;
1:eac0369: 
1:5825332: import org.apache.derby.iapi.sql.execute.ResultSetStatistics;
1:48a9884: import org.apache.derby.catalog.UUID;
1:48a9884: import org.apache.derby.impl.sql.catalog.XPLAINResultSetDescriptor;
1:48a9884: import org.apache.derby.impl.sql.catalog.XPLAINResultSetTimingsDescriptor;
1:48a9884: import org.apache.derby.impl.sql.execute.xplain.XPLAINUtil;
1:48a9884: 
1:eac0369: import org.apache.derby.iapi.services.i18n.MessageService;
1:eac0369: import org.apache.derby.iapi.reference.SQLState;
1:eac0369: 
1:eac0369: 
2:eac0369: /**
1:eac0369:   ResultSetStatistics implemenation for HashLeftOuterJoinResultSet.
1:eac0369: 
1:eac0369: 
1:eac0369: */
1:eac0369: public class RealHashLeftOuterJoinStatistics 
1:eac0369: 	extends RealNestedLoopLeftOuterJoinStatistics
1:eac0369: {
1:eac0369: 
1:eac0369: 
1:eac0369: 	// CONSTRUCTORS
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	 * 
1:eac0369: 	 *
1:eac0369: 	 */
1:eac0369:     public	RealHashLeftOuterJoinStatistics(
1:eac0369: 								int numOpens,
1:eac0369: 								int rowsSeen,
1:eac0369: 								int rowsFiltered,
1:eac0369: 								long constructorTime,
1:eac0369: 								long openTime,
1:eac0369: 								long nextTime,
1:eac0369: 								long closeTime,
1:eac0369: 								int resultSetNumber,
1:eac0369: 								int rowsSeenLeft,
1:eac0369: 								int rowsSeenRight,
1:eac0369: 								int rowsReturned,
1:eac0369: 								long restrictionTime,
1:eac0369: 								double optimizerEstimatedRowCount,
1:eac0369: 								double optimizerEstimatedCost,
1:c7248d5: 								String userSuppliedOptimizerOverrides,
1:eac0369: 								ResultSetStatistics leftResultSetStatistics,
1:eac0369: 								ResultSetStatistics rightResultSetStatistics,
1:eac0369: 								int emptyRightRowsReturned
1:eac0369: 								)
1:eac0369: 	{
1:eac0369: 		super(
1:eac0369: 			numOpens,
1:eac0369: 			rowsSeen,
1:eac0369: 			rowsFiltered,
1:eac0369: 			constructorTime,
1:eac0369: 			openTime,
1:eac0369: 			nextTime,
1:eac0369: 			closeTime,
1:eac0369: 			resultSetNumber,
1:eac0369: 			rowsSeenLeft,
1:eac0369: 			rowsSeenRight,
1:eac0369: 			rowsReturned,
1:eac0369: 			restrictionTime,
1:eac0369: 			optimizerEstimatedRowCount,
1:eac0369: 			optimizerEstimatedCost,
1:c7248d5: 			userSuppliedOptimizerOverrides,
1:eac0369: 			leftResultSetStatistics,
1:eac0369: 			rightResultSetStatistics,
1:eac0369: 			emptyRightRowsReturned
1:eac0369: 			);
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	// ResultSetStatistics methods
1:eac0369: 
1:eac0369: 	// Class implementation
1:eac0369: 	protected void setNames()
1:eac0369: 	{
1:eac0369: 		nodeName = MessageService.getTextMessage(SQLState.RTS_HASH_LEFT_OJ);
1:eac0369: 		resultSetName =
1:eac0369: 			MessageService.getTextMessage(SQLState.RTS_HASH_LEFT_OJ_RS);
1:eac0369: 	}
1:48a9884:     public String getRSXplainType() { return XPLAINUtil.OP_JOIN_HASH_LO; }
1:48a9884:     public String getRSXplainDetails()
1:48a9884:     {
1:48a9884:         String op_details = "("+this.resultSetNumber + ")" +
1:48a9884:             this.resultSetName       + ", ";
1:48a9884: 
1:48a9884:         // check to see if this NL Join is part of an Exist clause
1:48a9884:         if (this.oneRowRightSide) op_details+= ", EXISTS JOIN";
1:48a9884:         return op_details;
1:48a9884:     }
1:48a9884:     public Object getResultSetDescriptor(Object rsID, Object parentID,
1:48a9884:             Object scanID, Object sortID, Object stmtID, Object timingID)
1:48a9884:     {
1:48a9884:         return new XPLAINResultSetDescriptor(
1:48a9884:            (UUID)rsID,
1:48a9884:            getRSXplainType(),
1:48a9884:            getRSXplainDetails(),
1:ce40a31:            this.numOpens,
1:48a9884:            null,                           // index updates
1:48a9884:            null,                           // lock mode
1:48a9884:            null,                           // lock granularity
1:48a9884:            (UUID)parentID,
1:ce40a31:            this.optimizerEstimatedRowCount,
1:ce40a31:            this.optimizerEstimatedCost,
1:48a9884:            null,                              // affected rows
1:48a9884:            null,                              // deferred rows
1:48a9884:            null,                              // the input rows
1:ce40a31:            this.rowsSeenLeft,
1:ce40a31:            this.rowsSeenRight,
1:ce40a31:            this.rowsFiltered,
1:ce40a31:            this.rowsReturned,
1:ce40a31:            this.emptyRightRowsReturned,
1:48a9884:            null,                           // index key optimization
1:48a9884:            (UUID)scanID,
1:48a9884:            (UUID)sortID,
1:48a9884:            (UUID)stmtID,
1:48a9884:            (UUID)timingID);
1:48a9884:     }
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:ce40a31
/////////////////////////////////////////////////////////////////////////
1:            this.numOpens,
1:            this.optimizerEstimatedRowCount,
1:            this.optimizerEstimatedCost,
1:            this.rowsSeenLeft,
1:            this.rowsSeenRight,
1:            this.rowsFiltered,
1:            this.rowsReturned,
1:            this.emptyRightRowsReturned,
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:5825332
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.sql.execute.ResultSetStatistics;
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:48a9884
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.catalog.UUID;
1: import org.apache.derby.impl.sql.catalog.XPLAINResultSetDescriptor;
1: import org.apache.derby.impl.sql.catalog.XPLAINResultSetTimingsDescriptor;
1: import org.apache.derby.impl.sql.execute.xplain.XPLAINUtil;
1: 
/////////////////////////////////////////////////////////////////////////
1:     public String getRSXplainType() { return XPLAINUtil.OP_JOIN_HASH_LO; }
1:     public String getRSXplainDetails()
1:     {
1:         String op_details = "("+this.resultSetNumber + ")" +
1:             this.resultSetName       + ", ";
1: 
1:         // check to see if this NL Join is part of an Exist clause
1:         if (this.oneRowRightSide) op_details+= ", EXISTS JOIN";
1:         return op_details;
1:     }
1:     public Object getResultSetDescriptor(Object rsID, Object parentID,
1:             Object scanID, Object sortID, Object stmtID, Object timingID)
1:     {
1:         return new XPLAINResultSetDescriptor(
1:            (UUID)rsID,
1:            getRSXplainType(),
1:            getRSXplainDetails(),
0:            new Integer(this.numOpens),
1:            null,                           // index updates
1:            null,                           // lock mode
1:            null,                           // lock granularity
1:            (UUID)parentID,
0:            new Double(this.optimizerEstimatedRowCount),
0:            new Double(this.optimizerEstimatedCost),
1:            null,                              // affected rows
1:            null,                              // deferred rows
1:            null,                              // the input rows
0:            new Integer(this.rowsSeenLeft),
0:            new Integer(this.rowsSeenRight),
0:            new Integer(this.rowsFiltered),
0:            new Integer(this.rowsReturned),
0:            new Integer(this.emptyRightRowsReturned),
1:            null,                           // index key optimization
1:            (UUID)scanID,
1:            (UUID)sortID,
1:            (UUID)stmtID,
1:            (UUID)timingID);
1:     }
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:David Van Couvering
-------------------------------------------------------------------------------
commit:0cc1b09
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:c7248d5
/////////////////////////////////////////////////////////////////////////
1: 								String userSuppliedOptimizerOverrides,
/////////////////////////////////////////////////////////////////////////
1: 			userSuppliedOptimizerOverrides,
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.sql.execute.rts.RealHashLeftOuterJoinStatistics
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:9e5097f
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.execute.rts
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.sql.execute.rts;
1: 
1: import org.apache.derby.iapi.services.i18n.MessageService;
1: import org.apache.derby.iapi.reference.SQLState;
1: 
1: 
1: /**
1:   ResultSetStatistics implemenation for HashLeftOuterJoinResultSet.
1: 
0:   @author jerry
1: 
1: */
1: public class RealHashLeftOuterJoinStatistics 
1: 	extends RealNestedLoopLeftOuterJoinStatistics
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 
1: 
1: 	// CONSTRUCTORS
1: 
1: 	/**
1: 	 * 
1: 	 *
1: 	 */
1:     public	RealHashLeftOuterJoinStatistics(
1: 								int numOpens,
1: 								int rowsSeen,
1: 								int rowsFiltered,
1: 								long constructorTime,
1: 								long openTime,
1: 								long nextTime,
1: 								long closeTime,
1: 								int resultSetNumber,
1: 								int rowsSeenLeft,
1: 								int rowsSeenRight,
1: 								int rowsReturned,
1: 								long restrictionTime,
1: 								double optimizerEstimatedRowCount,
1: 								double optimizerEstimatedCost,
1: 								ResultSetStatistics leftResultSetStatistics,
1: 								ResultSetStatistics rightResultSetStatistics,
1: 								int emptyRightRowsReturned
1: 								)
1: 	{
1: 		super(
1: 			numOpens,
1: 			rowsSeen,
1: 			rowsFiltered,
1: 			constructorTime,
1: 			openTime,
1: 			nextTime,
1: 			closeTime,
1: 			resultSetNumber,
1: 			rowsSeenLeft,
1: 			rowsSeenRight,
1: 			rowsReturned,
1: 			restrictionTime,
1: 			optimizerEstimatedRowCount,
1: 			optimizerEstimatedCost,
1: 			leftResultSetStatistics,
1: 			rightResultSetStatistics,
1: 			emptyRightRowsReturned
1: 			);
1: 	}
1: 
1: 	// ResultSetStatistics methods
1: 
1: 	// Class implementation
1: 	protected void setNames()
1: 	{
1: 		nodeName = MessageService.getTextMessage(SQLState.RTS_HASH_LEFT_OJ);
1: 		resultSetName =
1: 			MessageService.getTextMessage(SQLState.RTS_HASH_LEFT_OJ_RS);
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.execute.rts
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.sql.execute.rts;
0: 
0: import org.apache.derby.iapi.services.i18n.MessageService;
0: import org.apache.derby.iapi.reference.SQLState;
0: 
0: 
0: /**
0:   ResultSetStatistics implemenation for HashLeftOuterJoinResultSet.
0: 
0:   @author jerry
0: 
0: */
0: public class RealHashLeftOuterJoinStatistics 
0: 	extends RealNestedLoopLeftOuterJoinStatistics
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 
0: 
0: 	// CONSTRUCTORS
0: 
0: 	/**
0: 	 * 
0: 	 *
0: 	 */
0:     public	RealHashLeftOuterJoinStatistics(
0: 								int numOpens,
0: 								int rowsSeen,
0: 								int rowsFiltered,
0: 								long constructorTime,
0: 								long openTime,
0: 								long nextTime,
0: 								long closeTime,
0: 								int resultSetNumber,
0: 								int rowsSeenLeft,
0: 								int rowsSeenRight,
0: 								int rowsReturned,
0: 								long restrictionTime,
0: 								double optimizerEstimatedRowCount,
0: 								double optimizerEstimatedCost,
0: 								ResultSetStatistics leftResultSetStatistics,
0: 								ResultSetStatistics rightResultSetStatistics,
0: 								int emptyRightRowsReturned
0: 								)
0: 	{
0: 		super(
0: 			numOpens,
0: 			rowsSeen,
0: 			rowsFiltered,
0: 			constructorTime,
0: 			openTime,
0: 			nextTime,
0: 			closeTime,
0: 			resultSetNumber,
0: 			rowsSeenLeft,
0: 			rowsSeenRight,
0: 			rowsReturned,
0: 			restrictionTime,
0: 			optimizerEstimatedRowCount,
0: 			optimizerEstimatedCost,
0: 			leftResultSetStatistics,
0: 			rightResultSetStatistics,
0: 			emptyRightRowsReturned
0: 			);
0: 	}
0: 
0: 	// ResultSetStatistics methods
0: 
0: 	// Class implementation
0: 	protected void setNames()
0: 	{
0: 		nodeName = MessageService.getTextMessage(SQLState.RTS_HASH_LEFT_OJ);
0: 		resultSetName =
0: 			MessageService.getTextMessage(SQLState.RTS_HASH_LEFT_OJ_RS);
0: 	}
0: }
============================================================================