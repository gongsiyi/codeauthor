1:7ddacaa: /*
2:7ddacaa: 
1:7ddacaa:    Derby - Class org.apache.derbyTesting.functionTests.harness.procedure
1:7ddacaa: 
1:dff95a1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:dff95a1:    contributor license agreements.  See the NOTICE file distributed with
1:dff95a1:    this work for additional information regarding copyright ownership.
1:dff95a1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:dff95a1:    (the "License"); you may not use this file except in compliance with
1:dff95a1:    the License.  You may obtain a copy of the License at
1:7ddacaa: 
1:7ddacaa:       http://www.apache.org/licenses/LICENSE-2.0
1:7ddacaa: 
1:7ddacaa:    Unless required by applicable law or agreed to in writing, software
1:7ddacaa:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ddacaa:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ddacaa:    See the License for the specific language governing permissions and
1:7ddacaa:    limitations under the License.
1:7ddacaa: 
1:7ddacaa:  */
1:7ddacaa: 
1:7ddacaa: package org.apache.derbyTesting.functionTests.tests.store;
1:7ddacaa: 
1:7e51e9d: import org.apache.derby.shared.common.sanity.SanityManager;
1:7ddacaa: 
1:7ddacaa: import java.sql.CallableStatement;
1:7ddacaa: import java.sql.Connection;
1:7ddacaa: import java.sql.PreparedStatement;
1:7ddacaa: import java.sql.ResultSet;
1:7ddacaa: import java.sql.SQLException;
1:7ddacaa: import java.sql.Statement;
1:7ddacaa: 
1:7ddacaa: import org.apache.derby.tools.ij;
1:7ddacaa: 
1:7ddacaa: 
1:7ddacaa: public class dropcrash2 extends dropcrash
1:7ddacaa: {
1:7ddacaa:     boolean verbose = false;
1:7ddacaa: 
1:7ddacaa:     public dropcrash2()
1:7ddacaa:     {
1:7ddacaa:     }
1:7ddacaa:     
1:7ddacaa:     public void testList(Connection conn)
1:7ddacaa:         throws SQLException
1:7ddacaa:     {
1:7ddacaa:         // make sure after redo phase that all tables are consistent, without
1:7ddacaa:         // bug fix one of the tables will get a container not found exception.
1:7ddacaa:         beginTest(conn, "check consistency of all tables");
1:7ddacaa:         checkAllConsistency(conn);
1:7ddacaa:         endTest(conn, "check consistency of all tables");
1:7ddacaa:     }
1:7ddacaa: 
1:7ddacaa:     public static void main(String[] argv) 
1:7ddacaa:         throws Throwable
1:7ddacaa:     {
1:7ddacaa:         dropcrash2 test = new dropcrash2();
1:7ddacaa: 
1:7ddacaa:    		ij.getPropertyArg(argv); 
1:7ddacaa:         Connection conn = ij.startJBMS();
1:7ddacaa:         conn.setAutoCommit(false);
1:7ddacaa: 
1:7ddacaa:         try
1:7ddacaa:         {
1:7ddacaa:             test.testList(conn);
1:7ddacaa:         }
1:7ddacaa:         catch (SQLException sqle)
1:7ddacaa:         {
1:7ddacaa: 			org.apache.derby.tools.JDBCDisplayUtil.ShowSQLException(
1:7ddacaa:                 System.out, sqle);
1:7ddacaa: 			sqle.printStackTrace(System.out);
1:7ddacaa: 		}
1:7ddacaa:     }
1:7ddacaa: }
============================================================================
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:7e51e9d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.shared.common.sanity.SanityManager;
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:dff95a1
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:7ddacaa
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.harness.procedure
1: 
0:    Copyright 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.store;
1: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
1: 
1: import java.sql.CallableStatement;
1: import java.sql.Connection;
1: import java.sql.PreparedStatement;
1: import java.sql.ResultSet;
1: import java.sql.SQLException;
1: import java.sql.Statement;
1: 
1: import org.apache.derby.tools.ij;
1: 
1: 
1: public class dropcrash2 extends dropcrash
1: {
1:     boolean verbose = false;
1: 
1:     public dropcrash2()
1:     {
1:     }
1:     
1:     public void testList(Connection conn)
1:         throws SQLException
1:     {
1:         // make sure after redo phase that all tables are consistent, without
1:         // bug fix one of the tables will get a container not found exception.
1:         beginTest(conn, "check consistency of all tables");
1:         checkAllConsistency(conn);
1:         endTest(conn, "check consistency of all tables");
1:     }
1: 
1:     public static void main(String[] argv) 
1:         throws Throwable
1:     {
1:         dropcrash2 test = new dropcrash2();
1: 
1:    		ij.getPropertyArg(argv); 
1:         Connection conn = ij.startJBMS();
1:         conn.setAutoCommit(false);
1: 
1:         try
1:         {
1:             test.testList(conn);
1:         }
1:         catch (SQLException sqle)
1:         {
1: 			org.apache.derby.tools.JDBCDisplayUtil.ShowSQLException(
1:                 System.out, sqle);
1: 			sqle.printStackTrace(System.out);
1: 		}
1:     }
1: }
commit:8fa6064
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Derby - Class org.apache.derbyTesting.functionTests.harness.procedure
0: 
0:    Copyright 2005 The Apache Software Foundation or its licensors, as applicable.
0: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
0: 
0:       http://www.apache.org/licenses/LICENSE-2.0
0: 
0:    Unless required by applicable law or agreed to in writing, software
0:    distributed under the License is distributed on an "AS IS" BASIS,
0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:    See the License for the specific language governing permissions and
0:    limitations under the License.
0: 
0:  */
0: 
0: package org.apache.derbyTesting.functionTests.tests.store;
0: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: 
0: import java.sql.CallableStatement;
0: import java.sql.Connection;
0: import java.sql.PreparedStatement;
0: import java.sql.ResultSet;
0: import java.sql.SQLException;
0: import java.sql.Statement;
0: 
0: import org.apache.derby.tools.ij;
0: 
0: 
0: public class dropcrash2 extends dropcrash
0: {
0:     boolean verbose = false;
0: 
0:     public dropcrash2()
0:     {
0:     }
0:     
0:     public void testList(Connection conn)
0:         throws SQLException
0:     {
0:         // make sure after redo phase that all tables are consistent, without
0:         // bug fix one of the tables will get a container not found exception.
0:         beginTest(conn, "check consistency of all tables");
0:         checkAllConsistency(conn);
0:         endTest(conn, "check consistency of all tables");
0:     }
0: 
0:     public static void main(String[] argv) 
0:         throws Throwable
0:     {
0:         dropcrash2 test = new dropcrash2();
0: 
0:    		ij.getPropertyArg(argv); 
0:         Connection conn = ij.startJBMS();
0:         conn.setAutoCommit(false);
0: 
0:         try
0:         {
0:             test.testList(conn);
0:         }
0:         catch (SQLException sqle)
0:         {
0: 			org.apache.derby.tools.JDBCDisplayUtil.ShowSQLException(
0:                 System.out, sqle);
0: 			sqle.printStackTrace(System.out);
0: 		}
0:     }
0: }
============================================================================