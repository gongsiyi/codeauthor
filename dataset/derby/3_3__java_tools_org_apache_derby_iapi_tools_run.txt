4:ba0b3d0: /*
3:ba0b3d0: 
1:8750f31:    Derby - Class org.apache.derby.iapi.tools.run
1:ba0b3d0: 
1:3dc2ce4:    Licensed to the Apache Software Foundation (ASF) under one or more
1:3dc2ce4:    contributor license agreements.  See the NOTICE file distributed with
1:3dc2ce4:    this work for additional information regarding copyright ownership.
1:3dc2ce4:    The ASF licenses this file to You under the Apache License, Version 2.0
1:3dc2ce4:    (the "License"); you may not use this file except in compliance with
1:3dc2ce4:    the License.  You may obtain a copy of the License at
1:ba0b3d0: 
1:ba0b3d0:       http://www.apache.org/licenses/LICENSE-2.0
1:ba0b3d0: 
1:ba0b3d0:    Unless required by applicable law or agreed to in writing, software
1:ba0b3d0:    distributed under the License is distributed on an "AS IS" BASIS,
1:ba0b3d0:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ba0b3d0:    See the License for the specific language governing permissions and
1:ba0b3d0:    limitations under the License.
1:ba0b3d0: 
1:ba0b3d0:  */
1:ba0b3d0: 
1:429fb79: package org.apache.derby.iapi.tools;
1:ba0b3d0: 
1:ba0b3d0: import java.io.IOException;
1:f4fa6c2: 
1:8750f31: import org.apache.derby.drda.NetworkServerControl;
1:f4fa6c2: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1:f4fa6c2: import org.apache.derby.tools.PlanExporter;
1:f4fa6c2: import org.apache.derby.tools.SignatureChecker;
1:ba0b3d0: import org.apache.derby.tools.dblook;
1:ba0b3d0: import org.apache.derby.tools.ij;
1:ba0b3d0: import org.apache.derby.tools.sysinfo;
1:ba0b3d0: 
1:ba0b3d0: /**
1:50e065b:   <p>
1:ba0b3d0:   The run class facilitates running the various Derby utilities with the
1:ba0b3d0:   java -jar command. For example:
1:50e065b:   <p>
1:50e065b:   java -jar derbyrun.jar ij [-p propertiesfile] [sql script]<br>
1:50e065b:   java -jar derbyrun.jar sysinfo [-cp ...] [-cp help]<br>
1:50e065b:   java -jar derbyrun.jar dblook [args] (or no arguments for usage)<br>
1:50e065b:   java -jar derbyrun.jar server [args] (or no arguments for usage)<br>
1:8790bb4:   java -jar derbyrun.jar SignatureChecker [args] (or no arguments for usage)<br>
1:ba0b3d0: */
1:ba0b3d0: public class run {
1:ba0b3d0: 
1:ba0b3d0:   /**
1:ba0b3d0:   	 Switch on the first argument to choose the tool, pass the remaining
1:ba0b3d0:          arguments to the tool.
1:ba0b3d0:    */
1:ba0b3d0:   static public void main(String[] args) throws IOException {
1:ba0b3d0:       if (args.length < 1) {
1:ba0b3d0:           printUsage();
1:ba0b3d0:       } else if (args[0].equals("ij")) {
1:ba0b3d0:           ij.main(trimArgs(args));
1:ba0b3d0:       } else if (args[0].equals("sysinfo")) {
1:ba0b3d0:           sysinfo.main(trimArgs(args));
1:ba0b3d0:       } else if (args[0].equals("dblook")) {
1:ba0b3d0:           dblook.main(trimArgs(args));
1:50e065b:       } else if (args[0].equals("server")) {
1:8750f31:           NetworkServerControl.main(trimArgs(args));
1:8790bb4:       } else if (args[0].equals("SignatureChecker")) {
1:8790bb4:           SignatureChecker.main(trimArgs(args));
1:f4fa6c2:       } else if (args[0].equals("PlanExporter")) {
1:f4fa6c2:     	  PlanExporter.main(trimArgs(args));  
1:ba0b3d0:       } else printUsage();
1:ba0b3d0:   }
1:ba0b3d0: 
1:50e065b:   /**
1:ba0b3d0:        Private constructor. No instances allowed.
1:ba0b3d0:    */
1:ba0b3d0:   private run() { 
1:ba0b3d0:   }
1:ba0b3d0:   
1:50e065b:   /**
1:ba0b3d0:        Utility method to trim one element off of the argument array.
1:ba0b3d0:        @param args the arguments array
1:ba0b3d0:        @return trimmed the trimmed array
1:ba0b3d0:    */
1:ba0b3d0:   private static String[] trimArgs(String[] args)
1:ba0b3d0:   {
1:ba0b3d0:       String [] trimmed = new String[args.length - 1];
1:ba0b3d0:       System.arraycopy(args, 1, trimmed, 0, args.length - 1);
1:ba0b3d0:       return trimmed; 
1:ba0b3d0:   }
1:ba0b3d0: 
1:50e065b:   /**
1:ba0b3d0:        Print the usage statement if the user didn't enter a valid choice
1:ba0b3d0:        of tool.
1:ba0b3d0:    */
1:ba0b3d0:   public static void printUsage()
1:ba0b3d0:   {
1:ba0b3d0:       LocalizedResource locRes = LocalizedResource.getInstance();
1:ba0b3d0:       System.err.println(locRes.getTextMessage("RUN_Usage"));
1:ba0b3d0:   }
1:ba0b3d0: }
============================================================================
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:f4fa6c2
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1: import org.apache.derby.tools.PlanExporter;
1: import org.apache.derby.tools.SignatureChecker;
/////////////////////////////////////////////////////////////////////////
1:       } else if (args[0].equals("PlanExporter")) {
1:     	  PlanExporter.main(trimArgs(args));  
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:8790bb4
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.tools.SignatureChecker;
/////////////////////////////////////////////////////////////////////////
1:   java -jar derbyrun.jar SignatureChecker [args] (or no arguments for usage)<br>
/////////////////////////////////////////////////////////////////////////
1:       } else if (args[0].equals("SignatureChecker")) {
1:           SignatureChecker.main(trimArgs(args));
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:3dc2ce4
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:50e065b
/////////////////////////////////////////////////////////////////////////
1:   <p>
1:   <p>
1:   java -jar derbyrun.jar ij [-p propertiesfile] [sql script]<br>
1:   java -jar derbyrun.jar sysinfo [-cp ...] [-cp help]<br>
1:   java -jar derbyrun.jar dblook [args] (or no arguments for usage)<br>
1:   java -jar derbyrun.jar server [args] (or no arguments for usage)<br>
/////////////////////////////////////////////////////////////////////////
1:       } else if (args[0].equals("server")) {
1:   /**
1:   /**
/////////////////////////////////////////////////////////////////////////
1:   /**
commit:8750f31
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.tools.run
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.drda.NetworkServerControl;
/////////////////////////////////////////////////////////////////////////
0:   java -jar derbyrun.jar ij
0:   java -jar derbyrun.jar sysinfo
0:   java -jar derbyrun.jar dblook
0:   java -jar derbyrun.jar NetworkServerControl
/////////////////////////////////////////////////////////////////////////
0:       } else if (args[0].equals("NetworkServerControl")) {
1:           NetworkServerControl.main(trimArgs(args));
commit:429fb79
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derby.iapi.tools;
commit:ba0b3d0
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Derby - Class org.apache.derby.tools.iapi.run
1: 
0:    Copyright 2006 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
0: package org.apache.derby.tools.iapi;
1: 
1: import java.io.IOException;
1: import org.apache.derby.tools.dblook;
1: import org.apache.derby.tools.ij;
1: import org.apache.derby.tools.sysinfo;
0: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1: 
1: /**
1:   The run class facilitates running the various Derby utilities with the
1:   java -jar command. For example:
1: 
0:   java -jar derbytools.jar ij
0:   java -jar derbytools.jar sysinfo
0:   java -jar derbytools.jar dblook
1: */
1: public class run {
1: 
1:   /**
1:   	 Switch on the first argument to choose the tool, pass the remaining
1:          arguments to the tool.
1:    */
1:   static public void main(String[] args) throws IOException {
1:       if (args.length < 1) {
1:           printUsage();
1:       } else if (args[0].equals("ij")) {
1:           ij.main(trimArgs(args));
1:       } else if (args[0].equals("sysinfo")) {
1:           sysinfo.main(trimArgs(args));
1:       } else if (args[0].equals("dblook")) {
1:           dblook.main(trimArgs(args));
1:       } else printUsage();
1:   }
1: 
1:   /*
1:        Private constructor. No instances allowed.
1:    */
1:   private run() { 
1:   }
1:   
1:   /*
1:        Utility method to trim one element off of the argument array.
1:        @param args the arguments array
1:        @return trimmed the trimmed array
1:    */
1:   private static String[] trimArgs(String[] args)
1:   {
1:       String [] trimmed = new String[args.length - 1];
1:       System.arraycopy(args, 1, trimmed, 0, args.length - 1);
1:       return trimmed; 
1:   }
1: 
1:   /*
1:        Print the usage statement if the user didn't enter a valid choice
1:        of tool.
1:    */
1:   public static void printUsage()
1:   {
1:       LocalizedResource locRes = LocalizedResource.getInstance();
1:       System.err.println(locRes.getTextMessage("RUN_Usage"));
1:   }
1: }
============================================================================