1:73d724c: /*
11:73d724c: 
1:73d724c:    Derby - Class SimpleApp
1:73d724c: 
1:44e2455:    Licensed to the Apache Software Foundation (ASF) under one or more
1:44e2455:    contributor license agreements.  See the NOTICE file distributed with
1:44e2455:    this work for additional information regarding copyright ownership.
1:44e2455:    The ASF licenses this file to You under the Apache License, Version 2.0
1:44e2455:    (the "License"); you may not use this file except in compliance with
1:44e2455:    the License.  You may obtain a copy of the License at
1:73d724c: 
1:73d724c:       http://www.apache.org/licenses/LICENSE-2.0
1:73d724c: 
1:73d724c:    Unless required by applicable law or agreed to in writing, software
1:73d724c:    distributed under the License is distributed on an "AS IS" BASIS,
1:73d724c:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:73d724c:    See the License for the specific language governing permissions and
1:73d724c:    limitations under the License.
1:73d724c: 
1:73d724c:  */
1:73d724c: 
1:73d724c: package toursdb;
1:73d724c: 
1:73d724c: import java.io.File;
1:73d724c: import java.io.FileInputStream;
1:9f04bd3: import java.io.FileNotFoundException;
1:9f04bd3: import java.io.IOException;
1:73d724c: import java.io.InputStream;
1:73d724c: import java.sql.PreparedStatement;
1:73d724c: import java.sql.Connection;
1:73d724c: import java.sql.DriverManager;
1:73d724c: import java.math.BigDecimal;
1:73d724c: import java.sql.Clob;
1:73d724c: import java.sql.SQLException;
1:73d724c: 
1:73d724c: 
1:73d724c: public class insertMaps {
1:73d724c: 
1:73d724c: 	public static final String CSdriver = new String("org.apache.derby.jdbc.EmbeddedDriver");
1:04c92ef: 	public static final String dbURLCS = new String("jdbc:derby:toursdb");
1:73d724c: 
1:73d724c: 	public static void main(String[] args) throws Exception {
1:73d724c: 
1:04c92ef: 		System.out.println("Loading the Derby jdbc driver...");
1:4469400:         Class<?> clazz = Class.forName(CSdriver);
1:4469400:         clazz.getConstructor().newInstance();
1:73d724c: 	
1:04c92ef: 		System.out.println("Getting Derby database connection...");
1:04c92ef: 		Connection connCS = DriverManager.getConnection(dbURLCS);
1:04c92ef: 		System.out.println("Successfully got the Derby database connection...");
1:73d724c: 
1:04c92ef: 		System.out.println("Inserted " + insertRows(null, connCS) +
1:04c92ef: 						   " rows into the ToursDB");
1:73d724c: 
1:04c92ef: 		connCS.close();
1:0216b53: 
1:0216b53: 		// Shut down the database cleanly before exiting.
1:0216b53: 		try {
1:0216b53: 			DriverManager.getConnection(dbURLCS + ";shutdown=true");
1:0216b53: 		} catch (SQLException sqle) {
1:0216b53: 			// Database shutdown is expected to raise SQLState 08006.
1:0216b53: 			// Report any other exception.
1:0216b53: 			if (!"08006".equals(sqle.getSQLState())) {
1:0216b53: 				throw sqle;
1:0216b53: 			}
1:0216b53: 		}
2:73d724c: 	}
1:9f04bd3: 	
1:9f04bd3: 	public static int insertRows(String path, Connection conn) 
1:9f04bd3: 	throws SQLException, FileNotFoundException, IOException {
1:9f04bd3: 		PreparedStatement ps = null;
1:9f04bd3: 
1:9f04bd3: 		ps = conn.prepareStatement
1:9f04bd3: 		("insert into maps (map_name, region, area, photo_format, picture) values (?,?,?,?,?)");
1:9f04bd3: 
1:a5c9ae8: 		ps.setString(1,"North Ocean");
1:a5c9ae8: 		ps.setString(2,"Cup Island");
1:9f04bd3: 		ps.setBigDecimal(3, new BigDecimal("1776.11"));
1:9f04bd3: 		ps.setString(4,"gif");
1:9f04bd3: 		String fileName;
1:9f04bd3: 		if (path == null)
1:a5c9ae8: 			fileName="cupisle.gif";
1:9f04bd3: 		else
1:a5c9ae8: 			fileName=path + File.separator + "cupisle.gif";
1:9f04bd3: 		File file = new File (fileName);
1:9f04bd3: 		InputStream fileIn = new FileInputStream(file);
1:9f04bd3: 		ps.setBinaryStream(5, fileIn, (int)file.length());
1:9f04bd3: 		int numrows = ps.executeUpdate();
1:9f04bd3: 		fileIn.close();
1:9f04bd3: 
1:a5c9ae8: 		ps.setString(1,"Middle Ocean");
1:a5c9ae8: 		ps.setString(2,"Small Island");
1:9f04bd3: 		ps.setBigDecimal(3, new BigDecimal("1166.77"));
1:9f04bd3: 		ps.setString(4,"gif");
1:9f04bd3: 		if (path == null)
1:a5c9ae8: 			fileName="smallisle.gif";
1:9f04bd3: 		else
1:a5c9ae8: 			fileName=path + File.separator + "smallisle.gif";
1:9f04bd3: 		file = new File (fileName);
1:9f04bd3: 		fileIn = new FileInputStream(file);
1:9f04bd3: 		ps.setBinaryStream(5, fileIn, (int)file.length());
1:9f04bd3: 		numrows = numrows + ps.executeUpdate();
1:9f04bd3: 		fileIn.close();
1:9f04bd3: 
1:a5c9ae8: 		ps.setString(1,"South Ocean");
1:a5c9ae8: 		ps.setString(2,"Witch Island");
1:9f04bd3: 		ps.setBigDecimal(3, new BigDecimal("9117.90"));
1:9f04bd3: 		ps.setString(4,"gif");
1:9f04bd3: 		if (path == null)
1:a5c9ae8: 			fileName="witchisle.gif";
1:9f04bd3: 		else
1:a5c9ae8: 			fileName=path + File.separator + "witchisle.gif";
1:9f04bd3: 		file = new File (fileName);
1:9f04bd3: 		fileIn = new FileInputStream(file);
1:9f04bd3: 		ps.setBinaryStream(5, fileIn, (int)file.length());
1:9f04bd3: 		numrows = numrows + ps.executeUpdate();
1:9f04bd3: 
1:9f04bd3: 		fileIn.close();
1:9f04bd3: 		ps.close();
1:9f04bd3: 		
1:9f04bd3: 		return numrows;
1:9f04bd3: 	}
1:73d724c: 
1:73d724c: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4469400
/////////////////////////////////////////////////////////////////////////
1:         Class<?> clazz = Class.forName(CSdriver);
1:         clazz.getConstructor().newInstance();
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:0216b53
/////////////////////////////////////////////////////////////////////////
1: 
1: 		// Shut down the database cleanly before exiting.
1: 		try {
1: 			DriverManager.getConnection(dbURLCS + ";shutdown=true");
1: 		} catch (SQLException sqle) {
1: 			// Database shutdown is expected to raise SQLState 08006.
1: 			// Report any other exception.
1: 			if (!"08006".equals(sqle.getSQLState())) {
1: 				throw sqle;
1: 			}
1: 		}
commit:04c92ef
/////////////////////////////////////////////////////////////////////////
1: 	public static final String dbURLCS = new String("jdbc:derby:toursdb");
1: 		System.out.println("Loading the Derby jdbc driver...");
0: 		Class.forName(CSdriver).newInstance();
1: 		System.out.println("Getting Derby database connection...");
1: 		Connection connCS = DriverManager.getConnection(dbURLCS);
1: 		System.out.println("Successfully got the Derby database connection...");
1: 		System.out.println("Inserted " + insertRows(null, connCS) +
1: 						   " rows into the ToursDB");
1: 		connCS.close();
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:a5c9ae8
/////////////////////////////////////////////////////////////////////////
1: 		ps.setString(1,"North Ocean");
1: 		ps.setString(2,"Cup Island");
1: 			fileName="cupisle.gif";
1: 			fileName=path + File.separator + "cupisle.gif";
1: 		ps.setString(1,"Middle Ocean");
1: 		ps.setString(2,"Small Island");
1: 			fileName="smallisle.gif";
1: 			fileName=path + File.separator + "smallisle.gif";
1: 		ps.setString(1,"South Ocean");
1: 		ps.setString(2,"Witch Island");
1: 			fileName="witchisle.gif";
1: 			fileName=path + File.separator + "witchisle.gif";
commit:9f04bd3
/////////////////////////////////////////////////////////////////////////
1: import java.io.FileNotFoundException;
1: import java.io.IOException;
/////////////////////////////////////////////////////////////////////////
0: 			System.out.println("Inserted " + insertRows(null,connCS) + " rows into the ToursDB");
/////////////////////////////////////////////////////////////////////////
1: 	
1: 	public static int insertRows(String path, Connection conn) 
1: 	throws SQLException, FileNotFoundException, IOException {
1: 		PreparedStatement ps = null;
1: 
1: 		ps = conn.prepareStatement
1: 		("insert into maps (map_name, region, area, photo_format, picture) values (?,?,?,?,?)");
1: 
0: 		ps.setString(1,"BART");
0: 		ps.setString(2,"Bay Area");
1: 		ps.setBigDecimal(3, new BigDecimal("1776.11"));
1: 		ps.setString(4,"gif");
1: 		String fileName;
1: 		if (path == null)
0: 			fileName="BART.gif";
1: 		else
0: 			fileName=path + File.separator + "BART.gif";
1: 		File file = new File (fileName);
1: 		InputStream fileIn = new FileInputStream(file);
1: 		ps.setBinaryStream(5, fileIn, (int)file.length());
1: 		int numrows = ps.executeUpdate();
1: 		fileIn.close();
1: 
0: 		ps.setString(1,"Caltrain");
0: 		ps.setString(2,"West Bay");
1: 		ps.setBigDecimal(3, new BigDecimal("1166.77"));
1: 		ps.setString(4,"gif");
1: 		if (path == null)
0: 			fileName="Caltrain.gif";
1: 		else
0: 			fileName=path + File.separator + "Caltrain.gif";
1: 		file = new File (fileName);
1: 		fileIn = new FileInputStream(file);
1: 		ps.setBinaryStream(5, fileIn, (int)file.length());
1: 		numrows = numrows + ps.executeUpdate();
1: 		fileIn.close();
1: 
0: 		ps.setString(1,"Light Rail");
0: 		ps.setString(2,"Santa Clara Valley");
1: 		ps.setBigDecimal(3, new BigDecimal("9117.90"));
1: 		ps.setString(4,"gif");
0: 		// To insert LightRail.gif would give an error because that BLOB
0: 		// is larger than the size indicated for the column.
0: 		// But we don't want to make toursDB bigger in the distribution
1: 		if (path == null)
0: 			fileName="BART.gif";
1: 		else
0: 			fileName=path + File.separator + "BART.gif";
1: 		file = new File (fileName);
1: 		fileIn = new FileInputStream(file);
1: 		ps.setBinaryStream(5, fileIn, (int)file.length());
1: 		numrows = numrows + ps.executeUpdate();
1: 
1: 		fileIn.close();
1: 		ps.close();
1: 		
1: 		return numrows;
1: 	}
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:27ff169
/////////////////////////////////////////////////////////////////////////
0: 			System.out.println("Loading the Derby jdbc driver...");
0: 			System.out.println("Getting Derby database connection...");
0: 			System.out.println("Successfully got the Derby database connection...");
commit:44e2455
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:73d724c
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class SimpleApp
1: 
0:    Copyright 2001, 2006 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package toursdb;
1: 
1: import java.io.File;
1: import java.io.FileInputStream;
1: import java.io.InputStream;
1: import java.sql.PreparedStatement;
1: import java.sql.Connection;
1: import java.sql.DriverManager;
1: import java.math.BigDecimal;
1: import java.sql.Clob;
1: import java.sql.SQLException;
1: 
1: 
1: public class insertMaps {
1: 
1: 	public static final String CSdriver = new String("org.apache.derby.jdbc.EmbeddedDriver");
0: 	public static final String dbURLCS = new String("jdbc:derby:toursDB");
1: 
1: 	public static void main(String[] args) throws Exception {
1: 
0: 		try {
0: 			Connection connCS = null;
1: 
0: 			System.out.println("Loading the Cloudscape jdbc driver...");
0: 			Class.forName(CSdriver).newInstance();
1: 	
0: 			System.out.println("Getting Cloudscape database connection...");
0: 			connCS = DriverManager.getConnection(dbURLCS);
0: 			System.out.println("Successfully got the Cloudscape database connection...");
1: 
0: 			PreparedStatement ps = null;
1: 
0: 			ps = connCS.prepareStatement
0: 			("insert into maps (map_name, region, area, photo_format, picture) values (?,?,?,?,?)");
1: 	
0: 			ps.setString(1,"BART");
0: 			ps.setString(2,"Bay Area");
0: 			ps.setBigDecimal(3, new BigDecimal("1776.11"));
0: 			ps.setString(4,"gif");
0: 			File file = new File ("BART.gif");
0: 			InputStream fileIn = new FileInputStream(file);
0: 			ps.setBinaryStream(5, fileIn, (int)file.length());
0: 			int numrows = ps.executeUpdate();
1: 
0: 			ps.setString(1,"Caltrain");
0: 			ps.setString(2,"West Bay");
0: 			ps.setBigDecimal(3, new BigDecimal("1166.77"));
0: 			ps.setString(4,"gif");
0: 			file = new File ("Caltrain.gif");
0: 			fileIn = new FileInputStream(file);
0: 			ps.setBinaryStream(5, fileIn, (int)file.length());
0: 			numrows = numrows + ps.executeUpdate();
1: 
0: 			ps.setString(1,"Light Rail");
0: 			ps.setString(2,"Santa Clara Valley");
0: 			ps.setBigDecimal(3, new BigDecimal("9117.90"));
0: 			ps.setString(4,"gif");
0: 			file = new File ("BART.gif");
0: 			fileIn = new FileInputStream(file);
0: 			ps.setBinaryStream(5, fileIn, (int)file.length());
0: 			numrows = numrows + ps.executeUpdate();
1: 
0: 			System.out.println("Inserted " + numrows + " rows into the ToursDB");
1: 
0: 			ps.close();
1: 	
0: 			connCS.close();
1: 
0: 		} catch (SQLException e) {
0: 			System.out.println ("FAIL -- unexpected exception: " + e.toString());
0: 			e.printStackTrace();
0: 		} catch (Exception e) {
0: 			System.out.println ("FAIL -- unexpected exception: " + e.toString());
0: 			e.printStackTrace();
1: 		}
1: 
1: 	}
1: 
1: }
============================================================================