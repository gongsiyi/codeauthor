1:9a428e4: /*
1:9a428e4: 
1:9a428e4:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.ReferentialActionsTest
1:9a428e4: 
1:9a428e4:    Licensed to the Apache Software Foundation (ASF) under one or more
1:9a428e4:    contributor license agreements.  See the NOTICE file distributed with
1:9a428e4:    this work for additional information regarding copyright ownership.
1:9a428e4:    The ASF licenses this file to you under the Apache License, Version 2.0
1:9a428e4:    (the "License"); you may not use this file except in compliance with
1:9a428e4:    the License.  You may obtain a copy of the License at
1:9a428e4: 
1:9a428e4:      http://www.apache.org/licenses/LICENSE-2.0
1:9a428e4: 
1:9a428e4:    Unless required by applicable law or agreed to in writing, software
1:9a428e4:    distributed under the License is distributed on an "AS IS" BASIS,
1:9a428e4:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9a428e4:    See the License for the specific language governing permissions and
1:9a428e4:    limitations under the License.
1:9a428e4: 
1:9a428e4:  */
1:9a428e4: 
1:9a428e4: package org.apache.derbyTesting.functionTests.tests.lang;
1:9a428e4: 
1:9a428e4: import java.sql.SQLException;
1:9a428e4: import java.sql.Statement;
1:9a428e4: import junit.framework.Test;
1:9a428e4: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:9a428e4: import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
1:9a428e4: 
1:9a428e4: /**
1:9a428e4:  * This class tests SQL referential actions.
1:9a428e4:  */
1:9a428e4: public class ReferentialActionsTest extends BaseJDBCTestCase {
1:9a428e4: 
1:9a428e4:     public ReferentialActionsTest(String name) {
1:9a428e4:         super(name);
1:9a428e4:     }
1:9a428e4: 
1:9a428e4:     public static Test suite() {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("ReferentialActionsTest");
1:9a428e4: 
1:9a428e4:         // DERBY-2353: Need to set derby.language.logQueryPlan to expose the
1:9a428e4:         // bug (got a NullPointerException when writing the plan to derby.log)
1:9a428e4:         suite.addTest(DatabasePropertyTestSetup.singleProperty(
1:9a428e4:                 new ReferentialActionsTest("onDeleteCascadeWithLogQueryPlan"),
1:9a428e4:                 "derby.language.logQueryPlan", "true", true));
1:9a428e4: 
1:9a428e4:         return suite;
1:9a428e4:     }
1:9a428e4: 
1:9a428e4:     /**
1:9a428e4:      * Test that cascading delete works when derby.language.logQueryPlan is
1:9a428e4:      * set to true - DERBY-2353.
1:9a428e4:      */
1:9a428e4:     public void onDeleteCascadeWithLogQueryPlan() throws SQLException {
1:9a428e4:         setAutoCommit(false);
1:9a428e4:         Statement s = createStatement();
1:9a428e4:         s.execute("create table a (a1 int primary key)");
1:9a428e4:         s.execute("insert into a values 1");
1:9a428e4:         s.execute("create table b (b1 int references a on delete cascade)");
1:9a428e4:         s.execute("insert into b values 1");
1:9a428e4:         // The next line used to cause a NullPointerException
1:9a428e4:         s.execute("delete from a");
1:9a428e4:     }
1:9a428e4: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("ReferentialActionsTest");
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:9a428e4
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.ReferentialActionsTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:      http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.SQLException;
1: import java.sql.Statement;
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
1: 
1: /**
1:  * This class tests SQL referential actions.
1:  */
1: public class ReferentialActionsTest extends BaseJDBCTestCase {
1: 
1:     public ReferentialActionsTest(String name) {
1:         super(name);
1:     }
1: 
1:     public static Test suite() {
0:         TestSuite suite = new TestSuite("ReferentialActionsTest");
1: 
1:         // DERBY-2353: Need to set derby.language.logQueryPlan to expose the
1:         // bug (got a NullPointerException when writing the plan to derby.log)
1:         suite.addTest(DatabasePropertyTestSetup.singleProperty(
1:                 new ReferentialActionsTest("onDeleteCascadeWithLogQueryPlan"),
1:                 "derby.language.logQueryPlan", "true", true));
1: 
1:         return suite;
1:     }
1: 
1:     /**
1:      * Test that cascading delete works when derby.language.logQueryPlan is
1:      * set to true - DERBY-2353.
1:      */
1:     public void onDeleteCascadeWithLogQueryPlan() throws SQLException {
1:         setAutoCommit(false);
1:         Statement s = createStatement();
1:         s.execute("create table a (a1 int primary key)");
1:         s.execute("insert into a values 1");
1:         s.execute("create table b (b1 int references a on delete cascade)");
1:         s.execute("insert into b values 1");
1:         // The next line used to cause a NullPointerException
1:         s.execute("delete from a");
1:     }
1: }
============================================================================