1:184189f: /*
1:184189f: 
1:184189f:    Derby - Class org.apache.derbyTesting.functionTests.tests.management.JMXTest
1:184189f: 
1:184189f:    Licensed to the Apache Software Foundation (ASF) under one or more
1:184189f:    contributor license agreements.  See the NOTICE file distributed with
1:184189f:    this work for additional information regarding copyright ownership.
1:184189f:    The ASF licenses this file to you under the Apache License, Version 2.0
1:184189f:    (the "License"); you may not use this file except in compliance with
1:184189f:    the License.  You may obtain a copy of the License at
1:184189f: 
1:184189f:       http://www.apache.org/licenses/LICENSE-2.0
1:184189f: 
1:184189f:    Unless required by applicable law or agreed to in writing, software
1:184189f:    distributed under the License is distributed on an "AS IS" BASIS,
1:184189f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:184189f:    See the License for the specific language governing permissions and
1:184189f:    limitations under the License.
1:184189f: 
1:184189f:  */
1:184189f: 
1:184189f: package org.apache.derbyTesting.functionTests.tests.management;
1:184189f: 
1:e8b3bd1: import java.io.IOException;
1:e8b3bd1: import java.security.AccessController;
1:e8b3bd1: import java.security.PrivilegedExceptionAction;
1:184189f: import java.util.Set;
1:184189f: 
1:e8b3bd1: import javax.management.InstanceNotFoundException;
1:e8b3bd1: import javax.management.IntrospectionException;
1:184189f: import javax.management.MBeanInfo;
1:184189f: import javax.management.MBeanServerConnection;
1:184189f: import javax.management.ObjectName;
1:e8b3bd1: import javax.management.ReflectionException;
1:184189f: 
1:184189f: import junit.framework.Test;
1:184189f: 
1:184189f: 
1:184189f: /**
1:184189f:  * Tests against the general JMX management provided by Derby
1:184189f:  * instead of tests against a specific MBean,
1:184189f:  */
1:184189f: public class JMXTest extends MBeanTest {
1:184189f:     
1:184189f:     public JMXTest(String name) {
1:184189f:         super(name);
1:184189f:     }
1:184189f:     
1:184189f:     public static Test suite() {
1:184189f:         
1:184189f:         return MBeanTest.suite(JMXTest.class, 
1:ffd9cf9:                                         "JMXTest");
1:184189f:     }
1:184189f:     
1:184189f:     /**
1:184189f:      * Test that all MBeans registered by Derby have:
1:184189f:      * <UL>
1:184189f:      * <LI> A type key property correct set.
1:184189f:      * <LI> Expose a class name in org.apache.derby.mbeans.
1:184189f:      * </UL>
1:184189f:      * @throws Exception
1:184189f:      */
1:184189f:     public void testDerbyRegisteredMBeansSimpleInfo() throws Exception
1:184189f:     {        
1:184189f:         Set<ObjectName> derbyMBeans = getDerbyDomainMBeans();
1:007d9ee:         
1:3522c2e:         // We expect Derby to have registered MBeans
1:3522c2e:         // including a management MBean and the one registered
1:3522c2e:         // by our setUp method.
1:3522c2e:         assertTrue("Derby MBEan count:" + derbyMBeans.size(),
1:3522c2e:                 derbyMBeans.size() >= 2);
1:184189f:         
1:e8b3bd1:         final MBeanServerConnection jmx = getMBeanServerConnection();
1:e8b3bd1:         for (final ObjectName name : derbyMBeans)
1:184189f:         {
1:184189f:             String type = name.getKeyProperty("type");
1:184189f:             // Every Derby MBean has a type.
1:184189f:             assertNotNull(type);
1:184189f:             
1:e8b3bd1:             MBeanInfo mbeanInfo = AccessController.doPrivileged(
1:e8b3bd1:                     new PrivilegedExceptionAction<MBeanInfo>() {
1:e8b3bd1:                         public MBeanInfo run() throws InstanceNotFoundException, IntrospectionException, ReflectionException, IOException {
1:e8b3bd1:                             return jmx.getMBeanInfo(name);
1:e8b3bd1:                        }   
1:e8b3bd1:                     }
1:e8b3bd1:                 );
1:184189f:             
1:184189f:             String mbeanClassName = mbeanInfo.getClassName();
1:184189f:             // Is the class name in the public api
1:184189f:             assertTrue(mbeanClassName.startsWith("org.apache.derby.mbeans."));
1:184189f:             
1:9f69067:             // See if it was the application created ManagementMBean
1:9f69067:             // This will have the implementation class registered
1:9f69067:             // as the class name since it is not registered by Derby.
1:9f69067:             if ("Management".equals(type)
1:9f69067:                     && "org.apache.derby.mbeans.Management".equals(mbeanClassName))
1:9f69067:             {
1:9f69067:                 continue;
1:9f69067:             }
1:9f69067:                     
1:184189f:             // and is a Derby specific MBean.
1:184189f:             assertTrue(mbeanClassName.endsWith("MBean"));
1:184189f:             
1:184189f:             // Check the type is the class name of the MBean without
1:184189f:             // the MBean and the package.
1:184189f:             String scn = mbeanClassName.substring(mbeanClassName.lastIndexOf('.') + 1);         
1:184189f:             scn = scn.substring(0, scn.length() - "MBean".length());
1:184189f:             assertEquals(scn, type);
1:184189f:         }
1:184189f:     }
1:184189f: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:e8b3bd1
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1: import java.security.AccessController;
1: import java.security.PrivilegedExceptionAction;
1: import javax.management.InstanceNotFoundException;
1: import javax.management.IntrospectionException;
1: import javax.management.ReflectionException;
/////////////////////////////////////////////////////////////////////////
1:         final MBeanServerConnection jmx = getMBeanServerConnection();
1:         for (final ObjectName name : derbyMBeans)
1:             MBeanInfo mbeanInfo = AccessController.doPrivileged(
1:                     new PrivilegedExceptionAction<MBeanInfo>() {
1:                         public MBeanInfo run() throws InstanceNotFoundException, IntrospectionException, ReflectionException, IOException {
1:                             return jmx.getMBeanInfo(name);
1:                        }   
1:                     }
1:                 );
commit:3522c2e
/////////////////////////////////////////////////////////////////////////
1:         // We expect Derby to have registered MBeans
1:         // including a management MBean and the one registered
1:         // by our setUp method.
1:         assertTrue("Derby MBEan count:" + derbyMBeans.size(),
1:                 derbyMBeans.size() >= 2);
commit:007d9ee
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         // We expect Derby to have registered MBeans.
0:         assertTrue(derbyMBeans.size() > 0);
1:         
commit:9f69067
/////////////////////////////////////////////////////////////////////////
0: import java.net.URL;
0: import java.net.URLClassLoader;
0: import java.sql.SQLException;
0: import javax.sql.DataSource;
/////////////////////////////////////////////////////////////////////////
1:             // See if it was the application created ManagementMBean
1:             // This will have the implementation class registered
1:             // as the class name since it is not registered by Derby.
1:             if ("Management".equals(type)
1:                     && "org.apache.derby.mbeans.Management".equals(mbeanClassName))
1:             {
1:                 continue;
1:             }
1:                     
commit:ffd9cf9
/////////////////////////////////////////////////////////////////////////
1:                                         "JMXTest");
commit:184189f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.management.JMXTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.management;
1: 
1: import java.util.Set;
1: 
1: import javax.management.MBeanInfo;
1: import javax.management.MBeanServerConnection;
1: import javax.management.ObjectName;
1: 
1: import junit.framework.Test;
1: 
1: 
1: /**
1:  * Tests against the general JMX management provided by Derby
1:  * instead of tests against a specific MBean,
1:  */
1: public class JMXTest extends MBeanTest {
1:     
1:     public JMXTest(String name) {
1:         super(name);
1:     }
1:     
1:     public static Test suite() {
1:         
1:         return MBeanTest.suite(JMXTest.class, 
0:                                         "JMXTest:client");
1:     }
1:     
1:     /**
1:      * Test that all MBeans registered by Derby have:
1:      * <UL>
1:      * <LI> A type key property correct set.
1:      * <LI> Expose a class name in org.apache.derby.mbeans.
1:      * </UL>
1:      * @throws Exception
1:      */
1:     public void testDerbyRegisteredMBeansSimpleInfo() throws Exception
1:     {        
1:         Set<ObjectName> derbyMBeans = getDerbyDomainMBeans();
1:         
0:         MBeanServerConnection jmx = getMBeanServerConnection();
0:         for (ObjectName name : derbyMBeans)
1:         {
1:             String type = name.getKeyProperty("type");
1:             // Every Derby MBean has a type.
1:             assertNotNull(type);
1:             
0:             MBeanInfo mbeanInfo = jmx.getMBeanInfo(name);
1:             
1:             String mbeanClassName = mbeanInfo.getClassName();
1:             // Is the class name in the public api
1:             assertTrue(mbeanClassName.startsWith("org.apache.derby.mbeans."));
1:             
1:             // and is a Derby specific MBean.
1:             assertTrue(mbeanClassName.endsWith("MBean"));
1:             
1:             // Check the type is the class name of the MBean without
1:             // the MBean and the package.
1:             String scn = mbeanClassName.substring(mbeanClassName.lastIndexOf('.') + 1);         
1:             scn = scn.substring(0, scn.length() - "MBean".length());
1:             assertEquals(scn, type);
1:         }
1:     }
1: }
============================================================================