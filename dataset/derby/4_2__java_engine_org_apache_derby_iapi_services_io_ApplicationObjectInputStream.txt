1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.io.ApplicationObjectInputStream
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.services.io;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.services.loader.ClassFactory;
1:eac0369: 
1:eac0369: import java.io.ObjectStreamClass;
1:eac0369: import java.io.ObjectInputStream;
1:eac0369: import java.io.IOException;
1:eac0369: import java.io.InputStream;
1:eac0369: 
2:eac0369: /**
1:eac0369: 	An object input stream that implements resolve class in order
1:eac0369: 	to load the class through the ClassFactory.loadApplicationClass method.
1:eac0369: */
1:eac0369: class ApplicationObjectInputStream extends ObjectInputStream
1:eac0369:     implements ErrorObjectInput
1:eac0369: {
1:eac0369: 
1:eac0369: 	protected ClassFactory cf;
1:eac0369: 	protected ObjectStreamClass        initialClass;
1:eac0369: 
1:eac0369: 	ApplicationObjectInputStream(InputStream in, ClassFactory cf)
1:eac0369: 		throws IOException {
1:eac0369: 		super(in);
1:eac0369: 		this.cf = cf;
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	protected Class resolveClass(ObjectStreamClass v)
1:eac0369: 		throws IOException, ClassNotFoundException {
1:eac0369: 
1:eac0369: 		if (initialClass == null)
1:eac0369: 			initialClass = v;
1:eac0369: 
1:eac0369: 		if (cf != null)
1:eac0369: 			return cf.loadApplicationClass(v);
1:eac0369: 
1:eac0369: 		throw new ClassNotFoundException(v.getName());
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public String getErrorInfo() {
1:eac0369: 		if (initialClass == null)
1:eac0369: 			return "";
1:eac0369: 
1:eac0369: 		return initialClass.getName() + " (serialVersionUID="
1:eac0369: 			+ initialClass.getSerialVersionUID() + ")";
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public Exception getNestedException() {
1:eac0369:         return null;
1:eac0369: 	}
1:eac0369: 
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.io.ApplicationObjectInputStream
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.io
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.io;
1: 
1: import org.apache.derby.iapi.services.loader.ClassFactory;
1: 
1: import java.io.ObjectStreamClass;
1: import java.io.ObjectInputStream;
1: import java.io.IOException;
1: import java.io.InputStream;
1: 
1: /**
1: 	An object input stream that implements resolve class in order
1: 	to load the class through the ClassFactory.loadApplicationClass method.
1: */
1: class ApplicationObjectInputStream extends ObjectInputStream
1:     implements ErrorObjectInput
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 
1: 	protected ClassFactory cf;
1: 	protected ObjectStreamClass        initialClass;
1: 
1: 	ApplicationObjectInputStream(InputStream in, ClassFactory cf)
1: 		throws IOException {
1: 		super(in);
1: 		this.cf = cf;
1: 	}
1: 
1: 	protected Class resolveClass(ObjectStreamClass v)
1: 		throws IOException, ClassNotFoundException {
1: 
1: 		if (initialClass == null)
1: 			initialClass = v;
1: 
1: 		if (cf != null)
1: 			return cf.loadApplicationClass(v);
1: 
1: 		throw new ClassNotFoundException(v.getName());
1: 	}
1: 
1: 	public String getErrorInfo() {
1: 		if (initialClass == null)
1: 			return "";
1: 
1: 		return initialClass.getName() + " (serialVersionUID="
1: 			+ initialClass.getSerialVersionUID() + ")";
1: 	}
1: 
1: 	public Exception getNestedException() {
1:         return null;
1: 	}
1: 
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.io
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.services.io;
0: 
0: import org.apache.derby.iapi.services.loader.ClassFactory;
0: 
0: import java.io.ObjectStreamClass;
0: import java.io.ObjectInputStream;
0: import java.io.IOException;
0: import java.io.InputStream;
0: 
0: /**
0: 	An object input stream that implements resolve class in order
0: 	to load the class through the ClassFactory.loadApplicationClass method.
0: */
0: class ApplicationObjectInputStream extends ObjectInputStream
0:     implements ErrorObjectInput
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 
0: 	protected ClassFactory cf;
0: 	protected ObjectStreamClass        initialClass;
0: 
0: 	ApplicationObjectInputStream(InputStream in, ClassFactory cf)
0: 		throws IOException {
0: 		super(in);
0: 		this.cf = cf;
0: 	}
0: 
0: 	protected Class resolveClass(ObjectStreamClass v)
0: 		throws IOException, ClassNotFoundException {
0: 
0: 		if (initialClass == null)
0: 			initialClass = v;
0: 
0: 		if (cf != null)
0: 			return cf.loadApplicationClass(v);
0: 
0: 		throw new ClassNotFoundException(v.getName());
0: 	}
0: 
0: 	public String getErrorInfo() {
0: 		if (initialClass == null)
0: 			return "";
0: 
0: 		return initialClass.getName() + " (serialVersionUID="
0: 			+ initialClass.getSerialVersionUID() + ")";
0: 	}
0: 
0: 	public Exception getNestedException() {
0:         return null;
0: 	}
0: 
0: }
============================================================================