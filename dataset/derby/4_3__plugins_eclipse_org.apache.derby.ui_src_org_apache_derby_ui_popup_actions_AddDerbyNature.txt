1:aaea357: /*
1:23683f1: 
1:23683f1: 	Derby - Class org.apache.derby.ui.popup.actions.AddDerbyNature
1:23683f1: 
1:23683f1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1:23683f1: 	contributor license agreements.  See the NOTICE file distributed with
1:23683f1: 	this work for additional information regarding copyright ownership.
1:23683f1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1:23683f1: 	(the "License"); you may not use this file except in compliance with
1:23683f1: 	the License.  You may obtain a copy of the License at
1:23683f1: 	
1:23683f1: 	   http://www.apache.org/licenses/LICENSE-2.0
1:23683f1: 	
1:23683f1: 	Unless required by applicable law or agreed to in writing, software
1:23683f1: 	distributed under the License is distributed on an "AS IS" BASIS,
1:23683f1: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:23683f1: 	See the License for the specific language governing permissions and
1:23683f1: 	limitations under the License.
1:23683f1: 
1:23683f1: */
2:aaea357: 
1:aaea357: package org.apache.derby.ui.popup.actions;
1:aaea357: 
1:6c24865: import java.util.ArrayList;
1:6c24865: import java.util.List;
1:6c24865: 
1:aaea357: import org.apache.derby.ui.common.CommonNames;
1:aaea357: import org.apache.derby.ui.common.Messages;
1:6c24865: import org.apache.derby.ui.container.DerbyClasspathContainer;
1:aaea357: import org.apache.derby.ui.util.Logger;
1:aaea357: import org.apache.derby.ui.util.SelectionUtil;
1:aaea357: import org.eclipse.core.resources.IProject;
1:aaea357: import org.eclipse.core.resources.IProjectDescription;
1:aaea357: import org.eclipse.core.resources.IResource;
1:aaea357: import org.eclipse.core.runtime.IStatus;
1:aaea357: import org.eclipse.jdt.core.IClasspathEntry;
1:aaea357: import org.eclipse.jdt.core.IJavaProject;
1:aaea357: import org.eclipse.jdt.core.JavaCore;
1:aaea357: import org.eclipse.jface.action.IAction;
1:aaea357: import org.eclipse.jface.dialogs.MessageDialog;
1:aaea357: import org.eclipse.jface.viewers.ISelection;
1:aaea357: import org.eclipse.jface.window.ApplicationWindow;
1:aaea357: import org.eclipse.swt.SWT;
1:aaea357: import org.eclipse.swt.graphics.Cursor;
1:aaea357: import org.eclipse.swt.widgets.Shell;
1:aaea357: import org.eclipse.ui.IObjectActionDelegate;
1:aaea357: import org.eclipse.ui.IWorkbenchPart;
1:aaea357: import org.eclipse.ui.IWorkbenchWindow;
1:aaea357: import org.eclipse.ui.PlatformUI;
1:aaea357: 
1:aaea357: public class AddDerbyNature implements IObjectActionDelegate
1:aaea357: {
1:aaea357: 
1:aaea357:     private IJavaProject currentJavaProject;
1:aaea357:     private IProject currentProject;
1:aaea357: 
1:aaea357:     /*
1:aaea357:      * (non-Javadoc)
7:aaea357:      * 
1:aaea357:      * @see org.eclipse.ui.IObjectActionDelegate#setActivePart(org.eclipse.jface.action.IAction,
1:aaea357:      *      org.eclipse.ui.IWorkbenchPart)
2:aaea357:      */
1:aaea357:     public void setActivePart(IAction action, IWorkbenchPart targetPart)
1:aaea357:     {
1:aaea357:     }
1:aaea357: 
1:aaea357:     /*
1:aaea357:      * (non-Javadoc)
1:aaea357:      * 
1:aaea357:      * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
1:aaea357:      */
1:aaea357:     public void run(IAction action)
1:aaea357:     {
1:aaea357:         IWorkbenchWindow window = PlatformUI.getWorkbench()
1:aaea357:                 .getActiveWorkbenchWindow();
1:aaea357:         Cursor waitCursor = new Cursor(window.getShell().getDisplay(),
1:aaea357:                 SWT.CURSOR_WAIT);
1:aaea357:         try
1:aaea357:         {
1:aaea357:             window.getShell().setCursor(waitCursor);
1:aaea357:             ((ApplicationWindow) window).setStatus(Messages.ADDING_NATURE);
1:aaea357: 
1:aaea357:             //new way
1:aaea357:             if (currentJavaProject == null)
1:aaea357:             {
1:aaea357:                 // if the java nature is not present
1:aaea357:                 // it must be added, along with the Derby nature
1:aaea357:                 IProjectDescription description = currentProject
1:aaea357:                         .getDescription();
1:aaea357:                 String[] natureIds = description.getNatureIds();
1:aaea357:                 String[] newNatures = new String[natureIds.length + 2];
1:aaea357:                 System.arraycopy(natureIds, 0, newNatures, 0, natureIds.length);
1:aaea357:                 newNatures[newNatures.length - 2] = JavaCore.NATURE_ID;
1:aaea357:                 newNatures[newNatures.length - 1] = CommonNames.DERBY_NATURE;
1:aaea357:                 description.setNatureIds(newNatures);
1:aaea357:                 currentProject.setDescription(description, null);
1:aaea357: 
1:aaea357:                 currentJavaProject = (IJavaProject) JavaCore
1:aaea357:                         .create((IProject) currentProject);
1:23683f1:             }
1:aaea357:             else
1:aaea357:             {
1:aaea357:                 //add the derby nature, the java nature is already present
1:aaea357:                 IProjectDescription description = currentJavaProject
1:aaea357:                         .getProject().getDescription();
1:aaea357:                 String[] natures = description.getNatureIds();
1:aaea357:                 String[] newNatures = new String[natures.length + 1];
1:aaea357:                 System.arraycopy(natures, 0, newNatures, 0, natures.length);
1:aaea357:                 // must prefix with plugin id
1:aaea357:                 newNatures[natures.length] = CommonNames.DERBY_NATURE;
1:aaea357:                 description.setNatureIds(newNatures);
1:aaea357:                 currentJavaProject.getProject().setDescription(description,
1:aaea357:                         null);
1:aaea357:             }
1:aaea357: 
1:aaea357:             IClasspathEntry[] rawClasspath = currentJavaProject
1:aaea357:                     .getRawClasspath();
1:aaea357: 
1:6c24865:             List<IClasspathEntry> newEntries = new ArrayList<IClasspathEntry>(rawClasspath.length+1);            
1:6c24865:             for(IClasspathEntry e: rawClasspath) {
1:6c24865:             	newEntries.add(e);
1:6c24865:             }            
1:6c24865:             newEntries.add(JavaCore.newContainerEntry(DerbyClasspathContainer.CONTAINER_ID));
1:6c24865:             
1:6c24865:             IClasspathEntry[] newEntriesArray = new IClasspathEntry[newEntries.size()];
1:6c24865:             newEntriesArray = (IClasspathEntry[])newEntries.toArray(newEntriesArray);
1:6c24865:             currentJavaProject.setRawClasspath(newEntriesArray, null);
1:6c24865:                     
1:aaea357:             // refresh project so user sees new files, libraries, etc
1:aaea357:             currentJavaProject.getProject().refreshLocal(
1:aaea357:                     IResource.DEPTH_INFINITE, null);
1:aaea357:             ((ApplicationWindow) window).setStatus(Messages.DERBY_NATURE_ADDED);
1:aaea357: 
1:aaea357:         } catch ( Exception e)
1:aaea357:         {
1:aaea357:             Logger.log(Messages.ERROR_ADDING_NATURE + " '"
1:aaea357:                     + currentJavaProject.getProject().getName() + "' : " + e,
1:aaea357:                     IStatus.ERROR);
1:aaea357:             Shell shell = new Shell();
1:aaea357:             MessageDialog.openInformation(shell, CommonNames.PLUGIN_NAME,
1:aaea357:                     Messages.ERROR_ADDING_NATURE + ":\n"
1:aaea357:                             + SelectionUtil.getStatusMessages(e));
1:aaea357:         } finally
1:aaea357:         {
1:aaea357:             window.getShell().setCursor(null);
1:aaea357:             waitCursor.dispose();
1:aaea357:         }
1:aaea357:     }
1:aaea357: 
1:aaea357:     /*
1:aaea357:      * (non-Javadoc)
1:aaea357:      * 
1:aaea357:      * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,
1:aaea357:      *      org.eclipse.jface.viewers.ISelection)
1:aaea357:      */
1:aaea357:     public void selectionChanged(IAction action, ISelection selection)
1:aaea357:     {
1:aaea357:         currentJavaProject = SelectionUtil.findSelectedJavaProject(selection);
1:aaea357: 
1:aaea357:         if (currentJavaProject == null)
1:aaea357:         {
1:aaea357:             currentProject = org.apache.derby.ui.util.SelectionUtil
1:aaea357:                     .findSelectedProject(selection);
1:aaea357:         }
1:aaea357: 
1:aaea357:     }
1:aaea357: 
1:aaea357: }
============================================================================
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:6c24865
/////////////////////////////////////////////////////////////////////////
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: import org.apache.derby.ui.container.DerbyClasspathContainer;
/////////////////////////////////////////////////////////////////////////
1:             List<IClasspathEntry> newEntries = new ArrayList<IClasspathEntry>(rawClasspath.length+1);            
1:             for(IClasspathEntry e: rawClasspath) {
1:             	newEntries.add(e);
1:             }            
1:             newEntries.add(JavaCore.newContainerEntry(DerbyClasspathContainer.CONTAINER_ID));
1:             
1:             IClasspathEntry[] newEntriesArray = new IClasspathEntry[newEntries.size()];
1:             newEntriesArray = (IClasspathEntry[])newEntries.toArray(newEntriesArray);
1:             currentJavaProject.setRawClasspath(newEntriesArray, null);
1:                     
author:Jean T. Anderson
-------------------------------------------------------------------------------
commit:23683f1
/////////////////////////////////////////////////////////////////////////
1: 
1: 	Derby - Class org.apache.derby.ui.popup.actions.AddDerbyNature
1: 
1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1: 	contributor license agreements.  See the NOTICE file distributed with
1: 	this work for additional information regarding copyright ownership.
1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1: 	(the "License"); you may not use this file except in compliance with
1: 	the License.  You may obtain a copy of the License at
1: 	
1: 	   http://www.apache.org/licenses/LICENSE-2.0
1: 	
1: 	Unless required by applicable law or agreed to in writing, software
1: 	distributed under the License is distributed on an "AS IS" BASIS,
1: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: 	See the License for the specific language governing permissions and
1: 	limitations under the License.
1: 
1: */
/////////////////////////////////////////////////////////////////////////
1: }
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
0:  * Derby - Class org.apache.derby.ui.popup.actions.AddDerbyNature
1:  * 
0:  * Copyright 2002, 2004 The Apache Software Foundation or its licensors, as
0:  * applicable.
1:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
0:  * use this file except in compliance with the License. You may obtain a copy of
0:  * the License at
1:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * 
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
0:  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
0:  * License for the specific language governing permissions and limitations under
0:  * the License.
1:  *  
1:  */
1: 
1: package org.apache.derby.ui.popup.actions;
1: 
1: import org.apache.derby.ui.common.CommonNames;
1: import org.apache.derby.ui.common.Messages;
0: import org.apache.derby.ui.util.DerbyUtils;
1: import org.apache.derby.ui.util.Logger;
1: import org.apache.derby.ui.util.SelectionUtil;
1: import org.eclipse.core.resources.IProject;
1: import org.eclipse.core.resources.IProjectDescription;
1: import org.eclipse.core.resources.IResource;
1: import org.eclipse.core.runtime.IStatus;
1: import org.eclipse.jdt.core.IClasspathEntry;
1: import org.eclipse.jdt.core.IJavaProject;
1: import org.eclipse.jdt.core.JavaCore;
1: import org.eclipse.jface.action.IAction;
1: import org.eclipse.jface.dialogs.MessageDialog;
1: import org.eclipse.jface.viewers.ISelection;
1: import org.eclipse.jface.window.ApplicationWindow;
1: import org.eclipse.swt.SWT;
1: import org.eclipse.swt.graphics.Cursor;
1: import org.eclipse.swt.widgets.Shell;
1: import org.eclipse.ui.IObjectActionDelegate;
1: import org.eclipse.ui.IWorkbenchPart;
1: import org.eclipse.ui.IWorkbenchWindow;
1: import org.eclipse.ui.PlatformUI;
1: 
1: public class AddDerbyNature implements IObjectActionDelegate
1: {
1: 
1:     private IJavaProject currentJavaProject;
1:     private IProject currentProject;
1: 
1:     /*
1:      * (non-Javadoc)
1:      * 
1:      * @see org.eclipse.ui.IObjectActionDelegate#setActivePart(org.eclipse.jface.action.IAction,
1:      *      org.eclipse.ui.IWorkbenchPart)
1:      */
1:     public void setActivePart(IAction action, IWorkbenchPart targetPart)
1:     {
1:     }
1: 
1:     /*
1:      * (non-Javadoc)
1:      * 
1:      * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
1:      */
1:     public void run(IAction action)
1:     {
1:         IWorkbenchWindow window = PlatformUI.getWorkbench()
1:                 .getActiveWorkbenchWindow();
1:         Cursor waitCursor = new Cursor(window.getShell().getDisplay(),
1:                 SWT.CURSOR_WAIT);
1:         try
1:         {
1:             window.getShell().setCursor(waitCursor);
1:             ((ApplicationWindow) window).setStatus(Messages.ADDING_NATURE);
1: 
1:             //new way
1:             if (currentJavaProject == null)
1:             {
1:                 // if the java nature is not present
1:                 // it must be added, along with the Derby nature
1:                 IProjectDescription description = currentProject
1:                         .getDescription();
1:                 String[] natureIds = description.getNatureIds();
1:                 String[] newNatures = new String[natureIds.length + 2];
1:                 System.arraycopy(natureIds, 0, newNatures, 0, natureIds.length);
1:                 newNatures[newNatures.length - 2] = JavaCore.NATURE_ID;
1:                 newNatures[newNatures.length - 1] = CommonNames.DERBY_NATURE;
1:                 description.setNatureIds(newNatures);
1:                 currentProject.setDescription(description, null);
1: 
1:                 currentJavaProject = (IJavaProject) JavaCore
1:                         .create((IProject) currentProject);
1:             }
1:             else
1:             {
1:                 //add the derby nature, the java nature is already present
1:                 IProjectDescription description = currentJavaProject
1:                         .getProject().getDescription();
1:                 String[] natures = description.getNatureIds();
1:                 String[] newNatures = new String[natures.length + 1];
1:                 System.arraycopy(natures, 0, newNatures, 0, natures.length);
1:                 // must prefix with plugin id
1:                 newNatures[natures.length] = CommonNames.DERBY_NATURE;
1:                 description.setNatureIds(newNatures);
1:                 currentJavaProject.getProject().setDescription(description,
1:                         null);
1:             }
1: 
1:             IClasspathEntry[] rawClasspath = currentJavaProject
1:                     .getRawClasspath();
1: 
0:             currentJavaProject.setRawClasspath(DerbyUtils
0:                     .addDerbyJars(rawClasspath), null);
1: 
1:             // refresh project so user sees new files, libraries, etc
1:             currentJavaProject.getProject().refreshLocal(
1:                     IResource.DEPTH_INFINITE, null);
1:             ((ApplicationWindow) window).setStatus(Messages.DERBY_NATURE_ADDED);
1: 
1:         } catch ( Exception e)
1:         {
1:             Logger.log(Messages.ERROR_ADDING_NATURE + " '"
1:                     + currentJavaProject.getProject().getName() + "' : " + e,
1:                     IStatus.ERROR);
1:             Shell shell = new Shell();
1:             MessageDialog.openInformation(shell, CommonNames.PLUGIN_NAME,
1:                     Messages.ERROR_ADDING_NATURE + ":\n"
1:                             + SelectionUtil.getStatusMessages(e));
1:         } finally
1:         {
1:             window.getShell().setCursor(null);
1:             waitCursor.dispose();
1:         }
1:     }
1: 
1:     /*
1:      * (non-Javadoc)
1:      * 
1:      * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,
1:      *      org.eclipse.jface.viewers.ISelection)
1:      */
1:     public void selectionChanged(IAction action, ISelection selection)
1:     {
1:         currentJavaProject = SelectionUtil.findSelectedJavaProject(selection);
1: 
1:         if (currentJavaProject == null)
1:         {
1:             currentProject = org.apache.derby.ui.util.SelectionUtil
1:                     .findSelectedProject(selection);
1:         }
1: 
1:     }
1: 
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:00daaff
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * 
0:  * Derby - Class org.apache.derby.ui.popup.actions.AddDerbyNature
0:  * 
0:  * Copyright 2002, 2004 The Apache Software Foundation or its licensors, as
0:  * applicable.
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); you may not
0:  * use this file except in compliance with the License. You may obtain a copy of
0:  * the License at
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
0:  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
0:  * License for the specific language governing permissions and limitations under
0:  * the License.
0:  *  
0:  */
0: 
0: package org.apache.derby.ui.popup.actions;
0: 
0: import org.apache.derby.ui.common.CommonNames;
0: import org.apache.derby.ui.common.Messages;
0: import org.apache.derby.ui.util.DerbyUtils;
0: import org.apache.derby.ui.util.Logger;
0: import org.apache.derby.ui.util.SelectionUtil;
0: import org.eclipse.core.resources.IProject;
0: import org.eclipse.core.resources.IProjectDescription;
0: import org.eclipse.core.resources.IResource;
0: import org.eclipse.core.runtime.IStatus;
0: import org.eclipse.jdt.core.IClasspathEntry;
0: import org.eclipse.jdt.core.IJavaProject;
0: import org.eclipse.jdt.core.JavaCore;
0: import org.eclipse.jface.action.IAction;
0: import org.eclipse.jface.dialogs.MessageDialog;
0: import org.eclipse.jface.viewers.ISelection;
0: import org.eclipse.jface.window.ApplicationWindow;
0: import org.eclipse.swt.SWT;
0: import org.eclipse.swt.graphics.Cursor;
0: import org.eclipse.swt.widgets.Shell;
0: import org.eclipse.ui.IObjectActionDelegate;
0: import org.eclipse.ui.IWorkbenchPart;
0: import org.eclipse.ui.IWorkbenchWindow;
0: import org.eclipse.ui.PlatformUI;
0: 
0: public class AddDerbyNature implements IObjectActionDelegate
0: {
0: 
0:     private IJavaProject currentJavaProject;
0:     private IProject currentProject;
0: 
0:     /*
0:      * (non-Javadoc)
0:      * 
0:      * @see org.eclipse.ui.IObjectActionDelegate#setActivePart(org.eclipse.jface.action.IAction,
0:      *      org.eclipse.ui.IWorkbenchPart)
0:      */
0:     public void setActivePart(IAction action, IWorkbenchPart targetPart)
0:     {
0:     }
0: 
0:     /*
0:      * (non-Javadoc)
0:      * 
0:      * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
0:      */
0:     public void run(IAction action)
0:     {
0:         IWorkbenchWindow window = PlatformUI.getWorkbench()
0:                 .getActiveWorkbenchWindow();
0:         Cursor waitCursor = new Cursor(window.getShell().getDisplay(),
0:                 SWT.CURSOR_WAIT);
0:         try
0:         {
0:             window.getShell().setCursor(waitCursor);
0:             ((ApplicationWindow) window).setStatus(Messages.ADDING_NATURE);
0: 
0:             //new way
0:             if (currentJavaProject == null)
0:             {
0:                 // if the java nature is not present
0:                 // it must be added, along with the Derby nature
0:                 IProjectDescription description = currentProject
0:                         .getDescription();
0:                 String[] natureIds = description.getNatureIds();
0:                 String[] newNatures = new String[natureIds.length + 2];
0:                 System.arraycopy(natureIds, 0, newNatures, 0, natureIds.length);
0:                 newNatures[newNatures.length - 2] = JavaCore.NATURE_ID;
0:                 newNatures[newNatures.length - 1] = CommonNames.DERBY_NATURE;
0:                 description.setNatureIds(newNatures);
0:                 currentProject.setDescription(description, null);
0: 
0:                 currentJavaProject = (IJavaProject) JavaCore
0:                         .create((IProject) currentProject);
0:             }
0:             else
0:             {
0:                 //add the derby nature, the java nature is already present
0:                 IProjectDescription description = currentJavaProject
0:                         .getProject().getDescription();
0:                 String[] natures = description.getNatureIds();
0:                 String[] newNatures = new String[natures.length + 1];
0:                 System.arraycopy(natures, 0, newNatures, 0, natures.length);
0:                 // must prefix with plugin id
0:                 newNatures[natures.length] = CommonNames.DERBY_NATURE;
0:                 description.setNatureIds(newNatures);
0:                 currentJavaProject.getProject().setDescription(description,
0:                         null);
0:             }
0: 
0:             IClasspathEntry[] rawClasspath = currentJavaProject
0:                     .getRawClasspath();
0: 
0:             currentJavaProject.setRawClasspath(DerbyUtils
0:                     .addDerbyJars(rawClasspath), null);
0: 
0:             // refresh project so user sees new files, libraries, etc
0:             currentJavaProject.getProject().refreshLocal(
0:                     IResource.DEPTH_INFINITE, null);
0:             ((ApplicationWindow) window).setStatus(Messages.DERBY_NATURE_ADDED);
0: 
0:         } catch ( Exception e)
0:         {
0:             Logger.log(Messages.ERROR_ADDING_NATURE + " '"
0:                     + currentJavaProject.getProject().getName() + "' : " + e,
0:                     IStatus.ERROR);
0:             Shell shell = new Shell();
0:             MessageDialog.openInformation(shell, CommonNames.PLUGIN_NAME,
0:                     Messages.ERROR_ADDING_NATURE + ":\n"
0:                             + SelectionUtil.getStatusMessages(e));
0:         } finally
0:         {
0:             window.getShell().setCursor(null);
0:             waitCursor.dispose();
0:         }
0:     }
0: 
0:     /*
0:      * (non-Javadoc)
0:      * 
0:      * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,
0:      *      org.eclipse.jface.viewers.ISelection)
0:      */
0:     public void selectionChanged(IAction action, ISelection selection)
0:     {
0:         currentJavaProject = SelectionUtil.findSelectedJavaProject(selection);
0: 
0:         if (currentJavaProject == null)
0:         {
0:             currentProject = org.apache.derby.ui.util.SelectionUtil
0:                     .findSelectedProject(selection);
0:         }
0: 
0:     }
0: 
0: }
============================================================================