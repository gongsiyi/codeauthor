4:eac0369: /*
226:eac0369: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.io.StoredFormatIds
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
190:eac0369:  */
1:2d2e717: 
1:eac0369: //depot/main/java/org.apache.derby.iapi.services.io/StoredFormatIds.java#211 - edit change 20974 (text)
1:eac0369: package org.apache.derby.iapi.services.io;
40:91495aa: /**
1:eac0369:   A format id identifies a stored form of an object for the
1:eac0369:   purposes of locating a class which can read the stored form and
1:eac0369:   reconstruct the object using the java.io.Externalizable interface.
1:92268ac: 
1:eac0369:   <P>An important aspect of the format id concept is that it does
1:eac0369:   not impose an implementation on the stored object. Rather,
1:eac0369:   multiple implementations of an object (or interface) may share a
1:eac0369:   format id. One implementation may store (write) an object
1:eac0369:   and another may restore (read) the object. The implication of this
1:eac0369:   is that a format id specifies the following properties of a
1:eac0369:   stored object.
1:2d2e717: 
1:eac0369:   <UL>
1:eac0369:   <LI>The interface(s) the stored object must support. Any implementation
1:eac0369:   which reads the object must support these interfaces.
1:373cf9d:   <LI>The format of the stored object. All implementations which support
1:eac0369:   the format must be able to read and write it.
1:eac0369:   </UL>
1:eac0369: 
1:373cf9d:   <P>An object should implement the Formatable interface to support a
1:eac0369:   stored format. In addition, the module which contains the object
1:eac0369:   should register the object's class with the Monitor (See
1:eac0369:   FormatIdUtil.register.)
1:eac0369: 
1:eac0369:   <P>When you add a format id to this file, please include the list
1:373cf9d:   of interfaces an implementation must support when it supports
1:3fd26f3:   the format id. When Derby code reads a stored form it returns an 
1:eac0369:   object of a Class which supports the stored form. A reader may
1:eac0369:   cast this object to any interface listed in this file. It is an error for
1:eac0369:   the reader to cast the object to a class or interface not listed in this
1:eac0369:   file.
1:eac0369: 
1:eac0369:   <P>When you implement a class that supports a format, add a comment that
1:eac0369:   states the name of the class. The first implementation of a format defines
1:eac0369:   the stored form.
1:eac0369: 
1:3fd26f3:   <P>This interface defines all the format ids for Derby.
1:eac0369:   If you define a format id please be sure to declare it in this
1:eac0369:   file. If you remove support for a one please document that the
1:eac0369:   format id is deprecated. Never remove or re-use a format id.
1:92268ac:  */
1:5d24b1a: public interface StoredFormatIds {
1:eac0369: 
1:91495aa:     /** Byte length of a two byt format id. */
1:91495aa:     int  TWO_BYTE_FORMAT_ID_BYTE_LENGTH = 2;
1:eac0369: 
1:91495aa:     /** Minimum value for a two byte format id. */
1:91495aa:     int  MIN_TWO_BYTE_FORMAT_ID = 0; //16384
1:91495aa:     /** Maximum value for a two byte format id. */
1:91495aa:     int  MAX_TWO_BYTE_FORMAT_ID = 0x7FFF; //32767
1:91495aa:     
1:91495aa:     int MIN_ID_2 = MIN_TWO_BYTE_FORMAT_ID;
1:eac0369: 
1:91495aa:     // TEMP DJD
1:91495aa:     int MIN_ID_4 = MIN_ID_2 + 403;
1:eac0369: 
3:91495aa:     /******************************************************************
4:91495aa:     **
1:91495aa:     **      How to add an ID for another Formatable class 
1:91495aa:     **
1:91495aa:     **      o       In the list of constants below, identify the module that
1:91495aa:     **              defines your class.
1:91495aa:     **
1:91495aa:     **      o       Add your class to the list to the end of that module 
1:91495aa:     **              use a number that is one greater than all existing formats
1:91495aa:     **              in that module, see MAX_ID_2 or MAX_ID_4 at the end of the 
1:91495aa:     **              file, these are the largest existing formatId.
1:91495aa:     **
1:91495aa:     **      o       update MAX_ID_2 and MAX_ID_4
1:91495aa:     **
1:91495aa:     **
1:91495aa:     **      o       Make sure that the getFormatId() method for your class
1:91495aa:     **              returns the constant that you just made up.
1:91495aa:     **
1:91495aa:     **      o       Now find your module startup code that registers Format
1:91495aa:     **              IDs. Add your class to that list.
1:91495aa:     **
1:91495aa:     **      o   Add a test for your new format ID to T_StoredFormat.java
1:91495aa:     **
3:91495aa:     ******************************************************************/
1:eac0369: 
1:eac0369: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **      Formats for the StoredFormatModule
1:91495aa:     **
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:eac0369: 
1:91495aa:     /** Special format id for any null referance */
1:91495aa:     static public final int NULL_FORMAT_ID =
1:91495aa:             (MIN_ID_2 + 0);
1:eac0369: 
1:91495aa:     /** Special format id for tagging UTF8 strings */
1:91495aa:     static public final int STRING_FORMAT_ID =
1:91495aa:             (MIN_ID_2 + 1);
1:eac0369: 
1:91495aa:     /** Special format id for tagging Serializable objects. */
1:91495aa:     static public final int SERIALIZABLE_FORMAT_ID =
1:91495aa:             (MIN_ID_2 + 2);
1:91495aa:     
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **      DataDictionary Formats
1:91495aa:     **
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:92268ac:     /**
1:91495aa:         class org.apache.derby.iapi.types.BooleanTypeId
1:6b90f28:      */
1:91495aa:     static public final int BOOLEAN_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 4);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.BooleanTypeId
1:2d2e717:      */
1:91495aa:     static public final int BOOLEAN_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 260);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.CharTypeId
1:2d2e717:      */
1:91495aa:     static public final int CHAR_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 5);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.CharTypeId
1:2d2e717:      */
1:91495aa:     static public final int CHAR_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 244);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.DoubleTypeId
1:eac0369:      */
1:91495aa:     static public final int DOUBLE_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 6);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.DoubleTypeId
1:91495aa:      */
1:91495aa:     static public final int DOUBLE_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 245);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.IntTypeId
1:91495aa:      */
1:91495aa:     static public final int INT_TYPE_ID =                            
1:91495aa:             (MIN_ID_2 + 7);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.IntTypeId
1:eac0369:      */
1:91495aa:     static public final int INT_COMPILATION_TYPE_ID =                                
1:91495aa:             (MIN_ID_2 + 246);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.RealTypeId
1:eac0369:      */
1:91495aa:     static public final int REAL_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 8);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.RealTypeId
1:eac0369:      */
1:91495aa:     static public final int REAL_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 247);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.RefTypeId
1:eac0369:      */
1:91495aa:     static public final int REF_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 9);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.RefTypeId
1:eac0369:      */
1:91495aa:     static public final int REF_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 248);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.SmallintTypeId
1:eac0369:      */
1:91495aa:     static public final int SMALLINT_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 10);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.SmallintTypeId
1:eac0369:      */
1:91495aa:     static public final int SMALLINT_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 249);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.LongintTypeId
1:eac0369:      */
1:3bb140c:     static public final int BIGINT_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 11);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.LongintTypeId
1:eac0369:      */
1:91495aa:     static public final int LONGINT_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 250);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.UserDefinedTypeId
1:eac0369:      */
1:91495aa:     //static public final int USERDEFINED_TYPE_ID =
1:91495aa:     //      (MIN_ID_2 + 12);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.UserDefinedTypeIdV2
1:eac0369:      */
1:91495aa:     //static public final int USERDEFINED_TYPE_ID_V2 =
1:91495aa:     //      (MIN_ID_2 + 267);
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.UserDefinedTypeIdV3
1:eac0369:      */
1:91495aa:     static public final int USERDEFINED_TYPE_ID_V3 =
1:91495aa:             (MIN_ID_2 + 267);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.UserDefinedTypeId
1:eac0369:      */
1:91495aa:     static public final int USERDEFINED_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 251);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.UserDefinedTypeIdV2
1:91495aa:      */
1:91495aa:     static public final int USERDEFINED_COMPILATION_TYPE_ID_V2 =
1:91495aa:             (MIN_ID_2 + 265);
1:92268ac:     
1:92268ac:     /**
1:91495aa:         class org.apache.derby.iapi.types.VarcharTypeId
1:92268ac:      */
1:91495aa:     static public final int VARCHAR_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 13);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.VarcharTypeId
1:91495aa:      */
1:91495aa:     static public final int VARCHAR_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 252);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.TypeDescriptorImpl
1:eac0369:     */
1:91495aa:     static public final int DATA_TYPE_IMPL_DESCRIPTOR_V01_ID =
1:91495aa:             (MIN_ID_2 + 14);
1:91495aa:     
1:91495aa:     /**
1:2e83f13:      * In releases prior to 10.3 this format was produced by
1:2e83f13:      * DataTypeDescriptor. The format was incorrect used
1:2e83f13:      * in system catalogs for routine parameter and return
1:2e83f13:      * types. The format contained repeated information.
1:2e83f13:      * DERBY-2775 changed the code so that these catalog
1:2e83f13:      * types were written as TypeDescriptor (which is what
1:2e83f13:      * always had occurred for the types in SYSCOLUMNS).
1:2e83f13:      * <P>
1:2e83f13:      * This format now maps to OldRoutineType and is solely
1:2e83f13:      * used to read old routine types.
1:eac0369:      */
1:91495aa:     static public final int DATA_TYPE_SERVICES_IMPL_V01_ID =
1:91495aa:             (MIN_ID_2 + 259);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.ConglomerateDescriptorFinder
1:eac0369:      */
1:91495aa:     static public final int CONGLOMERATE_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 135);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.ConstraintDescriptorFinder
1:eac0369:      */
1:91495aa:     static public final int CONSTRAINT_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 208);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.DefaultDescriptorFinder
1:eac0369:      */
1:91495aa:     static public final int DEFAULT_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 325);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.AliasDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int ALIAS_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 136);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.TableDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int TABLE_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 137);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:91495aa:      */
1:91495aa:     static public final int ROUTINE_PERMISSION_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 461);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:91495aa:      */
1:91495aa:     static public final int TABLE_PERMISSION_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 462);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:91495aa:      */
1:91495aa:     static public final int COLUMNS_PERMISSION_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 463);
1:7e729b6: 
1:7e729b6:     /**
1:7e729b6:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:7e729b6:      */
1:7e729b6:     static public final int ROLE_GRANT_FINDER_V01_ID =
1:7e729b6:             (MIN_ID_2 + 471);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.DataDictionaryDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int DATA_DICTIONARY_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 138);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.ViewDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int VIEW_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 145);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.SPSDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int SPS_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 226);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.FileInfoFinder
1:91495aa:      */
1:91495aa:     static public final int FILE_INFO_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 273);
1:91495aa: 
1:91495aa:     /**
2:91495aa:     class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int TRIGGER_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 320);
1:d9878ca: 
1:d9878ca:     /**
1:211adc3:      * Class org.apache.derby.impl.sql.catalog.TriggerDescriptor.
1:d9878ca:      */
1:91495aa:     static public final int TRIGGER_DESCRIPTOR_V01_ID =
1:91495aa:             (MIN_ID_2 + 316);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.DD_SocratesVersion
1:91495aa:      */
1:91495aa:     static public final int DD_SOCRATES_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 174);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.ReferencedColumnsDescriptorImpl
1:91495aa:      */
1:91495aa:     static public final int REFERENCED_COLUMNS_DESCRIPTOR_IMPL_V01_ID =
1:91495aa:             (MIN_ID_2 + 205);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.DD_PlatoVersion
1:91495aa:      */
1:91495aa:     static public final int DD_PLATO_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 206);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.DD_AristotleVersion
1:91495aa:      */
1:91495aa:     static public final int DD_ARISTOTLE_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 272);
1:91495aa: 
1:91495aa:     /**
1:91495aa:       class org.apache.derby.impl.sql.catalog.DD_XenaVersion
1:91495aa:      */
1:91495aa:     static public final int DD_XENA_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 302);
1:91495aa: 
1:91495aa:     /**
1:91495aa:       class org.apache.derby.impl.sql.catalog.DD_BuffyVersion
1:91495aa:      */
1:91495aa:     static public final int DD_BUFFY_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 373);
1:91495aa: 
1:91495aa:     /**
1:91495aa:       class org.apache.derby.impl.sql.catalog.DD_MulanVersion
1:91495aa:      */
1:91495aa:     static public final int DD_MULAN_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 376);
1:91495aa: 
1:91495aa:     /**
1:91495aa:       class org.apache.derby.impl.sql.catalog.DD_IvanovaVersion
1:91495aa:      */
1:91495aa:     static public final int DD_IVANOVA_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 396);
1:91495aa: 
1:91495aa:     /**
1:91495aa:       class org.apache.derby.impl.sql.catalog.DD_DB2J72
1:91495aa:       now mapped to a single class DD_Version.
1:91495aa:       5.0 databases will have this as the format identifier for their
1:91495aa:       catalog version number.
1:91495aa:      */
1:91495aa:     static public final int DD_DB2J72_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 401);
1:91495aa: 
1:91495aa:     /**
1:91495aa:       class org.apache.derby.impl.sql.catalog.DD_Version
1:91495aa:       now mapped to a single class DD_Version.
1:91495aa:       5.1 and later databases will have this as the format identifier for their
1:91495aa:       catalog version number.
1:91495aa:     */
1:91495aa:     static public final int DD_ARWEN_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 402);
1:91495aa:     
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:91495aa:      */
1:91495aa:     static public final int LONGVARCHAR_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 230);
1:91495aa:     
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:91495aa:      */
1:91495aa:     static public final int LONGVARCHAR_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 256);
1:91495aa: 
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:91495aa:      */
1:91495aa:     static public final int CLOB_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 444);
1:91495aa:     
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:91495aa:      */
1:91495aa:     static public final int CLOB_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 445);
1:91495aa: 
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:91495aa:             - XXXX does not exist!!!
1:91495aa:      */
1:91495aa:     static public final int LONGVARBIT_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 232);
1:91495aa: 
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:91495aa:             - XXXX does not exist!!!
1:91495aa:      */
1:91495aa:     static public final int LONGVARBIT_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 255);
1:91495aa: 
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:91495aa:             - XXXX does not exist!!!
1:91495aa:     But for BLOB we do the same as for LONGVARBIT, only need different ids
1:91495aa:      */
1:91495aa:     static public final int BLOB_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 440);
1:91495aa: 
1:91495aa:     /**
1:91495aa:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:91495aa:             - XXXX does not exist!!!
1:91495aa:     But for BLOB we do the same as for LONGVARBIT, only need different ids
1:91495aa:      */
1:91495aa:     static public final int BLOB_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 441);
1:91495aa: 
1:91495aa:     /**
1:91495aa:             Instance of TypeId for XML data types.
1:91495aa:      */
1:91495aa:     static public final int XML_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 456);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.JSQLType
1:91495aa:      */
1:91495aa:     static public final int JSQLTYPEIMPL_ID =
1:91495aa:             (MIN_ID_2 + 307);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.RowListImpl
1:91495aa:      */
1:91495aa:     static public final int ROW_LIST_V01_ID =
1:91495aa:             (MIN_ID_2 + 239);
1:91495aa:     
1:91495aa:     /**
1:2e83f13:      * DataTypeDescriptor (runtime type) new format from 10.4
1:2e83f13:      * onwards that reflects the change in role from is a TypeDescriptor
1:2e83f13:      * to has a TypeDescriptor. Fixes the format so that information
1:2e83f13:      * is not duplicated.
1:2e83f13:      * Old format number was DATA_TYPE_SERVICES_IMPL_V01_ID (259).
1:91495aa:      */
1:2e83f13:     static public final int DATA_TYPE_DESCRIPTOR_V02_ID =
1:91495aa:             (MIN_ID_2 + 240);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.IndexRowGeneratorImpl
1:91495aa:      */
1:91495aa:     static public final int INDEX_ROW_GENERATOR_V01_ID =
1:91495aa:             (MIN_ID_2 + 268);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.iapi.services.io.FormatableBitSet
1:91495aa:      */
1:91495aa:     static public final int BITIMPL_V01_ID =
1:91495aa:             (MIN_ID_2 + 269);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.iapi.services.io.FormatableArrayHolder
1:91495aa:      */
1:91495aa:     static public final int FORMATABLE_ARRAY_HOLDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 270);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.iapi.services.io.FormatableProperties
1:91495aa:      */
1:91495aa:     static public final int FORMATABLE_PROPERTIES_V01_ID =
1:91495aa:             (MIN_ID_2 + 271);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.iapi.services.io.FormatableIntHolder
1:91495aa:      */
1:91495aa:     static public final int FORMATABLE_INT_HOLDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 303);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.iapi.services.io.FormatableLongHolder
1:91495aa:      */
1:91495aa:     static public final int FORMATABLE_LONG_HOLDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 329);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.iapi.services.io.FormatableHashtable
1:91495aa:      */
1:91495aa:     static public final int FORMATABLE_HASHTABLE_V01_ID =
1:91495aa:             (MIN_ID_2 + 313);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.NationalCharTypeId
1:91495aa:      */
1:111785f:     //static public final int NATIONAL_CHAR_TYPE_ID =
1:111785f:             //(MIN_ID_2 + 370);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.NationalLongvarcharTypeId
1:91495aa:      */
1:111785f:     //static public final int NATIONAL_LONGVARCHAR_TYPE_ID =
1:111785f:             //(MIN_ID_2 + 362);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.NationalLongvarcharTypeId
1:91495aa:      */
1:111785f:     //static public final int NCLOB_TYPE_ID = 
1:111785f:             //(MIN_ID_2 + 448);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.NationalVarcharTypeId
1:91495aa:      */
1:111785f:     //static public final int NATIONAL_VARCHAR_TYPE_ID =
1:111785f:             //(MIN_ID_2 + 369);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.SchemaDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int SCHEMA_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 371);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.catalog.ColumnDescriptorFinder
1:91495aa:      */
1:91495aa:     static public final int COLUMN_DESCRIPTOR_FINDER_V01_ID =
1:91495aa:             (MIN_ID_2 + 393);
1:bb40bcb: 
1:bb40bcb:     /**
1:bb40bcb:     class org.apache.derby.impl.sql.catalog.SequenceDescriptorFinder
1:bb40bcb:      */
1:bb40bcb:     static public final int SEQUENCE_DESCRIPTOR_FINDER_V01_ID =
1:bb40bcb:             (MIN_ID_2 + 472);
1:bb40bcb: 
1:bb40bcb:     static public final int PERM_DESCRIPTOR_FINDER_V01_ID = (MIN_ID_2 + 473);
1:91495aa:         
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **      DependencySystem Formats
1:91495aa:     **
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /**
1:91495aa:         Unused 243
1:91495aa:      */
1:91495aa:     static public final int UNUSED_243 =
1:91495aa:             (MIN_ID_2 + 243);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
1:91495aa:     ||
1:91495aa:     ||            DEPRECATED
1:91495aa:     ||
1:91495aa:     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
1:2d2e717: 
1:91495aa:     class org.apache.derby.impl.sql.catalog.OIDImpl
1:91495aa:      */
1:91495aa:     static public final int OIDIMPL_V01_ID =
1:91495aa:             (MIN_ID_2 + 15);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.BooleanTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int BOOLEAN_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 16);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.CharTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int CHAR_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 17);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.DoubleTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int DOUBLE_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 18);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.IntTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int INT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 19);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.RealTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int REAL_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 20);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.RefTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int REF_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 21);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.SmallintTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int SMALLINT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 22);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.LongintTypeIdImpl
1:91495aa:      */
1:3bb140c:     static public final int BIGINT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 23);
1:eac0369:         
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:91495aa:      */
1:91495aa:     //static public final int USERDEFINED_TYPE_ID_IMPL =
1:91495aa:     //      (MIN_ID_2 + 24);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:91495aa:      */
1:91495aa:     //static public final int USERDEFINED_TYPE_ID_IMPL_V2 =
1:91495aa:     //      (MIN_ID_2 + 264);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int USERDEFINED_TYPE_ID_IMPL_V3 =
1:91495aa:             (MIN_ID_2 + 264);
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:91495aa:      */
1:91495aa:     static public final int DATE_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 32);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:91495aa:      */
1:91495aa:     static public final int TIME_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 33);
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:91495aa:      */
1:91495aa:     static public final int TIMESTAMP_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 34);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.MinAggregator
1:91495aa:      */
1:91495aa:     static public final int AGG_MIN_V01_ID =
1:91495aa:             (MIN_ID_2 + 153);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.CountStarAggregator
1:91495aa:      */
1:91495aa:     static public final int AGG_COUNT_STAR_V01_ID =
1:91495aa:             (MIN_ID_2 + 150);
1:eac0369: 
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.VarcharTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int VARCHAR_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 25);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.impl.sql.catalog.ParameterDescriptorImpl
1:91495aa:      */
1:91495aa:     static public final int PARAMETER_DESCRIPTOR_V01_ID =
1:91495aa:             (MIN_ID_2 + 26);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.BitTypeId
1:91495aa:      */
1:91495aa:     static public final int BIT_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 27);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.BitTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int BIT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 28);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.VarbitTypeId
1:91495aa:      */
1:91495aa:     static public final int VARBIT_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 29);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.VarbitTypeId
1:91495aa:      */
1:91495aa:     static public final int VARBIT_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 258);
1:91495aa:     
1:91495aa:     /**
1:91495aa:             class org.apache.derby.catalog.types.VarbitTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int VARBIT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 30);
1:eac0369: 
1:eac0369: 
1:91495aa:     /**
1:91495aa:             class org.apache.derby.catalog.types.IndexDescriptorImpl
1:91495aa:      */
1:91495aa:     static public final int INDEX_DESCRIPTOR_IMPL_V02_ID =
1:91495aa:             (MIN_ID_2 + 387);
1:28e234d:     
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.TinyintTypeId
1:91495aa:      */
1:91495aa:     static public final int TINYINT_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 195);
1:91495aa:     
1:91495aa:     /**
1:91495aa:             class org.apache.derby.catalog.types.TinyintTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int TINYINT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 196);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.DecimalTypeId
1:91495aa:      */
1:91495aa:     static public final int DECIMAL_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 197);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.DateTypeId
1:91495aa:      */
1:91495aa:     static public final int DATE_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 40);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.TimeTypeId
1:91495aa:      */
1:91495aa:     static public final int TIME_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 35);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.TimestampTypeId
1:91495aa:      */
1:91495aa:     static public final int TIMESTAMP_TYPE_ID =
1:eac0369:                 (MIN_ID_2 + 36);
1:eac0369:         
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.DecimalTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int DECIMAL_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 198);
1:eac0369: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int LONGVARCHAR_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 231);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
1:91495aa:      */
1:91495aa:     static public final int CLOB_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 446);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
1:91495aa:             - does nto exist
1:91495aa:      */
1:91495aa:     static public final int LONGVARBIT_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 233);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
1:91495aa:         - does not exist, 
1:91495aa:         but we do it the same way for BLOB as for Longvarbit...
1:91495aa:      */
1:91495aa:     static public final int BLOB_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 442);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.BitTypeId
1:91495aa:      */
1:91495aa:     static public final int BIT_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 253);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.DecimalTypeId
1:91495aa:      */
1:91495aa:     static public final int DECIMAL_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 254);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.TinyintTypeId
1:91495aa:      */
1:91495aa:     static public final int TINYINT_COMPILATION_TYPE_ID =
1:91495aa:             (MIN_ID_2 + 257);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.NationalCharTypeIdImpl
1:91495aa:      */
1:111785f:     //static public final int NATIONAL_CHAR_TYPE_ID_IMPL =
1:111785f:             //(MIN_ID_2 + 366);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.NationalVarcharTypeIdImpl
1:91495aa:      */
1:111785f:     //static public final int NATIONAL_VARCHAR_TYPE_ID_IMPL =
1:111785f:             //(MIN_ID_2 + 367);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
1:91495aa:      */
1:111785f:     //static public final int NATIONAL_LONGVARCHAR_TYPE_ID_IMPL =
1:111785f:             //(MIN_ID_2 + 368);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
1:91495aa:      */
1:111785f:     //static public final int NCLOB_TYPE_ID_IMPL =
1:111785f:             //(MIN_ID_2 + 449);
1:91495aa:     
1:91495aa:     /**
1:91495aa:         class org.apache.derby.iapi.types.XML (implementation of
1:91495aa:         org.apache.derby.iapi.types.XMLDataValue).
1:91495aa:      */
1:91495aa:     static public final int XML_TYPE_ID_IMPL =
1:91495aa:             (MIN_ID_2 + 457);
1:4aef9b0: 
1:fbb0d4f:     // 468 unused
1:fbb0d4f:     //        (MIN_ID_2 + 468);
1:91495aa: 
1:4aef9b0:     public static final int ROW_MULTISET_TYPE_ID_IMPL = 
1:4aef9b0:             (MIN_ID_2 + 469);
1:4aef9b0:     
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **      Execution MODULE CLASSES
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.RenameConstantAction
1:91495aa:     */
1:91495aa:     static public final int RENAME_CONSTANT_ACTION_V01_ID   =
1:91495aa:             (MIN_ID_2 + 390);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.DeleteConstantAction
1:91495aa:      */
1:91495aa:     static public final int DELETE_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 37);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.InsertConstantAction
1:91495aa:      */
1:91495aa:     static public final int INSERT_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 38);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.UpdateConstantAction
1:91495aa:      */
1:91495aa:     static public final int UPDATABLE_VTI_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 375);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.UpdateConstantAction
1:91495aa:      */
1:91495aa:     static public final int UPDATE_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 39);
1:91495aa: 
1:91495aa:     /**
1:508a010:         class org.apache.derby.impl.sql.execute.MatchingClauseConstantAction
1:508a010:      */
1:508a010:     static public final int MATCHING_CLAUSE_CONSTANT_ACTION_V01_ID =
1:508a010:             (MIN_ID_2 + 476);
1:508a010: 
1:508a010:     /**
1:508a010:         class org.apache.derby.impl.sql.execute.MatchingClauseConstantAction
1:508a010:      */
1:508a010:     static public final int MERGE_CONSTANT_ACTION_V01_ID =
1:508a010:             (MIN_ID_2 + 477);
1:508a010: 
1:508a010:     /**
1:91495aa:      */
1:91495aa:     static public final int UNUSED_2_204 =
1:91495aa:             (MIN_ID_2 + 204);
1:91495aa: 
1:91495aa:     /**
2:eac0369:         UNUSED
1:91495aa:      */
1:91495aa:     static public final int UNUSED_2_41 =
1:91495aa:             (MIN_ID_2 + 41);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.DropAliasConstantAction
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_42 =
1:91495aa:             (MIN_ID_2 + 42);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.CreateSchemaConstantAction
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_141    =
1:91495aa:             (MIN_ID_2 + 141);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_142    =
1:91495aa:             (MIN_ID_2 + 142);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.CreateViewConstantAction
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_143    =
1:91495aa:             (MIN_ID_2 + 143);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_144    =
1:91495aa:             (MIN_ID_2 + 144);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.ProviderInfo
1:91495aa:      */
1:91495aa:     static public final int PROVIDER_INFO_V01_ID =
1:91495aa:             (MIN_ID_2 + 148);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.AvgAggregator
1:91495aa:      */
1:91495aa:     static public final int AGG_AVG_V01_ID =
1:91495aa:             (MIN_ID_2 + 149);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.CountAggregator
1:91495aa:      */
1:91495aa:     static public final int AGG_COUNT_V01_ID =
1:91495aa:             (MIN_ID_2 + 151);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.MaxMinAggregator
1:91495aa:      */
1:91495aa:     static public final int AGG_MAX_MIN_V01_ID =
1:91495aa:             (MIN_ID_2 + 152);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.SumAggregator
1:91495aa:      */
1:91495aa:     static public final int AGG_SUM_V01_ID =
1:91495aa:             (MIN_ID_2 + 154);
1:91495aa: 
1:91495aa:     /**
1:91495aa:      class org.apache.derby.Database.Language.Execution.UserAggregatorAggregator
1:91495aa:     */
1:91495aa:     static public final int AGG_USER_ADAPTOR_V01_ID =
1:91495aa:             (MIN_ID_2 + 323);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.StatisticsConstantAction
1:91495aa:     */
1:91495aa:     static public final int STATISTICS_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 155);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Database.Language.Execution.LockTableConstantAction
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_275 =
1:91495aa:             (MIN_ID_2 + 275);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_221    =
1:91495aa:             (MIN_ID_2 + 221);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
1:91495aa:     */
1:91495aa:     static public final int UNUSED_2_222    =
1:91495aa:             (MIN_ID_2 + 222);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.AlterSPSConstantAction
1:91495aa:     */
1:91495aa:     static public final int ALTER_SPS_CONSTANT_ACTION_V01_ID        =
1:91495aa:             (MIN_ID_2 + 229);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.IndexColumnOrder
1:91495aa:     */
1:91495aa:     static public final int INDEX_COLUMN_ORDER_V01_ID       =
1:91495aa:             (MIN_ID_2 + 218);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.AggregateInfo
1:91495aa:     */
1:91495aa:     static public final int AGG_INFO_V01_ID =
1:91495aa:             (MIN_ID_2 + 223);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.AggregateInfoList
1:91495aa:     */
1:91495aa:     static public final int AGG_INFO_LIST_V01_ID    =
1:91495aa:             (MIN_ID_2 + 224);
1:91495aa: 
1:91495aa:     /**
1:91495aa:        class org.apache.derby.Database.Language.Execution.DeleteConstantAction
1:91495aa:        This class is abstract so it doesn't need a format id!
1:91495aa:      */
1:91495aa:     static public final int WRITE_CURSOR_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 227);
1:91495aa: 
1:91495aa:     /**
1:6b90f28:      * 237 - unused
1:91495aa:       */
1:6b90f28:     //static public final int VALUE_ROW_V01_ID =
1:6b90f28:     //        (MIN_ID_2 + 237);
1:91495aa: 
1:91495aa:     /**
1:6b90f28:       238 unused
1:91495aa:      */
1:6b90f28:     //static public final int INDEX_ROW_V01_ID =
1:6b90f28:     //       (MIN_ID_2 + 238);
1:91495aa: 
1:91495aa:      /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.ConstraintInfo
1:91495aa:      */
1:91495aa:     static public final int CONSTRAINT_INFO_V01_ID  =
1:91495aa:             (MIN_ID_2 + 278);
1:91495aa: 
1:489530b:     /** Class org.apache.derby.iapi.sql.execute.ExecRowBuilder. */
1:489530b:     int EXEC_ROW_BUILDER_ID = MIN_ID_2 + 279;
1:489530b: 
1:91495aa:     /**
1:91495aa:      */
1:91495aa:     static public final int UNUSED_2_280 =
1:91495aa:             (MIN_ID_2 + 280);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.FKInfo
1:91495aa:      */
1:91495aa:     static public final int FK_INFO_V01_ID  =
1:91495aa:             (MIN_ID_2 + 282);
1:91495aa: 
1:91495aa:     /**
1:91495aa:      */
1:91495aa:     static public final int UNUSED_2_289    =
1:91495aa:             (MIN_ID_2 + 289);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.execute.TriggerInfo
1:91495aa:      */
1:91495aa:     static public final int TRIGGER_INFO_V01_ID     =
1:91495aa:             (MIN_ID_2 + 317);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.execute.TransactionConstantAction
1:91495aa:      */
1:91495aa:     static public final int TRANSACTION_CONSTANT_ACTION_V01_ID      =
1:91495aa:             (MIN_ID_2 + 318);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.Database.Language.Execution.SetTriggersConstantAction
1:91495aa:      */
1:91495aa:     static public final int SET_TRIGGERS_CONSTANT_ACTION_V01_ID     =
1:91495aa:             (MIN_ID_2 + 321);
1:91495aa: 
1:91495aa:     /**
1:91495aa:         class org.apache.derby.Replication.Database.Language.Execution.RepSetTriggersConstantAction
1:91495aa:      */
1:91495aa:     static public final int REP_SET_TRIGGERS_CONSTANT_ACTION_V01_ID =
1:91495aa:             (MIN_ID_2 + 322);
1:91495aa: 
1:91495aa:     ////////////////////////////////////////////////////////////////////////////
1:91495aa:     //
1:91495aa:     // New versions of 2.0 Language ConstantActions, versioned in 3.0
1:91495aa:     //
1:91495aa:     ////////////////////////////////////////////////////////////////////////////
1:91495aa: 
1:91495aa: 
1:91495aa:     /** class org.apache.derby.Database.Language.Execution.SetSchemaConstantAction */
1:91495aa:     static public final int SET_SCHEMA_CONSTANT_ACTION_V02_ID                       = (MIN_ID_2 + 353);
1:91495aa: 
1:91495aa:     /** class org.apache.derby.Database.Language.Execution.SetTransactionIsolationConstantAction */
1:91495aa:     static public final int SET_TRANSACTION_ISOLATION_CONSTANT_ACTION_V02_ID = (MIN_ID_2 + 354);
1:91495aa: 
1:91495aa:     /** class org.apache.derby.impl.sql.execute.ColumnInfo */
1:91495aa:     static public final int COLUMN_INFO_V02_ID                      = (MIN_ID_2 + 358);
1:91495aa: 
1:91495aa:     /** class org.apache.derby.Database.Language.DependencySystem.Generic.ProviderInfo */
1:91495aa:     static public final int PROVIDER_INFO_V02_ID                    = (MIN_ID_2 + 359);
1:91495aa: 
1:91495aa:     /** class org.apache.derby.impl.sql.execute.SavepointConstantAction */
1:91495aa:     static public final int SAVEPOINT_V01_ID                      = (MIN_ID_2 + 452);
1:91495aa: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **      LanguageInterface MODULE CLASSES
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.GenericStorablePreparedStatement
1:91495aa:      */
1:91495aa:     static public final int STORABLE_PREPARED_STATEMENT_V01_ID      =
1:91495aa:             (MIN_ID_2 + 225);
1:91495aa:     
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.GenericResultDescription
1:91495aa:      */
1:91495aa:     static public final int GENERIC_RESULT_DESCRIPTION_V01_ID       =
1:91495aa:             (MIN_ID_2 + 228);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     UNUSED
1:91495aa:      */
1:91495aa:     static public final int UNUSED_2_215    = (MIN_ID_2 + 215);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.GenericTypeDescriptor
1:91495aa:      */
1:91495aa:     static public final int GENERIC_TYPE_DESCRIPTOR_V01_ID  =
1:91495aa:             (MIN_ID_2 + 216);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.GenericTypeId
1:91495aa:      */
1:91495aa:     static public final int GENERIC_TYPE_ID_V01_ID  =
1:91495aa:             (MIN_ID_2 + 217);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.CursorTableReference
1:91495aa:      */
1:91495aa:     static public final int CURSOR_TABLE_REFERENCE_V01_ID   =
1:91495aa:             (MIN_ID_2 + 296);
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.CursorInfo
1:91495aa:      */
1:91495aa:     static public final int CURSOR_INFO_V01_ID      =
1:91495aa:             (MIN_ID_2 + 297);
1:91495aa: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **      ALIAS INFO CLASSES
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.ClassAliasInfo
1:91495aa:      */
1:91495aa:     static public final int CLASS_ALIAS_INFO_V01_ID =
1:91495aa:             (MIN_ID_2 + 310);
1:eac0369: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.MethodAliasInfo
1:91495aa:      */
1:91495aa:     static public final int METHOD_ALIAS_INFO_V01_ID        =
1:91495aa:             (MIN_ID_2 + 312);
1:eac0369: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.WorkUnitAliasInfo
1:91495aa:      */
1:91495aa:     static public final int WORK_UNIT_ALIAS_INFO_V01_ID     =
1:91495aa:             (MIN_ID_2 + 309);
1:eac0369: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.UserAggregateAliasInfo
1:91495aa:      */
1:91495aa:     static public final int USER_AGGREGATE_ALIAS_INFO_V01_ID        =
1:91495aa:             (MIN_ID_2 + 311);
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:91495aa:     public static final int ROUTINE_INFO_V01_ID = (MIN_ID_2 + 451);
1:91495aa:     public static final int SYNONYM_INFO_V01_ID = (MIN_ID_2 + 455);
1:fa292b9:     public static final int UDT_INFO_V01_ID = (MIN_ID_2 + 474);
1:22d64f5:     public static final int AGGREGATE_INFO_V01_ID = (MIN_ID_2 + 475);
1:eac0369: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **	DEFAULT INFO CLASSES
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:             
1:91495aa:     /**
1:91495aa:     class org.apache.derby.catalog.types.DefaultInfoImpl
1:91495aa:      */
1:91495aa:     static public final int DEFAULT_INFO_IMPL_V01_ID =
1:91495aa:             (MIN_ID_2 + 326);
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:eac0369: 
1:91495aa:     /**
1:91495aa:     class org.apache.derby.impl.sql.GenericColumnDescriptor
1:91495aa:      */
1:91495aa:     static public final int GENERIC_COLUMN_DESCRIPTOR_V02_ID        =
1:91495aa:             (MIN_ID_2 + 383);
1:eac0369: 
1:eac0369: 
1:91495aa:     /**
1:91495aa:             UNUSED (MIN_ID_2 + 384)
1:91495aa:     */
1:eac0369: 
1:91495aa:     /**
1:91495aa:         UNUSED (MIN_ID_2 + 382)
1:91495aa:      */
1:91495aa: 
1:eac0369:     
1:eac0369: 
1:eac0369: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **  Type system id's
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:eac0369: 
1:91495aa:     public static final int SQL_BOOLEAN_ID = 
1:91495aa:             (MIN_ID_2 + 77);
1:eac0369: 
1:91495aa:     public static final int SQL_CHAR_ID = 
1:91495aa:             (MIN_ID_2 + 78);
1:eac0369: 
1:91495aa:     public static final int SQL_DOUBLE_ID = 
1:91495aa:             (MIN_ID_2 + 79);
1:eac0369: 
1:91495aa:     public static final int SQL_INTEGER_ID = 
1:91495aa:             (MIN_ID_2 + 80);
1:91495aa: 
1:91495aa:     public static final int SQL_REAL_ID = 
1:91495aa:             (MIN_ID_2 + 81);
1:91495aa: 
1:91495aa:     public static final int SQL_REF_ID = 
1:91495aa:             (MIN_ID_2 + 82);
1:91495aa: 
1:91495aa:     public static final int SQL_SMALLINT_ID = 
1:91495aa:             (MIN_ID_2 + 83);
1:91495aa: 
1:91495aa:     public static final int SQL_LONGINT_ID = 
1:91495aa:             (MIN_ID_2 + 84);
1:92268ac: 
1:91495aa:     public static final int SQL_VARCHAR_ID = 
1:91495aa:             (MIN_ID_2 + 85);
1:91495aa: 
1:91495aa:     //public static final int SQL_USERTYPE_ID = 
1:91495aa:     //      (MIN_ID_2 + 86);
1:91495aa: 
1:91495aa:     //public static final int SQL_USERTYPE_ID_V2 = 
1:91495aa:     //      (MIN_ID_2 + 266);
1:91495aa: 
1:91495aa:     public static final int SQL_USERTYPE_ID_V3 = 
1:91495aa:             (MIN_ID_2 + 266);
1:91495aa: 
1:91495aa:     public static final int SQL_DATE_ID = 
1:91495aa:             (MIN_ID_2 + 298);
1:91495aa: 
1:91495aa:     public static final int SQL_TIME_ID = 
1:91495aa:             (MIN_ID_2 + 299);
1:91495aa: 
1:91495aa:     public static final int SQL_TIMESTAMP_ID = 
1:91495aa:             (MIN_ID_2 + 31);
1:91495aa: 
1:91495aa:     public static final int SQL_BIT_ID = 
1:91495aa:             (MIN_ID_2 + 87);
1:91495aa: 
1:91495aa:     public static final int SQL_VARBIT_ID = 
1:91495aa:             (MIN_ID_2 + 88);
1:91495aa: 
1:91495aa:     public static final int SQL_TINYINT_ID = 
1:91495aa:             (MIN_ID_2 + 199);
1:91495aa: 
1:91495aa:     public static final int SQL_DECIMAL_ID = 
1:91495aa:             (MIN_ID_2 + 200);
1:91495aa: 
1:91495aa:     public static final int SQL_LONGVARCHAR_ID =
1:91495aa:             (MIN_ID_2 + 235);
1:91495aa: 
1:91495aa:     public static final int SQL_CLOB_ID =
1:91495aa:             (MIN_ID_2 + 447);
1:91495aa: 
1:91495aa:     public static final int SQL_LONGVARBIT_ID =
1:91495aa:             (MIN_ID_2 + 234);
1:91495aa: 
1:91495aa:     public static final int SQL_BLOB_ID =
1:91495aa:             (MIN_ID_2 + 443);
1:91495aa: 
1:111785f:     //public static final int SQL_NATIONAL_CHAR_ID = 
1:111785f:             //(MIN_ID_2 + 363);
1:91495aa: 
1:111785f:     //public static final int SQL_NATIONAL_VARCHAR_ID = 
1:111785f:             //(MIN_ID_2 + 364);
1:91495aa: 
1:111785f:     //public static final int SQL_NATIONAL_LONGVARCHAR_ID = 
1:111785f:             //(MIN_ID_2 + 365);
1:91495aa: 
1:111785f:     //public static final int SQL_NCLOB_ID = 
1:111785f:             //(MIN_ID_2 + 450);
1:91495aa: 
1:91495aa:     // Interface: org.apache.derby.iapi.types.XMLDataValue
1:91495aa:     public static final int XML_ID = 
1:91495aa:             (MIN_ID_2 + 458);
1:91495aa: 
1:91495aa:     /******************************************************************
1:91495aa:     ** 
1:91495aa:     ** Access ids.
1:91495aa:     **
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     public static final int ACCESS_U8_V1_ID =
1:91495aa:             (MIN_ID_2 + 89);
1:91495aa: 
1:91495aa:     public static final int ACCESS_HEAP_ROW_LOCATION_V1_ID =
1:91495aa:             (MIN_ID_2 + 90);
1:91495aa: 
1:91495aa:     public static final int ACCESS_HEAP_V2_ID =
1:91495aa:             (MIN_ID_2 + 91);
1:91495aa: 
1:91495aa:     public static final int ACCESS_B2I_V2_ID =
1:91495aa:             (MIN_ID_2 + 92);
1:91495aa: 
1:91495aa:     public static final int ACCESS_FORMAT_ID =
1:91495aa:             (MIN_ID_2 + 93);
1:91495aa: 
1:91495aa:     public static final int ACCESS_T_STRINGCOLUMN_ID =
1:91495aa:             (MIN_ID_2 + 94);
1:91495aa: 
1:91495aa:     public static final int ACCESS_B2IUNDO_V1_ID =
1:91495aa:             (MIN_ID_2 + 95);
1:eac0369: 
1:eac0369:     // Deleted as part of 7.2 rebrand project.
1:eac0369: 
1:eac0369:     /*
1:91495aa:     public static final int ACCESS_CONGLOMDIR_V1_ID =
1:91495aa:             (MIN_ID_2 + 96);
1:91495aa:     */
1:eac0369: 
1:91495aa:     public static final int ACCESS_BTREE_LEAFCONTROLROW_V1_ID =
1:91495aa:             (MIN_ID_2 + 133);
1:eac0369: 
1:91495aa:     public static final int ACCESS_BTREE_BRANCHCONTROLROW_V1_ID =
1:91495aa:             (MIN_ID_2 + 134);
1:eac0369: 
1:91495aa:     public static final int ACCESS_SERIALIZABLEWRAPPER_V1_ID =
1:91495aa:             (MIN_ID_2 + 202);
1:91495aa: 
1:91495aa:     public static final int ACCESS_B2I_STATIC_COMPILED_V1_ID =
1:91495aa:             (MIN_ID_2 + 360);
1:eac0369: 
1:eac0369:     public static final int ACCESS_TREE_V1_ID =
1:91495aa:             (MIN_ID_2 + 386);
1:b61f876: 
1:eac0369: 
1:91495aa:     public static final int ACCESS_B2I_V3_ID =
1:91495aa:             (MIN_ID_2 + 388);
1:eac0369: 
1:91495aa:     public static final int ACCESS_GISTUNDO_V1_ID =
1:91495aa:             (MIN_ID_2 + 389);
1:eac0369: 
1:91495aa:     public static final int ACCESS_GIST_LEAFCONTROLROW_V1_ID =
1:91495aa:             (MIN_ID_2 + 394);
1:eac0369: 
1:91495aa:     public static final int ACCESS_GIST_BRANCHCONTROLROW_V1_ID =
1:91495aa:             (MIN_ID_2 + 395);
1:eac0369: 
1:91495aa:     public static final int STATISTICS_IMPL_V01_ID =
1:91495aa:             (MIN_ID_2 + 397);
1:eac0369: 
1:91495aa:     public static final int UPDATE_STATISTICS_CONSTANT_ACTION_ID =
1:91495aa:             (MIN_ID_2 +     398);
1:eac0369: 
1:91495aa:     public static final int DROP_STATISTICS_CONSTANT_ACTION_ID =
1:91495aa:             (MIN_ID_2 + 399);
1:eac0369: 
1:91495aa:     public static final int ACCESS_GIST_RTREE_V1_ID =
1:91495aa:             (MIN_ID_2 + 400);
1:eac0369: 
1:91495aa:     public static final int ACCESS_T_RECTANGLE_ID =
1:91495aa:             (MIN_ID_4 + 34);
1:eac0369: 
1:b61f876:     public static final int ACCESS_T_INTCOL_V1_ID =      
1:b61f876:             (MIN_ID_4 + 4);
1:b61f876: 
1:b61f876:     public static final int ACCESS_B2I_V4_ID =
1:b61f876:             (MIN_ID_2 + 466);
1:b61f876: 
1:b61f876:     public static final int ACCESS_HEAP_V3_ID =
1:b61f876:             (MIN_ID_2 + 467);
1:eac0369: 
1:28e234d:     public static final int ACCESS_B2I_V5_ID = 
1:28e234d:             (MIN_ID_2 + 470);
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     ** PropertyConglomerate
1:91495aa:     ** 
1:91495aa:     ** 
1:91495aa:     ** 
1:91495aa:     ******************************************************************/
1:91495aa:     /** class org.apache.derby.impl.store.access.PropertyConglomerate */
1:91495aa:       
1:91495aa:     static public final int PC_XENA_VERSION_ID =
1:91495aa:             (MIN_ID_2 + 15);
1:eac0369: 
1:eac0369: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     ** Raw Store Log operation Ids
1:91495aa:     **
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.ChainAllocPageOperation */
1:91495aa:     public static final int LOGOP_CHAIN_ALLOC_PAGE = 
1:91495aa:             (MIN_ID_2 + 97);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.BeginXact */
1:91495aa:     public static final int LOGOP_BEGIN_XACT = 
1:91495aa:             (MIN_ID_2 + 169);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.log.CheckpointOperation */
1:91495aa:     public static final int LOGOP_CHECKPOINT =
1:91495aa:             (MIN_ID_2 + 263);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.ContainerOperation */
1:91495aa:     /* creating, dropping, removing container */
1:91495aa:     public static final int LOGOP_CONTAINER = 
1:91495aa:             (MIN_ID_2 + 242);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.DeleteOperation */
1:91495aa:     public static final int LOGOP_DELETE = 
1:91495aa:             (MIN_ID_2 + 101);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.EndXact */
1:91495aa:     public static final int LOGOP_END_XACT = 
1:91495aa:             (MIN_ID_2 + 102);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.InsertOperation */
1:91495aa:     public static final int LOGOP_INSERT = 
1:91495aa:             (MIN_ID_2 + 103);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.LogicalUndoOperation */
1:91495aa:     public static final int LOGOP_PAGE_LOGICAL_UNDO = 
1:91495aa:             (MIN_ID_2 + 104);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.PhysicalUndoOperation */
1:91495aa:     public static final int LOGOP_PAGE_PHYSICAL_UNDO = 
1:91495aa:             (MIN_ID_2 + 105);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.PurgeOperation */
1:91495aa:     public static final int LOGOP_PURGE = 
1:91495aa:             (MIN_ID_2 + 106);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.ContainerUndoOperation */
1:91495aa:     public static final int LOGOP_CONTAINER_UNDO = 
1:91495aa:             (MIN_ID_2 + 107);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.UpdateOperation */
1:91495aa:     public static final int LOGOP_UPDATE =
1:91495aa:             (MIN_ID_2 + 108);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.UpdateFieldOperation */
1:91495aa:     public static final int LOGOP_UPDATE_FIELD =
1:91495aa:             (MIN_ID_2 + 109);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.CopyRowsOperation */
1:91495aa:     public static final int LOGOP_COPY_ROWS = 
1:91495aa:             (MIN_ID_2 + 210);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.AllocPageOperation */
1:91495aa:     public static final int LOGOP_ALLOC_PAGE = 
1:91495aa:             (MIN_ID_2 + 111);
1:eac0369: 
1:91495aa:     /*org.apache.derby.impl.store.raw.data.InitPageOperation */
1:91495aa:     public static final int LOGOP_INIT_PAGE =
1:91495aa:             (MIN_ID_2 + 241);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.InvalidatePageOperation */
1:91495aa:     public static final int LOGOP_INVALIDATE_PAGE =
1:91495aa:             (MIN_ID_2 + 113);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.SetReservedSpaceOperation */
1:91495aa:     public static final int LOGOP_SET_RESERVED_SPACE = 
1:91495aa:             (MIN_ID_2 + 287);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.RemoveFileOperation */
1:91495aa:     public static final int LOGOP_REMOVE_FILE =
1:91495aa:             (MIN_ID_2 + 291);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.log.ChecksumOperation */
1:91495aa:     public static final int LOGOP_CHECKSUM =
1:91495aa:             (MIN_ID_2 + 453);
1:d609ee3: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2 */
1:91495aa:     public static final int LOGOP_COMPRESS10_2_SPACE =
1:91495aa:             (MIN_ID_2 + 454);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation */
1:91495aa:     public static final int LOGOP_COMPRESS_SPACE =
2:91495aa:             (MIN_ID_2 + 465);
1:04a2f12: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.EncryptContainerOperation */
1:91495aa:     public static final int LOGOP_ENCRYPT_CONTAINER =
1:91495aa:             (MIN_ID_2 + 459);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.EncryptContainerUndoOperation */
1:91495aa:     public static final int LOGOP_ENCRYPT_CONTAINER_UNDO =
1:91495aa:             (MIN_ID_2 + 460);
1:eac0369: 
1:91495aa:     /*******************************************************************
1:91495aa:     **
1:91495aa:     ** container types
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /* org.apache.derby.impl.store.raw.data.FileContainer */
1:91495aa:     public static final int RAW_STORE_SINGLE_CONTAINER_FILE = 
1:91495aa:             (MIN_ID_2 + 116);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.StreamFileContainer */
1:91495aa:     public static final int RAW_STORE_SINGLE_CONTAINER_STREAM_FILE = 
1:91495aa:             (MIN_ID_2 + 290);
1:eac0369: 
1:91495aa:     /*******************************************************************
1:91495aa:     **
1:91495aa:     ** page types
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /* org.apache.derby.impl.store.raw.data.StoredPage */
1:91495aa:     public static final int RAW_STORE_STORED_PAGE =
1:91495aa:             (MIN_ID_2 + 117);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.data.AllocPage */
1:91495aa:     public static final int RAW_STORE_ALLOC_PAGE =
1:91495aa:             (MIN_ID_2 + 118);
1:eac0369: 
1:eac0369: 
1:91495aa:     /*****************************************************************
1:91495aa:     **
1:91495aa:     ** Log files
1:91495aa:     **
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /* org.apache.derby.impl.store.raw.log.LogToFile */
1:91495aa:     public static final int FILE_STREAM_LOG_FILE = 
1:91495aa:             (MIN_ID_2 + 128);
1:eac0369: 
1:eac0369: 
1:91495aa:     /*****************************************************************
1:91495aa:     **
1:91495aa:     ** Log record
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /* org.apache.derby.impl.store.raw.log.LogRecord */
1:91495aa:     public static final int LOG_RECORD = 
1:91495aa:             (MIN_ID_2 + 129);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.log.LogCounter */
1:91495aa:     public static final int LOG_COUNTER = 
1:91495aa:             (MIN_ID_2 + 130);
1:eac0369: 
1:91495aa:     /******************************************************************
1:91495aa:     **
1:91495aa:     **  identifiers
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:91495aa:     /* org.apache.derby.impl.services.uuid.BasicUUID */
1:91495aa:     public static final int BASIC_UUID = 
1:91495aa:             (MIN_ID_2 + 131);
1:eac0369: 
1:91495aa:     /*
1:91495aa:      *      Transaction Ids
1:91495aa:      */
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.GlobalXactId */
1:91495aa:     public static final int RAW_STORE_GLOBAL_XACT_ID_V20 = 
1:91495aa:             (MIN_ID_2 + 132);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.XactId */
1:91495aa:     public static final int RAW_STORE_XACT_ID = 
1:91495aa:             (MIN_ID_2 + 147);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.XAXactId */
1:91495aa:     public static final int RAW_STORE_GLOBAL_XACT_ID_NEW = 
1:91495aa:             (MIN_ID_2 + 328);
1:eac0369: 
1:91495aa:     /*
1:91495aa:      * Transaction table
1:91495aa:      */
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.TransactionTableEntry */
1:91495aa:     public static final int RAW_STORE_TRANSACTION_TABLE_ENTRY =
1:91495aa:             (MIN_ID_2 + 261);
1:eac0369: 
1:91495aa:     /* org.apache.derby.impl.store.raw.xact.TransactionTable */
1:91495aa:     public static final int RAW_STORE_TRANSACTION_TABLE =
1:91495aa:             (MIN_ID_2 + 262);
1:91495aa: 
1:eac0369: 
1:91495aa:    /******************************************************************
1:91495aa:     **
1:91495aa:     **  UDPATE MAX_ID_2 WHEN YOU ADD A NEW FORMATABLE
1:91495aa:     **
1:91495aa:     ******************************************************************/
1:eac0369: 
1:eac0369: 
1:91495aa:     /*
1:91495aa:      * Make sure this is updated when a new module is added
1:91495aa:      */
1:91495aa:     public static final int MAX_ID_2 =
1:508a010:             (MIN_ID_2 + 477);
1:91495aa: 
1:91495aa:     // DO NOT USE 4 BYTE IDS ANYMORE
1:91495aa:     static public final int MAX_ID_4 =
1:b61f876:             (MIN_ID_4 + 34);
1:eac0369: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:211adc3
/////////////////////////////////////////////////////////////////////////
1:      * Class org.apache.derby.impl.sql.catalog.TriggerDescriptor.
commit:d9878ca
/////////////////////////////////////////////////////////////////////////
0:      * Class org.apache.derby.impl.sql.catalog.TriggerDescriptor, used for
0:      * trigger descriptors if the dictionary version is 10.11 or higher.
1:      */
0:     static public final int TRIGGER_DESCRIPTOR_V02_ID =
0:             (MIN_ID_2 + 315);
1: 
1:     /**
0:      * Class org.apache.derby.impl.sql.catalog.TriggerDescriptor_v10_10, used
0:      * for trigger descriptors if the dictionary version is 10.10 or lower.
/////////////////////////////////////////////////////////////////////////
commit:489530b
/////////////////////////////////////////////////////////////////////////
1:     /** Class org.apache.derby.iapi.sql.execute.ExecRowBuilder. */
1:     int EXEC_ROW_BUILDER_ID = MIN_ID_2 + 279;
1: 
commit:daaebdb
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:373cf9d
/////////////////////////////////////////////////////////////////////////
1:   <LI>The format of the stored object. All implementations which support
1:   <P>An object should implement the Formatable interface to support a
1:   of interfaces an implementation must support when it supports
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:044afae
/////////////////////////////////////////////////////////////////////////
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:508a010
/////////////////////////////////////////////////////////////////////////
1:         class org.apache.derby.impl.sql.execute.MatchingClauseConstantAction
1:      */
1:     static public final int MATCHING_CLAUSE_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 476);
1: 
1:     /**
1:         class org.apache.derby.impl.sql.execute.MatchingClauseConstantAction
1:      */
1:     static public final int MERGE_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 477);
1: 
1:     /**
/////////////////////////////////////////////////////////////////////////
1:             (MIN_ID_2 + 477);
commit:22d64f5
/////////////////////////////////////////////////////////////////////////
1:     public static final int AGGREGATE_INFO_V01_ID = (MIN_ID_2 + 475);
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 475);
commit:9495437
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 474);
commit:92268ac
/////////////////////////////////////////////////////////////////////////
0:         class org.apache.derby.iapi.types.PasswordTypeId
1:      */
0:     static public final int PASSWORD_TYPE_ID =
0:             (MIN_ID_2 + 475);
1:     
1:     /**
0:         class org.apache.derby.catalog.types.PasswordTypeIdImpl
1:      */
0:     static public final int PASSWORD_TYPE_ID_IMPL =
0:             (MIN_ID_2 + 476);
1:     
1:     /**
/////////////////////////////////////////////////////////////////////////
0:     public static final int SQL_PASSWORD_ID = 
0:             (MIN_ID_2 + 477);
1: 
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 477);
commit:fa292b9
/////////////////////////////////////////////////////////////////////////
1:     public static final int UDT_INFO_V01_ID = (MIN_ID_2 + 474);
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 474);
commit:bb40bcb
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.SequenceDescriptorFinder
1:      */
1:     static public final int SEQUENCE_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 472);
1: 
1:     static public final int PERM_DESCRIPTOR_FINDER_V01_ID = (MIN_ID_2 + 473);
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 473);
commit:4aef9b0
/////////////////////////////////////////////////////////////////////////
0:     public static final int ROW_MULTISET_CATALOG_ID = 
0:             (MIN_ID_2 + 468);
1: 
1:     public static final int ROW_MULTISET_TYPE_ID_IMPL = 
1:             (MIN_ID_2 + 469);
1:     
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 469);
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:3bb140c
/////////////////////////////////////////////////////////////////////////
1:     static public final int BIGINT_TYPE_ID =
/////////////////////////////////////////////////////////////////////////
1:     static public final int BIGINT_TYPE_ID_IMPL =
commit:7e729b6
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:      */
1:     static public final int ROLE_GRANT_FINDER_V01_ID =
1:             (MIN_ID_2 + 471);
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 471);
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:28e234d
/////////////////////////////////////////////////////////////////////////
1:     
/////////////////////////////////////////////////////////////////////////
1:     public static final int ACCESS_B2I_V5_ID = 
1:             (MIN_ID_2 + 470);
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 470);
commit:b61f876
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:     public static final int ACCESS_T_INTCOL_V1_ID =      
1:             (MIN_ID_4 + 4);
1: 
1:     public static final int ACCESS_B2I_V4_ID =
1:             (MIN_ID_2 + 466);
1: 
1:     public static final int ACCESS_HEAP_V3_ID =
1:             (MIN_ID_2 + 467);
/////////////////////////////////////////////////////////////////////////
0:             (MIN_ID_2 + 467);
1:             (MIN_ID_4 + 34);
commit:91495aa
/////////////////////////////////////////////////////////////////////////
1:     /** Byte length of a two byt format id. */
1:     int  TWO_BYTE_FORMAT_ID_BYTE_LENGTH = 2;
1:     /** Minimum value for a two byte format id. */
1:     int  MIN_TWO_BYTE_FORMAT_ID = 0; //16384
1:     /** Maximum value for a two byte format id. */
1:     int  MAX_TWO_BYTE_FORMAT_ID = 0x7FFF; //32767
1:     
1:     int MIN_ID_2 = MIN_TWO_BYTE_FORMAT_ID;
1:     // TEMP DJD
1:     int MIN_ID_4 = MIN_ID_2 + 403;
1:     /******************************************************************
1:     **      How to add an ID for another Formatable class 
1:     **
1:     **      o       In the list of constants below, identify the module that
1:     **              defines your class.
1:     **
1:     **      o       Add your class to the list to the end of that module 
1:     **              use a number that is one greater than all existing formats
1:     **              in that module, see MAX_ID_2 or MAX_ID_4 at the end of the 
1:     **              file, these are the largest existing formatId.
1:     **
1:     **      o       update MAX_ID_2 and MAX_ID_4
1:     **
1:     **
1:     **      o       Make sure that the getFormatId() method for your class
1:     **              returns the constant that you just made up.
1:     **
1:     **      o       Now find your module startup code that registers Format
1:     **              IDs. Add your class to that list.
1:     **
1:     **      o   Add a test for your new format ID to T_StoredFormat.java
1:     **
1:     ******************************************************************/
1:     /******************************************************************
1:     **
1:     **      Formats for the StoredFormatModule
1:     **
1:     **
1:     **
1:     ******************************************************************/
1:     /** Special format id for any null referance */
1:     static public final int NULL_FORMAT_ID =
1:             (MIN_ID_2 + 0);
1:     /** Special format id for tagging UTF8 strings */
1:     static public final int STRING_FORMAT_ID =
1:             (MIN_ID_2 + 1);
1:     /** Special format id for tagging Serializable objects. */
1:     static public final int SERIALIZABLE_FORMAT_ID =
1:             (MIN_ID_2 + 2);
1:     
1:     /******************************************************************
1:     **
1:     **      DataDictionary Formats
1:     **
1:     **
1:     **
1:     ******************************************************************/
1:     /**
1:         class org.apache.derby.iapi.types.BooleanTypeId
1:     static public final int BOOLEAN_TYPE_ID =
1:             (MIN_ID_2 + 4);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.BooleanTypeId
1:     static public final int BOOLEAN_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 260);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.CharTypeId
1:     static public final int CHAR_TYPE_ID =
1:             (MIN_ID_2 + 5);
1:     /**
1:         class org.apache.derby.iapi.types.CharTypeId
1:     static public final int CHAR_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 244);
1:     /**
1:         class org.apache.derby.iapi.types.DoubleTypeId
1:     static public final int DOUBLE_TYPE_ID =
1:             (MIN_ID_2 + 6);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.DoubleTypeId
1:      */
1:     static public final int DOUBLE_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 245);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.IntTypeId
1:      */
1:     static public final int INT_TYPE_ID =                            
1:             (MIN_ID_2 + 7);
1:     /**
1:         class org.apache.derby.iapi.types.IntTypeId
1:     static public final int INT_COMPILATION_TYPE_ID =                                
1:             (MIN_ID_2 + 246);
1:     /**
1:         class org.apache.derby.iapi.types.RealTypeId
1:     static public final int REAL_TYPE_ID =
1:             (MIN_ID_2 + 8);
1:     /**
1:         class org.apache.derby.iapi.types.RealTypeId
1:     static public final int REAL_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 247);
1:     /**
1:         class org.apache.derby.iapi.types.RefTypeId
1:     static public final int REF_TYPE_ID =
1:             (MIN_ID_2 + 9);
1:     /**
1:         class org.apache.derby.iapi.types.RefTypeId
1:     static public final int REF_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 248);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.SmallintTypeId
1:     static public final int SMALLINT_TYPE_ID =
1:             (MIN_ID_2 + 10);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.SmallintTypeId
1:     static public final int SMALLINT_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 249);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.LongintTypeId
0:     static public final int LONGINT_TYPE_ID =
1:             (MIN_ID_2 + 11);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.LongintTypeId
1:     static public final int LONGINT_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 250);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.UserDefinedTypeId
1:     //static public final int USERDEFINED_TYPE_ID =
1:     //      (MIN_ID_2 + 12);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.UserDefinedTypeIdV2
1:     //static public final int USERDEFINED_TYPE_ID_V2 =
1:     //      (MIN_ID_2 + 267);
1:     /**
1:         class org.apache.derby.iapi.types.UserDefinedTypeIdV3
1:     static public final int USERDEFINED_TYPE_ID_V3 =
1:             (MIN_ID_2 + 267);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.UserDefinedTypeId
1:     static public final int USERDEFINED_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 251);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.UserDefinedTypeIdV2
1:     static public final int USERDEFINED_COMPILATION_TYPE_ID_V2 =
1:             (MIN_ID_2 + 265);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.VarcharTypeId
1:      */
1:     static public final int VARCHAR_TYPE_ID =
1:             (MIN_ID_2 + 13);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.VarcharTypeId
1:      */
1:     static public final int VARCHAR_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 252);
1:     
1:     /**
1:     class org.apache.derby.catalog.types.TypeDescriptorImpl
1:     static public final int DATA_TYPE_IMPL_DESCRIPTOR_V01_ID =
1:             (MIN_ID_2 + 14);
1:     
1:     /**
0:             class com.ibm.db2j.protcol.Datatypes.Execution.DataTypeDescriptor
1:     static public final int DATA_TYPE_SERVICES_IMPL_V01_ID =
1:             (MIN_ID_2 + 259);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.ConglomerateDescriptorFinder
1:     static public final int CONGLOMERATE_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 135);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.ConstraintDescriptorFinder
1:     static public final int CONSTRAINT_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 208);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.DefaultDescriptorFinder
1:     static public final int DEFAULT_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 325);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.AliasDescriptorFinder
1:     static public final int ALIAS_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 136);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.TableDescriptorFinder
1:     static public final int TABLE_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 137);
1:     /**
1:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:     static public final int ROUTINE_PERMISSION_FINDER_V01_ID =
1:             (MIN_ID_2 + 461);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:     static public final int TABLE_PERMISSION_FINDER_V01_ID =
1:             (MIN_ID_2 + 462);
1:     /**
1:     class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:     static public final int COLUMNS_PERMISSION_FINDER_V01_ID =
1:             (MIN_ID_2 + 463);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.DataDictionaryDescriptorFinder
1:     static public final int DATA_DICTIONARY_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 138);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.ViewDescriptorFinder
1:     static public final int VIEW_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 145);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.SPSDescriptorFinder
1:     static public final int SPS_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 226);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.FileInfoFinder
1:      */
1:     static public final int FILE_INFO_FINDER_V01_ID =
1:             (MIN_ID_2 + 273);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
1:      */
1:     static public final int TRIGGER_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 320);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
1:      */
1:     static public final int TRIGGER_DESCRIPTOR_V01_ID =
1:             (MIN_ID_2 + 316);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.DD_SocratesVersion
1:      */
1:     static public final int DD_SOCRATES_VERSION_ID =
1:             (MIN_ID_2 + 174);
1:     
1:     /**
1:     class org.apache.derby.catalog.types.ReferencedColumnsDescriptorImpl
1:      */
1:     static public final int REFERENCED_COLUMNS_DESCRIPTOR_IMPL_V01_ID =
1:             (MIN_ID_2 + 205);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.DD_PlatoVersion
1:      */
1:     static public final int DD_PLATO_VERSION_ID =
1:             (MIN_ID_2 + 206);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.DD_AristotleVersion
1:      */
1:     static public final int DD_ARISTOTLE_VERSION_ID =
1:             (MIN_ID_2 + 272);
1: 
1:     /**
1:       class org.apache.derby.impl.sql.catalog.DD_XenaVersion
1:      */
1:     static public final int DD_XENA_VERSION_ID =
1:             (MIN_ID_2 + 302);
1: 
1:     /**
1:       class org.apache.derby.impl.sql.catalog.DD_BuffyVersion
1:      */
1:     static public final int DD_BUFFY_VERSION_ID =
1:             (MIN_ID_2 + 373);
1: 
1:     /**
1:       class org.apache.derby.impl.sql.catalog.DD_MulanVersion
1:      */
1:     static public final int DD_MULAN_VERSION_ID =
1:             (MIN_ID_2 + 376);
1: 
1:     /**
1:       class org.apache.derby.impl.sql.catalog.DD_IvanovaVersion
1:      */
1:     static public final int DD_IVANOVA_VERSION_ID =
1:             (MIN_ID_2 + 396);
1: 
1:     /**
1:       class org.apache.derby.impl.sql.catalog.DD_DB2J72
1:       now mapped to a single class DD_Version.
1:       5.0 databases will have this as the format identifier for their
1:       catalog version number.
1:      */
1:     static public final int DD_DB2J72_VERSION_ID =
1:             (MIN_ID_2 + 401);
1: 
1:     /**
1:       class org.apache.derby.impl.sql.catalog.DD_Version
1:       now mapped to a single class DD_Version.
1:       5.1 and later databases will have this as the format identifier for their
1:       catalog version number.
1:     */
1:     static public final int DD_ARWEN_VERSION_ID =
1:             (MIN_ID_2 + 402);
1:     
1:     /**
1:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:      */
1:     static public final int LONGVARCHAR_TYPE_ID =
1:             (MIN_ID_2 + 230);
1:     
1:     /**
1:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:      */
1:     static public final int LONGVARCHAR_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 256);
1: 
1:     /**
1:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:      */
1:     static public final int CLOB_TYPE_ID =
1:             (MIN_ID_2 + 444);
1:     
1:     /**
1:             class org.apache.derby.iapi.types.LongvarcharTypeId
1:      */
1:     static public final int CLOB_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 445);
1: 
1:     /**
1:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:             - XXXX does not exist!!!
1:      */
1:     static public final int LONGVARBIT_TYPE_ID =
1:             (MIN_ID_2 + 232);
1: 
1:     /**
1:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:             - XXXX does not exist!!!
1:      */
1:     static public final int LONGVARBIT_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 255);
1: 
1:     /**
1:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:             - XXXX does not exist!!!
1:     But for BLOB we do the same as for LONGVARBIT, only need different ids
1:      */
1:     static public final int BLOB_TYPE_ID =
1:             (MIN_ID_2 + 440);
1: 
1:     /**
1:             class org.apache.derby.iapi.types.LongvarbitTypeId
1:             - XXXX does not exist!!!
1:     But for BLOB we do the same as for LONGVARBIT, only need different ids
1:      */
1:     static public final int BLOB_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 441);
1: 
1:     /**
1:             Instance of TypeId for XML data types.
1:      */
1:     static public final int XML_TYPE_ID =
1:             (MIN_ID_2 + 456);
1:     
1:     /**
0:         class org.apache.derby.iapi.types.SqlXmlUtil
1:     */
0:     static public final int SQL_XML_UTIL_V01_ID =
0:             (MIN_ID_2 + 464);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.JSQLType
1:      */
1:     static public final int JSQLTYPEIMPL_ID =
1:             (MIN_ID_2 + 307);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.RowListImpl
1:      */
1:     static public final int ROW_LIST_V01_ID =
1:             (MIN_ID_2 + 239);
1:     
1:     /**
0:     class org.apache.derby.impl.sql.catalog.ListOfRowListsImpl
1:      */
0:     static public final int UNUSED_240 =
1:             (MIN_ID_2 + 240);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.IndexRowGeneratorImpl
1:      */
1:     static public final int INDEX_ROW_GENERATOR_V01_ID =
1:             (MIN_ID_2 + 268);
1: 
1:     /**
1:     class org.apache.derby.iapi.services.io.FormatableBitSet
1:      */
1:     static public final int BITIMPL_V01_ID =
1:             (MIN_ID_2 + 269);
1: 
1:     /**
1:     class org.apache.derby.iapi.services.io.FormatableArrayHolder
1:      */
1:     static public final int FORMATABLE_ARRAY_HOLDER_V01_ID =
1:             (MIN_ID_2 + 270);
1:     
1:     /**
1:     class org.apache.derby.iapi.services.io.FormatableProperties
1:      */
1:     static public final int FORMATABLE_PROPERTIES_V01_ID =
1:             (MIN_ID_2 + 271);
1: 
1:     /**
1:     class org.apache.derby.iapi.services.io.FormatableIntHolder
1:      */
1:     static public final int FORMATABLE_INT_HOLDER_V01_ID =
1:             (MIN_ID_2 + 303);
1:     
1:     /**
1:     class org.apache.derby.iapi.services.io.FormatableLongHolder
1:      */
1:     static public final int FORMATABLE_LONG_HOLDER_V01_ID =
1:             (MIN_ID_2 + 329);
1: 
1:     /**
1:     class org.apache.derby.iapi.services.io.FormatableHashtable
1:      */
1:     static public final int FORMATABLE_HASHTABLE_V01_ID =
1:             (MIN_ID_2 + 313);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.NationalCharTypeId
1:      */
0:     static public final int NATIONAL_CHAR_TYPE_ID =
0:             (MIN_ID_2 + 370);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.NationalLongvarcharTypeId
1:      */
0:     static public final int NATIONAL_LONGVARCHAR_TYPE_ID =
0:             (MIN_ID_2 + 362);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.NationalLongvarcharTypeId
1:      */
0:     static public final int NCLOB_TYPE_ID = 
0:             (MIN_ID_2 + 448);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.NationalVarcharTypeId
1:      */
0:     static public final int NATIONAL_VARCHAR_TYPE_ID =
0:             (MIN_ID_2 + 369);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.catalog.SchemaDescriptorFinder
1:      */
1:     static public final int SCHEMA_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 371);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.catalog.ColumnDescriptorFinder
1:      */
1:     static public final int COLUMN_DESCRIPTOR_FINDER_V01_ID =
1:             (MIN_ID_2 + 393);
1:     /******************************************************************
1:     **
1:     **      DependencySystem Formats
1:     **
1:     **
1:     **
1:     ******************************************************************/
1:     /**
1:         Unused 243
1:      */
1:     static public final int UNUSED_243 =
1:             (MIN_ID_2 + 243);
1:     
1:     /**
1:     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
1:     ||
1:     ||            DEPRECATED
1:     ||
1:     ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
1:     class org.apache.derby.impl.sql.catalog.OIDImpl
1:      */
1:     static public final int OIDIMPL_V01_ID =
1:             (MIN_ID_2 + 15);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.BooleanTypeIdImpl
1:      */
1:     static public final int BOOLEAN_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 16);
1: 
1:     /**
1:         class org.apache.derby.catalog.types.CharTypeIdImpl
1:      */
1:     static public final int CHAR_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 17);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.DoubleTypeIdImpl
1:      */
1:     static public final int DOUBLE_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 18);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.IntTypeIdImpl
1:      */
1:     static public final int INT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 19);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.RealTypeIdImpl
1:      */
1:     static public final int REAL_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 20);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.RefTypeIdImpl
1:      */
1:     static public final int REF_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 21);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.SmallintTypeIdImpl
1:      */
1:     static public final int SMALLINT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 22);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.LongintTypeIdImpl
1:      */
0:     static public final int LONGINT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 23);
1:     /**
1:         class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:      */
1:     //static public final int USERDEFINED_TYPE_ID_IMPL =
1:     //      (MIN_ID_2 + 24);
1:     /**
1:         class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:      */
1:     //static public final int USERDEFINED_TYPE_ID_IMPL_V2 =
1:     //      (MIN_ID_2 + 264);
1:     /**
1:         class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:      */
1:     static public final int USERDEFINED_TYPE_ID_IMPL_V3 =
1:             (MIN_ID_2 + 264);
1:     /**
1:         class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:      */
1:     static public final int DATE_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 32);
1:     /**
1:         class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:      */
1:     static public final int TIME_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 33);
1:     /**
1:         class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:      */
1:     static public final int TIMESTAMP_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 34);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.MinAggregator
1:      */
1:     static public final int AGG_MIN_V01_ID =
1:             (MIN_ID_2 + 153);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.CountStarAggregator
1:      */
1:     static public final int AGG_COUNT_STAR_V01_ID =
1:             (MIN_ID_2 + 150);
1:     /**
1:         class org.apache.derby.catalog.types.VarcharTypeIdImpl
1:      */
1:     static public final int VARCHAR_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 25);
1:     /**
1:         class org.apache.derby.impl.sql.catalog.ParameterDescriptorImpl
1:      */
1:     static public final int PARAMETER_DESCRIPTOR_V01_ID =
1:             (MIN_ID_2 + 26);
1:     /**
1:         class org.apache.derby.iapi.types.BitTypeId
1:      */
1:     static public final int BIT_TYPE_ID =
1:             (MIN_ID_2 + 27);
1:     /**
1:         class org.apache.derby.catalog.types.BitTypeIdImpl
1:      */
1:     static public final int BIT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 28);
1:     /**
1:         class org.apache.derby.iapi.types.VarbitTypeId
1:      */
1:     static public final int VARBIT_TYPE_ID =
1:             (MIN_ID_2 + 29);
1:     /**
1:         class org.apache.derby.iapi.types.VarbitTypeId
1:      */
1:     static public final int VARBIT_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 258);
1:     
1:     /**
1:             class org.apache.derby.catalog.types.VarbitTypeIdImpl
1:      */
1:     static public final int VARBIT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 30);
1:     /**
1:             class org.apache.derby.catalog.types.IndexDescriptorImpl
1:      */
1:     static public final int INDEX_DESCRIPTOR_IMPL_V02_ID =
1:             (MIN_ID_2 + 387);
1:     /**
1:         class org.apache.derby.iapi.types.TinyintTypeId
1:      */
1:     static public final int TINYINT_TYPE_ID =
1:             (MIN_ID_2 + 195);
1:     
1:     /**
1:             class org.apache.derby.catalog.types.TinyintTypeIdImpl
1:      */
1:     static public final int TINYINT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 196);
1:     /**
1:         class org.apache.derby.iapi.types.DecimalTypeId
1:      */
1:     static public final int DECIMAL_TYPE_ID =
1:             (MIN_ID_2 + 197);
1:     /**
1:         class org.apache.derby.iapi.types.DateTypeId
1:      */
1:     static public final int DATE_TYPE_ID =
1:             (MIN_ID_2 + 40);
1:     /**
1:         class org.apache.derby.iapi.types.TimeTypeId
1:      */
1:     static public final int TIME_TYPE_ID =
1:             (MIN_ID_2 + 35);
1:     /**
1:         class org.apache.derby.iapi.types.TimestampTypeId
1:      */
1:     static public final int TIMESTAMP_TYPE_ID =
1:     /**
1:         class org.apache.derby.catalog.types.DecimalTypeIdImpl
1:     static public final int DECIMAL_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 198);
1:     /**
1:         class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
1:     static public final int LONGVARCHAR_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 231);
1: 
1:     /**
1:         class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
1:     static public final int CLOB_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 446);
1: 
1:     /**
1:         class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
1:             - does nto exist
1:     static public final int LONGVARBIT_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 233);
1: 
1:     /**
1:         class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
1:         - does not exist, 
1:         but we do it the same way for BLOB as for Longvarbit...
1:     static public final int BLOB_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 442);
1: 
1:     /**
1:         class org.apache.derby.iapi.types.BitTypeId
1:     static public final int BIT_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 253);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.DecimalTypeId
1:     static public final int DECIMAL_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 254);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.TinyintTypeId
1:     static public final int TINYINT_COMPILATION_TYPE_ID =
1:             (MIN_ID_2 + 257);
1:     /**
1:         class org.apache.derby.catalog.types.NationalCharTypeIdImpl
0:     static public final int NATIONAL_CHAR_TYPE_ID_IMPL =
0:             (MIN_ID_2 + 366);
1:     /**
1:         class org.apache.derby.catalog.types.NationalVarcharTypeIdImpl
0:     static public final int NATIONAL_VARCHAR_TYPE_ID_IMPL =
0:             (MIN_ID_2 + 367);
1:     /**
1:         class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
0:     static public final int NATIONAL_LONGVARCHAR_TYPE_ID_IMPL =
0:             (MIN_ID_2 + 368);
1:     
1:     /**
1:         class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
0:     static public final int NCLOB_TYPE_ID_IMPL =
0:             (MIN_ID_2 + 449);
1:     
1:     /**
1:         class org.apache.derby.iapi.types.XML (implementation of
1:         org.apache.derby.iapi.types.XMLDataValue).
1:     static public final int XML_TYPE_ID_IMPL =
1:             (MIN_ID_2 + 457);
1:     /******************************************************************
1:     **
1:     **      Execution MODULE CLASSES
1:     **
1:     ******************************************************************/
1:     /**
1:     class org.apache.derby.Database.Language.Execution.RenameConstantAction
1:     */
1:     static public final int RENAME_CONSTANT_ACTION_V01_ID   =
1:             (MIN_ID_2 + 390);
1: 
1:     /**
1:         class org.apache.derby.Database.Language.Execution.DeleteConstantAction
1:     static public final int DELETE_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 37);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.InsertConstantAction
1:     static public final int INSERT_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 38);
1: 
1:     /**
1:         class org.apache.derby.Database.Language.Execution.UpdateConstantAction
1:     static public final int UPDATABLE_VTI_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 375);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.UpdateConstantAction
1:     static public final int UPDATE_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 39);
1:     /**
1:     static public final int UNUSED_2_204 =
1:             (MIN_ID_2 + 204);
1:     /**
1:     static public final int UNUSED_2_41 =
1:             (MIN_ID_2 + 41);
1:     
1:     /**
1:     class org.apache.derby.Database.Language.Execution.DropAliasConstantAction
1:     */
1:     static public final int UNUSED_2_42 =
1:             (MIN_ID_2 + 42);
1:     
1:     /**
1:     class org.apache.derby.Database.Language.Execution.CreateSchemaConstantAction
1:     */
1:     static public final int UNUSED_2_141    =
1:             (MIN_ID_2 + 141);
1:     
1:     /**
1:     */
1:     static public final int UNUSED_2_142    =
1:             (MIN_ID_2 + 142);
1:     
1:     /**
1:     class org.apache.derby.Database.Language.Execution.CreateViewConstantAction
1:     */
1:     static public final int UNUSED_2_143    =
1:             (MIN_ID_2 + 143);
1:     
1:     /**
1:     */
1:     static public final int UNUSED_2_144    =
1:             (MIN_ID_2 + 144);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.ProviderInfo
1:     static public final int PROVIDER_INFO_V01_ID =
1:             (MIN_ID_2 + 148);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.AvgAggregator
1:     static public final int AGG_AVG_V01_ID =
1:             (MIN_ID_2 + 149);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.CountAggregator
1:     static public final int AGG_COUNT_V01_ID =
1:             (MIN_ID_2 + 151);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.MaxMinAggregator
1:     static public final int AGG_MAX_MIN_V01_ID =
1:             (MIN_ID_2 + 152);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.SumAggregator
1:     static public final int AGG_SUM_V01_ID =
1:             (MIN_ID_2 + 154);
1:     /**
1:      class org.apache.derby.Database.Language.Execution.UserAggregatorAggregator
1:     */
1:     static public final int AGG_USER_ADAPTOR_V01_ID =
1:             (MIN_ID_2 + 323);
1: 
1:     /**
1:         class org.apache.derby.Database.Language.Execution.StatisticsConstantAction
1:     */
1:     static public final int STATISTICS_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 155);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RunTimeStatisticsImpl
0:     static public final int RUN_TIME_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 173);
1:     /**
1:         class org.apache.derby.Database.Language.Execution.LockTableConstantAction
1:     */
1:     static public final int UNUSED_2_275 =
1:             (MIN_ID_2 + 275);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealProjectRestrictStatistics
0:     static public final int REAL_PROJECT_RESTRICT_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 177);
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealDistinctScalarAggregateStatistics
0:     static public final int REAL_DISTINCT_SCALAR_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 284);
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealScalarAggregateStatistics
1:     */
0:     static public final int REAL_SCALAR_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 283);
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealGroupedAggregateStatistics
0:     static public final int REAL_GROUPED_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 285);
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealSortStatistics
0:     static public final int REAL_SORT_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 178);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealTableScanStatistics
1:      */
0:     static public final int REAL_TABLE_SCAN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 179);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealHashJoinStatistics
1:      */
0:     static public final int REAL_HASH_JOIN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 304);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealNestedLoopJoinStatistics
1:      */
0:     static public final int REAL_NESTED_LOOP_JOIN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 180);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealIndexRowToBaseRowStatistics
1:      */
0:     static public final int REAL_INDEX_ROW_TO_BASE_ROW_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 181);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealAnyResultSetStatistics
1:      */
0:     static public final int REAL_ANY_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 182);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealOnceResultSetStatistics
1:      */
0:     static public final int REAL_ONCE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 183);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealCurrentOfStatistics
1:      */
0:     static public final int REAL_CURRENT_OF_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 184);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealRowResultSetStatistics
1:      */
0:     static public final int REAL_ROW_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 185);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealUnionResultSetStatistics
1:      */
0:     static public final int REAL_UNION_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 186);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealHashLeftOuterJoinStatistics
1:      */
0:     static public final int REAL_HASH_LEFT_OUTER_JOIN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 305);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealNestedLoopLeftOuterJoinStatistics
1:      */
0:     static public final int REAL_NESTED_LOOP_LEFT_OUTER_JOIN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 187);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealNormalizeResultSetStatistics
1:      */
0:     static public final int REAL_NORMALIZE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 188);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealInsertResultSetStatistics
1:      */
0:     static public final int REAL_INSERT_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 189);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealInsertVTIResultSetStatistics
1:      */
0:     static public final int REAL_INSERT_VTI_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 379);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealUpdateResultSetStatistics
1:      */
0:     static public final int REAL_UPDATE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 190);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealDeleteResultSetStatistics
1:      */
0:     static public final int REAL_DELETE_VTI_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 380);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealDeleteResultSetStatistics
1:      */
0:     static public final int REAL_DELETE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 191);
1: 
1:     /**
0:        org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics"
1:      */
0:     static public final int REAL_DELETE_CASCADE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 439);
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealHashScanStatistics
1:      */
0:     static public final int REAL_HASH_SCAN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 203);
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealDistinctScanStatistics
1:      */
0:     static public final int REAL_DISTINCT_SCAN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 334);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealHashTableStatistics
1:      */
0:     static public final int REAL_HASH_TABLE_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 306);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealVTIStatistics
1:      */
0:     static public final int REAL_VTI_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 214);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealMaterializedResultSetStatistics
1:      */
0:     static public final int REAL_MATERIALIZED_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 308);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealScrollInsensitiveResultSetStatistics
1:      */
0:     static public final int REAL_SCROLL_INSENSITIVE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 330);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
1:     */
1:     static public final int UNUSED_2_221    =
1:             (MIN_ID_2 + 221);
1:     
1:     /**
1:     class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
1:     */
1:     static public final int UNUSED_2_222    =
1:             (MIN_ID_2 + 222);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.AlterSPSConstantAction
1:     */
1:     static public final int ALTER_SPS_CONSTANT_ACTION_V01_ID        =
1:             (MIN_ID_2 + 229);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.IndexColumnOrder
1:     */
1:     static public final int INDEX_COLUMN_ORDER_V01_ID       =
1:             (MIN_ID_2 + 218);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.AggregateInfo
1:     */
1:     static public final int AGG_INFO_V01_ID =
1:             (MIN_ID_2 + 223);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.AggregateInfoList
1:     */
1:     static public final int AGG_INFO_LIST_V01_ID    =
1:             (MIN_ID_2 + 224);
1: 
1:     /**
1:        class org.apache.derby.Database.Language.Execution.DeleteConstantAction
1:        This class is abstract so it doesn't need a format id!
1:      */
1:     static public final int WRITE_CURSOR_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 227);
1: 
1:     /**
0:             class org.apache.derby.Database.Language.Execution.ValueRow
1:      */
0:     static public final int VALUE_ROW_V01_ID =
0:             (MIN_ID_2 + 237);
1: 
1:     /**
0:             class org.apache.derby.Database.Language.Execution.IndexRow
1:      */
0:     static public final int INDEX_ROW_V01_ID =
0:             (MIN_ID_2 + 238);
1: 
1:     /**
0:       class org.apache.derby.impl.sql.execute.AddJarConstantAction;
1:      */
0:     static public final int ADD_JAR_CONSTANT_ACTION_V01_ID =
0:             (MIN_ID_2 + 211);
1: 
1:     /**
0:       class org.apache.derby.impl.sql.execute.DropJarConstantAction;
1:      */
0:     static public final int DROP_JAR_CONSTANT_ACTION_V01_ID =
0:             (MIN_ID_2 + 212);
1: 
1:     /**
0:       class org.apache.derby.impl.sql.execute.ReplaceJarConstantAction;
1:      */
0:     static public final int REPLACE_JAR_CONSTANT_ACTION_V01_ID =
0:             (MIN_ID_2 + 213);
1: 
1:      /**
1:     class org.apache.derby.Database.Language.Execution.ConstraintInfo
1:      */
1:     static public final int CONSTRAINT_INFO_V01_ID  =
1:             (MIN_ID_2 + 278);
1: 
1:     /**
1:      */
1:     static public final int UNUSED_2_280 =
1:             (MIN_ID_2 + 280);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.FKInfo
1:      */
1:     static public final int FK_INFO_V01_ID  =
1:             (MIN_ID_2 + 282);
1: 
1:     /**
1:      */
1:     static public final int UNUSED_2_289    =
1:             (MIN_ID_2 + 289);
1:     
1:     /**
0:     class org.apache.derby.impl.sql.execute.CreateTriggerConstantAction
1:      */
0:     static public final int CREATE_TRIGGER_CONSTANT_ACTION_V01_ID   =
0:             (MIN_ID_2 + 314);
1:     
1:     /**
0:     class org.apache.derby.impl.sql.execute.DropTriggerConstantAction
1:      */
0:     static public final int DROP_TRIGGER_CONSTANT_ACTION_V01_ID     =
0:             (MIN_ID_2 + 315);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.execute.TriggerInfo
1:      */
1:     static public final int TRIGGER_INFO_V01_ID     =
1:             (MIN_ID_2 + 317);
1: 
1:     /**
1:     class org.apache.derby.impl.sql.execute.TransactionConstantAction
1:      */
1:     static public final int TRANSACTION_CONSTANT_ACTION_V01_ID      =
1:             (MIN_ID_2 + 318);
1: 
1:     /**
1:     class org.apache.derby.Database.Language.Execution.SetTriggersConstantAction
1:      */
1:     static public final int SET_TRIGGERS_CONSTANT_ACTION_V01_ID     =
1:             (MIN_ID_2 + 321);
1: 
1:     /**
1:         class org.apache.derby.Replication.Database.Language.Execution.RepSetTriggersConstantAction
1:      */
1:     static public final int REP_SET_TRIGGERS_CONSTANT_ACTION_V01_ID =
1:             (MIN_ID_2 + 322);
1: 
1:     /**
0:         class org.apache.derby.impl.sql.execute.RealLastIndexKeyScanStatistics
1:      */
0:     static public final int REAL_LAST_INDEX_KEY_SCAN_STATISTICS_IMPL_V01_ID =
0:             (MIN_ID_2 + 327);
1: 
1:     ////////////////////////////////////////////////////////////////////////////
1:     //
1:     // New versions of 2.0 Language ConstantActions, versioned in 3.0
1:     //
1:     ////////////////////////////////////////////////////////////////////////////
1:     /** class org.apache.derby.Database.Language.Execution.SetSchemaConstantAction */
1:     static public final int SET_SCHEMA_CONSTANT_ACTION_V02_ID                       = (MIN_ID_2 + 353);
1:     /** class org.apache.derby.Database.Language.Execution.SetTransactionIsolationConstantAction */
1:     static public final int SET_TRANSACTION_ISOLATION_CONSTANT_ACTION_V02_ID = (MIN_ID_2 + 354);
1:     /** class org.apache.derby.impl.sql.execute.ColumnInfo */
1:     static public final int COLUMN_INFO_V02_ID                      = (MIN_ID_2 + 358);
1:     /** class org.apache.derby.Database.Language.DependencySystem.Generic.ProviderInfo */
1:     static public final int PROVIDER_INFO_V02_ID                    = (MIN_ID_2 + 359);
1:     /** class org.apache.derby.impl.sql.execute.SavepointConstantAction */
1:     static public final int SAVEPOINT_V01_ID                      = (MIN_ID_2 + 452);
1:     /******************************************************************
1:     **
1:     **      LanguageInterface MODULE CLASSES
1:     **
1:     ******************************************************************/
1:     /**
1:     class org.apache.derby.impl.sql.GenericStorablePreparedStatement
1:      */
1:     static public final int STORABLE_PREPARED_STATEMENT_V01_ID      =
1:             (MIN_ID_2 + 225);
1:     
1:     /**
1:     class org.apache.derby.impl.sql.GenericResultDescription
1:      */
1:     static public final int GENERIC_RESULT_DESCRIPTION_V01_ID       =
1:             (MIN_ID_2 + 228);
1:     /**
1:     UNUSED
1:      */
1:     static public final int UNUSED_2_215    = (MIN_ID_2 + 215);
1:     /**
1:     class org.apache.derby.impl.sql.GenericTypeDescriptor
1:      */
1:     static public final int GENERIC_TYPE_DESCRIPTOR_V01_ID  =
1:             (MIN_ID_2 + 216);
1:     /**
1:     class org.apache.derby.impl.sql.GenericTypeId
1:      */
1:     static public final int GENERIC_TYPE_ID_V01_ID  =
1:             (MIN_ID_2 + 217);
1:     /**
1:     class org.apache.derby.impl.sql.CursorTableReference
1:      */
1:     static public final int CURSOR_TABLE_REFERENCE_V01_ID   =
1:             (MIN_ID_2 + 296);
1:     /**
1:     class org.apache.derby.impl.sql.CursorInfo
1:      */
1:     static public final int CURSOR_INFO_V01_ID      =
1:             (MIN_ID_2 + 297);
1:     /******************************************************************
1:     **
1:     **      ALIAS INFO CLASSES
1:     **
1:     ******************************************************************/
1:     /**
1:     class org.apache.derby.catalog.types.ClassAliasInfo
1:      */
1:     static public final int CLASS_ALIAS_INFO_V01_ID =
1:             (MIN_ID_2 + 310);
1:     /**
1:     class org.apache.derby.catalog.types.MethodAliasInfo
1:      */
1:     static public final int METHOD_ALIAS_INFO_V01_ID        =
1:             (MIN_ID_2 + 312);
1:     /**
1:     class org.apache.derby.catalog.types.WorkUnitAliasInfo
1:      */
1:     static public final int WORK_UNIT_ALIAS_INFO_V01_ID     =
1:             (MIN_ID_2 + 309);
1:     /**
1:     class org.apache.derby.catalog.types.UserAggregateAliasInfo
1:      */
1:     static public final int USER_AGGREGATE_ALIAS_INFO_V01_ID        =
1:             (MIN_ID_2 + 311);
1:     public static final int ROUTINE_INFO_V01_ID = (MIN_ID_2 + 451);
1:     public static final int SYNONYM_INFO_V01_ID = (MIN_ID_2 + 455);
1:     /******************************************************************
1:     **
1:     **	DEFAULT INFO CLASSES
1:     **
1:     ******************************************************************/
1:             
1:     /**
1:     class org.apache.derby.catalog.types.DefaultInfoImpl
1:      */
1:     static public final int DEFAULT_INFO_IMPL_V01_ID =
1:             (MIN_ID_2 + 326);
1:     /**
1:     class org.apache.derby.impl.sql.GenericColumnDescriptor
1:      */
1:     static public final int GENERIC_COLUMN_DESCRIPTOR_V02_ID        =
1:             (MIN_ID_2 + 383);
1:     /**
1:             UNUSED (MIN_ID_2 + 384)
1:     */
1:     /**
1:         UNUSED (MIN_ID_2 + 382)
1:      */
1:     
1:     /******************************************************************
1:     **
1:     **  Type system id's
1:     **
1:     ******************************************************************/
1:     public static final int SQL_BOOLEAN_ID = 
1:             (MIN_ID_2 + 77);
1:     public static final int SQL_CHAR_ID = 
1:             (MIN_ID_2 + 78);
1:     public static final int SQL_DOUBLE_ID = 
1:             (MIN_ID_2 + 79);
1:     public static final int SQL_INTEGER_ID = 
1:             (MIN_ID_2 + 80);
1:     public static final int SQL_REAL_ID = 
1:             (MIN_ID_2 + 81);
1: 
1:     public static final int SQL_REF_ID = 
1:             (MIN_ID_2 + 82);
1: 
1:     public static final int SQL_SMALLINT_ID = 
1:             (MIN_ID_2 + 83);
1: 
1:     public static final int SQL_LONGINT_ID = 
1:             (MIN_ID_2 + 84);
1: 
1:     public static final int SQL_VARCHAR_ID = 
1:             (MIN_ID_2 + 85);
1: 
1:     //public static final int SQL_USERTYPE_ID = 
1:     //      (MIN_ID_2 + 86);
1: 
1:     //public static final int SQL_USERTYPE_ID_V2 = 
1:     //      (MIN_ID_2 + 266);
1: 
1:     public static final int SQL_USERTYPE_ID_V3 = 
1:             (MIN_ID_2 + 266);
1: 
1:     public static final int SQL_DATE_ID = 
1:             (MIN_ID_2 + 298);
1: 
1:     public static final int SQL_TIME_ID = 
1:             (MIN_ID_2 + 299);
1: 
1:     public static final int SQL_TIMESTAMP_ID = 
1:             (MIN_ID_2 + 31);
1: 
1:     public static final int SQL_BIT_ID = 
1:             (MIN_ID_2 + 87);
1: 
1:     public static final int SQL_VARBIT_ID = 
1:             (MIN_ID_2 + 88);
1: 
1:     public static final int SQL_TINYINT_ID = 
1:             (MIN_ID_2 + 199);
1: 
1:     public static final int SQL_DECIMAL_ID = 
1:             (MIN_ID_2 + 200);
1: 
1:     public static final int SQL_LONGVARCHAR_ID =
1:             (MIN_ID_2 + 235);
1: 
1:     public static final int SQL_CLOB_ID =
1:             (MIN_ID_2 + 447);
1: 
1:     public static final int SQL_LONGVARBIT_ID =
1:             (MIN_ID_2 + 234);
1: 
1:     public static final int SQL_BLOB_ID =
1:             (MIN_ID_2 + 443);
1: 
0:     public static final int SQL_NATIONAL_CHAR_ID = 
0:             (MIN_ID_2 + 363);
1: 
0:     public static final int SQL_NATIONAL_VARCHAR_ID = 
0:             (MIN_ID_2 + 364);
1: 
0:     public static final int SQL_NATIONAL_LONGVARCHAR_ID = 
0:             (MIN_ID_2 + 365);
1: 
0:     public static final int SQL_NCLOB_ID = 
0:             (MIN_ID_2 + 450);
1: 
1:     // Interface: org.apache.derby.iapi.types.XMLDataValue
1:     public static final int XML_ID = 
1:             (MIN_ID_2 + 458);
1: 
1:     /******************************************************************
1:     ** 
1:     ** Access ids.
1:     **
1:     **
1:     **
1:     ******************************************************************/
1:     public static final int ACCESS_U8_V1_ID =
1:             (MIN_ID_2 + 89);
1: 
1:     public static final int ACCESS_HEAP_ROW_LOCATION_V1_ID =
1:             (MIN_ID_2 + 90);
1: 
1:     public static final int ACCESS_HEAP_V2_ID =
1:             (MIN_ID_2 + 91);
1: 
1:     public static final int ACCESS_B2I_V2_ID =
1:             (MIN_ID_2 + 92);
1: 
1:     public static final int ACCESS_FORMAT_ID =
1:             (MIN_ID_2 + 93);
1: 
1:     public static final int ACCESS_T_STRINGCOLUMN_ID =
1:             (MIN_ID_2 + 94);
1: 
1:     public static final int ACCESS_B2IUNDO_V1_ID =
1:             (MIN_ID_2 + 95);
1:     public static final int ACCESS_CONGLOMDIR_V1_ID =
1:             (MIN_ID_2 + 96);
1:     public static final int ACCESS_BTREE_LEAFCONTROLROW_V1_ID =
1:             (MIN_ID_2 + 133);
1:     public static final int ACCESS_BTREE_BRANCHCONTROLROW_V1_ID =
1:             (MIN_ID_2 + 134);
1:     public static final int ACCESS_SERIALIZABLEWRAPPER_V1_ID =
1:             (MIN_ID_2 + 202);
1: 
1:     public static final int ACCESS_B2I_STATIC_COMPILED_V1_ID =
1:             (MIN_ID_2 + 360);
1:             (MIN_ID_2 + 386);
1:     public static final int ACCESS_B2I_V3_ID =
1:             (MIN_ID_2 + 388);
1:     public static final int ACCESS_GISTUNDO_V1_ID =
1:             (MIN_ID_2 + 389);
1:     public static final int ACCESS_GIST_LEAFCONTROLROW_V1_ID =
1:             (MIN_ID_2 + 394);
1:     public static final int ACCESS_GIST_BRANCHCONTROLROW_V1_ID =
1:             (MIN_ID_2 + 395);
1:     public static final int STATISTICS_IMPL_V01_ID =
1:             (MIN_ID_2 + 397);
1:     public static final int UPDATE_STATISTICS_CONSTANT_ACTION_ID =
1:             (MIN_ID_2 +     398);
1:     public static final int DROP_STATISTICS_CONSTANT_ACTION_ID =
1:             (MIN_ID_2 + 399);
1:     public static final int ACCESS_GIST_RTREE_V1_ID =
1:             (MIN_ID_2 + 400);
1:     public static final int ACCESS_T_RECTANGLE_ID =
1:             (MIN_ID_4 + 34);
0:     public static final int ACCESS_T_INTCOL_V1_ID =               MIN_ID_4 + 4;
1:     /******************************************************************
1:     **
1:     ** PropertyConglomerate
1:     ** 
1:     ** 
1:     ** 
1:     ******************************************************************/
1:     /** class org.apache.derby.impl.store.access.PropertyConglomerate */
1:       
1:     static public final int PC_XENA_VERSION_ID =
1:             (MIN_ID_2 + 15);
1:     /******************************************************************
1:     **
1:     ** Raw Store Log operation Ids
1:     **
1:     **
1:     **
1:     ******************************************************************/
1:     /* org.apache.derby.impl.store.raw.data.ChainAllocPageOperation */
1:     public static final int LOGOP_CHAIN_ALLOC_PAGE = 
1:             (MIN_ID_2 + 97);
1:     /* org.apache.derby.impl.store.raw.xact.BeginXact */
1:     public static final int LOGOP_BEGIN_XACT = 
1:             (MIN_ID_2 + 169);
1:     /* org.apache.derby.impl.store.raw.log.CheckpointOperation */
1:     public static final int LOGOP_CHECKPOINT =
1:             (MIN_ID_2 + 263);
1:     /* org.apache.derby.impl.store.raw.data.ContainerOperation */
1:     /* creating, dropping, removing container */
1:     public static final int LOGOP_CONTAINER = 
1:             (MIN_ID_2 + 242);
1:     /* org.apache.derby.impl.store.raw.data.DeleteOperation */
1:     public static final int LOGOP_DELETE = 
1:             (MIN_ID_2 + 101);
1:     /* org.apache.derby.impl.store.raw.xact.EndXact */
1:     public static final int LOGOP_END_XACT = 
1:             (MIN_ID_2 + 102);
1:     /* org.apache.derby.impl.store.raw.data.InsertOperation */
1:     public static final int LOGOP_INSERT = 
1:             (MIN_ID_2 + 103);
1:     /* org.apache.derby.impl.store.raw.data.LogicalUndoOperation */
1:     public static final int LOGOP_PAGE_LOGICAL_UNDO = 
1:             (MIN_ID_2 + 104);
1:     /* org.apache.derby.impl.store.raw.data.PhysicalUndoOperation */
1:     public static final int LOGOP_PAGE_PHYSICAL_UNDO = 
1:             (MIN_ID_2 + 105);
1:     /* org.apache.derby.impl.store.raw.data.PurgeOperation */
1:     public static final int LOGOP_PURGE = 
1:             (MIN_ID_2 + 106);
1:     /* org.apache.derby.impl.store.raw.data.ContainerUndoOperation */
1:     public static final int LOGOP_CONTAINER_UNDO = 
1:             (MIN_ID_2 + 107);
1:     /* org.apache.derby.impl.store.raw.data.UpdateOperation */
1:     public static final int LOGOP_UPDATE =
1:             (MIN_ID_2 + 108);
1:     /* org.apache.derby.impl.store.raw.data.UpdateFieldOperation */
1:     public static final int LOGOP_UPDATE_FIELD =
1:             (MIN_ID_2 + 109);
1:     /* org.apache.derby.impl.store.raw.data.CopyRowsOperation */
1:     public static final int LOGOP_COPY_ROWS = 
1:             (MIN_ID_2 + 210);
1:     /* org.apache.derby.impl.store.raw.data.AllocPageOperation */
1:     public static final int LOGOP_ALLOC_PAGE = 
1:             (MIN_ID_2 + 111);
1:     /*org.apache.derby.impl.store.raw.data.InitPageOperation */
1:     public static final int LOGOP_INIT_PAGE =
1:             (MIN_ID_2 + 241);
1:     /* org.apache.derby.impl.store.raw.data.InvalidatePageOperation */
1:     public static final int LOGOP_INVALIDATE_PAGE =
1:             (MIN_ID_2 + 113);
1:     /* org.apache.derby.impl.store.raw.data.SetReservedSpaceOperation */
1:     public static final int LOGOP_SET_RESERVED_SPACE = 
1:             (MIN_ID_2 + 287);
1:     /* org.apache.derby.impl.store.raw.data.RemoveFileOperation */
1:     public static final int LOGOP_REMOVE_FILE =
1:             (MIN_ID_2 + 291);
1:     /* org.apache.derby.impl.store.raw.log.ChecksumOperation */
1:     public static final int LOGOP_CHECKSUM =
1:             (MIN_ID_2 + 453);
1:     /* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2 */
1:     public static final int LOGOP_COMPRESS10_2_SPACE =
1:             (MIN_ID_2 + 454);
1:     /* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation */
1:     public static final int LOGOP_COMPRESS_SPACE =
1:             (MIN_ID_2 + 465);
1:     /* org.apache.derby.impl.store.raw.data.EncryptContainerOperation */
1:     public static final int LOGOP_ENCRYPT_CONTAINER =
1:             (MIN_ID_2 + 459);
1:     /* org.apache.derby.impl.store.raw.data.EncryptContainerUndoOperation */
1:     public static final int LOGOP_ENCRYPT_CONTAINER_UNDO =
1:             (MIN_ID_2 + 460);
1:     /*******************************************************************
1:     **
1:     ** container types
1:     **
1:     ******************************************************************/
1:     /* org.apache.derby.impl.store.raw.data.FileContainer */
1:     public static final int RAW_STORE_SINGLE_CONTAINER_FILE = 
1:             (MIN_ID_2 + 116);
1:     /* org.apache.derby.impl.store.raw.data.StreamFileContainer */
1:     public static final int RAW_STORE_SINGLE_CONTAINER_STREAM_FILE = 
1:             (MIN_ID_2 + 290);
1:     /*******************************************************************
1:     **
1:     ** page types
1:     **
1:     **
1:     ******************************************************************/
1:     /* org.apache.derby.impl.store.raw.data.StoredPage */
1:     public static final int RAW_STORE_STORED_PAGE =
1:             (MIN_ID_2 + 117);
1:     /* org.apache.derby.impl.store.raw.data.AllocPage */
1:     public static final int RAW_STORE_ALLOC_PAGE =
1:             (MIN_ID_2 + 118);
1:     /*****************************************************************
1:     **
1:     ** Log files
1:     **
1:     **
1:     ******************************************************************/
1:     /* org.apache.derby.impl.store.raw.log.LogToFile */
1:     public static final int FILE_STREAM_LOG_FILE = 
1:             (MIN_ID_2 + 128);
1:     /*****************************************************************
1:     **
1:     ** Log record
1:     **
1:     ******************************************************************/
1:     /* org.apache.derby.impl.store.raw.log.LogRecord */
1:     public static final int LOG_RECORD = 
1:             (MIN_ID_2 + 129);
1:     /* org.apache.derby.impl.store.raw.log.LogCounter */
1:     public static final int LOG_COUNTER = 
1:             (MIN_ID_2 + 130);
1:     /******************************************************************
1:     **
1:     **  identifiers
1:     **
1:     ******************************************************************/
1:     /* org.apache.derby.impl.services.uuid.BasicUUID */
1:     public static final int BASIC_UUID = 
1:             (MIN_ID_2 + 131);
1:     /*
1:      *      Transaction Ids
1:      */
1:     /* org.apache.derby.impl.store.raw.xact.GlobalXactId */
1:     public static final int RAW_STORE_GLOBAL_XACT_ID_V20 = 
1:             (MIN_ID_2 + 132);
1:     /* org.apache.derby.impl.store.raw.xact.XactId */
1:     public static final int RAW_STORE_XACT_ID = 
1:             (MIN_ID_2 + 147);
1:     /* org.apache.derby.impl.store.raw.xact.XAXactId */
1:     public static final int RAW_STORE_GLOBAL_XACT_ID_NEW = 
1:             (MIN_ID_2 + 328);
1:     /*
1:      * Transaction table
1:      */
1:     /* org.apache.derby.impl.store.raw.xact.TransactionTableEntry */
1:     public static final int RAW_STORE_TRANSACTION_TABLE_ENTRY =
1:             (MIN_ID_2 + 261);
1:     /* org.apache.derby.impl.store.raw.xact.TransactionTable */
1:     public static final int RAW_STORE_TRANSACTION_TABLE =
1:             (MIN_ID_2 + 262);
1:             
1:     /******************************************************************
1:     **
0:     **  LocalDriver Formatables.
1:     **
1:     ******************************************************************/
0:     /* NOT USED = org.apache.derby.impl.jdbc.ExternalizableConnection */
0:     public static final int EXTERNALIZABLE_CONNECTION_ID = (MIN_ID_2 + 192);
1:     /******************************************************************
1:     **
0:     **      InternalUtils MODULE CLASSES
1:     **
1:     ******************************************************************/
0:     /* org.apache.derby.iapi.util.ByteArray */
0:     public static final int FORMATABLE_BYTE_ARRAY_V01_ID = (MIN_ID_2 + 219);
1:    /******************************************************************
1:     **
1:     **  UDPATE MAX_ID_2 WHEN YOU ADD A NEW FORMATABLE
1:     **
1:     ******************************************************************/
1:     /*
1:      * Make sure this is updated when a new module is added
1:      */
1:     public static final int MAX_ID_2 =
1:             (MIN_ID_2 + 465);
1: 
1:     // DO NOT USE 4 BYTE IDS ANYMORE
1:     static public final int MAX_ID_4 =
0:         MIN_ID_4 + 34;
commit:04a2f12
/////////////////////////////////////////////////////////////////////////
0: 		/* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation */
0:         public static final int LOGOP_COMPRESS_SPACE =
0:                 (MIN_ID_2 + 454);
1: 
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 454);
commit:d609ee3
/////////////////////////////////////////////////////////////////////////
0:         /* org.apache.derby.impl.store.raw.log.ChecksumOperation */
0:         public static final int LOGOP_CHECKSUM =
0:                 (MIN_ID_2 + 453);
1: 
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 453);
commit:a5bdbd4
/////////////////////////////////////////////////////////////////////////
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:fbb0d4f
/////////////////////////////////////////////////////////////////////////
1:     // 468 unused
1:     //        (MIN_ID_2 + 468);
commit:2e83f13
/////////////////////////////////////////////////////////////////////////
1:      * In releases prior to 10.3 this format was produced by
1:      * DataTypeDescriptor. The format was incorrect used
1:      * in system catalogs for routine parameter and return
1:      * types. The format contained repeated information.
1:      * DERBY-2775 changed the code so that these catalog
1:      * types were written as TypeDescriptor (which is what
1:      * always had occurred for the types in SYSCOLUMNS).
1:      * <P>
1:      * This format now maps to OldRoutineType and is solely
1:      * used to read old routine types.
/////////////////////////////////////////////////////////////////////////
1:      * DataTypeDescriptor (runtime type) new format from 10.4
1:      * onwards that reflects the change in role from is a TypeDescriptor
1:      * to has a TypeDescriptor. Fixes the format so that information
1:      * is not duplicated.
1:      * Old format number was DATA_TYPE_SERVICES_IMPL_V01_ID (259).
1:     static public final int DATA_TYPE_DESCRIPTOR_V02_ID =
commit:6b90f28
/////////////////////////////////////////////////////////////////////////
1:      * 237 - unused
1:       */
1:     //static public final int VALUE_ROW_V01_ID =
1:     //        (MIN_ID_2 + 237);
1:       238 unused
1:     //static public final int INDEX_ROW_V01_ID =
1:     //       (MIN_ID_2 + 238);
commit:2d2e717
/////////////////////////////////////////////////////////////////////////
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:      */
0:         static public final int ROUTINE_PERMISSION_FINDER_V01_ID =
0:                 (MIN_ID_2 + 461);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:      */
0:         static public final int TABLE_PERMISSION_FINDER_V01_ID =
0:                 (MIN_ID_2 + 462);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.CoreDDFinderClassInfo
1:      */
0:         static public final int COLUMNS_PERMISSION_FINDER_V01_ID =
0:                 (MIN_ID_2 + 463);
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 463);
commit:6d698f7
/////////////////////////////////////////////////////////////////////////
0: 			Unused 243
0:         static public final int UNUSED_243 =
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.io.StoredFormatIds
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
1: public interface StoredFormatIds {
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.io
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: //depot/main/java/org.apache.derby.iapi.services.io/StoredFormatIds.java#211 - edit change 20974 (text)
1: package org.apache.derby.iapi.services.io;
0: /**
1:   A format id identifies a stored form of an object for the
1:   purposes of locating a class which can read the stored form and
1:   reconstruct the object using the java.io.Externalizable interface.
1: 
1:   <P>An important aspect of the format id concept is that it does
1:   not impose an implementation on the stored object. Rather,
1:   multiple implementations of an object (or interface) may share a
1:   format id. One implementation may store (write) an object
1:   and another may restore (read) the object. The implication of this
1:   is that a format id specifies the following properties of a
1:   stored object.
1: 
1:   <UL>
1:   <LI>The interface(s) the stored object must support. Any implementation
1:   which reads the object must support these interfaces.
0:   <LI>The format of the stored object. All implementaions which support
1:   the format must be able to read and write it.
1:   </UL>
1: 
0:   <P>An object should implement the Formatable inteface to support a
1:   stored format. In addition, the module which contains the object
1:   should register the object's class with the Monitor (See
1:   FormatIdUtil.register.)
1: 
1:   <P>When you add a format id to this file, please include the list
0:   of interfaces an implementaion must support when it supports
0:   the format id. When Cloudscape code reads a stored form it returns an 
1:   object of a Class which supports the stored form. A reader may
1:   cast this object to any interface listed in this file. It is an error for
1:   the reader to cast the object to a class or interface not listed in this
1:   file.
1: 
1:   <P>When you implement a class that supports a format, add a comment that
1:   states the name of the class. The first implementation of a format defines
1:   the stored form.
1: 
0:   <P>This interface defines all the format ids for Cloudscape software.
1:   If you define a format id please be sure to declare it in this
1:   file. If you remove support for a one please document that the
1:   format id is deprecated. Never remove or re-use a format id.
1:  */
0: public interface StoredFormatIds { 
1: 
0: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 
0:         /** Byte length of a two byt format id. */
0:         int  TWO_BYTE_FORMAT_ID_BYTE_LENGTH = 2;
1: 
0:         /** Minimum value for a two byte format id. */
0:         int  MIN_TWO_BYTE_FORMAT_ID = 0; //16384
0:         /** Maximum value for a two byte format id. */
0:         int  MAX_TWO_BYTE_FORMAT_ID = 0x7FFF; //32767
1:         
0:         int MIN_ID_2 = MIN_TWO_BYTE_FORMAT_ID;
1: 
0:         // TEMP DJD
0:         int MIN_ID_4 = MIN_ID_2 + 403;
1: 
0:         /******************************************************************
0:         **
0:         **      How to add an ID for another Formatable class 
0:     **
0:         **      o       In the list of constants below, identify the module that
0:         **              defines your class.
0:         **
0:         **      o       Add your class to the list to the end of that module 
0:         **              use a number that is one greater than all existing formats
0:         **              in that module, see MAX_ID_2 or MAX_ID_4 at the end of the 
0:         **              file, these are the largest existing formatId.
0:         **
0:         **      o       update MAX_ID_2 and MAX_ID_4
0:         **
0:         **
0:         **      o       Make sure that the getFormatId() method for your class
0:         **              returns the constant that you just made up.
0:         **
0:         **      o       Now find your module startup code that registers Format
0:         **              IDs. Add your class to that list.
0:         **
0:         **      o   Add a test for your new format ID to T_StoredFormat.java
0:         **
0:         ******************************************************************/
1: 
1: 
0:         /******************************************************************
0:         **
0:         **      Formats for the StoredFormatModule
0:         **
0:         **
0:         **
0:         ******************************************************************/
1: 
0:         /** Special format id for any null referance */
0:         static public final int NULL_FORMAT_ID =
0:                 (MIN_ID_2 + 0);
1: 
0:         /** Special format id for tagging UTF8 strings */
0:         static public final int STRING_FORMAT_ID =
0:                 (MIN_ID_2 + 1);
1: 
0:         /** Special format id for tagging Serializable objects. */
0:         static public final int SERIALIZABLE_FORMAT_ID =
0:                 (MIN_ID_2 + 2);
1:         
0:         /******************************************************************
0:         **
0:         **      DataDictionary Formats
0:         **
0:         **
0:         **
0:         ******************************************************************/
0:         /**
0:             class org.apache.derby.iapi.types.BooleanTypeId
1:          */
0:         static public final int BOOLEAN_TYPE_ID =
0:                 (MIN_ID_2 + 4);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.BooleanTypeId
1:          */
0:         static public final int BOOLEAN_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 260);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.CharTypeId
1:          */
0:         static public final int CHAR_TYPE_ID =
0:                 (MIN_ID_2 + 5);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.CharTypeId
1:          */
0:         static public final int CHAR_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 244);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.DoubleTypeId
1:          */
0:         static public final int DOUBLE_TYPE_ID =
0:                 (MIN_ID_2 + 6);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.DoubleTypeId
1:          */
0:         static public final int DOUBLE_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 245);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.IntTypeId
1:          */
0:         static public final int INT_TYPE_ID =                            
0:                 (MIN_ID_2 + 7);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.IntTypeId
1:          */
0:         static public final int INT_COMPILATION_TYPE_ID =                                
0:                 (MIN_ID_2 + 246);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.RealTypeId
1:          */
0:         static public final int REAL_TYPE_ID =
0:                 (MIN_ID_2 + 8);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.RealTypeId
1:          */
0:         static public final int REAL_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 247);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.RefTypeId
1:          */
0:         static public final int REF_TYPE_ID =
0:                 (MIN_ID_2 + 9);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.RefTypeId
1:          */
0:         static public final int REF_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 248);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.SmallintTypeId
1:          */
0:         static public final int SMALLINT_TYPE_ID =
0:                 (MIN_ID_2 + 10);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.SmallintTypeId
1:          */
0:         static public final int SMALLINT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 249);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.LongintTypeId
1:          */
0:         static public final int LONGINT_TYPE_ID =
0:                 (MIN_ID_2 + 11);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.LongintTypeId
1:          */
0:         static public final int LONGINT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 250);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeId
1:          */
0:         //static public final int USERDEFINED_TYPE_ID =
0:         //      (MIN_ID_2 + 12);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeIdV2
1:          */
0:         //static public final int USERDEFINED_TYPE_ID_V2 =
0:         //      (MIN_ID_2 + 267);
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeIdV3
1:          */
0:         static public final int USERDEFINED_TYPE_ID_V3 =
0:                 (MIN_ID_2 + 267);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeId
1:          */
0:         static public final int USERDEFINED_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 251);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeIdV2
1:          */
0:         static public final int USERDEFINED_COMPILATION_TYPE_ID_V2 =
0:                 (MIN_ID_2 + 265);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.VarcharTypeId
1:          */
0:         static public final int VARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 13);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.VarcharTypeId
1:          */
0:         static public final int VARCHAR_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 252);
1:         
0:         /**
0:         class org.apache.derby.catalog.types.TypeDescriptorImpl
1:         */
0:         static public final int DATA_TYPE_IMPL_DESCRIPTOR_V01_ID =
0:                 (MIN_ID_2 + 14);
1:         
0:         /**
0:                 class com.ibm.db2j.protcol.Datatypes.Execution.DataTypeDescriptor
1:          */
0:         static public final int DATA_TYPE_SERVICES_IMPL_V01_ID =
0:                 (MIN_ID_2 + 259);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ConglomerateDescriptorFinder
1:      */
0:         static public final int CONGLOMERATE_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 135);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ConstraintDescriptorFinder
1:      */
0:         static public final int CONSTRAINT_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 208);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DefaultDescriptorFinder
1:      */
0:         static public final int DEFAULT_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 325);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.AliasDescriptorFinder
1:      */
0:         static public final int ALIAS_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 136);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.TableDescriptorFinder
1:      */
0:         static public final int TABLE_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 137);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DataDictionaryDescriptorFinder
1:      */
0:         static public final int DATA_DICTIONARY_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 138);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ViewDescriptorFinder
1:      */
0:         static public final int VIEW_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 145);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.SPSDescriptorFinder
1:      */
0:         static public final int SPS_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 226);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.FileInfoFinder
1:      */
0:         static public final int FILE_INFO_FINDER_V01_ID =
0:                 (MIN_ID_2 + 273);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
1:      */
0:         static public final int TRIGGER_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 320);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
1:      */
0:         static public final int TRIGGER_DESCRIPTOR_V01_ID =
0:                 (MIN_ID_2 + 316);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DD_SocratesVersion
1:      */
0:         static public final int DD_SOCRATES_VERSION_ID =
0:                 (MIN_ID_2 + 174);
1:         
0:         /**
0:         class org.apache.derby.catalog.types.ReferencedColumnsDescriptorImpl
1:      */
0:         static public final int REFERENCED_COLUMNS_DESCRIPTOR_IMPL_V01_ID =
0:                 (MIN_ID_2 + 205);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DD_PlatoVersion
1:      */
0:         static public final int DD_PLATO_VERSION_ID =
0:                 (MIN_ID_2 + 206);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DD_AristotleVersion
1:      */
0:         static public final int DD_ARISTOTLE_VERSION_ID =
0:                 (MIN_ID_2 + 272);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_XenaVersion
1:      */
0:         static public final int DD_XENA_VERSION_ID =
0:                 (MIN_ID_2 + 302);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_BuffyVersion
1:      */
0:         static public final int DD_BUFFY_VERSION_ID =
0:                 (MIN_ID_2 + 373);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_MulanVersion
1:      */
0:         static public final int DD_MULAN_VERSION_ID =
0:                 (MIN_ID_2 + 376);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_IvanovaVersion
1:      */
0:         static public final int DD_IVANOVA_VERSION_ID =
0:                 (MIN_ID_2 + 396);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_DB2J72
0: 		  now mapped to a single class DD_Version.
0: 		  5.0 databases will have this as the format identifier for their
0: 		  catalog version number.
1:      */
0:         static public final int DD_DB2J72_VERSION_ID =
0:                 (MIN_ID_2 + 401);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_Version
0:  		  now mapped to a single class DD_Version.
0: 		  5.1 and later databases will have this as the format identifier for their
0: 		  catalog version number.
1:     */
0:         static public final int DD_ARWEN_VERSION_ID =
0:                 (MIN_ID_2 + 402);
1:         
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
1:          */
0:         static public final int LONGVARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 230);
1:         
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
1:          */
0:         static public final int LONGVARCHAR_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 256);
1: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
1:          */
0:         static public final int CLOB_TYPE_ID =
0:                 (MIN_ID_2 + 444);
1:         
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
1:          */
0:         static public final int CLOB_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 445);
1: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
1:          */
0:         static public final int LONGVARBIT_TYPE_ID =
0:                 (MIN_ID_2 + 232);
1: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
1:          */
0:         static public final int LONGVARBIT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 255);
1: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
0:         But for BLOB we do the same as for LONGVARBIT, only need different ids
1:          */
0:         static public final int BLOB_TYPE_ID =
0:                 (MIN_ID_2 + 440);
1: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
0:         But for BLOB we do the same as for LONGVARBIT, only need different ids
1:          */
0:         static public final int BLOB_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 441);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.JSQLType
1:          */
0:         static public final int JSQLTYPEIMPL_ID =
0:                 (MIN_ID_2 + 307);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.RowListImpl
1:      */
0:         static public final int ROW_LIST_V01_ID =
0:                 (MIN_ID_2 + 239);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ListOfRowListsImpl
1:      */
0:         static public final int UNUSED_240 =
0:                 (MIN_ID_2 + 240);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.IndexRowGeneratorImpl
1:      */
0:         static public final int INDEX_ROW_GENERATOR_V01_ID =
0:                 (MIN_ID_2 + 268);
1: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableBitSet
1:      */
0:         static public final int BITIMPL_V01_ID =
0:                 (MIN_ID_2 + 269);
1: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableArrayHolder
1:      */
0:         static public final int FORMATABLE_ARRAY_HOLDER_V01_ID =
0:                 (MIN_ID_2 + 270);
1:         
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableProperties
1:      */
0:         static public final int FORMATABLE_PROPERTIES_V01_ID =
0:                 (MIN_ID_2 + 271);
1: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableIntHolder
1:      */
0:         static public final int FORMATABLE_INT_HOLDER_V01_ID =
0:                 (MIN_ID_2 + 303);
1:         
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableLongHolder
1:      */
0:         static public final int FORMATABLE_LONG_HOLDER_V01_ID =
0:                 (MIN_ID_2 + 329);
1: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableHashtable
1:      */
0:         static public final int FORMATABLE_HASHTABLE_V01_ID =
0:                 (MIN_ID_2 + 313);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalCharTypeId
1:          */
0:         static public final int NATIONAL_CHAR_TYPE_ID =
0:                 (MIN_ID_2 + 370);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalLongvarcharTypeId
1:          */
0:         static public final int NATIONAL_LONGVARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 362);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalLongvarcharTypeId
1:          */
0:         static public final int NCLOB_TYPE_ID = 
0:                 (MIN_ID_2 + 448);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalVarcharTypeId
1:          */
0:         static public final int NATIONAL_VARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 369);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.SchemaDescriptorFinder
1:      */
0:         static public final int SCHEMA_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 371);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ColumnDescriptorFinder
1:      */
0:         static public final int COLUMN_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 393);
1:         
0:         /******************************************************************
0:         **
0:         **      DependencySystem Formats
0:         **
0:         **
0:         **
0:         ******************************************************************/
0:         /**
0:             class org.apache.derby.iapi.sql.depend.DependableList
1:          */
0:         static public final int DEPENDABLE_LIST_ID =
0:                 (MIN_ID_2 + 243);
1:         
0:         /**
0:           ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
0:           ||
0:           ||            DEPRECATED
0:           ||
0:           ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
1: 
0:         class org.apache.derby.impl.sql.catalog.OIDImpl
1:      */
0:         static public final int OIDIMPL_V01_ID =
0:                 (MIN_ID_2 + 15);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.BooleanTypeIdImpl
1:          */
0:         static public final int BOOLEAN_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 16);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.CharTypeIdImpl
1:          */
0:         static public final int CHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 17);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.DoubleTypeIdImpl
1:          */
0:         static public final int DOUBLE_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 18);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.IntTypeIdImpl
1:          */
0:         static public final int INT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 19);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.RealTypeIdImpl
1:          */
0:         static public final int REAL_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 20);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.RefTypeIdImpl
1:          */
0:         static public final int REF_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 21);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.SmallintTypeIdImpl
1:          */
0:         static public final int SMALLINT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 22);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.LongintTypeIdImpl
1:          */
0:         static public final int LONGINT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 23);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:          */
0:         //static public final int USERDEFINED_TYPE_ID_IMPL =
0:         //      (MIN_ID_2 + 24);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:          */
0:         //static public final int USERDEFINED_TYPE_ID_IMPL_V2 =
0:         //      (MIN_ID_2 + 264);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
1:          */
0:         static public final int USERDEFINED_TYPE_ID_IMPL_V3 =
0:                 (MIN_ID_2 + 264);
0:         /**
0:             class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:          */
0:         static public final int DATE_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 32);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:          */
0:         static public final int TIME_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 33);
0:         /**
0:             class org.apache.derby.catalog.types.TypesImplInstanceGetter
1:          */
0:         static public final int TIMESTAMP_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 34);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.MinAggregator
1:          */
0:         static public final int AGG_MIN_V01_ID =
0:                 (MIN_ID_2 + 153);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.CountStarAggregator
1:          */
0:         static public final int AGG_COUNT_STAR_V01_ID =
0:                 (MIN_ID_2 + 150);
1: 
1: 
0:         /**
0:             class org.apache.derby.catalog.types.VarcharTypeIdImpl
1:          */
0:         static public final int VARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 25);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.catalog.ParameterDescriptorImpl
1:          */
0:         static public final int PARAMETER_DESCRIPTOR_V01_ID =
0:                 (MIN_ID_2 + 26);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.BitTypeId
1:          */
0:         static public final int BIT_TYPE_ID =
0:                 (MIN_ID_2 + 27);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.BitTypeIdImpl
1:          */
0:         static public final int BIT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 28);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.VarbitTypeId
1:          */
0:         static public final int VARBIT_TYPE_ID =
0:                 (MIN_ID_2 + 29);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.VarbitTypeId
1:          */
0:         static public final int VARBIT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 258);
1:         
0:         /**
0:                 class org.apache.derby.catalog.types.VarbitTypeIdImpl
1:          */
0:         static public final int VARBIT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 30);
1: 
1: 
0:         /**
0:                 class org.apache.derby.catalog.types.IndexDescriptorImpl
1:          */
0:         static public final int INDEX_DESCRIPTOR_IMPL_V02_ID =
0:                 (MIN_ID_2 + 387);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.TinyintTypeId
1:          */
0:         static public final int TINYINT_TYPE_ID =
0:                 (MIN_ID_2 + 195);
1:         
0:         /**
0:                 class org.apache.derby.catalog.types.TinyintTypeIdImpl
1:          */
0:         static public final int TINYINT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 196);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.DecimalTypeId
1:          */
0:         static public final int DECIMAL_TYPE_ID =
0:                 (MIN_ID_2 + 197);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.DateTypeId
1:          */
0:         static public final int DATE_TYPE_ID =
0:                 (MIN_ID_2 + 40);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.TimeTypeId
1:          */
0:         static public final int TIME_TYPE_ID =
0:                 (MIN_ID_2 + 35);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.TimestampTypeId
1:          */
0:         static public final int TIMESTAMP_TYPE_ID =
1:                 (MIN_ID_2 + 36);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.DecimalTypeIdImpl
1:          */
0:         static public final int DECIMAL_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 198);
1: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
1:          */
0:         static public final int LONGVARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 231);
1: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
1:          */
0:         static public final int CLOB_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 446);
1: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
0:                 - does nto exist
1:          */
0:         static public final int LONGVARBIT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 233);
1: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
0:                 - does not exist, but we do it the same way for BLOB as for Longvarbit...
1:          */
0:         static public final int BLOB_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 442);
1: 
0:         /**
0:             class org.apache.derby.iapi.types.BitTypeId
1:          */
0:         static public final int BIT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 253);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.DecimalTypeId
1:          */
0:         static public final int DECIMAL_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 254);
1:         
0:         /**
0:             class org.apache.derby.iapi.types.TinyintTypeId
1:          */
0:         static public final int TINYINT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 257);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.NationalCharTypeIdImpl
1:          */
0:         static public final int NATIONAL_CHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 366);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.NationalVarcharTypeIdImpl
1:          */
0:         static public final int NATIONAL_VARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 367);
1: 
0:         /**
0:             class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
1:          */
0:         static public final int NATIONAL_LONGVARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 368);
1:         
0:         /**
0:             class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
1:          */
0:         static public final int NCLOB_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 449);
1:         
1: 
0:         /******************************************************************
0:         **
0:         **      Execution MODULE CLASSES
0:         **
0:         ******************************************************************/
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.RenameConstantAction
1:      */
0:         static public final int RENAME_CONSTANT_ACTION_V01_ID   =
0:                 (MIN_ID_2 + 390);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.DeleteConstantAction
1:          */
0:         static public final int DELETE_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 37);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.InsertConstantAction
1:          */
0:         static public final int INSERT_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 38);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.UpdateConstantAction
1:          */
0:         static public final int UPDATABLE_VTI_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 375);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.UpdateConstantAction
1:          */
0:         static public final int UPDATE_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 39);
1: 
0:         /**
1:          */
0:         static public final int UNUSED_2_204 =
0:                 (MIN_ID_2 + 204);
1: 
0:         /**
1:             UNUSED
1:          */
0:         static public final int UNUSED_2_41 =
0:                 (MIN_ID_2 + 41);
1:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.DropAliasConstantAction
1:      */
0:         static public final int UNUSED_2_42 =
0:                 (MIN_ID_2 + 42);
1:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateSchemaConstantAction
1:      */
0:         static public final int UNUSED_2_141    =
0:                 (MIN_ID_2 + 141);
1:         
0:         /**
1:      */
0:         static public final int UNUSED_2_142    =
0:                 (MIN_ID_2 + 142);
1:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateViewConstantAction
1:      */
0:         static public final int UNUSED_2_143    =
0:                 (MIN_ID_2 + 143);
1:         
0:         /**
1:      */
0:         static public final int UNUSED_2_144    =
0:                 (MIN_ID_2 + 144);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.ProviderInfo
1:          */
0:         static public final int PROVIDER_INFO_V01_ID =
0:                 (MIN_ID_2 + 148);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.AvgAggregator
1:          */
0:         static public final int AGG_AVG_V01_ID =
0:                 (MIN_ID_2 + 149);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.CountAggregator
1:          */
0:         static public final int AGG_COUNT_V01_ID =
0:                 (MIN_ID_2 + 151);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.MaxMinAggregator
1:          */
0:         static public final int AGG_MAX_MIN_V01_ID =
0:                 (MIN_ID_2 + 152);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.SumAggregator
1:          */
0:         static public final int AGG_SUM_V01_ID =
0:                 (MIN_ID_2 + 154);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.UserAggregatorAggregator
1:          */
0:         static public final int AGG_USER_ADAPTOR_V01_ID =
0:                 (MIN_ID_2 + 323);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.StatisticsConstantAction
1:          */
0:         static public final int STATISTICS_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 155);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RunTimeStatisticsImpl
1:          */
0:         static public final int RUN_TIME_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 173);
1: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.LockTableConstantAction
1:          */
0:         static public final int UNUSED_2_275 =
0:                 (MIN_ID_2 + 275);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealProjectRestrictStatistics
1:          */
0:         static public final int REAL_PROJECT_RESTRICT_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 177);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDistinctScalarAggregateStatistics
1:          */
0:         static public final int REAL_DISTINCT_SCALAR_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 284);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealScalarAggregateStatistics
1:          */
0:         static public final int REAL_SCALAR_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 283);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealGroupedAggregateStatistics
1:          */
0:         static public final int REAL_GROUPED_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 285);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealSortStatistics
1:          */
0:         static public final int REAL_SORT_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 178);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealTableScanStatistics
1:          */
0:         static public final int REAL_TABLE_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 179);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashJoinStatistics
1:          */
0:         static public final int REAL_HASH_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 304);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealNestedLoopJoinStatistics
1:          */
0:         static public final int REAL_NESTED_LOOP_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 180);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealIndexRowToBaseRowStatistics
1:          */
0:         static public final int REAL_INDEX_ROW_TO_BASE_ROW_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 181);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealAnyResultSetStatistics
1:          */
0:         static public final int REAL_ANY_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 182);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealOnceResultSetStatistics
1:          */
0:         static public final int REAL_ONCE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 183);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealCurrentOfStatistics
1:          */
0:         static public final int REAL_CURRENT_OF_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 184);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealRowResultSetStatistics
1:          */
0:         static public final int REAL_ROW_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 185);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealUnionResultSetStatistics
1:          */
0:         static public final int REAL_UNION_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 186);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashLeftOuterJoinStatistics
1:          */
0:         static public final int REAL_HASH_LEFT_OUTER_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 305);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealNestedLoopLeftOuterJoinStatistics
1:          */
0:         static public final int REAL_NESTED_LOOP_LEFT_OUTER_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 187);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealNormalizeResultSetStatistics
1:          */
0:         static public final int REAL_NORMALIZE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 188);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealInsertResultSetStatistics
1:          */
0:         static public final int REAL_INSERT_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 189);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealInsertVTIResultSetStatistics
1:          */
0:         static public final int REAL_INSERT_VTI_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 379);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealUpdateResultSetStatistics
1:          */
0:         static public final int REAL_UPDATE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 190);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDeleteResultSetStatistics
1:          */
0:         static public final int REAL_DELETE_VTI_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 380);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDeleteResultSetStatistics
1:          */
0:         static public final int REAL_DELETE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 191);
1: 
0:         /**
0:            org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics"
1:          */
0:         static public final int REAL_DELETE_CASCADE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 439);
1: 
1: 
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashScanStatistics
1:          */
0:         static public final int REAL_HASH_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 203);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDistinctScanStatistics
1:          */
0:         static public final int REAL_DISTINCT_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 334);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashTableStatistics
1:          */
0:         static public final int REAL_HASH_TABLE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 306);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealVTIStatistics
1:          */
0:         static public final int REAL_VTI_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 214);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealMaterializedResultSetStatistics
1:          */
0:         static public final int REAL_MATERIALIZED_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 308);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealScrollInsensitiveResultSetStatistics
1:          */
0:         static public final int REAL_SCROLL_INSENSITIVE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 330);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
1:      */
0:         static public final int UNUSED_2_221    =
0:                 (MIN_ID_2 + 221);
1:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
1:      */
0:         static public final int UNUSED_2_222    =
0:                 (MIN_ID_2 + 222);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.AlterSPSConstantAction
1:      */
0:         static public final int ALTER_SPS_CONSTANT_ACTION_V01_ID        =
0:                 (MIN_ID_2 + 229);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.IndexColumnOrder
1:      */
0:         static public final int INDEX_COLUMN_ORDER_V01_ID       =
0:                 (MIN_ID_2 + 218);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.AggregateInfo
1:      */
0:         static public final int AGG_INFO_V01_ID =
0:                 (MIN_ID_2 + 223);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.AggregateInfoList
1:      */
0:         static public final int AGG_INFO_LIST_V01_ID    =
0:                 (MIN_ID_2 + 224);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.DeleteConstantAction
0:                 This class is abstract so it doesn't need a format id!
1:          */
0:         static public final int WRITE_CURSOR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 227);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.ValueRow
1:          */
0:         static public final int VALUE_ROW_V01_ID =
0:                 (MIN_ID_2 + 237);
1: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.IndexRow
1:          */
0:         static public final int INDEX_ROW_V01_ID =
0:                 (MIN_ID_2 + 238);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.execute.AddJarConstantAction;
1:          */
0:         static public final int ADD_JAR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 211);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.execute.DropJarConstantAction;
1:          */
0:         static public final int DROP_JAR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 212);
1: 
0:         /**
0:           class org.apache.derby.impl.sql.execute.ReplaceJarConstantAction;
1:          */
0:         static public final int REPLACE_JAR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 213);
1: 
0:          /**
0:         class org.apache.derby.Database.Language.Execution.ConstraintInfo
1:      */
0:         static public final int CONSTRAINT_INFO_V01_ID  =
0:                 (MIN_ID_2 + 278);
1: 
0:         /**
1:          */
0:         static public final int UNUSED_2_280 =
0:                 (MIN_ID_2 + 280);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.FKInfo
1:      */
0:         static public final int FK_INFO_V01_ID  =
0:                 (MIN_ID_2 + 282);
1: 
0:         /**
1:          */
0:         static public final int UNUSED_2_289    =
0:                 (MIN_ID_2 + 289);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.execute.CreateTriggerConstantAction
1:      */
0:         static public final int CREATE_TRIGGER_CONSTANT_ACTION_V01_ID   =
0:                 (MIN_ID_2 + 314);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.execute.DropTriggerConstantAction
1:      */
0:         static public final int DROP_TRIGGER_CONSTANT_ACTION_V01_ID     =
0:                 (MIN_ID_2 + 315);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.execute.TriggerInfo
1:      */
0:         static public final int TRIGGER_INFO_V01_ID     =
0:                 (MIN_ID_2 + 317);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.execute.TransactionConstantAction
1:      */
0:         static public final int TRANSACTION_CONSTANT_ACTION_V01_ID      =
0:                 (MIN_ID_2 + 318);
1: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.SetTriggersConstantAction
1:          */
0:         static public final int SET_TRIGGERS_CONSTANT_ACTION_V01_ID     =
0:                 (MIN_ID_2 + 321);
1: 
0:         /**
0:             class org.apache.derby.Replication.Database.Language.Execution.RepSetTriggersConstantAction
1:          */
0:         static public final int REP_SET_TRIGGERS_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 322);
1: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealLastIndexKeyScanStatistics
1:          */
0:         static public final int REAL_LAST_INDEX_KEY_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 327);
1: 
0:         ////////////////////////////////////////////////////////////////////////////
0:         //
0:         // New versions of 2.0 Language ConstantActions, versioned in 3.0
0:         //
0:         ////////////////////////////////////////////////////////////////////////////
1: 
1: 
0:         /** class org.apache.derby.Database.Language.Execution.SetSchemaConstantAction */
0:         static public final int SET_SCHEMA_CONSTANT_ACTION_V02_ID                       = (MIN_ID_2 + 353);
1: 
0:         /** class org.apache.derby.Database.Language.Execution.SetTransactionIsolationConstantAction */
0:         static public final int SET_TRANSACTION_ISOLATION_CONSTANT_ACTION_V02_ID = (MIN_ID_2 + 354);
1: 
0:         /** class org.apache.derby.impl.sql.execute.ColumnInfo */
0:         static public final int COLUMN_INFO_V02_ID                      = (MIN_ID_2 + 358);
1: 
0:         /** class org.apache.derby.Database.Language.DependencySystem.Generic.ProviderInfo */
0:         static public final int PROVIDER_INFO_V02_ID                    = (MIN_ID_2 + 359);
1: 
0:         /** class org.apache.derby.impl.sql.execute.SavepointConstantAction */
0:         static public final int SAVEPOINT_V01_ID                      = (MIN_ID_2 + 452);
1: 
0:         /******************************************************************
0:         **
0:         **      LanguageInterface MODULE CLASSES
0:         **
0:         ******************************************************************/
0:         /**
0:         class org.apache.derby.impl.sql.GenericStorablePreparedStatement
1:      */
0:         static public final int STORABLE_PREPARED_STATEMENT_V01_ID      =
0:                 (MIN_ID_2 + 225);
1:         
0:         /**
0:         class org.apache.derby.impl.sql.GenericResultDescription
1:      */
0:         static public final int GENERIC_RESULT_DESCRIPTION_V01_ID       =
0:                 (MIN_ID_2 + 228);
1: 
0:         /**
1:         UNUSED
1:      */
0:         static public final int UNUSED_2_215    = (MIN_ID_2 + 215);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.GenericTypeDescriptor
1:      */
0:         static public final int GENERIC_TYPE_DESCRIPTOR_V01_ID  =
0:                 (MIN_ID_2 + 216);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.GenericTypeId
1:      */
0:         static public final int GENERIC_TYPE_ID_V01_ID  =
0:                 (MIN_ID_2 + 217);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.CursorTableReference
1:      */
0:         static public final int CURSOR_TABLE_REFERENCE_V01_ID   =
0:                 (MIN_ID_2 + 296);
1: 
0:         /**
0:         class org.apache.derby.impl.sql.CursorInfo
1:      */
0:         static public final int CURSOR_INFO_V01_ID      =
0:                 (MIN_ID_2 + 297);
1: 
0:         /******************************************************************
0:         **
0:         **      ALIAS INFO CLASSES
0:         **
0:         ******************************************************************/
1: 
0:         /**
0:         class org.apache.derby.catalog.types.ClassAliasInfo
1:      */
0:         static public final int CLASS_ALIAS_INFO_V01_ID =
0:                 (MIN_ID_2 + 310);
1: 
0:         /**
0:         class org.apache.derby.catalog.types.MethodAliasInfo
1:      */
0:         static public final int METHOD_ALIAS_INFO_V01_ID        =
0:                 (MIN_ID_2 + 312);
1: 
0:         /**
0:         class org.apache.derby.catalog.types.WorkUnitAliasInfo
1:      */
0:         static public final int WORK_UNIT_ALIAS_INFO_V01_ID     =
0:                 (MIN_ID_2 + 309);
1: 
0:         /**
0:         class org.apache.derby.catalog.types.UserAggregateAliasInfo
1:      */
0:         static public final int USER_AGGREGATE_ALIAS_INFO_V01_ID        =
0:                 (MIN_ID_2 + 311);
1: 
1: 
1: 
0: 	public static final int ROUTINE_INFO_V01_ID = (MIN_ID_2 + 451);
1: 
0: 	/******************************************************************
0: 	**
0: 	**	DEFAULT INFO CLASSES
0: 	**
0: 	******************************************************************/
1:                 
0:         /**
0:         class org.apache.derby.catalog.types.DefaultInfoImpl
1:      */
0:         static public final int DEFAULT_INFO_IMPL_V01_ID =
0:                 (MIN_ID_2 + 326);
1: 
1: 
1: 
1: 
1: 
0:         /**
0:         class org.apache.derby.impl.sql.GenericColumnDescriptor
1:      */
0:         static public final int GENERIC_COLUMN_DESCRIPTOR_V02_ID        =
0:                 (MIN_ID_2 + 383);
1: 
1: 
0:         /**
0:                 UNUSED (MIN_ID_2 + 384)
1:         */
1: 
0:         /**
0:             UNUSED (MIN_ID_2 + 382)
1:          */
1: 
1:         
1: 
1: 
0:         /******************************************************************
0:         **
0:         **  Type system id's
0:         **
0:         ******************************************************************/
1: 
0:         public static final int SQL_BOOLEAN_ID = 
0:                 (MIN_ID_2 + 77);
1: 
0:         public static final int SQL_CHAR_ID = 
0:                 (MIN_ID_2 + 78);
1: 
0:         public static final int SQL_DOUBLE_ID = 
0:                 (MIN_ID_2 + 79);
1: 
0:         public static final int SQL_INTEGER_ID = 
0:                 (MIN_ID_2 + 80);
1: 
0:         public static final int SQL_REAL_ID = 
0:                 (MIN_ID_2 + 81);
1: 
0:         public static final int SQL_REF_ID = 
0:                 (MIN_ID_2 + 82);
1: 
0:         public static final int SQL_SMALLINT_ID = 
0:                 (MIN_ID_2 + 83);
1: 
0:         public static final int SQL_LONGINT_ID = 
0:                 (MIN_ID_2 + 84);
1: 
0:         public static final int SQL_VARCHAR_ID = 
0:                 (MIN_ID_2 + 85);
1: 
0:         //public static final int SQL_USERTYPE_ID = 
0:         //      (MIN_ID_2 + 86);
1: 
0:         //public static final int SQL_USERTYPE_ID_V2 = 
0:         //      (MIN_ID_2 + 266);
1: 
0:         public static final int SQL_USERTYPE_ID_V3 = 
0:                 (MIN_ID_2 + 266);
1: 
0:         public static final int SQL_DATE_ID = 
0:                 (MIN_ID_2 + 298);
1: 
0:         public static final int SQL_TIME_ID = 
0:                 (MIN_ID_2 + 299);
1: 
0:         public static final int SQL_TIMESTAMP_ID = 
0:                 (MIN_ID_2 + 31);
1: 
0:         public static final int SQL_BIT_ID = 
0:                 (MIN_ID_2 + 87);
1: 
0:         public static final int SQL_VARBIT_ID = 
0:                 (MIN_ID_2 + 88);
1: 
0:         public static final int SQL_TINYINT_ID = 
0:                 (MIN_ID_2 + 199);
1: 
0:         public static final int SQL_DECIMAL_ID = 
0:                 (MIN_ID_2 + 200);
1: 
0:         public static final int SQL_LONGVARCHAR_ID =
0:                 (MIN_ID_2 + 235);
1: 
0:         public static final int SQL_CLOB_ID =
0:                 (MIN_ID_2 + 447);
1: 
0:         public static final int SQL_LONGVARBIT_ID =
0:                 (MIN_ID_2 + 234);
1: 
0:         public static final int SQL_BLOB_ID =
0:                 (MIN_ID_2 + 443);
1: 
0:         public static final int SQL_NATIONAL_CHAR_ID = 
0:                 (MIN_ID_2 + 363);
1: 
0:         public static final int SQL_NATIONAL_VARCHAR_ID = 
0:                 (MIN_ID_2 + 364);
1: 
0:         public static final int SQL_NATIONAL_LONGVARCHAR_ID = 
0:                 (MIN_ID_2 + 365);
1: 
0:         public static final int SQL_NCLOB_ID = 
0:                 (MIN_ID_2 + 450);
1: 
0:         /******************************************************************
0:         ** 
0:         ** Access ids.
0:         **
0:         **
0:         **
0:         ******************************************************************/
0:         public static final int ACCESS_U8_V1_ID =
0:                 (MIN_ID_2 + 89);
1: 
0:         public static final int ACCESS_HEAP_ROW_LOCATION_V1_ID =
0:                 (MIN_ID_2 + 90);
1: 
0:         public static final int ACCESS_HEAP_V2_ID =
0:                 (MIN_ID_2 + 91);
1: 
0:         public static final int ACCESS_B2I_V2_ID =
0:                 (MIN_ID_2 + 92);
1: 
0:         public static final int ACCESS_FORMAT_ID =
0:                 (MIN_ID_2 + 93);
1: 
0:         public static final int ACCESS_T_STRINGCOLUMN_ID =
0:                 (MIN_ID_2 + 94);
1: 
0:         public static final int ACCESS_B2IUNDO_V1_ID =
0:                 (MIN_ID_2 + 95);
1: 
1:     // Deleted as part of 7.2 rebrand project.
1: 
1:     /*
0:         public static final int ACCESS_CONGLOMDIR_V1_ID =
0:                 (MIN_ID_2 + 96);
1:     */
0:         public static final int ACCESS_BTREE_LEAFCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 133);
1: 
0:         public static final int ACCESS_BTREE_BRANCHCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 134);
1: 
0:         public static final int ACCESS_SERIALIZABLEWRAPPER_V1_ID =
0:                 (MIN_ID_2 + 202);
1: 
0:         public static final int ACCESS_B2I_STATIC_COMPILED_V1_ID =
0:                 (MIN_ID_2 + 360);
1: 
1:     public static final int ACCESS_TREE_V1_ID =
0:         (MIN_ID_2 + 386);
1: 
0:         public static final int ACCESS_B2I_V3_ID =
0:                 (MIN_ID_2 + 388);
1: 
0:         public static final int ACCESS_GISTUNDO_V1_ID =
0:                 (MIN_ID_2 + 389);
1: 
0:         public static final int ACCESS_GIST_LEAFCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 394);
1: 
0:         public static final int ACCESS_GIST_BRANCHCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 395);
1: 
0:         public static final int STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 397);
1: 
0:         public static final int UPDATE_STATISTICS_CONSTANT_ACTION_ID =
0:                 (MIN_ID_2 +     398);
1: 
0:         public static final int DROP_STATISTICS_CONSTANT_ACTION_ID =
0:                 (MIN_ID_2 + 399);
1: 
0:         public static final int ACCESS_GIST_RTREE_V1_ID =
0:                 (MIN_ID_2 + 400);
1: 
0:         public static final int ACCESS_T_RECTANGLE_ID =
0:                 (MIN_ID_4 + 34);
1: 
0:         public static final int ACCESS_T_INTCOL_V1_ID =               MIN_ID_4 + 4;
1: 
0:         /******************************************************************
0:         **
0:         ** PropertyConglomerate
0:         ** 
0:         ** 
0:         ** 
0:         ******************************************************************/
0:         /** class org.apache.derby.impl.store.access.PropertyConglomerate */
1:           
0:         static public final int PC_XENA_VERSION_ID =
0:                 (MIN_ID_2 + 15);
1: 
1: 
0:         /******************************************************************
0:         **
0:         ** Raw Store Log operation Ids
0:         **
0:         **
0:         **
0:         ******************************************************************/
1: 
0:         /* org.apache.derby.impl.store.raw.data.ChainAllocPageOperation */
0:         public static final int LOGOP_CHAIN_ALLOC_PAGE = 
0:                 (MIN_ID_2 + 97);
1: 
0:         /* org.apache.derby.impl.store.raw.xact.BeginXact */
0:         public static final int LOGOP_BEGIN_XACT = 
0:                 (MIN_ID_2 + 169);
1: 
0:         /* org.apache.derby.impl.store.raw.log.CheckpointOperation */
0:         public static final int LOGOP_CHECKPOINT =
0:                 (MIN_ID_2 + 263);
1: 
0:         /* org.apache.derby.impl.store.raw.data.ContainerOperation */
0:         /* creating, dropping, removing container */
0:         public static final int LOGOP_CONTAINER = 
0:                 (MIN_ID_2 + 242);
1: 
0:         /* org.apache.derby.impl.store.raw.data.DeleteOperation */
0:         public static final int LOGOP_DELETE = 
0:                 (MIN_ID_2 + 101);
1: 
0:         /* org.apache.derby.impl.store.raw.xact.EndXact */
0:         public static final int LOGOP_END_XACT = 
0:                 (MIN_ID_2 + 102);
1: 
0:         /* org.apache.derby.impl.store.raw.data.InsertOperation */
0:         public static final int LOGOP_INSERT = 
0:                 (MIN_ID_2 + 103);
1: 
0:         /* org.apache.derby.impl.store.raw.data.LogicalUndoOperation */
0:         public static final int LOGOP_PAGE_LOGICAL_UNDO = 
0:                 (MIN_ID_2 + 104);
1: 
0:         /* org.apache.derby.impl.store.raw.data.PhysicalUndoOperation */
0:         public static final int LOGOP_PAGE_PHYSICAL_UNDO = 
0:                 (MIN_ID_2 + 105);
1: 
0:         /* org.apache.derby.impl.store.raw.data.PurgeOperation */
0:         public static final int LOGOP_PURGE = 
0:                 (MIN_ID_2 + 106);
1: 
0:         /* org.apache.derby.impl.store.raw.data.ContainerUndoOperation */
0:         public static final int LOGOP_CONTAINER_UNDO = 
0:                 (MIN_ID_2 + 107);
1: 
0:         /* org.apache.derby.impl.store.raw.data.UpdateOperation */
0:         public static final int LOGOP_UPDATE =
0:                 (MIN_ID_2 + 108);
1: 
0:         /* org.apache.derby.impl.store.raw.data.UpdateFieldOperation */
0:         public static final int LOGOP_UPDATE_FIELD =
0:                 (MIN_ID_2 + 109);
1: 
0:         /* org.apache.derby.impl.store.raw.data.CopyRowsOperation */
0:         public static final int LOGOP_COPY_ROWS = 
0:                 (MIN_ID_2 + 210);
1: 
0:         /* org.apache.derby.impl.store.raw.data.AllocPageOperation */
0:         public static final int LOGOP_ALLOC_PAGE = 
0:                 (MIN_ID_2 + 111);
1: 
0:         /*org.apache.derby.impl.store.raw.data.InitPageOperation */
0:         public static final int LOGOP_INIT_PAGE =
0:                 (MIN_ID_2 + 241);
1: 
0:         /* org.apache.derby.impl.store.raw.data.InvalidatePageOperation */
0:         public static final int LOGOP_INVALIDATE_PAGE =
0:                 (MIN_ID_2 + 113);
1: 
0:         /* org.apache.derby.impl.store.raw.data.SetReservedSpaceOperation */
0:         public static final int LOGOP_SET_RESERVED_SPACE = 
0:                 (MIN_ID_2 + 287);
1: 
0:         /* org.apache.derby.impl.store.raw.log.SaveLWMOperation */
0:         public static final int LOGOP_SAVE_LWM =
0:                 (MIN_ID_2 + 114);
1: 
1: 
0:         /* org.apache.derby.impl.store.raw.data.RemoveFileOperation */
0:         public static final int LOGOP_REMOVE_FILE =
0:                 (MIN_ID_2 + 291);
1: 
1: 
0:         /*******************************************************************
0:         **
0:         ** container types
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.data.FileContainer */
0:         public static final int RAW_STORE_SINGLE_CONTAINER_FILE = 
0:                 (MIN_ID_2 + 116);
1: 
0:         /* org.apache.derby.impl.store.raw.data.StreamFileContainer */
0:         public static final int RAW_STORE_SINGLE_CONTAINER_STREAM_FILE = 
0:                 (MIN_ID_2 + 290);
1: 
0:         /*******************************************************************
0:         **
0:         ** page types
0:         **
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.data.StoredPage */
0:         public static final int RAW_STORE_STORED_PAGE =
0:                 (MIN_ID_2 + 117);
1: 
0:         /* org.apache.derby.impl.store.raw.data.AllocPage */
0:         public static final int RAW_STORE_ALLOC_PAGE =
0:                 (MIN_ID_2 + 118);
1: 
1: 
0:         /*****************************************************************
0:         **
0:         ** Log files
0:         **
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.log.LogToFile */
0:         public static final int FILE_STREAM_LOG_FILE = 
0:                 (MIN_ID_2 + 128);
1: 
1: 
0:         /*****************************************************************
0:         **
0:         ** Log record
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.log.LogRecord */
0:         public static final int LOG_RECORD = 
0:                 (MIN_ID_2 + 129);
1: 
0:         /* org.apache.derby.impl.store.raw.log.LogCounter */
0:         public static final int LOG_COUNTER = 
0:                 (MIN_ID_2 + 130);
1: 
0:         /******************************************************************
0:         **
0:         **  identifiers
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.services.uuid.BasicUUID */
0:         public static final int BASIC_UUID = 
0:                 (MIN_ID_2 + 131);
1: 
1:         /*
0:          *      Transaction Ids
1:          */
1: 
0:         /* org.apache.derby.impl.store.raw.xact.GlobalXactId */
0:         public static final int RAW_STORE_GLOBAL_XACT_ID_V20 = 
0:                 (MIN_ID_2 + 132);
1: 
0:         /* org.apache.derby.impl.store.raw.xact.XactId */
0:         public static final int RAW_STORE_XACT_ID = 
0:                 (MIN_ID_2 + 147);
1: 
0:         /* org.apache.derby.impl.store.raw.xact.XAXactId */
0:         public static final int RAW_STORE_GLOBAL_XACT_ID_NEW = 
0:                 (MIN_ID_2 + 328);
1: 
1:         /*
0:          * Transaction table
1:          */
0:         /* org.apache.derby.impl.store.raw.xact.TransactionTableEntry */
0:         public static final int RAW_STORE_TRANSACTION_TABLE_ENTRY =
0:                 (MIN_ID_2 + 261);
1: 
0:         /* org.apache.derby.impl.store.raw.xact.TransactionTable */
0:         public static final int RAW_STORE_TRANSACTION_TABLE =
0:                 (MIN_ID_2 + 262);
1: 
1:                 
0:         /******************************************************************
0:         **
0:         **  LocalDriver Formatables.
0:         **
0:         ******************************************************************/
1: 
0:         /* NOT USED = org.apache.derby.impl.jdbc.ExternalizableConnection */
0:         public static final int EXTERNALIZABLE_CONNECTION_ID = (MIN_ID_2 + 192);
1: 
1: 
0:         /******************************************************************
0:         **
0:         **      InternalUtils MODULE CLASSES
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.iapi.util.ByteArray */
0:         public static final int FORMATABLE_BYTE_ARRAY_V01_ID = (MIN_ID_2 + 219);
1: 
1: 
0:        /******************************************************************
0:         **
0:         **  UDPATE MAX_ID_2 WHEN YOU ADD A NEW FORMATABLE
0:         **
0:         ******************************************************************/
1: 
1:    
1:         /*
0:          * Make sure this is updated when a new module is added
1:          */
0:         public static final int MAX_ID_2 =
0:                 (MIN_ID_2 + 452);
1: 
0:         // DO NOT USE 4 BYTE IDS ANYMORE
0:         static public final int MAX_ID_4 =
0:             MIN_ID_4 + 34;
1: }
1: 
author:Mamta Satoor
-------------------------------------------------------------------------------
commit:111785f
/////////////////////////////////////////////////////////////////////////
1:     //static public final int NATIONAL_CHAR_TYPE_ID =
1:             //(MIN_ID_2 + 370);
1:     //static public final int NATIONAL_LONGVARCHAR_TYPE_ID =
1:             //(MIN_ID_2 + 362);
1:     //static public final int NCLOB_TYPE_ID = 
1:             //(MIN_ID_2 + 448);
1:     //static public final int NATIONAL_VARCHAR_TYPE_ID =
1:             //(MIN_ID_2 + 369);
/////////////////////////////////////////////////////////////////////////
1:     //static public final int NATIONAL_CHAR_TYPE_ID_IMPL =
1:             //(MIN_ID_2 + 366);
1:     //static public final int NATIONAL_VARCHAR_TYPE_ID_IMPL =
1:             //(MIN_ID_2 + 367);
1:     //static public final int NATIONAL_LONGVARCHAR_TYPE_ID_IMPL =
1:             //(MIN_ID_2 + 368);
1:     //static public final int NCLOB_TYPE_ID_IMPL =
1:             //(MIN_ID_2 + 449);
/////////////////////////////////////////////////////////////////////////
1:     //public static final int SQL_NATIONAL_CHAR_ID = 
1:             //(MIN_ID_2 + 363);
1:     //public static final int SQL_NATIONAL_VARCHAR_ID = 
1:             //(MIN_ID_2 + 364);
1:     //public static final int SQL_NATIONAL_LONGVARCHAR_ID = 
1:             //(MIN_ID_2 + 365);
1:     //public static final int SQL_NCLOB_ID = 
1:             //(MIN_ID_2 + 450);
commit:3a2db6b
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 465);
commit:d0ed190
/////////////////////////////////////////////////////////////////////////
0:         
0:         static public final int SQL_CHAR_WITH_NON_DEFAULT_COLLATION_ID =
0:                 (MIN_ID_2 + 466);
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 466);
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:3fd26f3
/////////////////////////////////////////////////////////////////////////
1:   the format id. When Derby code reads a stored form it returns an 
/////////////////////////////////////////////////////////////////////////
1:   <P>This interface defines all the format ids for Derby.
author:Suresh Thalamati
-------------------------------------------------------------------------------
commit:f824190
/////////////////////////////////////////////////////////////////////////
0: 		/* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation10_2 */
0:         public static final int LOGOP_COMPRESS10_2_SPACE =
0: 	/* org.apache.derby.impl.store.raw.data.CompressSpacePageOperation */
0:         public static final int LOGOP_COMPRESS_SPACE =
0:                 (MIN_ID_2 + 465);
0: 
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 465);
commit:a465628
/////////////////////////////////////////////////////////////////////////
0:          	class org.apache.derby.iapi.types.SqlXmlUtil
0:         */
0:         static public final int SQL_XML_UTIL_V01_ID =
0:                 (MIN_ID_2 + 464);
0:         
0:         /**
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 464);
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:ae71c74
/////////////////////////////////////////////////////////////////////////
0:    		/* org.apache.derby.impl.store.raw.data.EncryptContainerOperation */
0:         public static final int LOGOP_ENCRYPT_CONTAINER =
0:                 (MIN_ID_2 + 459);
0: 
0:   		/* org.apache.derby.impl.store.raw.data.EncryptContainerUndoOperation */
0:         public static final int LOGOP_ENCRYPT_CONTAINER_UNDO =
0:                 (MIN_ID_2 + 460);
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 460);
commit:099e28f
/////////////////////////////////////////////////////////////////////////
0:                 Instance of TypeId for XML data types.
0:          */
0:         static public final int XML_TYPE_ID =
0:                 (MIN_ID_2 + 456);
0:         
0:         /**
/////////////////////////////////////////////////////////////////////////
0:         
/////////////////////////////////////////////////////////////////////////
0:         /**
0:             class org.apache.derby.iapi.types.XML (implementation of
0:             org.apache.derby.iapi.types.XMLDataValue).
0:          */
0:         static public final int XML_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 457);
/////////////////////////////////////////////////////////////////////////
0:         // Interface: org.apache.derby.iapi.types.XMLDataValue
0:         public static final int XML_ID = 
0:                 (MIN_ID_2 + 458);
0: 
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 458);
commit:582425f
/////////////////////////////////////////////////////////////////////////
0: 	public static final int SYNONYM_INFO_V01_ID = (MIN_ID_2 + 455);
/////////////////////////////////////////////////////////////////////////
0:                 (MIN_ID_2 + 455);
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.io
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: //depot/main/java/org.apache.derby.iapi.services.io/StoredFormatIds.java#211 - edit change 20974 (text)
0: package org.apache.derby.iapi.services.io;
0: /**
0:   A format id identifies a stored form of an object for the
0:   purposes of locating a class which can read the stored form and
0:   reconstruct the object using the java.io.Externalizable interface.
0: 
0:   <P>An important aspect of the format id concept is that it does
0:   not impose an implementation on the stored object. Rather,
0:   multiple implementations of an object (or interface) may share a
0:   format id. One implementation may store (write) an object
0:   and another may restore (read) the object. The implication of this
0:   is that a format id specifies the following properties of a
0:   stored object.
0: 
0:   <UL>
0:   <LI>The interface(s) the stored object must support. Any implementation
0:   which reads the object must support these interfaces.
0:   <LI>The format of the stored object. All implementaions which support
0:   the format must be able to read and write it.
0:   </UL>
0: 
0:   <P>An object should implement the Formatable inteface to support a
0:   stored format. In addition, the module which contains the object
0:   should register the object's class with the Monitor (See
0:   FormatIdUtil.register.)
0: 
0:   <P>When you add a format id to this file, please include the list
0:   of interfaces an implementaion must support when it supports
0:   the format id. When Cloudscape code reads a stored form it returns an 
0:   object of a Class which supports the stored form. A reader may
0:   cast this object to any interface listed in this file. It is an error for
0:   the reader to cast the object to a class or interface not listed in this
0:   file.
0: 
0:   <P>When you implement a class that supports a format, add a comment that
0:   states the name of the class. The first implementation of a format defines
0:   the stored form.
0: 
0:   <P>This interface defines all the format ids for Cloudscape software.
0:   If you define a format id please be sure to declare it in this
0:   file. If you remove support for a one please document that the
0:   format id is deprecated. Never remove or re-use a format id.
0:  */
0: public interface StoredFormatIds { 
0: 
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 
0:         /** Byte length of a two byt format id. */
0:         int  TWO_BYTE_FORMAT_ID_BYTE_LENGTH = 2;
0: 
0:         /** Minimum value for a two byte format id. */
0:         int  MIN_TWO_BYTE_FORMAT_ID = 0; //16384
0:         /** Maximum value for a two byte format id. */
0:         int  MAX_TWO_BYTE_FORMAT_ID = 0x7FFF; //32767
0:         
0:         int MIN_ID_2 = MIN_TWO_BYTE_FORMAT_ID;
0: 
0:         // TEMP DJD
0:         int MIN_ID_4 = MIN_ID_2 + 403;
0: 
0:         /******************************************************************
0:         **
0:         **      How to add an ID for another Formatable class 
0:     **
0:         **      o       In the list of constants below, identify the module that
0:         **              defines your class.
0:         **
0:         **      o       Add your class to the list to the end of that module 
0:         **              use a number that is one greater than all existing formats
0:         **              in that module, see MAX_ID_2 or MAX_ID_4 at the end of the 
0:         **              file, these are the largest existing formatId.
0:         **
0:         **      o       update MAX_ID_2 and MAX_ID_4
0:         **
0:         **
0:         **      o       Make sure that the getFormatId() method for your class
0:         **              returns the constant that you just made up.
0:         **
0:         **      o       Now find your module startup code that registers Format
0:         **              IDs. Add your class to that list.
0:         **
0:         **      o   Add a test for your new format ID to T_StoredFormat.java
0:         **
0:         ******************************************************************/
0: 
0: 
0:         /******************************************************************
0:         **
0:         **      Formats for the StoredFormatModule
0:         **
0:         **
0:         **
0:         ******************************************************************/
0: 
0:         /** Special format id for any null referance */
0:         static public final int NULL_FORMAT_ID =
0:                 (MIN_ID_2 + 0);
0: 
0:         /** Special format id for tagging UTF8 strings */
0:         static public final int STRING_FORMAT_ID =
0:                 (MIN_ID_2 + 1);
0: 
0:         /** Special format id for tagging Serializable objects. */
0:         static public final int SERIALIZABLE_FORMAT_ID =
0:                 (MIN_ID_2 + 2);
0:         
0:         /******************************************************************
0:         **
0:         **      DataDictionary Formats
0:         **
0:         **
0:         **
0:         ******************************************************************/
0:         /**
0:             class org.apache.derby.iapi.types.BooleanTypeId
0:          */
0:         static public final int BOOLEAN_TYPE_ID =
0:                 (MIN_ID_2 + 4);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.BooleanTypeId
0:          */
0:         static public final int BOOLEAN_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 260);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.CharTypeId
0:          */
0:         static public final int CHAR_TYPE_ID =
0:                 (MIN_ID_2 + 5);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.CharTypeId
0:          */
0:         static public final int CHAR_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 244);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.DoubleTypeId
0:          */
0:         static public final int DOUBLE_TYPE_ID =
0:                 (MIN_ID_2 + 6);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.DoubleTypeId
0:          */
0:         static public final int DOUBLE_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 245);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.IntTypeId
0:          */
0:         static public final int INT_TYPE_ID =                            
0:                 (MIN_ID_2 + 7);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.IntTypeId
0:          */
0:         static public final int INT_COMPILATION_TYPE_ID =                                
0:                 (MIN_ID_2 + 246);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.RealTypeId
0:          */
0:         static public final int REAL_TYPE_ID =
0:                 (MIN_ID_2 + 8);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.RealTypeId
0:          */
0:         static public final int REAL_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 247);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.RefTypeId
0:          */
0:         static public final int REF_TYPE_ID =
0:                 (MIN_ID_2 + 9);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.RefTypeId
0:          */
0:         static public final int REF_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 248);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.SmallintTypeId
0:          */
0:         static public final int SMALLINT_TYPE_ID =
0:                 (MIN_ID_2 + 10);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.SmallintTypeId
0:          */
0:         static public final int SMALLINT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 249);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.LongintTypeId
0:          */
0:         static public final int LONGINT_TYPE_ID =
0:                 (MIN_ID_2 + 11);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.LongintTypeId
0:          */
0:         static public final int LONGINT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 250);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeId
0:          */
0:         //static public final int USERDEFINED_TYPE_ID =
0:         //      (MIN_ID_2 + 12);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeIdV2
0:          */
0:         //static public final int USERDEFINED_TYPE_ID_V2 =
0:         //      (MIN_ID_2 + 267);
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeIdV3
0:          */
0:         static public final int USERDEFINED_TYPE_ID_V3 =
0:                 (MIN_ID_2 + 267);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeId
0:          */
0:         static public final int USERDEFINED_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 251);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.UserDefinedTypeIdV2
0:          */
0:         static public final int USERDEFINED_COMPILATION_TYPE_ID_V2 =
0:                 (MIN_ID_2 + 265);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.VarcharTypeId
0:          */
0:         static public final int VARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 13);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.VarcharTypeId
0:          */
0:         static public final int VARCHAR_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 252);
0:         
0:         /**
0:         class org.apache.derby.catalog.types.TypeDescriptorImpl
0:         */
0:         static public final int DATA_TYPE_IMPL_DESCRIPTOR_V01_ID =
0:                 (MIN_ID_2 + 14);
0:         
0:         /**
0:                 class com.ibm.db2j.protcol.Datatypes.Execution.DataTypeDescriptor
0:          */
0:         static public final int DATA_TYPE_SERVICES_IMPL_V01_ID =
0:                 (MIN_ID_2 + 259);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ConglomerateDescriptorFinder
0:      */
0:         static public final int CONGLOMERATE_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 135);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ConstraintDescriptorFinder
0:      */
0:         static public final int CONSTRAINT_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 208);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DefaultDescriptorFinder
0:      */
0:         static public final int DEFAULT_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 325);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.AliasDescriptorFinder
0:      */
0:         static public final int ALIAS_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 136);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.TableDescriptorFinder
0:      */
0:         static public final int TABLE_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 137);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DataDictionaryDescriptorFinder
0:      */
0:         static public final int DATA_DICTIONARY_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 138);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ViewDescriptorFinder
0:      */
0:         static public final int VIEW_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 145);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.SPSDescriptorFinder
0:      */
0:         static public final int SPS_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 226);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.FileInfoFinder
0:      */
0:         static public final int FILE_INFO_FINDER_V01_ID =
0:                 (MIN_ID_2 + 273);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
0:      */
0:         static public final int TRIGGER_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 320);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.TriggerDescriptorFinder
0:      */
0:         static public final int TRIGGER_DESCRIPTOR_V01_ID =
0:                 (MIN_ID_2 + 316);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DD_SocratesVersion
0:      */
0:         static public final int DD_SOCRATES_VERSION_ID =
0:                 (MIN_ID_2 + 174);
0:         
0:         /**
0:         class org.apache.derby.catalog.types.ReferencedColumnsDescriptorImpl
0:      */
0:         static public final int REFERENCED_COLUMNS_DESCRIPTOR_IMPL_V01_ID =
0:                 (MIN_ID_2 + 205);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DD_PlatoVersion
0:      */
0:         static public final int DD_PLATO_VERSION_ID =
0:                 (MIN_ID_2 + 206);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.DD_AristotleVersion
0:      */
0:         static public final int DD_ARISTOTLE_VERSION_ID =
0:                 (MIN_ID_2 + 272);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_XenaVersion
0:      */
0:         static public final int DD_XENA_VERSION_ID =
0:                 (MIN_ID_2 + 302);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_BuffyVersion
0:      */
0:         static public final int DD_BUFFY_VERSION_ID =
0:                 (MIN_ID_2 + 373);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_MulanVersion
0:      */
0:         static public final int DD_MULAN_VERSION_ID =
0:                 (MIN_ID_2 + 376);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_IvanovaVersion
0:      */
0:         static public final int DD_IVANOVA_VERSION_ID =
0:                 (MIN_ID_2 + 396);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_DB2J72
0: 		  now mapped to a single class DD_Version.
0: 		  5.0 databases will have this as the format identifier for their
0: 		  catalog version number.
0:      */
0:         static public final int DD_DB2J72_VERSION_ID =
0:                 (MIN_ID_2 + 401);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.catalog.DD_Version
0:  		  now mapped to a single class DD_Version.
0: 		  5.1 and later databases will have this as the format identifier for their
0: 		  catalog version number.
0:     */
0:         static public final int DD_ARWEN_VERSION_ID =
0:                 (MIN_ID_2 + 402);
0:         
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
0:          */
0:         static public final int LONGVARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 230);
0:         
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
0:          */
0:         static public final int LONGVARCHAR_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 256);
0: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
0:          */
0:         static public final int CLOB_TYPE_ID =
0:                 (MIN_ID_2 + 444);
0:         
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarcharTypeId
0:          */
0:         static public final int CLOB_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 445);
0: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
0:          */
0:         static public final int LONGVARBIT_TYPE_ID =
0:                 (MIN_ID_2 + 232);
0: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
0:          */
0:         static public final int LONGVARBIT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 255);
0: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
0:         But for BLOB we do the same as for LONGVARBIT, only need different ids
0:          */
0:         static public final int BLOB_TYPE_ID =
0:                 (MIN_ID_2 + 440);
0: 
0:         /**
0:                 class org.apache.derby.iapi.types.LongvarbitTypeId
0:                 - XXXX does not exist!!!
0:         But for BLOB we do the same as for LONGVARBIT, only need different ids
0:          */
0:         static public final int BLOB_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 441);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.JSQLType
0:          */
0:         static public final int JSQLTYPEIMPL_ID =
0:                 (MIN_ID_2 + 307);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.RowListImpl
0:      */
0:         static public final int ROW_LIST_V01_ID =
0:                 (MIN_ID_2 + 239);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ListOfRowListsImpl
0:      */
0:         static public final int UNUSED_240 =
0:                 (MIN_ID_2 + 240);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.IndexRowGeneratorImpl
0:      */
0:         static public final int INDEX_ROW_GENERATOR_V01_ID =
0:                 (MIN_ID_2 + 268);
0: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableBitSet
0:      */
0:         static public final int BITIMPL_V01_ID =
0:                 (MIN_ID_2 + 269);
0: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableArrayHolder
0:      */
0:         static public final int FORMATABLE_ARRAY_HOLDER_V01_ID =
0:                 (MIN_ID_2 + 270);
0:         
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableProperties
0:      */
0:         static public final int FORMATABLE_PROPERTIES_V01_ID =
0:                 (MIN_ID_2 + 271);
0: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableIntHolder
0:      */
0:         static public final int FORMATABLE_INT_HOLDER_V01_ID =
0:                 (MIN_ID_2 + 303);
0:         
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableLongHolder
0:      */
0:         static public final int FORMATABLE_LONG_HOLDER_V01_ID =
0:                 (MIN_ID_2 + 329);
0: 
0:         /**
0:         class org.apache.derby.iapi.services.io.FormatableHashtable
0:      */
0:         static public final int FORMATABLE_HASHTABLE_V01_ID =
0:                 (MIN_ID_2 + 313);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalCharTypeId
0:          */
0:         static public final int NATIONAL_CHAR_TYPE_ID =
0:                 (MIN_ID_2 + 370);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalLongvarcharTypeId
0:          */
0:         static public final int NATIONAL_LONGVARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 362);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalLongvarcharTypeId
0:          */
0:         static public final int NCLOB_TYPE_ID = 
0:                 (MIN_ID_2 + 448);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.NationalVarcharTypeId
0:          */
0:         static public final int NATIONAL_VARCHAR_TYPE_ID =
0:                 (MIN_ID_2 + 369);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.catalog.SchemaDescriptorFinder
0:      */
0:         static public final int SCHEMA_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 371);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.catalog.ColumnDescriptorFinder
0:      */
0:         static public final int COLUMN_DESCRIPTOR_FINDER_V01_ID =
0:                 (MIN_ID_2 + 393);
0:         
0:         /******************************************************************
0:         **
0:         **      DependencySystem Formats
0:         **
0:         **
0:         **
0:         ******************************************************************/
0:         /**
0:             class org.apache.derby.iapi.sql.depend.DependableList
0:          */
0:         static public final int DEPENDABLE_LIST_ID =
0:                 (MIN_ID_2 + 243);
0:         
0:         /**
0:           ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
0:           ||
0:           ||            DEPRECATED
0:           ||
0:           ||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
0: 
0:         class org.apache.derby.impl.sql.catalog.OIDImpl
0:      */
0:         static public final int OIDIMPL_V01_ID =
0:                 (MIN_ID_2 + 15);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.BooleanTypeIdImpl
0:          */
0:         static public final int BOOLEAN_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 16);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.CharTypeIdImpl
0:          */
0:         static public final int CHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 17);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.DoubleTypeIdImpl
0:          */
0:         static public final int DOUBLE_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 18);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.IntTypeIdImpl
0:          */
0:         static public final int INT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 19);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.RealTypeIdImpl
0:          */
0:         static public final int REAL_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 20);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.RefTypeIdImpl
0:          */
0:         static public final int REF_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 21);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.SmallintTypeIdImpl
0:          */
0:         static public final int SMALLINT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 22);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.LongintTypeIdImpl
0:          */
0:         static public final int LONGINT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 23);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
0:          */
0:         //static public final int USERDEFINED_TYPE_ID_IMPL =
0:         //      (MIN_ID_2 + 24);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
0:          */
0:         //static public final int USERDEFINED_TYPE_ID_IMPL_V2 =
0:         //      (MIN_ID_2 + 264);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.UserDefinedTypeIdImpl
0:          */
0:         static public final int USERDEFINED_TYPE_ID_IMPL_V3 =
0:                 (MIN_ID_2 + 264);
0:         /**
0:             class org.apache.derby.catalog.types.TypesImplInstanceGetter
0:          */
0:         static public final int DATE_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 32);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.TypesImplInstanceGetter
0:          */
0:         static public final int TIME_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 33);
0:         /**
0:             class org.apache.derby.catalog.types.TypesImplInstanceGetter
0:          */
0:         static public final int TIMESTAMP_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 34);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.MinAggregator
0:          */
0:         static public final int AGG_MIN_V01_ID =
0:                 (MIN_ID_2 + 153);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.CountStarAggregator
0:          */
0:         static public final int AGG_COUNT_STAR_V01_ID =
0:                 (MIN_ID_2 + 150);
0: 
0: 
0:         /**
0:             class org.apache.derby.catalog.types.VarcharTypeIdImpl
0:          */
0:         static public final int VARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 25);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.catalog.ParameterDescriptorImpl
0:          */
0:         static public final int PARAMETER_DESCRIPTOR_V01_ID =
0:                 (MIN_ID_2 + 26);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.BitTypeId
0:          */
0:         static public final int BIT_TYPE_ID =
0:                 (MIN_ID_2 + 27);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.BitTypeIdImpl
0:          */
0:         static public final int BIT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 28);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.VarbitTypeId
0:          */
0:         static public final int VARBIT_TYPE_ID =
0:                 (MIN_ID_2 + 29);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.VarbitTypeId
0:          */
0:         static public final int VARBIT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 258);
0:         
0:         /**
0:                 class org.apache.derby.catalog.types.VarbitTypeIdImpl
0:          */
0:         static public final int VARBIT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 30);
0: 
0: 
0:         /**
0:                 class org.apache.derby.catalog.types.IndexDescriptorImpl
0:          */
0:         static public final int INDEX_DESCRIPTOR_IMPL_V02_ID =
0:                 (MIN_ID_2 + 387);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.TinyintTypeId
0:          */
0:         static public final int TINYINT_TYPE_ID =
0:                 (MIN_ID_2 + 195);
0:         
0:         /**
0:                 class org.apache.derby.catalog.types.TinyintTypeIdImpl
0:          */
0:         static public final int TINYINT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 196);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.DecimalTypeId
0:          */
0:         static public final int DECIMAL_TYPE_ID =
0:                 (MIN_ID_2 + 197);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.DateTypeId
0:          */
0:         static public final int DATE_TYPE_ID =
0:                 (MIN_ID_2 + 40);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.TimeTypeId
0:          */
0:         static public final int TIME_TYPE_ID =
0:                 (MIN_ID_2 + 35);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.TimestampTypeId
0:          */
0:         static public final int TIMESTAMP_TYPE_ID =
0:                 (MIN_ID_2 + 36);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.DecimalTypeIdImpl
0:          */
0:         static public final int DECIMAL_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 198);
0: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
0:          */
0:         static public final int LONGVARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 231);
0: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarcharTypeIdImpl
0:          */
0:         static public final int CLOB_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 446);
0: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
0:                 - does nto exist
0:          */
0:         static public final int LONGVARBIT_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 233);
0: 
0:         /**
0:                 class org.apache.derby.catalog.types.LongvarbitTypeIdImpl
0:                 - does not exist, but we do it the same way for BLOB as for Longvarbit...
0:          */
0:         static public final int BLOB_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 442);
0: 
0:         /**
0:             class org.apache.derby.iapi.types.BitTypeId
0:          */
0:         static public final int BIT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 253);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.DecimalTypeId
0:          */
0:         static public final int DECIMAL_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 254);
0:         
0:         /**
0:             class org.apache.derby.iapi.types.TinyintTypeId
0:          */
0:         static public final int TINYINT_COMPILATION_TYPE_ID =
0:                 (MIN_ID_2 + 257);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.NationalCharTypeIdImpl
0:          */
0:         static public final int NATIONAL_CHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 366);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.NationalVarcharTypeIdImpl
0:          */
0:         static public final int NATIONAL_VARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 367);
0: 
0:         /**
0:             class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
0:          */
0:         static public final int NATIONAL_LONGVARCHAR_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 368);
0:         
0:         /**
0:             class org.apache.derby.catalog.types.NationalLongVarcharTypeIdImpl
0:          */
0:         static public final int NCLOB_TYPE_ID_IMPL =
0:                 (MIN_ID_2 + 449);
0:         
0: 
0:         /******************************************************************
0:         **
0:         **      Execution MODULE CLASSES
0:         **
0:         ******************************************************************/
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.RenameConstantAction
0:      */
0:         static public final int RENAME_CONSTANT_ACTION_V01_ID   =
0:                 (MIN_ID_2 + 390);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.DeleteConstantAction
0:          */
0:         static public final int DELETE_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 37);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.InsertConstantAction
0:          */
0:         static public final int INSERT_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 38);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.UpdateConstantAction
0:          */
0:         static public final int UPDATABLE_VTI_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 375);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.UpdateConstantAction
0:          */
0:         static public final int UPDATE_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 39);
0: 
0:         /**
0:          */
0:         static public final int UNUSED_2_204 =
0:                 (MIN_ID_2 + 204);
0: 
0:         /**
0:             UNUSED
0:          */
0:         static public final int UNUSED_2_41 =
0:                 (MIN_ID_2 + 41);
0:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.DropAliasConstantAction
0:      */
0:         static public final int UNUSED_2_42 =
0:                 (MIN_ID_2 + 42);
0:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateSchemaConstantAction
0:      */
0:         static public final int UNUSED_2_141    =
0:                 (MIN_ID_2 + 141);
0:         
0:         /**
0:      */
0:         static public final int UNUSED_2_142    =
0:                 (MIN_ID_2 + 142);
0:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateViewConstantAction
0:      */
0:         static public final int UNUSED_2_143    =
0:                 (MIN_ID_2 + 143);
0:         
0:         /**
0:      */
0:         static public final int UNUSED_2_144    =
0:                 (MIN_ID_2 + 144);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.ProviderInfo
0:          */
0:         static public final int PROVIDER_INFO_V01_ID =
0:                 (MIN_ID_2 + 148);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.AvgAggregator
0:          */
0:         static public final int AGG_AVG_V01_ID =
0:                 (MIN_ID_2 + 149);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.CountAggregator
0:          */
0:         static public final int AGG_COUNT_V01_ID =
0:                 (MIN_ID_2 + 151);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.MaxMinAggregator
0:          */
0:         static public final int AGG_MAX_MIN_V01_ID =
0:                 (MIN_ID_2 + 152);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.SumAggregator
0:          */
0:         static public final int AGG_SUM_V01_ID =
0:                 (MIN_ID_2 + 154);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.UserAggregatorAggregator
0:          */
0:         static public final int AGG_USER_ADAPTOR_V01_ID =
0:                 (MIN_ID_2 + 323);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.StatisticsConstantAction
0:          */
0:         static public final int STATISTICS_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 155);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RunTimeStatisticsImpl
0:          */
0:         static public final int RUN_TIME_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 173);
0: 
0:         /**
0:             class org.apache.derby.Database.Language.Execution.LockTableConstantAction
0:          */
0:         static public final int UNUSED_2_275 =
0:                 (MIN_ID_2 + 275);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealProjectRestrictStatistics
0:          */
0:         static public final int REAL_PROJECT_RESTRICT_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 177);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDistinctScalarAggregateStatistics
0:          */
0:         static public final int REAL_DISTINCT_SCALAR_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 284);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealScalarAggregateStatistics
0:          */
0:         static public final int REAL_SCALAR_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 283);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealGroupedAggregateStatistics
0:          */
0:         static public final int REAL_GROUPED_AGGREGATE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 285);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealSortStatistics
0:          */
0:         static public final int REAL_SORT_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 178);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealTableScanStatistics
0:          */
0:         static public final int REAL_TABLE_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 179);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashJoinStatistics
0:          */
0:         static public final int REAL_HASH_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 304);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealNestedLoopJoinStatistics
0:          */
0:         static public final int REAL_NESTED_LOOP_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 180);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealIndexRowToBaseRowStatistics
0:          */
0:         static public final int REAL_INDEX_ROW_TO_BASE_ROW_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 181);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealAnyResultSetStatistics
0:          */
0:         static public final int REAL_ANY_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 182);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealOnceResultSetStatistics
0:          */
0:         static public final int REAL_ONCE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 183);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealCurrentOfStatistics
0:          */
0:         static public final int REAL_CURRENT_OF_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 184);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealRowResultSetStatistics
0:          */
0:         static public final int REAL_ROW_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 185);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealUnionResultSetStatistics
0:          */
0:         static public final int REAL_UNION_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 186);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashLeftOuterJoinStatistics
0:          */
0:         static public final int REAL_HASH_LEFT_OUTER_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 305);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealNestedLoopLeftOuterJoinStatistics
0:          */
0:         static public final int REAL_NESTED_LOOP_LEFT_OUTER_JOIN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 187);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealNormalizeResultSetStatistics
0:          */
0:         static public final int REAL_NORMALIZE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 188);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealInsertResultSetStatistics
0:          */
0:         static public final int REAL_INSERT_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 189);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealInsertVTIResultSetStatistics
0:          */
0:         static public final int REAL_INSERT_VTI_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 379);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealUpdateResultSetStatistics
0:          */
0:         static public final int REAL_UPDATE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 190);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDeleteResultSetStatistics
0:          */
0:         static public final int REAL_DELETE_VTI_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 380);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDeleteResultSetStatistics
0:          */
0:         static public final int REAL_DELETE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 191);
0: 
0:         /**
0:            org.apache.derby.impl.sql.execute.rts.RealDeleteCascadeResultSetStatistics"
0:          */
0:         static public final int REAL_DELETE_CASCADE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 439);
0: 
0: 
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashScanStatistics
0:          */
0:         static public final int REAL_HASH_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 203);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealDistinctScanStatistics
0:          */
0:         static public final int REAL_DISTINCT_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 334);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealHashTableStatistics
0:          */
0:         static public final int REAL_HASH_TABLE_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 306);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealVTIStatistics
0:          */
0:         static public final int REAL_VTI_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 214);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealMaterializedResultSetStatistics
0:          */
0:         static public final int REAL_MATERIALIZED_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 308);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealScrollInsensitiveResultSetStatistics
0:          */
0:         static public final int REAL_SCROLL_INSENSITIVE_RESULT_SET_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 330);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
0:      */
0:         static public final int UNUSED_2_221    =
0:                 (MIN_ID_2 + 221);
0:         
0:         /**
0:         class org.apache.derby.Database.Language.Execution.CreateSPSConstantAction
0:      */
0:         static public final int UNUSED_2_222    =
0:                 (MIN_ID_2 + 222);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.AlterSPSConstantAction
0:      */
0:         static public final int ALTER_SPS_CONSTANT_ACTION_V01_ID        =
0:                 (MIN_ID_2 + 229);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.IndexColumnOrder
0:      */
0:         static public final int INDEX_COLUMN_ORDER_V01_ID       =
0:                 (MIN_ID_2 + 218);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.AggregateInfo
0:      */
0:         static public final int AGG_INFO_V01_ID =
0:                 (MIN_ID_2 + 223);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.AggregateInfoList
0:      */
0:         static public final int AGG_INFO_LIST_V01_ID    =
0:                 (MIN_ID_2 + 224);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.DeleteConstantAction
0:                 This class is abstract so it doesn't need a format id!
0:          */
0:         static public final int WRITE_CURSOR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 227);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.ValueRow
0:          */
0:         static public final int VALUE_ROW_V01_ID =
0:                 (MIN_ID_2 + 237);
0: 
0:         /**
0:                 class org.apache.derby.Database.Language.Execution.IndexRow
0:          */
0:         static public final int INDEX_ROW_V01_ID =
0:                 (MIN_ID_2 + 238);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.execute.AddJarConstantAction;
0:          */
0:         static public final int ADD_JAR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 211);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.execute.DropJarConstantAction;
0:          */
0:         static public final int DROP_JAR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 212);
0: 
0:         /**
0:           class org.apache.derby.impl.sql.execute.ReplaceJarConstantAction;
0:          */
0:         static public final int REPLACE_JAR_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 213);
0: 
0:          /**
0:         class org.apache.derby.Database.Language.Execution.ConstraintInfo
0:      */
0:         static public final int CONSTRAINT_INFO_V01_ID  =
0:                 (MIN_ID_2 + 278);
0: 
0:         /**
0:          */
0:         static public final int UNUSED_2_280 =
0:                 (MIN_ID_2 + 280);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.FKInfo
0:      */
0:         static public final int FK_INFO_V01_ID  =
0:                 (MIN_ID_2 + 282);
0: 
0:         /**
0:          */
0:         static public final int UNUSED_2_289    =
0:                 (MIN_ID_2 + 289);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.execute.CreateTriggerConstantAction
0:      */
0:         static public final int CREATE_TRIGGER_CONSTANT_ACTION_V01_ID   =
0:                 (MIN_ID_2 + 314);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.execute.DropTriggerConstantAction
0:      */
0:         static public final int DROP_TRIGGER_CONSTANT_ACTION_V01_ID     =
0:                 (MIN_ID_2 + 315);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.execute.TriggerInfo
0:      */
0:         static public final int TRIGGER_INFO_V01_ID     =
0:                 (MIN_ID_2 + 317);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.execute.TransactionConstantAction
0:      */
0:         static public final int TRANSACTION_CONSTANT_ACTION_V01_ID      =
0:                 (MIN_ID_2 + 318);
0: 
0:         /**
0:         class org.apache.derby.Database.Language.Execution.SetTriggersConstantAction
0:          */
0:         static public final int SET_TRIGGERS_CONSTANT_ACTION_V01_ID     =
0:                 (MIN_ID_2 + 321);
0: 
0:         /**
0:             class org.apache.derby.Replication.Database.Language.Execution.RepSetTriggersConstantAction
0:          */
0:         static public final int REP_SET_TRIGGERS_CONSTANT_ACTION_V01_ID =
0:                 (MIN_ID_2 + 322);
0: 
0:         /**
0:             class org.apache.derby.impl.sql.execute.RealLastIndexKeyScanStatistics
0:          */
0:         static public final int REAL_LAST_INDEX_KEY_SCAN_STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 327);
0: 
0:         ////////////////////////////////////////////////////////////////////////////
0:         //
0:         // New versions of 2.0 Language ConstantActions, versioned in 3.0
0:         //
0:         ////////////////////////////////////////////////////////////////////////////
0: 
0: 
0:         /** class org.apache.derby.Database.Language.Execution.SetSchemaConstantAction */
0:         static public final int SET_SCHEMA_CONSTANT_ACTION_V02_ID                       = (MIN_ID_2 + 353);
0: 
0:         /** class org.apache.derby.Database.Language.Execution.SetTransactionIsolationConstantAction */
0:         static public final int SET_TRANSACTION_ISOLATION_CONSTANT_ACTION_V02_ID = (MIN_ID_2 + 354);
0: 
0:         /** class org.apache.derby.impl.sql.execute.ColumnInfo */
0:         static public final int COLUMN_INFO_V02_ID                      = (MIN_ID_2 + 358);
0: 
0:         /** class org.apache.derby.Database.Language.DependencySystem.Generic.ProviderInfo */
0:         static public final int PROVIDER_INFO_V02_ID                    = (MIN_ID_2 + 359);
0: 
0:         /** class org.apache.derby.impl.sql.execute.SavepointConstantAction */
0:         static public final int SAVEPOINT_V01_ID                      = (MIN_ID_2 + 452);
0: 
0:         /******************************************************************
0:         **
0:         **      LanguageInterface MODULE CLASSES
0:         **
0:         ******************************************************************/
0:         /**
0:         class org.apache.derby.impl.sql.GenericStorablePreparedStatement
0:      */
0:         static public final int STORABLE_PREPARED_STATEMENT_V01_ID      =
0:                 (MIN_ID_2 + 225);
0:         
0:         /**
0:         class org.apache.derby.impl.sql.GenericResultDescription
0:      */
0:         static public final int GENERIC_RESULT_DESCRIPTION_V01_ID       =
0:                 (MIN_ID_2 + 228);
0: 
0:         /**
0:         UNUSED
0:      */
0:         static public final int UNUSED_2_215    = (MIN_ID_2 + 215);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.GenericTypeDescriptor
0:      */
0:         static public final int GENERIC_TYPE_DESCRIPTOR_V01_ID  =
0:                 (MIN_ID_2 + 216);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.GenericTypeId
0:      */
0:         static public final int GENERIC_TYPE_ID_V01_ID  =
0:                 (MIN_ID_2 + 217);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.CursorTableReference
0:      */
0:         static public final int CURSOR_TABLE_REFERENCE_V01_ID   =
0:                 (MIN_ID_2 + 296);
0: 
0:         /**
0:         class org.apache.derby.impl.sql.CursorInfo
0:      */
0:         static public final int CURSOR_INFO_V01_ID      =
0:                 (MIN_ID_2 + 297);
0: 
0:         /******************************************************************
0:         **
0:         **      ALIAS INFO CLASSES
0:         **
0:         ******************************************************************/
0: 
0:         /**
0:         class org.apache.derby.catalog.types.ClassAliasInfo
0:      */
0:         static public final int CLASS_ALIAS_INFO_V01_ID =
0:                 (MIN_ID_2 + 310);
0: 
0:         /**
0:         class org.apache.derby.catalog.types.MethodAliasInfo
0:      */
0:         static public final int METHOD_ALIAS_INFO_V01_ID        =
0:                 (MIN_ID_2 + 312);
0: 
0:         /**
0:         class org.apache.derby.catalog.types.WorkUnitAliasInfo
0:      */
0:         static public final int WORK_UNIT_ALIAS_INFO_V01_ID     =
0:                 (MIN_ID_2 + 309);
0: 
0:         /**
0:         class org.apache.derby.catalog.types.UserAggregateAliasInfo
0:      */
0:         static public final int USER_AGGREGATE_ALIAS_INFO_V01_ID        =
0:                 (MIN_ID_2 + 311);
0: 
0: 
0: 
0: 	public static final int ROUTINE_INFO_V01_ID = (MIN_ID_2 + 451);
0: 
0: 	/******************************************************************
0: 	**
0: 	**	DEFAULT INFO CLASSES
0: 	**
0: 	******************************************************************/
0:                 
0:         /**
0:         class org.apache.derby.catalog.types.DefaultInfoImpl
0:      */
0:         static public final int DEFAULT_INFO_IMPL_V01_ID =
0:                 (MIN_ID_2 + 326);
0: 
0: 
0: 
0: 
0: 
0:         /**
0:         class org.apache.derby.impl.sql.GenericColumnDescriptor
0:      */
0:         static public final int GENERIC_COLUMN_DESCRIPTOR_V02_ID        =
0:                 (MIN_ID_2 + 383);
0: 
0: 
0:         /**
0:                 UNUSED (MIN_ID_2 + 384)
0:         */
0: 
0:         /**
0:             UNUSED (MIN_ID_2 + 382)
0:          */
0: 
0:         
0: 
0: 
0:         /******************************************************************
0:         **
0:         **  Type system id's
0:         **
0:         ******************************************************************/
0: 
0:         public static final int SQL_BOOLEAN_ID = 
0:                 (MIN_ID_2 + 77);
0: 
0:         public static final int SQL_CHAR_ID = 
0:                 (MIN_ID_2 + 78);
0: 
0:         public static final int SQL_DOUBLE_ID = 
0:                 (MIN_ID_2 + 79);
0: 
0:         public static final int SQL_INTEGER_ID = 
0:                 (MIN_ID_2 + 80);
0: 
0:         public static final int SQL_REAL_ID = 
0:                 (MIN_ID_2 + 81);
0: 
0:         public static final int SQL_REF_ID = 
0:                 (MIN_ID_2 + 82);
0: 
0:         public static final int SQL_SMALLINT_ID = 
0:                 (MIN_ID_2 + 83);
0: 
0:         public static final int SQL_LONGINT_ID = 
0:                 (MIN_ID_2 + 84);
0: 
0:         public static final int SQL_VARCHAR_ID = 
0:                 (MIN_ID_2 + 85);
0: 
0:         //public static final int SQL_USERTYPE_ID = 
0:         //      (MIN_ID_2 + 86);
0: 
0:         //public static final int SQL_USERTYPE_ID_V2 = 
0:         //      (MIN_ID_2 + 266);
0: 
0:         public static final int SQL_USERTYPE_ID_V3 = 
0:                 (MIN_ID_2 + 266);
0: 
0:         public static final int SQL_DATE_ID = 
0:                 (MIN_ID_2 + 298);
0: 
0:         public static final int SQL_TIME_ID = 
0:                 (MIN_ID_2 + 299);
0: 
0:         public static final int SQL_TIMESTAMP_ID = 
0:                 (MIN_ID_2 + 31);
0: 
0:         public static final int SQL_BIT_ID = 
0:                 (MIN_ID_2 + 87);
0: 
0:         public static final int SQL_VARBIT_ID = 
0:                 (MIN_ID_2 + 88);
0: 
0:         public static final int SQL_TINYINT_ID = 
0:                 (MIN_ID_2 + 199);
0: 
0:         public static final int SQL_DECIMAL_ID = 
0:                 (MIN_ID_2 + 200);
0: 
0:         public static final int SQL_LONGVARCHAR_ID =
0:                 (MIN_ID_2 + 235);
0: 
0:         public static final int SQL_CLOB_ID =
0:                 (MIN_ID_2 + 447);
0: 
0:         public static final int SQL_LONGVARBIT_ID =
0:                 (MIN_ID_2 + 234);
0: 
0:         public static final int SQL_BLOB_ID =
0:                 (MIN_ID_2 + 443);
0: 
0:         public static final int SQL_NATIONAL_CHAR_ID = 
0:                 (MIN_ID_2 + 363);
0: 
0:         public static final int SQL_NATIONAL_VARCHAR_ID = 
0:                 (MIN_ID_2 + 364);
0: 
0:         public static final int SQL_NATIONAL_LONGVARCHAR_ID = 
0:                 (MIN_ID_2 + 365);
0: 
0:         public static final int SQL_NCLOB_ID = 
0:                 (MIN_ID_2 + 450);
0: 
0:         /******************************************************************
0:         ** 
0:         ** Access ids.
0:         **
0:         **
0:         **
0:         ******************************************************************/
0:         public static final int ACCESS_U8_V1_ID =
0:                 (MIN_ID_2 + 89);
0: 
0:         public static final int ACCESS_HEAP_ROW_LOCATION_V1_ID =
0:                 (MIN_ID_2 + 90);
0: 
0:         public static final int ACCESS_HEAP_V2_ID =
0:                 (MIN_ID_2 + 91);
0: 
0:         public static final int ACCESS_B2I_V2_ID =
0:                 (MIN_ID_2 + 92);
0: 
0:         public static final int ACCESS_FORMAT_ID =
0:                 (MIN_ID_2 + 93);
0: 
0:         public static final int ACCESS_T_STRINGCOLUMN_ID =
0:                 (MIN_ID_2 + 94);
0: 
0:         public static final int ACCESS_B2IUNDO_V1_ID =
0:                 (MIN_ID_2 + 95);
0: 
0:     // Deleted as part of 7.2 rebrand project.
0: 
0:     /*
0:         public static final int ACCESS_CONGLOMDIR_V1_ID =
0:                 (MIN_ID_2 + 96);
0:     */
0:         public static final int ACCESS_BTREE_LEAFCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 133);
0: 
0:         public static final int ACCESS_BTREE_BRANCHCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 134);
0: 
0:         public static final int ACCESS_SERIALIZABLEWRAPPER_V1_ID =
0:                 (MIN_ID_2 + 202);
0: 
0:         public static final int ACCESS_B2I_STATIC_COMPILED_V1_ID =
0:                 (MIN_ID_2 + 360);
0: 
0:     public static final int ACCESS_TREE_V1_ID =
0:         (MIN_ID_2 + 386);
0: 
0:         public static final int ACCESS_B2I_V3_ID =
0:                 (MIN_ID_2 + 388);
0: 
0:         public static final int ACCESS_GISTUNDO_V1_ID =
0:                 (MIN_ID_2 + 389);
0: 
0:         public static final int ACCESS_GIST_LEAFCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 394);
0: 
0:         public static final int ACCESS_GIST_BRANCHCONTROLROW_V1_ID =
0:                 (MIN_ID_2 + 395);
0: 
0:         public static final int STATISTICS_IMPL_V01_ID =
0:                 (MIN_ID_2 + 397);
0: 
0:         public static final int UPDATE_STATISTICS_CONSTANT_ACTION_ID =
0:                 (MIN_ID_2 +     398);
0: 
0:         public static final int DROP_STATISTICS_CONSTANT_ACTION_ID =
0:                 (MIN_ID_2 + 399);
0: 
0:         public static final int ACCESS_GIST_RTREE_V1_ID =
0:                 (MIN_ID_2 + 400);
0: 
0:         public static final int ACCESS_T_RECTANGLE_ID =
0:                 (MIN_ID_4 + 34);
0: 
0:         public static final int ACCESS_T_INTCOL_V1_ID =               MIN_ID_4 + 4;
0: 
0:         /******************************************************************
0:         **
0:         ** PropertyConglomerate
0:         ** 
0:         ** 
0:         ** 
0:         ******************************************************************/
0:         /** class org.apache.derby.impl.store.access.PropertyConglomerate */
0:           
0:         static public final int PC_XENA_VERSION_ID =
0:                 (MIN_ID_2 + 15);
0: 
0: 
0:         /******************************************************************
0:         **
0:         ** Raw Store Log operation Ids
0:         **
0:         **
0:         **
0:         ******************************************************************/
0: 
0:         /* org.apache.derby.impl.store.raw.data.ChainAllocPageOperation */
0:         public static final int LOGOP_CHAIN_ALLOC_PAGE = 
0:                 (MIN_ID_2 + 97);
0: 
0:         /* org.apache.derby.impl.store.raw.xact.BeginXact */
0:         public static final int LOGOP_BEGIN_XACT = 
0:                 (MIN_ID_2 + 169);
0: 
0:         /* org.apache.derby.impl.store.raw.log.CheckpointOperation */
0:         public static final int LOGOP_CHECKPOINT =
0:                 (MIN_ID_2 + 263);
0: 
0:         /* org.apache.derby.impl.store.raw.data.ContainerOperation */
0:         /* creating, dropping, removing container */
0:         public static final int LOGOP_CONTAINER = 
0:                 (MIN_ID_2 + 242);
0: 
0:         /* org.apache.derby.impl.store.raw.data.DeleteOperation */
0:         public static final int LOGOP_DELETE = 
0:                 (MIN_ID_2 + 101);
0: 
0:         /* org.apache.derby.impl.store.raw.xact.EndXact */
0:         public static final int LOGOP_END_XACT = 
0:                 (MIN_ID_2 + 102);
0: 
0:         /* org.apache.derby.impl.store.raw.data.InsertOperation */
0:         public static final int LOGOP_INSERT = 
0:                 (MIN_ID_2 + 103);
0: 
0:         /* org.apache.derby.impl.store.raw.data.LogicalUndoOperation */
0:         public static final int LOGOP_PAGE_LOGICAL_UNDO = 
0:                 (MIN_ID_2 + 104);
0: 
0:         /* org.apache.derby.impl.store.raw.data.PhysicalUndoOperation */
0:         public static final int LOGOP_PAGE_PHYSICAL_UNDO = 
0:                 (MIN_ID_2 + 105);
0: 
0:         /* org.apache.derby.impl.store.raw.data.PurgeOperation */
0:         public static final int LOGOP_PURGE = 
0:                 (MIN_ID_2 + 106);
0: 
0:         /* org.apache.derby.impl.store.raw.data.ContainerUndoOperation */
0:         public static final int LOGOP_CONTAINER_UNDO = 
0:                 (MIN_ID_2 + 107);
0: 
0:         /* org.apache.derby.impl.store.raw.data.UpdateOperation */
0:         public static final int LOGOP_UPDATE =
0:                 (MIN_ID_2 + 108);
0: 
0:         /* org.apache.derby.impl.store.raw.data.UpdateFieldOperation */
0:         public static final int LOGOP_UPDATE_FIELD =
0:                 (MIN_ID_2 + 109);
0: 
0:         /* org.apache.derby.impl.store.raw.data.CopyRowsOperation */
0:         public static final int LOGOP_COPY_ROWS = 
0:                 (MIN_ID_2 + 210);
0: 
0:         /* org.apache.derby.impl.store.raw.data.AllocPageOperation */
0:         public static final int LOGOP_ALLOC_PAGE = 
0:                 (MIN_ID_2 + 111);
0: 
0:         /*org.apache.derby.impl.store.raw.data.InitPageOperation */
0:         public static final int LOGOP_INIT_PAGE =
0:                 (MIN_ID_2 + 241);
0: 
0:         /* org.apache.derby.impl.store.raw.data.InvalidatePageOperation */
0:         public static final int LOGOP_INVALIDATE_PAGE =
0:                 (MIN_ID_2 + 113);
0: 
0:         /* org.apache.derby.impl.store.raw.data.SetReservedSpaceOperation */
0:         public static final int LOGOP_SET_RESERVED_SPACE = 
0:                 (MIN_ID_2 + 287);
0: 
0:         /* org.apache.derby.impl.store.raw.log.SaveLWMOperation */
0:         public static final int LOGOP_SAVE_LWM =
0:                 (MIN_ID_2 + 114);
0: 
0: 
0:         /* org.apache.derby.impl.store.raw.data.RemoveFileOperation */
0:         public static final int LOGOP_REMOVE_FILE =
0:                 (MIN_ID_2 + 291);
0: 
0: 
0:         /*******************************************************************
0:         **
0:         ** container types
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.data.FileContainer */
0:         public static final int RAW_STORE_SINGLE_CONTAINER_FILE = 
0:                 (MIN_ID_2 + 116);
0: 
0:         /* org.apache.derby.impl.store.raw.data.StreamFileContainer */
0:         public static final int RAW_STORE_SINGLE_CONTAINER_STREAM_FILE = 
0:                 (MIN_ID_2 + 290);
0: 
0:         /*******************************************************************
0:         **
0:         ** page types
0:         **
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.data.StoredPage */
0:         public static final int RAW_STORE_STORED_PAGE =
0:                 (MIN_ID_2 + 117);
0: 
0:         /* org.apache.derby.impl.store.raw.data.AllocPage */
0:         public static final int RAW_STORE_ALLOC_PAGE =
0:                 (MIN_ID_2 + 118);
0: 
0: 
0:         /*****************************************************************
0:         **
0:         ** Log files
0:         **
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.log.LogToFile */
0:         public static final int FILE_STREAM_LOG_FILE = 
0:                 (MIN_ID_2 + 128);
0: 
0: 
0:         /*****************************************************************
0:         **
0:         ** Log record
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.store.raw.log.LogRecord */
0:         public static final int LOG_RECORD = 
0:                 (MIN_ID_2 + 129);
0: 
0:         /* org.apache.derby.impl.store.raw.log.LogCounter */
0:         public static final int LOG_COUNTER = 
0:                 (MIN_ID_2 + 130);
0: 
0:         /******************************************************************
0:         **
0:         **  identifiers
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.impl.services.uuid.BasicUUID */
0:         public static final int BASIC_UUID = 
0:                 (MIN_ID_2 + 131);
0: 
0:         /*
0:          *      Transaction Ids
0:          */
0: 
0:         /* org.apache.derby.impl.store.raw.xact.GlobalXactId */
0:         public static final int RAW_STORE_GLOBAL_XACT_ID_V20 = 
0:                 (MIN_ID_2 + 132);
0: 
0:         /* org.apache.derby.impl.store.raw.xact.XactId */
0:         public static final int RAW_STORE_XACT_ID = 
0:                 (MIN_ID_2 + 147);
0: 
0:         /* org.apache.derby.impl.store.raw.xact.XAXactId */
0:         public static final int RAW_STORE_GLOBAL_XACT_ID_NEW = 
0:                 (MIN_ID_2 + 328);
0: 
0:         /*
0:          * Transaction table
0:          */
0:         /* org.apache.derby.impl.store.raw.xact.TransactionTableEntry */
0:         public static final int RAW_STORE_TRANSACTION_TABLE_ENTRY =
0:                 (MIN_ID_2 + 261);
0: 
0:         /* org.apache.derby.impl.store.raw.xact.TransactionTable */
0:         public static final int RAW_STORE_TRANSACTION_TABLE =
0:                 (MIN_ID_2 + 262);
0: 
0:                 
0:         /******************************************************************
0:         **
0:         **  LocalDriver Formatables.
0:         **
0:         ******************************************************************/
0: 
0:         /* NOT USED = org.apache.derby.impl.jdbc.ExternalizableConnection */
0:         public static final int EXTERNALIZABLE_CONNECTION_ID = (MIN_ID_2 + 192);
0: 
0: 
0:         /******************************************************************
0:         **
0:         **      InternalUtils MODULE CLASSES
0:         **
0:         ******************************************************************/
0:         /* org.apache.derby.iapi.util.ByteArray */
0:         public static final int FORMATABLE_BYTE_ARRAY_V01_ID = (MIN_ID_2 + 219);
0: 
0: 
0:        /******************************************************************
0:         **
0:         **  UDPATE MAX_ID_2 WHEN YOU ADD A NEW FORMATABLE
0:         **
0:         ******************************************************************/
0: 
0:    
0:         /*
0:          * Make sure this is updated when a new module is added
0:          */
0:         public static final int MAX_ID_2 =
0:                 (MIN_ID_2 + 452);
0: 
0:         // DO NOT USE 4 BYTE IDS ANYMORE
0:         static public final int MAX_ID_4 =
0:             MIN_ID_4 + 34;
0: }
0: 
============================================================================