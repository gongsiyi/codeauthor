1:aaea357: /*
2:aaea357: 
1:aaea357: 	Derby - Class org.apache.derby.ui.properties.DerbyProperties
1:aaea357: 	
1:23683f1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1:23683f1: 	contributor license agreements.  See the NOTICE file distributed with
1:23683f1: 	this work for additional information regarding copyright ownership.
1:23683f1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1:23683f1: 	(the "License"); you may not use this file except in compliance with
1:23683f1: 	the License.  You may obtain a copy of the License at
1:aaea357: 	
1:aaea357: 	   http://www.apache.org/licenses/LICENSE-2.0
1:aaea357: 	
1:aaea357: 	Unless required by applicable law or agreed to in writing, software
1:aaea357: 	distributed under the License is distributed on an "AS IS" BASIS,
1:aaea357: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:aaea357: 	See the License for the specific language governing permissions and
1:aaea357: 	limitations under the License.
1:aaea357: 
1:aaea357: */
1:aaea357: 
1:aaea357: package org.apache.derby.ui.properties;
1:aaea357: 
1:aaea357: import org.apache.derby.ui.common.CommonNames;
1:aaea357: import org.eclipse.core.resources.IProject;
1:aaea357: import org.eclipse.core.runtime.CoreException;
1:aaea357: import org.eclipse.core.runtime.QualifiedName;
1:aaea357: import org.eclipse.jdt.core.IJavaProject;
1:aaea357: 
1:aaea357: 
1:aaea357: 
1:aaea357: public class DerbyProperties {
1:aaea357: 
1:aaea357: 	public static final String DSPORT = "ds.port";
1:aaea357: 	//public static final String DS_RUNNING_PORT = "ds.running.port";
1:aaea357: 	public static final String DSHOST = "ds.host";
1:aaea357: 	public static final String DS_SYS_HOME = "derby.system.home";
1:aaea357: 	
1:aaea357: 	//Default Derby Properties
1:aaea357: 	private int port = 1527;
1:aaea357: 	//private int runningPort=0;
1:aaea357: 	private String host = "localhost";
1:aaea357: 	private String systemHome = ".";
1:aaea357: 	
1:aaea357: 	public DerbyProperties() {}
1:aaea357: 	
1:aaea357: 	public DerbyProperties(IJavaProject javaProject) throws CoreException {
1:aaea357: 		load(javaProject.getProject());
1:aaea357: 	}
1:aaea357: 	public DerbyProperties(IProject project) throws CoreException {
1:aaea357: 		load(project);
1:aaea357: 	}
1:aaea357: 	
1:aaea357: 	public void save(IProject project) throws CoreException {
1:aaea357: 		
1:aaea357: 		project.setPersistentProperty(new QualifiedName (
1:aaea357: 			CommonNames.UI_PATH, DSPORT), Integer.toString(port));
1:aaea357: 		project.setPersistentProperty(new QualifiedName (
1:aaea357: 			CommonNames.UI_PATH, DSHOST), host);
1:aaea357: 		project.setPersistentProperty(new QualifiedName (
1:aaea357: 			CommonNames.UI_PATH, DS_SYS_HOME), systemHome);
1:aaea357: //		project.setPersistentProperty(new QualifiedName (
1:aaea357: //				CommonNames.UI_PATH, DS_RUNNING_PORT), Integer.toString(runningPort));
1:aaea357: 	}
1:aaea357: 	
1:aaea357: 	public void load(IProject project) throws CoreException {
1:aaea357: 		
1:aaea357: 		String property = project.getPersistentProperty(new QualifiedName (
1:aaea357: 				CommonNames.UI_PATH, DSPORT));
1:aaea357: 		port = (property != null && property.length() > 0) ? Integer.parseInt(property) : port;
1:aaea357: 		property = project.getPersistentProperty(new QualifiedName (
1:aaea357: 				CommonNames.UI_PATH, DSHOST));
1:aaea357: 		host = (property != null && property.length() > 0) ? property : host;
1:aaea357: 		property = project.getPersistentProperty(new QualifiedName (
1:aaea357: 				CommonNames.UI_PATH, DS_SYS_HOME));
1:aaea357: 		systemHome = (property != null && property.length() > 0) ? property : systemHome;
1:aaea357: //		property = project.getPersistentProperty(new QualifiedName (
1:aaea357: //				CommonNames.UI_PATH, DS_RUNNING_PORT));
1:aaea357: //		runningPort = (property != null && property.length() > 0) ? Integer.parseInt(property) : runningPort;
1:aaea357: 	}
1:aaea357: 	public String toString(){
1:aaea357: 		return "Derby Server Properties:\n Port = "+getPort()+" Host = "+getHost()+" System Home = "+getSystemHome();
1:aaea357: 	}
1:aaea357: 	
1:aaea357: 	/**
1:aaea357: 	 * @return Returns the host.
1:aaea357: 	 */
1:aaea357: 	public String getHost() {
1:aaea357: 		return host;
1:aaea357: 	}
1:aaea357: 	/**
1:aaea357: 	 * @param host The host to set.
1:aaea357: 	 */
1:aaea357: 	public void setHost(String host) {
1:aaea357: 		this.host = host;
1:aaea357: 	}
1:aaea357: 	/**
1:aaea357: 	 * @return Returns the port.
1:aaea357: 	 */
1:aaea357: 	public int getPort() {
1:aaea357: 		return port;
1:aaea357: 	}
1:aaea357: 	/**
1:aaea357: 	 * @param port The port to set.
1:aaea357: 	 */
1:aaea357: 	public void setPort(int port) {
1:aaea357: 		this.port = port;
1:aaea357: 	}
1:aaea357: 	/**
1:aaea357: 	 * @return Returns the systemHome.
1:aaea357: 	 */
1:aaea357: 	public String getSystemHome() {
1:aaea357: 		return systemHome;
1:aaea357: 	}
1:aaea357: 	/**
1:aaea357: 	 * @param systemHome The systemHome to set.
1:aaea357: 	 */
1:aaea357: 	public void setSystemHome(String systemHome) {
1:aaea357: 		this.systemHome = systemHome;
1:aaea357: 	}
1:aaea357: 	
1:aaea357: }
1:aaea357: 
============================================================================
author:Jean T. Anderson
-------------------------------------------------------------------------------
commit:23683f1
/////////////////////////////////////////////////////////////////////////
1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1: 	contributor license agreements.  See the NOTICE file distributed with
1: 	this work for additional information regarding copyright ownership.
1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1: 	(the "License"); you may not use this file except in compliance with
1: 	the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: 	Derby - Class org.apache.derby.ui.properties.DerbyProperties
1: 	
0: 	Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 	
0: 	Licensed under the Apache License, Version 2.0 (the "License");
0: 	you may not use this file except in compliance with the License.
0: 	You may obtain a copy of the License at
1: 	
1: 	   http://www.apache.org/licenses/LICENSE-2.0
1: 	
1: 	Unless required by applicable law or agreed to in writing, software
1: 	distributed under the License is distributed on an "AS IS" BASIS,
1: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: 	See the License for the specific language governing permissions and
1: 	limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.ui.properties;
1: 
1: import org.apache.derby.ui.common.CommonNames;
1: import org.eclipse.core.resources.IProject;
1: import org.eclipse.core.runtime.CoreException;
1: import org.eclipse.core.runtime.QualifiedName;
1: import org.eclipse.jdt.core.IJavaProject;
1: 
1: 
1: 
1: public class DerbyProperties {
1: 
1: 	public static final String DSPORT = "ds.port";
1: 	//public static final String DS_RUNNING_PORT = "ds.running.port";
1: 	public static final String DSHOST = "ds.host";
1: 	public static final String DS_SYS_HOME = "derby.system.home";
1: 	
1: 	//Default Derby Properties
1: 	private int port = 1527;
1: 	//private int runningPort=0;
1: 	private String host = "localhost";
1: 	private String systemHome = ".";
1: 	
1: 	public DerbyProperties() {}
1: 	
1: 	public DerbyProperties(IJavaProject javaProject) throws CoreException {
1: 		load(javaProject.getProject());
1: 	}
1: 	public DerbyProperties(IProject project) throws CoreException {
1: 		load(project);
1: 	}
1: 	
1: 	public void save(IProject project) throws CoreException {
1: 		
1: 		project.setPersistentProperty(new QualifiedName (
1: 			CommonNames.UI_PATH, DSPORT), Integer.toString(port));
1: 		project.setPersistentProperty(new QualifiedName (
1: 			CommonNames.UI_PATH, DSHOST), host);
1: 		project.setPersistentProperty(new QualifiedName (
1: 			CommonNames.UI_PATH, DS_SYS_HOME), systemHome);
1: //		project.setPersistentProperty(new QualifiedName (
1: //				CommonNames.UI_PATH, DS_RUNNING_PORT), Integer.toString(runningPort));
1: 	}
1: 	
1: 	public void load(IProject project) throws CoreException {
1: 		
1: 		String property = project.getPersistentProperty(new QualifiedName (
1: 				CommonNames.UI_PATH, DSPORT));
1: 		port = (property != null && property.length() > 0) ? Integer.parseInt(property) : port;
1: 		property = project.getPersistentProperty(new QualifiedName (
1: 				CommonNames.UI_PATH, DSHOST));
1: 		host = (property != null && property.length() > 0) ? property : host;
1: 		property = project.getPersistentProperty(new QualifiedName (
1: 				CommonNames.UI_PATH, DS_SYS_HOME));
1: 		systemHome = (property != null && property.length() > 0) ? property : systemHome;
1: //		property = project.getPersistentProperty(new QualifiedName (
1: //				CommonNames.UI_PATH, DS_RUNNING_PORT));
1: //		runningPort = (property != null && property.length() > 0) ? Integer.parseInt(property) : runningPort;
1: 	}
1: 	public String toString(){
1: 		return "Derby Server Properties:\n Port = "+getPort()+" Host = "+getHost()+" System Home = "+getSystemHome();
1: 	}
1: 	
1: 	/**
1: 	 * @return Returns the host.
1: 	 */
1: 	public String getHost() {
1: 		return host;
1: 	}
1: 	/**
1: 	 * @param host The host to set.
1: 	 */
1: 	public void setHost(String host) {
1: 		this.host = host;
1: 	}
1: 	/**
1: 	 * @return Returns the port.
1: 	 */
1: 	public int getPort() {
1: 		return port;
1: 	}
1: 	/**
1: 	 * @param port The port to set.
1: 	 */
1: 	public void setPort(int port) {
1: 		this.port = port;
1: 	}
1: 	/**
1: 	 * @return Returns the systemHome.
1: 	 */
1: 	public String getSystemHome() {
1: 		return systemHome;
1: 	}
1: 	/**
1: 	 * @param systemHome The systemHome to set.
1: 	 */
1: 	public void setSystemHome(String systemHome) {
1: 		this.systemHome = systemHome;
1: 	}
1: 	
1: }
1: 
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:00daaff
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0: 	Derby - Class org.apache.derby.ui.properties.DerbyProperties
0: 	
0: 	Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
0: 	
0: 	Licensed under the Apache License, Version 2.0 (the "License");
0: 	you may not use this file except in compliance with the License.
0: 	You may obtain a copy of the License at
0: 	
0: 	   http://www.apache.org/licenses/LICENSE-2.0
0: 	
0: 	Unless required by applicable law or agreed to in writing, software
0: 	distributed under the License is distributed on an "AS IS" BASIS,
0: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0: 	See the License for the specific language governing permissions and
0: 	limitations under the License.
0: 
0: */
0: 
0: package org.apache.derby.ui.properties;
0: 
0: import org.apache.derby.ui.common.CommonNames;
0: import org.eclipse.core.resources.IProject;
0: import org.eclipse.core.runtime.CoreException;
0: import org.eclipse.core.runtime.QualifiedName;
0: import org.eclipse.jdt.core.IJavaProject;
0: 
0: 
0: 
0: public class DerbyProperties {
0: 
0: 	public static final String DSPORT = "ds.port";
0: 	//public static final String DS_RUNNING_PORT = "ds.running.port";
0: 	public static final String DSHOST = "ds.host";
0: 	public static final String DS_SYS_HOME = "derby.system.home";
0: 	
0: 	//Default Derby Properties
0: 	private int port = 1527;
0: 	//private int runningPort=0;
0: 	private String host = "localhost";
0: 	private String systemHome = ".";
0: 	
0: 	public DerbyProperties() {}
0: 	
0: 	public DerbyProperties(IJavaProject javaProject) throws CoreException {
0: 		load(javaProject.getProject());
0: 	}
0: 	public DerbyProperties(IProject project) throws CoreException {
0: 		load(project);
0: 	}
0: 	
0: 	public void save(IProject project) throws CoreException {
0: 		
0: 		project.setPersistentProperty(new QualifiedName (
0: 			CommonNames.UI_PATH, DSPORT), Integer.toString(port));
0: 		project.setPersistentProperty(new QualifiedName (
0: 			CommonNames.UI_PATH, DSHOST), host);
0: 		project.setPersistentProperty(new QualifiedName (
0: 			CommonNames.UI_PATH, DS_SYS_HOME), systemHome);
0: //		project.setPersistentProperty(new QualifiedName (
0: //				CommonNames.UI_PATH, DS_RUNNING_PORT), Integer.toString(runningPort));
0: 	}
0: 	
0: 	public void load(IProject project) throws CoreException {
0: 		
0: 		String property = project.getPersistentProperty(new QualifiedName (
0: 				CommonNames.UI_PATH, DSPORT));
0: 		port = (property != null && property.length() > 0) ? Integer.parseInt(property) : port;
0: 		property = project.getPersistentProperty(new QualifiedName (
0: 				CommonNames.UI_PATH, DSHOST));
0: 		host = (property != null && property.length() > 0) ? property : host;
0: 		property = project.getPersistentProperty(new QualifiedName (
0: 				CommonNames.UI_PATH, DS_SYS_HOME));
0: 		systemHome = (property != null && property.length() > 0) ? property : systemHome;
0: //		property = project.getPersistentProperty(new QualifiedName (
0: //				CommonNames.UI_PATH, DS_RUNNING_PORT));
0: //		runningPort = (property != null && property.length() > 0) ? Integer.parseInt(property) : runningPort;
0: 	}
0: 	public String toString(){
0: 		return "Derby Server Properties:\n Port = "+getPort()+" Host = "+getHost()+" System Home = "+getSystemHome();
0: 	}
0: 	
0: 	/**
0: 	 * @return Returns the host.
0: 	 */
0: 	public String getHost() {
0: 		return host;
0: 	}
0: 	/**
0: 	 * @param host The host to set.
0: 	 */
0: 	public void setHost(String host) {
0: 		this.host = host;
0: 	}
0: 	/**
0: 	 * @return Returns the port.
0: 	 */
0: 	public int getPort() {
0: 		return port;
0: 	}
0: 	/**
0: 	 * @param port The port to set.
0: 	 */
0: 	public void setPort(int port) {
0: 		this.port = port;
0: 	}
0: 	/**
0: 	 * @return Returns the systemHome.
0: 	 */
0: 	public String getSystemHome() {
0: 		return systemHome;
0: 	}
0: 	/**
0: 	 * @param systemHome The systemHome to set.
0: 	 */
0: 	public void setSystemHome(String systemHome) {
0: 		this.systemHome = systemHome;
0: 	}
0: 	
0: }
0: 
============================================================================