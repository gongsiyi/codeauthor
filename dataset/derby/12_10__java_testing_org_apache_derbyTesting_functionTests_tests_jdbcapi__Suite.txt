1:2fd14fb: /*
1:f7b3a7a: 
1:2fd14fb:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi._Suite
1:ba50299: 
1:2fd14fb:        Licensed to the Apache Software Foundation (ASF) under one
1:2fd14fb:        or more contributor license agreements.  See the NOTICE file
1:2fd14fb:        distributed with this work for additional information
1:2fd14fb:        regarding copyright ownership.  The ASF licenses this file
1:2fd14fb:        to you under the Apache License, Version 2.0 (the
1:2fd14fb:        "License"); you may not use this file except in compliance
1:2fd14fb:        with the License.  You may obtain a copy of the License at
1:48e4237: 
1:2fd14fb:          http://www.apache.org/licenses/LICENSE-2.0
1:c7fdf72: 
1:2fd14fb:        Unless required by applicable law or agreed to in writing,
1:2fd14fb:        software distributed under the License is distributed on an
1:2fd14fb:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:2fd14fb:        KIND, either express or implied.  See the License for the
1:2fd14fb:        specific language governing permissions and limitations
1:2fd14fb:        under the License
1:2fd14fb: */
1:2fd14fb: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1:d029255: 
1:1ae02c9: import junit.framework.Test;
1:3bd1dd8: import org.apache.derbyTesting.junit.BaseTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:3bd1dd8: import org.apache.derbyTesting.junit.JDBC;
1:78062b5: 
1:2fd14fb: /**
1:2fd14fb:  * Suite to run all JUnit tests in this package:
1:2fd14fb:  * org.apache.derbyTesting.functionTests.tests.jdbcapi
1:2fd14fb:  *
1:2fd14fb:  */
1:2fd14fb: public class _Suite extends BaseTestCase  {
12:2fd14fb: 
1:2fd14fb: 	/**
1:2fd14fb: 	 * Use suite method instead.
1:2fd14fb: 	 */
1:2fd14fb: 	private _Suite(String name) {
1:2fd14fb: 		super(name);
1:78062b5: 	}
1:f7672a4: 
1:2fd14fb: 	public static Test suite() {
1:f7672a4: 
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("jdbcapi");
1:2fd14fb: 
1:34674cd:         suite.addTest(BlobSetBytesBoundaryTest.suite());
1:2fd14fb: 		suite.addTest(ConcurrencyTest.suite());
1:7d521f5:         suite.addTest(DaylightSavingTest.suite());
1:d038483: 		suite.addTest(HoldabilityTest.suite());
1:86226a2:         suite.addTest(Derby5158Test.suite());
1:afff7e0: 		suite.addTest(LobLengthTest.suite()); 
1:2fd14fb: 		suite.addTest(ProcedureTest.suite());
1:2fd14fb: 		suite.addTest(SURQueryMixTest.suite());
1:2fd14fb: 		suite.addTest(SURTest.suite());
1:39f0f38: 		suite.addTest(UpdatableResultSetTest.suite());
1:2fd14fb: 		suite.addTest(UpdateXXXTest.suite());
1:985662b: 		suite.addTest(URCoveringIndexTest.suite());
1:afff7e0: 		suite.addTest(ResultSetCloseTest.suite());
1:88f1e26: 		suite.addTest(BlobClob4BlobTest.suite());
1:3f965ed: 		suite.addTest(CharacterStreamsTest.suite());
1:a86bac7: 		suite.addTest(BatchUpdateTest.suite());
1:9fd7e3e: 		suite.addTest(StreamTest.suite());
1:674c2a4: 		suite.addTest(DboPowersTest.suite());
1:6aa0b12: 		suite.addTest(BlobStoredProcedureTest.suite());
1:6aa0b12: 		suite.addTest(ClobStoredProcedureTest.suite());
1:afff7e0: 		suite.addTest(CallableTest.suite());
1:aa53134: 		suite.addTest(ResultSetMiscTest.suite());
1:5698f98: 		suite.addTest(PrepStmtMetaDataTest.suite());
1:afff7e0: 		suite.addTest(ScrollResultSetTest.suite());
1:f53b02e: 		suite.addTest(LobStreamsTest.suite());
1:341554e: 		suite.addTest(ResultSetJDBC30Test.suite());
1:afff7e0: 		suite.addTest(DatabaseMetaDataTest.suite());
1:6afb55c: 		suite.addTest(ClosedObjectTest.suite());
1:c2b437d: 		suite.addTest(SetTransactionIsolationTest.suite());
1:1b46090: 		suite.addTest(AuthenticationTest.suite());
1:d1a4768: 		if (!JDBC.vmSupportsJSR169()) {
1:d1a4768: 		    // DERBY-5069 Suites.All fails with InvocationTargetException
1:d1a4768: 		    suite.addTest(DriverTest.suite());
1:d1a4768: 		}
1:1af246f: 		suite.addTest(SURijTest.suite());
1:1350ae2: 		suite.addTest(NullSQLTextTest.suite());
1:1302ca5: 		suite.addTest(PrepStmtNullTest.suite());
1:e507229: 		suite.addTest(StatementJdbc30Test.suite());
1:aee2d05: 		suite.addTest(StatementJdbc20Test.suite());
1:a78e683:         suite.addTest(ClobTest.suite());
1:a535ea9:         suite.addTest(BlobUpdatableStreamTest.suite());
1:32d1091:         suite.addTest(AIjdbcTest.suite());
1:a3acaa5:         suite.addTest(LargeDataLocksTest.suite());
1:af2718a:         suite.addTest(DMDBugsTest.suite());
1:0f9b584:         suite.addTest(DataSourceTest.suite());
1:a95545d:         suite.addTest(SavepointJdbc30Test.suite());
1:f945aa4:         suite.addTest(RelativeTest.suite());
1:d8b7f84:         suite.addTest(metadataMultiConnTest.suite());
1:6384512:         suite.addTest(ResultSetStreamTest.suite());
1:ed6bf51:         suite.addTest(InternationalConnectSimpleDSTest.suite());
1:ed6bf51:         suite.addTest(Derby2017LayerATest.suite());
1:bde7b3b:         suite.addTest(LobRsGetterTest.suite());
1:bde7b3b: 
1:d029255:         // Old harness .java tests that run using the HarnessJavaTest
1:d029255:         // adapter and continue to use a single master file.
1:d029255:         suite.addTest(JDBCHarnessJavaTest.suite());
1:a78e683:         
1:afff7e0:         if (JDBC.vmSupportsJDBC3())
1:f19e86d:         {
1:f19e86d:             // Tests that do not run under JSR169
1:f19e86d:             // DERBY-2403 blocks ParameterMappingTest from running
1:f19e86d:             // under JSR169
1:f19e86d:             suite.addTest(ParameterMappingTest.suite());
1:f945aa4: 
1:78062b5:             // Class requires javax.sql.PooledConnection
1:78062b5:             // even to load, even though the suite method
1:78062b5:             // is correctly implemented.
1:78062b5:             suite.addTest(DataSourcePropertiesTest.suite());
1:f19e86d: 
1:c7fdf72:             // Tests JDBC 3.0 ability to establish a result set of 
1:c7fdf72:             // auto-generated keys.
1:c7fdf72:             suite.addTest(AutoGenJDBC30Test.suite());
1:1b46090: 
1:1b46090:             // Test uses DriverManager
1:1b46090:             suite.addTest(DriverMgrAuthenticationTest.suite());
1:1b46090:             // Tests uses JDBC 3.0 datasources
1:1b46090:             suite.addTest(PoolDSAuthenticationTest.suite());
1:0bace1a:             suite.addTest(PoolXADSCreateShutdownDBTest.suite());
1:7af32f6:             suite.addTest(Derby5165Test.suite());
1:1b46090:             suite.addTest(XADSAuthenticationTest.suite());
1:60426a1:             suite.addTest(XATransactionTest.suite());
1:5b78c4e:             suite.addTest(XATest.suite());
1:5b78c4e:             
1:f7b3a7a:             // Test uses JDBC 3.0 datasources, and javax.naming.Reference etc.
1:90f367e:             suite.addTest(DataSourceReferenceTest.suite());
1:efa5857:             suite.addTest(DataSourceSerializationTest.suite());
1:f7b3a7a: 
1:48e4237:             // Test uses DriverManager, Pooled and XADataSources, and
1:48e4237:             // an inner class implements ConnectionEventListener.
1:0f9b584:             suite.addTest(J2EEDataSourceTest.suite());
1:181c56a:             // Test requires ClientConnectionPoolDataSource.
1:181c56a:             suite.addTest(ClientConnectionPoolDataSourceTest.suite());
1:f3f832c:             // Test requires ClientConnectionPoolDataSource.
1:f3f832c:             suite.addTest(StatementPoolingTest.suite());
1:e1fc783: 
1:fcdce55:             //suite to test updatable reader for clob in embedded driver
1:fcdce55:             suite.addTest (ClobUpdatableReaderTest.suite());
1:afff7e0:             
1:ba50299:             //truncate test for clob
1:ba50299:             suite.addTest (ClobTruncateTest.suite());
1:ed7a4d6: 
1:ed7a4d6:             //JSR169 does not support ParameterMetaData
1:ed7a4d6:             suite.addTest(ParameterMetaDataJdbc30Test.suite());
1:d4a1ecd:             suite.addTest(CacheSessionDataTest.suite());
1:f047724: 
1:f047724:             // LDAPAuthentication and InvalidLDAPSrvAuth cannot run with JSR169
1:f047724:             // implementation because of missing support for authentication 
1:f047724:             // functionality. 
1:f047724:             // Also, LDAPAuthentication needs properties passed in or is 
1:f047724:             // pointless (unless we can find a test LDAP Server)
1:5883d47:             String ldapServer=getSystemProperty("derbyTesting.ldapServer");
1:5883d47:             if (ldapServer == null || ldapServer.length() < 1)
1:1ae02c9:                 suite.addTest(new BaseTestSuite(
1:5883d47:                     "LDAPAuthenticationTest and XAJNDITest require " +
1:5883d47:                     "derbyTesting.ldap* properties."));
1:f047724:             else
1:5883d47:             {
1:f047724:                 suite.addTest(LDAPAuthenticationTest.suite());
1:5883d47:                 suite.addTest(XAJNDITest.suite());
1:f19e86d:             }
1:f047724:             suite.addTest(InvalidLDAPServerAuthenticationTest.suite());
1:6384512:             
1:6384512:             // XA and ConnectionPool Datasource are not available with
1:6384512:             // JSR169 so can't run InternationalConnectTest. 
1:6384512:             suite.addTest(InternationalConnectTest.suite());
1:47bae99: 
1:47bae99:             // Test requires java.sql.DriverManager
1:47bae99:             suite.addTest(AutoloadTest.fullAutoloadSuite());
1:5883d47:         }
1:f047724: 
1:f7672a4:         return suite;
1:575f028: 	}
1:5883d47: }
============================================================================
author:asf-sync-process
-------------------------------------------------------------------------------
commit:7af32f6
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(Derby5165Test.suite());
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("jdbcapi");
/////////////////////////////////////////////////////////////////////////
1:                 suite.addTest(new BaseTestSuite(
commit:86226a2
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5158Test.suite());
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:bde7b3b
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LobRsGetterTest.suite());
1: 
commit:ed6bf51
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(InternationalConnectSimpleDSTest.suite());
1:         suite.addTest(Derby2017LayerATest.suite());
commit:f3f832c
/////////////////////////////////////////////////////////////////////////
1:             // Test requires ClientConnectionPoolDataSource.
1:             suite.addTest(StatementPoolingTest.suite());
commit:181c56a
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:             // Test requires ClientConnectionPoolDataSource.
1:             suite.addTest(ClientConnectionPoolDataSourceTest.suite());
commit:efa5857
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(DataSourceSerializationTest.suite());
commit:a535ea9
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(BlobUpdatableStreamTest.suite());
commit:fcdce55
/////////////////////////////////////////////////////////////////////////
1:             //suite to test updatable reader for clob in embedded driver
1:             suite.addTest (ClobUpdatableReaderTest.suite());
commit:ba50299
/////////////////////////////////////////////////////////////////////////
1:             
1:             //truncate test for clob
1:             suite.addTest (ClobTruncateTest.suite());
commit:3d7af4e
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(BlobUpdateableStreamTest.suite());
commit:a78e683
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ClobTest.suite());
1: 
commit:e1fc783
/////////////////////////////////////////////////////////////////////////
1: 
0:             //suite to test updateable reader for clob in embedded driver
0:             suite.addTest (ClobUpdateableReaderTest.suite());
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:47bae99
/////////////////////////////////////////////////////////////////////////
1: 
1:             // Test requires java.sql.DriverManager
1:             suite.addTest(AutoloadTest.fullAutoloadSuite());
commit:34674cd
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(BlobSetBytesBoundaryTest.suite());
/////////////////////////////////////////////////////////////////////////
commit:7d521f5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DaylightSavingTest.suite());
commit:60426a1
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(XATransactionTest.suite());
commit:c2b437d
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(SetTransactionIsolationTest.suite());
0: 		suite.addTest(XATransactionTest.suite());
commit:6aa0b12
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(BlobStoredProcedureTest.suite());
1: 		suite.addTest(ClobStoredProcedureTest.suite());
commit:6afb55c
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(ClosedObjectTest.suite());
commit:3f965ed
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(CharacterStreamsTest.suite());
commit:341554e
/////////////////////////////////////////////////////////////////////////
1: 			suite.addTest(ResultSetJDBC30Test.suite());
commit:88f1e26
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(BlobClob4BlobTest.suite());
commit:f53b02e
/////////////////////////////////////////////////////////////////////////
1: 			suite.addTest(LobStreamsTest.suite());
commit:39f0f38
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(UpdatableResultSetTest.suite());
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:d1a4768
/////////////////////////////////////////////////////////////////////////
1: 		if (!JDBC.vmSupportsJSR169()) {
1: 		    // DERBY-5069 Suites.All fails with InvocationTargetException
1: 		    suite.addTest(DriverTest.suite());
1: 		}
commit:5b78c4e
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(InternationalConnectSimpleDSTest.suite());       
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(XATest.suite());
1:             
commit:6384512
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ResultSetStreamTest.suite());
0:         suite.addTest(InternationalConnectSimpleDSTest.suite());
/////////////////////////////////////////////////////////////////////////
1:             
1:             // XA and ConnectionPool Datasource are not available with
1:             // JSR169 so can't run InternationalConnectTest. 
1:             suite.addTest(InternationalConnectTest.suite());
commit:575f028
/////////////////////////////////////////////////////////////////////////
0: 	suite.addTest(ResultSetStreamTest.suite());
/////////////////////////////////////////////////////////////////////////
1: }
commit:f945aa4
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RelativeTest.suite());
1:         
commit:a95545d
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SavepointJdbc30Test.suite());
commit:0bace1a
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(PoolXADSCreateShutdownDBTest.suite());
commit:1302ca5
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(PrepStmtNullTest.suite());
commit:af2718a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DMDBugsTest.suite());
commit:e507229
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(StatementJdbc30Test.suite());
commit:1350ae2
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(NullSQLTextTest.suite());
commit:a3acaa5
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LargeDataLocksTest.suite());
commit:ed7a4d6
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
1: 	    //JSR169 does not support ParameterMetaData
1: 	    suite.addTest(ParameterMetaDataJdbc30Test.suite());
commit:306fdfe
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(ParameterMetaDataJdbc30Test.suite());
commit:32d1091
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AIjdbcTest.suite());
commit:1122f01
/////////////////////////////////////////////////////////////////////////
0:                 suite.addTest(SetTransactionIsolationTest.suite());
commit:5698f98
/////////////////////////////////////////////////////////////////////////
1:                 suite.addTest(PrepStmtMetaDataTest.suite());
commit:aa53134
/////////////////////////////////////////////////////////////////////////
1:                 suite.addTest(ResultSetMiscTest.suite());
commit:f19e86d
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         if (JDBC.vmSupportsJDBC2())
1:         {
1:             // Tests that do not run under JSR169
1:             // DERBY-2403 blocks ParameterMappingTest from running
1:             // under JSR169
1:             suite.addTest(ParameterMappingTest.suite());
1:         
1:         }
commit:24b23a8
/////////////////////////////////////////////////////////////////////////
0:                 suite.addTest(ParameterMappingTest.suite());
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:2d3a136
/////////////////////////////////////////////////////////////////////////
0:             suite.addTest(BlobSetBytesBoundaryTest.suite());
commit:1af246f
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(SURijTest.suite());
commit:d8b7f84
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(metadataMultiConnTest.suite());
commit:5883d47
/////////////////////////////////////////////////////////////////////////
1:             String ldapServer=getSystemProperty("derbyTesting.ldapServer");
1:             if (ldapServer == null || ldapServer.length() < 1)
0:                 suite.addTest(new TestSuite(
1:                     "LDAPAuthenticationTest and XAJNDITest require " +
1:                     "derbyTesting.ldap* properties."));
1:             {
1:                 suite.addTest(XAJNDITest.suite());
1:             }
1: }
commit:0e5e822
/////////////////////////////////////////////////////////////////////////
0:             suite.addTest(XAJNDITest.suite());
commit:f047724
/////////////////////////////////////////////////////////////////////////
0:             //JSR169 does not support ParameterMetaData
0:             suite.addTest(ParameterMetaDataJdbc30Test.suite());
1: 
1:             // LDAPAuthentication and InvalidLDAPSrvAuth cannot run with JSR169
1:             // implementation because of missing support for authentication 
1:             // functionality. 
1:             // Also, LDAPAuthentication needs properties passed in or is 
1:             // pointless (unless we can find a test LDAP Server)
0:             String ldapUser=getSystemProperty("derbyTesting.ldapServer");
0:             if (ldapUser == null || ldapUser.length() < 1)
0:                 suite.addTest(new TestSuite("LDAPAuthenticationTest requires properties " +
0:                         "derbyTesting." +
0:                 "[ldapServer, ldapPort ldapUser, ldapPassword, dnString]"));
1:             else
1:                 suite.addTest(LDAPAuthenticationTest.suite());
1:             suite.addTest(InvalidLDAPServerAuthenticationTest.suite());
1: 
commit:0f9b584
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(DataSourceTest.suite());
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(J2EEDataSourceTest.suite());
commit:90f367e
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(DataSourceReferenceTest.suite());
commit:4f76c3c
/////////////////////////////////////////////////////////////////////////
0: 	    // Test hits nullPointerException with jdk16; commenting out until resolved
0:             //suite.addTest(DataSourceReferenceTest.suite());
commit:f7b3a7a
/////////////////////////////////////////////////////////////////////////
1: 
1:             // Test uses JDBC 3.0 datasources, and javax.naming.Reference etc.
0:             suite.addTest(DataSourceReferenceTest.suite());
1: 
commit:c7c71f2
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(DriverTest.suite());
commit:48e4237
/////////////////////////////////////////////////////////////////////////
1:             
1:             // Test uses DriverManager, Pooled and XADataSources, and
1:             // an inner class implements ConnectionEventListener.
0:             suite.addTest(DataSourceTest.suite());
commit:1b46090
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(AuthenticationTest.suite());
/////////////////////////////////////////////////////////////////////////
1: 
1:             // Test uses DriverManager
1:             suite.addTest(DriverMgrAuthenticationTest.suite());
1:             // Tests uses JDBC 3.0 datasources
1:             suite.addTest(PoolDSAuthenticationTest.suite());
1:             suite.addTest(XADSAuthenticationTest.suite());
commit:afff7e0
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(LobLengthTest.suite()); 
1: 		suite.addTest(ResultSetCloseTest.suite());
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(CallableTest.suite());
0: 		suite.addTest(ResultSetMiscTest.suite());
0: 		suite.addTest(PrepStmtMetaDataTest.suite());
1: 		suite.addTest(ScrollResultSetTest.suite());
0: 		suite.addTest(LobStreamsTest.suite());
0: 		suite.addTest(ResultSetJDBC30Test.suite());
1: 		suite.addTest(DatabaseMetaDataTest.suite());
0: 		suite.addTest(ClosedObjectTest.suite());
1:         if (JDBC.vmSupportsJDBC3())
1: 
commit:b8c1e09
/////////////////////////////////////////////////////////////////////////
commit:a86bac7
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(BatchUpdateTest.suite());
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(BatchUpdateTest.suite());
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:aee2d05
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(StatementJdbc20Test.suite());
commit:d4a1ecd
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(CacheSessionDataTest.suite());
commit:659f564
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(CacheSessionDataTest.suite());
author:Jean T. Anderson
-------------------------------------------------------------------------------
commit:c7fdf72
/////////////////////////////////////////////////////////////////////////
1: 
1:             // Tests JDBC 3.0 ability to establish a result set of 
1:             // auto-generated keys.
1:             suite.addTest(AutoGenJDBC30Test.suite());
commit:bf538e5
/////////////////////////////////////////////////////////////////////////
0:                 suite.addTest(CallableTest.suite());
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:674c2a4
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(DboPowersTest.suite());
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:d029255
/////////////////////////////////////////////////////////////////////////
1:         // Old harness .java tests that run using the HarnessJavaTest
1:         // adapter and continue to use a single master file.
1:         suite.addTest(JDBCHarnessJavaTest.suite());
1:         
commit:da378da
/////////////////////////////////////////////////////////////////////////
0:             suite.addTest(DatabaseMetaDataTest.suite());
commit:9fd7e3e
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(StreamTest.suite());
commit:78062b5
/////////////////////////////////////////////////////////////////////////
1:         
0:         if (JDBC.vmSupportsJDBC3())
0:         {
1:             // Class requires javax.sql.PooledConnection
1:             // even to load, even though the suite method
1:             // is correctly implemented.
1:             suite.addTest(DataSourcePropertiesTest.suite());
1:         }
commit:985662b
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(URCoveringIndexTest.suite());
commit:eba07fc
/////////////////////////////////////////////////////////////////////////
commit:f7672a4
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derbyTesting.junit.TestConfiguration;
/////////////////////////////////////////////////////////////////////////
1:         
0:         if (TestConfiguration.runningInDerbyHarness())
0:             return new NetworkServerTestSetup(suite);
1:         
1:         return suite;
commit:3bd1dd8
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: import org.apache.derbyTesting.junit.JDBC;
commit:5272c90
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(ResultSetCloseTest.suite());
0:         suite.addTest(DataSourcePropertiesTest.suite());
commit:d038483
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(HoldabilityTest.suite());
commit:2fd14fb
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi._Suite
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
1: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1: 
0: import org.apache.derbyTesting.functionTests.util.BaseTestCase;
0: import org.apache.derbyTesting.functionTests.util.JDBC;
1: 
0: import junit.framework.Test; 
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Suite to run all JUnit tests in this package:
1:  * org.apache.derbyTesting.functionTests.tests.jdbcapi
1:  *
1:  */
1: public class _Suite extends BaseTestCase  {
1: 
1: 	/**
1: 	 * Use suite method instead.
1: 	 */
1: 	private _Suite(String name) {
1: 		super(name);
0: 	}
1: 
1: 	public static Test suite() {
1: 
0: 		TestSuite suite = new TestSuite("jdbcapi");
1: 
1: 		suite.addTest(ConcurrencyTest.suite());
0: 		suite.addTestSuite(HoldabilityTest.class);
1: 		suite.addTest(ProcedureTest.suite());
1: 		suite.addTest(SURQueryMixTest.suite());
1: 		suite.addTest(SURTest.suite());
1: 		suite.addTest(UpdateXXXTest.suite());
0: 		suite.addTestSuite(URCoveringIndexTest.class);
1: 		
0: 		// Tests that are compiled using 1.4 target need to
0: 		// be added this way, otherwise creating the suite
0: 		// will throw an invalid class version error
0: 		if (JDBC.vmSupportsJDBC3() || JDBC.vmSupportsJSR169())
0: 		{
0: 			suite.addTest(ScrollResultSetTest.suite());
0: 		}
1: 
0: 		return suite;
0: 	}
0: }
author:Bernt Johnsen
-------------------------------------------------------------------------------
commit:164e806
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(LobLengthTest.suite()); 
author:Andreas Korneliussen
-------------------------------------------------------------------------------
commit:ed153bd
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derbyTesting.junit.NetworkServerTestSetup;
/////////////////////////////////////////////////////////////////////////
0: 		return new NetworkServerTestSetup(suite);
============================================================================