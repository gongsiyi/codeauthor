1:fe77ca5: /*
2:fe77ca5: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.sql.Row
1:7ecc1f2: 
1:4590cd8:    Licensed to the Apache Software Foundation (ASF) under one or more
1:4590cd8:    contributor license agreements.  See the NOTICE file distributed with
1:4590cd8:    this work for additional information regarding copyright ownership.
1:4590cd8:    The ASF licenses this file to you under the Apache License, Version 2.0
1:4590cd8:    (the "License"); you may not use this file except in compliance with
1:4590cd8:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
2:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: package org.apache.derby.iapi.sql;
1:fe77ca5: 
1:fe77ca5: import org.apache.derby.iapi.types.DataValueDescriptor;
1:fe77ca5: 
1:fe77ca5: import org.apache.derby.iapi.error.StandardException;
1:fe77ca5: 
2:fe77ca5: /**
1:fe77ca5:  * The Row interface provides methods to get information about the columns
1:fe77ca5:  * in a result row.
1:fe77ca5:  * It uses simple, position (1-based) access to get to columns.
1:fe77ca5:  * Searching for columns by name should be done from the ResultSet
1:fe77ca5:  * interface, where metadata about the rows and columns is available.
1:fe77ca5:  * <p>
2:fe77ca5:  *
1:fe77ca5:  * @see ResultSet
1:fe77ca5:  *
1:fe77ca5:  * @see org.apache.derby.iapi.sql.execute.ExecRow
1:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: public interface Row
1:fe77ca5: {
1:fe77ca5: 	public int nColumns();
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 	 * Get a DataValueDescriptor in a Row by ordinal position (1-based).
1:fe77ca5: 	 *
1:fe77ca5: 	 * @param position	The ordinal position of the column.
1:fe77ca5: 	 *
1:fe77ca5:      * @exception   StandardException Thrown on failure.
2:fe77ca5: 	 * @return		The DataValueDescriptor, null if no such column exists
1:fe77ca5: 	 */
1:fe77ca5: 	DataValueDescriptor	getColumn (int position) throws StandardException;
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 	 * Set a DataValueDescriptor in a Row by ordinal position (1-based).
1:fe77ca5: 	 *
1:fe77ca5: 	 * @param position	The ordinal position of the column.
1:fe77ca5: 	 */
1:fe77ca5: 	void	setColumn (int position, DataValueDescriptor value);
1:fe77ca5: 
1:fe77ca5: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:David Van Couvering
-------------------------------------------------------------------------------
commit:4590cd8
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:6b50965
/////////////////////////////////////////////////////////////////////////
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.sql.Row
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql;
1: 
1: import org.apache.derby.iapi.types.DataValueDescriptor;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: /**
1:  * The Row interface provides methods to get information about the columns
1:  * in a result row.
1:  * It uses simple, position (1-based) access to get to columns.
1:  * Searching for columns by name should be done from the ResultSet
1:  * interface, where metadata about the rows and columns is available.
1:  * <p>
1:  *
1:  * @see ResultSet
1:  *
0:  * @author Jeff Lichtman
1:  * @see org.apache.derby.iapi.sql.execute.ExecRow
1:  */
1: 
1: public interface Row
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	public int nColumns();
1: 
1: 	/**
1: 	 * Get a DataValueDescriptor in a Row by ordinal position (1-based).
1: 	 *
1: 	 * @param position	The ordinal position of the column.
1: 	 *
1:      * @exception   StandardException Thrown on failure.
1: 	 * @return		The DataValueDescriptor, null if no such column exists
1: 	 */
1: 	DataValueDescriptor	getColumn (int position) throws StandardException;
1: 
1: 	/**
1: 	 * Set a DataValueDescriptor in a Row by ordinal position (1-based).
1: 	 *
1: 	 * @param position	The ordinal position of the column.
1: 	 *
1: 	 * @return		The DataValueDescriptor, null if no such column exists
1: 	 */
1: 	void	setColumn (int position, DataValueDescriptor value);
1: 
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.sql;
0: 
0: import org.apache.derby.iapi.types.DataValueDescriptor;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: /**
0:  * The Row interface provides methods to get information about the columns
0:  * in a result row.
0:  * It uses simple, position (1-based) access to get to columns.
0:  * Searching for columns by name should be done from the ResultSet
0:  * interface, where metadata about the rows and columns is available.
0:  * <p>
0:  *
0:  * @see ResultSet
0:  *
0:  * @author Jeff Lichtman
0:  * @see org.apache.derby.iapi.sql.execute.ExecRow
0:  */
0: 
0: public interface Row
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	public int nColumns();
0: 
0: 	/**
0: 	 * Get a DataValueDescriptor in a Row by ordinal position (1-based).
0: 	 *
0: 	 * @param position	The ordinal position of the column.
0: 	 *
0:      * @exception   StandardException Thrown on failure.
0: 	 * @return		The DataValueDescriptor, null if no such column exists
0: 	 */
0: 	DataValueDescriptor	getColumn (int position) throws StandardException;
0: 
0: 	/**
0: 	 * Set a DataValueDescriptor in a Row by ordinal position (1-based).
0: 	 *
0: 	 * @param position	The ordinal position of the column.
0: 	 *
0: 	 * @return		The DataValueDescriptor, null if no such column exists
0: 	 */
0: 	void	setColumn (int position, DataValueDescriptor value);
0: 
0: }
============================================================================