1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.store.access.SortController
1:7ecc1f2: 
1:75c7276:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75c7276:    contributor license agreements.  See the NOTICE file distributed with
1:75c7276:    this work for additional information regarding copyright ownership.
1:75c7276:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75c7276:    (the "License"); you may not use this file except in compliance with
1:75c7276:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
4:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.store.access;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:8417890: import org.apache.derby.iapi.types.DataValueDescriptor;
1:eac0369: 
1:eac0369: 
2:eac0369: /**
1:eac0369: 
1:eac0369:   A sort controller is an interface for inserting rows
1:eac0369:   into a sort.
2:eac0369:   <p>
1:eac0369:   A sort is created with the createSort method of
1:eac0369:   TransactionController. The rows are read back with
1:eac0369:   a scan controller returned from the openSortScan
1:eac0369:   method of TranscationController.
1:eac0369: 
1:eac0369: 
1:eac0369:   @see TransactionController#openSort
1:eac0369:   @see ScanController
1:eac0369: 
1:eac0369: **/
1:eac0369: 
1:eac0369: public interface SortController
1:eac0369: {
1:eac0369: 	/**
1:8417890: 	Inform SortController that all the rows have
1:8417890:     been inserted into it. 
1:eac0369: 	**/
1:8417890: 	void completedInserts();
1:eac0369: 
1:eac0369: 	/**
1:eac0369:     Insert a row into the sort.
1:eac0369: 
1:8417890:     @param row The row to insert into the SortController.  The stored
1:eac0369: 	representations of the row's columns are copied into a new row
1:8417890: 	somewhere in the sort.
1:eac0369: 
1:eac0369: 	@exception StandardException Standard exception policy.
1:eac0369:     **/
1:eac0369:     void insert(DataValueDescriptor[] row)
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * Return SortInfo object which contains information about the current
1:eac0369:      * state of the sort.
1:eac0369:      * <p>
1:eac0369:      *
1:eac0369:      * @see SortInfo
1:eac0369:      *
1:eac0369: 	 * @return The SortInfo object which contains info about current sort.
1:eac0369:      *
1:eac0369: 	 * @exception  StandardException  Standard exception policy.
1:eac0369:      **/
1:eac0369:     SortInfo getSortInfo()
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: 
1:eac0369: }
============================================================================
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:8417890
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.types.DataValueDescriptor;
/////////////////////////////////////////////////////////////////////////
1: 	Inform SortController that all the rows have
1:     been inserted into it. 
1: 	void completedInserts();
1:     @param row The row to insert into the SortController.  The stored
1: 	somewhere in the sort.
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.store.access.SortController
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.store.access;
1: 
0: import org.apache.derby.iapi.types.CloneableObject;
1: 
0: import org.apache.derby.iapi.types.DataValueDescriptor;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: 
1: /**
1: 
1:   A sort controller is an interface for inserting rows
1:   into a sort.
1:   <p>
1:   A sort is created with the createSort method of
1:   TransactionController. The rows are read back with
1:   a scan controller returned from the openSortScan
1:   method of TranscationController.
1: 
1: 
1:   @see TransactionController#openSort
1:   @see ScanController
1: 
1: **/
1: 
1: public interface SortController
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/**
0: 	Close this sort controller.
1: 	<p>
0: 	Currently, since only one sort controller is allowed per sort,
0: 	closing the sort controller means the last row has been
0: 	inserted.
1: 	**/
0: 	void close();
1: 
1: 	/**
1:     Insert a row into the sort.
1: 
0:     @param row The row to insert into the conglomerate.  The stored
1: 	representations of the row's columns are copied into a new row
0: 	somewhere in the conglomerate.
1: 
1: 	@exception StandardException Standard exception policy.
0: 	@see CloneableObject
1:     **/
1:     void insert(DataValueDescriptor[] row)
1: 		throws StandardException;
1: 
1: 
1:     /**
1:      * Return SortInfo object which contains information about the current
1:      * state of the sort.
1:      * <p>
1:      *
1:      * @see SortInfo
1:      *
1: 	 * @return The SortInfo object which contains info about current sort.
1:      *
1: 	 * @exception  StandardException  Standard exception policy.
1:      **/
1:     SortInfo getSortInfo()
1: 		throws StandardException;
1: 
1: 
1: }
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:75c7276
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.store.access;
0: 
0: import org.apache.derby.iapi.types.CloneableObject;
0: 
0: import org.apache.derby.iapi.types.DataValueDescriptor;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: 
0: /**
0: 
0:   A sort controller is an interface for inserting rows
0:   into a sort.
0:   <p>
0:   A sort is created with the createSort method of
0:   TransactionController. The rows are read back with
0:   a scan controller returned from the openSortScan
0:   method of TranscationController.
0: 
0: 
0:   @see TransactionController#openSort
0:   @see ScanController
0: 
0: **/
0: 
0: public interface SortController
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/**
0: 	Close this sort controller.
0: 	<p>
0: 	Currently, since only one sort controller is allowed per sort,
0: 	closing the sort controller means the last row has been
0: 	inserted.
0: 	**/
0: 	void close();
0: 
0: 	/**
0:     Insert a row into the sort.
0: 
0:     @param row The row to insert into the conglomerate.  The stored
0: 	representations of the row's columns are copied into a new row
0: 	somewhere in the conglomerate.
0: 
0: 	@exception StandardException Standard exception policy.
0: 	@see CloneableObject
0:     **/
0:     void insert(DataValueDescriptor[] row)
0: 		throws StandardException;
0: 
0: 
0:     /**
0:      * Return SortInfo object which contains information about the current
0:      * state of the sort.
0:      * <p>
0:      *
0:      * @see SortInfo
0:      *
0: 	 * @return The SortInfo object which contains info about current sort.
0:      *
0: 	 * @exception  StandardException  Standard exception policy.
0:      **/
0:     SortInfo getSortInfo()
0: 		throws StandardException;
0: 
0: 
0: }
============================================================================