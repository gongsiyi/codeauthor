1:7916398: /*
1:7916398: 
1:7916398:    Derby - Class org.apache.derby.iapi.services.daemon.IndexStatisticsDaemon
1:7916398: 
1:7916398:    Licensed to the Apache Software Foundation (ASF) under one or more
1:7916398:    contributor license agreements.  See the NOTICE file distributed with
1:7916398:    this work for additional information regarding copyright ownership.
1:7916398:    The ASF licenses this file to you under the Apache License, Version 2.0
1:7916398:    (the "License"); you may not use this file except in compliance with
1:7916398:    the License.  You may obtain a copy of the License at
1:7916398: 
1:7916398:       http://www.apache.org/licenses/LICENSE-2.0
1:7916398: 
1:7916398:    Unless required by applicable law or agreed to in writing, software
1:7916398:    distributed under the License is distributed on an "AS IS" BASIS,
1:7916398:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7916398:    See the License for the specific language governing permissions and
1:7916398:    limitations under the License.
1:7916398: 
1:7916398:  */
1:7916398: 
1:7916398: package org.apache.derby.iapi.services.daemon;
1:7916398: 
1:7916398: import org.apache.derby.iapi.error.StandardException;
1:7916398: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1:7916398: import org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor;
1:7916398: import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
1:7916398: 
1:7916398: /**
1:7916398:  * Daemon acting as a coordinator for creating and updating index statistics.
1:7916398:  * <p>
1:7916398:  * There are two modes of operation:
1:7916398:  * <ul> <li>explicit - generates index statistics due to an explict request from
1:7916398:  *          the user. The entrypoint is <tt>runExplicitly</tt>.</li>
1:7916398:  *      <li>background - generates index statistics as a background task due to
1:7916398:  *          an event that has triggered a statistics update. The entrypoint
1:7916398:  *          is <tt>schedule</tt>.</li>
1:7916398:  * <ul>
1:7916398:  * <p>
1:7916398:  * The modes differ in how the operation affects other operations in the running
1:7916398:  * system, and also how errors are dealt with. The background mode will try to
1:7916398:  * affect other operations as little as possible, and errors won't be reported
1:7916398:  * unless they are severe. The explicit mode will do more to make sure the
1:7916398:  * operation succeeds (for instance by using locks), and will report all errors.
1:7916398:  */
1:7916398: public interface IndexStatisticsDaemon {
1:7916398: 
1:7916398:     /**
1:7916398:      * Creates/updates index statistics for the specified conglomerates/indexes.
1:7916398:      *
1:7916398:      * @param lcc connection used to carry out the work
1:7916398:      * @param td base table
1:7916398:      * @param cds index conglomerates (non-index conglomerates are ignored)
1:7916398:      * @param runContext descriptive text for the context in which the work is
1:7916398:      *      being run (i.e. ALTER TABLE)
1:7916398:      * @throws StandardException if something goes wrong
1:7916398:      */
1:7916398:     public void runExplicitly(LanguageConnectionContext lcc,
1:7916398:                               TableDescriptor td,
1:7916398:                               ConglomerateDescriptor[] cds,
1:7916398:                               String runContext)
1:7916398:             throws StandardException;
1:7916398: 
1:7916398:     /**
1:7916398:      * Schedules creation/update of the index statistics associated with the
1:7916398:      * specified table.
1:7916398:      * <p>
1:7916398:      * Note that the scheduling request may be denied. Typical situations where
1:7916398:      * that will happen is if the work queue is full, or if work has already
1:7916398:      * been scheduled for the specified table.
1:7916398:      *
1:7916398:      * @param td base table
1:7916398:      */
1:7916398:     public void schedule(TableDescriptor td);
1:7916398: 
1:7916398:     /**
1:7916398:      * Stops the background daemon.
1:7916398:      * <p>
1:7916398:      * Any ongoing tasks will be aborted as soon as possible, and it will not
1:7916398:      * be possible to schedule new tasks. Note that <tt>runExplicitly</tt> can
1:7916398:      * still be used.
1:7916398:      */
1:7916398:     public void stop();
1:7916398: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:7916398
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.services.daemon.IndexStatisticsDaemon
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.daemon;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.sql.conn.LanguageConnectionContext;
1: import org.apache.derby.iapi.sql.dictionary.ConglomerateDescriptor;
1: import org.apache.derby.iapi.sql.dictionary.TableDescriptor;
1: 
1: /**
1:  * Daemon acting as a coordinator for creating and updating index statistics.
1:  * <p>
1:  * There are two modes of operation:
1:  * <ul> <li>explicit - generates index statistics due to an explict request from
1:  *          the user. The entrypoint is <tt>runExplicitly</tt>.</li>
1:  *      <li>background - generates index statistics as a background task due to
1:  *          an event that has triggered a statistics update. The entrypoint
1:  *          is <tt>schedule</tt>.</li>
1:  * <ul>
1:  * <p>
1:  * The modes differ in how the operation affects other operations in the running
1:  * system, and also how errors are dealt with. The background mode will try to
1:  * affect other operations as little as possible, and errors won't be reported
1:  * unless they are severe. The explicit mode will do more to make sure the
1:  * operation succeeds (for instance by using locks), and will report all errors.
1:  */
1: public interface IndexStatisticsDaemon {
1: 
1:     /**
1:      * Creates/updates index statistics for the specified conglomerates/indexes.
1:      *
1:      * @param lcc connection used to carry out the work
1:      * @param td base table
1:      * @param cds index conglomerates (non-index conglomerates are ignored)
1:      * @param runContext descriptive text for the context in which the work is
1:      *      being run (i.e. ALTER TABLE)
1:      * @throws StandardException if something goes wrong
1:      */
1:     public void runExplicitly(LanguageConnectionContext lcc,
1:                               TableDescriptor td,
1:                               ConglomerateDescriptor[] cds,
1:                               String runContext)
1:             throws StandardException;
1: 
1:     /**
1:      * Schedules creation/update of the index statistics associated with the
1:      * specified table.
1:      * <p>
1:      * Note that the scheduling request may be denied. Typical situations where
1:      * that will happen is if the work queue is full, or if work has already
1:      * been scheduled for the specified table.
1:      *
1:      * @param td base table
1:      */
1:     public void schedule(TableDescriptor td);
1: 
1:     /**
1:      * Stops the background daemon.
1:      * <p>
1:      * Any ongoing tasks will be aborted as soon as possible, and it will not
1:      * be possible to schedule new tasks. Note that <tt>runExplicitly</tt> can
1:      * still be used.
1:      */
1:     public void stop();
1: }
============================================================================