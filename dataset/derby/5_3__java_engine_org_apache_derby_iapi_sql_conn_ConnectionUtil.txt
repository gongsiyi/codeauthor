1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.sql.conn.ConnectionUtil
1:7ecc1f2: 
1:75588ca:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75588ca:    contributor license agreements.  See the NOTICE file distributed with
1:75588ca:    this work for additional information regarding copyright ownership.
1:75588ca:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75588ca:    (the "License"); you may not use this file except in compliance with
1:75588ca:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.sql.conn;
1:eac0369: 
1:a0dbbd7: import org.apache.derby.iapi.services.context.Context;
1:eac0369: import org.apache.derby.iapi.services.context.ContextService;
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import org.apache.derby.iapi.services.i18n.MessageService;
1:eac0369: import org.apache.derby.iapi.reference.SQLState;
1:eac0369: import org.apache.derby.iapi.error.ExceptionSeverity;
1:eac0369: 
1:a0dbbd7: import java.security.PrivilegedAction;
1:a0dbbd7: import java.security.AccessController;
1:eac0369: import java.sql.SQLException;
1:eac0369: 
1:eac0369: public class ConnectionUtil {
1:eac0369: 
2:eac0369: 	/**
1:eac0369: 		Get the current LanguageConnectionContext.
1:eac0369: 		Used by public api code that needs to ensure it
1:eac0369: 		is in the context of a SQL connection.
1:eac0369: 
1:eac0369: 		@exception SQLException Caller is not in the context of a connection.
1:eac0369: 	*/
1:eac0369: 	public static LanguageConnectionContext getCurrentLCC()
1:eac0369: 		throws SQLException {
1:eac0369: 
1:eac0369: 			LanguageConnectionContext lcc = (LanguageConnectionContext)
1:a0dbbd7: 				getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1:eac0369: 
1:eac0369: 			if (lcc == null)
1:eac0369: 				throw new SQLException(
1:eac0369: 							// No current connection
1:eac0369: 							MessageService.getTextMessage(
1:eac0369: 											SQLState.NO_CURRENT_CONNECTION),
1:eac0369: 							SQLState.NO_CURRENT_CONNECTION,
1:eac0369: 							ExceptionSeverity.SESSION_SEVERITY);
1:eac0369: 
1:eac0369: 			return lcc;
1:eac0369: 	}
1:a0dbbd7:     
1:a0dbbd7:     /**
1:a0dbbd7:      * Privileged lookup of a Context. Must be private so that user code
1:a0dbbd7:      * can't call this entry point.
1:a0dbbd7:      */
1:a0dbbd7:     private  static  Context    getContextOrNull( final String contextID )
1:a0dbbd7:     {
1:a0dbbd7:         if ( System.getSecurityManager() == null )
1:a0dbbd7:         {
1:a0dbbd7:             return ContextService.getContextOrNull( contextID );
1:a0dbbd7:         }
1:a0dbbd7:         else
1:a0dbbd7:         {
1:a0dbbd7:             return AccessController.doPrivileged
1:a0dbbd7:                 (
1:a0dbbd7:                  new PrivilegedAction<Context>()
1:a0dbbd7:                  {
1:a0dbbd7:                      public Context run()
1:a0dbbd7:                      {
1:a0dbbd7:                          return ContextService.getContextOrNull( contextID );
1:a0dbbd7:                      }
1:a0dbbd7:                  }
1:a0dbbd7:                  );
1:a0dbbd7:         }
1:a0dbbd7:     }
1:a0dbbd7: 
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:a0dbbd7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.services.context.Context;
1: import java.security.PrivilegedAction;
1: import java.security.AccessController;
/////////////////////////////////////////////////////////////////////////
1: 				getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * Privileged lookup of a Context. Must be private so that user code
1:      * can't call this entry point.
1:      */
1:     private  static  Context    getContextOrNull( final String contextID )
1:     {
1:         if ( System.getSecurityManager() == null )
1:         {
1:             return ContextService.getContextOrNull( contextID );
1:         }
1:         else
1:         {
1:             return AccessController.doPrivileged
1:                 (
1:                  new PrivilegedAction<Context>()
1:                  {
1:                      public Context run()
1:                      {
1:                          return ContextService.getContextOrNull( contextID );
1:                      }
1:                  }
1:                  );
1:         }
1:     }
1: 
author:David Van Couvering
-------------------------------------------------------------------------------
commit:75588ca
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.sql.conn.ConnectionUtil
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql.conn
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql.conn;
1: 
1: import org.apache.derby.iapi.services.context.ContextService;
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.services.i18n.MessageService;
1: import org.apache.derby.iapi.reference.SQLState;
1: import org.apache.derby.iapi.error.ExceptionSeverity;
1: 
1: import java.sql.SQLException;
1: 
1: public class ConnectionUtil {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 
1: 	/**
1: 		Get the current LanguageConnectionContext.
1: 		Used by public api code that needs to ensure it
1: 		is in the context of a SQL connection.
1: 
1: 		@exception SQLException Caller is not in the context of a connection.
1: 	*/
1: 	public static LanguageConnectionContext getCurrentLCC()
1: 		throws SQLException {
1: 
1: 			LanguageConnectionContext lcc = (LanguageConnectionContext)
0: 				ContextService.getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
1: 
1: 			if (lcc == null)
1: 				throw new SQLException(
1: 							// No current connection
1: 							MessageService.getTextMessage(
1: 											SQLState.NO_CURRENT_CONNECTION),
1: 							SQLState.NO_CURRENT_CONNECTION,
1: 							ExceptionSeverity.SESSION_SEVERITY);
1: 
1: 			return lcc;
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql.conn
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.sql.conn;
0: 
0: import org.apache.derby.iapi.services.context.ContextService;
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.services.i18n.MessageService;
0: import org.apache.derby.iapi.reference.SQLState;
0: import org.apache.derby.iapi.error.ExceptionSeverity;
0: 
0: import java.sql.SQLException;
0: 
0: public class ConnectionUtil {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 
0: 	/**
0: 		Get the current LanguageConnectionContext.
0: 		Used by public api code that needs to ensure it
0: 		is in the context of a SQL connection.
0: 
0: 		@exception SQLException Caller is not in the context of a connection.
0: 	*/
0: 	public static LanguageConnectionContext getCurrentLCC()
0: 		throws SQLException {
0: 
0: 			LanguageConnectionContext lcc = (LanguageConnectionContext)
0: 				ContextService.getContextOrNull(LanguageConnectionContext.CONTEXT_ID);
0: 
0: 			if (lcc == null)
0: 				throw new SQLException(
0: 							// No current connection
0: 							MessageService.getTextMessage(
0: 											SQLState.NO_CURRENT_CONNECTION),
0: 							SQLState.NO_CURRENT_CONNECTION,
0: 							ExceptionSeverity.SESSION_SEVERITY);
0: 
0: 			return lcc;
0: 	}
0: }
============================================================================