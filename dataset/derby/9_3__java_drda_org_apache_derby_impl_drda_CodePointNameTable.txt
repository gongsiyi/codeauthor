1:eac0369: /*
1:d7258ed: 
1:d7258ed:    Derby - Class org.apache.derby.impl.drda.CodePointNameTable
1:d7258ed: 
1:59e5225:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59e5225:    contributor license agreements.  See the NOTICE file distributed with
1:59e5225:    this work for additional information regarding copyright ownership.
1:59e5225:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59e5225:    (the "License"); you may not use this file except in compliance with
1:59e5225:    the License.  You may obtain a copy of the License at
1:d7258ed: 
1:d7258ed:       http://www.apache.org/licenses/LICENSE-2.0
1:d7258ed: 
1:d7258ed:    Unless required by applicable law or agreed to in writing, software
1:d7258ed:    distributed under the License is distributed on an "AS IS" BASIS,
1:d7258ed:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d7258ed:    See the License for the specific language governing permissions and
1:d7258ed:    limitations under the License.
3:eac0369: 
2:eac0369:  */
1:eac0369: package org.apache.derby.impl.drda;
1:eac0369: 
2:eac0369: /**
1:eac0369:   This class has a hashtable of CodePoint values.  It is used by the tracing
1:eac0369:   code and by the protocol testing code
1:eac0369:   It is arranged in alphabetical order.
1:eac0369: */
1:eac0369: 
1:27fbf33: class CodePointNameTable extends java.util.Hashtable<Integer, String>
1:eac0369: {
1:eac0369:   CodePointNameTable ()
1:eac0369:   {
1:66527ec:     put(CodePoint.ABNUOWRM, "ABNUOWRM");
1:66527ec:     put(CodePoint.ACCRDB, "ACCRDB");
1:66527ec:     put(CodePoint.ACCRDBRM, "ACCRDBRM");
1:66527ec:     put(CodePoint.ACCSEC, "ACCSEC");
1:66527ec:     put(CodePoint.ACCSECRD, "ACCSECRD");
1:66527ec:     put(CodePoint.AGENT, "AGENT");
1:66527ec:     put(CodePoint.AGNPRMRM, "AGNPRMRM");
1:66527ec:     put(CodePoint.BGNBND, "BGNBND");
1:66527ec:     put(CodePoint.BGNBNDRM, "BGNBNDRM");
1:66527ec:     put(CodePoint.BNDSQLSTT, "BNDSQLSTT");
1:66527ec:     put(CodePoint.CCSIDSBC, "CCSIDSBC");
1:66527ec:     put(CodePoint.CCSIDMBC, "CCSIDMBC");
1:66527ec:     put(CodePoint.CCSIDDBC, "CCSIDDBC");
1:66527ec:     put(CodePoint.CLSQRY, "CLSQRY");
1:66527ec:     put(CodePoint.CMDATHRM, "CMDATHRM");
1:66527ec:     put(CodePoint.CMDCHKRM, "CMDCHKRM");
1:66527ec:     put(CodePoint.CMDCMPRM, "CMDCMPRM");
1:66527ec:     put(CodePoint.CMDNSPRM, "CMDNSPRM");
1:66527ec:     put(CodePoint.CMMRQSRM, "CMMRQSRM");
1:66527ec:     put(CodePoint.CMDVLTRM, "CMDVLTRM");
1:66527ec:     put(CodePoint.CNTQRY, "CNTQRY");
1:66527ec:     put(CodePoint.CRRTKN, "CRRTKN");
1:66527ec:     put(CodePoint.DRPPKG, "DRPPKG");
1:66527ec:     put(CodePoint.DSCRDBTBL, "DSCRDBTBL");
1:66527ec:     put(CodePoint.DSCINVRM, "DSCINVRM");
1:66527ec:     put(CodePoint.DSCSQLSTT, "DSCSQLSTT");
1:66527ec:     put(CodePoint.DTAMCHRM, "DTAMCHRM");
1:66527ec:     put(CodePoint.ENDBND, "ENDBND");
1:66527ec:     put(CodePoint.ENDQRYRM, "ENDQRYRM");
1:66527ec:     put(CodePoint.ENDUOWRM, "ENDUOWRM");
1:66527ec:     put(CodePoint.EXCSAT, "EXCSAT");
1:66527ec:     put(CodePoint.EXCSATRD, "EXCSATRD");
1:66527ec:     put(CodePoint.EXCSQLIMM, "EXCSQLIMM");
1:66527ec:     put(CodePoint.EXCSQLSET, "EXCSQLSET");
1:66527ec:     put(CodePoint.EXCSQLSTT, "EXCSQLSTT");
1:66527ec:     put(CodePoint.EXTNAM, "EXTNAM");
1:66527ec:     put(CodePoint.FRCFIXROW, "FRCFIXROW");
1:66527ec:     put(CodePoint.MAXBLKEXT, "MAXBLKEXT");
1:66527ec:     put(CodePoint.MAXRSLCNT, "MAXRSLCNT");
1:66527ec:     put(CodePoint.MGRDEPRM, "MGRDEPRM");
1:66527ec:     put(CodePoint.MGRLVLLS, "MGRLVLLS");
1:66527ec:     put(CodePoint.MGRLVLRM, "MGRLVLRM");
1:66527ec:     put(CodePoint.MONITOR, "MONITOR");
1:66527ec:     put(CodePoint.NBRROW, "NBRROW");
1:66527ec:     put(CodePoint.OBJNSPRM, "OBJNSPRM");
1:66527ec:     put(CodePoint.OPNQFLRM, "OPNQFLRM");
1:66527ec:     put(CodePoint.OPNQRY, "OPNQRY");
1:66527ec:     put(CodePoint.OPNQRYRM, "OPNQRYRM");
1:66527ec:     put(CodePoint.OUTEXP, "OUTEXP");
1:66527ec:     put(CodePoint.OUTOVR, "OUTOVR");
1:66527ec:     put(CodePoint.OUTOVROPT, "OUTOVROPT");
1:66527ec:     put(CodePoint.PASSWORD, "PASSWORD");
1:66527ec:     put(CodePoint.PKGID, "PKGID");
1:66527ec:     put(CodePoint.PKGBNARM, "PKGBNARM");
1:66527ec:     put(CodePoint.PKGBPARM, "PKGBPARM");
1:66527ec:     put(CodePoint.PKGNAMCSN, "PKGNAMCSN");
1:66527ec:     put(CodePoint.PKGNAMCT, "PKGNAMCT");
1:66527ec:     put(CodePoint.PRCCNVRM, "PRCCNVRM");
1:66527ec:     put(CodePoint.PRDID, "PRDID");
1:66527ec:     put(CodePoint.PRDDTA, "PRDDTA");
1:66527ec:     put(CodePoint.PRMNSPRM, "PRMNSPRM");
1:66527ec:     put(CodePoint.PRPSQLSTT, "PRPSQLSTT");
1:66527ec:     put(CodePoint.QRYBLKCTL, "QRYBLKCTL");
1:66527ec:     put(CodePoint.QRYBLKRST, "QRYBLKRST");
1:66527ec:     put(CodePoint.QRYBLKSZ, "QRYBLKSZ");
1:66527ec:     put(CodePoint.QRYCLSIMP, "QRYCLSIMP");
1:66527ec:     put(CodePoint.QRYCLSRLS, "QRYCLSRLS");
1:66527ec:     put(CodePoint.QRYDSC, "QRYDSC");
1:66527ec:     put(CodePoint.QRYDTA, "QRYDTA");
1:66527ec:     put(CodePoint.QRYINSID, "QRYINSID");
1:66527ec:     put(CodePoint.QRYNOPRM, "QRYNOPRM");
1:66527ec:     put(CodePoint.QRYPOPRM, "QRYPOPRM");
1:66527ec:     put(CodePoint.QRYRELSCR, "QRYRELSCR");
1:66527ec:     put(CodePoint.QRYRFRTBL, "QRYRFRTBL");
1:66527ec:     put(CodePoint.QRYROWNBR, "QRYROWNBR");
1:66527ec:     put(CodePoint.QRYROWSNS, "QRYROWSNS");
1:66527ec:     put(CodePoint.QRYRTNDTA, "QRYRTNDTA");
1:66527ec:     put(CodePoint.QRYSCRORN, "QRYSCRORN");
1:66527ec:     put(CodePoint.QRYROWSET, "QRYROWSET");
1:66527ec:     put(CodePoint.RDBAFLRM, "RDBAFLRM");
1:66527ec:     put(CodePoint.RDBACCCL, "RDBACCCL");
1:66527ec:     put(CodePoint.RDBACCRM, "RDBACCRM");
1:66527ec:     put(CodePoint.RDBALWUPD, "RDBALWUPD");
1:66527ec:     put(CodePoint.RDBATHRM, "RDBATHRM");
1:66527ec:     put(CodePoint.RDBCMM, "RDBCMM");
1:66527ec:     put(CodePoint.RDBCMTOK, "RDBCMTOK");
1:66527ec:     put(CodePoint.RDBNACRM, "RDBNACRM");
1:66527ec:     put(CodePoint.RDBNAM, "RDBNAM");
1:66527ec:     put(CodePoint.RDBNFNRM, "RDBNFNRM");
1:66527ec:     put(CodePoint.RDBRLLBCK, "RDBRLLBCK");
1:66527ec:     put(CodePoint.RDBUPDRM, "RDBUPDRM");
1:66527ec:     put(CodePoint.REBIND, "REBIND");
1:66527ec:     put(CodePoint.RSCLMTRM, "RSCLMTRM");
1:66527ec:     put(CodePoint.RSLSETRM, "RSLSETRM");
1:66527ec:     put(CodePoint.RTNEXTDTA, "RTNEXTDTA");
1:66527ec:     put(CodePoint.RTNSQLDA, "RTNSQLDA");
1:66527ec:     put(CodePoint.SECCHK, "SECCHK");
1:66527ec:     put(CodePoint.SECCHKCD, "SECCHKCD");
1:66527ec:     put(CodePoint.SECCHKRM, "SECCHKRM");
1:66527ec:     put(CodePoint.SECMEC, "SECMEC");
1:66527ec:     put(CodePoint.SECMGRNM, "SECMGRNM");
1:66527ec:     put(CodePoint.SECTKN, "SECTKN");
1:66527ec:     put(CodePoint.SPVNAM, "SPVNAM");
1:66527ec:     put(CodePoint.SQLAM, "SQLAM");
1:66527ec:     put(CodePoint.SQLATTR, "SQLATTR");
1:66527ec:     put(CodePoint.SQLCARD, "SQLCARD");
1:66527ec:     put(CodePoint.SQLERRRM, "SQLERRRM");
1:66527ec:     put(CodePoint.SQLDARD, "SQLDARD");
1:66527ec:     put(CodePoint.SQLDTA, "SQLDTA");
1:66527ec:     put(CodePoint.SQLDTARD, "SQLDTARD");
1:66527ec:     put(CodePoint.SQLSTT, "SQLSTT");
1:66527ec:     put(CodePoint.SQLSTTVRB, "SQLSTTVRB");
1:66527ec:     put(CodePoint.SRVCLSNM, "SRVCLSNM");
1:66527ec:     put(CodePoint.SRVRLSLV, "SRVRLSLV");
1:66527ec:     put(CodePoint.SRVNAM, "SRVNAM");
1:66527ec:     put(CodePoint.SVRCOD, "SVRCOD");
1:66527ec:     put(CodePoint.SYNCCTL, "SYNCCTL");
1:66527ec:     put(CodePoint.SYNCLOG, "SYNCLOG");
1:66527ec:     put(CodePoint.SYNCRSY, "SYNCRSY");
1:66527ec:     put(CodePoint.SYNTAXRM, "SYNTAXRM");
1:66527ec:     put(CodePoint.TRGNSPRM, "TRGNSPRM");
1:66527ec:     put(CodePoint.TYPDEFNAM, "TYPDEFNAM");
1:66527ec:     put(CodePoint.TYPDEFOVR, "TYPDEFOVR");
1:66527ec:     put(CodePoint.TYPSQLDA, "TYPSQLDA");
1:66527ec:     put(CodePoint.UOWDSP, "UOWDSP");
1:66527ec:     put(CodePoint.USRID, "USRID");
1:66527ec:     put(CodePoint.VALNSPRM, "VALNSPRM");
1:66527ec:     put(CodePoint.PBSD, "PBSD");
1:66527ec:     put(CodePoint.PBSD_ISO, "PBSD_ISO");
1:66527ec:     put(CodePoint.PBSD_SCHEMA, "PBSD_SCHEMA");
1:66527ec:     put(CodePoint.UNICODEMGR, "UNICODEMGR");
1:eac0369:   }
1:eac0369: 
1:eac0369:   String lookup (int codePoint)
1:eac0369:   {
1:27fbf33:     return get(codePoint);
1:eac0369:   }
1:eac0369: 
1:eac0369: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:66527ec
/////////////////////////////////////////////////////////////////////////
1:     put(CodePoint.ABNUOWRM, "ABNUOWRM");
1:     put(CodePoint.ACCRDB, "ACCRDB");
1:     put(CodePoint.ACCRDBRM, "ACCRDBRM");
1:     put(CodePoint.ACCSEC, "ACCSEC");
1:     put(CodePoint.ACCSECRD, "ACCSECRD");
1:     put(CodePoint.AGENT, "AGENT");
1:     put(CodePoint.AGNPRMRM, "AGNPRMRM");
1:     put(CodePoint.BGNBND, "BGNBND");
1:     put(CodePoint.BGNBNDRM, "BGNBNDRM");
1:     put(CodePoint.BNDSQLSTT, "BNDSQLSTT");
1:     put(CodePoint.CCSIDSBC, "CCSIDSBC");
1:     put(CodePoint.CCSIDMBC, "CCSIDMBC");
1:     put(CodePoint.CCSIDDBC, "CCSIDDBC");
1:     put(CodePoint.CLSQRY, "CLSQRY");
1:     put(CodePoint.CMDATHRM, "CMDATHRM");
1:     put(CodePoint.CMDCHKRM, "CMDCHKRM");
1:     put(CodePoint.CMDCMPRM, "CMDCMPRM");
1:     put(CodePoint.CMDNSPRM, "CMDNSPRM");
1:     put(CodePoint.CMMRQSRM, "CMMRQSRM");
1:     put(CodePoint.CMDVLTRM, "CMDVLTRM");
1:     put(CodePoint.CNTQRY, "CNTQRY");
1:     put(CodePoint.CRRTKN, "CRRTKN");
1:     put(CodePoint.DRPPKG, "DRPPKG");
1:     put(CodePoint.DSCRDBTBL, "DSCRDBTBL");
1:     put(CodePoint.DSCINVRM, "DSCINVRM");
1:     put(CodePoint.DSCSQLSTT, "DSCSQLSTT");
1:     put(CodePoint.DTAMCHRM, "DTAMCHRM");
1:     put(CodePoint.ENDBND, "ENDBND");
1:     put(CodePoint.ENDQRYRM, "ENDQRYRM");
1:     put(CodePoint.ENDUOWRM, "ENDUOWRM");
1:     put(CodePoint.EXCSAT, "EXCSAT");
1:     put(CodePoint.EXCSATRD, "EXCSATRD");
1:     put(CodePoint.EXCSQLIMM, "EXCSQLIMM");
1:     put(CodePoint.EXCSQLSET, "EXCSQLSET");
1:     put(CodePoint.EXCSQLSTT, "EXCSQLSTT");
1:     put(CodePoint.EXTNAM, "EXTNAM");
1:     put(CodePoint.FRCFIXROW, "FRCFIXROW");
1:     put(CodePoint.MAXBLKEXT, "MAXBLKEXT");
1:     put(CodePoint.MAXRSLCNT, "MAXRSLCNT");
1:     put(CodePoint.MGRDEPRM, "MGRDEPRM");
1:     put(CodePoint.MGRLVLLS, "MGRLVLLS");
1:     put(CodePoint.MGRLVLRM, "MGRLVLRM");
1:     put(CodePoint.MONITOR, "MONITOR");
1:     put(CodePoint.NBRROW, "NBRROW");
1:     put(CodePoint.OBJNSPRM, "OBJNSPRM");
1:     put(CodePoint.OPNQFLRM, "OPNQFLRM");
1:     put(CodePoint.OPNQRY, "OPNQRY");
1:     put(CodePoint.OPNQRYRM, "OPNQRYRM");
1:     put(CodePoint.OUTEXP, "OUTEXP");
1:     put(CodePoint.OUTOVR, "OUTOVR");
1:     put(CodePoint.OUTOVROPT, "OUTOVROPT");
1:     put(CodePoint.PASSWORD, "PASSWORD");
1:     put(CodePoint.PKGID, "PKGID");
1:     put(CodePoint.PKGBNARM, "PKGBNARM");
1:     put(CodePoint.PKGBPARM, "PKGBPARM");
1:     put(CodePoint.PKGNAMCSN, "PKGNAMCSN");
1:     put(CodePoint.PKGNAMCT, "PKGNAMCT");
1:     put(CodePoint.PRCCNVRM, "PRCCNVRM");
1:     put(CodePoint.PRDID, "PRDID");
1:     put(CodePoint.PRDDTA, "PRDDTA");
1:     put(CodePoint.PRMNSPRM, "PRMNSPRM");
1:     put(CodePoint.PRPSQLSTT, "PRPSQLSTT");
1:     put(CodePoint.QRYBLKCTL, "QRYBLKCTL");
1:     put(CodePoint.QRYBLKRST, "QRYBLKRST");
1:     put(CodePoint.QRYBLKSZ, "QRYBLKSZ");
1:     put(CodePoint.QRYCLSIMP, "QRYCLSIMP");
1:     put(CodePoint.QRYCLSRLS, "QRYCLSRLS");
1:     put(CodePoint.QRYDSC, "QRYDSC");
1:     put(CodePoint.QRYDTA, "QRYDTA");
1:     put(CodePoint.QRYINSID, "QRYINSID");
1:     put(CodePoint.QRYNOPRM, "QRYNOPRM");
1:     put(CodePoint.QRYPOPRM, "QRYPOPRM");
1:     put(CodePoint.QRYRELSCR, "QRYRELSCR");
1:     put(CodePoint.QRYRFRTBL, "QRYRFRTBL");
1:     put(CodePoint.QRYROWNBR, "QRYROWNBR");
1:     put(CodePoint.QRYROWSNS, "QRYROWSNS");
1:     put(CodePoint.QRYRTNDTA, "QRYRTNDTA");
1:     put(CodePoint.QRYSCRORN, "QRYSCRORN");
1:     put(CodePoint.QRYROWSET, "QRYROWSET");
1:     put(CodePoint.RDBAFLRM, "RDBAFLRM");
1:     put(CodePoint.RDBACCCL, "RDBACCCL");
1:     put(CodePoint.RDBACCRM, "RDBACCRM");
1:     put(CodePoint.RDBALWUPD, "RDBALWUPD");
1:     put(CodePoint.RDBATHRM, "RDBATHRM");
1:     put(CodePoint.RDBCMM, "RDBCMM");
1:     put(CodePoint.RDBCMTOK, "RDBCMTOK");
1:     put(CodePoint.RDBNACRM, "RDBNACRM");
1:     put(CodePoint.RDBNAM, "RDBNAM");
1:     put(CodePoint.RDBNFNRM, "RDBNFNRM");
1:     put(CodePoint.RDBRLLBCK, "RDBRLLBCK");
1:     put(CodePoint.RDBUPDRM, "RDBUPDRM");
1:     put(CodePoint.REBIND, "REBIND");
1:     put(CodePoint.RSCLMTRM, "RSCLMTRM");
1:     put(CodePoint.RSLSETRM, "RSLSETRM");
1:     put(CodePoint.RTNEXTDTA, "RTNEXTDTA");
1:     put(CodePoint.RTNSQLDA, "RTNSQLDA");
1:     put(CodePoint.SECCHK, "SECCHK");
1:     put(CodePoint.SECCHKCD, "SECCHKCD");
1:     put(CodePoint.SECCHKRM, "SECCHKRM");
1:     put(CodePoint.SECMEC, "SECMEC");
1:     put(CodePoint.SECMGRNM, "SECMGRNM");
1:     put(CodePoint.SECTKN, "SECTKN");
1:     put(CodePoint.SPVNAM, "SPVNAM");
1:     put(CodePoint.SQLAM, "SQLAM");
1:     put(CodePoint.SQLATTR, "SQLATTR");
1:     put(CodePoint.SQLCARD, "SQLCARD");
1:     put(CodePoint.SQLERRRM, "SQLERRRM");
1:     put(CodePoint.SQLDARD, "SQLDARD");
1:     put(CodePoint.SQLDTA, "SQLDTA");
1:     put(CodePoint.SQLDTARD, "SQLDTARD");
1:     put(CodePoint.SQLSTT, "SQLSTT");
1:     put(CodePoint.SQLSTTVRB, "SQLSTTVRB");
1:     put(CodePoint.SRVCLSNM, "SRVCLSNM");
1:     put(CodePoint.SRVRLSLV, "SRVRLSLV");
1:     put(CodePoint.SRVNAM, "SRVNAM");
1:     put(CodePoint.SVRCOD, "SVRCOD");
1:     put(CodePoint.SYNCCTL, "SYNCCTL");
1:     put(CodePoint.SYNCLOG, "SYNCLOG");
1:     put(CodePoint.SYNCRSY, "SYNCRSY");
1:     put(CodePoint.SYNTAXRM, "SYNTAXRM");
1:     put(CodePoint.TRGNSPRM, "TRGNSPRM");
1:     put(CodePoint.TYPDEFNAM, "TYPDEFNAM");
1:     put(CodePoint.TYPDEFOVR, "TYPDEFOVR");
1:     put(CodePoint.TYPSQLDA, "TYPSQLDA");
1:     put(CodePoint.UOWDSP, "UOWDSP");
1:     put(CodePoint.USRID, "USRID");
1:     put(CodePoint.VALNSPRM, "VALNSPRM");
1:     put(CodePoint.PBSD, "PBSD");
1:     put(CodePoint.PBSD_ISO, "PBSD_ISO");
1:     put(CodePoint.PBSD_SCHEMA, "PBSD_SCHEMA");
1:     put(CodePoint.UNICODEMGR, "UNICODEMGR");
commit:27fbf33
/////////////////////////////////////////////////////////////////////////
1: class CodePointNameTable extends java.util.Hashtable<Integer, String>
/////////////////////////////////////////////////////////////////////////
1:     return get(codePoint);
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:816270f
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.UNICODEMGR), "UNICODEMGR");
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:c6c4d4d
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.PBSD), "PBSD");
0:     put (new Integer (CodePoint.PBSD_ISO), "PBSD_ISO");
0:     put (new Integer (CodePoint.PBSD_SCHEMA), "PBSD_SCHEMA");
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59e5225
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Bernt Johnsen
-------------------------------------------------------------------------------
commit:5e88312
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.FRCFIXROW), "FRCFIXROW");
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.QRYCLSIMP), "QRYCLSIMP");
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:2e4a44e
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.MONITOR), "MONITOR");
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.PKGNAMCT), "PKGNAMCT");
/////////////////////////////////////////////////////////////////////////
0:     put (new Integer (CodePoint.QRYCLSRLS), "QRYCLSRLS");
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:d7258ed
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.drda.CodePointNameTable
1: 
0:    Copyright 2001, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:141cd31
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.drda
0:    (C) Copyright IBM Corp. 2001, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: package org.apache.derby.impl.drda;
1: 
1: /**
1:   This class has a hashtable of CodePoint values.  It is used by the tracing
1:   code and by the protocol testing code
1:   It is arranged in alphabetical order.
1: */
1: 
0: class CodePointNameTable extends java.util.Hashtable
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
1: 
0:   private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2001_2004;
1:   CodePointNameTable ()
1:   {
0:     put (new Integer (CodePoint.ABNUOWRM), "ABNUOWRM");
0:     put (new Integer (CodePoint.ACCRDB), "ACCRDB");
0:     put (new Integer (CodePoint.ACCRDBRM), "ACCRDBRM");
0:     put (new Integer (CodePoint.ACCSEC), "ACCSEC");
0:     put (new Integer (CodePoint.ACCSECRD), "ACCSECRD");
0:     put (new Integer (CodePoint.AGENT), "AGENT");
0:     put (new Integer (CodePoint.AGNPRMRM), "AGNPRMRM");
0:     put (new Integer (CodePoint.BGNBND), "BGNBND");
0:     put (new Integer (CodePoint.BGNBNDRM), "BGNBNDRM");
0:     put (new Integer (CodePoint.BNDSQLSTT), "BNDSQLSTT");
0:     put (new Integer (CodePoint.CCSIDSBC), "CCSIDSBC");
0:     put (new Integer (CodePoint.CCSIDMBC), "CCSIDMBC");
0:     put (new Integer (CodePoint.CCSIDDBC), "CCSIDDBC");
0:     put (new Integer (CodePoint.CLSQRY), "CLSQRY");
0:     put (new Integer (CodePoint.CMDATHRM), "CMDATHRM");
0:     put (new Integer (CodePoint.CMDCHKRM), "CMDCHKRM");
0:     put (new Integer (CodePoint.CMDCMPRM), "CMDCMPRM");
0:     put (new Integer (CodePoint.CMDNSPRM), "CMDNSPRM");
0:     put (new Integer (CodePoint.CMMRQSRM), "CMMRQSRM");
0:     put (new Integer (CodePoint.CMDVLTRM), "CMDVLTRM");
0:     put (new Integer (CodePoint.CNTQRY), "CNTQRY");
0:     put (new Integer (CodePoint.CRRTKN), "CRRTKN");
0:     put (new Integer (CodePoint.DRPPKG), "DRPPKG");
0:     put (new Integer (CodePoint.DSCRDBTBL), "DSCRDBTBL");
0:     put (new Integer (CodePoint.DSCINVRM), "DSCINVRM");
0:     put (new Integer (CodePoint.DSCSQLSTT), "DSCSQLSTT");
0:     put (new Integer (CodePoint.DTAMCHRM), "DTAMCHRM");
0:     put (new Integer (CodePoint.ENDBND), "ENDBND");
0:     put (new Integer (CodePoint.ENDQRYRM), "ENDQRYRM");
0:     put (new Integer (CodePoint.ENDUOWRM), "ENDUOWRM");
0:     put (new Integer (CodePoint.EXCSAT), "EXCSAT");
0:     put (new Integer (CodePoint.EXCSATRD), "EXCSATRD");
0:     put (new Integer (CodePoint.EXCSQLIMM), "EXCSQLIMM");
0:     put (new Integer (CodePoint.EXCSQLSET), "EXCSQLSET");
0:     put (new Integer (CodePoint.EXCSQLSTT), "EXCSQLSTT");
0:     put (new Integer (CodePoint.EXTNAM), "EXTNAM");
0:     put (new Integer (CodePoint.MAXBLKEXT), "MAXBLKEXT");
0:     put (new Integer (CodePoint.MAXRSLCNT), "MAXRSLCNT");
0:     put (new Integer (CodePoint.MGRDEPRM), "MGRDEPRM");
0:     put (new Integer (CodePoint.MGRLVLLS), "MGRLVLLS");
0:     put (new Integer (CodePoint.MGRLVLRM), "MGRLVLRM");
0:     put (new Integer (CodePoint.NBRROW), "NBRROW");
0:     put (new Integer (CodePoint.OBJNSPRM), "OBJNSPRM");
0:     put (new Integer (CodePoint.OPNQFLRM), "OPNQFLRM");
0:     put (new Integer (CodePoint.OPNQRY), "OPNQRY");
0:     put (new Integer (CodePoint.OPNQRYRM), "OPNQRYRM");
0:     put (new Integer (CodePoint.OUTEXP), "OUTEXP");
0:     put (new Integer (CodePoint.OUTOVR), "OUTOVR");
0:     put (new Integer (CodePoint.OUTOVROPT), "OUTOVROPT");
0:     put (new Integer (CodePoint.PASSWORD), "PASSWORD");
0:     put (new Integer (CodePoint.PKGID), "PKGID");
0:     put (new Integer (CodePoint.PKGBNARM), "PKGBNARM");
0:     put (new Integer (CodePoint.PKGBPARM), "PKGBPARM");
0:     put (new Integer (CodePoint.PKGNAMCSN), "PKGNAMCSN");
0:     put (new Integer (CodePoint.PRCCNVRM), "PRCCNVRM");
0:     put (new Integer (CodePoint.PRDID), "PRDID");
0:     put (new Integer (CodePoint.PRDDTA), "PRDDTA");
0:     put (new Integer (CodePoint.PRMNSPRM), "PRMNSPRM");
0:     put (new Integer (CodePoint.PRPSQLSTT), "PRPSQLSTT");
0:     put (new Integer (CodePoint.QRYBLKCTL), "QRYBLKCTL");
0:     put (new Integer (CodePoint.QRYBLKRST), "QRYBLKRST");
0:     put (new Integer (CodePoint.QRYBLKSZ), "QRYBLKSZ");
0:     put (new Integer (CodePoint.QRYDSC), "QRYDSC");
0:     put (new Integer (CodePoint.QRYDTA), "QRYDTA");
0:     put (new Integer (CodePoint.QRYINSID), "QRYINSID");
0:     put (new Integer (CodePoint.QRYNOPRM), "QRYNOPRM");
0:     put (new Integer (CodePoint.QRYPOPRM), "QRYPOPRM");
0:     put (new Integer (CodePoint.QRYRELSCR), "QRYRELSCR");
0:     put (new Integer (CodePoint.QRYRFRTBL), "QRYRFRTBL");
0:     put (new Integer (CodePoint.QRYROWNBR), "QRYROWNBR");
0:     put (new Integer (CodePoint.QRYROWSNS), "QRYROWSNS");
0:     put (new Integer (CodePoint.QRYRTNDTA), "QRYRTNDTA");
0:     put (new Integer (CodePoint.QRYSCRORN), "QRYSCRORN");
0:     put (new Integer (CodePoint.QRYROWSET), "QRYROWSET");
0:     put (new Integer (CodePoint.RDBAFLRM), "RDBAFLRM");
0:     put (new Integer (CodePoint.RDBACCCL), "RDBACCCL");
0:     put (new Integer (CodePoint.RDBACCRM), "RDBACCRM");
0:     put (new Integer (CodePoint.RDBALWUPD), "RDBALWUPD");
0:     put (new Integer (CodePoint.RDBATHRM), "RDBATHRM");
0:     put (new Integer (CodePoint.RDBCMM), "RDBCMM");
0:     put (new Integer (CodePoint.RDBCMTOK), "RDBCMTOK");
0:     put (new Integer (CodePoint.RDBNACRM), "RDBNACRM");
0:     put (new Integer (CodePoint.RDBNAM), "RDBNAM");
0:     put (new Integer (CodePoint.RDBNFNRM), "RDBNFNRM");
0:     put (new Integer (CodePoint.RDBRLLBCK), "RDBRLLBCK");
0:     put (new Integer (CodePoint.RDBUPDRM), "RDBUPDRM");
0:     put (new Integer (CodePoint.REBIND), "REBIND");
0:     put (new Integer (CodePoint.RSCLMTRM), "RSCLMTRM");
0:     put (new Integer (CodePoint.RSLSETRM), "RSLSETRM");
0:     put (new Integer (CodePoint.RTNEXTDTA), "RTNEXTDTA");
0:     put (new Integer (CodePoint.RTNSQLDA), "RTNSQLDA");
0:     put (new Integer (CodePoint.SECCHK), "SECCHK");
0:     put (new Integer (CodePoint.SECCHKCD), "SECCHKCD");
0:     put (new Integer (CodePoint.SECCHKRM), "SECCHKRM");
0:     put (new Integer (CodePoint.SECMEC), "SECMEC");
0:     put (new Integer (CodePoint.SECMGRNM), "SECMGRNM");
0:     put (new Integer (CodePoint.SECTKN), "SECTKN");
0:     put (new Integer (CodePoint.SPVNAM), "SPVNAM");
0:     put (new Integer (CodePoint.SQLAM), "SQLAM");
0:     put (new Integer (CodePoint.SQLATTR), "SQLATTR");
0:     put (new Integer (CodePoint.SQLCARD), "SQLCARD");
0:     put (new Integer (CodePoint.SQLERRRM), "SQLERRRM");
0:     put (new Integer (CodePoint.SQLDARD), "SQLDARD");
0:     put (new Integer (CodePoint.SQLDTA), "SQLDTA");
0:     put (new Integer (CodePoint.SQLDTARD), "SQLDTARD");
0:     put (new Integer (CodePoint.SQLSTT), "SQLSTT");
0:     put (new Integer (CodePoint.SQLSTTVRB), "SQLSTTVRB");
0:     put (new Integer (CodePoint.SRVCLSNM), "SRVCLSNM");
0:     put (new Integer (CodePoint.SRVRLSLV), "SRVRLSLV");
0:     put (new Integer (CodePoint.SRVNAM), "SRVNAM");
0:     put (new Integer (CodePoint.SVRCOD), "SVRCOD");
0:     put (new Integer (CodePoint.SYNCCTL), "SYNCCTL");
0:     put (new Integer (CodePoint.SYNCLOG), "SYNCLOG");
0:     put (new Integer (CodePoint.SYNCRSY), "SYNCRSY");
0:     put (new Integer (CodePoint.SYNTAXRM), "SYNTAXRM");
0:     put (new Integer (CodePoint.TRGNSPRM), "TRGNSPRM");
0:     put (new Integer (CodePoint.TYPDEFNAM), "TYPDEFNAM");
0:     put (new Integer (CodePoint.TYPDEFOVR), "TYPDEFOVR");
0:     put (new Integer (CodePoint.TYPSQLDA), "TYPSQLDA");
0:     put (new Integer (CodePoint.UOWDSP), "UOWDSP");
0:     put (new Integer (CodePoint.USRID), "USRID");
0:     put (new Integer (CodePoint.VALNSPRM), "VALNSPRM");
1:   }
1: 
1:   String lookup (int codePoint)
1:   {
0:     return (String) get (new Integer (codePoint));
1:   }
1: 
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.drda
0:    (C) Copyright IBM Corp. 2001, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: package org.apache.derby.impl.drda;
0: 
0: /**
0:   This class has a hashtable of CodePoint values.  It is used by the tracing
0:   code and by the protocol testing code
0:   It is arranged in alphabetical order.
0: */
0: 
0: class CodePointNameTable extends java.util.Hashtable
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 
0:   private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2001_2004;
0:   CodePointNameTable ()
0:   {
0:     put (new Integer (CodePoint.ABNUOWRM), "ABNUOWRM");
0:     put (new Integer (CodePoint.ACCRDB), "ACCRDB");
0:     put (new Integer (CodePoint.ACCRDBRM), "ACCRDBRM");
0:     put (new Integer (CodePoint.ACCSEC), "ACCSEC");
0:     put (new Integer (CodePoint.ACCSECRD), "ACCSECRD");
0:     put (new Integer (CodePoint.AGENT), "AGENT");
0:     put (new Integer (CodePoint.AGNPRMRM), "AGNPRMRM");
0:     put (new Integer (CodePoint.BGNBND), "BGNBND");
0:     put (new Integer (CodePoint.BGNBNDRM), "BGNBNDRM");
0:     put (new Integer (CodePoint.BNDSQLSTT), "BNDSQLSTT");
0:     put (new Integer (CodePoint.CCSIDSBC), "CCSIDSBC");
0:     put (new Integer (CodePoint.CCSIDMBC), "CCSIDMBC");
0:     put (new Integer (CodePoint.CCSIDDBC), "CCSIDDBC");
0:     put (new Integer (CodePoint.CLSQRY), "CLSQRY");
0:     put (new Integer (CodePoint.CMDATHRM), "CMDATHRM");
0:     put (new Integer (CodePoint.CMDCHKRM), "CMDCHKRM");
0:     put (new Integer (CodePoint.CMDCMPRM), "CMDCMPRM");
0:     put (new Integer (CodePoint.CMDNSPRM), "CMDNSPRM");
0:     put (new Integer (CodePoint.CMMRQSRM), "CMMRQSRM");
0:     put (new Integer (CodePoint.CMDVLTRM), "CMDVLTRM");
0:     put (new Integer (CodePoint.CNTQRY), "CNTQRY");
0:     put (new Integer (CodePoint.CRRTKN), "CRRTKN");
0:     put (new Integer (CodePoint.DRPPKG), "DRPPKG");
0:     put (new Integer (CodePoint.DSCRDBTBL), "DSCRDBTBL");
0:     put (new Integer (CodePoint.DSCINVRM), "DSCINVRM");
0:     put (new Integer (CodePoint.DSCSQLSTT), "DSCSQLSTT");
0:     put (new Integer (CodePoint.DTAMCHRM), "DTAMCHRM");
0:     put (new Integer (CodePoint.ENDBND), "ENDBND");
0:     put (new Integer (CodePoint.ENDQRYRM), "ENDQRYRM");
0:     put (new Integer (CodePoint.ENDUOWRM), "ENDUOWRM");
0:     put (new Integer (CodePoint.EXCSAT), "EXCSAT");
0:     put (new Integer (CodePoint.EXCSATRD), "EXCSATRD");
0:     put (new Integer (CodePoint.EXCSQLIMM), "EXCSQLIMM");
0:     put (new Integer (CodePoint.EXCSQLSET), "EXCSQLSET");
0:     put (new Integer (CodePoint.EXCSQLSTT), "EXCSQLSTT");
0:     put (new Integer (CodePoint.EXTNAM), "EXTNAM");
0:     put (new Integer (CodePoint.MAXBLKEXT), "MAXBLKEXT");
0:     put (new Integer (CodePoint.MAXRSLCNT), "MAXRSLCNT");
0:     put (new Integer (CodePoint.MGRDEPRM), "MGRDEPRM");
0:     put (new Integer (CodePoint.MGRLVLLS), "MGRLVLLS");
0:     put (new Integer (CodePoint.MGRLVLRM), "MGRLVLRM");
0:     put (new Integer (CodePoint.NBRROW), "NBRROW");
0:     put (new Integer (CodePoint.OBJNSPRM), "OBJNSPRM");
0:     put (new Integer (CodePoint.OPNQFLRM), "OPNQFLRM");
0:     put (new Integer (CodePoint.OPNQRY), "OPNQRY");
0:     put (new Integer (CodePoint.OPNQRYRM), "OPNQRYRM");
0:     put (new Integer (CodePoint.OUTEXP), "OUTEXP");
0:     put (new Integer (CodePoint.OUTOVR), "OUTOVR");
0:     put (new Integer (CodePoint.OUTOVROPT), "OUTOVROPT");
0:     put (new Integer (CodePoint.PASSWORD), "PASSWORD");
0:     put (new Integer (CodePoint.PKGID), "PKGID");
0:     put (new Integer (CodePoint.PKGBNARM), "PKGBNARM");
0:     put (new Integer (CodePoint.PKGBPARM), "PKGBPARM");
0:     put (new Integer (CodePoint.PKGNAMCSN), "PKGNAMCSN");
0:     put (new Integer (CodePoint.PRCCNVRM), "PRCCNVRM");
0:     put (new Integer (CodePoint.PRDID), "PRDID");
0:     put (new Integer (CodePoint.PRDDTA), "PRDDTA");
0:     put (new Integer (CodePoint.PRMNSPRM), "PRMNSPRM");
0:     put (new Integer (CodePoint.PRPSQLSTT), "PRPSQLSTT");
0:     put (new Integer (CodePoint.QRYBLKCTL), "QRYBLKCTL");
0:     put (new Integer (CodePoint.QRYBLKRST), "QRYBLKRST");
0:     put (new Integer (CodePoint.QRYBLKSZ), "QRYBLKSZ");
0:     put (new Integer (CodePoint.QRYDSC), "QRYDSC");
0:     put (new Integer (CodePoint.QRYDTA), "QRYDTA");
0:     put (new Integer (CodePoint.QRYINSID), "QRYINSID");
0:     put (new Integer (CodePoint.QRYNOPRM), "QRYNOPRM");
0:     put (new Integer (CodePoint.QRYPOPRM), "QRYPOPRM");
0:     put (new Integer (CodePoint.QRYRELSCR), "QRYRELSCR");
0:     put (new Integer (CodePoint.QRYRFRTBL), "QRYRFRTBL");
0:     put (new Integer (CodePoint.QRYROWNBR), "QRYROWNBR");
0:     put (new Integer (CodePoint.QRYROWSNS), "QRYROWSNS");
0:     put (new Integer (CodePoint.QRYRTNDTA), "QRYRTNDTA");
0:     put (new Integer (CodePoint.QRYSCRORN), "QRYSCRORN");
0:     put (new Integer (CodePoint.QRYROWSET), "QRYROWSET");
0:     put (new Integer (CodePoint.RDBAFLRM), "RDBAFLRM");
0:     put (new Integer (CodePoint.RDBACCCL), "RDBACCCL");
0:     put (new Integer (CodePoint.RDBACCRM), "RDBACCRM");
0:     put (new Integer (CodePoint.RDBALWUPD), "RDBALWUPD");
0:     put (new Integer (CodePoint.RDBATHRM), "RDBATHRM");
0:     put (new Integer (CodePoint.RDBCMM), "RDBCMM");
0:     put (new Integer (CodePoint.RDBCMTOK), "RDBCMTOK");
0:     put (new Integer (CodePoint.RDBNACRM), "RDBNACRM");
0:     put (new Integer (CodePoint.RDBNAM), "RDBNAM");
0:     put (new Integer (CodePoint.RDBNFNRM), "RDBNFNRM");
0:     put (new Integer (CodePoint.RDBRLLBCK), "RDBRLLBCK");
0:     put (new Integer (CodePoint.RDBUPDRM), "RDBUPDRM");
0:     put (new Integer (CodePoint.REBIND), "REBIND");
0:     put (new Integer (CodePoint.RSCLMTRM), "RSCLMTRM");
0:     put (new Integer (CodePoint.RSLSETRM), "RSLSETRM");
0:     put (new Integer (CodePoint.RTNEXTDTA), "RTNEXTDTA");
0:     put (new Integer (CodePoint.RTNSQLDA), "RTNSQLDA");
0:     put (new Integer (CodePoint.SECCHK), "SECCHK");
0:     put (new Integer (CodePoint.SECCHKCD), "SECCHKCD");
0:     put (new Integer (CodePoint.SECCHKRM), "SECCHKRM");
0:     put (new Integer (CodePoint.SECMEC), "SECMEC");
0:     put (new Integer (CodePoint.SECMGRNM), "SECMGRNM");
0:     put (new Integer (CodePoint.SECTKN), "SECTKN");
0:     put (new Integer (CodePoint.SPVNAM), "SPVNAM");
0:     put (new Integer (CodePoint.SQLAM), "SQLAM");
0:     put (new Integer (CodePoint.SQLATTR), "SQLATTR");
0:     put (new Integer (CodePoint.SQLCARD), "SQLCARD");
0:     put (new Integer (CodePoint.SQLERRRM), "SQLERRRM");
0:     put (new Integer (CodePoint.SQLDARD), "SQLDARD");
0:     put (new Integer (CodePoint.SQLDTA), "SQLDTA");
0:     put (new Integer (CodePoint.SQLDTARD), "SQLDTARD");
0:     put (new Integer (CodePoint.SQLSTT), "SQLSTT");
0:     put (new Integer (CodePoint.SQLSTTVRB), "SQLSTTVRB");
0:     put (new Integer (CodePoint.SRVCLSNM), "SRVCLSNM");
0:     put (new Integer (CodePoint.SRVRLSLV), "SRVRLSLV");
0:     put (new Integer (CodePoint.SRVNAM), "SRVNAM");
0:     put (new Integer (CodePoint.SVRCOD), "SVRCOD");
0:     put (new Integer (CodePoint.SYNCCTL), "SYNCCTL");
0:     put (new Integer (CodePoint.SYNCLOG), "SYNCLOG");
0:     put (new Integer (CodePoint.SYNCRSY), "SYNCRSY");
0:     put (new Integer (CodePoint.SYNTAXRM), "SYNTAXRM");
0:     put (new Integer (CodePoint.TRGNSPRM), "TRGNSPRM");
0:     put (new Integer (CodePoint.TYPDEFNAM), "TYPDEFNAM");
0:     put (new Integer (CodePoint.TYPDEFOVR), "TYPDEFOVR");
0:     put (new Integer (CodePoint.TYPSQLDA), "TYPSQLDA");
0:     put (new Integer (CodePoint.UOWDSP), "UOWDSP");
0:     put (new Integer (CodePoint.USRID), "USRID");
0:     put (new Integer (CodePoint.VALNSPRM), "VALNSPRM");
0:   }
0: 
0:   String lookup (int codePoint)
0:   {
0:     return (String) get (new Integer (codePoint));
0:   }
0: 
0: }
============================================================================