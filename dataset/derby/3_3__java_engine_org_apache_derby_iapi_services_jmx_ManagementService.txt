1:b8d76fa: /*
1:782dbe1: 
1:782dbe1:    Derby - Class org.apache.derby.iapi.services.jmx.ManagementService
1:782dbe1: 
1:782dbe1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:782dbe1:    contributor license agreements.  See the NOTICE file distributed with
1:782dbe1:    this work for additional information regarding copyright ownership.
1:782dbe1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:782dbe1:    (the "License"); you may not use this file except in compliance with
1:782dbe1:    the License.  You may obtain a copy of the License at
1:782dbe1: 
1:782dbe1:       http://www.apache.org/licenses/LICENSE-2.0
1:782dbe1: 
1:b8d76fa:    Unless required by applicable law or agreed to in writing, software
1:b8d76fa:    distributed under the License is distributed on an "AS IS" BASIS,
1:b8d76fa:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b8d76fa:    See the License for the specific language governing permissions and
1:b8d76fa:    limitations under the License.
1:5c4e302: 
1:782dbe1:  */
7:b8d76fa: 
1:b8d76fa: package org.apache.derby.iapi.services.jmx;
1:b8d76fa: 
1:5c4e302: import org.apache.derby.iapi.error.StandardException;
1:f8bc019: import org.apache.derby.mbeans.ManagementMBean;
1:5c4e302: 
1:5c4e302: /**
1:b8d76fa: * This interface represents a Management Service. An implementation of this 
1:b8d76fa: * service is started by the Derby monitor if the system property derby.system.jmx has
1:b8d76fa: * been set. The following services are provided:
1:b8d76fa: * 
1:b8d76fa: *	<li> Create and start an instance of MBean server to register MBeans.
1:b8d76fa: *       <li> Create managed beans (MBeans) to instrument derby resources for
1:b8d76fa: *            management and monitoring.
1:b8d76fa: * 
1:b8d76fa: * The following code can be used to locate an instance of this service
1:b8d76fa: * if running.
1:b8d76fa: *
1:f8bc019: * ManagementService ms = (ManagementService)
1:f8bc019: *        Monitor.getSystemModule(Module.JMX);
1:b8d76fa: *
2:b8d76fa: */
1:f8bc019: public interface ManagementService extends ManagementMBean {
1:f8bc019:    
1:b8d76fa:     /**
1:5c4e302:      * The domain for all of derby's mbeans: org.apache.derby
1:5c4e302:      */
1:5c4e302:     public static final String DERBY_JMX_DOMAIN = "org.apache.derby";
1:5c4e302:     
1:5c4e302:     /**
1:5c4e302:      * Registers an MBean with the MBean server.
1:e4f7f9e:      * The mbean will be unregistered automatically when Derby shuts down.
1:5c4e302:      * 
1:5c4e302:      * @param bean The MBean to wrap with a StandardMBean and register
1:5c4e302:      * @param beanInterface The management interface for the MBean.
1:e4f7f9e:      * @param keyProperties The String representation of the MBean's key properties,
1:e4f7f9e:      * they will be added into the ObjectName with Derby's domain. Key
1:5c4e302:      * type should be first with a short name for the bean, typically the
1:5c4e302:      * class name without the package.
1:5c4e302:      * 
1:86ee0a0:      * @return An identifier that can later be used to unregister the mbean.
1:5c4e302:      */
1:f9a152b:     public <T> Object registerMBean(T bean,
1:f9a152b:             Class<T> beanInterface,
1:e4f7f9e:             String keyProperties)
1:5c4e302:             throws StandardException;
1:5c4e302:     
1:5c4e302:     /**
1:5c4e302:      * Unregister a mbean previously registered with registerMBean.
1:5c4e302:      * 
1:5c4e302:      * @param mbeanIdentifier An identifier returned by registerMBean.
1:5c4e302:      */
1:5c4e302:     public void unregisterMBean(Object mbeanIdentifier);
1:86ee0a0: 
1:86ee0a0:     /**
1:86ee0a0:      * Quote an MBean key property value, so that it is safe to pass to
1:86ee0a0:      * {@link #registerMBean} even if it potentially contains special
1:86ee0a0:      * characters.
1:86ee0a0:      *
1:86ee0a0:      * @param value the value to quote
1:86ee0a0:      * @return the quoted value
1:86ee0a0:      * @see javax.management.ObjectName#quote(String)
1:86ee0a0:      */
1:86ee0a0:     String quotePropertyValue(String value);
1:b8d76fa: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:86ee0a0
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:      * @return An identifier that can later be used to unregister the mbean.
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Quote an MBean key property value, so that it is safe to pass to
1:      * {@link #registerMBean} even if it potentially contains special
1:      * characters.
1:      *
1:      * @param value the value to quote
1:      * @return the quoted value
1:      * @see javax.management.ObjectName#quote(String)
1:      */
1:     String quotePropertyValue(String value);
commit:f668d94
/////////////////////////////////////////////////////////////////////////
commit:f9a152b
/////////////////////////////////////////////////////////////////////////
1:     public <T> Object registerMBean(T bean,
1:             Class<T> beanInterface,
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:782dbe1
/////////////////////////////////////////////////////////////////////////
1: 
1:    Derby - Class org.apache.derby.iapi.services.jmx.ManagementService
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:  */
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:e4f7f9e
/////////////////////////////////////////////////////////////////////////
1:      * The mbean will be unregistered automatically when Derby shuts down.
1:      * @param keyProperties The String representation of the MBean's key properties,
1:      * they will be added into the ObjectName with Derby's domain. Key
/////////////////////////////////////////////////////////////////////////
1:             String keyProperties)
commit:f8bc019
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.iapi.reference.Module;
1: import org.apache.derby.mbeans.ManagementMBean;
/////////////////////////////////////////////////////////////////////////
1: * ManagementService ms = (ManagementService)
1: *        Monitor.getSystemModule(Module.JMX);
1: public interface ManagementService extends ManagementMBean {
1:    
commit:5c4e302
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.error.StandardException;
1: 
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * The domain for all of derby's mbeans: org.apache.derby
1:      */
1:     public static final String DERBY_JMX_DOMAIN = "org.apache.derby";
1:     
1:     /**
1:      * Registers an MBean with the MBean server.
0:      * The object name instance 
0:      * represented by the given String will be created by this method.
0:      * The mbean will be unregistered automatically when Derby shutsdown.
1:      * 
1:      * @param bean The MBean to wrap with a StandardMBean and register
1:      * @param beanInterface The management interface for the MBean.
0:      * @param nameAttributes The String representation of the MBean's attrributes,
0:      * they will be added into the ObjectName with Derby's domain. Attribute
1:      * type should be first with a short name for the bean, typically the
1:      * class name without the package.
1:      * 
0:      * @return An idenitifier that can later be used to unregister the mbean.
1:      */
0:     public Object registerMBean(Object bean,
0:             Class beanInterface,
0:             String nameAttributes)
1:             throws StandardException;
1:     
1:     /**
1:      * Unregister a mbean previously registered with registerMBean.
1:      * 
1:      * @param mbeanIdentifier An identifier returned by registerMBean.
0:      * @throws StandardException Error unregistering bean.
1:      */
1:     public void unregisterMBean(Object mbeanIdentifier);
commit:b8d76fa
/////////////////////////////////////////////////////////////////////////
1: /*
0:    Derby Classname org.apache.derby.iapi.services.jmx.ManagementService
1:   
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1:  
0:        http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.iapi.services.jmx;
1: 
1: 
1: /**
1: * This interface represents a Management Service. An implementation of this 
1: * service is started by the Derby monitor if the system property derby.system.jmx has
1: * been set. The following services are provided:
1: * 
1: *	<li> Create and start an instance of MBean server to register MBeans.
1: *       <li> Create managed beans (MBeans) to instrument derby resources for
1: *            management and monitoring.
1: * 
1: * The following code can be used to locate an instance of this service
1: * if running.
1: *
0: * ManagementService ms = (ManagementService)Monitor.getSystemModule
0: *		("org.apache.derby.iapi.services.mbeans.ManagementService");
1: *
1: */
0: public interface ManagementService {
1: 	
0:     /* Class name of this interface */
0:     public static final String MODULE = 
0:             "org.apache.derby.iapi.services.jmx.ManagementService";
1: }
============================================================================