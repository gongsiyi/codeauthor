1:eac0369: /*
3:eac0369: 
1:345de35:    Derby - Class org.apache.derby.impl.sql.compile.DefaultVTIModDeferPolicy
1:345de35: 
1:2d37fd6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2d37fd6:    contributor license agreements.  See the NOTICE file distributed with
1:2d37fd6:    this work for additional information regarding copyright ownership.
1:2d37fd6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2d37fd6:    (the "License"); you may not use this file except in compliance with
1:2d37fd6:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
1:345de35: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package	org.apache.derby.impl.sql.compile;
1:eac0369: 
1:eac0369: import org.apache.derby.vti.DeferModification;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * This class implements the default policy for defering modifications to virtual
1:eac0369:  * tables.
1:eac0369:  */
1:eac0369: class DefaultVTIModDeferPolicy implements DeferModification
1:eac0369: {
1:eac0369:     private final String targetVTIClassName;
1:eac0369:     private final boolean VTIResultSetIsSensitive;
1:eac0369: 
1:eac0369:     DefaultVTIModDeferPolicy( String targetVTIClassName,
1:eac0369:                               boolean VTIResultSetIsSensitive)
1:eac0369:     {
1:eac0369:         this.targetVTIClassName = targetVTIClassName;
1:eac0369:         this.VTIResultSetIsSensitive = VTIResultSetIsSensitive;
1:eac0369:     }
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * @see org.apache.derby.vti.DeferModification#alwaysDefer
1:eac0369:      */
1:eac0369:     public boolean alwaysDefer( int statementType)
1:eac0369:     {
1:eac0369:         return false;
1:eac0369:     }
1:eac0369:           
1:eac0369:     /**
1:eac0369:      * @see org.apache.derby.vti.DeferModification#columnRequiresDefer
1:eac0369:      */
1:eac0369:     public boolean columnRequiresDefer( int statementType,
1:eac0369:                                         String columnName,
1:eac0369:                                         boolean inWhereClause)
1:eac0369:     {
1:eac0369:         switch( statementType)
1:eac0369:         {
1:eac0369:         case DeferModification.INSERT_STATEMENT:
1:eac0369:             return false;
1:eac0369: 
1:eac0369:         case DeferModification.UPDATE_STATEMENT:
1:eac0369:             return VTIResultSetIsSensitive && inWhereClause;
1:eac0369: 
1:eac0369:         case DeferModification.DELETE_STATEMENT:
1:eac0369:             return false;
1:eac0369:         }
1:eac0369:         return false; // Should not get here.
1:eac0369:     } // end of columnRequiresDefer
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * @see org.apache.derby.vti.DeferModification#subselectRequiresDefer(int,String,String)
1:eac0369:      */
1:eac0369:     public boolean subselectRequiresDefer( int statementType,
1:eac0369:                                            String schemaName,
1:eac0369:                                            String tableName)
1:eac0369:     {
1:eac0369:         return false;
1:eac0369:     } // end of subselectRequiresDefer( statementType, schemaName, tableName)
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * @see org.apache.derby.vti.DeferModification#subselectRequiresDefer(int, String)
1:eac0369:      */
1:eac0369:     public boolean subselectRequiresDefer( int statementType,
1:eac0369:                                            String VTIClassName)
1:eac0369:     {
1:eac0369:         return targetVTIClassName.equals( VTIClassName);
1:eac0369:     } // end of subselectRequiresDefer( statementType, VTIClassName)
1:eac0369: 
1:eac0369:     public void modificationNotify( int statementType,
1:eac0369:                                     boolean deferred)
1:eac0369:     {}
1:eac0369: }
============================================================================
author:David Van Couvering
-------------------------------------------------------------------------------
commit:2d37fd6
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.sql.compile.DefaultVTIModDeferPolicy
1: 
0:    Copyright 2003, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:61070a6
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.compile
0:    (C) Copyright IBM Corp. 2003, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package	org.apache.derby.impl.sql.compile;
1: 
1: import org.apache.derby.vti.DeferModification;
1: 
1: /**
1:  * This class implements the default policy for defering modifications to virtual
1:  * tables.
1:  */
1: class DefaultVTIModDeferPolicy implements DeferModification
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
1: 
0:     private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2003_2004;
1:     private final String targetVTIClassName;
1:     private final boolean VTIResultSetIsSensitive;
1: 
1:     DefaultVTIModDeferPolicy( String targetVTIClassName,
1:                               boolean VTIResultSetIsSensitive)
1:     {
1:         this.targetVTIClassName = targetVTIClassName;
1:         this.VTIResultSetIsSensitive = VTIResultSetIsSensitive;
1:     }
1: 
1:     /**
1:      * @see org.apache.derby.vti.DeferModification#alwaysDefer
1:      */
1:     public boolean alwaysDefer( int statementType)
1:     {
1:         return false;
1:     }
1:           
1:     /**
1:      * @see org.apache.derby.vti.DeferModification#columnRequiresDefer
1:      */
1:     public boolean columnRequiresDefer( int statementType,
1:                                         String columnName,
1:                                         boolean inWhereClause)
1:     {
1:         switch( statementType)
1:         {
1:         case DeferModification.INSERT_STATEMENT:
1:             return false;
1: 
1:         case DeferModification.UPDATE_STATEMENT:
1:             return VTIResultSetIsSensitive && inWhereClause;
1: 
1:         case DeferModification.DELETE_STATEMENT:
1:             return false;
1:         }
1:         return false; // Should not get here.
1:     } // end of columnRequiresDefer
1: 
1:     /**
1:      * @see org.apache.derby.vti.DeferModification#subselectRequiresDefer(int,String,String)
1:      */
1:     public boolean subselectRequiresDefer( int statementType,
1:                                            String schemaName,
1:                                            String tableName)
1:     {
1:         return false;
1:     } // end of subselectRequiresDefer( statementType, schemaName, tableName)
1: 
1:     /**
1:      * @see org.apache.derby.vti.DeferModification#subselectRequiresDefer(int, String)
1:      */
1:     public boolean subselectRequiresDefer( int statementType,
1:                                            String VTIClassName)
1:     {
1:         return targetVTIClassName.equals( VTIClassName);
1:     } // end of subselectRequiresDefer( statementType, VTIClassName)
1: 
1:     public void modificationNotify( int statementType,
1:                                     boolean deferred)
1:     {}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.compile
0:    (C) Copyright IBM Corp. 2003, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package	org.apache.derby.impl.sql.compile;
0: 
0: import org.apache.derby.vti.DeferModification;
0: 
0: /**
0:  * This class implements the default policy for defering modifications to virtual
0:  * tables.
0:  */
0: class DefaultVTIModDeferPolicy implements DeferModification
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 
0:     private static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_2003_2004;
0:     private final String targetVTIClassName;
0:     private final boolean VTIResultSetIsSensitive;
0: 
0:     DefaultVTIModDeferPolicy( String targetVTIClassName,
0:                               boolean VTIResultSetIsSensitive)
0:     {
0:         this.targetVTIClassName = targetVTIClassName;
0:         this.VTIResultSetIsSensitive = VTIResultSetIsSensitive;
0:     }
0: 
0:     /**
0:      * @see org.apache.derby.vti.DeferModification#alwaysDefer
0:      */
0:     public boolean alwaysDefer( int statementType)
0:     {
0:         return false;
0:     }
0:           
0:     /**
0:      * @see org.apache.derby.vti.DeferModification#columnRequiresDefer
0:      */
0:     public boolean columnRequiresDefer( int statementType,
0:                                         String columnName,
0:                                         boolean inWhereClause)
0:     {
0:         switch( statementType)
0:         {
0:         case DeferModification.INSERT_STATEMENT:
0:             return false;
0: 
0:         case DeferModification.UPDATE_STATEMENT:
0:             return VTIResultSetIsSensitive && inWhereClause;
0: 
0:         case DeferModification.DELETE_STATEMENT:
0:             return false;
0:         }
0:         return false; // Should not get here.
0:     } // end of columnRequiresDefer
0: 
0:     /**
0:      * @see org.apache.derby.vti.DeferModification#subselectRequiresDefer(int,String,String)
0:      */
0:     public boolean subselectRequiresDefer( int statementType,
0:                                            String schemaName,
0:                                            String tableName)
0:     {
0:         return false;
0:     } // end of subselectRequiresDefer( statementType, schemaName, tableName)
0: 
0:     /**
0:      * @see org.apache.derby.vti.DeferModification#subselectRequiresDefer(int, String)
0:      */
0:     public boolean subselectRequiresDefer( int statementType,
0:                                            String VTIClassName)
0:     {
0:         return targetVTIClassName.equals( VTIClassName);
0:     } // end of subselectRequiresDefer( statementType, VTIClassName)
0: 
0:     public void modificationNotify( int statementType,
0:                                     boolean deferred)
0:     {}
0: }
============================================================================