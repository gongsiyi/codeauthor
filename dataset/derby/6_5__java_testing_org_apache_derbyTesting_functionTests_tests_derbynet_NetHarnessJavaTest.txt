1:912793e: /*
3:912793e: 
1:912793e:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.NetworkClientHarnessJavaTest
1:912793e: 
1:912793e:    Licensed to the Apache Software Foundation (ASF) under one or more
1:912793e:    contributor license agreements.  See the NOTICE file distributed with
1:912793e:    this work for additional information regarding copyright ownership.
1:912793e:    The ASF licenses this file to You under the Apache License, Version 2.0
1:912793e:    (the "License"); you may not use this file except in compliance with
1:912793e:    the License.  You may obtain a copy of the License at
1:912793e: 
1:912793e:       http://www.apache.org/licenses/LICENSE-2.0
1:912793e: 
1:912793e:    Unless required by applicable law or agreed to in writing, software
1:912793e:    distributed under the License is distributed on an "AS IS" BASIS,
1:912793e:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:912793e:    See the License for the specific language governing permissions and
1:912793e:    limitations under the License.
1:912793e: 
1:912793e:  */
1:912793e: package org.apache.derbyTesting.functionTests.tests.derbynet;
1:912793e: 
1:912793e: import junit.framework.Test;
1:912793e: import org.apache.derbyTesting.functionTests.util.HarnessJavaTest;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:7f76a94: import org.apache.derbyTesting.junit.Derby;
1:912793e: import org.apache.derbyTesting.junit.SupportFilesSetup;
1:1ae02c9: import org.apache.derbyTesting.junit.TestConfiguration;
1:912793e: 
1:912793e: /**
1:912793e:  * NetHarnessJavaTest includes .java tests in the derbynet directory that
1:912793e:  * have not been converted to junit and do not have multiple masters.
1:912793e:  * 
1:912793e:  * The following tests could not be run this way, reasons for the
1:912793e:  * 
1:912793e:  * dblook_test_net - filters output
1:cd8191c:  * dblook_test_net_territory - filters output 
1:912793e:  * getCurrentProperties - ExceptionInInitializerError, needs investigation
1:912793e:  * maxthreads - forks VM
1:912793e:  * runtimeinfo" - filters output
1:912793e:  * sysinfo" - forks VM
1:912793e:  * sysinfo_withproperties" - forks VM
1:912793e:  * testij" - filters output
1:912793e:  * timeslice" - forks VM
1:912793e:  * DerbyNetAutoStart" - forks VM
1:912793e:  */
1:912793e: public class NetHarnessJavaTest extends HarnessJavaTest {
1:912793e:     
1:912793e:     /**
1:912793e:      * Only allow construction from our suite method.
1:912793e:      * 
1:912793e:      * @param name the name of the test to execute
1:912793e:      */
1:912793e:     private NetHarnessJavaTest(String name) {
1:912793e:         super(name);
1:912793e:      }
1:912793e: 
1:912793e:     /**
1:912793e:      * Run tests from the functionTests/tests/derbynet directory.
1:912793e:      */
1:912793e:     protected String getArea() {
1:912793e:         return "derbynet";
1:912793e:     }
1:912793e:     
1:912793e:     public static Test suite()
1:912793e:     {
1:1ae02c9:         BaseTestSuite suite =
1:1ae02c9:             new BaseTestSuite("derbynet: old harness java tests");
1:912793e:         
1:7f76a94:         if (!Derby.hasServer())
1:7f76a94:             return suite;
1:912793e: 
2:912793e:         suite.addTest(TestConfiguration.clientServerDecorator(
1:912793e:         		         decorate(new NetHarnessJavaTest("executeUpdate"))));
1:912793e: 
1:ea8eec0:         //DERBY-2348: SECMEC 9 is available on IBM 1.4.2 and 1.5 VMs, leading
1:ea8eec0:         //            to differences in output, disabling for now. While tests
1:ea8eec0:         //            for security mechanism exist in NSSecurityMechanismTest,
1:ea8eec0:         //            that test does not currently check the correct order of
1:ea8eec0:         //            responses of secmec and secchkcd for various error cases,
1:c3c7b7b:         //            which is tested in ProtocolTest.
1:912793e:         return new SupportFilesSetup(suite,
1:912793e:         	           new String[] {
1:912793e: 	                       "functionTests/tests/derbynet/excsat_accsecrd1.inc",
1:912793e: 	                       "functionTests/tests/derbynet/excsat_accsecrd2.inc",
1:912793e: 	                       "functionTests/tests/derbynet/excsat_secchk.inc",
1:912793e: 	                       "functionTests/tests/derbynet/connect.inc",
1:912793e: 	                       "functionTests/tests/derbynet/values1.inc",
1:912793e: 	                       "functionTests/tests/derbynet/values64kblksz.inc"
1:912793e: 	                   });
1:912793e:     }
1:912793e: 
1:912793e: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
1: import org.apache.derbyTesting.junit.TestConfiguration;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite =
1:             new BaseTestSuite("derbynet: old harness java tests");
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:c3c7b7b
/////////////////////////////////////////////////////////////////////////
1:         //            which is tested in ProtocolTest.
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:11f7f5c
/////////////////////////////////////////////////////////////////////////
commit:a065d09
/////////////////////////////////////////////////////////////////////////
author:Mamta Satoor
-------------------------------------------------------------------------------
commit:cd8191c
/////////////////////////////////////////////////////////////////////////
1:  * dblook_test_net_territory - filters output 
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:ea8eec0
/////////////////////////////////////////////////////////////////////////
1:         //DERBY-2348: SECMEC 9 is available on IBM 1.4.2 and 1.5 VMs, leading
1:         //            to differences in output, disabling for now. While tests
1:         //            for security mechanism exist in NSSecurityMechanismTest,
1:         //            that test does not currently check the correct order of
1:         //            responses of secmec and secchkcd for various error cases,
0:         //            which is tested in testProtocol.
0:         //            
0:         //suite.addTest(TestConfiguration.clientServerDecorator(
0:         //		         SecurityManagerSetup.noSecurityManager(
0:         //		             decorate(new NetHarnessJavaTest("testProtocol")))));
commit:912793e
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.NetworkClientHarnessJavaTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.functionTests.tests.derbynet;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.functionTests.util.HarnessJavaTest;
0: import org.apache.derbyTesting.junit.TestConfiguration;
0: import org.apache.derbyTesting.junit.SecurityManagerSetup;
1: import org.apache.derbyTesting.junit.SupportFilesSetup;
1: 
1: /**
1:  * NetHarnessJavaTest includes .java tests in the derbynet directory that
1:  * have not been converted to junit and do not have multiple masters.
1:  * 
1:  * The following tests could not be run this way, reasons for the
1:  * 
1:  * dblook_test_net - filters output
0:  * dataSourcePermissions_net - InvocationTargetException, needs investigation
1:  * getCurrentProperties - ExceptionInInitializerError, needs investigation
1:  * maxthreads - forks VM
1:  * runtimeinfo" - filters output
1:  * sysinfo" - forks VM
1:  * sysinfo_withproperties" - forks VM
0:  * testProperties" - filters output
0:  * testconnection" - forks VM
1:  * testij" - filters output
1:  * timeslice" - forks VM
0:  * NSinSameJVM" - filters output
1:  * DerbyNetAutoStart" - forks VM
1:  */
1: public class NetHarnessJavaTest extends HarnessJavaTest {
1:     
1:     /**
1:      * Only allow construction from our suite method.
1:      * 
1:      * @param name the name of the test to execute
1:      */
1:     private NetHarnessJavaTest(String name) {
1:         super(name);
1:      }
1: 
1:     /**
1:      * Run tests from the functionTests/tests/derbynet directory.
1:      */
1:     protected String getArea() {
1:         return "derbynet";
1:     }
1:     
1:     public static Test suite()
1:     {
0:         TestSuite suite = new TestSuite("jdbcapi: old harness java tests");
1: 
1:         suite.addTest(TestConfiguration.clientServerDecorator(
1:         		         decorate(new NetHarnessJavaTest("executeUpdate"))));
1: 
1:         suite.addTest(TestConfiguration.clientServerDecorator(
0:         		         SecurityManagerSetup.noSecurityManager(
0:         		             decorate(new NetHarnessJavaTest("testProtocol")))));
1: 
0:         suite.addTest(SecurityManagerSetup.noSecurityManager(
0:         		         decorate(new NetHarnessJavaTest("DerbyNetNewServer"))));
1:         
1:         return new SupportFilesSetup(suite,
1:         	           new String[] {
0: 	                       "functionTests/tests/derbynet/protocol.tests",
1: 	                       "functionTests/tests/derbynet/excsat_accsecrd1.inc",
1: 	                       "functionTests/tests/derbynet/excsat_accsecrd2.inc",
1: 	                       "functionTests/tests/derbynet/excsat_secchk.inc",
1: 	                       "functionTests/tests/derbynet/connect.inc",
1: 	                       "functionTests/tests/derbynet/values1.inc",
1: 	                       "functionTests/tests/derbynet/values64kblksz.inc"
1: 	                   });
1:     }
1: 
1: }
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:1c44e73
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derbyTesting.junit.JDBC;
/////////////////////////////////////////////////////////////////////////
0:         // Server does not run on J2ME
0:         if (JDBC.vmSupportsJDBC3()) {
0:             suite.addTest(SecurityManagerSetup.noSecurityManager(
0:         }
commit:7f76a94
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.Derby;
/////////////////////////////////////////////////////////////////////////
0:         TestSuite suite = new TestSuite("derbynet: old harness java tests");
0:         
1:         if (!Derby.hasServer())
1:             return suite;
============================================================================