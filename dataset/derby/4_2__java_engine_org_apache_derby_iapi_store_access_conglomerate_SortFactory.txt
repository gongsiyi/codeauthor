1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.store.access.conglomerate.SortFactory
1:7ecc1f2: 
1:75c7276:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75c7276:    contributor license agreements.  See the NOTICE file distributed with
1:75c7276:    this work for additional information regarding copyright ownership.
1:75c7276:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75c7276:    (the "License"); you may not use this file except in compliance with
1:75c7276:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.store.access.conglomerate;
1:eac0369: 
1:eac0369: import java.util.Properties;
1:eac0369: import org.apache.derby.catalog.UUID;
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import org.apache.derby.iapi.store.access.SortObserver;
1:eac0369: import org.apache.derby.iapi.store.access.SortCostController;
1:eac0369: import org.apache.derby.iapi.store.access.ColumnOrdering;
1:eac0369: import org.apache.derby.iapi.store.access.TransactionController;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.types.DataValueDescriptor;
1:eac0369: 
2:eac0369: /**
1:eac0369: 
1:eac0369:   The factory interface for all sort access methods.
1:eac0369: 
1:eac0369: **/
1:eac0369: 
1:eac0369: public interface SortFactory extends MethodFactory
1:eac0369: {
1:eac0369: 	/**
1:eac0369: 	Used to identify this interface when finding it with the Monitor.
1:eac0369: 	**/
1:eac0369: 	public static final String MODULE = 
1:eac0369: 	  "org.apache.derby.iapi.store.access.conglomerate.SortFactory";
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	Create the sort and return a sort object for it.
1:eac0369: 
1:eac0369:  	@exception StandardException if the sort could not be
1:eac0369: 	opened for some reason, or if an error occurred in one of
1:eac0369: 	the lower level modules.
1:eac0369: 
1:eac0369: 	**/
1:eac0369: 	Sort createSort(
1:eac0369:     TransactionController   tran,
1:eac0369:     int                     segment,
1:eac0369:     Properties              implParameters,
1:eac0369:     DataValueDescriptor[]   template,
1:eac0369:     ColumnOrdering          columnOrdering[],
1:eac0369:     SortObserver          	sortObserver,
1:eac0369:     boolean                 alreadyInOrder,
1:eac0369:     long                    estimatedRows,
1:eac0369:     int                     estimatedRowSize)
1:eac0369:         throws StandardException;
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * Return an open SortCostController.
1:eac0369:      * <p>
1:eac0369:      * Return an open SortCostController which can be used to ask about 
1:eac0369:      * the estimated costs of SortController() operations.
1:eac0369:      * <p>
1:eac0369:      *
1:eac0369: 	 * @return The open StoreCostController.
1:eac0369:      *
1:eac0369: 	 * @exception  StandardException  Standard exception policy.
1:eac0369:      *
1:eac0369:      * @see  org.apache.derby.iapi.store.access.StoreCostController
1:eac0369:      **/
1:eac0369:     SortCostController openSortCostController()
1:eac0369: 		throws StandardException;
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:75c7276
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.store.access.conglomerate.SortFactory
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access.conglomerate
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.store.access.conglomerate;
1: 
1: import java.util.Properties;
1: import org.apache.derby.catalog.UUID;
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.store.access.SortObserver;
1: import org.apache.derby.iapi.store.access.SortCostController;
1: import org.apache.derby.iapi.store.access.ColumnOrdering;
1: import org.apache.derby.iapi.store.access.TransactionController;
1: 
1: import org.apache.derby.iapi.types.DataValueDescriptor;
1: 
1: /**
1: 
1:   The factory interface for all sort access methods.
1: 
1: **/
1: 
1: public interface SortFactory extends MethodFactory
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	/**
1: 	Used to identify this interface when finding it with the Monitor.
1: 	**/
1: 	public static final String MODULE = 
1: 	  "org.apache.derby.iapi.store.access.conglomerate.SortFactory";
1: 
1: 	/**
1: 	Create the sort and return a sort object for it.
1: 
1:  	@exception StandardException if the sort could not be
1: 	opened for some reason, or if an error occurred in one of
1: 	the lower level modules.
1: 
1: 	**/
1: 	Sort createSort(
1:     TransactionController   tran,
1:     int                     segment,
1:     Properties              implParameters,
1:     DataValueDescriptor[]   template,
1:     ColumnOrdering          columnOrdering[],
1:     SortObserver          	sortObserver,
1:     boolean                 alreadyInOrder,
1:     long                    estimatedRows,
1:     int                     estimatedRowSize)
1:         throws StandardException;
1: 
1:     /**
1:      * Return an open SortCostController.
1:      * <p>
1:      * Return an open SortCostController which can be used to ask about 
1:      * the estimated costs of SortController() operations.
1:      * <p>
1:      *
1: 	 * @return The open StoreCostController.
1:      *
1: 	 * @exception  StandardException  Standard exception policy.
1:      *
1:      * @see  org.apache.derby.iapi.store.access.StoreCostController
1:      **/
1:     SortCostController openSortCostController()
1: 		throws StandardException;
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.access.conglomerate
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.store.access.conglomerate;
0: 
0: import java.util.Properties;
0: import org.apache.derby.catalog.UUID;
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.store.access.SortObserver;
0: import org.apache.derby.iapi.store.access.SortCostController;
0: import org.apache.derby.iapi.store.access.ColumnOrdering;
0: import org.apache.derby.iapi.store.access.TransactionController;
0: 
0: import org.apache.derby.iapi.types.DataValueDescriptor;
0: 
0: /**
0: 
0:   The factory interface for all sort access methods.
0: 
0: **/
0: 
0: public interface SortFactory extends MethodFactory
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	/**
0: 	Used to identify this interface when finding it with the Monitor.
0: 	**/
0: 	public static final String MODULE = 
0: 	  "org.apache.derby.iapi.store.access.conglomerate.SortFactory";
0: 
0: 	/**
0: 	Create the sort and return a sort object for it.
0: 
0:  	@exception StandardException if the sort could not be
0: 	opened for some reason, or if an error occurred in one of
0: 	the lower level modules.
0: 
0: 	**/
0: 	Sort createSort(
0:     TransactionController   tran,
0:     int                     segment,
0:     Properties              implParameters,
0:     DataValueDescriptor[]   template,
0:     ColumnOrdering          columnOrdering[],
0:     SortObserver          	sortObserver,
0:     boolean                 alreadyInOrder,
0:     long                    estimatedRows,
0:     int                     estimatedRowSize)
0:         throws StandardException;
0: 
0:     /**
0:      * Return an open SortCostController.
0:      * <p>
0:      * Return an open SortCostController which can be used to ask about 
0:      * the estimated costs of SortController() operations.
0:      * <p>
0:      *
0: 	 * @return The open StoreCostController.
0:      *
0: 	 * @exception  StandardException  Standard exception policy.
0:      *
0:      * @see  org.apache.derby.iapi.store.access.StoreCostController
0:      **/
0:     SortCostController openSortCostController()
0: 		throws StandardException;
0: }
============================================================================