1:eac0369: /*
2:eac0369: 
1:345de35:    Derby - Class org.apache.derby.impl.store.access.PC_XenaVersion
1:345de35: 
1:270a34d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:270a34d:    contributor license agreements.  See the NOTICE file distributed with
1:270a34d:    this work for additional information regarding copyright ownership.
1:270a34d:    The ASF licenses this file to you under the Apache License, Version 2.0
1:270a34d:    (the "License"); you may not use this file except in compliance with
1:270a34d:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
1:345de35: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.store.access;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.reference.SQLState;
1:eac0369: import org.apache.derby.iapi.services.io.StoredFormatIds;
1:eac0369: import org.apache.derby.iapi.services.io.Formatable;
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
1:eac0369: import org.apache.derby.iapi.store.access.TransactionController;
1:fa09146: 
1:eac0369: import java.io.IOException;
1:eac0369: import java.io.ObjectInput;
1:eac0369: import java.io.ObjectOutput;
1:eac0369: import java.util.Properties;
1:eac0369: 
1:eac0369: public class PC_XenaVersion implements Formatable
1:eac0369: {
1:eac0369: 	private static final int XENA_MAJOR_VERSION = 1;
1:eac0369: 	private static final int XENA_MINOR_VERSION_0 = 0;
1:eac0369: 
1:eac0369: 	//
1:eac0369: 	//Persistent state. The default value defined here is 
1:eac0369: 	//over-ridden by readExternal when reading serialized
1:eac0369: 	//versions.
1:eac0369: 	private int minorVersion = XENA_MINOR_VERSION_0;
1:eac0369: 	
1:eac0369: 
1:eac0369: 	private boolean isUpgradeNeeded(PC_XenaVersion fromVersion)
1:eac0369: 	{
1:eac0369: 		return
1:eac0369: 			fromVersion == null ||
1:eac0369: 			getMajorVersionNumber() != fromVersion.getMajorVersionNumber();
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public void upgradeIfNeeded(TransactionController tc,
1:eac0369: 								PropertyConglomerate pc,
1:eac0369: 								Properties serviceProperties)
1:eac0369: 		 throws StandardException
1:eac0369: 	{
1:eac0369: 		PC_XenaVersion dbVersion =
1:eac0369: 			(PC_XenaVersion)pc.getProperty(tc,DataDictionary.PROPERTY_CONGLOMERATE_VERSION);
1:eac0369: 		if (isUpgradeNeeded(dbVersion))
1:eac0369: 		{
1:eac0369: 			throw StandardException.newException(SQLState.UPGRADE_UNSUPPORTED, dbVersion, this);
1:eac0369: 		}
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public int getMajorVersionNumber() {return XENA_MAJOR_VERSION;}
1:eac0369: 	public int getMinorVersionNumber() {return minorVersion;}
1:eac0369: 	
1:eac0369: 	public void writeExternal(ObjectOutput out) throws IOException
1:eac0369: 	{
1:eac0369: 		out.writeInt(getMajorVersionNumber());
1:eac0369: 		out.writeInt(getMinorVersionNumber());
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public void readExternal(ObjectInput in) throws IOException
1:eac0369: 	{
1:eac0369: 		int majorVersion = in.readInt();
1:eac0369: 		minorVersion = in.readInt();
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public int getTypeFormatId() {return StoredFormatIds.PC_XENA_VERSION_ID;}
1:eac0369: 
1:eac0369: 	public String toString() {return getMajorVersionNumber()+"."+getMinorVersionNumber();}
1:eac0369: }
============================================================================
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:fa09146
/////////////////////////////////////////////////////////////////////////
1: 
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:270a34d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.store.access.PC_XenaVersion
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:1f9b9c4
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.store.access
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.store.access;
1: 
1: import org.apache.derby.iapi.reference.SQLState;
0: import org.apache.derby.iapi.reference.Property;
0: import org.apache.derby.iapi.reference.ClassName;
0: import org.apache.derby.iapi.services.io.FormatIdUtil;
1: import org.apache.derby.iapi.services.io.StoredFormatIds;
1: import org.apache.derby.iapi.services.io.Formatable;
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
1: import org.apache.derby.iapi.store.access.TransactionController;
0: import org.apache.derby.iapi.services.property.PropertyUtil;
0: import org.apache.derby.catalog.UUID;
1: import java.io.IOException;
1: import java.io.ObjectInput;
1: import java.io.ObjectOutput;
0: import java.io.StreamCorruptedException;
0: import java.util.Enumeration;
1: import java.util.Properties;
1: 
1: public class PC_XenaVersion implements Formatable
1: {
0: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 	private static final int XENA_MAJOR_VERSION = 1;
1: 	private static final int XENA_MINOR_VERSION_0 = 0;
1: 
1: 	//
1: 	//Persistent state. The default value defined here is 
1: 	//over-ridden by readExternal when reading serialized
1: 	//versions.
1: 	private int minorVersion = XENA_MINOR_VERSION_0;
1: 	
1: 
1: 	private boolean isUpgradeNeeded(PC_XenaVersion fromVersion)
1: 	{
1: 		return
1: 			fromVersion == null ||
1: 			getMajorVersionNumber() != fromVersion.getMajorVersionNumber();
1: 	}
1: 
1: 	public void upgradeIfNeeded(TransactionController tc,
1: 								PropertyConglomerate pc,
1: 								Properties serviceProperties)
1: 		 throws StandardException
1: 	{
1: 		PC_XenaVersion dbVersion =
1: 			(PC_XenaVersion)pc.getProperty(tc,DataDictionary.PROPERTY_CONGLOMERATE_VERSION);
1: 		if (isUpgradeNeeded(dbVersion))
1: 		{
1: 			throw StandardException.newException(SQLState.UPGRADE_UNSUPPORTED, dbVersion, this);
1: 		}
1: 	}
1: 
1: 	public int getMajorVersionNumber() {return XENA_MAJOR_VERSION;}
1: 	public int getMinorVersionNumber() {return minorVersion;}
1: 	
1: 	public void writeExternal(ObjectOutput out) throws IOException
1: 	{
1: 		out.writeInt(getMajorVersionNumber());
1: 		out.writeInt(getMinorVersionNumber());
1: 	}
1: 
1: 	public void readExternal(ObjectInput in) throws IOException
1: 	{
1: 		int majorVersion = in.readInt();
1: 		minorVersion = in.readInt();
1: 	}
1: 
1: 	public int getTypeFormatId() {return StoredFormatIds.PC_XENA_VERSION_ID;}
1: 
1: 	public String toString() {return getMajorVersionNumber()+"."+getMinorVersionNumber();}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.store.access
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.store.access;
0: 
0: import org.apache.derby.iapi.reference.SQLState;
0: import org.apache.derby.iapi.reference.Property;
0: import org.apache.derby.iapi.reference.ClassName;
0: import org.apache.derby.iapi.services.io.FormatIdUtil;
0: import org.apache.derby.iapi.services.io.StoredFormatIds;
0: import org.apache.derby.iapi.services.io.Formatable;
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.sql.dictionary.DataDictionary;
0: import org.apache.derby.iapi.store.access.TransactionController;
0: import org.apache.derby.iapi.services.property.PropertyUtil;
0: import org.apache.derby.catalog.UUID;
0: import java.io.IOException;
0: import java.io.ObjectInput;
0: import java.io.ObjectOutput;
0: import java.io.StreamCorruptedException;
0: import java.util.Enumeration;
0: import java.util.Properties;
0: 
0: public class PC_XenaVersion implements Formatable
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 	private static final int XENA_MAJOR_VERSION = 1;
0: 	private static final int XENA_MINOR_VERSION_0 = 0;
0: 
0: 	//
0: 	//Persistent state. The default value defined here is 
0: 	//over-ridden by readExternal when reading serialized
0: 	//versions.
0: 	private int minorVersion = XENA_MINOR_VERSION_0;
0: 	
0: 
0: 	private boolean isUpgradeNeeded(PC_XenaVersion fromVersion)
0: 	{
0: 		return
0: 			fromVersion == null ||
0: 			getMajorVersionNumber() != fromVersion.getMajorVersionNumber();
0: 	}
0: 
0: 	public void upgradeIfNeeded(TransactionController tc,
0: 								PropertyConglomerate pc,
0: 								Properties serviceProperties)
0: 		 throws StandardException
0: 	{
0: 		PC_XenaVersion dbVersion =
0: 			(PC_XenaVersion)pc.getProperty(tc,DataDictionary.PROPERTY_CONGLOMERATE_VERSION);
0: 		if (isUpgradeNeeded(dbVersion))
0: 		{
0: 			throw StandardException.newException(SQLState.UPGRADE_UNSUPPORTED, dbVersion, this);
0: 		}
0: 	}
0: 
0: 	public int getMajorVersionNumber() {return XENA_MAJOR_VERSION;}
0: 	public int getMinorVersionNumber() {return minorVersion;}
0: 	
0: 	public void writeExternal(ObjectOutput out) throws IOException
0: 	{
0: 		out.writeInt(getMajorVersionNumber());
0: 		out.writeInt(getMinorVersionNumber());
0: 	}
0: 
0: 	public void readExternal(ObjectInput in) throws IOException
0: 	{
0: 		int majorVersion = in.readInt();
0: 		minorVersion = in.readInt();
0: 	}
0: 
0: 	public int getTypeFormatId() {return StoredFormatIds.PC_XENA_VERSION_ID;}
0: 
0: 	public String toString() {return getMajorVersionNumber()+"."+getMinorVersionNumber();}
0: }
============================================================================