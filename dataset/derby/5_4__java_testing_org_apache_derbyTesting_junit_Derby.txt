1:21a3353: /*
1:21a3353:  *
1:21a3353:  * Derby - Class org.apache.derbyTesting.functionTests.util.Derby
1:21a3353:  *
1:21a3353:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:21a3353:  * contributor license agreements.  See the NOTICE file distributed with
1:21a3353:  * this work for additional information regarding copyright ownership.
1:21a3353:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:21a3353:  * (the "License"); you may not use this file except in compliance with
1:21a3353:  * the License.  You may obtain a copy of the License at
1:21a3353:  *
1:21a3353:  *    http://www.apache.org/licenses/LICENSE-2.0
1:21a3353:  *
1:21a3353:  * Unless required by applicable law or agreed to in writing, 
1:21a3353:  * software distributed under the License is distributed on an 
1:21a3353:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:21a3353:  * either express or implied. See the License for the specific 
1:21a3353:  * language governing permissions and limitations under the License.
1:21a3353:  */
1:21a3353: package org.apache.derbyTesting.junit;
4:21a3353: 
1:21a3353: import java.net.URL;
1:21a3353: 
1:21a3353: /**
1:21a3353:  * Derby related utility methods for the JUnit tests.
1:21a3353:  * The class assumes the tests are either being run
1:21a3353:  * from the build classes folder or from the standard
1:21a3353:  * jar files (or a subset of the standard jars).
1:21a3353:  * <BR>
1:21a3353:  * If the tests are being run from the classes then
1:21a3353:  * it is assumed all the functionality is available,
1:21a3353:  * otherwise the functionality will be driven from which
1:21a3353:  * jar files are on the classpath. E.g. if only
1:21a3353:  * derby.jar is on the classpath then the hasXXX() methods
1:21a3353:  * will return false except hasEmbedded().
1:21a3353:  */
1:21a3353: public class Derby {
1:21a3353:     
1:21a3353:     /**
1:21a3353:      * Returns true if the embedded engine is available to the tests.
1:21a3353:      */
1:21a3353:     public static boolean hasEmbedded()
1:21a3353:     {
2:21a3353:         // classes folder - assume all is available.
2:21a3353:         if (!SecurityManagerSetup.isJars)
2:21a3353:             return true;
1:1a1fb6a: 
1:21a3353:         return hasCorrectJar("/derby.jar",
1:21a3353:                "org.apache.derby.authentication.UserAuthenticator");
2:21a3353:     }
1:21a3353:     /**
1:21a3353:      * Returns true if the network server is available to the tests.
1:21a3353:      */
1:21a3353:     public static boolean hasServer()
1:21a3353:     {
1:8c854a9:         // DERBY-5864: The network server is not supported on J2ME.
1:8c854a9:         if (JDBC.vmSupportsJSR169()) {
1:8c854a9:             return false;
1:8c854a9:         }
1:8c854a9: 
1:21a3353:         // classes folder - assume all is available.
1:21a3353:         if (!SecurityManagerSetup.isJars)
1:21a3353:             return true;
1:21a3353:         
1:21a3353:         return hasCorrectJar("/derbynet.jar",
1:21a3353:                              "org.apache.derby.drda.NetworkServerControl");
1:21a3353:     }
1:21a3353:     /**
1:21a3353:      * Returns true if the tools are available to the tests.
1:21a3353:      */
1:21a3353:     public static boolean hasTools()
1:21a3353:     {
1:21a3353:         // classes folder - assume all is available.
1:21a3353:         if (!SecurityManagerSetup.isJars)
1:21a3353:             return true;
1:21a3353:             
1:21a3353:         return hasCorrectJar("/derbytools.jar",
1:21a3353:                 "org.apache.derby.tools.ij");
1:21a3353:     }
1:21a3353:     /**
1:21a3353:      * Returns true if the derby client is available to the tests.
1:21a3353:      */
1:21a3353:     public static boolean hasClient()
1:21a3353:     {
1:1a1fb6a:         // if we attempt to check on availability of the ClientDataSource with 
1:1a1fb6a:         // JSR169, attempts will be made to load classes not supported in
1:1a1fb6a:         // that environment, such as javax.naming.Referenceable. See DERBY-2269.
1:8c854a9:         if (JDBC.vmSupportsJSR169()) {
1:1a1fb6a:             return false;
1:8c854a9:         }
1:8c854a9: 
1:8c854a9:         // classes folder - assume all is available.
1:8c854a9:         if (!SecurityManagerSetup.isJars) {
1:8c854a9:             return true;
1:8c854a9:         }
1:8c854a9: 
1:8c854a9:         return hasCorrectJar("/derbyclient.jar",
1:c35e4f0:                 JDBC.vmSupportsJNDI() ?
1:c35e4f0:                 "org.apache.derby.jdbc.ClientDataSource" :
1:38667d9:                 "org.apache.derby.jdbc.BasicClientDataSource40");
1:1a1fb6a:     }
1:21a3353:     
1:21a3353:     private static boolean hasCorrectJar(String jarName, String className)
1:21a3353:     {
1:21a3353:         URL url = SecurityManagerSetup.getURL(className);
1:21a3353:         if (url == null)
1:21a3353:             return false;
1:21a3353:         
1:21a3353:         return url.toExternalForm().endsWith(jarName);
1:21a3353:     }
1:21a3353: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:38667d9
/////////////////////////////////////////////////////////////////////////
1:                 "org.apache.derby.jdbc.BasicClientDataSource40");
commit:c35e4f0
/////////////////////////////////////////////////////////////////////////
1:                 JDBC.vmSupportsJNDI() ?
1:                 "org.apache.derby.jdbc.ClientDataSource" :
0:                 "org.apache.derby.jdbc.NonJNDIClientDataSource40");
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:8c854a9
/////////////////////////////////////////////////////////////////////////
1:         // DERBY-5864: The network server is not supported on J2ME.
1:         if (JDBC.vmSupportsJSR169()) {
1:             return false;
1:         }
1: 
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJSR169()) {
1:         }
1: 
1:         // classes folder - assume all is available.
1:         if (!SecurityManagerSetup.isJars) {
1:             return true;
1:         }
1: 
1:         return hasCorrectJar("/derbyclient.jar",
0:                 "org.apache.derby.jdbc.ClientDataSource");
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:9c86d82
/////////////////////////////////////////////////////////////////////////
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:1a1fb6a
/////////////////////////////////////////////////////////////////////////
1: 
1:         // if we attempt to check on availability of the ClientDataSource with 
1:         // JSR169, attempts will be made to load classes not supported in
1:         // that environment, such as javax.naming.Referenceable. See DERBY-2269.
0:         if (!JDBC.vmSupportsJSR169()) {
0:             return hasCorrectJar("/derbyclient.jar",
1:         }
0:         else
1:             return false;
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:21a3353
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Derby - Class org.apache.derbyTesting.functionTests.util.Derby
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, 
1:  * software distributed under the License is distributed on an 
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:  * either express or implied. See the License for the specific 
1:  * language governing permissions and limitations under the License.
1:  */
1: package org.apache.derbyTesting.junit;
1: 
1: import java.net.URL;
0: import java.sql.*;
0: import java.util.ArrayList;
0: import java.util.Arrays;
0: import java.util.Iterator;
0: import java.util.List;
0: import java.util.ListIterator;
1: 
0: import junit.framework.Assert;
1: 
1: /**
1:  * Derby related utility methods for the JUnit tests.
1:  * The class assumes the tests are either being run
1:  * from the build classes folder or from the standard
1:  * jar files (or a subset of the standard jars).
1:  * <BR>
1:  * If the tests are being run from the classes then
1:  * it is assumed all the functionality is available,
1:  * otherwise the functionality will be driven from which
1:  * jar files are on the classpath. E.g. if only
1:  * derby.jar is on the classpath then the hasXXX() methods
1:  * will return false except hasEmbedded().
1:  */
1: public class Derby {
1:     
1:     /**
1:      * Returns true if the embedded engine is available to the tests.
1:      */
1:     public static boolean hasEmbedded()
1:     {
1:         // classes folder - assume all is available.
1:         if (!SecurityManagerSetup.isJars)
1:             return true;
1: 
1:         return hasCorrectJar("/derby.jar",
1:                "org.apache.derby.authentication.UserAuthenticator");
1:     }
1:     /**
1:      * Returns true if the network server is available to the tests.
1:      */
1:     public static boolean hasServer()
1:     {
1:         // classes folder - assume all is available.
1:         if (!SecurityManagerSetup.isJars)
1:             return true;
1:         
1:         return hasCorrectJar("/derbynet.jar",
1:                              "org.apache.derby.drda.NetworkServerControl");
1:     }
1:     /**
1:      * Returns true if the tools are available to the tests.
1:      */
1:     public static boolean hasTools()
1:     {
1:         // classes folder - assume all is available.
1:         if (!SecurityManagerSetup.isJars)
1:             return true;
1:             
1:         return hasCorrectJar("/derbytools.jar",
1:                 "org.apache.derby.tools.ij");
1:     }
1:     /**
1:      * Returns true if the derby client is available to the tests.
1:      */
1:     public static boolean hasClient()
1:     {
1:         // classes folder - assume all is available.
1:         if (!SecurityManagerSetup.isJars)
1:             return true;
1:         
0:         return hasCorrectJar("/derbyclient.jar",
0:                 "org.apache.derby.jdbc.ClientDataSource");
1:     }
1:     
1:     private static boolean hasCorrectJar(String jarName, String className)
1:     {
1:         URL url = SecurityManagerSetup.getURL(className);
1:         if (url == null)
1:             return false;
1:         
1:         return url.toExternalForm().endsWith(jarName);
1:     }
1: }
============================================================================