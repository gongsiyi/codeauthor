1:aaea357: /*
2:aaea357: 
1:aaea357: 	Derby - Class org.apache.derby.ui.popup.actions.RemoveDerbyNature
1:aaea357: 	
1:23683f1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1:23683f1: 	contributor license agreements.  See the NOTICE file distributed with
1:23683f1: 	this work for additional information regarding copyright ownership.
1:23683f1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1:23683f1: 	(the "License"); you may not use this file except in compliance with
1:23683f1: 	the License.  You may obtain a copy of the License at
1:aaea357: 	
1:aaea357: 	   http://www.apache.org/licenses/LICENSE-2.0
1:aaea357: 	
1:aaea357: 	Unless required by applicable law or agreed to in writing, software
1:aaea357: 	distributed under the License is distributed on an "AS IS" BASIS,
1:aaea357: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:aaea357: 	See the License for the specific language governing permissions and
1:aaea357: 	limitations under the License.
1:aaea357: 
1:aaea357: */
1:aaea357: package org.apache.derby.ui.popup.actions;
1:aaea357: 
1:aaea357: import java.util.ArrayList;
1:6c24865: import java.util.List;
1:aaea357: 
1:aaea357: import org.apache.derby.ui.common.CommonNames;
1:aaea357: import org.apache.derby.ui.common.Messages;
1:6c24865: import org.apache.derby.ui.container.DerbyClasspathContainer;
1:aaea357: import org.apache.derby.ui.util.DerbyServerUtils;
1:aaea357: import org.apache.derby.ui.util.Logger;
1:aaea357: import org.apache.derby.ui.util.SelectionUtil;
1:aaea357: import org.eclipse.core.resources.IProject;
1:aaea357: import org.eclipse.core.resources.IProjectDescription;
1:aaea357: import org.eclipse.core.resources.IResource;
1:aaea357: import org.eclipse.core.runtime.IStatus;
1:aaea357: import org.eclipse.jdt.core.IClasspathEntry;
1:aaea357: import org.eclipse.jdt.core.IJavaProject;
1:aaea357: import org.eclipse.jdt.core.JavaCore;
1:aaea357: import org.eclipse.jface.action.IAction;
1:aaea357: import org.eclipse.jface.dialogs.MessageDialog;
1:aaea357: import org.eclipse.jface.viewers.ISelection;
1:aaea357: import org.eclipse.jface.window.ApplicationWindow;
1:aaea357: import org.eclipse.swt.widgets.Shell;
1:aaea357: import org.eclipse.ui.IObjectActionDelegate;
1:aaea357: import org.eclipse.ui.IWorkbenchPart;
1:aaea357: import org.eclipse.ui.IWorkbenchWindow;
1:aaea357: import org.eclipse.ui.PlatformUI;
1:aaea357: 
1:aaea357: public class RemoveDerbyNature implements IObjectActionDelegate {
1:aaea357: 
1:aaea357: 	private IJavaProject currentJavaProject;
1:aaea357: 	private IProject currentProject;
1:aaea357: 	/* (non-Javadoc)
1:aaea357: 	 * @see org.eclipse.ui.IObjectActionDelegate#setActivePart(org.eclipse.jface.action.IAction, org.eclipse.ui.IWorkbenchPart)
1:aaea357: 	 */
1:aaea357: 	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
1:aaea357: 		}
1:aaea357: 
1:aaea357: 
1:aaea357: 	private static String[] removeDerbyNature(String [] natures){
1:aaea357: 		ArrayList arrL=new ArrayList();
1:aaea357: 		
1:aaea357: 		for (int i=0;i<natures.length;i++){
1:aaea357: 			if(!(natures[i].equalsIgnoreCase(CommonNames.DERBY_NATURE))){
1:aaea357: 				arrL.add(natures[i]);
1:aaea357: 			}
1:aaea357: 		}
1:aaea357: 		String [] newNatures= new String [arrL.size()];
1:aaea357: 		for(int i=0;i<arrL.size();i++){
1:aaea357: 			newNatures[i]=(String)arrL.get(i);
1:aaea357: 		}
1:aaea357: 		return newNatures;
1:aaea357: 	}
1:aaea357: 	/* (non-Javadoc)
1:aaea357: 	 * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
1:aaea357: 	 */	
1:aaea357: 	public void run(IAction action) {
1:aaea357: 		IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
1:aaea357: 		try {
1:aaea357: 			((ApplicationWindow)window).setStatus(Messages.REMOVING_NATURE);
1:aaea357: 			
1:aaea357: 			if(currentJavaProject==null){
1:aaea357: 				currentJavaProject=JavaCore.create(currentProject);
1:aaea357: 			}
1:aaea357: 			//Shutdown server if running for the current project
1:aaea357: 			if(DerbyServerUtils.getDefault().getRunning(currentJavaProject.getProject())){
1:aaea357: 				DerbyServerUtils.getDefault().stopDerbyServer(currentJavaProject.getProject());
1:aaea357: 			}
1:aaea357: 			IClasspathEntry[] rawClasspath = currentJavaProject.getRawClasspath();
1:6c24865: 			
1:6c24865: 			List<IClasspathEntry> newEntries = new ArrayList<IClasspathEntry>();
1:6c24865: 			for(IClasspathEntry e: rawClasspath) {
1:6c24865: 				if(e.getEntryKind()!=IClasspathEntry.CPE_CONTAINER) {
1:6c24865: 					newEntries.add(e);
1:6c24865: 				} else if(!e.getPath().equals(DerbyClasspathContainer.CONTAINER_ID)) {
1:6c24865: 					newEntries.add(e);
1:6c24865: 				}
1:6c24865: 			}
1:6c24865: 			
1:6c24865: 			IClasspathEntry[] newEntriesArray = new IClasspathEntry[newEntries.size()];
1:6c24865: 			newEntriesArray = (IClasspathEntry[])newEntries.toArray(newEntriesArray);			
1:6c24865: 			currentJavaProject.setRawClasspath(newEntriesArray, null);
1:aaea357: 			
1:aaea357: 			IProjectDescription description = currentJavaProject.getProject().getDescription();
1:aaea357: 			String[] natures = description.getNatureIds();
1:aaea357: 
1:aaea357: 			description.setNatureIds(removeDerbyNature(natures));
1:aaea357: 			currentJavaProject.getProject().setDescription(description, null);
1:aaea357: 			// refresh project so user sees changes
1:aaea357: 			currentJavaProject.getProject().refreshLocal(IResource.DEPTH_INFINITE, null);
1:aaea357: 			((ApplicationWindow)window).setStatus(Messages.DERBY_NATURE_REMOVED);
1:aaea357: 		}catch (Exception e) {
1:aaea357: 			Logger.log(Messages.ERROR_REMOVING_NATURE+" '"+currentJavaProject.getProject().getName()+"': "+e,IStatus.ERROR);
1:aaea357: 
1:aaea357: 			Shell shell = new Shell();
1:aaea357: 			MessageDialog.openInformation(
1:aaea357: 				shell,
1:aaea357: 				CommonNames.PLUGIN_NAME,
1:aaea357: 				Messages.ERROR_REMOVING_NATURE+":\n" +
1:aaea357: 				 SelectionUtil.getStatusMessages(e));
1:aaea357: 		}
1:aaea357: 
1:aaea357: 	}
1:aaea357: 
1:aaea357: 	/* (non-Javadoc)
1:aaea357: 	 * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
1:aaea357: 	 */
1:aaea357: 	public void selectionChanged(IAction action, ISelection selection) {
1:aaea357: 		currentJavaProject = SelectionUtil.findSelectedJavaProject(selection);
1:aaea357: 		if(currentJavaProject==null){
1:aaea357: 			currentProject=org.apache.derby.ui.util.SelectionUtil.findSelectedProject(selection);
1:aaea357: 		}
1:aaea357: 	}
1:aaea357: 
1:aaea357: }
============================================================================
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:6c24865
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1: import org.apache.derby.ui.container.DerbyClasspathContainer;
/////////////////////////////////////////////////////////////////////////
1: 			
1: 			List<IClasspathEntry> newEntries = new ArrayList<IClasspathEntry>();
1: 			for(IClasspathEntry e: rawClasspath) {
1: 				if(e.getEntryKind()!=IClasspathEntry.CPE_CONTAINER) {
1: 					newEntries.add(e);
1: 				} else if(!e.getPath().equals(DerbyClasspathContainer.CONTAINER_ID)) {
1: 					newEntries.add(e);
1: 				}
1: 			}
1: 			
1: 			IClasspathEntry[] newEntriesArray = new IClasspathEntry[newEntries.size()];
1: 			newEntriesArray = (IClasspathEntry[])newEntries.toArray(newEntriesArray);			
1: 			currentJavaProject.setRawClasspath(newEntriesArray, null);
author:Jean T. Anderson
-------------------------------------------------------------------------------
commit:23683f1
/////////////////////////////////////////////////////////////////////////
1: 	Licensed to the Apache Software Foundation (ASF) under one or more
1: 	contributor license agreements.  See the NOTICE file distributed with
1: 	this work for additional information regarding copyright ownership.
1: 	The ASF licenses this file to you under the Apache License, Version 2.0
1: 	(the "License"); you may not use this file except in compliance with
1: 	the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1: 	Derby - Class org.apache.derby.ui.popup.actions.RemoveDerbyNature
1: 	
0: 	Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 	
0: 	Licensed under the Apache License, Version 2.0 (the "License");
0: 	you may not use this file except in compliance with the License.
0: 	You may obtain a copy of the License at
1: 	
1: 	   http://www.apache.org/licenses/LICENSE-2.0
1: 	
1: 	Unless required by applicable law or agreed to in writing, software
1: 	distributed under the License is distributed on an "AS IS" BASIS,
1: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1: 	See the License for the specific language governing permissions and
1: 	limitations under the License.
1: 
1: */
1: package org.apache.derby.ui.popup.actions;
1: 
1: import java.util.ArrayList;
1: 
1: import org.apache.derby.ui.common.CommonNames;
1: import org.apache.derby.ui.common.Messages;
1: import org.apache.derby.ui.util.DerbyServerUtils;
0: import org.apache.derby.ui.util.DerbyUtils;
1: import org.apache.derby.ui.util.Logger;
1: import org.apache.derby.ui.util.SelectionUtil;
1: import org.eclipse.core.resources.IProject;
1: import org.eclipse.core.resources.IProjectDescription;
1: import org.eclipse.core.resources.IResource;
1: import org.eclipse.core.runtime.IStatus;
1: import org.eclipse.jdt.core.IClasspathEntry;
1: import org.eclipse.jdt.core.IJavaProject;
1: import org.eclipse.jdt.core.JavaCore;
1: import org.eclipse.jface.action.IAction;
1: import org.eclipse.jface.dialogs.MessageDialog;
1: import org.eclipse.jface.viewers.ISelection;
1: import org.eclipse.jface.window.ApplicationWindow;
1: import org.eclipse.swt.widgets.Shell;
1: import org.eclipse.ui.IObjectActionDelegate;
1: import org.eclipse.ui.IWorkbenchPart;
1: import org.eclipse.ui.IWorkbenchWindow;
1: import org.eclipse.ui.PlatformUI;
1: 
1: public class RemoveDerbyNature implements IObjectActionDelegate {
1: 
1: 	private IJavaProject currentJavaProject;
1: 	private IProject currentProject;
1: 	/* (non-Javadoc)
1: 	 * @see org.eclipse.ui.IObjectActionDelegate#setActivePart(org.eclipse.jface.action.IAction, org.eclipse.ui.IWorkbenchPart)
1: 	 */
1: 	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
1: 		}
1: 
1: 
1: 	private static String[] removeDerbyNature(String [] natures){
1: 		ArrayList arrL=new ArrayList();
1: 		
1: 		for (int i=0;i<natures.length;i++){
1: 			if(!(natures[i].equalsIgnoreCase(CommonNames.DERBY_NATURE))){
1: 				arrL.add(natures[i]);
1: 			}
1: 		}
1: 		String [] newNatures= new String [arrL.size()];
1: 		for(int i=0;i<arrL.size();i++){
1: 			newNatures[i]=(String)arrL.get(i);
1: 		}
1: 		return newNatures;
1: 	}
1: 	/* (non-Javadoc)
1: 	 * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
1: 	 */	
1: 	public void run(IAction action) {
1: 		IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
1: 		try {
1: 			((ApplicationWindow)window).setStatus(Messages.REMOVING_NATURE);
1: 			
1: 			if(currentJavaProject==null){
1: 				currentJavaProject=JavaCore.create(currentProject);
1: 			}
1: 			//Shutdown server if running for the current project
1: 			if(DerbyServerUtils.getDefault().getRunning(currentJavaProject.getProject())){
1: 				DerbyServerUtils.getDefault().stopDerbyServer(currentJavaProject.getProject());
1: 			}
1: 			IClasspathEntry[] rawClasspath = currentJavaProject.getRawClasspath();
0: 			currentJavaProject.setRawClasspath(DerbyUtils.removeDerbyJars(rawClasspath), null);
1: 			
1: 			IProjectDescription description = currentJavaProject.getProject().getDescription();
1: 			String[] natures = description.getNatureIds();
1: 
1: 			description.setNatureIds(removeDerbyNature(natures));
1: 			currentJavaProject.getProject().setDescription(description, null);
1: 			// refresh project so user sees changes
1: 			currentJavaProject.getProject().refreshLocal(IResource.DEPTH_INFINITE, null);
1: 			((ApplicationWindow)window).setStatus(Messages.DERBY_NATURE_REMOVED);
1: 		}catch (Exception e) {
1: 			Logger.log(Messages.ERROR_REMOVING_NATURE+" '"+currentJavaProject.getProject().getName()+"': "+e,IStatus.ERROR);
1: 
1: 			Shell shell = new Shell();
1: 			MessageDialog.openInformation(
1: 				shell,
1: 				CommonNames.PLUGIN_NAME,
1: 				Messages.ERROR_REMOVING_NATURE+":\n" +
1: 				 SelectionUtil.getStatusMessages(e));
1: 		}
1: 
1: 	}
1: 
1: 	/* (non-Javadoc)
1: 	 * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
1: 	 */
1: 	public void selectionChanged(IAction action, ISelection selection) {
1: 		currentJavaProject = SelectionUtil.findSelectedJavaProject(selection);
1: 		if(currentJavaProject==null){
1: 			currentProject=org.apache.derby.ui.util.SelectionUtil.findSelectedProject(selection);
1: 		}
1: 	}
1: 
1: }
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:00daaff
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0: 	Derby - Class org.apache.derby.ui.popup.actions.RemoveDerbyNature
0: 	
0: 	Copyright 2002, 2004 The Apache Software Foundation or its licensors, as applicable.
0: 	
0: 	Licensed under the Apache License, Version 2.0 (the "License");
0: 	you may not use this file except in compliance with the License.
0: 	You may obtain a copy of the License at
0: 	
0: 	   http://www.apache.org/licenses/LICENSE-2.0
0: 	
0: 	Unless required by applicable law or agreed to in writing, software
0: 	distributed under the License is distributed on an "AS IS" BASIS,
0: 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0: 	See the License for the specific language governing permissions and
0: 	limitations under the License.
0: 
0: */
0: package org.apache.derby.ui.popup.actions;
0: 
0: import java.util.ArrayList;
0: 
0: import org.apache.derby.ui.common.CommonNames;
0: import org.apache.derby.ui.common.Messages;
0: import org.apache.derby.ui.util.DerbyServerUtils;
0: import org.apache.derby.ui.util.DerbyUtils;
0: import org.apache.derby.ui.util.Logger;
0: import org.apache.derby.ui.util.SelectionUtil;
0: import org.eclipse.core.resources.IProject;
0: import org.eclipse.core.resources.IProjectDescription;
0: import org.eclipse.core.resources.IResource;
0: import org.eclipse.core.runtime.IStatus;
0: import org.eclipse.jdt.core.IClasspathEntry;
0: import org.eclipse.jdt.core.IJavaProject;
0: import org.eclipse.jdt.core.JavaCore;
0: import org.eclipse.jface.action.IAction;
0: import org.eclipse.jface.dialogs.MessageDialog;
0: import org.eclipse.jface.viewers.ISelection;
0: import org.eclipse.jface.window.ApplicationWindow;
0: import org.eclipse.swt.widgets.Shell;
0: import org.eclipse.ui.IObjectActionDelegate;
0: import org.eclipse.ui.IWorkbenchPart;
0: import org.eclipse.ui.IWorkbenchWindow;
0: import org.eclipse.ui.PlatformUI;
0: 
0: public class RemoveDerbyNature implements IObjectActionDelegate {
0: 
0: 	private IJavaProject currentJavaProject;
0: 	private IProject currentProject;
0: 	/* (non-Javadoc)
0: 	 * @see org.eclipse.ui.IObjectActionDelegate#setActivePart(org.eclipse.jface.action.IAction, org.eclipse.ui.IWorkbenchPart)
0: 	 */
0: 	public void setActivePart(IAction action, IWorkbenchPart targetPart) {
0: 		}
0: 
0: 
0: 	private static String[] removeDerbyNature(String [] natures){
0: 		ArrayList arrL=new ArrayList();
0: 		
0: 		for (int i=0;i<natures.length;i++){
0: 			if(!(natures[i].equalsIgnoreCase(CommonNames.DERBY_NATURE))){
0: 				arrL.add(natures[i]);
0: 			}
0: 		}
0: 		String [] newNatures= new String [arrL.size()];
0: 		for(int i=0;i<arrL.size();i++){
0: 			newNatures[i]=(String)arrL.get(i);
0: 		}
0: 		return newNatures;
0: 	}
0: 	/* (non-Javadoc)
0: 	 * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)
0: 	 */	
0: 	public void run(IAction action) {
0: 		IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow();
0: 		try {
0: 			((ApplicationWindow)window).setStatus(Messages.REMOVING_NATURE);
0: 			
0: 			if(currentJavaProject==null){
0: 				currentJavaProject=JavaCore.create(currentProject);
0: 			}
0: 			//Shutdown server if running for the current project
0: 			if(DerbyServerUtils.getDefault().getRunning(currentJavaProject.getProject())){
0: 				DerbyServerUtils.getDefault().stopDerbyServer(currentJavaProject.getProject());
0: 			}
0: 			IClasspathEntry[] rawClasspath = currentJavaProject.getRawClasspath();
0: 			currentJavaProject.setRawClasspath(DerbyUtils.removeDerbyJars(rawClasspath), null);
0: 			
0: 			IProjectDescription description = currentJavaProject.getProject().getDescription();
0: 			String[] natures = description.getNatureIds();
0: 
0: 			description.setNatureIds(removeDerbyNature(natures));
0: 			currentJavaProject.getProject().setDescription(description, null);
0: 			// refresh project so user sees changes
0: 			currentJavaProject.getProject().refreshLocal(IResource.DEPTH_INFINITE, null);
0: 			((ApplicationWindow)window).setStatus(Messages.DERBY_NATURE_REMOVED);
0: 		}catch (Exception e) {
0: 			Logger.log(Messages.ERROR_REMOVING_NATURE+" '"+currentJavaProject.getProject().getName()+"': "+e,IStatus.ERROR);
0: 
0: 			Shell shell = new Shell();
0: 			MessageDialog.openInformation(
0: 				shell,
0: 				CommonNames.PLUGIN_NAME,
0: 				Messages.ERROR_REMOVING_NATURE+":\n" +
0: 				 SelectionUtil.getStatusMessages(e));
0: 		}
0: 
0: 	}
0: 
0: 	/* (non-Javadoc)
0: 	 * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)
0: 	 */
0: 	public void selectionChanged(IAction action, ISelection selection) {
0: 		currentJavaProject = SelectionUtil.findSelectedJavaProject(selection);
0: 		if(currentJavaProject==null){
0: 			currentProject=org.apache.derby.ui.util.SelectionUtil.findSelectedProject(selection);
0: 		}
0: 	}
0: 
0: }
============================================================================