1:f5ec6ec: /*
1:f5ec6ec:  * Derby - Class org.apache.derbyTesting.functionTests.tests.memory.Derby3009Test
1:f5ec6ec:  *
1:f5ec6ec:  * Licensed to the Apache Software Foundation (ASF) under one
1:f5ec6ec:  * or more contributor license agreements.  See the NOTICE file
1:f5ec6ec:  * distributed with this work for additional information
1:f5ec6ec:  * regarding copyright ownership.  The ASF licenses this file
1:f5ec6ec:  * to you under the Apache License, Version 2.0 (the
1:f5ec6ec:  * "License"); you may not use this file except in compliance
1:f5ec6ec:  * with the License.  You may obtain a copy of the License at
1:f5ec6ec:  *
1:f5ec6ec:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f5ec6ec:  *
1:f5ec6ec:  * Unless required by applicable law or agreed to in writing,
1:f5ec6ec:  * software distributed under the License is distributed on an
1:f5ec6ec:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f5ec6ec:  * KIND, either express or implied.  See the License for the
1:f5ec6ec:  * specific language governing permissions and limitations
1:f5ec6ec:  * under the License.
1:f5ec6ec:  */
1:f5ec6ec: 
1:f5ec6ec: package org.apache.derbyTesting.functionTests.tests.memory;
1:f5ec6ec: 
1:f5ec6ec: import java.sql.SQLException;
1:f5ec6ec: import java.sql.Statement;
1:f5ec6ec: import junit.framework.Test;
1:f5ec6ec: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:f5ec6ec: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1:f5ec6ec: import org.apache.derbyTesting.junit.TestConfiguration;
1:f5ec6ec: 
1:f5ec6ec: /**
1:f5ec6ec:  * Regression test for DERBY-3009 which caused OutOfMemoryError when creating
1:f5ec6ec:  * many foreign key constraints on a table. Run the test with 16 MB heap to
1:f5ec6ec:  * expose the problem.
1:f5ec6ec:  */
1:f5ec6ec: public class Derby3009Test extends BaseJDBCTestCase {
1:f5ec6ec:     public Derby3009Test(String name) {
1:f5ec6ec:         super(name);
1:f5ec6ec:     }
1:f5ec6ec: 
1:f5ec6ec:     public static Test suite() {
1:f5ec6ec:         // The OOME happened in the engine, so run this test in embedded mode.
1:f5ec6ec:         return new CleanDatabaseTestSetup(
1:f5ec6ec:                 TestConfiguration.embeddedSuite(Derby3009Test.class));
1:f5ec6ec:     }
1:f5ec6ec: 
1:f5ec6ec:     public void testTableWithManyForeignKeys() throws SQLException {
1:f5ec6ec:         Statement s = createStatement();
1:f5ec6ec: 
1:f5ec6ec:         // Create 50 tables with 50 columns each (plus primary key column).
1:f5ec6ec:         final int tables = 50;
1:f5ec6ec:         final int columns = 50;
1:f5ec6ec:         for (int i = 1; i <= tables; i++) {
1:f5ec6ec:             StringBuffer sql = new StringBuffer("create table d3009_t");
1:f5ec6ec:             sql.append(i);
1:f5ec6ec:             sql.append("(id int primary key");
1:f5ec6ec:             for (int j = 1; j <= columns; j++) {
1:f5ec6ec:                 sql.append(", x").append(j).append(" int");
1:f5ec6ec:             }
1:f5ec6ec:             sql.append(")");
1:f5ec6ec:             s.execute(sql.toString());
1:f5ec6ec:         }
1:f5ec6ec: 
1:f5ec6ec:         // Now add many foreign key constraints to table 50. Used to cause an
1:f5ec6ec:         // OutOfMemoryError before DERBY-3009.
1:f5ec6ec:         for (int i = 1; i <= tables; i++) {
1:f5ec6ec:             s.execute("alter table d3009_t50 add constraint d3009_fk" + i +
1:f5ec6ec:                       " foreign key(x" + i + ") references d3009_t" + i);
1:f5ec6ec:         }
1:f5ec6ec:     }
1:f5ec6ec: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:f5ec6ec
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Derby - Class org.apache.derbyTesting.functionTests.tests.memory.Derby3009Test
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.memory;
1: 
1: import java.sql.SQLException;
1: import java.sql.Statement;
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: /**
1:  * Regression test for DERBY-3009 which caused OutOfMemoryError when creating
1:  * many foreign key constraints on a table. Run the test with 16 MB heap to
1:  * expose the problem.
1:  */
1: public class Derby3009Test extends BaseJDBCTestCase {
1:     public Derby3009Test(String name) {
1:         super(name);
1:     }
1: 
1:     public static Test suite() {
1:         // The OOME happened in the engine, so run this test in embedded mode.
1:         return new CleanDatabaseTestSetup(
1:                 TestConfiguration.embeddedSuite(Derby3009Test.class));
1:     }
1: 
1:     public void testTableWithManyForeignKeys() throws SQLException {
1:         Statement s = createStatement();
1: 
1:         // Create 50 tables with 50 columns each (plus primary key column).
1:         final int tables = 50;
1:         final int columns = 50;
1:         for (int i = 1; i <= tables; i++) {
1:             StringBuffer sql = new StringBuffer("create table d3009_t");
1:             sql.append(i);
1:             sql.append("(id int primary key");
1:             for (int j = 1; j <= columns; j++) {
1:                 sql.append(", x").append(j).append(" int");
1:             }
1:             sql.append(")");
1:             s.execute(sql.toString());
1:         }
1: 
1:         // Now add many foreign key constraints to table 50. Used to cause an
1:         // OutOfMemoryError before DERBY-3009.
1:         for (int i = 1; i <= tables; i++) {
1:             s.execute("alter table d3009_t50 add constraint d3009_fk" + i +
1:                       " foreign key(x" + i + ") references d3009_t" + i);
1:         }
1:     }
1: }
============================================================================