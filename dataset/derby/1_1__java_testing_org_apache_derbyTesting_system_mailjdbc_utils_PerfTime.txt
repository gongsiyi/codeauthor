1:9bbe2e4: /*
1:9bbe2e4:  * 
1:9bbe2e4:  * Derby - Class org.apache.derbyTesting.system.mailjdbc.utils.PerfTime
1:9bbe2e4:  * 
1:9bbe2e4:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:9bbe2e4:  * contributor license agreements. See the NOTICE file distributed with this
1:9bbe2e4:  * work for additional information regarding copyright ownership. The ASF
1:9bbe2e4:  * licenses this file to You under the Apache License, Version 2.0 (the
1:9bbe2e4:  * "License"); you may not use this file except in compliance with the License.
1:9bbe2e4:  * You may obtain a copy of the License at
1:9bbe2e4:  * 
1:9bbe2e4:  * http://www.apache.org/licenses/LICENSE-2.0
1:9bbe2e4:  * 
1:9bbe2e4:  * Unless required by applicable law or agreed to in writing, software
1:9bbe2e4:  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
1:9bbe2e4:  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
1:9bbe2e4:  * License for the specific language governing permissions and limitations under
1:9bbe2e4:  * the License.
1:9bbe2e4:  *  
1:9bbe2e4:  */
1:9bbe2e4: package org.apache.derbyTesting.system.mailjdbc.utils;
1:9bbe2e4: //utility class that prints out the time in a formatted way
1:9bbe2e4: public class PerfTime {
1:9bbe2e4: 	public static String readableTime(long t) {
1:9bbe2e4: 		//Returns the time in h.mm.s format
1:9bbe2e4: 		long hours = t / (60L * 60L * 1000L);
1:9bbe2e4: 		long hoursRemainder = t % (60L * 60L * 1000L);
1:9bbe2e4: 		long mins = hoursRemainder / (60L * 1000L);
1:9bbe2e4: 		long minsRemainder = hoursRemainder % (60L * 1000L);
1:9bbe2e4: 		long secs = minsRemainder / 1000L;
1:9bbe2e4: 		long ms = minsRemainder % 1000L;
1:9bbe2e4: 
1:9bbe2e4: 		StringBuffer sb = new StringBuffer(20);
1:9bbe2e4: 		if (hours > 0) {
1:9bbe2e4: 			sb.append(hours);
1:9bbe2e4: 			sb.append('h');
1:9bbe2e4: 		}
1:9bbe2e4: 		if (mins > 0) {
1:9bbe2e4: 			sb.append(mins);
1:9bbe2e4: 			sb.append('m');
1:9bbe2e4: 		}
1:9bbe2e4: 		sb.append(secs);
1:9bbe2e4: 		if (hours == 0 && mins < 5) {
1:9bbe2e4: 			sb.append('.');
1:9bbe2e4: 			if (ms < 10)
1:9bbe2e4: 				sb.append('0');
1:9bbe2e4: 			if (ms < 100)
1:9bbe2e4: 				sb.append('0');
1:9bbe2e4: 			sb.append(ms);
1:9bbe2e4: 		}
1:9bbe2e4: 		sb.append("s");
1:9bbe2e4: 		return sb.toString();
1:9bbe2e4: 
1:9bbe2e4: 	}
1:9bbe2e4: }
============================================================================
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:9bbe2e4
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Derby - Class org.apache.derbyTesting.system.mailjdbc.utils.PerfTime
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements. See the NOTICE file distributed with this
1:  * work for additional information regarding copyright ownership. The ASF
1:  * licenses this file to You under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  * 
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
1:  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
1:  * License for the specific language governing permissions and limitations under
1:  * the License.
1:  *  
1:  */
1: package org.apache.derbyTesting.system.mailjdbc.utils;
1: //utility class that prints out the time in a formatted way
1: public class PerfTime {
1: 	public static String readableTime(long t) {
1: 		//Returns the time in h.mm.s format
1: 		long hours = t / (60L * 60L * 1000L);
1: 		long hoursRemainder = t % (60L * 60L * 1000L);
1: 		long mins = hoursRemainder / (60L * 1000L);
1: 		long minsRemainder = hoursRemainder % (60L * 1000L);
1: 		long secs = minsRemainder / 1000L;
1: 		long ms = minsRemainder % 1000L;
1: 
1: 		StringBuffer sb = new StringBuffer(20);
1: 		if (hours > 0) {
1: 			sb.append(hours);
1: 			sb.append('h');
1: 		}
1: 		if (mins > 0) {
1: 			sb.append(mins);
1: 			sb.append('m');
1: 		}
1: 		sb.append(secs);
1: 		if (hours == 0 && mins < 5) {
1: 			sb.append('.');
1: 			if (ms < 10)
1: 				sb.append('0');
1: 			if (ms < 100)
1: 				sb.append('0');
1: 			sb.append(ms);
1: 		}
1: 		sb.append("s");
1: 		return sb.toString();
1: 
1: 	}
1: }
============================================================================