1:eac0369: /*
2:eac0369: 
1:345de35:    Derby - Class org.apache.derby.impl.services.bytecode.OpcodeDebug
1:345de35: 
1:93fea34:    Licensed to the Apache Software Foundation (ASF) under one or more
1:93fea34:    contributor license agreements.  See the NOTICE file distributed with
1:93fea34:    this work for additional information regarding copyright ownership.
1:93fea34:    The ASF licenses this file to you under the Apache License, Version 2.0
1:93fea34:    (the "License"); you may not use this file except in compliance with
1:93fea34:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
1:345de35: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.services.bytecode;
1:eac0369: 
1:eac0369: 
1:7e51e9d: import org.apache.derby.shared.common.sanity.SanityManager;
1:eac0369: 
2:eac0369: /**
1:eac0369:  * This contains mnemonics for all of the opcodes of the JVM.
1:eac0369:  * It is a separate class so that it will not get loaded
1:eac0369:  * if the system does not need it (i.e. when compiled without
1:eac0369:  * debugging).  We even leave out the initialization in that case.
1:eac0369:  */
1:eac0369: class OpcodeDebug {
1:eac0369: 	static final String Name[];
1:eac0369: 
1:eac0369: 	static {
1:eac0369: 		if (SanityManager.DEBUG) {
1:eac0369: 			// we assign these to a temp var first because
1:eac0369: 			// "Array constants can only be used in initializers"
1:eac0369: 			// to quote the compiler.
1:eac0369: 			String NameInit[] = { 
1:eac0369: 				"NOP",	// 0
1:eac0369: 				"ACONST_NULL",	// 1
1:eac0369: 				"ICONST_M1",	// 2
1:eac0369: 				"ICONST_0",	// 3
1:eac0369: 				"ICONST_1",	// 4
1:eac0369: 				"ICONST_2",	// 5
1:eac0369: 				"ICONST_3",	// 6
1:eac0369: 				"ICONST_4",	// 7
1:eac0369: 				"ICONST_5",	// 8
1:eac0369: 				"LCONST_0",	// 9
1:eac0369: 				"LCONST_1",	// 10
1:eac0369: 				"FCONST_0",	// 11
1:eac0369: 				"FCONST_1",	// 12
1:eac0369: 				"FCONST_2",	// 13
1:eac0369: 				"DCONST_0",	// 14
1:eac0369: 				"DCONST_1",	// 15
1:eac0369: 				"BIPUSH",	// 16
1:eac0369: 				"SIPUSH",	// 17
1:eac0369: 				"LDC",	// 18
1:eac0369: 				"LDC_W",	// 19
1:eac0369: 				"LDC2_W",	// 20
1:eac0369: 				"ILOAD",	// 21
1:eac0369: 				"LLOAD",	// 22
1:eac0369: 				"FLOAD",	// 23
1:eac0369: 				"DLOAD",	// 24
1:eac0369: 				"ALOAD",	// 25
1:eac0369: 				"ILOAD_0",	// 26
1:eac0369: 				"ILOAD_1",	// 27
1:eac0369: 				"ILOAD_2",	// 28
1:eac0369: 				"ILOAD_3",	// 29
1:eac0369: 				"LLOAD_0",	// 30
1:eac0369: 				"LLOAD_1",	// 31
1:eac0369: 				"LLOAD_2",	// 32
1:eac0369: 				"LLOAD_3",	// 33
1:eac0369: 				"FLOAD_0",	// 34
1:eac0369: 				"FLOAD_1",	// 35
1:eac0369: 				"FLOAD_2",	// 36
1:eac0369: 				"FLOAD_3",	// 37
1:eac0369: 				"DLOAD_0",	// 38
1:eac0369: 				"DLOAD_1",	// 39
1:eac0369: 				"DLOAD_2",	// 40
1:eac0369: 				"DLOAD_3",	// 41
1:eac0369: 				"ALOAD_0",	// 42
1:eac0369: 				"ALOAD_1",	// 43
1:eac0369: 				"ALOAD_2",	// 44
1:eac0369: 				"ALOAD_3",	// 45
1:eac0369: 				"IALOAD",	// 46
1:eac0369: 				"LALOAD",	// 47
1:eac0369: 				"FALOAD",	// 48
1:eac0369: 				"DALOAD",	// 49
1:eac0369: 				"AALOAD",	// 50
1:eac0369: 				"BALOAD",	// 51
1:eac0369: 				"CALOAD",	// 52
1:eac0369: 				"SALOAD",	// 53
1:eac0369: 				"ISTORE",	// 54
1:eac0369: 				"LSTORE",	// 55
1:eac0369: 				"FSTORE",	// 56
1:eac0369: 				"DSTORE",	// 57
1:eac0369: 				"ASTORE",	// 58
1:eac0369: 				"ISTORE_0",	// 59
1:eac0369: 				"ISTORE_1",	// 60
1:eac0369: 				"ISTORE_2",	// 61
1:eac0369: 				"ISTORE_3",	// 62
1:eac0369: 				"LSTORE_0",	// 63
1:eac0369: 				"LSTORE_1",	// 64
1:eac0369: 				"LSTORE_2",	// 65
1:eac0369: 				"LSTORE_3",	// 66
1:eac0369: 				"FSTORE_0",	// 67
1:eac0369: 				"FSTORE_1",	// 68
1:eac0369: 				"FSTORE_2",	// 69
1:eac0369: 				"FSTORE_3",	// 70
1:eac0369: 				"DSTORE_0",	// 71
1:eac0369: 				"DSTORE_1",	// 72
1:eac0369: 				"DSTORE_2",	// 73
1:eac0369: 				"DSTORE_3",	// 74
1:eac0369: 				"ASTORE_0",	// 75
1:eac0369: 				"ASTORE_1",	// 76
1:eac0369: 				"ASTORE_2",	// 77
1:eac0369: 				"ASTORE_3",	// 78
1:eac0369: 				"IASTORE",	// 79
1:eac0369: 				"LASTORE",	// 80
1:eac0369: 				"FASTORE",	// 81
1:eac0369: 				"DASTORE",	// 82
1:eac0369: 				"AASTORE",	// 83
1:eac0369: 				"BASTORE",	// 84
1:eac0369: 				"CASTORE",	// 85
1:eac0369: 				"SASTORE",	// 86
1:eac0369: 				"POP",	// 87
1:eac0369: 				"POP2",	// 88
1:eac0369: 				"DUP",	// 89
1:eac0369: 				"DUP_X1",	// 90
1:eac0369: 				"DUP_X2",	// 91
1:eac0369: 				"DUP2",	// 92
1:eac0369: 				"DUP2_X1",	// 93
1:eac0369: 				"DUP2_X2",	// 94
1:eac0369: 				"SWAP",	// 95
1:eac0369: 				"IADD",	// 96
1:eac0369: 				"LADD",	// 97
1:eac0369: 				"FADD",	// 98
1:eac0369: 				"DADD",	// 99
1:eac0369: 				"ISUB",	// 100
1:eac0369: 				"LSUB",	// 101
1:eac0369: 				"FSUB",	// 102
1:eac0369: 				"DSUB",	// 103
1:eac0369: 				"IMUL",	// 104
1:eac0369: 				"LMUL",	// 105
1:eac0369: 				"FMUL",	// 106
1:eac0369: 				"DMUL",	// 107
1:eac0369: 				"IDIV",	// 108
1:eac0369: 				"LDIV",	// 109
1:eac0369: 				"FDIV",	// 110
1:eac0369: 				"DDIV",	// 111
1:eac0369: 				"IREM",	// 112
1:eac0369: 				"LREM",	// 113
1:eac0369: 				"FREM",	// 114
1:eac0369: 				"DREM",	// 115
1:eac0369: 				"INEG",	// 116
1:eac0369: 				"LNEG",	// 117
1:eac0369: 				"FNEG",	// 118
1:eac0369: 				"DNEG",	// 119
1:eac0369: 				"ISHL",	// 120
1:eac0369: 				"LSHL",	// 121
1:eac0369: 				"ISHR",	// 122
1:eac0369: 				"LSHR",	// 123
1:eac0369: 				"IUSHR",	// 124
1:eac0369: 				"LUSHR",	// 125
1:eac0369: 				"IAND",	// 126
1:eac0369: 				"LAND",	// 127
1:eac0369: 				"IOR",	// 128
1:eac0369: 				"LOR",	// 129
1:eac0369: 				"IXOR",	// 130
1:eac0369: 				"LXOR",	// 131
1:eac0369: 				"IINC",	// 132
1:eac0369: 				"I2L",	// 133
1:eac0369: 				"I2F",	// 134
1:eac0369: 				"I2D",	// 135
1:eac0369: 				"L2I",	// 136
1:eac0369: 				"L2F",	// 137
1:eac0369: 				"L2D",	// 138
1:eac0369: 				"F2I",	// 139
1:eac0369: 				"F2L",	// 140
1:eac0369: 				"F2D",	// 141
1:eac0369: 				"D2I",	// 142
1:eac0369: 				"D2L",	// 143
1:eac0369: 				"D2F",	// 144
1:eac0369: 				"I2B",	// 145
1:eac0369: 				"I2C",	// 146
1:eac0369: 				"I2S",	// 147
1:eac0369: 				"LCMP",	// 148
1:eac0369: 				"FCMPL",	// 149
1:eac0369: 				"FCMPG",	// 150
1:eac0369: 				"DCMPL",	// 151
1:eac0369: 				"DCMPG",	// 152
1:eac0369: 				"IFEQ",	// 153
1:eac0369: 				"IFNE",	// 154
1:eac0369: 				"IFLT",	// 155
1:eac0369: 				"IFGE",	// 156
1:eac0369: 				"IFGT",	// 157
1:eac0369: 				"IFLE",	// 158
1:eac0369: 				"IF_ICMPEQ",	// 159
1:eac0369: 				"IF_ICMPNE",	// 160
1:eac0369: 				"IF_ICMPLT",	// 161
1:eac0369: 				"IF_ICMPGE",	// 162
1:eac0369: 				"IF_ICMPGT",	// 163
1:eac0369: 				"IF_ICMPLE",	// 164
1:eac0369: 				"IF_ACMPEQ",	// 165
1:eac0369: 				"IF_ACMPNE",	// 166
1:eac0369: 				"GOTO",	// 167
1:eac0369: 				"JSR",	// 168
1:eac0369: 				"RET",	// 169
1:eac0369: 				"TABLESWITCH",	// 170
1:eac0369: 				"LOOKUPSWITCH",	// 171
1:eac0369: 				"IRETURN",	// 172
1:eac0369: 				"LRETURN",	// 173
1:eac0369: 				"FRETURN",	// 174
1:eac0369: 				"DRETURN",	// 175
1:eac0369: 				"ARETURN",	// 176
1:eac0369: 				"RETURN",	// 177
1:eac0369: 				"GETSTATIC",	// 178
1:eac0369: 				"PUTSTATIC",	// 179
1:eac0369: 				"GETFIELD",	// 180
1:eac0369: 				"PUTFIELD",	// 181
1:eac0369: 				"INVOKEVIRTUAL",	// 182
1:eac0369: 				"INVOKESPECIAL",	// 183
1:eac0369: 				"INVOKESTATIC",	// 184
1:eac0369: 				"INVOKEINTERFACE",	// 185
1:eac0369: 				"XXXUNUSEDXXX",	// 186
1:eac0369: 				"NEW",	// 187
1:eac0369: 				"NEWARRAY",	// 188
1:eac0369: 				"ANEWARRAY",	// 189
1:eac0369: 				"ARRAYLENGTH",	// 190
1:eac0369: 				"ATHROW",	// 191
1:eac0369: 				"CHECKCAST",	// 192
1:eac0369: 				"INSTANCEOF",	// 193
1:eac0369: 				"MONITORENTER",	// 194
1:eac0369: 				"MONITOREXIT",	// 195
1:eac0369: 				"WIDE",	// 196
1:eac0369: 				"MULTIANEWARRAY",	// 197
1:eac0369: 				"IFNULL",	// 198
1:eac0369: 				"IFNONNULL",	// 199
1:eac0369: 				"GOTO_W",	// 200
1:eac0369: 				"JSR_W",	// 201
1:eac0369: 				"BREAKPOINT"		// 202
1:eac0369: 			};
1:eac0369: 			Name = NameInit;
1:eac0369: 		}
1:eac0369: 		else
1:eac0369: 			Name = null;
1:eac0369: 	}
1:eac0369: }
============================================================================
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:7e51e9d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.shared.common.sanity.SanityManager;
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:93fea34
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.services.bytecode.OpcodeDebug
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:1f9b9c4
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.services.bytecode
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.services.bytecode;
1: 
1: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
1: 
1: /**
1:  * This contains mnemonics for all of the opcodes of the JVM.
1:  * It is a separate class so that it will not get loaded
1:  * if the system does not need it (i.e. when compiled without
1:  * debugging).  We even leave out the initialization in that case.
1:  */
1: class OpcodeDebug {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	static final String Name[];
1: 
1: 	static {
1: 		if (SanityManager.DEBUG) {
1: 			// we assign these to a temp var first because
1: 			// "Array constants can only be used in initializers"
1: 			// to quote the compiler.
1: 			String NameInit[] = { 
1: 				"NOP",	// 0
1: 				"ACONST_NULL",	// 1
1: 				"ICONST_M1",	// 2
1: 				"ICONST_0",	// 3
1: 				"ICONST_1",	// 4
1: 				"ICONST_2",	// 5
1: 				"ICONST_3",	// 6
1: 				"ICONST_4",	// 7
1: 				"ICONST_5",	// 8
1: 				"LCONST_0",	// 9
1: 				"LCONST_1",	// 10
1: 				"FCONST_0",	// 11
1: 				"FCONST_1",	// 12
1: 				"FCONST_2",	// 13
1: 				"DCONST_0",	// 14
1: 				"DCONST_1",	// 15
1: 				"BIPUSH",	// 16
1: 				"SIPUSH",	// 17
1: 				"LDC",	// 18
1: 				"LDC_W",	// 19
1: 				"LDC2_W",	// 20
1: 				"ILOAD",	// 21
1: 				"LLOAD",	// 22
1: 				"FLOAD",	// 23
1: 				"DLOAD",	// 24
1: 				"ALOAD",	// 25
1: 				"ILOAD_0",	// 26
1: 				"ILOAD_1",	// 27
1: 				"ILOAD_2",	// 28
1: 				"ILOAD_3",	// 29
1: 				"LLOAD_0",	// 30
1: 				"LLOAD_1",	// 31
1: 				"LLOAD_2",	// 32
1: 				"LLOAD_3",	// 33
1: 				"FLOAD_0",	// 34
1: 				"FLOAD_1",	// 35
1: 				"FLOAD_2",	// 36
1: 				"FLOAD_3",	// 37
1: 				"DLOAD_0",	// 38
1: 				"DLOAD_1",	// 39
1: 				"DLOAD_2",	// 40
1: 				"DLOAD_3",	// 41
1: 				"ALOAD_0",	// 42
1: 				"ALOAD_1",	// 43
1: 				"ALOAD_2",	// 44
1: 				"ALOAD_3",	// 45
1: 				"IALOAD",	// 46
1: 				"LALOAD",	// 47
1: 				"FALOAD",	// 48
1: 				"DALOAD",	// 49
1: 				"AALOAD",	// 50
1: 				"BALOAD",	// 51
1: 				"CALOAD",	// 52
1: 				"SALOAD",	// 53
1: 				"ISTORE",	// 54
1: 				"LSTORE",	// 55
1: 				"FSTORE",	// 56
1: 				"DSTORE",	// 57
1: 				"ASTORE",	// 58
1: 				"ISTORE_0",	// 59
1: 				"ISTORE_1",	// 60
1: 				"ISTORE_2",	// 61
1: 				"ISTORE_3",	// 62
1: 				"LSTORE_0",	// 63
1: 				"LSTORE_1",	// 64
1: 				"LSTORE_2",	// 65
1: 				"LSTORE_3",	// 66
1: 				"FSTORE_0",	// 67
1: 				"FSTORE_1",	// 68
1: 				"FSTORE_2",	// 69
1: 				"FSTORE_3",	// 70
1: 				"DSTORE_0",	// 71
1: 				"DSTORE_1",	// 72
1: 				"DSTORE_2",	// 73
1: 				"DSTORE_3",	// 74
1: 				"ASTORE_0",	// 75
1: 				"ASTORE_1",	// 76
1: 				"ASTORE_2",	// 77
1: 				"ASTORE_3",	// 78
1: 				"IASTORE",	// 79
1: 				"LASTORE",	// 80
1: 				"FASTORE",	// 81
1: 				"DASTORE",	// 82
1: 				"AASTORE",	// 83
1: 				"BASTORE",	// 84
1: 				"CASTORE",	// 85
1: 				"SASTORE",	// 86
1: 				"POP",	// 87
1: 				"POP2",	// 88
1: 				"DUP",	// 89
1: 				"DUP_X1",	// 90
1: 				"DUP_X2",	// 91
1: 				"DUP2",	// 92
1: 				"DUP2_X1",	// 93
1: 				"DUP2_X2",	// 94
1: 				"SWAP",	// 95
1: 				"IADD",	// 96
1: 				"LADD",	// 97
1: 				"FADD",	// 98
1: 				"DADD",	// 99
1: 				"ISUB",	// 100
1: 				"LSUB",	// 101
1: 				"FSUB",	// 102
1: 				"DSUB",	// 103
1: 				"IMUL",	// 104
1: 				"LMUL",	// 105
1: 				"FMUL",	// 106
1: 				"DMUL",	// 107
1: 				"IDIV",	// 108
1: 				"LDIV",	// 109
1: 				"FDIV",	// 110
1: 				"DDIV",	// 111
1: 				"IREM",	// 112
1: 				"LREM",	// 113
1: 				"FREM",	// 114
1: 				"DREM",	// 115
1: 				"INEG",	// 116
1: 				"LNEG",	// 117
1: 				"FNEG",	// 118
1: 				"DNEG",	// 119
1: 				"ISHL",	// 120
1: 				"LSHL",	// 121
1: 				"ISHR",	// 122
1: 				"LSHR",	// 123
1: 				"IUSHR",	// 124
1: 				"LUSHR",	// 125
1: 				"IAND",	// 126
1: 				"LAND",	// 127
1: 				"IOR",	// 128
1: 				"LOR",	// 129
1: 				"IXOR",	// 130
1: 				"LXOR",	// 131
1: 				"IINC",	// 132
1: 				"I2L",	// 133
1: 				"I2F",	// 134
1: 				"I2D",	// 135
1: 				"L2I",	// 136
1: 				"L2F",	// 137
1: 				"L2D",	// 138
1: 				"F2I",	// 139
1: 				"F2L",	// 140
1: 				"F2D",	// 141
1: 				"D2I",	// 142
1: 				"D2L",	// 143
1: 				"D2F",	// 144
1: 				"I2B",	// 145
1: 				"I2C",	// 146
1: 				"I2S",	// 147
1: 				"LCMP",	// 148
1: 				"FCMPL",	// 149
1: 				"FCMPG",	// 150
1: 				"DCMPL",	// 151
1: 				"DCMPG",	// 152
1: 				"IFEQ",	// 153
1: 				"IFNE",	// 154
1: 				"IFLT",	// 155
1: 				"IFGE",	// 156
1: 				"IFGT",	// 157
1: 				"IFLE",	// 158
1: 				"IF_ICMPEQ",	// 159
1: 				"IF_ICMPNE",	// 160
1: 				"IF_ICMPLT",	// 161
1: 				"IF_ICMPGE",	// 162
1: 				"IF_ICMPGT",	// 163
1: 				"IF_ICMPLE",	// 164
1: 				"IF_ACMPEQ",	// 165
1: 				"IF_ACMPNE",	// 166
1: 				"GOTO",	// 167
1: 				"JSR",	// 168
1: 				"RET",	// 169
1: 				"TABLESWITCH",	// 170
1: 				"LOOKUPSWITCH",	// 171
1: 				"IRETURN",	// 172
1: 				"LRETURN",	// 173
1: 				"FRETURN",	// 174
1: 				"DRETURN",	// 175
1: 				"ARETURN",	// 176
1: 				"RETURN",	// 177
1: 				"GETSTATIC",	// 178
1: 				"PUTSTATIC",	// 179
1: 				"GETFIELD",	// 180
1: 				"PUTFIELD",	// 181
1: 				"INVOKEVIRTUAL",	// 182
1: 				"INVOKESPECIAL",	// 183
1: 				"INVOKESTATIC",	// 184
1: 				"INVOKEINTERFACE",	// 185
1: 				"XXXUNUSEDXXX",	// 186
1: 				"NEW",	// 187
1: 				"NEWARRAY",	// 188
1: 				"ANEWARRAY",	// 189
1: 				"ARRAYLENGTH",	// 190
1: 				"ATHROW",	// 191
1: 				"CHECKCAST",	// 192
1: 				"INSTANCEOF",	// 193
1: 				"MONITORENTER",	// 194
1: 				"MONITOREXIT",	// 195
1: 				"WIDE",	// 196
1: 				"MULTIANEWARRAY",	// 197
1: 				"IFNULL",	// 198
1: 				"IFNONNULL",	// 199
1: 				"GOTO_W",	// 200
1: 				"JSR_W",	// 201
1: 				"BREAKPOINT"		// 202
1: 			};
1: 			Name = NameInit;
1: 		}
1: 		else
1: 			Name = null;
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.services.bytecode
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.services.bytecode;
0: 
0: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: 
0: /**
0:  * This contains mnemonics for all of the opcodes of the JVM.
0:  * It is a separate class so that it will not get loaded
0:  * if the system does not need it (i.e. when compiled without
0:  * debugging).  We even leave out the initialization in that case.
0:  */
0: class OpcodeDebug {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	static final String Name[];
0: 
0: 	static {
0: 		if (SanityManager.DEBUG) {
0: 			// we assign these to a temp var first because
0: 			// "Array constants can only be used in initializers"
0: 			// to quote the compiler.
0: 			String NameInit[] = { 
0: 				"NOP",	// 0
0: 				"ACONST_NULL",	// 1
0: 				"ICONST_M1",	// 2
0: 				"ICONST_0",	// 3
0: 				"ICONST_1",	// 4
0: 				"ICONST_2",	// 5
0: 				"ICONST_3",	// 6
0: 				"ICONST_4",	// 7
0: 				"ICONST_5",	// 8
0: 				"LCONST_0",	// 9
0: 				"LCONST_1",	// 10
0: 				"FCONST_0",	// 11
0: 				"FCONST_1",	// 12
0: 				"FCONST_2",	// 13
0: 				"DCONST_0",	// 14
0: 				"DCONST_1",	// 15
0: 				"BIPUSH",	// 16
0: 				"SIPUSH",	// 17
0: 				"LDC",	// 18
0: 				"LDC_W",	// 19
0: 				"LDC2_W",	// 20
0: 				"ILOAD",	// 21
0: 				"LLOAD",	// 22
0: 				"FLOAD",	// 23
0: 				"DLOAD",	// 24
0: 				"ALOAD",	// 25
0: 				"ILOAD_0",	// 26
0: 				"ILOAD_1",	// 27
0: 				"ILOAD_2",	// 28
0: 				"ILOAD_3",	// 29
0: 				"LLOAD_0",	// 30
0: 				"LLOAD_1",	// 31
0: 				"LLOAD_2",	// 32
0: 				"LLOAD_3",	// 33
0: 				"FLOAD_0",	// 34
0: 				"FLOAD_1",	// 35
0: 				"FLOAD_2",	// 36
0: 				"FLOAD_3",	// 37
0: 				"DLOAD_0",	// 38
0: 				"DLOAD_1",	// 39
0: 				"DLOAD_2",	// 40
0: 				"DLOAD_3",	// 41
0: 				"ALOAD_0",	// 42
0: 				"ALOAD_1",	// 43
0: 				"ALOAD_2",	// 44
0: 				"ALOAD_3",	// 45
0: 				"IALOAD",	// 46
0: 				"LALOAD",	// 47
0: 				"FALOAD",	// 48
0: 				"DALOAD",	// 49
0: 				"AALOAD",	// 50
0: 				"BALOAD",	// 51
0: 				"CALOAD",	// 52
0: 				"SALOAD",	// 53
0: 				"ISTORE",	// 54
0: 				"LSTORE",	// 55
0: 				"FSTORE",	// 56
0: 				"DSTORE",	// 57
0: 				"ASTORE",	// 58
0: 				"ISTORE_0",	// 59
0: 				"ISTORE_1",	// 60
0: 				"ISTORE_2",	// 61
0: 				"ISTORE_3",	// 62
0: 				"LSTORE_0",	// 63
0: 				"LSTORE_1",	// 64
0: 				"LSTORE_2",	// 65
0: 				"LSTORE_3",	// 66
0: 				"FSTORE_0",	// 67
0: 				"FSTORE_1",	// 68
0: 				"FSTORE_2",	// 69
0: 				"FSTORE_3",	// 70
0: 				"DSTORE_0",	// 71
0: 				"DSTORE_1",	// 72
0: 				"DSTORE_2",	// 73
0: 				"DSTORE_3",	// 74
0: 				"ASTORE_0",	// 75
0: 				"ASTORE_1",	// 76
0: 				"ASTORE_2",	// 77
0: 				"ASTORE_3",	// 78
0: 				"IASTORE",	// 79
0: 				"LASTORE",	// 80
0: 				"FASTORE",	// 81
0: 				"DASTORE",	// 82
0: 				"AASTORE",	// 83
0: 				"BASTORE",	// 84
0: 				"CASTORE",	// 85
0: 				"SASTORE",	// 86
0: 				"POP",	// 87
0: 				"POP2",	// 88
0: 				"DUP",	// 89
0: 				"DUP_X1",	// 90
0: 				"DUP_X2",	// 91
0: 				"DUP2",	// 92
0: 				"DUP2_X1",	// 93
0: 				"DUP2_X2",	// 94
0: 				"SWAP",	// 95
0: 				"IADD",	// 96
0: 				"LADD",	// 97
0: 				"FADD",	// 98
0: 				"DADD",	// 99
0: 				"ISUB",	// 100
0: 				"LSUB",	// 101
0: 				"FSUB",	// 102
0: 				"DSUB",	// 103
0: 				"IMUL",	// 104
0: 				"LMUL",	// 105
0: 				"FMUL",	// 106
0: 				"DMUL",	// 107
0: 				"IDIV",	// 108
0: 				"LDIV",	// 109
0: 				"FDIV",	// 110
0: 				"DDIV",	// 111
0: 				"IREM",	// 112
0: 				"LREM",	// 113
0: 				"FREM",	// 114
0: 				"DREM",	// 115
0: 				"INEG",	// 116
0: 				"LNEG",	// 117
0: 				"FNEG",	// 118
0: 				"DNEG",	// 119
0: 				"ISHL",	// 120
0: 				"LSHL",	// 121
0: 				"ISHR",	// 122
0: 				"LSHR",	// 123
0: 				"IUSHR",	// 124
0: 				"LUSHR",	// 125
0: 				"IAND",	// 126
0: 				"LAND",	// 127
0: 				"IOR",	// 128
0: 				"LOR",	// 129
0: 				"IXOR",	// 130
0: 				"LXOR",	// 131
0: 				"IINC",	// 132
0: 				"I2L",	// 133
0: 				"I2F",	// 134
0: 				"I2D",	// 135
0: 				"L2I",	// 136
0: 				"L2F",	// 137
0: 				"L2D",	// 138
0: 				"F2I",	// 139
0: 				"F2L",	// 140
0: 				"F2D",	// 141
0: 				"D2I",	// 142
0: 				"D2L",	// 143
0: 				"D2F",	// 144
0: 				"I2B",	// 145
0: 				"I2C",	// 146
0: 				"I2S",	// 147
0: 				"LCMP",	// 148
0: 				"FCMPL",	// 149
0: 				"FCMPG",	// 150
0: 				"DCMPL",	// 151
0: 				"DCMPG",	// 152
0: 				"IFEQ",	// 153
0: 				"IFNE",	// 154
0: 				"IFLT",	// 155
0: 				"IFGE",	// 156
0: 				"IFGT",	// 157
0: 				"IFLE",	// 158
0: 				"IF_ICMPEQ",	// 159
0: 				"IF_ICMPNE",	// 160
0: 				"IF_ICMPLT",	// 161
0: 				"IF_ICMPGE",	// 162
0: 				"IF_ICMPGT",	// 163
0: 				"IF_ICMPLE",	// 164
0: 				"IF_ACMPEQ",	// 165
0: 				"IF_ACMPNE",	// 166
0: 				"GOTO",	// 167
0: 				"JSR",	// 168
0: 				"RET",	// 169
0: 				"TABLESWITCH",	// 170
0: 				"LOOKUPSWITCH",	// 171
0: 				"IRETURN",	// 172
0: 				"LRETURN",	// 173
0: 				"FRETURN",	// 174
0: 				"DRETURN",	// 175
0: 				"ARETURN",	// 176
0: 				"RETURN",	// 177
0: 				"GETSTATIC",	// 178
0: 				"PUTSTATIC",	// 179
0: 				"GETFIELD",	// 180
0: 				"PUTFIELD",	// 181
0: 				"INVOKEVIRTUAL",	// 182
0: 				"INVOKESPECIAL",	// 183
0: 				"INVOKESTATIC",	// 184
0: 				"INVOKEINTERFACE",	// 185
0: 				"XXXUNUSEDXXX",	// 186
0: 				"NEW",	// 187
0: 				"NEWARRAY",	// 188
0: 				"ANEWARRAY",	// 189
0: 				"ARRAYLENGTH",	// 190
0: 				"ATHROW",	// 191
0: 				"CHECKCAST",	// 192
0: 				"INSTANCEOF",	// 193
0: 				"MONITORENTER",	// 194
0: 				"MONITOREXIT",	// 195
0: 				"WIDE",	// 196
0: 				"MULTIANEWARRAY",	// 197
0: 				"IFNULL",	// 198
0: 				"IFNONNULL",	// 199
0: 				"GOTO_W",	// 200
0: 				"JSR_W",	// 201
0: 				"BREAKPOINT"		// 202
0: 			};
0: 			Name = NameInit;
0: 		}
0: 		else
0: 			Name = null;
0: 	}
0: }
============================================================================