1:33776ff: /*
6:33776ff: 
1:33776ff:    Derby - Class org.apache.derby.client.am.MaterialPreparedStatement
1:33776ff: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:33776ff: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:33776ff: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:33776ff: 
1:33776ff: */
1:33776ff: 
1:33776ff: package org.apache.derby.client.am;
1:33776ff: 
1:33776ff: 
1:33776ff: 
1:70f7692: public interface MaterialPreparedStatement extends MaterialStatement {
1:33776ff: 
1:33776ff: 
1:70f7692:     // ------------------------ abstract box car and callback methods --------------------------------
1:70f7692: 
1:70f7692:     public abstract void writeExecute_(Section section,
1:70f7692:                                        ColumnMetaData parameterMetaData,
1:70f7692:                                        Object[] inputs,
1:70f7692:                                        int numInputColumns,
1:70f7692:                                        boolean outputExpected,
1:70f7692:                                        // This is a hint to the material layer that more write commands will follow.
1:70f7692:                                        // It is ignored by the driver in all cases except when blob data is written,
1:70f7692:                                        // in which case this boolean is used to optimize the implementation.
1:70f7692:                                        // Otherwise we wouldn't be able to chain after blob data is sent.
1:70f7692:                                        // Current servers have a restriction that blobs can only be chained with blobs
1:70f7692:                                        // Can the blob code
1:70f7692:                                        boolean chainedWritesFollowingSetLob) throws SqlException;
1:70f7692: 
1:70f7692: 
1:70f7692:     public abstract void readExecute_() throws SqlException;
1:70f7692: 
1:70f7692:     public abstract void writeOpenQuery_(Section section,
1:70f7692:                                          int fetchSize,
1:70f7692:                                          int resultSetType,
1:70f7692:                                          int numInputColumns,
1:70f7692:                                          ColumnMetaData parameterMetaData,
1:70f7692:                                          Object[] inputs) throws SqlException;
1:70f7692: 
1:70f7692:     public abstract void writeDescribeInput_(Section section) throws SqlException;
1:70f7692: 
1:70f7692:     public abstract void readDescribeInput_() throws SqlException;
1:33776ff: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:b565f41
/////////////////////////////////////////////////////////////////////////
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:70f7692
/////////////////////////////////////////////////////////////////////////
1: public interface MaterialPreparedStatement extends MaterialStatement {
1:     // ------------------------ abstract box car and callback methods --------------------------------
1:     public abstract void writeExecute_(Section section,
1:                                        ColumnMetaData parameterMetaData,
1:                                        Object[] inputs,
1:                                        int numInputColumns,
1:                                        boolean outputExpected,
1:                                        // This is a hint to the material layer that more write commands will follow.
1:                                        // It is ignored by the driver in all cases except when blob data is written,
1:                                        // in which case this boolean is used to optimize the implementation.
1:                                        // Otherwise we wouldn't be able to chain after blob data is sent.
1:                                        // Current servers have a restriction that blobs can only be chained with blobs
1:                                        // Can the blob code
1:                                        boolean chainedWritesFollowingSetLob) throws SqlException;
1: 
1:     public abstract void readExecute_() throws SqlException;
1: 
1:     public abstract void writeOpenQuery_(Section section,
1:                                          int fetchSize,
1:                                          int resultSetType,
1:                                          int numInputColumns,
1:                                          ColumnMetaData parameterMetaData,
1:                                          Object[] inputs) throws SqlException;
1: 
1:     public abstract void writeDescribeInput_(Section section) throws SqlException;
1: 
1:     public abstract void readDescribeInput_() throws SqlException;
1: 
0:     public abstract void writeDescribeOutput_(Section section) throws SqlException;
1: 
0:     public abstract void readDescribeOutput_() throws SqlException;
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.am.MaterialPreparedStatement
1: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.client.am;
1: 
0: import org.apache.derby.client.am.Section;
1: 
0: public interface MaterialPreparedStatement extends MaterialStatement
0: {
1: 
1: 
0:   // ------------------------ abstract box car and callback methods --------------------------------
1: 
0:   public abstract void writeExecute_ (Section section,
0:                             ColumnMetaData parameterMetaData,
0:                             Object[] inputs,
0:                             int numInputColumns,
0:                             boolean outputExpected,
0:                             // This is a hint to the material layer that more write commands will follow.
0:                             // It is ignored by the driver in all cases except when blob data is written,
0:                             // in which case this boolean is used to optimize the implementation.
0:                             // Otherwise we wouldn't be able to chain after blob data is sent.
0:                             // Current servers have a restriction that blobs can only be chained with blobs
0:                             // Can the blob code
0:                             boolean chainedWritesFollowingSetLob
0:                             ) throws SqlException;
1: 
1: 
0:   public abstract void readExecute_ () throws SqlException;
1: 
0:   public abstract void writeOpenQuery_ (Section section,
0:                               int fetchSize,
0:                               int resultSetType,
0:                               int numInputColumns,
0:                               ColumnMetaData parameterMetaData,
0:                               Object[] inputs
0:                               ) throws SqlException;
0:   public abstract void writeDescribeInput_ (Section section) throws SqlException;
0:   public abstract void readDescribeInput_ () throws SqlException;
1: 
0:   public abstract void writeDescribeOutput_ (Section section) throws SqlException;
0:   public abstract void readDescribeOutput_ () throws SqlException;
1: }
============================================================================