1:33776ff: /*
4:33776ff: 
1:33776ff:    Derby - Class org.apache.derby.client.am.StatementCallbackInterface
1:33776ff: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:33776ff: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:33776ff: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:33776ff: 
1:33776ff: */
1:33776ff: 
1:33776ff: package org.apache.derby.client.am;
1:70f7692: 
1:33776ff: 
1:33776ff: 
1:33776ff: // Methods implemented by the common Statement class to handle
1:33776ff: // certain events that may originate from the material or common layers.
1:33776ff: //
1:33776ff: // Reply implementations may update statement state via this interface.
1:33776ff: //
1:33776ff: 
1:ad94e28: public interface StatementCallbackInterface extends UnitOfWorkListener {
1:70f7692:     // A query has been opened on the server.
1:69e3d06:     public void completeOpenQuery(Sqlca sqlca, ClientResultSet resultSet)
1:69e3d06:             throws DisconnectException;
1:33776ff: 
1:69e3d06:     public void completeExecuteCallOpenQuery(
1:69e3d06:         Sqlca sqlca,
1:69e3d06:         ClientResultSet resultSet,
1:69e3d06:         ColumnMetaData resultSetMetaData,
1:69e3d06:         Section generatedSection);
1:33776ff: 
1:70f7692:     // Chains a warning onto the statement.
1:70f7692:     public void accumulateWarning(SqlWarning e);
1:33776ff: 
1:70f7692:     public void completePrepare(Sqlca sqlca);
1:33776ff: 
1:70f7692:     public void completePrepareDescribeOutput(ColumnMetaData columnMetaData, Sqlca sqlca);
1:70f7692: 
1:70f7692:     public void completeExecuteImmediate(Sqlca sqlca);
1:70f7692: 
1:70f7692:     public void completeExecuteSetStatement(Sqlca sqlca);
1:33776ff: 
1:33776ff: 
1:70f7692:     public void completeExecute(Sqlca sqlca);
1:33776ff: 
1:69e3d06:     public void completeExecuteCall(
1:69e3d06:         Sqlca sqlca,
1:69e3d06:         Cursor params,
1:69e3d06:         ClientResultSet[] resultSets);
1:33776ff: 
1:70f7692:     public void completeExecuteCall(Sqlca sqlca, Cursor params);
1:70f7692: 
1:70f7692:     public int completeSqlca(Sqlca sqlca);
1:70f7692: 
1:70f7692:     public ConnectionCallbackInterface getConnectionCallbackInterface();
1:33776ff: 
1:70f7692:     public ColumnMetaData getGuessedResultSetMetaData();
1:33776ff: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:69e3d06
/////////////////////////////////////////////////////////////////////////
1:     public void completeOpenQuery(Sqlca sqlca, ClientResultSet resultSet)
1:             throws DisconnectException;
1:     public void completeExecuteCallOpenQuery(
1:         Sqlca sqlca,
1:         ClientResultSet resultSet,
1:         ColumnMetaData resultSetMetaData,
1:         Section generatedSection);
/////////////////////////////////////////////////////////////////////////
1:     public void completeExecuteCall(
1:         Sqlca sqlca,
1:         Cursor params,
1:         ClientResultSet[] resultSets);
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:ad94e28
/////////////////////////////////////////////////////////////////////////
1: public interface StatementCallbackInterface extends UnitOfWorkListener {
/////////////////////////////////////////////////////////////////////////
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:70f7692
/////////////////////////////////////////////////////////////////////////
1: 
0: public interface StatementCallbackInterface {
1:     // A query has been opened on the server.
0:     public void completeOpenQuery(Sqlca sqlca, ResultSet resultSet) throws DisconnectException;
0:     public void completeExecuteCallOpenQuery(Sqlca sqlca, ResultSet resultSet, ColumnMetaData resultSetMetaData, Section generatedSection);
1:     // Chains a warning onto the statement.
1:     public void accumulateWarning(SqlWarning e);
1:     public void completePrepare(Sqlca sqlca);
1:     public void completePrepareDescribeOutput(ColumnMetaData columnMetaData, Sqlca sqlca);
1: 
1:     public void completeExecuteImmediate(Sqlca sqlca);
1: 
1:     public void completeExecuteSetStatement(Sqlca sqlca);
1:     public void completeExecute(Sqlca sqlca);
0:     public void completeExecuteCall(Sqlca sqlca, Cursor params, ResultSet[] resultSets);
1:     public void completeExecuteCall(Sqlca sqlca, Cursor params);
1:     public int completeSqlca(Sqlca sqlca);
1: 
1:     public ConnectionCallbackInterface getConnectionCallbackInterface();
1: 
1:     public ColumnMetaData getGuessedResultSetMetaData();
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.am.StatementCallbackInterface
1: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.client.am;
1: 
0: import org.apache.derby.client.am.Section;
1: 
1: // Methods implemented by the common Statement class to handle
1: // certain events that may originate from the material or common layers.
1: //
1: // Reply implementations may update statement state via this interface.
1: //
0: public interface StatementCallbackInterface
0: {
0:   // A query has been opened on the server.
0:   public void completeOpenQuery (Sqlca sqlca, ResultSet resultSet) throws DisconnectException;
0:   public void completeExecuteCallOpenQuery (Sqlca sqlca, ResultSet resultSet, ColumnMetaData resultSetMetaData, Section generatedSection);
1: 
0:   // Chains a warning onto the statement.
0:   public void accumulateWarning (SqlWarning e);
1: 
0:   public void completePrepare (Sqlca sqlca);
1: 
0:   public void completePrepareDescribeOutput (ColumnMetaData columnMetaData, Sqlca sqlca);
1: 
0:   public void completeExecuteImmediate (Sqlca sqlca);
1: 
0:   public void completeExecuteSetStatement (Sqlca sqlca);
1: 
1: 
0:   public void completeExecute (Sqlca sqlca);
0:   public void completeExecuteCall (Sqlca sqlca, Cursor params, ResultSet[] resultSets);
0:   public void completeExecuteCall (Sqlca sqlca, Cursor params);
1: 
0:   public int completeSqlca (Sqlca sqlca);
1: 
0:   public ConnectionCallbackInterface getConnectionCallbackInterface ();
1: 
0:   public ColumnMetaData getGuessedResultSetMetaData ();
1: 
1: 
1: }
============================================================================