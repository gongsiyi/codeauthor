1:b350a56: /*
2:b350a56:  *
1:b350a56:  * Derby - Class JDBCClient
1:b350a56:  *
1:15651f5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:15651f5:  * contributor license agreements.  See the NOTICE file distributed with
1:15651f5:  * this work for additional information regarding copyright ownership.
1:15651f5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:15651f5:  * (the "License"); you may not use this file except in compliance with
1:15651f5:  * the License.  You may obtain a copy of the License at
1:b350a56:  *
1:b350a56:  *    http://www.apache.org/licenses/LICENSE-2.0
1:b350a56:  *
1:b350a56:  * Unless required by applicable law or agreed to in writing, 
1:b350a56:  * software distributed under the License is distributed on an 
1:b350a56:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:b350a56:  * either express or implied. See the License for the specific 
1:b350a56:  * language governing permissions and limitations under the License.
2:b350a56:  */
1:3bd1dd8: package org.apache.derbyTesting.junit;
2:b350a56: 
1:cef7d1e: import junit.framework.Assert;
1:cef7d1e: 
2:b350a56: /**
1:b350a56:  * Type-safe enumerator of valid JDBC clients.
1:b350a56:  * Each JDBC client definition consists of the client name, the name of the
1:b350a56:  * JDBC driver class, the name of a DataSource class and the base JDBC url.
1:b350a56:  */
1:b350a56: public final class JDBCClient {
1:b350a56: 
1:b350a56:     /**
1:b350a56:      * The embedded JDBC client.
1:b350a56:      */
1:d15f717:     public static final JDBCClient EMBEDDED_30= new JDBCClient(
1:cef7d1e:             "Embedded_30", 
1:b350a56:             "org.apache.derby.jdbc.EmbeddedDriver", 
1:b350a56:             "org.apache.derby.jdbc.EmbeddedDataSource", 
1:cef7d1e:             "org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource",
1:cef7d1e:             "org.apache.derby.jdbc.EmbeddedXADataSource",
1:b350a56:             "jdbc:derby:");
1:cef7d1e:     
1:cef7d1e:     /**
1:cef7d1e:      * The embedded JDBC client for JDBC 4.0.
1:cef7d1e:      */
1:8e20531:     static final JDBCClient EMBEDDED_40 = new JDBCClient(
1:cef7d1e:             "Embedded_40", 
1:cef7d1e:             "org.apache.derby.jdbc.EmbeddedDriver", 
1:c35e4f0: 
1:c35e4f0:             JDBC.vmSupportsJNDI() ?
1:a086620:             "org.apache.derby.jdbc.EmbeddedDataSource":
1:38667d9:             "org.apache.derby.jdbc.BasicEmbeddedDataSource40",
1:c35e4f0: 
1:c35e4f0:             JDBC.vmSupportsJNDI() ?
1:a086620:             "org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource":
1:38667d9:             "org.apache.derby.jdbc.BasicEmbeddedConnectionPoolDataSource40",
1:c35e4f0: 
1:c35e4f0:             JDBC.vmSupportsJNDI() ?
1:a086620:             "org.apache.derby.jdbc.EmbeddedXADataSource":
1:38667d9:             "org.apache.derby.jdbc.BasicEmbeddedXADataSource40",
1:c35e4f0: 
1:cef7d1e:             "jdbc:derby:");
1:cef7d1e:     
1:cef7d1e:     /**
1:df4020d:      * Return the default embedded client for this JVM.
1:cef7d1e:      */
1:cef7d1e:     static JDBCClient getDefaultEmbedded()
1:cef7d1e:     {
1:cef7d1e:         if (JDBC.vmSupportsJDBC4())
1:cef7d1e:             return EMBEDDED_40;
1:7a5b1d0:         if (JDBC.vmSupportsJDBC3())
1:cef7d1e:             return EMBEDDED_30;
1:cef7d1e:         
1:cef7d1e:         Assert.fail("Unknown JVM environment");
1:cef7d1e:         return null;
1:cef7d1e:     }
1:cef7d1e:     
1:cef7d1e:     /**
1:b350a56:      * The Derby network client.
1:cef7d1e:      */
1:25c1e7b:     public static final JDBCClient DERBYNETCLIENT= new JDBCClient(
1:b350a56:             "DerbyNetClient",
1:b350a56:             "org.apache.derby.jdbc.ClientDriver",
1:c35e4f0: 
1:cef7d1e:             JDBC.vmSupportsJDBC4() ?
1:c35e4f0:             (JDBC.vmSupportsJNDI() ?
1:cef7d1e:             "org.apache.derby.jdbc.ClientDataSource40" :
1:38667d9:             "org.apache.derby.jdbc.BasicClientDataSource40") :
1:c35e4f0:              "org.apache.derby.jdbc.ClientDataSource",
1:c35e4f0: 
1:cef7d1e:             JDBC.vmSupportsJDBC4() ?
1:c35e4f0:             (JDBC.vmSupportsJNDI() ?
1:cef7d1e:             "org.apache.derby.jdbc.ClientConnectionPoolDataSource40" :
1:38667d9:             "org.apache.derby.jdbc.BasicClientConnectionPoolDataSource40") :
1:cef7d1e:             "org.apache.derby.jdbc.ClientConnectionPoolDataSource",
1:c35e4f0: 
1:cef7d1e:             JDBC.vmSupportsJDBC4() ?
1:c35e4f0:             (JDBC.vmSupportsJNDI() ?
1:cef7d1e:             "org.apache.derby.jdbc.ClientXADataSource40" :
1:38667d9:             "org.apache.derby.jdbc.BasicClientXADataSource40") :
1:cef7d1e:             "org.apache.derby.jdbc.ClientXADataSource",
1:c35e4f0: 
1:b350a56:             "jdbc:derby://");
1:b350a56:     
1:8fcae92:     static final JDBCClient DERBYNETCLIENT_30 = new JDBCClient(
1:8fcae92:             "DerbyNetClient",
1:8fcae92:             "org.apache.derby.jdbc.ClientDriver",
1:8fcae92:             "org.apache.derby.jdbc.ClientDataSource",
1:8fcae92:             "org.apache.derby.jdbc.ClientConnectionPoolDataSource",
1:8fcae92:             "org.apache.derby.jdbc.ClientXADataSource",
1:8fcae92:             "jdbc:derby://");
1:8fcae92: 
1:b350a56:     /**
1:00bbcf1:      * The DB2 Universal JDBC network client.
1:cd1bd2a:      * AKA: JCC or DB2 client (was called DerbyNet earlier, the "old net"
1:cd1bd2a:      * client for Derby).
1:b350a56:      */
1:00bbcf1:     static final JDBCClient DB2CLIENT= new JDBCClient(
1:cd1bd2a:             "DB2Client",
1:b350a56:             "com.ibm.db2.jcc.DB2Driver",
1:cef7d1e:             null, null, null,
1:b350a56:             "jdbc:derby:net://");
1:b350a56:     
1:b350a56:     /**
1:00bbcf1:      * Is this the embdded client.
1:00bbcf1:     */
1:00bbcf1:     public boolean isEmbedded()
1:00bbcf1:     {
1:cef7d1e:     	return getName().startsWith("Embedded");
1:00bbcf1:     }
1:00bbcf1:     /**
1:00bbcf1:      * Is this Derby's network client.
1:00bbcf1:      */
1:00bbcf1:     public boolean isDerbyNetClient()
1:00bbcf1:     {
1:00bbcf1:     	return getName().equals(DERBYNETCLIENT.getName());
1:00bbcf1:     }
1:00bbcf1:     /**
1:00bbcf1:      * Is this DB2's Universal JDBC 
1:00bbcf1:      */
1:00bbcf1:     public boolean isDB2Client()
1:00bbcf1:     {
1:00bbcf1:     	return getName().equals(DB2CLIENT.getName());
1:00bbcf1:     }
1:00bbcf1:     
1:00bbcf1:     /**
1:00bbcf1:      * Get the name of the client
1:00bbcf1:      */
1:00bbcf1:     public String getName()
1:00bbcf1:     {
1:00bbcf1:     	return frameWork;
1:00bbcf1:     }
1:00bbcf1:     
1:00bbcf1:     /**
1:b350a56:      * Get JDBC driver class name.
1:b350a56:      * 
1:b350a56:      * @return class name for JDBC driver.
1:b350a56:      */
1:b350a56:     public String getJDBCDriverName() {
1:b350a56:         return driverClassName;
1:b350a56:     }
1:b350a56: 
1:b350a56:     /**
1:b350a56:      * Get DataSource class name.
1:b350a56:      * 
1:b350a56:      * @return class name for DataSource implementation.
1:b350a56:      */
1:b350a56:     public String getDataSourceClassName() {
1:b350a56:         return dsClassName;
1:b350a56:     }
1:b350a56: 
1:b350a56:     /**
1:cef7d1e:      * Get ConnectionPoolDataSource class name.
1:cef7d1e:      *
1:cef7d1e:      * @return class name for ConnectionPoolDataSource implementation.
1:cef7d1e:      */
1:cef7d1e:     public String getConnectionPoolDataSourceClassName() {
1:cef7d1e:         return poolDsClassName;
1:cef7d1e:     }
1:cef7d1e: 
1:cef7d1e:     /**
1:cef7d1e:      * Get XADataSource class name.
1:cef7d1e:      *
1:cef7d1e:      * @return class name for XADataSource implementation.
1:cef7d1e:      */
1:cef7d1e:     public String getXADataSourceClassName() {
1:cef7d1e:         return xaDsClassName;
1:cef7d1e:     }
1:cef7d1e: 
1:cef7d1e:     /**
1:b350a56:      * Return the base JDBC url.
1:b350a56:      * The JDBC base url specifies the protocol and possibly the subprotcol
1:b350a56:      * in the JDBC connection string.
1:b350a56:      * 
1:b350a56:      * @return JDBC base url.
1:b350a56:      */
1:b350a56:     public String getUrlBase() {
1:b350a56:         return urlBase;
1:b350a56:     }
1:b350a56:     
1:b350a56:     /**
1:b350a56:      * Return string representation of this object.
1:b350a56:      * 
1:b350a56:      * @return string representation of this object.
1:b350a56:      */
1:b350a56:     public String toString() {
1:b350a56:         return frameWork;
1:b350a56:     }
1:b350a56:     
1:b350a56:     /**
1:b350a56:      * Create a JDBC client definition.
1:b350a56:      */
1:b350a56:     private JDBCClient(String frameWork, String driverClassName,
1:cef7d1e:                        String dataSourceClassName,
1:cef7d1e:                        String connectionPoolDataSourceClassName,
1:cef7d1e:                        String xaDataSourceClassName,
1:cef7d1e:                        String urlBase) {
1:b350a56:         this.frameWork          = frameWork;
1:b350a56:         this.driverClassName    = driverClassName;
1:b350a56:         this.dsClassName        = dataSourceClassName;
1:cef7d1e:         this.poolDsClassName    = connectionPoolDataSourceClassName;
1:cef7d1e:         this.xaDsClassName      = xaDataSourceClassName;
1:b350a56:         this.urlBase            = urlBase;
1:b350a56:     }
1:b350a56:     
1:b350a56:     private final String frameWork;
1:b350a56:     private final String driverClassName;
1:b350a56:     private final String dsClassName;
1:cef7d1e:     private final String poolDsClassName;
1:cef7d1e:     private final String xaDsClassName;
1:b350a56:     private final String urlBase;
1:b350a56:     
1:b350a56: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:a086620
/////////////////////////////////////////////////////////////////////////
1:             "org.apache.derby.jdbc.EmbeddedDataSource":
1:             "org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource":
1:             "org.apache.derby.jdbc.EmbeddedXADataSource":
commit:38667d9
/////////////////////////////////////////////////////////////////////////
1:             "org.apache.derby.jdbc.BasicEmbeddedDataSource40",
1:             "org.apache.derby.jdbc.BasicEmbeddedConnectionPoolDataSource40",
1:             "org.apache.derby.jdbc.BasicEmbeddedXADataSource40",
/////////////////////////////////////////////////////////////////////////
1:             "org.apache.derby.jdbc.BasicClientDataSource40") :
1:             "org.apache.derby.jdbc.BasicClientConnectionPoolDataSource40") :
1:             "org.apache.derby.jdbc.BasicClientXADataSource40") :
commit:c35e4f0
/////////////////////////////////////////////////////////////////////////
1: 
1:             JDBC.vmSupportsJNDI() ?
0:             "org.apache.derby.jdbc.EmbeddedDataSource40":
0:             "org.apache.derby.jdbc.NonJNDIEmbeddedDataSource40",
1: 
1:             JDBC.vmSupportsJNDI() ?
0:             "org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40":
0:             "org.apache.derby.jdbc.NonJNDIEmbeddedConnectionPoolDataSource40",
1: 
1:             JDBC.vmSupportsJNDI() ?
0:             "org.apache.derby.jdbc.EmbeddedXADataSource40":
0:             "org.apache.derby.jdbc.NonJNDIEmbeddedXADataSource40",
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:             (JDBC.vmSupportsJNDI() ?
0:             "org.apache.derby.jdbc.NonJNDIClientDataSource40") :
1:              "org.apache.derby.jdbc.ClientDataSource",
1: 
1:             (JDBC.vmSupportsJNDI() ?
0:             "org.apache.derby.jdbc.NonJNDIClientConnectionPoolDataSource40") :
1: 
1:             (JDBC.vmSupportsJNDI() ?
0:             "org.apache.derby.jdbc.NonJNDIClientXADataSource40") :
1: 
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:2e4b1b1
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:25c1e7b
/////////////////////////////////////////////////////////////////////////
1:     public static final JDBCClient DERBYNETCLIENT= new JDBCClient(
commit:d15f717
/////////////////////////////////////////////////////////////////////////
1:     public static final JDBCClient EMBEDDED_30= new JDBCClient(
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:7a5b1d0
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJDBC3())
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:cd1bd2a
/////////////////////////////////////////////////////////////////////////
1:      * AKA: JCC or DB2 client (was called DerbyNet earlier, the "old net"
1:      * client for Derby).
1:             "DB2Client",
author:Army
-------------------------------------------------------------------------------
commit:8fcae92
/////////////////////////////////////////////////////////////////////////
1:     static final JDBCClient DERBYNETCLIENT_30 = new JDBCClient(
1:             "DerbyNetClient",
1:             "org.apache.derby.jdbc.ClientDriver",
1:             "org.apache.derby.jdbc.ClientDataSource",
1:             "org.apache.derby.jdbc.ClientConnectionPoolDataSource",
1:             "org.apache.derby.jdbc.ClientXADataSource",
1:             "jdbc:derby://");
1: 
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:df4020d
/////////////////////////////////////////////////////////////////////////
1:      * Return the default embedded client for this JVM.
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:15651f5
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:8e20531
/////////////////////////////////////////////////////////////////////////
0:     static final JDBCClient EMBEDDED_30= new JDBCClient(
/////////////////////////////////////////////////////////////////////////
1:     static final JDBCClient EMBEDDED_40 = new JDBCClient(
commit:cef7d1e
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Assert;
1: 
/////////////////////////////////////////////////////////////////////////
0:     private static final JDBCClient EMBEDDED_30= new JDBCClient(
1:             "Embedded_30", 
1:             "org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource",
1:             "org.apache.derby.jdbc.EmbeddedXADataSource",
1:      * The embedded JDBC client for JDBC 4.0.
1:      */
0:     private static final JDBCClient EMBEDDED_40 = new JDBCClient(
1:             "Embedded_40", 
1:             "org.apache.derby.jdbc.EmbeddedDriver", 
0:             "org.apache.derby.jdbc.EmbeddedDataSource40", 
0:             "org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40",
0:             "org.apache.derby.jdbc.EmbeddedXADataSource40",
1:             "jdbc:derby:");
1:     
1:     /**
0:      * The embedded JDBC client for JSR 169
1:      */
0:     private static final JDBCClient EMBEDDED_169 = new JDBCClient(
0:             "Embedded_169", 
0:             null, // No driver
0:             "org.apache.derby.jdbc.EmbeddedSimpleDataSource", 
0:             null, // No connection pooling
0:             null, // No XA
0:             null); // No JDBC URLs
1:     
1:     /**
0:      * Get the default embedded client for this JVM.
0:      * @return
1:      */
1:     static JDBCClient getDefaultEmbedded()
1:     {
1:         if (JDBC.vmSupportsJDBC4())
1:             return EMBEDDED_40;
0:         if (JDBC.vmSupportsJDBC2())
1:             return EMBEDDED_30;
0:         if (JDBC.vmSupportsJSR169())
0:             return EMBEDDED_169;
1:         
1:         Assert.fail("Unknown JVM environment");
1:         return null;
1:     }
1:     
1:     /**
1:             JDBC.vmSupportsJDBC4() ?
1:             "org.apache.derby.jdbc.ClientDataSource40" :
1:             JDBC.vmSupportsJDBC4() ?
1:             "org.apache.derby.jdbc.ClientConnectionPoolDataSource40" :
1:             "org.apache.derby.jdbc.ClientConnectionPoolDataSource",
1:             JDBC.vmSupportsJDBC4() ?
1:             "org.apache.derby.jdbc.ClientXADataSource40" :
1:             "org.apache.derby.jdbc.ClientXADataSource",
/////////////////////////////////////////////////////////////////////////
1:             null, null, null,
/////////////////////////////////////////////////////////////////////////
1:     	return getName().startsWith("Embedded");
/////////////////////////////////////////////////////////////////////////
1:      * Get ConnectionPoolDataSource class name.
1:      *
1:      * @return class name for ConnectionPoolDataSource implementation.
1:      */
1:     public String getConnectionPoolDataSourceClassName() {
1:         return poolDsClassName;
1:     }
1: 
1:     /**
1:      * Get XADataSource class name.
1:      *
1:      * @return class name for XADataSource implementation.
1:      */
1:     public String getXADataSourceClassName() {
1:         return xaDsClassName;
1:     }
1: 
1:     /**
/////////////////////////////////////////////////////////////////////////
1:                        String dataSourceClassName,
1:                        String connectionPoolDataSourceClassName,
1:                        String xaDataSourceClassName,
1:                        String urlBase) {
1:         this.poolDsClassName    = connectionPoolDataSourceClassName;
1:         this.xaDsClassName      = xaDataSourceClassName;
1:     private final String poolDsClassName;
1:     private final String xaDsClassName;
commit:3bd1dd8
/////////////////////////////////////////////////////////////////////////
1: package org.apache.derbyTesting.junit;
commit:00bbcf1
/////////////////////////////////////////////////////////////////////////
0:     static final JDBCClient EMBEDDED = new JDBCClient(
/////////////////////////////////////////////////////////////////////////
0:     static final JDBCClient DERBYNETCLIENT= new JDBCClient(
1:      * The DB2 Universal JDBC network client.
0:      * AKA: JCC or DerbyNet.
0:      * (the "old net" client for Derby).
1:     static final JDBCClient DB2CLIENT= new JDBCClient(
1:      * Is this the embdded client.
1:     */
1:     public boolean isEmbedded()
1:     {
0:     	return getName().equals(EMBEDDED.getName());
1:     }
1:     /**
1:      * Is this Derby's network client.
0:      * @return
1:      */
1:     public boolean isDerbyNetClient()
1:     {
1:     	return getName().equals(DERBYNETCLIENT.getName());
1:     }
1:     /**
1:      * Is this DB2's Universal JDBC 
0:      * @return
1:      */
1:     public boolean isDB2Client()
1:     {
1:     	return getName().equals(DB2CLIENT.getName());
1:     }
1:     
1:     /**
1:      * Get the name of the client
1:      */
1:     public String getName()
1:     {
1:     	return frameWork;
1:     }
1:     
1:     /**
author:David Van Couvering
-------------------------------------------------------------------------------
commit:b350a56
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Derby - Class JDBCClient
1:  *
0:  * Copyright 2006 The Apache Software Foundation or its 
0:  * licensors, as applicable.
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, 
1:  * software distributed under the License is distributed on an 
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:  * either express or implied. See the License for the specific 
1:  * language governing permissions and limitations under the License.
1:  */
0: package org.apache.derbyTesting.functionTests.util;
1: 
1: /**
1:  * Type-safe enumerator of valid JDBC clients.
1:  * Each JDBC client definition consists of the client name, the name of the
1:  * JDBC driver class, the name of a DataSource class and the base JDBC url.
1:  */
1: public final class JDBCClient {
1: 
1:     /**
1:      * The embedded JDBC client.
1:      */
0:     public static JDBCClient EMBEDDED = new JDBCClient(
0:             "Embedded", 
1:             "org.apache.derby.jdbc.EmbeddedDriver", 
1:             "org.apache.derby.jdbc.EmbeddedDataSource", 
1:             "jdbc:derby:");
1:     
1:     /**
1:      * The Derby network client.
1:      */
0:     public static JDBCClient DERBYNETCLIENT= new JDBCClient(
1:             "DerbyNetClient",
1:             "org.apache.derby.jdbc.ClientDriver",
0:             "org.apache.derby.jdbc.ClientDataSource",
1:             "jdbc:derby://");
1:     
1:     /**
0:      * The JCC network client (the "old net" client for Derby).
1:      */
0:     public static JDBCClient DERBYNET= new JDBCClient(
0:             "DerbyNet",
1:             "com.ibm.db2.jcc.DB2Driver",
0:             null,
1:             "jdbc:derby:net://");
1:     
1:     /**
1:      * Get JDBC driver class name.
1:      * 
1:      * @return class name for JDBC driver.
1:      */
1:     public String getJDBCDriverName() {
1:         return driverClassName;
1:     }
1: 
1:     /**
1:      * Get DataSource class name.
1:      * 
1:      * @return class name for DataSource implementation.
1:      */
1:     public String getDataSourceClassName() {
1:         return dsClassName;
1:     }
1: 
1:     /**
1:      * Return the base JDBC url.
1:      * The JDBC base url specifies the protocol and possibly the subprotcol
1:      * in the JDBC connection string.
1:      * 
1:      * @return JDBC base url.
1:      */
1:     public String getUrlBase() {
1:         return urlBase;
1:     }
1:     
1:     /**
1:      * Return string representation of this object.
1:      * 
1:      * @return string representation of this object.
1:      */
1:     public String toString() {
1:         return frameWork;
1:     }
1:     
1:     /**
1:      * Create a JDBC client definition.
1:      */
1:     private JDBCClient(String frameWork, String driverClassName,
0:                        String dataSourceClassName, String urlBase) {
1:         this.frameWork          = frameWork;
1:         this.driverClassName    = driverClassName;
1:         this.dsClassName        = dataSourceClassName;
1:         this.urlBase            = urlBase;
1:     }
1:     
1:     private final String frameWork;
1:     private final String driverClassName;
1:     private final String dsClassName;
1:     private final String urlBase;
1:     
1: }
============================================================================