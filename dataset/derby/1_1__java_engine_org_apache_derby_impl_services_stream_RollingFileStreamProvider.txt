1:24d620a: /*
1:24d620a: 
1:24d620a:  Derby - Class org.apache.derby.iapi.services.stream.RollingFileStreamProvider
1:24d620a: 
1:24d620a:  Licensed to the Apache Software Foundation (ASF) under one or more
1:24d620a:  contributor license agreements.  See the NOTICE file distributed with
1:24d620a:  this work for additional information regarding copyright ownership.
1:24d620a:  The ASF licenses this file to You under the Apache License, Version 2.0
1:24d620a:  (the "License"); you may not use this file except in compliance with
1:24d620a:  the License.  You may obtain a copy of the License at
1:24d620a: 
1:24d620a:  http://www.apache.org/licenses/LICENSE-2.0
1:24d620a: 
1:24d620a:  Unless required by applicable law or agreed to in writing, software
1:24d620a:  distributed under the License is distributed on an "AS IS" BASIS,
1:24d620a:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:24d620a:  See the License for the specific language governing permissions and
1:24d620a:  limitations under the License.
1:24d620a: 
1:24d620a:  */
1:24d620a: package org.apache.derby.impl.services.stream;
1:24d620a: 
1:24d620a: import java.io.IOException;
1:24d620a: import java.io.OutputStream;
1:24d620a: import org.apache.derby.iapi.reference.Property;
1:24d620a: import org.apache.derby.iapi.services.property.PropertyUtil;
1:24d620a: 
1:24d620a: /**
1:24d620a:  * Creates and configures a RollingFileStream
1:24d620a:  *
1:24d620a:  * @author brett
1:24d620a:  */
1:24d620a: public class RollingFileStreamProvider {
1:24d620a: 
1:24d620a:     /**
1:24d620a:      * Creates and returns the OutputStream for a RollingFileStream.
1:24d620a:      * The <tt>derbylog.properties</tt> file contains the configuration. If the
1:24d620a:      * file is not found, then hard coded default values are used to configure
1:24d620a:      * the RollingFileStream. <p>The following properties can be specified <dl>
1:24d620a:      * <dt>pattern</dt> <dd>The pattern to use, the default is
1:24d620a:      * <tt>%d/derby-%g.log</tt></dd> <dt>limit</dt> <dd>The file size limit, the
1:24d620a:      * default is <tt>1024000</tt></dd> <dt>count</dt> <dd>The file count, the
1:24d620a:      * default is <tt>10</tt></dd> <dt>append</dt> <dd>If true the last logfile
1:24d620a:      * is appended to, the default is <tt>true</tt></dd>
1:24d620a:      *
1:24d620a:      * @return The configured OutputStream
1:24d620a:      * @throws IOException
1:24d620a:      * @throws SecurityException  
1:24d620a:      */
1:24d620a:     public static OutputStream getOutputStream() throws IOException, SecurityException {
1:24d620a:         OutputStream res = null;
1:24d620a: 
1:24d620a:         String pattern = PropertyUtil.getSystemProperty(Property.ERRORLOG_ROLLINGFILE_PATTERN_PROPERTY, "%d/derby-%g.log");
1:24d620a:         int limit = Integer.parseInt(PropertyUtil.getSystemProperty(Property.ERRORLOG_ROLLINGFILE_LIMIT_PROPERTY, "1024000"));
1:24d620a:         int count = Integer.parseInt(PropertyUtil.getSystemProperty(Property.ERRORLOG_ROLLINGFILE_COUNT_PROPERTY, "10"));
1:24d620a:         boolean append = Boolean.parseBoolean(PropertyUtil.getSystemProperty(Property.LOG_FILE_APPEND, "true"));
1:24d620a: 
1:24d620a:         RollingFileStream rfh = new RollingFileStream(pattern, limit, count, append);
1:24d620a:         res = rfh;
1:24d620a: 
1:24d620a:         return res;
1:24d620a:     }
1:24d620a: }
============================================================================
author:Mamta Satoor
-------------------------------------------------------------------------------
commit:24d620a
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:  Derby - Class org.apache.derby.iapi.services.stream.RollingFileStreamProvider
1: 
1:  Licensed to the Apache Software Foundation (ASF) under one or more
1:  contributor license agreements.  See the NOTICE file distributed with
1:  this work for additional information regarding copyright ownership.
1:  The ASF licenses this file to You under the Apache License, Version 2.0
1:  (the "License"); you may not use this file except in compliance with
1:  the License.  You may obtain a copy of the License at
1: 
1:  http://www.apache.org/licenses/LICENSE-2.0
1: 
1:  Unless required by applicable law or agreed to in writing, software
1:  distributed under the License is distributed on an "AS IS" BASIS,
1:  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  See the License for the specific language governing permissions and
1:  limitations under the License.
1: 
1:  */
1: package org.apache.derby.impl.services.stream;
1: 
1: import java.io.IOException;
1: import java.io.OutputStream;
1: import org.apache.derby.iapi.reference.Property;
1: import org.apache.derby.iapi.services.property.PropertyUtil;
1: 
1: /**
1:  * Creates and configures a RollingFileStream
1:  *
1:  * @author brett
1:  */
1: public class RollingFileStreamProvider {
1: 
1:     /**
1:      * Creates and returns the OutputStream for a RollingFileStream.
1:      * The <tt>derbylog.properties</tt> file contains the configuration. If the
1:      * file is not found, then hard coded default values are used to configure
1:      * the RollingFileStream. <p>The following properties can be specified <dl>
1:      * <dt>pattern</dt> <dd>The pattern to use, the default is
1:      * <tt>%d/derby-%g.log</tt></dd> <dt>limit</dt> <dd>The file size limit, the
1:      * default is <tt>1024000</tt></dd> <dt>count</dt> <dd>The file count, the
1:      * default is <tt>10</tt></dd> <dt>append</dt> <dd>If true the last logfile
1:      * is appended to, the default is <tt>true</tt></dd>
1:      *
1:      * @return The configured OutputStream
1:      * @throws IOException
1:      * @throws SecurityException  
1:      */
1:     public static OutputStream getOutputStream() throws IOException, SecurityException {
1:         OutputStream res = null;
1: 
1:         String pattern = PropertyUtil.getSystemProperty(Property.ERRORLOG_ROLLINGFILE_PATTERN_PROPERTY, "%d/derby-%g.log");
1:         int limit = Integer.parseInt(PropertyUtil.getSystemProperty(Property.ERRORLOG_ROLLINGFILE_LIMIT_PROPERTY, "1024000"));
1:         int count = Integer.parseInt(PropertyUtil.getSystemProperty(Property.ERRORLOG_ROLLINGFILE_COUNT_PROPERTY, "10"));
1:         boolean append = Boolean.parseBoolean(PropertyUtil.getSystemProperty(Property.LOG_FILE_APPEND, "true"));
1: 
1:         RollingFileStream rfh = new RollingFileStream(pattern, limit, count, append);
1:         res = rfh;
1: 
1:         return res;
1:     }
1: }
============================================================================