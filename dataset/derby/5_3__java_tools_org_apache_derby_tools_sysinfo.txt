1:fe77ca5: /*
1:985fc85: 
1:985fc85:    Derby - Class org.apache.derby.tools.sysinfo
1:985fc85: 
1:3dc2ce4:    Licensed to the Apache Software Foundation (ASF) under one or more
1:3dc2ce4:    contributor license agreements.  See the NOTICE file distributed with
1:3dc2ce4:    this work for additional information regarding copyright ownership.
1:3dc2ce4:    The ASF licenses this file to You under the Apache License, Version 2.0
1:3dc2ce4:    (the "License"); you may not use this file except in compliance with
1:3dc2ce4:    the License.  You may obtain a copy of the License at
1:985fc85: 
1:985fc85:       http://www.apache.org/licenses/LICENSE-2.0
1:985fc85: 
1:985fc85:    Unless required by applicable law or agreed to in writing, software
1:985fc85:    distributed under the License is distributed on an "AS IS" BASIS,
1:985fc85:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:985fc85:    See the License for the specific language governing permissions and
1:985fc85:    limitations under the License.
2:fe77ca5: 
2:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: package org.apache.derby.tools;
1:fe77ca5: 
1:fe77ca5: import org.apache.derby.iapi.services.info.ProductVersionHolder;
1:fe77ca5: import org.apache.derby.iapi.services.info.JVMInfo;
1:fe77ca5: import org.apache.derby.impl.tools.sysinfo.Main;
1:fe77ca5: 
2:fe77ca5: /**
1:fe77ca5: 	
1:fe77ca5:    This class displays system information to system out.
1:fe77ca5: 	 
1:fe77ca5: 	To run from the command-line, enter the following:
1:fe77ca5: 	<p>
1:fe77ca5: 	<code>java org.apache.derby.tools.sysinfo</code>
1:fe77ca5: 	<p>
1:fe77ca5: 	<p>
1:fe77ca5: 	Also available on this class are methods which allow you to determine
1:fe77ca5: 	the version of the code for the system without actually booting a database.
1:3abc7d4: 	Please note that this is the Derby version of the .jar files, not of your databases.
1:fe77ca5: 	<p>
1:3abc7d4: 	The numbering scheme for released Derby products is <b><code>m1.m2.m3 </code></b>
1:fe77ca5: 	where <b><code>m1</code></b> is the major release version, <b><code>m2</code></b> is the minor release version,
1:fe77ca5: 	and <b><code>m3</code></b> is the maintenance level. Versions of the product with the same
1:fe77ca5: 	major and minor version numbers are considered feature compatible. 
1:fe77ca5: 	<p>Valid major and minor versions are always greater than zero. Valid maintenance
1:fe77ca5: 	versions are greater than or equal to zero.
1:fe77ca5: 
1:fe77ca5: 
1:fe77ca5: */
1:fe77ca5: public class sysinfo {
1:fe77ca5: 
1:fe77ca5:   static public void main(String[] args) {
1:fe77ca5:     Main.main(args);
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5:   private sysinfo() { // no instances allowed
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 	/**
1:3abc7d4: 		The genus name for the Apache Derby code. Use this to determine the version of the
1:63fbf42: 		Apache Derby embedded code in derby.jar.
1:fe77ca5: 	*/
1:fe77ca5: 	public static final String DBMS="DBMS";
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 	 *	The genus name for the tools code. Use this to determine the version of 
1:63fbf42: 		code in derbytools.jar
1:fe77ca5: 	 */
1:fe77ca5: 	public static final String TOOLS="tools";
1:fe77ca5: 
1:63fbf42: 	/**
1:63fbf42: 	 *	The genus name for the network server code. Use this to determine the version of 
1:63fbf42: 		code in derbynet.jar
1:63fbf42: 	 */
1:63fbf42: 	public static final String NET="net";
1:63fbf42: 
1:63fbf42: 	/**
1:63fbf42: 	 *	The genus name for the client code. Use this to determine the version of 
1:63fbf42: 		code in derbyclient.jar
1:63fbf42: 	 */
1:63fbf42: 	public static final String CLIENT="dnc";
1:63fbf42: 
1:7d9c8c7: 	/**
1:7d9c8c7: 	 *	The genus name for the optional tools code. Use this to determine the version of 
1:7d9c8c7: 		code in derbyoptionaltools.jar
1:7d9c8c7: 	 */
1:7d9c8c7: 	public static final String OPTIONALTOOLS="optionaltools";
1:7d9c8c7: 
1:fe77ca5: 
1:fe77ca5: 	/**
1:3abc7d4: 		gets the major version of the Apache Derby embedded code.
1:fe77ca5: 		@return	the major version. Returns -1 if not found.
1:fe77ca5: 	 */
1:fe77ca5:   static public int getMajorVersion()
1:fe77ca5:   {
1:fe77ca5:     return getMajorVersion(DBMS);
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 		gets the major version of the specified code library. 
1:fe77ca5: 		@param genus	which library to get the version of. Valid inputs include
1:63fbf42: 			DBMS, TOOLS, NET, CLIENT
1:fe77ca5: 		@return the major version. Return -1 if the information is not found. 
1:fe77ca5:     */		
1:fe77ca5:   static public int getMajorVersion(String genus)
1:fe77ca5:   {
1:fe77ca5:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:fe77ca5:         if (pvh == null)
1:fe77ca5:         {
2:fe77ca5:             return -1;
1:fe77ca5:         }
1:fe77ca5: 
1:fe77ca5:         return pvh.getMajorVersion();
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 
1:fe77ca5: 	/**
1:3abc7d4: 		gets the minor version of the Apache Derby embedded code.
1:fe77ca5: 		@return	the minor version. Returns -1 if not found.
1:fe77ca5: 	 */
1:fe77ca5:   static public int getMinorVersion()
1:fe77ca5:   {
1:fe77ca5:     return getMinorVersion(DBMS);
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 		gets the minor version of the specified code library. 
1:fe77ca5: 		@param genus	which library to get the version of. Valid inputs include
1:63fbf42: 			DBMS, TOOLS, NET, CLIENT.
1:fe77ca5: 		@return the minor version. Return -1 if the information is not found. 
1:fe77ca5:     */	
1:fe77ca5:   static public int getMinorVersion(String genus)
1:fe77ca5:   {
1:fe77ca5:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:fe77ca5:         if (pvh == null)
1:fe77ca5:         {
1:fe77ca5:             return -1;
1:fe77ca5:         }
1:fe77ca5: 
1:fe77ca5:         return pvh.getMinorVersion();
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 	/**
1:3abc7d4: 		gets the build number for the Apache Derby embedded library
2:fe77ca5: 		@return the build number, or -1 if the information is not found.
1:fe77ca5: 	*/
1:0a7339d:   static public String getBuildNumber()
1:fe77ca5:   {
1:fe77ca5:     return getBuildNumber("DBMS");
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 		gets the build number for the specified library
1:fe77ca5: 		@param genus which library to get the build number for. Valid inputs are
1:63fbf42: 			DBMS, TOOLS, NET, CLIENT.
1:0a7339d: 		@return the build number, or ???? if the information is not found.
1:fe77ca5: 	*/
1:0a7339d:   static public String getBuildNumber(String genus)
1:fe77ca5:   {
1:fe77ca5:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:fe77ca5:         if (pvh == null)
1:fe77ca5:         {
1:0a7339d:             return "????";
1:fe77ca5:         }
1:fe77ca5: 
1:fe77ca5:         return pvh.getBuildNumber();
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 
1:fe77ca5: 	/**
1:3abc7d4: 		gets the product name for the Apache Derby embedded library
1:fe77ca5: 		@return the name
1:fe77ca5: 	*/
1:fe77ca5:   static public String getProductName()
1:fe77ca5:   {
1:fe77ca5:     return getProductName("DBMS");
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 		gets the external name for the specified code library.
1:fe77ca5: 		@param genus which library to get the name for
1:fe77ca5: 		@return the name.
1:fe77ca5: 	*/
1:fe77ca5: 
1:fe77ca5:   static public String getProductName(String genus)
1:fe77ca5:   {
1:fe77ca5:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:fe77ca5:         if (pvh == null)
1:fe77ca5:         {
1:fe77ca5:             return Main.getTextMessage ("SIF01.K");
1:fe77ca5:         }
1:fe77ca5: 
1:fe77ca5:         return pvh.getProductName();
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5:   /**
1:fe77ca5: 	Return the version information string for the specified library including alpha or beta indicators.
1:fe77ca5:   */
1:fe77ca5:   static public String getVersionString() {
1:fe77ca5: 	return getVersionString(DBMS);
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5:   /**
1:3abc7d4: 	Return the version information string for the Apache Derby embedded library including alpha or beta indicators.
1:fe77ca5:   */
1:fe77ca5:   static public String getVersionString(String genus) {
1:fe77ca5: 
1:fe77ca5:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:fe77ca5:         if (pvh == null)
1:fe77ca5:         {
1:fe77ca5:             return Main.getTextMessage ("SIF01.K");
1:fe77ca5:         }
1:fe77ca5: 		
1:fe77ca5: 		return pvh.getVersionBuildString(false);
1:fe77ca5:   }
1:fe77ca5: 
1:fe77ca5:   public static void getInfo (java.io.PrintWriter out) {
1:fe77ca5:     Main.getMainInfo(out, false);
1:fe77ca5:   }
1:fe77ca5: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:7d9c8c7
/////////////////////////////////////////////////////////////////////////
1: 	/**
1: 	 *	The genus name for the optional tools code. Use this to determine the version of 
1: 		code in derbyoptionaltools.jar
1: 	 */
1: 	public static final String OPTIONALTOOLS="optionaltools";
1: 
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:3dc2ce4
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:63fbf42
/////////////////////////////////////////////////////////////////////////
1: 		Apache Derby embedded code in derby.jar.
1: 		code in derbytools.jar
1: 	/**
1: 	 *	The genus name for the network server code. Use this to determine the version of 
1: 		code in derbynet.jar
1: 	 */
1: 	public static final String NET="net";
1: 
1: 	/**
1: 	 *	The genus name for the client code. Use this to determine the version of 
1: 		code in derbyclient.jar
1: 	 */
1: 	public static final String CLIENT="dnc";
1: 
/////////////////////////////////////////////////////////////////////////
1: 			DBMS, TOOLS, NET, CLIENT
/////////////////////////////////////////////////////////////////////////
1: 			DBMS, TOOLS, NET, CLIENT.
/////////////////////////////////////////////////////////////////////////
1: 			DBMS, TOOLS, NET, CLIENT.
commit:3abc7d4
/////////////////////////////////////////////////////////////////////////
1: 	Please note that this is the Derby version of the .jar files, not of your databases.
1: 	The numbering scheme for released Derby products is <b><code>m1.m2.m3 </code></b>
/////////////////////////////////////////////////////////////////////////
1: 		The genus name for the Apache Derby code. Use this to determine the version of the
0: 		Apache Derby embedded code in cs.jar.
/////////////////////////////////////////////////////////////////////////
1: 		gets the major version of the Apache Derby embedded code.
/////////////////////////////////////////////////////////////////////////
1: 		gets the minor version of the Apache Derby embedded code.
/////////////////////////////////////////////////////////////////////////
1: 		gets the build number for the Apache Derby embedded library
/////////////////////////////////////////////////////////////////////////
1: 		gets the product name for the Apache Derby embedded library
/////////////////////////////////////////////////////////////////////////
1: 	Return the version information string for the Apache Derby embedded library including alpha or beta indicators.
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:985fc85
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.tools.sysinfo
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:a8ff4fd
/////////////////////////////////////////////////////////////////////////
commit:0a7339d
/////////////////////////////////////////////////////////////////////////
1:   static public String getBuildNumber()
/////////////////////////////////////////////////////////////////////////
1: 		@return the build number, or ???? if the information is not found.
1:   static public String getBuildNumber(String genus)
1:             return "????";
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.tools
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.tools;
1: 
1: import org.apache.derby.iapi.services.info.ProductVersionHolder;
1: import org.apache.derby.iapi.services.info.JVMInfo;
1: import org.apache.derby.impl.tools.sysinfo.Main;
1: 
1: /**
1: 	
1:    This class displays system information to system out.
1: 	 
1: 	To run from the command-line, enter the following:
1: 	<p>
1: 	<code>java org.apache.derby.tools.sysinfo</code>
1: 	<p>
1: 	<p>
1: 	Also available on this class are methods which allow you to determine
1: 	the version of the code for the system without actually booting a database.
0: 	Please note that this is the Cloudscape version of the .jar files, not of your databases.
1: 	<p>
0: 	The numbering scheme for released Cloudscape products is <b><code>m1.m2.m3 </code></b>
1: 	where <b><code>m1</code></b> is the major release version, <b><code>m2</code></b> is the minor release version,
1: 	and <b><code>m3</code></b> is the maintenance level. Versions of the product with the same
1: 	major and minor version numbers are considered feature compatible. 
1: 	<p>Valid major and minor versions are always greater than zero. Valid maintenance
1: 	versions are greater than or equal to zero.
1: 
1: 
1: */
1: public class sysinfo {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 
1:   static public void main(String[] args) {
1:     Main.main(args);
1:   }
1: 
1:   private sysinfo() { // no instances allowed
1:   }
1: 
1: 	/**
0: 		The genus name for the IBM Cloudscape code. Use this to determine the version of the
0: 		IBM Cloudscape embedded code in cs.jar.
1: 	*/
1: 	public static final String DBMS="DBMS";
1: 
1: 	/**
1: 	 *	The genus name for the tools code. Use this to determine the version of 
0: 		code in cstools.jar
1: 	 */
1: 	public static final String TOOLS="tools";
1: 
1: 
1: 	/**
0: 		gets the major version of the IBM Cloudscape embedded code.
1: 		@return	the major version. Returns -1 if not found.
1: 	 */
1:   static public int getMajorVersion()
1:   {
1:     return getMajorVersion(DBMS);
1:   }
1: 
1: 
1: 	/**
1: 		gets the major version of the specified code library. 
1: 		@param genus	which library to get the version of. Valid inputs include
0: 			DBMS, TOOLS
1: 		@return the major version. Return -1 if the information is not found. 
1:     */		
1:   static public int getMajorVersion(String genus)
1:   {
1:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:         if (pvh == null)
1:         {
1:             return -1;
1:         }
1: 
1:         return pvh.getMajorVersion();
1:   }
1: 
1: 
1: 	/**
0: 		gets the minor version of the IBM Cloudscape embedded code.
1: 		@return	the minor version. Returns -1 if not found.
1: 	 */
1:   static public int getMinorVersion()
1:   {
1:     return getMinorVersion(DBMS);
1:   }
1: 
1: 	/**
1: 		gets the minor version of the specified code library. 
1: 		@param genus	which library to get the version of. Valid inputs include
0: 			DBMS, TOOLS.
1: 		@return the minor version. Return -1 if the information is not found. 
1:     */	
1:   static public int getMinorVersion(String genus)
1:   {
1:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:         if (pvh == null)
1:         {
1:             return -1;
1:         }
1: 
1:         return pvh.getMinorVersion();
1:   }
1: 
1: 	/**
0: 		gets the build number for the IBM Cloudscape embedded library
1: 		@return the build number, or -1 if the information is not found.
1: 	*/
0:   static public int getBuildNumber()
1:   {
1:     return getBuildNumber("DBMS");
1:   }
1: 
1: 	/**
1: 		gets the build number for the specified library
1: 		@param genus which library to get the build number for. Valid inputs are
0: 			DBMS, TOOLS
1: 		@return the build number, or -1 if the information is not found.
1: 	*/
0:   static public int getBuildNumber(String genus)
1:   {
1:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:         if (pvh == null)
1:         {
1:             return -1;
1:         }
1: 
1:         return pvh.getBuildNumber();
1:   }
1: 
1: 
1: 	/**
0: 		gets the product name for the IBM Cloudscape embedded library
1: 		@return the name
1: 	*/
1:   static public String getProductName()
1:   {
1:     return getProductName("DBMS");
1:   }
1: 
1: 	/**
1: 		gets the external name for the specified code library.
1: 		@param genus which library to get the name for
1: 		@return the name.
1: 	*/
1: 
1:   static public String getProductName(String genus)
1:   {
1:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:         if (pvh == null)
1:         {
1:             return Main.getTextMessage ("SIF01.K");
1:         }
1: 
1:         return pvh.getProductName();
1:   }
1: 
1:   /**
1: 	Return the version information string for the specified library including alpha or beta indicators.
1:   */
1:   static public String getVersionString() {
1: 	return getVersionString(DBMS);
1:   }
1: 
1:   /**
0: 	Return the version information string for the IBM Cloudscape embedded library including alpha or beta indicators.
1:   */
1:   static public String getVersionString(String genus) {
1: 
1:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
1:         if (pvh == null)
1:         {
1:             return Main.getTextMessage ("SIF01.K");
1:         }
1: 		
1: 		return pvh.getVersionBuildString(false);
1:   }
1: 
1:   public static void getInfo (java.io.PrintWriter out) {
1:     Main.getMainInfo(out, false);
1:   }
1: }
commit:d2a30a0
/////////////////////////////////////////////////////////////////////////
0:   static public int getBuildNumber()
/////////////////////////////////////////////////////////////////////////
0: 		@return the build number, or -1 if the information is not found.
0:   static public int getBuildNumber(String genus)
0:             return -1;
commit:42261f8
/////////////////////////////////////////////////////////////////////////
0:   static public String getBuildNumber()
/////////////////////////////////////////////////////////////////////////
0: 		@return the build number, or ???? if the information is not found.
0:   static public String getBuildNumber(String genus)
0:             return "????";
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.tools
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.tools;
0: 
0: import org.apache.derby.iapi.services.info.ProductVersionHolder;
0: import org.apache.derby.iapi.services.info.JVMInfo;
0: import org.apache.derby.impl.tools.sysinfo.Main;
0: 
0: /**
0: 	
0:    This class displays system information to system out.
0: 	 
0: 	To run from the command-line, enter the following:
0: 	<p>
0: 	<code>java org.apache.derby.tools.sysinfo</code>
0: 	<p>
0: 	<p>
0: 	Also available on this class are methods which allow you to determine
0: 	the version of the code for the system without actually booting a database.
0: 	Please note that this is the Cloudscape version of the .jar files, not of your databases.
0: 	<p>
0: 	The numbering scheme for released Cloudscape products is <b><code>m1.m2.m3 </code></b>
0: 	where <b><code>m1</code></b> is the major release version, <b><code>m2</code></b> is the minor release version,
0: 	and <b><code>m3</code></b> is the maintenance level. Versions of the product with the same
0: 	major and minor version numbers are considered feature compatible. 
0: 	<p>Valid major and minor versions are always greater than zero. Valid maintenance
0: 	versions are greater than or equal to zero.
0: 
0: 
0: */
0: public class sysinfo {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 
0:   static public void main(String[] args) {
0:     Main.main(args);
0:   }
0: 
0:   private sysinfo() { // no instances allowed
0:   }
0: 
0: 	/**
0: 		The genus name for the IBM Cloudscape code. Use this to determine the version of the
0: 		IBM Cloudscape embedded code in cs.jar.
0: 	*/
0: 	public static final String DBMS="DBMS";
0: 
0: 	/**
0: 	 *	The genus name for the tools code. Use this to determine the version of 
0: 		code in cstools.jar
0: 	 */
0: 	public static final String TOOLS="tools";
0: 
0: 
0: 	/**
0: 		gets the major version of the IBM Cloudscape embedded code.
0: 		@return	the major version. Returns -1 if not found.
0: 	 */
0:   static public int getMajorVersion()
0:   {
0:     return getMajorVersion(DBMS);
0:   }
0: 
0: 
0: 	/**
0: 		gets the major version of the specified code library. 
0: 		@param genus	which library to get the version of. Valid inputs include
0: 			DBMS, TOOLS
0: 		@return the major version. Return -1 if the information is not found. 
0:     */		
0:   static public int getMajorVersion(String genus)
0:   {
0:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
0:         if (pvh == null)
0:         {
0:             return -1;
0:         }
0: 
0:         return pvh.getMajorVersion();
0:   }
0: 
0: 
0: 	/**
0: 		gets the minor version of the IBM Cloudscape embedded code.
0: 		@return	the minor version. Returns -1 if not found.
0: 	 */
0:   static public int getMinorVersion()
0:   {
0:     return getMinorVersion(DBMS);
0:   }
0: 
0: 	/**
0: 		gets the minor version of the specified code library. 
0: 		@param genus	which library to get the version of. Valid inputs include
0: 			DBMS, TOOLS.
0: 		@return the minor version. Return -1 if the information is not found. 
0:     */	
0:   static public int getMinorVersion(String genus)
0:   {
0:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
0:         if (pvh == null)
0:         {
0:             return -1;
0:         }
0: 
0:         return pvh.getMinorVersion();
0:   }
0: 
0: 	/**
0: 		gets the build number for the IBM Cloudscape embedded library
0: 		@return the build number, or -1 if the information is not found.
0: 	*/
0:   static public int getBuildNumber()
0:   {
0:     return getBuildNumber("DBMS");
0:   }
0: 
0: 	/**
0: 		gets the build number for the specified library
0: 		@param genus which library to get the build number for. Valid inputs are
0: 			DBMS, TOOLS
0: 		@return the build number, or -1 if the information is not found.
0: 	*/
0:   static public int getBuildNumber(String genus)
0:   {
0:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
0:         if (pvh == null)
0:         {
0:             return -1;
0:         }
0: 
0:         return pvh.getBuildNumber();
0:   }
0: 
0: 
0: 	/**
0: 		gets the product name for the IBM Cloudscape embedded library
0: 		@return the name
0: 	*/
0:   static public String getProductName()
0:   {
0:     return getProductName("DBMS");
0:   }
0: 
0: 	/**
0: 		gets the external name for the specified code library.
0: 		@param genus which library to get the name for
0: 		@return the name.
0: 	*/
0: 
0:   static public String getProductName(String genus)
0:   {
0:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
0:         if (pvh == null)
0:         {
0:             return Main.getTextMessage ("SIF01.K");
0:         }
0: 
0:         return pvh.getProductName();
0:   }
0: 
0:   /**
0: 	Return the version information string for the specified library including alpha or beta indicators.
0:   */
0:   static public String getVersionString() {
0: 	return getVersionString(DBMS);
0:   }
0: 
0:   /**
0: 	Return the version information string for the IBM Cloudscape embedded library including alpha or beta indicators.
0:   */
0:   static public String getVersionString(String genus) {
0: 
0:         ProductVersionHolder pvh = ProductVersionHolder.getProductVersionHolderFromMyEnv(genus);
0:         if (pvh == null)
0:         {
0:             return Main.getTextMessage ("SIF01.K");
0:         }
0: 		
0: 		return pvh.getVersionBuildString(false);
0:   }
0: 
0:   public static void getInfo (java.io.PrintWriter out) {
0:     Main.getMainInfo(out, false);
0:   }
0: }
============================================================================