1:33776ff: /*
2:33776ff: 
1:33776ff:    Derby - Class org.apache.derby.client.net.CodePointNameTable
1:33776ff: 
1:59bf37d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:59bf37d:    contributor license agreements.  See the NOTICE file distributed with
1:59bf37d:    this work for additional information regarding copyright ownership.
1:59bf37d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:59bf37d:    (the "License"); you may not use this file except in compliance with
1:59bf37d:    the License.  You may obtain a copy of the License at
1:33776ff: 
1:33776ff:       http://www.apache.org/licenses/LICENSE-2.0
1:33776ff: 
1:33776ff:    Unless required by applicable law or agreed to in writing, software
1:33776ff:    distributed under the License is distributed on an "AS IS" BASIS,
1:33776ff:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:33776ff:    See the License for the specific language governing permissions and
1:33776ff:    limitations under the License.
1:33776ff: 
1:33776ff: */
1:33776ff: 
1:33776ff: package org.apache.derby.client.net;
1:33776ff: 
1:33776ff: // This mapping is used by DssTrace only.
1:69e3d06: 
1:69e3d06: import java.util.Hashtable;
1:69e3d06: 
1:33776ff: // This is not part of the driver and is not initialized unless dss tracing is enabled.
1:33776ff: // This is an abstract mapping from 2-byte code point to a string representing the name of the code point.
1:33776ff: // This data type may be modified for performance to adapt to any sort of lookup implementation,
1:33776ff: // such as binary search on an underlying sorted array.
1:33776ff: 
1:69e3d06: class CodePointNameTable extends Hashtable<Integer, String> {
1:70f7692:     CodePointNameTable() {
1:66527ec:         put(CodePoint.ACCSECRD, "ACCSECRD");
1:66527ec:         put(CodePoint.TYPDEFNAM, "TYPDEFNAM");
1:66527ec:         put(CodePoint.TYPDEFOVR, "TYPDEFOVR");
1:66527ec:         put(CodePoint.EXCSAT, "EXCSAT");
1:66527ec:         put(CodePoint.SYNCCTL, "SYNCCTL");
1:66527ec:         put(CodePoint.SYNCCRD, "SYNCCRD");
1:66527ec:         put(CodePoint.SYNCRSY, "SYNCRSY");
1:66527ec:         put(CodePoint.ACCSEC, "ACCSEC");
1:66527ec:         put(CodePoint.SECCHK, "SECCHK");
1:66527ec:         put(CodePoint.MGRLVLRM, "MGRLVLRM");
1:66527ec:         put(CodePoint.SECCHKRM, "SECCHKRM");
1:66527ec:         put(CodePoint.CMDNSPRM, "CMDNSPRM");
1:66527ec:         put(CodePoint.OBJNSPRM, "OBJNSPRM");
1:66527ec:         put(CodePoint.CMDCHKRM, "CMDCHKRM");
1:66527ec:         put(CodePoint.SYNTAXRM, "SYNTAXRM");
1:66527ec:         put(CodePoint.VALNSPRM, "VALNSPRM");
1:66527ec:         put(CodePoint.EXCSATRD, "EXCSATRD");
1:66527ec:         put(CodePoint.ACCRDB, "ACCRDB");
1:66527ec:         put(CodePoint.CLSQRY, "CLSQRY");
1:66527ec:         put(CodePoint.CNTQRY, "CNTQRY");
1:66527ec:         put(CodePoint.DSCSQLSTT, "DSCSQLSTT");
1:66527ec:         put(CodePoint.EXCSQLIMM, "EXCSQLIMM");
1:66527ec:         put(CodePoint.EXCSQLSTT, "EXCSQLSTT");
1:66527ec:         put(CodePoint.OPNQRY, "OPNQRY");
1:66527ec:         put(CodePoint.OUTOVR, "OUTOVR");
1:66527ec:         put(CodePoint.PRPSQLSTT, "PRPSQLSTT");
1:66527ec:         put(CodePoint.RDBCMM, "RDBCMM");
1:66527ec:         put(CodePoint.RDBRLLBCK, "RDBRLLBCK");
1:66527ec:         put(CodePoint.DSCRDBTBL, "DSCRDBTBL");
1:66527ec:         put(CodePoint.ACCRDBRM, "ACCRDBRM");
1:66527ec:         put(CodePoint.QRYNOPRM, "QRYNOPRM");
1:66527ec:         put(CodePoint.RDBATHRM, "RDBATHRM");
1:66527ec:         put(CodePoint.RDBNACRM, "RDBNACRM");
1:66527ec:         put(CodePoint.OPNQRYRM, "OPNQRYRM");
1:66527ec:         put(CodePoint.RDBACCRM, "RDBACCRM");
1:66527ec:         put(CodePoint.ENDQRYRM, "ENDQRYRM");
1:66527ec:         put(CodePoint.ENDUOWRM, "ENDUOWRM");
1:66527ec:         put(CodePoint.ABNUOWRM, "ABNUOWRM");
1:66527ec:         put(CodePoint.DTAMCHRM, "DTAMCHRM");
1:66527ec:         put(CodePoint.QRYPOPRM, "QRYPOPRM");
1:66527ec:         put(CodePoint.RDBNFNRM, "RDBNFNRM");
1:66527ec:         put(CodePoint.OPNQFLRM, "OPNQFLRM");
1:66527ec:         put(CodePoint.SQLERRRM, "SQLERRRM");
1:66527ec:         put(CodePoint.RDBUPDRM, "RDBUPDRM");
1:66527ec:         put(CodePoint.RSLSETRM, "RSLSETRM");
1:66527ec:         put(CodePoint.RDBAFLRM, "RDBAFLRM");
1:66527ec:         put(CodePoint.SQLCARD, "SQLCARD");
1:66527ec:         put(CodePoint.SQLDARD, "SQLDARD");
1:66527ec:         put(CodePoint.SQLDTA, "SQLDTA");
1:66527ec:         put(CodePoint.SQLDTARD, "SQLDTARD");
1:66527ec:         put(CodePoint.SQLSTT, "SQLSTT");
1:66527ec:         put(CodePoint.QRYDSC, "QRYDSC");
1:66527ec:         put(CodePoint.QRYDTA, "QRYDTA");
1:66527ec:         put(CodePoint.PRCCNVRM, "PRCCNVRM");
1:66527ec:         put(CodePoint.EXCSQLSET, "EXCSQLSET");
1:66527ec:         put(CodePoint.EXTDTA, "EXTDTA");
1:66527ec:         put(CodePoint.PBSD, "PBSD");
1:66527ec:         put(CodePoint.PBSD_ISO, "PBSD_ISO");
1:66527ec:         put(CodePoint.PBSD_SCHEMA, "PBSD_SCHEMA");
1:70f7692:     }
1:70f7692: 
1:70f7692:     String lookup(int codePoint) {
1:4772c7e:         return get(codePoint);
1:70f7692:     }
3:33776ff: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:69e3d06
/////////////////////////////////////////////////////////////////////////
1: 
1: import java.util.Hashtable;
1: 
1: class CodePointNameTable extends Hashtable<Integer, String> {
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:66527ec
/////////////////////////////////////////////////////////////////////////
1:         put(CodePoint.ACCSECRD, "ACCSECRD");
1:         put(CodePoint.TYPDEFNAM, "TYPDEFNAM");
1:         put(CodePoint.TYPDEFOVR, "TYPDEFOVR");
1:         put(CodePoint.EXCSAT, "EXCSAT");
1:         put(CodePoint.SYNCCTL, "SYNCCTL");
1:         put(CodePoint.SYNCCRD, "SYNCCRD");
1:         put(CodePoint.SYNCRSY, "SYNCRSY");
1:         put(CodePoint.ACCSEC, "ACCSEC");
1:         put(CodePoint.SECCHK, "SECCHK");
1:         put(CodePoint.MGRLVLRM, "MGRLVLRM");
1:         put(CodePoint.SECCHKRM, "SECCHKRM");
1:         put(CodePoint.CMDNSPRM, "CMDNSPRM");
1:         put(CodePoint.OBJNSPRM, "OBJNSPRM");
1:         put(CodePoint.CMDCHKRM, "CMDCHKRM");
1:         put(CodePoint.SYNTAXRM, "SYNTAXRM");
1:         put(CodePoint.VALNSPRM, "VALNSPRM");
1:         put(CodePoint.EXCSATRD, "EXCSATRD");
1:         put(CodePoint.ACCRDB, "ACCRDB");
1:         put(CodePoint.CLSQRY, "CLSQRY");
1:         put(CodePoint.CNTQRY, "CNTQRY");
1:         put(CodePoint.DSCSQLSTT, "DSCSQLSTT");
1:         put(CodePoint.EXCSQLIMM, "EXCSQLIMM");
1:         put(CodePoint.EXCSQLSTT, "EXCSQLSTT");
1:         put(CodePoint.OPNQRY, "OPNQRY");
1:         put(CodePoint.OUTOVR, "OUTOVR");
1:         put(CodePoint.PRPSQLSTT, "PRPSQLSTT");
1:         put(CodePoint.RDBCMM, "RDBCMM");
1:         put(CodePoint.RDBRLLBCK, "RDBRLLBCK");
1:         put(CodePoint.DSCRDBTBL, "DSCRDBTBL");
1:         put(CodePoint.ACCRDBRM, "ACCRDBRM");
1:         put(CodePoint.QRYNOPRM, "QRYNOPRM");
1:         put(CodePoint.RDBATHRM, "RDBATHRM");
1:         put(CodePoint.RDBNACRM, "RDBNACRM");
1:         put(CodePoint.OPNQRYRM, "OPNQRYRM");
1:         put(CodePoint.RDBACCRM, "RDBACCRM");
1:         put(CodePoint.ENDQRYRM, "ENDQRYRM");
1:         put(CodePoint.ENDUOWRM, "ENDUOWRM");
1:         put(CodePoint.ABNUOWRM, "ABNUOWRM");
1:         put(CodePoint.DTAMCHRM, "DTAMCHRM");
1:         put(CodePoint.QRYPOPRM, "QRYPOPRM");
1:         put(CodePoint.RDBNFNRM, "RDBNFNRM");
1:         put(CodePoint.OPNQFLRM, "OPNQFLRM");
1:         put(CodePoint.SQLERRRM, "SQLERRRM");
1:         put(CodePoint.RDBUPDRM, "RDBUPDRM");
1:         put(CodePoint.RSLSETRM, "RSLSETRM");
1:         put(CodePoint.RDBAFLRM, "RDBAFLRM");
1:         put(CodePoint.SQLCARD, "SQLCARD");
1:         put(CodePoint.SQLDARD, "SQLDARD");
1:         put(CodePoint.SQLDTA, "SQLDTA");
1:         put(CodePoint.SQLDTARD, "SQLDTARD");
1:         put(CodePoint.SQLSTT, "SQLSTT");
1:         put(CodePoint.QRYDSC, "QRYDSC");
1:         put(CodePoint.QRYDTA, "QRYDTA");
1:         put(CodePoint.PRCCNVRM, "PRCCNVRM");
1:         put(CodePoint.EXCSQLSET, "EXCSQLSET");
1:         put(CodePoint.EXTDTA, "EXTDTA");
1:         put(CodePoint.PBSD, "PBSD");
1:         put(CodePoint.PBSD_ISO, "PBSD_ISO");
1:         put(CodePoint.PBSD_SCHEMA, "PBSD_SCHEMA");
commit:4772c7e
/////////////////////////////////////////////////////////////////////////
0: class CodePointNameTable extends java.util.Hashtable<Integer, String> {
/////////////////////////////////////////////////////////////////////////
1:         return get(codePoint);
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:c6c4d4d
/////////////////////////////////////////////////////////////////////////
0:         put(new Integer(CodePoint.PBSD), "PBSD");
0:         put(new Integer(CodePoint.PBSD_ISO), "PBSD_ISO");
0:         put(new Integer(CodePoint.PBSD_SCHEMA), "PBSD_SCHEMA");
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:ad7199e
/////////////////////////////////////////////////////////////////////////
0:         put(new Integer(CodePoint.OUTOVR), "OUTOVR");
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:59bf37d
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Jeremy Boynes
-------------------------------------------------------------------------------
commit:70f7692
/////////////////////////////////////////////////////////////////////////
0: class CodePointNameTable extends java.util.Hashtable {
1:     CodePointNameTable() {
0:         put(new Integer(CodePoint.ACCSECRD), "ACCSECRD");
0:         put(new Integer(CodePoint.TYPDEFNAM), "TYPDEFNAM");
0:         put(new Integer(CodePoint.TYPDEFOVR), "TYPDEFOVR");
0:         put(new Integer(CodePoint.EXCSAT), "EXCSAT");
0:         put(new Integer(CodePoint.SYNCCTL), "SYNCCTL");
0:         put(new Integer(CodePoint.SYNCCRD), "SYNCCRD");
0:         put(new Integer(CodePoint.SYNCRSY), "SYNCRSY");
0:         put(new Integer(CodePoint.ACCSEC), "ACCSEC");
0:         put(new Integer(CodePoint.SECCHK), "SECCHK");
0:         put(new Integer(CodePoint.MGRLVLRM), "MGRLVLRM");
0:         put(new Integer(CodePoint.SECCHKRM), "SECCHKRM");
0:         put(new Integer(CodePoint.CMDNSPRM), "CMDNSPRM");
0:         put(new Integer(CodePoint.OBJNSPRM), "OBJNSPRM");
0:         put(new Integer(CodePoint.CMDCHKRM), "CMDCHKRM");
0:         put(new Integer(CodePoint.SYNTAXRM), "SYNTAXRM");
0:         put(new Integer(CodePoint.VALNSPRM), "VALNSPRM");
0:         put(new Integer(CodePoint.EXCSATRD), "EXCSATRD");
0:         put(new Integer(CodePoint.ACCRDB), "ACCRDB");
0:         put(new Integer(CodePoint.CLSQRY), "CLSQRY");
0:         put(new Integer(CodePoint.CNTQRY), "CNTQRY");
0:         put(new Integer(CodePoint.DSCSQLSTT), "DSCSQLSTT");
0:         put(new Integer(CodePoint.EXCSQLIMM), "EXCSQLIMM");
0:         put(new Integer(CodePoint.EXCSQLSTT), "EXCSQLSTT");
0:         put(new Integer(CodePoint.OPNQRY), "OPNQRY");
0:         put(new Integer(CodePoint.PRPSQLSTT), "PRPSQLSTT");
0:         put(new Integer(CodePoint.RDBCMM), "RDBCMM");
0:         put(new Integer(CodePoint.RDBRLLBCK), "RDBRLLBCK");
0:         put(new Integer(CodePoint.DSCRDBTBL), "DSCRDBTBL");
0:         put(new Integer(CodePoint.ACCRDBRM), "ACCRDBRM");
0:         put(new Integer(CodePoint.QRYNOPRM), "QRYNOPRM");
0:         put(new Integer(CodePoint.RDBATHRM), "RDBATHRM");
0:         put(new Integer(CodePoint.RDBNACRM), "RDBNACRM");
0:         put(new Integer(CodePoint.OPNQRYRM), "OPNQRYRM");
0:         put(new Integer(CodePoint.RDBACCRM), "RDBACCRM");
0:         put(new Integer(CodePoint.ENDQRYRM), "ENDQRYRM");
0:         put(new Integer(CodePoint.ENDUOWRM), "ENDUOWRM");
0:         put(new Integer(CodePoint.ABNUOWRM), "ABNUOWRM");
0:         put(new Integer(CodePoint.DTAMCHRM), "DTAMCHRM");
0:         put(new Integer(CodePoint.QRYPOPRM), "QRYPOPRM");
0:         put(new Integer(CodePoint.RDBNFNRM), "RDBNFNRM");
0:         put(new Integer(CodePoint.OPNQFLRM), "OPNQFLRM");
0:         put(new Integer(CodePoint.SQLERRRM), "SQLERRRM");
0:         put(new Integer(CodePoint.RDBUPDRM), "RDBUPDRM");
0:         put(new Integer(CodePoint.RSLSETRM), "RSLSETRM");
0:         put(new Integer(CodePoint.RDBAFLRM), "RDBAFLRM");
0:         put(new Integer(CodePoint.SQLCARD), "SQLCARD");
0:         put(new Integer(CodePoint.SQLDARD), "SQLDARD");
0:         put(new Integer(CodePoint.SQLDTA), "SQLDTA");
0:         put(new Integer(CodePoint.SQLDTARD), "SQLDTARD");
0:         put(new Integer(CodePoint.SQLSTT), "SQLSTT");
0:         put(new Integer(CodePoint.QRYDSC), "QRYDSC");
0:         put(new Integer(CodePoint.QRYDTA), "QRYDTA");
0:         put(new Integer(CodePoint.PRCCNVRM), "PRCCNVRM");
0:         put(new Integer(CodePoint.EXCSQLSET), "EXCSQLSET");
0:         put(new Integer(CodePoint.EXTDTA), "EXTDTA");
1:     }
1: 
1:     String lookup(int codePoint) {
0:         return (String) get(new Integer(codePoint));
1:     }
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:33776ff
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.client.net.CodePointNameTable
1: 
0:    Copyright (c) 2001, 2005 The Apache Software Foundation or its licensors, where applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.client.net;
1: 
1: // This mapping is used by DssTrace only.
1: // This is not part of the driver and is not initialized unless dss tracing is enabled.
1: // This is an abstract mapping from 2-byte code point to a string representing the name of the code point.
1: // This data type may be modified for performance to adapt to any sort of lookup implementation,
1: // such as binary search on an underlying sorted array.
0: class CodePointNameTable extends java.util.Hashtable
0: {
0:   CodePointNameTable ()
0:   {
0:     put (new Integer (CodePoint.ACCSECRD), "ACCSECRD");
0:     put (new Integer (CodePoint.TYPDEFNAM), "TYPDEFNAM");
0:     put (new Integer (CodePoint.TYPDEFOVR), "TYPDEFOVR");
0:     put (new Integer (CodePoint.EXCSAT), "EXCSAT");
0:     put (new Integer (CodePoint.SYNCCTL), "SYNCCTL");
0:     put (new Integer (CodePoint.SYNCCRD), "SYNCCRD");
0:     put (new Integer (CodePoint.SYNCRSY), "SYNCRSY");
0:     put (new Integer (CodePoint.ACCSEC), "ACCSEC");
0:     put (new Integer (CodePoint.SECCHK), "SECCHK");
0:     put (new Integer (CodePoint.MGRLVLRM), "MGRLVLRM");
0:     put (new Integer (CodePoint.SECCHKRM), "SECCHKRM");
0:     put (new Integer (CodePoint.CMDNSPRM), "CMDNSPRM");
0:     put (new Integer (CodePoint.OBJNSPRM), "OBJNSPRM");
0:     put (new Integer (CodePoint.CMDCHKRM), "CMDCHKRM");
0:     put (new Integer (CodePoint.SYNTAXRM), "SYNTAXRM");
0:     put (new Integer (CodePoint.VALNSPRM), "VALNSPRM");
0:     put (new Integer (CodePoint.EXCSATRD), "EXCSATRD");
0:     put (new Integer (CodePoint.ACCRDB), "ACCRDB");
0:     put (new Integer (CodePoint.CLSQRY), "CLSQRY");
0:     put (new Integer (CodePoint.CNTQRY), "CNTQRY");
0:     put (new Integer (CodePoint.DSCSQLSTT), "DSCSQLSTT");
0:     put (new Integer (CodePoint.EXCSQLIMM), "EXCSQLIMM");
0:     put (new Integer (CodePoint.EXCSQLSTT), "EXCSQLSTT");
0:     put (new Integer (CodePoint.OPNQRY), "OPNQRY");
0:     put (new Integer (CodePoint.PRPSQLSTT), "PRPSQLSTT");
0:     put (new Integer (CodePoint.RDBCMM), "RDBCMM");
0:     put (new Integer (CodePoint.RDBRLLBCK), "RDBRLLBCK");
0:     put (new Integer (CodePoint.DSCRDBTBL), "DSCRDBTBL");
0:     put (new Integer (CodePoint.ACCRDBRM), "ACCRDBRM");
0:     put (new Integer (CodePoint.QRYNOPRM), "QRYNOPRM");
0:     put (new Integer (CodePoint.RDBATHRM), "RDBATHRM");
0:     put (new Integer (CodePoint.RDBNACRM), "RDBNACRM");
0:     put (new Integer (CodePoint.OPNQRYRM), "OPNQRYRM");
0:     put (new Integer (CodePoint.RDBACCRM), "RDBACCRM");
0:     put (new Integer (CodePoint.ENDQRYRM), "ENDQRYRM");
0:     put (new Integer (CodePoint.ENDUOWRM), "ENDUOWRM");
0:     put (new Integer (CodePoint.ABNUOWRM), "ABNUOWRM");
0:     put (new Integer (CodePoint.DTAMCHRM), "DTAMCHRM");
0:     put (new Integer (CodePoint.QRYPOPRM), "QRYPOPRM");
0:     put (new Integer (CodePoint.RDBNFNRM), "RDBNFNRM");
0:     put (new Integer (CodePoint.OPNQFLRM), "OPNQFLRM");
0:     put (new Integer (CodePoint.SQLERRRM), "SQLERRRM");
0:     put (new Integer (CodePoint.RDBUPDRM), "RDBUPDRM");
0:     put (new Integer (CodePoint.RSLSETRM), "RSLSETRM");
0:     put (new Integer (CodePoint.RDBAFLRM), "RDBAFLRM");
0:     put (new Integer (CodePoint.SQLCARD), "SQLCARD");
0:     put (new Integer (CodePoint.SQLDARD), "SQLDARD");
0:     put (new Integer (CodePoint.SQLDTA), "SQLDTA");
0:     put (new Integer (CodePoint.SQLDTARD), "SQLDTARD");
0:     put (new Integer (CodePoint.SQLSTT), "SQLSTT");
0:     put (new Integer (CodePoint.QRYDSC), "QRYDSC");
0:     put (new Integer (CodePoint.QRYDTA), "QRYDTA");
0:     put (new Integer (CodePoint.PRCCNVRM), "PRCCNVRM");
0:     put (new Integer (CodePoint.EXCSQLSET), "EXCSQLSET");
0:     put (new Integer (CodePoint.EXTDTA), "EXTDTA");
1:   }
1: 
0:   String lookup (int codePoint)
0:   {
0:     return (String) get (new Integer (codePoint));
1:   }
1: }
============================================================================