1:2bc809f: /*
4:2bc809f: 
1:2bc809f:    Derby - Class org.apache.derbyTesting.unitTests.harness.UnitTestMain
1:2bc809f: 
1:c38b841:    Licensed to the Apache Software Foundation (ASF) under one or more
1:c38b841:    contributor license agreements.  See the NOTICE file distributed with
1:c38b841:    this work for additional information regarding copyright ownership.
1:c38b841:    The ASF licenses this file to You under the Apache License, Version 2.0
1:c38b841:    (the "License"); you may not use this file except in compliance with
1:c38b841:    the License.  You may obtain a copy of the License at
1:2bc809f: 
1:2bc809f:       http://www.apache.org/licenses/LICENSE-2.0
1:2bc809f: 
1:2bc809f:    Unless required by applicable law or agreed to in writing, software
1:2bc809f:    distributed under the License is distributed on an "AS IS" BASIS,
1:2bc809f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2bc809f:    See the License for the specific language governing permissions and
1:2bc809f:    limitations under the License.
1:2bc809f: 
1:2bc809f:  */
1:2bc809f: 
1:2bc809f: package org.apache.derbyTesting.unitTests.harness;
1:2bc809f: 
1:850aba4: import java.io.PrintWriter;
1:56c1dc2: import java.security.AccessController;
1:56c1dc2: import java.security.PrivilegedAction;
1:2bc809f: import java.util.Properties;
1:850aba4: import org.apache.derby.iapi.services.monitor.Monitor;
1:2bc809f: 
1:2bc809f: /** 
1:2bc809f: 	A very simple class to boot up a system based upon a configuration file
1:2bc809f: 	passed in as the first argument. The optional second argument is taken
1:2bc809f: 	as a boolean. If the argument is missing or false, the configuration
1:2bc809f: 	is started, otherwise the configuration is created.
1:2bc809f: 	
1:2bc809f: 
1:2bc809f:     Usage: java org.apache.derbyTesting.unitTests.harness.UnitTestMain config-file [true]
1:2bc809f: **/
1:2bc809f: 
1:2bc809f: 
1:2bc809f: public class UnitTestMain  { 
1:2bc809f: 
1:2bc809f: 	public static void main(String args[]) {
1:2bc809f: 
1:56c1dc2:         AccessController.doPrivileged
1:56c1dc2:             (
1:56c1dc2:              new PrivilegedAction<Object>()
1:56c1dc2:              {
1:56c1dc2:                  public Object run()
1:56c1dc2:                  {
1:56c1dc2:                      Properties bootProperties = new Properties();
1:2bc809f: 
1:56c1dc2:                      // request that a unit test manager service is started
1:56c1dc2:                      bootProperties.put("derby.service.unitTestManager", UnitTestManager.MODULE);
1:56c1dc2:                      Monitor.startMonitor(bootProperties, new PrintWriter(System.err, true));
1:56c1dc2:                      
1:56c1dc2:                      return null;
1:56c1dc2:                  }
1:56c1dc2:              }
1:56c1dc2:              );
1:56c1dc2: 
1:56c1dc2: 
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f:     
1:2bc809f: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:56c1dc2
/////////////////////////////////////////////////////////////////////////
1: import java.security.AccessController;
1: import java.security.PrivilegedAction;
/////////////////////////////////////////////////////////////////////////
1:         AccessController.doPrivileged
1:             (
1:              new PrivilegedAction<Object>()
1:              {
1:                  public Object run()
1:                  {
1:                      Properties bootProperties = new Properties();
1:                      // request that a unit test manager service is started
1:                      bootProperties.put("derby.service.unitTestManager", UnitTestManager.MODULE);
1:                      Monitor.startMonitor(bootProperties, new PrintWriter(System.err, true));
1:                      
1:                      return null;
1:                  }
1:              }
1:              );
1: 
1:     
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:850aba4
/////////////////////////////////////////////////////////////////////////
1: import java.io.PrintWriter;
1: import org.apache.derby.iapi.services.monitor.Monitor;
/////////////////////////////////////////////////////////////////////////
0:         Monitor.startMonitor(bootProperties, new PrintWriter(System.err, true));
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:c38b841
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:2bc809f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.harness.UnitTestMain
1: 
0:    Copyright 1997, 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.unitTests.harness;
1: 
0: import org.apache.derby.iapi.services.monitor.Monitor;
1: 
0: import org.apache.derbyTesting.unitTests.harness.UnitTestManager;
1: 
1: import java.util.Properties;
1: 
1: /** 
1: 	A very simple class to boot up a system based upon a configuration file
1: 	passed in as the first argument. The optional second argument is taken
1: 	as a boolean. If the argument is missing or false, the configuration
1: 	is started, otherwise the configuration is created.
1: 	
1: 
1:     Usage: java org.apache.derbyTesting.unitTests.harness.UnitTestMain config-file [true]
1: **/
1: 
1: 
1: public class UnitTestMain  { 
1: 
1: 	public static void main(String args[]) {
1: 
1: 
0: 		Properties bootProperties = new Properties();
1: 
0: 		// request that a unit test manager service is started
0: 		bootProperties.put("derby.service.unitTestManager", UnitTestManager.MODULE);
1: 
0: 		Monitor.startMonitor(bootProperties, System.err);
1: 	}
1: }
============================================================================