1:eac0369: /*
3:eac0369: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.locks.Limit
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.services.locks;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import java.util.Enumeration;
1:eac0369: 
2:eac0369: /**
1:eac0369: 	A limit represents a callback on a lock
1:eac0369: 	group. It is called when the size of
1:eac0369: 	the group reaches the limit set on the
1:eac0369: 	call.
1:eac0369: 
1:eac0369: 	@see LockFactory#setLimit
1:eac0369: */
1:5d24b1a: public interface Limit {
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 		Called by the lock factory when a limit has been reached.
1:eac0369: 
1:3c1f634: 		@param compatibilitySpace lock space the limit was set for
1:eac0369: 		@param group lock group the limit was set for
1:eac0369: 		@param limit the limit's setting
1:eac0369: 		@param lockList the list of Lockable's in the group
1:eac0369: 		@param lockCount the number of locks in the group
1:eac0369: 
1:3fd26f3:         @exception StandardException Standard Derby error policy.
1:eac0369: 	*/
1:3c1f634: 	public void reached(CompatibilitySpace compatibilitySpace, Object group,
1:3c1f634: 						int limit, Enumeration lockList, int lockCount)
1:eac0369: 		throws StandardException;
1:eac0369: 
1:eac0369: }
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:3fd26f3
/////////////////////////////////////////////////////////////////////////
1:         @exception StandardException Standard Derby error policy.
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:3c1f634
/////////////////////////////////////////////////////////////////////////
1: 		@param compatibilitySpace lock space the limit was set for
/////////////////////////////////////////////////////////////////////////
1: 	public void reached(CompatibilitySpace compatibilitySpace, Object group,
1: 						int limit, Enumeration lockList, int lockCount)
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.locks.Limit
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
1: public interface Limit {
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.locks
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.locks;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import java.util.Enumeration;
1: 
1: /**
1: 	A limit represents a callback on a lock
1: 	group. It is called when the size of
1: 	the group reaches the limit set on the
1: 	call.
1: 
1: 	@see LockFactory#setLimit
1: */
0: public interface Limit { 
1: 
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 
1: 	/**
1: 		Called by the lock factory when a limit has been reached.
1: 
0: 		@param compatabilitySpace lock space the limit was set for
1: 		@param group lock group the limit was set for
1: 		@param limit the limit's setting
1: 		@param lockList the list of Lockable's in the group
1: 		@param lockCount the number of locks in the group
1: 
0:         @exception StandardException Standard Cloudscape error policy.
1: 	*/
0: 	public void reached(Object compatabilitySpace, Object group, int limit,
0: 		Enumeration lockList, int lockCount)
1: 		throws StandardException;
1: 
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.locks
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.services.locks;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: import java.util.Enumeration;
0: 
0: /**
0: 	A limit represents a callback on a lock
0: 	group. It is called when the size of
0: 	the group reaches the limit set on the
0: 	call.
0: 
0: 	@see LockFactory#setLimit
0: */
0: public interface Limit { 
0: 
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 
0: 	/**
0: 		Called by the lock factory when a limit has been reached.
0: 
0: 		@param compatabilitySpace lock space the limit was set for
0: 		@param group lock group the limit was set for
0: 		@param limit the limit's setting
0: 		@param lockList the list of Lockable's in the group
0: 		@param lockCount the number of locks in the group
0: 
0:         @exception StandardException Standard Cloudscape error policy.
0: 	*/
0: 	public void reached(Object compatabilitySpace, Object group, int limit,
0: 		Enumeration lockList, int lockCount)
0: 		throws StandardException;
0: 
0: }
============================================================================