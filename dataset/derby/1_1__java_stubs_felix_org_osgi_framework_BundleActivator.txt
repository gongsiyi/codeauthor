1:a8b6921: /*
1:a8b6921:  * $Header: /cvshome/build/org.osgi.framework/src/org/osgi/framework/BundleActivator.java,v 1.14 2007/02/21 16:49:05 hargrave Exp $
1:a8b6921:  * 
1:a8b6921:  * Copyright (c) OSGi Alliance (2000, 2007). All Rights Reserved.
1:a8b6921:  * 
1:a8b6921:  * Licensed under the Apache License, Version 2.0 (the "License");
1:a8b6921:  * you may not use this file except in compliance with the License.
1:a8b6921:  * You may obtain a copy of the License at
1:a8b6921:  *
1:a8b6921:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a8b6921:  *
1:a8b6921:  * Unless required by applicable law or agreed to in writing, software
1:a8b6921:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a8b6921:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a8b6921:  * See the License for the specific language governing permissions and
1:a8b6921:  * limitations under the License.
1:a8b6921:  */
1:a8b6921: 
1:a8b6921: package org.osgi.framework;
1:a8b6921: 
1:a8b6921: /**
1:a8b6921:  * Customizes the starting and stopping of a bundle.
1:a8b6921:  * <p>
1:a8b6921:  * <code>BundleActivator</code> is an interface that may be implemented when a
1:a8b6921:  * bundle is started or stopped. The Framework can create instances of a
1:a8b6921:  * bundle's <code>BundleActivator</code> as required. If an instance's
1:a8b6921:  * <code>BundleActivator.start</code> method executes successfully, it is
1:a8b6921:  * guaranteed that the same instance's <code>BundleActivator.stop</code>
1:a8b6921:  * method will be called when the bundle is to be stopped. The Framework must
1:a8b6921:  * not concurrently call a <code>BundleActivator</code> object.
1:a8b6921:  * 
1:a8b6921:  * <p>
1:a8b6921:  * <code>BundleActivator</code> is specified through the
1:a8b6921:  * <code>Bundle-Activator</code> Manifest header. A bundle can only specify a
1:a8b6921:  * single <code>BundleActivator</code> in the Manifest file. Fragment bundles
1:a8b6921:  * must not have a <code>BundleActivator</code>. The form of the Manifest
1:a8b6921:  * header is:
1:a8b6921:  * 
1:a8b6921:  * <p>
1:a8b6921:  * <code>Bundle-Activator: <i>class-name</i></code>
1:a8b6921:  * 
1:a8b6921:  * <p>
1:a8b6921:  * where <code><i>class-name</i></code> is a fully qualified Java classname.
1:a8b6921:  * <p>
1:a8b6921:  * The specified <code>BundleActivator</code> class must have a public
1:a8b6921:  * constructor that takes no parameters so that a <code>BundleActivator</code>
1:a8b6921:  * object can be created by <code>Class.newInstance()</code>.
1:a8b6921:  * 
1:a8b6921:  * @NotThreadSafe
1:a8b6921:  * @version $Revision: 1.14 $
1:a8b6921:  */
1:a8b6921: 
1:a8b6921: public interface BundleActivator {
1:a8b6921: 	/**
1:a8b6921: 	 * Called when this bundle is started so the Framework can perform the
1:a8b6921: 	 * bundle-specific activities necessary to start this bundle. This method
1:a8b6921: 	 * can be used to register services or to allocate any resources that this
1:a8b6921: 	 * bundle needs.
1:a8b6921: 	 * 
1:a8b6921: 	 * <p>
1:a8b6921: 	 * This method must complete and return to its caller in a timely manner.
1:a8b6921: 	 * 
1:a8b6921: 	 * @param context The execution context of the bundle being started.
1:a8b6921: 	 * @throws java.lang.Exception If this method throws an exception, this
1:a8b6921: 	 *         bundle is marked as stopped and the Framework will remove this
1:a8b6921: 	 *         bundle's listeners, unregister all services registered by this
1:a8b6921: 	 *         bundle, and release all services used by this bundle.
1:a8b6921: 	 */
1:a8b6921: 	public void start(BundleContext context) throws Exception;
1:a8b6921: 
1:a8b6921: 	/**
1:a8b6921: 	 * Called when this bundle is stopped so the Framework can perform the
1:a8b6921: 	 * bundle-specific activities necessary to stop the bundle. In general, this
1:a8b6921: 	 * method should undo the work that the <code>BundleActivator.start</code>
1:a8b6921: 	 * method started. There should be no active threads that were started by
1:a8b6921: 	 * this bundle when this bundle returns. A stopped bundle must not call any
1:a8b6921: 	 * Framework objects.
1:a8b6921: 	 * 
1:a8b6921: 	 * <p>
1:a8b6921: 	 * This method must complete and return to its caller in a timely manner.
1:a8b6921: 	 * 
1:a8b6921: 	 * @param context The execution context of the bundle being stopped.
1:a8b6921: 	 * @throws java.lang.Exception If this method throws an exception, the
1:a8b6921: 	 *         bundle is still marked as stopped, and the Framework will remove
1:a8b6921: 	 *         the bundle's listeners, unregister all services registered by the
1:a8b6921: 	 *         bundle, and release all services used by the bundle.
1:a8b6921: 	 */
1:a8b6921: 	public void stop(BundleContext context) throws Exception;
1:a8b6921: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:a8b6921
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * $Header: /cvshome/build/org.osgi.framework/src/org/osgi/framework/BundleActivator.java,v 1.14 2007/02/21 16:49:05 hargrave Exp $
1:  * 
1:  * Copyright (c) OSGi Alliance (2000, 2007). All Rights Reserved.
1:  * 
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.osgi.framework;
1: 
1: /**
1:  * Customizes the starting and stopping of a bundle.
1:  * <p>
1:  * <code>BundleActivator</code> is an interface that may be implemented when a
1:  * bundle is started or stopped. The Framework can create instances of a
1:  * bundle's <code>BundleActivator</code> as required. If an instance's
1:  * <code>BundleActivator.start</code> method executes successfully, it is
1:  * guaranteed that the same instance's <code>BundleActivator.stop</code>
1:  * method will be called when the bundle is to be stopped. The Framework must
1:  * not concurrently call a <code>BundleActivator</code> object.
1:  * 
1:  * <p>
1:  * <code>BundleActivator</code> is specified through the
1:  * <code>Bundle-Activator</code> Manifest header. A bundle can only specify a
1:  * single <code>BundleActivator</code> in the Manifest file. Fragment bundles
1:  * must not have a <code>BundleActivator</code>. The form of the Manifest
1:  * header is:
1:  * 
1:  * <p>
1:  * <code>Bundle-Activator: <i>class-name</i></code>
1:  * 
1:  * <p>
1:  * where <code><i>class-name</i></code> is a fully qualified Java classname.
1:  * <p>
1:  * The specified <code>BundleActivator</code> class must have a public
1:  * constructor that takes no parameters so that a <code>BundleActivator</code>
1:  * object can be created by <code>Class.newInstance()</code>.
1:  * 
1:  * @NotThreadSafe
1:  * @version $Revision: 1.14 $
1:  */
1: 
1: public interface BundleActivator {
1: 	/**
1: 	 * Called when this bundle is started so the Framework can perform the
1: 	 * bundle-specific activities necessary to start this bundle. This method
1: 	 * can be used to register services or to allocate any resources that this
1: 	 * bundle needs.
1: 	 * 
1: 	 * <p>
1: 	 * This method must complete and return to its caller in a timely manner.
1: 	 * 
1: 	 * @param context The execution context of the bundle being started.
1: 	 * @throws java.lang.Exception If this method throws an exception, this
1: 	 *         bundle is marked as stopped and the Framework will remove this
1: 	 *         bundle's listeners, unregister all services registered by this
1: 	 *         bundle, and release all services used by this bundle.
1: 	 */
1: 	public void start(BundleContext context) throws Exception;
1: 
1: 	/**
1: 	 * Called when this bundle is stopped so the Framework can perform the
1: 	 * bundle-specific activities necessary to stop the bundle. In general, this
1: 	 * method should undo the work that the <code>BundleActivator.start</code>
1: 	 * method started. There should be no active threads that were started by
1: 	 * this bundle when this bundle returns. A stopped bundle must not call any
1: 	 * Framework objects.
1: 	 * 
1: 	 * <p>
1: 	 * This method must complete and return to its caller in a timely manner.
1: 	 * 
1: 	 * @param context The execution context of the bundle being stopped.
1: 	 * @throws java.lang.Exception If this method throws an exception, the
1: 	 *         bundle is still marked as stopped, and the Framework will remove
1: 	 *         the bundle's listeners, unregister all services registered by the
1: 	 *         bundle, and release all services used by the bundle.
1: 	 */
1: 	public void stop(BundleContext context) throws Exception;
1: }
============================================================================