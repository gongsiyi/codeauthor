1:eac0369: /*
2:eac0369: 
1:345de35:    Derby - Class org.apache.derby.impl.services.reflect.LoadedGeneratedClass
1:345de35: 
1:93fea34:    Licensed to the Apache Software Foundation (ASF) under one or more
1:93fea34:    contributor license agreements.  See the NOTICE file distributed with
1:93fea34:    this work for additional information regarding copyright ownership.
1:93fea34:    The ASF licenses this file to you under the Apache License, Version 2.0
1:93fea34:    (the "License"); you may not use this file except in compliance with
1:93fea34:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
1:345de35: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.impl.services.reflect;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.services.loader.GeneratedByteCode;
1:eac0369: import org.apache.derby.iapi.services.loader.GeneratedClass;
1:eac0369: import org.apache.derby.iapi.services.loader.ClassFactory;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.services.context.Context;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import org.apache.derby.iapi.reference.SQLState;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.services.loader.ClassInfo;
1:eac0369: 
1:eac0369: 
1:eac0369: public abstract class LoadedGeneratedClass
1:eac0369: 	implements GeneratedClass
1:eac0369: {
1:eac0369: 
1:eac0369: 	/*
1:eac0369: 	** Fields
1:eac0369: 	*/
1:eac0369: 
1:eac0369: 	private final ClassInfo	ci;
1:eac0369: 	private final int classLoaderVersion;
1:eac0369: 
1:eac0369: 	/*
1:eac0369: 	**	Constructor
1:eac0369: 	*/
1:eac0369: 
1:eac0369: 	public LoadedGeneratedClass(ClassFactory cf, Class jvmClass) {
1:eac0369: 		ci = new ClassInfo(jvmClass);
1:eac0369: 		classLoaderVersion = cf.getClassLoaderVersion();
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	/*
1:eac0369: 	** Public methods from Generated Class
1:eac0369: 	*/
1:eac0369: 
1:eac0369: 	public String getName() {
1:eac0369: 		return ci.getClassName();
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public Object newInstance(Context context) throws StandardException	{
1:eac0369: 
1:eac0369: 		Throwable t;
1:eac0369: 		try {
1:eac0369: 			GeneratedByteCode ni =  (GeneratedByteCode) ci.getNewInstance();
1:eac0369: 			ni.initFromContext(context);
1:eac0369: 			ni.setGC(this);
1:eac0369: 			ni.postConstructor();
1:eac0369: 			return ni;
1:eac0369: 
1:eac0369: 		} catch (InstantiationException ie) {
1:eac0369: 			t = ie;
1:eac0369: 		} catch (IllegalAccessException iae) {
1:eac0369: 			t = iae;
1:eac0369: 		} catch (java.lang.reflect.InvocationTargetException ite) {
1:eac0369: 			t = ite;
1:4469400: 		} catch (NoSuchMethodException le) {
1:4469400: 			t = le;
1:eac0369: 		} catch (LinkageError le) {
1:eac0369: 			t = le;
1:eac0369: 		}
1:eac0369: 
1:eac0369: 		throw StandardException.newException(SQLState.GENERATED_CLASS_INSTANCE_ERROR, t, getName());
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	public final int getClassLoaderVersion() {
1:eac0369: 		return classLoaderVersion;
1:eac0369: 	}
1:eac0369: 
1:eac0369: 	/*
1:eac0369: 	** Methods for subclass
1:eac0369: 	*/
1:a15a470: 	protected Class<?> getJVMClass() {
1:eac0369: 		return ci.getClassObject();
1:eac0369: 	}
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4469400
/////////////////////////////////////////////////////////////////////////
1: 		} catch (NoSuchMethodException le) {
1: 			t = le;
commit:a15a470
/////////////////////////////////////////////////////////////////////////
1: 	protected Class<?> getJVMClass() {
commit:93fea34
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.services.reflect.LoadedGeneratedClass
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:1f9b9c4
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.services.reflect
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.services.reflect;
1: 
1: import org.apache.derby.iapi.services.loader.GeneratedByteCode;
1: import org.apache.derby.iapi.services.loader.GeneratedClass;
1: import org.apache.derby.iapi.services.loader.ClassFactory;
1: 
1: import org.apache.derby.iapi.services.context.Context;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.reference.SQLState;
1: 
1: import org.apache.derby.iapi.services.loader.ClassInfo;
1: 
1: 
1: public abstract class LoadedGeneratedClass
1: 	implements GeneratedClass
1: {
0: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 
1: 	/*
1: 	** Fields
1: 	*/
1: 
1: 	private final ClassInfo	ci;
1: 	private final int classLoaderVersion;
1: 
1: 	/*
1: 	**	Constructor
1: 	*/
1: 
1: 	public LoadedGeneratedClass(ClassFactory cf, Class jvmClass) {
1: 		ci = new ClassInfo(jvmClass);
1: 		classLoaderVersion = cf.getClassLoaderVersion();
1: 	}
1: 
1: 	/*
1: 	** Public methods from Generated Class
1: 	*/
1: 
1: 	public String getName() {
1: 		return ci.getClassName();
1: 	}
1: 
1: 	public Object newInstance(Context context) throws StandardException	{
1: 
1: 		Throwable t;
1: 		try {
1: 			GeneratedByteCode ni =  (GeneratedByteCode) ci.getNewInstance();
1: 			ni.initFromContext(context);
1: 			ni.setGC(this);
1: 			ni.postConstructor();
1: 			return ni;
1: 
1: 		} catch (InstantiationException ie) {
1: 			t = ie;
1: 		} catch (IllegalAccessException iae) {
1: 			t = iae;
1: 		} catch (java.lang.reflect.InvocationTargetException ite) {
1: 			t = ite;
1: 		} catch (LinkageError le) {
1: 			t = le;
1: 		}
1: 
1: 		throw StandardException.newException(SQLState.GENERATED_CLASS_INSTANCE_ERROR, t, getName());
1: 	}
1: 
1: 	public final int getClassLoaderVersion() {
1: 		return classLoaderVersion;
1: 	}
1: 
1: 	/*
1: 	** Methods for subclass
1: 	*/
0: 	protected Class getJVMClass() {
1: 		return ci.getClassObject();
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.services.reflect
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.services.reflect;
0: 
0: import org.apache.derby.iapi.services.loader.GeneratedByteCode;
0: import org.apache.derby.iapi.services.loader.GeneratedClass;
0: import org.apache.derby.iapi.services.loader.ClassFactory;
0: 
0: import org.apache.derby.iapi.services.context.Context;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.reference.SQLState;
0: 
0: import org.apache.derby.iapi.services.loader.ClassInfo;
0: 
0: 
0: public abstract class LoadedGeneratedClass
0: 	implements GeneratedClass
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 
0: 	/*
0: 	** Fields
0: 	*/
0: 
0: 	private final ClassInfo	ci;
0: 	private final int classLoaderVersion;
0: 
0: 	/*
0: 	**	Constructor
0: 	*/
0: 
0: 	public LoadedGeneratedClass(ClassFactory cf, Class jvmClass) {
0: 		ci = new ClassInfo(jvmClass);
0: 		classLoaderVersion = cf.getClassLoaderVersion();
0: 	}
0: 
0: 	/*
0: 	** Public methods from Generated Class
0: 	*/
0: 
0: 	public String getName() {
0: 		return ci.getClassName();
0: 	}
0: 
0: 	public Object newInstance(Context context) throws StandardException	{
0: 
0: 		Throwable t;
0: 		try {
0: 			GeneratedByteCode ni =  (GeneratedByteCode) ci.getNewInstance();
0: 			ni.initFromContext(context);
0: 			ni.setGC(this);
0: 			ni.postConstructor();
0: 			return ni;
0: 
0: 		} catch (InstantiationException ie) {
0: 			t = ie;
0: 		} catch (IllegalAccessException iae) {
0: 			t = iae;
0: 		} catch (java.lang.reflect.InvocationTargetException ite) {
0: 			t = ite;
0: 		} catch (LinkageError le) {
0: 			t = le;
0: 		}
0: 
0: 		throw StandardException.newException(SQLState.GENERATED_CLASS_INSTANCE_ERROR, t, getName());
0: 	}
0: 
0: 	public final int getClassLoaderVersion() {
0: 		return classLoaderVersion;
0: 	}
0: 
0: 	/*
0: 	** Methods for subclass
0: 	*/
0: 	protected Class getJVMClass() {
0: 		return ci.getClassObject();
0: 	}
0: }
============================================================================