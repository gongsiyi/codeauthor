1:fe77ca5: /*
2:fe77ca5: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.sql.LanguageProperties
1:7ecc1f2: 
1:4590cd8:    Licensed to the Apache Software Foundation (ASF) under one or more
1:4590cd8:    contributor license agreements.  See the NOTICE file distributed with
1:4590cd8:    this work for additional information regarding copyright ownership.
1:4590cd8:    The ASF licenses this file to you under the Apache License, Version 2.0
1:4590cd8:    (the "License"); you may not use this file except in compliance with
1:4590cd8:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
1:7ecc1f2: 
2:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: package org.apache.derby.iapi.sql;
1:fe77ca5: 
2:fe77ca5: /**
1:fe77ca5:  * This is a holder of language properties that are
1:fe77ca5:  * exposed users.  Consolodate all properties here.
1:fe77ca5:  */
1:fe77ca5: public interface LanguageProperties
1:fe77ca5: {
1:fe77ca5: 	/*
1:fe77ca5: 	** BulkFetch
1:fe77ca5: 	**
1:fe77ca5: 	** The default size needs some explaining.  As
1:fe77ca5: 	** of 7/14/98, the most efficient way for access
1:fe77ca5: 	** to return rows from a table is basically by
1:fe77ca5: 	** reading/qualifying/returning all the rows in
1:fe77ca5: 	** one page.  If you are read in many many rows
1:fe77ca5: 	** at a time the performance gain is only marginally
1:fe77ca5: 	** better.  Anyway, since even a small number of
1:fe77ca5: 	** rows per read helps, and since there is no good
1:fe77ca5: 	** way to get access to retrieve the rows page
1:fe77ca5: 	** by page, we use 16 totally arbitrarily.  Ultimately,
1:fe77ca5: 	** this should be dynamically sized -- in which
1:fe77ca5: 	** case we wouldn't need this default.
1:fe77ca5: 	*/
1:fe77ca5:     static final String BULK_FETCH_PROP = "derby.language.bulkFetchDefault";
1:fe77ca5:     static final String BULK_FETCH_DEFAULT = "16";
1:fe77ca5:     static final int BULK_FETCH_DEFAULT_INT = 16;
1:fe77ca5: }
============================================================================
author:David Van Couvering
-------------------------------------------------------------------------------
commit:4590cd8
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.sql.LanguageProperties
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql;
1: 
1: /**
1:  * This is a holder of language properties that are
1:  * exposed users.  Consolodate all properties here.
1:  */
1: public interface LanguageProperties
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 	/*
1: 	** BulkFetch
1: 	**
1: 	** The default size needs some explaining.  As
1: 	** of 7/14/98, the most efficient way for access
1: 	** to return rows from a table is basically by
1: 	** reading/qualifying/returning all the rows in
1: 	** one page.  If you are read in many many rows
1: 	** at a time the performance gain is only marginally
1: 	** better.  Anyway, since even a small number of
1: 	** rows per read helps, and since there is no good
1: 	** way to get access to retrieve the rows page
1: 	** by page, we use 16 totally arbitrarily.  Ultimately,
1: 	** this should be dynamically sized -- in which
1: 	** case we wouldn't need this default.
1: 	*/
1:     static final String BULK_FETCH_PROP = "derby.language.bulkFetchDefault";
1:     static final String BULK_FETCH_DEFAULT = "16";
1:     static final int BULK_FETCH_DEFAULT_INT = 16;
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.sql
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.sql;
0: 
0: /**
0:  * This is a holder of language properties that are
0:  * exposed users.  Consolodate all properties here.
0:  */
0: public interface LanguageProperties
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 	/*
0: 	** BulkFetch
0: 	**
0: 	** The default size needs some explaining.  As
0: 	** of 7/14/98, the most efficient way for access
0: 	** to return rows from a table is basically by
0: 	** reading/qualifying/returning all the rows in
0: 	** one page.  If you are read in many many rows
0: 	** at a time the performance gain is only marginally
0: 	** better.  Anyway, since even a small number of
0: 	** rows per read helps, and since there is no good
0: 	** way to get access to retrieve the rows page
0: 	** by page, we use 16 totally arbitrarily.  Ultimately,
0: 	** this should be dynamically sized -- in which
0: 	** case we wouldn't need this default.
0: 	*/
0:     static final String BULK_FETCH_PROP = "derby.language.bulkFetchDefault";
0:     static final String BULK_FETCH_DEFAULT = "16";
0:     static final int BULK_FETCH_DEFAULT_INT = 16;
0: }
============================================================================