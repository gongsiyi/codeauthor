1:e8aba82: /*
4:e8aba82: 
1:e8aba82:    Derby - Class org.apache.derby.iapi.error.SQLWarningFactory
1:e8aba82: 
1:e8aba82:    Licensed to the Apache Software Foundation (ASF) under one or more
1:e8aba82:    contributor license agreements.  See the NOTICE file distributed with
1:e8aba82:    this work for additional information regarding copyright ownership.
1:e8aba82:    The ASF licenses this file to you under the Apache License, Version 2.0
1:e8aba82:    (the "License"); you may not use this file except in compliance with
1:e8aba82:    the License.  You may obtain a copy of the License at
1:e8aba82: 
1:e8aba82:       http://www.apache.org/licenses/LICENSE-2.0
1:e8aba82: 
1:e8aba82:    Unless required by applicable law or agreed to in writing, software
1:e8aba82:    distributed under the License is distributed on an "AS IS" BASIS,
1:e8aba82:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e8aba82:    See the License for the specific language governing permissions and
1:e8aba82:    limitations under the License.
1:e8aba82: 
4:e8aba82:  */
1:b60a998: 
1:e8aba82: package org.apache.derby.iapi.error;
1:e8aba82: 
1:e8aba82: import java.sql.SQLWarning;
1:e8aba82: 
1:e8aba82: import org.apache.derby.iapi.services.i18n.MessageService;
1:58addc4: 
1:e8aba82: 
1:58addc4: // for javadoc 
1:58addc4: import org.apache.derby.shared.common.reference.SQLState;
1:58addc4: 
1:b60a998: /**
1:e8aba82:  * This class generates SQLWarning instances. It has an understanding of Derby's
1:e8aba82:  * internal error/warning message Ids, and transforms these to localised error
1:e8aba82:  * messages and appropriate SQLState.
1:b60a998:  */
1:e8aba82: public class SQLWarningFactory {
1:b60a998: 
1:b60a998: 	/**
2:b60a998: 	 * Generates a SQLWarning instance based on the supplied messageId and
2:b60a998: 	 * arguments. It looks up the messageId to generate a localised warning
2:b60a998: 	 * message. Also, SQLState is set correctly based on the messageId.
2:b60a998: 	 * 
2:b60a998: 	 * @param messageId A Derby messageId as defined in {@link SQLState org.apache.derby.shared.common.reference.SQLState}.
1:b60a998: 	 * @param args Arguments for the warning message
2:b60a998: 	 * @return Properly initialized SQLWarning instance.
2:b60a998: 	 * @see org.apache.derby.shared.common.reference.SQLState
1:b60a998: 	 */
1:1f18dc3:     public static SQLWarning newSQLWarning(String messageId, Object... args)
1:b60a998:     {
1:b60a998: 		return new SQLWarning
1:b60a998:             (
1:1f18dc3:              MessageService.getTextMessage( messageId, args ),
1:b60a998:              StandardException.getSQLStateFromIdentifier(messageId),
1:b60a998:              ExceptionSeverity.WARNING_SEVERITY
1:b60a998:              );
1:b60a998: 	}
1:e8aba82: 
1:b60a998: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:1f18dc3
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public static SQLWarning newSQLWarning(String messageId, Object... args)
1:              MessageService.getTextMessage( messageId, args ),
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:b60a998
/////////////////////////////////////////////////////////////////////////
0: 	 * @param messageId A Derby messageId as defined in{@link SQLState org.apache.derby.shared.common.reference.SQLState}.
0: 	public static SQLWarning newSQLWarning( String messageId )
1:     {
0: 		return newSQLWarning(messageId, new Object[] {} );
/////////////////////////////////////////////////////////////////////////
1: 	 * @param messageId A Derby messageId as defined in {@link SQLState org.apache.derby.shared.common.reference.SQLState}.
0: 	 * @param arg1 An argument for the warning message
0: 	public static SQLWarning newSQLWarning( String messageId, Object arg1 )
0:     {
0:         return newSQLWarning( messageId, new Object[] { arg1 } );
1: 	}
1: 
1: 	/**
1: 	 * Generates a SQLWarning instance based on the supplied messageId and
1: 	 * arguments. It looks up the messageId to generate a localised warning
1: 	 * message. Also, SQLState is set correctly based on the messageId.
1: 	 * 
0: 	 * @param messageId
0: 	 *            A Derby messageId as defined in {@link SQLState org.apache.derby.shared.common.reference.SQLState}.
0: 	 * @param arg1 First argument for the warning message
0: 	 * @param arg2 Second argument for the warning message
1: 	 * @return Properly initialized SQLWarning instance.
1: 	 * @see org.apache.derby.shared.common.reference.SQLState
1: 	 */
0: 	public static SQLWarning newSQLWarning( String messageId, Object arg1, Object arg2 )
0:     {
0:         return newSQLWarning( messageId, new Object[] { arg1, arg2 } );
1: 	}
1: 
1: 	/**
1: 	 * Generates a SQLWarning instance based on the supplied messageId and
1: 	 * arguments. It looks up the messageId to generate a localised warning
1: 	 * message. Also, SQLState is set correctly based on the messageId.
1: 	 * 
1: 	 * @param messageId A Derby messageId as defined in {@link SQLState org.apache.derby.shared.common.reference.SQLState}.
1: 	 * @param args Arguments for the warning message
1: 	 * @return Properly initialized SQLWarning instance.
1: 	 * @see org.apache.derby.shared.common.reference.SQLState
1: 	 */
0: 	public static SQLWarning newSQLWarning( String messageId, Object[] args )
0:     {
1: 		return new SQLWarning
1:             (
0:              MessageService.getCompleteMessage( messageId, args ),
1:              StandardException.getSQLStateFromIdentifier(messageId),
1:              ExceptionSeverity.WARNING_SEVERITY
1:              );
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:58addc4
/////////////////////////////////////////////////////////////////////////
1: 
1: // for javadoc 
1: import org.apache.derby.shared.common.reference.SQLState;
1: 
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:e8aba82
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.error.SQLWarningFactory
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.error;
1: 
1: import java.sql.SQLWarning;
1: 
1: import org.apache.derby.iapi.services.i18n.MessageService;
1: 
0: /**
1:  * This class generates SQLWarning instances. It has an understanding of Derby's
1:  * internal error/warning message Ids, and transforms these to localised error
1:  * messages and appropriate SQLState.
1:  */
1: public class SQLWarningFactory {
1: 
0: 	/**
0: 	 * Generates a SQLWarning instance based on the supplied messageId. It looks
0: 	 * up the messageId to generate a localised warning message. Also, SQLState
0: 	 * is set correctly based on the messageId.
0: 	 * 
0: 	 * @param messageId
0: 	 *            A Derby messageId as defined in
0: 	 *            {@link SQLState org.apache.derby.shared.common.reference.SQLState}.
0: 	 * @return Properly initialized SQLWarning instance.
0: 	 * @see org.apache.derby.shared.common.reference.SQLState
1: 	 */
0: 	public static SQLWarning newSQLWarning(String messageId) {
0: 		return newSQLWarning(messageId, null);
0: 	}
1: 
0: 	/**
0: 	 * Generates a SQLWarning instance based on the supplied messageId and
0: 	 * argument. It looks up the messageId to generate a localised warning
0: 	 * message. Also, SQLState is set correctly based on the messageId.
0: 	 * 
0: 	 * @param messageId
0: 	 *            A Derby messageId as defined in
0: 	 *            {@link SQLState org.apache.derby.shared.common.reference.SQLState}.
0: 	 * @param arg
0: 	 *            An argument for the warning message
0: 	 * @return Properly initialized SQLWarning instance.
0: 	 * @see org.apache.derby.shared.common.reference.SQLState
1: 	 */
0: 	public static SQLWarning newSQLWarning(String messageId, Object arg) {
0: 		return new SQLWarning(MessageService.getCompleteMessage(messageId,
0: 				new Object[] { arg }), StandardException
0: 				.getSQLStateFromIdentifier(messageId), ExceptionSeverity.WARNING_SEVERITY);
0: 	}
1: 
0: }
============================================================================