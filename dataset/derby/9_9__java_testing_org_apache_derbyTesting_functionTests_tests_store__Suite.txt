1:b1c5200: /*
1:da360eb: 
1:b1c5200:    Derby - Class org.apache.derbyTesting.functionTests.tests.store._Suite
1:1ee9da2: 
1:b1c5200:        Licensed to the Apache Software Foundation (ASF) under one
1:b1c5200:        or more contributor license agreements.  See the NOTICE file
1:b1c5200:        distributed with this work for additional information
1:b1c5200:        regarding copyright ownership.  The ASF licenses this file
1:b1c5200:        to you under the Apache License, Version 2.0 (the
1:b1c5200:        "License"); you may not use this file except in compliance
1:b1c5200:        with the License.  You may obtain a copy of the License at
1:1ee9da2: 
1:b1c5200:          http://www.apache.org/licenses/LICENSE-2.0
8:b1c5200: 
1:b1c5200:        Unless required by applicable law or agreed to in writing,
1:b1c5200:        software distributed under the License is distributed on an
1:b1c5200:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:b1c5200:        KIND, either express or implied.  See the License for the
1:b1c5200:        specific language governing permissions and limitations
1:b1c5200:        under the License
1:b1c5200: */
1:b1c5200: package org.apache.derbyTesting.functionTests.tests.store;
1:b1c5200: 
1:1ae02c9: import junit.framework.Test;
1:7e51e9d: import org.apache.derby.shared.common.sanity.SanityManager;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:1ae02c9: import org.apache.derbyTesting.junit.JDBC;
1:39f35f5: 
1:b1c5200: /**
1:b1c5200:  * Suite to run all JUnit tests in this package:
1:b1c5200:  * org.apache.derbyTesting.functionTests.tests.lang
1:b1c5200:  * <P>
1:b1c5200:  * All tests are run "as-is", just as if they were run
1:b1c5200:  * individually. Thus this test is just a collection
1:b1c5200:  * of all the JUNit tests in this package (excluding itself).
1:b1c5200:  * While the old test harness is in use, some use of decorators
1:b1c5200:  * may be required.
1:b1c5200:  *
1:b1c5200:  */
1:b1c5200: public class _Suite extends BaseTestCase  {
1:b1c5200: 
1:b1c5200:     /**
1:b1c5200:      * Use suite method instead.
1:b1c5200:      */
1:b1c5200:     private _Suite(String name) {
1:b1c5200:         super(name);
2:b1c5200:     }
1:8f56d99: 
1:b1c5200:     public static Test suite() {
1:8f56d99: 
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("store");
1:b1c5200: 
1:b1c5200:         suite.addTest(BootAllTest.suite());
1:e0b3487:         suite.addTest(ClassLoaderBootTest.suite());
1:c58f84b:         suite.addTest(StreamingColumnTest.suite());
1:5314923:         suite.addTest(Derby3625Test.suite());
1:2f41733:         suite.addTest(Derby4577Test.suite());
1:bb8f25a:         suite.addTest(InterruptResilienceTest.suite());
1:4f7da81:         suite.addTest(Derby4676Test.suite());
1:8badf99:         suite.addTest(BootLockTest.suite());
1:581d042:         suite.addTest(UpdateLocksTest.suite());
1:18fca03:         suite.addTest(PositionedStoreStreamTest.suite());
1:7c33e9c:         suite.addTest(OSReadOnlyTest.suite());
1:c33b0cf:         suite.addTest(BackupRestoreTest.suite());
1:c48e69a:         suite.addTest(OfflineBackupTest.suite());
1:7861eea:         suite.addTest(LiveLockTest.suite());
1:8f33dfd:         suite.addTest(ClobReclamationTest.suite());
1:0918509:         suite.addTest(IndexSplitDeadlockTest.suite());
1:e734b17:         suite.addTest(HoldCursorJDBC30Test.suite());
1:1a36302:         suite.addTest(AccessTest.suite());
1:127d92a:         suite.addTest(AutomaticIndexStatisticsTest.suite());
1:1690ef6:         suite.addTest(Derby5582AutomaticIndexStatisticsTest.suite());
1:127d92a:         suite.addTest(AutomaticIndexStatisticsMultiTest.suite());
1:20cc8ad:         suite.addTest(BTreeMaxScanTest.suite());
1:1c5f9b3:         suite.addTest(MadhareTest.suite());
1:faaf464:         suite.addTest(LongColumnTest.suite());
1:04d93b6:         suite.addTest(RowLockBasicTest.suite());
1:8f56d99:         suite.addTest(RecoveryTest.suite());
1:0eb5627:         suite.addTest(OCRecoveryTest.suite());
1:a5006eb:         suite.addTest(TableLockBasicTest.suite());
1:4eea875:         suite.addTest(ServicePropertiesFileTest.suite());
1:74e2f88:         suite.addTest(Derby5234Test.suite());
1:bce78c9:         suite.addTest(KeepDisposableStatsPropertyTest.suite());
1:1643c9c:         suite.addTest(LockTableVtiTest.suite());
1:1b89987:         suite.addTest(StoreScriptsTest.suite());
1:121a532:         suite.addTest(Derby4923Test.suite());
1:8566ca3:         suite.addTest(SpaceTableTest.suite());
1:8566ca3:         
1:da360eb:         /* Tests that only run in sane builds */
1:da360eb:         if (SanityManager.DEBUG) {
1:da360eb:             suite.addTest(HoldCursorExternalSortJDBC30Test.suite());
1:da360eb:         }
1:39f35f5: 
1:39f35f5:         // Encryption only supported for Derby in J2SE/J2EE environments.
1:39f35f5:         // J2ME (JSR169) does not support encryption.
1:39f35f5:         if (JDBC.vmSupportsJDBC3()) {
1:39f35f5:             // Add tests of basic functionality on encrypted databases.
1:6a02fa5:             suite.addTest(EncryptionKeyAESTest.suite());
1:6a02fa5:             suite.addTest(EncryptionKeyBlowfishTest.suite());
1:6a02fa5:             suite.addTest(EncryptionKeyDESTest.suite());
1:d49612c:             suite.addTest(EncryptionAESTest.suite());
1:5c759ff:             suite.addTest(EncryptDatabaseTest.suite());
1:698e880:             suite.addTest(CryptoCrashRecoveryTest.suite());
1:d203eea:             suite.addTest(DecryptDatabaseTest.suite());
1:39f35f5:         }
1:8f56d99: 
1:b1c5200:         return suite;
1:39f35f5:     }
1:b1c5200: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
1: import org.apache.derbyTesting.junit.JDBC;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("store");
commit:5c759ff
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(EncryptDatabaseTest.suite());
commit:581d042
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(UpdateLocksTest.suite());
commit:bb8f25a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(InterruptResilienceTest.suite());
commit:8badf99
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(BootLockTest.suite());
commit:078bb79
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(Derby151Test.suite());
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:8566ca3
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(SpaceTableTest.suite());
1:         
commit:1643c9c
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LockTableVtiTest.suite());
commit:1b89987
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(StoreScriptsTest.suite());
commit:0eb5627
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OCRecoveryTest.suite());
commit:1a36302
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AccessTest.suite());
commit:c33b0cf
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(BackupRestoreTest.suite());
commit:7c33e9c
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OSReadOnlyTest.suite());
commit:d49612c
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(EncryptionAESTest.suite());
commit:6a02fa5
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(EncryptionKeyAESTest.suite());
1:             suite.addTest(EncryptionKeyBlowfishTest.suite());
1:             suite.addTest(EncryptionKeyDESTest.suite());
author:Mike Matrigali
-------------------------------------------------------------------------------
commit:121a532
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby4923Test.suite());
commit:2f41733
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby4577Test.suite());
commit:5314923
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby3625Test.suite());
author:Bryan Pendleton
-------------------------------------------------------------------------------
commit:7e51e9d
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.shared.common.sanity.SanityManager;
commit:a5006eb
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(TableLockBasicTest.suite());
commit:04d93b6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RowLockBasicTest.suite());
commit:faaf464
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LongColumnTest.suite());
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:d203eea
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(DecryptDatabaseTest.suite());
commit:698e880
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(CryptoCrashRecoveryTest.suite());
commit:bce78c9
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(KeepDisposableStatsPropertyTest.suite());
commit:4eea875
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ServicePropertiesFileTest.suite());
commit:127d92a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AutomaticIndexStatisticsTest.suite());
1:         suite.addTest(AutomaticIndexStatisticsMultiTest.suite());
commit:18fca03
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(PositionedStoreStreamTest.suite());
commit:39f35f5
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derbyTesting.junit.JDBC;
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:         // Encryption only supported for Derby in J2SE/J2EE environments.
1:         // J2ME (JSR169) does not support encryption.
1:         if (JDBC.vmSupportsJDBC3()) {
1:             // Add tests of basic functionality on encrypted databases.
0:             suite.addTest(EncryptionKeyAESTest.suite());
0:             suite.addTest(EncryptionKeyBlowfishTest.suite());
0:             suite.addTest(EncryptionKeyDESTest.suite());
1:         }
1: }
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:74e2f88
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5234Test.suite());
commit:18d5980
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(AutomaticIndexStatisticsTest.suite());
0:         suite.addTest(AutomaticIndexStatisticsMultiTest.suite());
commit:16d1105
/////////////////////////////////////////////////////////////////////////
0:         //suite.addTest(AutomaticIndexStatisticsTest.suite());
0:         //suite.addTest(AutomaticIndexStatisticsMultiTest.suite());
commit:e0b3487
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ClassLoaderBootTest.suite());
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:1690ef6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5582AutomaticIndexStatisticsTest.suite());
commit:8f56d99
/////////////////////////////////////////////////////////////////////////
0: import junit.framework.Test;  
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(RecoveryTest.suite());
1: 
/////////////////////////////////////////////////////////////////////////
1: 
commit:1c5f9b3
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(MadhareTest.suite());
commit:e734b17
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(HoldCursorJDBC30Test.suite());
commit:da360eb
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.iapi.services.sanity.SanityManager;
/////////////////////////////////////////////////////////////////////////
1:         
1:         /* Tests that only run in sane builds */
1:         if (SanityManager.DEBUG) {
1:             suite.addTest(HoldCursorExternalSortJDBC30Test.suite());
1:         }
commit:8f33dfd
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(ClobReclamationTest.suite());
commit:7861eea
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LiveLockTest.suite());
commit:c48e69a
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(OfflineBackupTest.suite());
commit:c58f84b
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(StreamingColumnTest.suite());
commit:48ceb6e
/////////////////////////////////////////////////////////////////////////
commit:6e1c9cd
/////////////////////////////////////////////////////////////////////////
0:         suite.addTest(ClassLoaderBootTest.suite());
commit:66a4fc4
/////////////////////////////////////////////////////////////////////////
0: 	    // DERBY-2644 disable encryption tests until permissions failures 
0: 	    // are resolved.
0:             //suite.addTest(EncryptionKeyAESTest.suite());
0:             //suite.addTest(EncryptionKeyBlowfishTest.suite());
0:             //suite.addTest(EncryptionKeyDESTest.suite());
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:20cc8ad
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(BTreeMaxScanTest.suite());
commit:4f7da81
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby4676Test.suite());
commit:0918509
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(IndexSplitDeadlockTest.suite());
commit:1ee9da2
/////////////////////////////////////////////////////////////////////////
1: 
0:         // Disabled until DERBY-2991 has been fixed
0:         //suite.addTest(IndexSplitDeadlockTest.suite());
1: 
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:b1c5200
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.store._Suite
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
1: package org.apache.derbyTesting.functionTests.tests.store;
1: 
0: import org.apache.derbyTesting.junit.BaseTestCase;
0: import junit.framework.Test; 
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Suite to run all JUnit tests in this package:
1:  * org.apache.derbyTesting.functionTests.tests.lang
1:  * <P>
1:  * All tests are run "as-is", just as if they were run
1:  * individually. Thus this test is just a collection
1:  * of all the JUNit tests in this package (excluding itself).
1:  * While the old test harness is in use, some use of decorators
1:  * may be required.
1:  *
1:  */
1: public class _Suite extends BaseTestCase  {
1: 
1:     /**
1:      * Use suite method instead.
1:      */
1:     private _Suite(String name) {
1:         super(name);
1:     }
1: 
1:     public static Test suite() {
1: 
0:         TestSuite suite = new TestSuite("store");
1:         
1:         suite.addTest(BootAllTest.suite());
1:         
1:         return suite;
1:     }
1: }
============================================================================