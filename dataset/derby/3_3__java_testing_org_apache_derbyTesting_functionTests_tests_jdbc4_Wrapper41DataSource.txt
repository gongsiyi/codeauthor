1:09869c6: /*
3:09869c6:  
1:09869c6:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4.Wrapper41DataSource
1:09869c6:  
1:09869c6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:09869c6:    contributor license agreements.  See the NOTICE file distributed with
1:09869c6:    this work for additional information regarding copyright ownership.
1:09869c6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:09869c6:    (the "License"); you may not use this file except in compliance with
1:09869c6:    the License.  You may obtain a copy of the License at
1:09869c6:  
1:09869c6:       http://www.apache.org/licenses/LICENSE-2.0
1:09869c6:  
1:09869c6:    Unless required by applicable law or agreed to in writing, software
1:09869c6:    distributed under the License is distributed on an "AS IS" BASIS,
1:09869c6:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:09869c6:    See the License for the specific language governing permissions and
1:09869c6:    limitations under the License.
1:09869c6:  
1:09869c6:  */
1:09869c6: 
1:09869c6: package org.apache.derbyTesting.functionTests.tests.jdbc4;
1:09869c6: 
1:09869c6: import java.sql.SQLException;
1:09869c6: import java.util.logging.Logger;
1:09869c6: import javax.sql.CommonDataSource;
1:38667d9: import org.apache.derby.jdbc.BasicClientDataSource40;
1:38667d9: import org.apache.derby.jdbc.BasicEmbeddedDataSource40;
1:c712a5b: import org.apache.derby.jdbc.ClientConnectionPoolDataSource;
1:c712a5b: import org.apache.derby.jdbc.ClientDataSource;
1:c712a5b: import org.apache.derby.jdbc.ClientXADataSource;
1:c712a5b: import org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource;
1:c712a5b: import org.apache.derby.jdbc.EmbeddedDataSource;
1:c712a5b: import org.apache.derby.jdbc.EmbeddedXADataSource;
1:c35e4f0: import org.apache.derbyTesting.junit.JDBC;
1:09869c6: 
1:09869c6: /**
1:09869c6:  * A wrapper around the methods added by JDBC 4.1.
1:09869c6:  * We can eliminate this class after Java 7 goes GA and we are allowed
1:09869c6:  * to use the Java 7 compiler to build our released versions of derbyTesting.jar.
1:09869c6:  */
1:09869c6: public  class   Wrapper41DataSource
1:09869c6: {
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // STATE
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:c35e4f0: 
1:c712a5b:     private EmbeddedDataSource               _embedded;
1:c712a5b:     private EmbeddedConnectionPoolDataSource _ecpds;
1:c712a5b:     private EmbeddedXADataSource             _exads;
1:38667d9:     private BasicEmbeddedDataSource40    _basicembedded;
1:c35e4f0: 
1:c712a5b:     private ClientDataSource               _netclient;
1:c712a5b:     private ClientConnectionPoolDataSource _ccpds;
1:c712a5b:     private ClientXADataSource             _cxads;
1:38667d9:     private BasicClientDataSource40      _basicnetclient;
1:09869c6: 
1:09869c6: 
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // CONSTRUCTORS
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     public Wrapper41DataSource( Object wrapped ) throws Exception
1:09869c6:     {
1:c35e4f0:         if (JDBC.vmSupportsJNDI()) {
1:c712a5b:             if ( wrapped instanceof EmbeddedDataSource  ) {
1:c712a5b:                 _embedded = (EmbeddedDataSource) wrapped; }
1:c712a5b:             else if ( wrapped instanceof EmbeddedConnectionPoolDataSource ) {
1:c712a5b:                 _ecpds = (EmbeddedConnectionPoolDataSource) wrapped; }
1:c712a5b:             else if ( wrapped instanceof EmbeddedXADataSource ) {
1:c712a5b:                 _exads = (EmbeddedXADataSource) wrapped; }
1:c712a5b:             else if ( wrapped instanceof ClientDataSource ) {
1:c712a5b:                 _netclient = (ClientDataSource) wrapped; }
1:c712a5b:             else if ( wrapped instanceof ClientConnectionPoolDataSource ) {
1:c712a5b:                 _ccpds = (ClientConnectionPoolDataSource) wrapped; }
1:c712a5b:             else if ( wrapped instanceof ClientXADataSource ) {
1:c712a5b:                 _cxads = (ClientXADataSource) wrapped; }
1:c35e4f0:             else { throw nothingWrapped(); }
1:c35e4f0:         } else {
1:38667d9:             if ( wrapped instanceof BasicEmbeddedDataSource40  ) {
1:38667d9:                 _basicembedded = (BasicEmbeddedDataSource40 ) wrapped; }
1:38667d9:             else if ( wrapped instanceof BasicClientDataSource40 ) {
1:38667d9:                 _basicnetclient = (BasicClientDataSource40) wrapped; }
1:c35e4f0:             else { throw nothingWrapped(); }
1:c35e4f0:         }
1:09869c6:     }
1:09869c6:     
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // JDBC 4.1 BEHAVIOR
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     public  Logger    getParentLogger() throws SQLException
1:09869c6:     {
1:c35e4f0:         if (JDBC.vmSupportsJNDI()) {
1:c35e4f0:             if ( _embedded != null ) {return _embedded.getParentLogger(); }
1:c35e4f0:             else if (_netclient != null) {return _netclient.getParentLogger();}
1:c35e4f0:             else if ( _ecpds != null ) {return _ecpds.getParentLogger(); }
1:c35e4f0:             else if ( _exads != null ) {return _exads.getParentLogger(); }
1:c35e4f0:             else if ( _ccpds != null ) {return _ccpds.getParentLogger(); }
1:c35e4f0:             else if ( _cxads != null ) {return _cxads.getParentLogger(); }
1:c35e4f0:             else { throw nothingWrapped(); }
1:c35e4f0:         } else {
1:38667d9:             if ( _basicembedded != null ) {
1:38667d9:                 return _basicembedded.getParentLogger(); }
1:38667d9:             else if ( _basicnetclient != null) {
1:38667d9:                 return _basicnetclient.getParentLogger(); }
1:c35e4f0:             else { throw nothingWrapped(); }
1:c35e4f0:         }
1:09869c6:     }
1:09869c6: 
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // OTHER PUBLIC BEHAVIOR
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     public CommonDataSource   getWrappedObject() throws SQLException
1:09869c6:     {
1:c35e4f0:         if (JDBC.vmSupportsJNDI()) {
1:c35e4f0:             if ( _embedded != null ) { return _embedded; }
1:c35e4f0:             else if ( _netclient != null ) { return _netclient; }
1:c35e4f0:             else if ( _ecpds != null ) { return _ecpds; }
1:c35e4f0:             else if ( _exads != null ) { return _exads; }
1:c35e4f0:             else if ( _ccpds != null ) { return _ccpds; }
1:c35e4f0:             else if ( _cxads != null ) { return _cxads; }
1:c35e4f0:             else { throw nothingWrapped(); }
1:c35e4f0:         } else {
1:38667d9:             if ( _basicembedded != null ) { return _basicembedded; }
1:38667d9:             else if ( _basicnetclient != null ) { return _basicnetclient; }
1:c35e4f0:             else { throw nothingWrapped(); }
1:c35e4f0:         }
1:09869c6:     }
1:09869c6: 
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6:     //
1:09869c6:     // MINIONS
1:09869c6:     //
1:09869c6:     ///////////////////////////////////////////////////////////////////////
1:09869c6: 
1:09869c6:     private SQLException nothingWrapped() { return new SQLException( "Nothing wrapped!" ); }
1:09869c6: 
1:09869c6: }
1:09869c6: 
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:c712a5b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.jdbc.ClientConnectionPoolDataSource;
1: import org.apache.derby.jdbc.ClientDataSource;
1: import org.apache.derby.jdbc.ClientXADataSource;
1: import org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource;
1: import org.apache.derby.jdbc.EmbeddedDataSource;
1: import org.apache.derby.jdbc.EmbeddedXADataSource;
/////////////////////////////////////////////////////////////////////////
1:     private EmbeddedDataSource               _embedded;
1:     private EmbeddedConnectionPoolDataSource _ecpds;
1:     private EmbeddedXADataSource             _exads;
1:     private ClientDataSource               _netclient;
1:     private ClientConnectionPoolDataSource _ccpds;
1:     private ClientXADataSource             _cxads;
/////////////////////////////////////////////////////////////////////////
1:             if ( wrapped instanceof EmbeddedDataSource  ) {
1:                 _embedded = (EmbeddedDataSource) wrapped; }
1:             else if ( wrapped instanceof EmbeddedConnectionPoolDataSource ) {
1:                 _ecpds = (EmbeddedConnectionPoolDataSource) wrapped; }
1:             else if ( wrapped instanceof EmbeddedXADataSource ) {
1:                 _exads = (EmbeddedXADataSource) wrapped; }
1:             else if ( wrapped instanceof ClientDataSource ) {
1:                 _netclient = (ClientDataSource) wrapped; }
1:             else if ( wrapped instanceof ClientConnectionPoolDataSource ) {
1:                 _ccpds = (ClientConnectionPoolDataSource) wrapped; }
1:             else if ( wrapped instanceof ClientXADataSource ) {
1:                 _cxads = (ClientXADataSource) wrapped; }
commit:fd0edf9
/////////////////////////////////////////////////////////////////////////
0:         else if ( wrapped instanceof ClientDataSource40 ) { _netclient = (ClientDataSource40) wrapped; }
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:38667d9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.jdbc.BasicClientDataSource40;
1: import org.apache.derby.jdbc.BasicEmbeddedDataSource40;
/////////////////////////////////////////////////////////////////////////
1:     private BasicEmbeddedDataSource40    _basicembedded;
1:     private BasicClientDataSource40      _basicnetclient;
/////////////////////////////////////////////////////////////////////////
1:             if ( wrapped instanceof BasicEmbeddedDataSource40  ) {
1:                 _basicembedded = (BasicEmbeddedDataSource40 ) wrapped; }
1:             else if ( wrapped instanceof BasicClientDataSource40 ) {
1:                 _basicnetclient = (BasicClientDataSource40) wrapped; }
/////////////////////////////////////////////////////////////////////////
1:             if ( _basicembedded != null ) {
1:                 return _basicembedded.getParentLogger(); }
1:             else if ( _basicnetclient != null) {
1:                 return _basicnetclient.getParentLogger(); }
/////////////////////////////////////////////////////////////////////////
1:             if ( _basicembedded != null ) { return _basicembedded; }
1:             else if ( _basicnetclient != null ) { return _basicnetclient; }
commit:c35e4f0
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derby.jdbc.ClientDataSource40;
0: import org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40;
0: import org.apache.derby.jdbc.EmbeddedDataSource40;
0: import org.apache.derby.jdbc.EmbeddedXADataSource40;
0: import org.apache.derby.jdbc.NonJNDIClientDataSource40;
0: import org.apache.derby.jdbc.NonJNDIEmbeddedDataSource40;
1: import org.apache.derbyTesting.junit.JDBC;
/////////////////////////////////////////////////////////////////////////
0:     private NonJNDIEmbeddedDataSource40    _nonJNDIembedded;
1: 
0:     private ClientDataSource40      _netclient;
0:     private NonJNDIClientDataSource40      _nonJNDInetclient;
1: 
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJNDI()) {
0:             if ( wrapped instanceof EmbeddedDataSource40  ) {
0:                 _embedded = (EmbeddedDataSource40 ) wrapped; }
0:             else if ( wrapped instanceof EmbeddedConnectionPoolDataSource40 ) {
0:                 _ecpds = (EmbeddedConnectionPoolDataSource40) wrapped; }
0:             else if ( wrapped instanceof EmbeddedXADataSource40 ) {
0:                 _exads = (EmbeddedXADataSource40) wrapped; }
0:             else if ( wrapped instanceof ClientDataSource40 ) {
0:                 _netclient = (ClientDataSource40) wrapped; }
0:             else if ( wrapped instanceof ClientConnectionPoolDataSource40 ) {
0:                 _ccpds = (ClientConnectionPoolDataSource40) wrapped; }
0:             else if ( wrapped instanceof ClientXADataSource40 ) {
0:                 _cxads = (ClientXADataSource40) wrapped; }
1:             else { throw nothingWrapped(); }
1:         } else {
0:             if ( wrapped instanceof NonJNDIEmbeddedDataSource40  ) {
0:                 _nonJNDIembedded = (NonJNDIEmbeddedDataSource40 ) wrapped; }
0:             else if ( wrapped instanceof NonJNDIClientDataSource40 ) {
0:                 _nonJNDInetclient = (NonJNDIClientDataSource40) wrapped; }
1:             else { throw nothingWrapped(); }
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJNDI()) {
1:             if ( _embedded != null ) {return _embedded.getParentLogger(); }
1:             else if (_netclient != null) {return _netclient.getParentLogger();}
1:             else if ( _ecpds != null ) {return _ecpds.getParentLogger(); }
1:             else if ( _exads != null ) {return _exads.getParentLogger(); }
1:             else if ( _ccpds != null ) {return _ccpds.getParentLogger(); }
1:             else if ( _cxads != null ) {return _cxads.getParentLogger(); }
1:             else { throw nothingWrapped(); }
1:         } else {
0:             if ( _nonJNDIembedded != null ) {
0:                 return _nonJNDIembedded.getParentLogger(); }
0:             else if ( _nonJNDInetclient != null) {
0:                 return _nonJNDInetclient.getParentLogger(); }
1:             else { throw nothingWrapped(); }
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJNDI()) {
1:             if ( _embedded != null ) { return _embedded; }
1:             else if ( _netclient != null ) { return _netclient; }
1:             else if ( _ecpds != null ) { return _ecpds; }
1:             else if ( _exads != null ) { return _exads; }
1:             else if ( _ccpds != null ) { return _ccpds; }
1:             else if ( _cxads != null ) { return _cxads; }
1:             else { throw nothingWrapped(); }
1:         } else {
0:             if ( _nonJNDIembedded != null ) { return _nonJNDIembedded; }
0:             else if ( _nonJNDInetclient != null ) { return _nonJNDInetclient; }
1:             else { throw nothingWrapped(); }
1:         }
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:09869c6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4.Wrapper41DataSource
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.jdbc4;
1: 
1: import java.sql.SQLException;
1: import java.util.logging.Logger;
1: import javax.sql.CommonDataSource;
1: 
0: import org.apache.derby.jdbc.EmbeddedDataSource40;
0: import org.apache.derby.jdbc.EmbeddedConnectionPoolDataSource40;
0: import org.apache.derby.jdbc.EmbeddedXADataSource40;
0: import org.apache.derby.jdbc.ClientDataSource40;
0: import org.apache.derby.jdbc.ClientConnectionPoolDataSource40;
0: import org.apache.derby.jdbc.ClientXADataSource40;
1: 
1: /**
1:  * A wrapper around the methods added by JDBC 4.1.
1:  * We can eliminate this class after Java 7 goes GA and we are allowed
1:  * to use the Java 7 compiler to build our released versions of derbyTesting.jar.
1:  */
1: public  class   Wrapper41DataSource
1: {
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
0:     private EmbeddedDataSource40    _embedded;
0:     private ClientDataSource40      _netclient;
0:     private EmbeddedConnectionPoolDataSource40    _ecpds;
0:     private EmbeddedXADataSource40    _exads;
0:     private ClientConnectionPoolDataSource40      _ccpds;
0:     private ClientXADataSource40      _cxads;
1: 
1:     
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTORS
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public Wrapper41DataSource( Object wrapped ) throws Exception
1:     {
0:         if ( wrapped instanceof EmbeddedDataSource40  ) { _embedded = (EmbeddedDataSource40 ) wrapped; }
0:         else if ( wrapped instanceof ClientDataSource40 ) { _netclient = (ClientDataSource40) wrapped; }
0:         else if ( wrapped instanceof EmbeddedConnectionPoolDataSource40 ) { _ecpds = (EmbeddedConnectionPoolDataSource40) wrapped; }
0:         else if ( wrapped instanceof EmbeddedXADataSource40 ) { _exads = (EmbeddedXADataSource40) wrapped; }
0:         else if ( wrapped instanceof ClientConnectionPoolDataSource40 ) { _ccpds = (ClientConnectionPoolDataSource40) wrapped; }
0:         else if ( wrapped instanceof ClientXADataSource40 ) { _cxads = (ClientXADataSource40) wrapped; }
0:         else { throw nothingWrapped(); }
1:     }
1:     
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // JDBC 4.1 BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public  Logger    getParentLogger() throws SQLException
1:     {
0:         if ( _embedded != null ) { return _embedded.getParentLogger(); }
0:         else if ( _netclient != null ) { return _netclient.getParentLogger(); }
0:         else if ( _ecpds != null ) { return _ecpds.getParentLogger(); }
0:         else if ( _exads != null ) { return _exads.getParentLogger(); }
0:         else if ( _ccpds != null ) { return _ccpds.getParentLogger(); }
0:         else if ( _cxads != null ) { return _cxads.getParentLogger(); }
0:         else { throw nothingWrapped(); }
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // OTHER PUBLIC BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     public CommonDataSource   getWrappedObject() throws SQLException
1:     {
0:         if ( _embedded != null ) { return _embedded; }
0:         else if ( _netclient != null ) { return _netclient; }
0:         else if ( _ecpds != null ) { return _ecpds; }
0:         else if ( _exads != null ) { return _exads; }
0:         else if ( _ccpds != null ) { return _ccpds; }
0:         else if ( _cxads != null ) { return _cxads; }
0:         else { throw nothingWrapped(); }
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////
1:     //
1:     // MINIONS
1:     //
1:     ///////////////////////////////////////////////////////////////////////
1: 
1:     private SQLException nothingWrapped() { return new SQLException( "Nothing wrapped!" ); }
1: 
1: }
1: 
============================================================================