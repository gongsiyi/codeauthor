1:fe77ca5: /*
1:985fc85: 
1:985fc85:    Derby - Class org.apache.derby.impl.tools.ij.ijException
1:985fc85: 
1:11bc2d0:    Licensed to the Apache Software Foundation (ASF) under one or more
1:11bc2d0:    contributor license agreements.  See the NOTICE file distributed with
1:11bc2d0:    this work for additional information regarding copyright ownership.
1:11bc2d0:    The ASF licenses this file to You under the Apache License, Version 2.0
1:11bc2d0:    (the "License"); you may not use this file except in compliance with
1:11bc2d0:    the License.  You may obtain a copy of the License at
1:985fc85: 
1:985fc85:       http://www.apache.org/licenses/LICENSE-2.0
1:985fc85: 
1:985fc85:    Unless required by applicable law or agreed to in writing, software
1:985fc85:    distributed under the License is distributed on an "AS IS" BASIS,
1:985fc85:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:985fc85:    See the License for the specific language governing permissions and
1:985fc85:    limitations under the License.
2:fe77ca5: 
2:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: package org.apache.derby.impl.tools.ij;
1:fe77ca5: 
1:fe77ca5: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1:fe77ca5: import java.io.IOException;
1:fe77ca5: 
2:fe77ca5: /**
1:fe77ca5: 	ijException is used to get messages from the ij parser to
1:fe77ca5: 	the main ij loop. Because this is not under the protocol/impl
1:fe77ca5: 	umbrella, it does not have available to it the message service.
1:fe77ca5: 	At this time, all messages are hard-coded in this file. A more
1:fe77ca5: 	serviceable solution may need to be found.
1:fe77ca5: 
1:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: public class ijException extends RuntimeException {
1:fe77ca5: 
1:fe77ca5: 	private	final static String	IllegalStatementName="IJ_IllegalStatementName";
1:fe77ca5: 	private final static String NotYetImplemented="IJ_NotYetImpl";
1:fe77ca5: 	private final static String AlreadyHaveConnectionNamed = "IJ_AlreHaveACon";
1:fe77ca5: 	private final static String BangException = "IJ_ExceRunnComm";
1:fe77ca5: 	private final static String ConnectionGetWarningsFailed = "IJ_UnabToGetWar";
1:fe77ca5: 	private final static String ClassNotFoundForProtocol = "IJ_CoulNotLocaC";
1:fe77ca5: 	private final static String ClassNotFound = "IJ_CoulNotLocaC_5";
1:fe77ca5: 	private final static String DisconnectFailed = "IJ_FailToDisc";
1:fe77ca5: 	private final static String DriverNotClassName = "IJ_DrivNotClasN";
1:fe77ca5: 	private final static String FileNotFound = "IJ_FileNotFoun";
1:fe77ca5: 	private final static String ForwardOnlyCursor = "IJ_IsNotAlloOnA";
1:fe77ca5: 	private final static String GetConnectionFailed = "IJ_GetcCallFail";
1:fe77ca5: 	private final static String IOException = "IJ_Ioex";
1:fe77ca5: 	private final static String NeedToDisconnect = "IJ_NeedToDiscFi";
1:fe77ca5: 	private final static String NoSuchAsyncStatement = "IJ_NoAsynStatEx";
1:fe77ca5: 	private final static String NoSuchConnection = "IJ_NoConnExisWi";
1:fe77ca5: 	private final static String NoSuchProtocol = "IJ_NoProtExisWi";
1:a9217e9: 	private final static String NoSuchTable = "IJ_NoSuchTable";
1:fe77ca5: 	private final static String NoUsingResults = "IJ_UsinClauHadN";
1:fe77ca5: 	private final static String ObjectWasNull = "IJ_UnabToEsta";
1:fe77ca5: 	private final static String ResultSetGetWarningsFailed = "IJ_UnabToGetWar_19";
1:fe77ca5:     private final static String ResourceNotFound = "IJ_ResoNotFoun";
1:fe77ca5: 	private final static String ScrollCursorsNotSupported = "IJ_ScroCursAre1";
1:fe77ca5: 	private final static String StatementGetWarningsFailed = "IJ_UnabToGetWar_22";
1:fe77ca5: 	private final static String WaitInterrupted = "IJ_WaitForStatI";
1:fe77ca5: 	private final static String ZeroInvalidForAbsolute = "IJ_0IsAnInvaVal";
1:d02fa84: 	private final static String NotAvailableForDriver = "IJ_NotAvailForDriver";
1:fe77ca5: 
1:fe77ca5: 	public ijException(String message) {
1:fe77ca5: 		super(message);
3:fe77ca5: 	}
1:fe77ca5: 
1:fe77ca5: 	static ijException notYetImplemented() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(NotYetImplemented));
1:fe77ca5: 	}
1:fe77ca5: 
1:fe77ca5: 	static ijException illegalStatementName(String n) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(IllegalStatementName, n));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException alreadyHaveConnectionNamed(String n) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(AlreadyHaveConnectionNamed, n));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException bangException(Throwable t) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(BangException, t.toString()));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException classNotFoundForProtocol(String p) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ClassNotFoundForProtocol, p));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException classNotFound(String c) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ClassNotFound, c));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException connectionGetWarningsFailed() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ConnectionGetWarningsFailed));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException disconnectFailed() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(DisconnectFailed));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException driverNotClassName(String c) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(DriverNotClassName, c));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException fileNotFound() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(FileNotFound));
1:fe77ca5: 	}
1:fe77ca5: 	static public ijException forwardOnlyCursor(String operation) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ForwardOnlyCursor, operation));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException resourceNotFound() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ResourceNotFound));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException getConnectionFailed() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(GetConnectionFailed));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException iOException(IOException t) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(IOException, t.getMessage()));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException needToDisconnect() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(NeedToDisconnect));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException noSuchAsyncStatement(String c) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(NoSuchAsyncStatement, c));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException noSuchConnection(String c) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(NoSuchConnection, c));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException noSuchProtocol(String c) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(NoSuchProtocol, c));
1:fe77ca5: 	}
1:a9217e9: 	static ijException noSuchTable(String c) {
1:a9217e9: 		return new ijException(LocalizedResource.getMessage(NoSuchTable, c));
1:a9217e9: 	}
1:fe77ca5: 	static ijException noUsingResults() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(NoUsingResults));
1:fe77ca5: 	}
1:fe77ca5: 	static public ijException objectWasNull(String objectName) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ObjectWasNull, objectName));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException resultSetGetWarningsFailed() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ResultSetGetWarningsFailed));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException scrollCursorsNotSupported() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ScrollCursorsNotSupported));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException statementGetWarningsFailed() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(StatementGetWarningsFailed));
1:fe77ca5: 	}
1:fe77ca5: 	static ijException waitInterrupted(Throwable t) {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(WaitInterrupted, t.toString()));
1:fe77ca5: 	}
1:fe77ca5: 	public static ijException zeroInvalidForAbsolute() {
1:fe77ca5: 		return new ijException(LocalizedResource.getMessage(ZeroInvalidForAbsolute));
1:fe77ca5: 	}
1:d02fa84: 	public static ijException notAvailableForDriver(String s) {
1:d02fa84: 		return new ijException(
1:d02fa84: 			LocalizedResource.getMessage(NotAvailableForDriver, s));
1:d02fa84: 	}
1:fe77ca5: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:5c29a4d
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:d02fa84
/////////////////////////////////////////////////////////////////////////
1: 	private final static String NotAvailableForDriver = "IJ_NotAvailForDriver";
/////////////////////////////////////////////////////////////////////////
1: 	public static ijException notAvailableForDriver(String s) {
1: 		return new ijException(
1: 			LocalizedResource.getMessage(NotAvailableForDriver, s));
1: 	}
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:c06280c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:a9217e9
/////////////////////////////////////////////////////////////////////////
1: 	private final static String NoSuchTable = "IJ_NoSuchTable";
/////////////////////////////////////////////////////////////////////////
1: 	static ijException noSuchTable(String c) {
1: 		return new ijException(LocalizedResource.getMessage(NoSuchTable, c));
1: 	}
author:David Van Couvering
-------------------------------------------------------------------------------
commit:11bc2d0
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:985fc85
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.tools.ij.ijException
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:a8ff4fd
/////////////////////////////////////////////////////////////////////////
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.tools.ij
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.impl.tools.ij;
1: 
1: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
1: import java.io.IOException;
1: 
1: /**
1: 	ijException is used to get messages from the ij parser to
1: 	the main ij loop. Because this is not under the protocol/impl
1: 	umbrella, it does not have available to it the message service.
1: 	At this time, all messages are hard-coded in this file. A more
1: 	serviceable solution may need to be found.
1: 
0: 	@author ames.
1:  */
1: 
1: public class ijException extends RuntimeException {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 
1: 	private	final static String	IllegalStatementName="IJ_IllegalStatementName";
1: 	private final static String NotYetImplemented="IJ_NotYetImpl";
1: 	private final static String AlreadyHaveConnectionNamed = "IJ_AlreHaveACon";
1: 	private final static String BangException = "IJ_ExceRunnComm";
1: 	private final static String ConnectionGetWarningsFailed = "IJ_UnabToGetWar";
1: 	private final static String ClassNotFoundForProtocol = "IJ_CoulNotLocaC";
1: 	private final static String ClassNotFound = "IJ_CoulNotLocaC_5";
1: 	private final static String DisconnectFailed = "IJ_FailToDisc";
1: 	private final static String DriverNotClassName = "IJ_DrivNotClasN";
1: 	private final static String FileNotFound = "IJ_FileNotFoun";
1: 	private final static String ForwardOnlyCursor = "IJ_IsNotAlloOnA";
1: 	private final static String GetConnectionFailed = "IJ_GetcCallFail";
1: 	private final static String IOException = "IJ_Ioex";
1: 	private final static String NeedToDisconnect = "IJ_NeedToDiscFi";
1: 	private final static String NoSuchAsyncStatement = "IJ_NoAsynStatEx";
1: 	private final static String NoSuchConnection = "IJ_NoConnExisWi";
1: 	private final static String NoSuchProtocol = "IJ_NoProtExisWi";
0: 	private final static String NotJDBC20 = "IJ_IsOnlySuppIn";
1: 	private final static String NoUsingResults = "IJ_UsinClauHadN";
1: 	private final static String ObjectWasNull = "IJ_UnabToEsta";
1: 	private final static String ResultSetGetWarningsFailed = "IJ_UnabToGetWar_19";
1:     private final static String ResourceNotFound = "IJ_ResoNotFoun";
1: 	private final static String ScrollCursorsNotSupported = "IJ_ScroCursAre1";
0: 	private final static String HoldCursorsNotSupported = "IJ_HoldCursAre4";
1: 	private final static String StatementGetWarningsFailed = "IJ_UnabToGetWar_22";
1: 	private final static String WaitInterrupted = "IJ_WaitForStatI";
1: 	private final static String ZeroInvalidForAbsolute = "IJ_0IsAnInvaVal";
1: 
1: 	public ijException(String message) {
1: 		super(message);
1: 	}
1: 
1: 	static ijException notYetImplemented() {
1: 		return new ijException(LocalizedResource.getMessage(NotYetImplemented));
1: 	}
1: 
1: 	static ijException illegalStatementName(String n) {
1: 		return new ijException(LocalizedResource.getMessage(IllegalStatementName, n));
1: 	}
1: 	static ijException alreadyHaveConnectionNamed(String n) {
1: 		return new ijException(LocalizedResource.getMessage(AlreadyHaveConnectionNamed, n));
1: 	}
1: 	static ijException bangException(Throwable t) {
1: 		return new ijException(LocalizedResource.getMessage(BangException, t.toString()));
1: 	}
1: 	static ijException classNotFoundForProtocol(String p) {
1: 		return new ijException(LocalizedResource.getMessage(ClassNotFoundForProtocol, p));
1: 	}
1: 	static ijException classNotFound(String c) {
1: 		return new ijException(LocalizedResource.getMessage(ClassNotFound, c));
1: 	}
1: 	static ijException connectionGetWarningsFailed() {
1: 		return new ijException(LocalizedResource.getMessage(ConnectionGetWarningsFailed));
1: 	}
1: 	static ijException disconnectFailed() {
1: 		return new ijException(LocalizedResource.getMessage(DisconnectFailed));
1: 	}
1: 	static ijException driverNotClassName(String c) {
1: 		return new ijException(LocalizedResource.getMessage(DriverNotClassName, c));
1: 	}
1: 	static ijException fileNotFound() {
1: 		return new ijException(LocalizedResource.getMessage(FileNotFound));
1: 	}
1: 	static public ijException forwardOnlyCursor(String operation) {
1: 		return new ijException(LocalizedResource.getMessage(ForwardOnlyCursor, operation));
1: 	}
1: 	static ijException resourceNotFound() {
1: 		return new ijException(LocalizedResource.getMessage(ResourceNotFound));
1: 	}
1: 	static ijException getConnectionFailed() {
1: 		return new ijException(LocalizedResource.getMessage(GetConnectionFailed));
1: 	}
1: 	static ijException iOException(IOException t) {
1: 		return new ijException(LocalizedResource.getMessage(IOException, t.getMessage()));
1: 	}
1: 	static ijException needToDisconnect() {
1: 		return new ijException(LocalizedResource.getMessage(NeedToDisconnect));
1: 	}
1: 	static ijException noSuchAsyncStatement(String c) {
1: 		return new ijException(LocalizedResource.getMessage(NoSuchAsyncStatement, c));
1: 	}
1: 	static ijException noSuchConnection(String c) {
1: 		return new ijException(LocalizedResource.getMessage(NoSuchConnection, c));
1: 	}
1: 	static ijException noSuchProtocol(String c) {
1: 		return new ijException(LocalizedResource.getMessage(NoSuchProtocol, c));
1: 	}
0: 	static public ijException notJDBC20(String operation) {
0: 		return new ijException(LocalizedResource.getMessage(NotJDBC20, operation));
1: 	}
1: 	static ijException noUsingResults() {
1: 		return new ijException(LocalizedResource.getMessage(NoUsingResults));
1: 	}
1: 	static public ijException objectWasNull(String objectName) {
1: 		return new ijException(LocalizedResource.getMessage(ObjectWasNull, objectName));
1: 	}
1: 	static ijException resultSetGetWarningsFailed() {
1: 		return new ijException(LocalizedResource.getMessage(ResultSetGetWarningsFailed));
1: 	}
1: 	static ijException scrollCursorsNotSupported() {
1: 		return new ijException(LocalizedResource.getMessage(ScrollCursorsNotSupported));
1: 	}
0: 	//IJImpl20.utilMain can't throw exception for holdable cursors if
0: 	//following not declared public
0: 	public static ijException holdCursorsNotSupported() {
0: 		return new ijException(LocalizedResource.getMessage(HoldCursorsNotSupported));
1: 	}
1: 	static ijException statementGetWarningsFailed() {
1: 		return new ijException(LocalizedResource.getMessage(StatementGetWarningsFailed));
1: 	}
1: 	static ijException waitInterrupted(Throwable t) {
1: 		return new ijException(LocalizedResource.getMessage(WaitInterrupted, t.toString()));
1: 	}
1: 	public static ijException zeroInvalidForAbsolute() {
1: 		return new ijException(LocalizedResource.getMessage(ZeroInvalidForAbsolute));
1: 	}
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.tools.ij
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.impl.tools.ij;
0: 
0: import org.apache.derby.iapi.tools.i18n.LocalizedResource;
0: import java.io.IOException;
0: 
0: /**
0: 	ijException is used to get messages from the ij parser to
0: 	the main ij loop. Because this is not under the protocol/impl
0: 	umbrella, it does not have available to it the message service.
0: 	At this time, all messages are hard-coded in this file. A more
0: 	serviceable solution may need to be found.
0: 
0: 	@author ames.
0:  */
0: 
0: public class ijException extends RuntimeException {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 
0: 	private	final static String	IllegalStatementName="IJ_IllegalStatementName";
0: 	private final static String NotYetImplemented="IJ_NotYetImpl";
0: 	private final static String AlreadyHaveConnectionNamed = "IJ_AlreHaveACon";
0: 	private final static String BangException = "IJ_ExceRunnComm";
0: 	private final static String ConnectionGetWarningsFailed = "IJ_UnabToGetWar";
0: 	private final static String ClassNotFoundForProtocol = "IJ_CoulNotLocaC";
0: 	private final static String ClassNotFound = "IJ_CoulNotLocaC_5";
0: 	private final static String DisconnectFailed = "IJ_FailToDisc";
0: 	private final static String DriverNotClassName = "IJ_DrivNotClasN";
0: 	private final static String FileNotFound = "IJ_FileNotFoun";
0: 	private final static String ForwardOnlyCursor = "IJ_IsNotAlloOnA";
0: 	private final static String GetConnectionFailed = "IJ_GetcCallFail";
0: 	private final static String IOException = "IJ_Ioex";
0: 	private final static String NeedToDisconnect = "IJ_NeedToDiscFi";
0: 	private final static String NoSuchAsyncStatement = "IJ_NoAsynStatEx";
0: 	private final static String NoSuchConnection = "IJ_NoConnExisWi";
0: 	private final static String NoSuchProtocol = "IJ_NoProtExisWi";
0: 	private final static String NotJDBC20 = "IJ_IsOnlySuppIn";
0: 	private final static String NoUsingResults = "IJ_UsinClauHadN";
0: 	private final static String ObjectWasNull = "IJ_UnabToEsta";
0: 	private final static String ResultSetGetWarningsFailed = "IJ_UnabToGetWar_19";
0:     private final static String ResourceNotFound = "IJ_ResoNotFoun";
0: 	private final static String ScrollCursorsNotSupported = "IJ_ScroCursAre1";
0: 	private final static String HoldCursorsNotSupported = "IJ_HoldCursAre4";
0: 	private final static String StatementGetWarningsFailed = "IJ_UnabToGetWar_22";
0: 	private final static String WaitInterrupted = "IJ_WaitForStatI";
0: 	private final static String ZeroInvalidForAbsolute = "IJ_0IsAnInvaVal";
0: 
0: 	public ijException(String message) {
0: 		super(message);
0: 	}
0: 
0: 	static ijException notYetImplemented() {
0: 		return new ijException(LocalizedResource.getMessage(NotYetImplemented));
0: 	}
0: 
0: 	static ijException illegalStatementName(String n) {
0: 		return new ijException(LocalizedResource.getMessage(IllegalStatementName, n));
0: 	}
0: 	static ijException alreadyHaveConnectionNamed(String n) {
0: 		return new ijException(LocalizedResource.getMessage(AlreadyHaveConnectionNamed, n));
0: 	}
0: 	static ijException bangException(Throwable t) {
0: 		return new ijException(LocalizedResource.getMessage(BangException, t.toString()));
0: 	}
0: 	static ijException classNotFoundForProtocol(String p) {
0: 		return new ijException(LocalizedResource.getMessage(ClassNotFoundForProtocol, p));
0: 	}
0: 	static ijException classNotFound(String c) {
0: 		return new ijException(LocalizedResource.getMessage(ClassNotFound, c));
0: 	}
0: 	static ijException connectionGetWarningsFailed() {
0: 		return new ijException(LocalizedResource.getMessage(ConnectionGetWarningsFailed));
0: 	}
0: 	static ijException disconnectFailed() {
0: 		return new ijException(LocalizedResource.getMessage(DisconnectFailed));
0: 	}
0: 	static ijException driverNotClassName(String c) {
0: 		return new ijException(LocalizedResource.getMessage(DriverNotClassName, c));
0: 	}
0: 	static ijException fileNotFound() {
0: 		return new ijException(LocalizedResource.getMessage(FileNotFound));
0: 	}
0: 	static public ijException forwardOnlyCursor(String operation) {
0: 		return new ijException(LocalizedResource.getMessage(ForwardOnlyCursor, operation));
0: 	}
0: 	static ijException resourceNotFound() {
0: 		return new ijException(LocalizedResource.getMessage(ResourceNotFound));
0: 	}
0: 	static ijException getConnectionFailed() {
0: 		return new ijException(LocalizedResource.getMessage(GetConnectionFailed));
0: 	}
0: 	static ijException iOException(IOException t) {
0: 		return new ijException(LocalizedResource.getMessage(IOException, t.getMessage()));
0: 	}
0: 	static ijException needToDisconnect() {
0: 		return new ijException(LocalizedResource.getMessage(NeedToDisconnect));
0: 	}
0: 	static ijException noSuchAsyncStatement(String c) {
0: 		return new ijException(LocalizedResource.getMessage(NoSuchAsyncStatement, c));
0: 	}
0: 	static ijException noSuchConnection(String c) {
0: 		return new ijException(LocalizedResource.getMessage(NoSuchConnection, c));
0: 	}
0: 	static ijException noSuchProtocol(String c) {
0: 		return new ijException(LocalizedResource.getMessage(NoSuchProtocol, c));
0: 	}
0: 	static public ijException notJDBC20(String operation) {
0: 		return new ijException(LocalizedResource.getMessage(NotJDBC20, operation));
0: 	}
0: 	static ijException noUsingResults() {
0: 		return new ijException(LocalizedResource.getMessage(NoUsingResults));
0: 	}
0: 	static public ijException objectWasNull(String objectName) {
0: 		return new ijException(LocalizedResource.getMessage(ObjectWasNull, objectName));
0: 	}
0: 	static ijException resultSetGetWarningsFailed() {
0: 		return new ijException(LocalizedResource.getMessage(ResultSetGetWarningsFailed));
0: 	}
0: 	static ijException scrollCursorsNotSupported() {
0: 		return new ijException(LocalizedResource.getMessage(ScrollCursorsNotSupported));
0: 	}
0: 	//IJImpl20.utilMain can't throw exception for holdable cursors if
0: 	//following not declared public
0: 	public static ijException holdCursorsNotSupported() {
0: 		return new ijException(LocalizedResource.getMessage(HoldCursorsNotSupported));
0: 	}
0: 	static ijException statementGetWarningsFailed() {
0: 		return new ijException(LocalizedResource.getMessage(StatementGetWarningsFailed));
0: 	}
0: 	static ijException waitInterrupted(Throwable t) {
0: 		return new ijException(LocalizedResource.getMessage(WaitInterrupted, t.toString()));
0: 	}
0: 	public static ijException zeroInvalidForAbsolute() {
0: 		return new ijException(LocalizedResource.getMessage(ZeroInvalidForAbsolute));
0: 	}
0: }
============================================================================