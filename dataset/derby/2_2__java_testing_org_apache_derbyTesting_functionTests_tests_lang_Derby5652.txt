1:213d360: /*
1:213d360:  * Class org.apache.derbyTesting.functionTests.tests.lang.Derby5652
1:213d360:  *
1:213d360:  * Licensed to the Apache Software Foundation (ASF) under one
1:213d360:  * or more contributor license agreements.  See the NOTICE file
1:213d360:  * distributed with this work for additional information
1:213d360:  * regarding copyright ownership.  The ASF licenses this file
1:213d360:  * to you under the Apache License, Version 2.0 (the
1:213d360:  * "License"); you may not use this file except in compliance
1:213d360:  * with the License.  You may obtain a copy of the License at
1:213d360:  *
1:213d360:  *   http://www.apache.org/licenses/LICENSE-2.0
1:213d360:  *
1:213d360:  * Unless required by applicable law or agreed to in writing,
1:213d360:  * software distributed under the License is distributed on an
1:213d360:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:213d360:  * KIND, either express or implied.  See the License for the
1:213d360:  * specific language governing permissions and limitations
1:213d360:  * under the License.
1:213d360:  */
1:213d360: 
1:213d360: package org.apache.derbyTesting.functionTests.tests.lang;
1:213d360: 
1:213d360: import java.sql.SQLException;
1:213d360: import junit.framework.Test;
1:213d360: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:213d360: import org.apache.derbyTesting.junit.SecurityManagerSetup;
1:213d360: 
1:213d360: public class Derby5652 extends BaseJDBCTestCase
1:213d360: {
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360:     //
1:213d360:     // CONSTANTS
1:213d360:     //
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360: 
1:213d360:     private static  final   String  PROVIDER_PROPERTY = "derby.authentication.provider";
1:213d360: 
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360:     //
1:213d360:     // STATE
1:213d360:     //
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360: 
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360:     //
1:213d360:     // CONSTRUCTOR
1:213d360:     //
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360: 
1:213d360:     public Derby5652( String name ) { super(name); }
1:213d360: 
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360:     //
1:213d360:     // JUnit BEHAVIOR
1:213d360:     //
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360: 
1:213d360:     /**
1:213d360:      * Construct top level suite in this JUnit test
1:213d360:      */
1:213d360:     public static Test suite()
1:213d360:     {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite( "Derby5652" );
1:213d360: 
1:213d360:         Test    test = new Derby5652( "basicTest" );
1:213d360: 
1:213d360:         // turn off security manager so that we can change system properties
1:213d360:         test = SecurityManagerSetup.noSecurityManager( test );
1:213d360: 
1:213d360:         suite.addTest( test );
1:213d360: 
1:213d360:         return suite;
1:213d360:     }
1:213d360: 
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360:     //
1:213d360:     // TESTS
1:213d360:     //
1:213d360:     ///////////////////////////////////////////////////////////////////////////////////
1:213d360: 
1:213d360:     /**
1:213d360:      * <p>
1:213d360:      * Trailing garbage after the credentials db name should produce a useful
1:213d360:      * error message instead of an assertion failure.
1:213d360:      * </p>
1:213d360:      */
1:213d360:     public  void    basicTest()  throws  Exception
1:213d360:     {
1:213d360:         // run the test in another process because it creates a zombie engine
1:213d360:         // which can't be killed. see derby-5757.
1:213d360:         assertLaunchedJUnitTestMethod( getClass().getName() + ".badProperty", null );
1:213d360:     }
1:213d360:     
1:213d360:     /**
1:213d360:      * <p>
1:213d360:      * Trailing garbage after the credentials db name should produce a useful
1:213d360:      * error message.
1:213d360:      * </p>
1:213d360:      */
1:213d360:     public  void    badProperty()  throws  Exception
1:213d360:     {
1:213d360:         // bring down the engine in order to have a clean environment
1:213d360:         getTestConfiguration().shutdownEngine();
1:213d360: 
1:213d360:         // configure an illegal credentials db name--this one has an illegal trailing colon
1:213d360:         setSystemProperty( PROVIDER_PROPERTY, "NATIVE:db:" );
1:213d360: 
1:213d360:         // verify that you can't connect with this provider setting
1:213d360:         try {
1:213d360:             openUserConnection( "fooUser" );
1:213d360:         }
1:213d360:         catch (SQLException se)
1:213d360:         {
1:213d360:             // look for a login failure message. the detailed error is printed to
1:213d360:             // derby.log and not percolated out of the Monitor.
1:213d360:             assertSQLState( "08004", se );
1:213d360:         }
1:213d360:     }
1:213d360:     
1:213d360: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite( "Derby5652" );
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:213d360
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Class org.apache.derbyTesting.functionTests.tests.lang.Derby5652
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import java.sql.SQLException;
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: import org.apache.derbyTesting.junit.BaseJDBCTestCase;
1: import org.apache.derbyTesting.junit.SecurityManagerSetup;
0: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class Derby5652 extends BaseJDBCTestCase
1: {
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTANTS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     private static  final   String  PROVIDER_PROPERTY = "derby.authentication.provider";
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public Derby5652( String name ) { super(name); }
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // JUnit BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Construct top level suite in this JUnit test
1:      */
1:     public static Test suite()
1:     {
0:         TestSuite suite = new TestSuite( "Derby5652" );
1: 
1:         Test    test = new Derby5652( "basicTest" );
1: 
1:         // turn off security manager so that we can change system properties
1:         test = SecurityManagerSetup.noSecurityManager( test );
1: 
1:         suite.addTest( test );
1: 
1:         return suite;
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // TESTS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * <p>
1:      * Trailing garbage after the credentials db name should produce a useful
1:      * error message instead of an assertion failure.
1:      * </p>
1:      */
1:     public  void    basicTest()  throws  Exception
1:     {
1:         // run the test in another process because it creates a zombie engine
1:         // which can't be killed. see derby-5757.
1:         assertLaunchedJUnitTestMethod( getClass().getName() + ".badProperty", null );
1:     }
1:     
1:     /**
1:      * <p>
1:      * Trailing garbage after the credentials db name should produce a useful
1:      * error message.
1:      * </p>
1:      */
1:     public  void    badProperty()  throws  Exception
1:     {
1:         // bring down the engine in order to have a clean environment
1:         getTestConfiguration().shutdownEngine();
1: 
1:         // configure an illegal credentials db name--this one has an illegal trailing colon
1:         setSystemProperty( PROVIDER_PROPERTY, "NATIVE:db:" );
1: 
1:         // verify that you can't connect with this provider setting
1:         try {
1:             openUserConnection( "fooUser" );
1:         }
1:         catch (SQLException se)
1:         {
1:             // look for a login failure message. the detailed error is printed to
1:             // derby.log and not percolated out of the Monitor.
1:             assertSQLState( "08004", se );
1:         }
1:     }
1:     
1: }
============================================================================