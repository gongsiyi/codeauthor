1:b7730e4: /*
4:b7730e4: 
1:b7730e4:    Derby - Class org.apache.derby.impl.sql.compile.RoutineDesignator
1:b7730e4: 
1:2d37fd6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2d37fd6:    contributor license agreements.  See the NOTICE file distributed with
1:2d37fd6:    this work for additional information regarding copyright ownership.
1:2d37fd6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2d37fd6:    (the "License"); you may not use this file except in compliance with
1:2d37fd6:    the License.  You may obtain a copy of the License at
1:b7730e4: 
1:b7730e4: 	  http://www.apache.org/licenses/LICENSE-2.0
1:b7730e4: 
1:b7730e4:    Unless required by applicable law or agreed to in writing, software
1:b7730e4:    distributed under the License is distributed on an "AS IS" BASIS,
1:b7730e4:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b7730e4:    See the License for the specific language governing permissions and
1:b7730e4:    limitations under the License.
1:b7730e4: 
1:b7730e4:  */
1:b7730e4: 
1:b7730e4: package	org.apache.derby.impl.sql.compile;
1:b7730e4: 
1:3bb140c: import java.util.List;
1:3bb140c: import org.apache.derby.catalog.TypeDescriptor;
1:3bb140c: import org.apache.derby.iapi.sql.dictionary.AliasDescriptor;
1:b7730e4: import org.apache.derby.impl.sql.execute.PrivilegeInfo;
1:b7730e4: import org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo;
1:b7730e4: 
1:b7730e4: /**
1:b7730e4:  * This node represents a routine signature.
1:b7730e4:  */
1:2e83f13: class RoutineDesignator
1:b7730e4: {
1:b7730e4: 	TableName name; // TableName is a misnomer it is really just a schema qualified name
1:b7730e4: 	boolean isFunction; // else a procedure
1:b7730e4: 	/**
1:b7730e4: 	 * A list of DataTypeDescriptors
1:b7730e4: 	 * if null then the signature is not specified and this designator is ambiguous if there is
1:b7730e4: 	 * more than one function (procedure) with this name.
1:b7730e4: 	 */
1:3bb140c:     List<TypeDescriptor> paramTypeList;
1:b7730e4: 	AliasDescriptor aliasDescriptor;
1:b7730e4: 
1:3bb140c:     RoutineDesignator( TableName name,
1:3bb140c:                        boolean isFunction,
1:3bb140c:                        List<TypeDescriptor> paramTypeList)
1:b7730e4: 	{
1:b7730e4: 		this.name = name;
1:b7730e4: 		this.isFunction = isFunction;
1:b7730e4: 		this.paramTypeList = paramTypeList;
1:b7730e4: 	}
1:b7730e4: 
1:b7730e4: 	void setAliasDescriptor( AliasDescriptor aliasDescriptor)
1:b7730e4: 	{
1:b7730e4: 		this.aliasDescriptor = aliasDescriptor;
1:b7730e4: 	}
1:b7730e4: 	
1:b7730e4: 	/**
1:b7730e4: 	 * @return PrivilegeInfo for this node
1:b7730e4: 	 */
1:b7730e4: 	PrivilegeInfo makePrivilegeInfo()
1:b7730e4: 	{
1:b7730e4: 		return new RoutinePrivilegeInfo( aliasDescriptor);
1:b7730e4: 	}
1:b7730e4: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:3bb140c
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1: import org.apache.derby.catalog.TypeDescriptor;
1: import org.apache.derby.iapi.sql.dictionary.AliasDescriptor;
/////////////////////////////////////////////////////////////////////////
1:     List<TypeDescriptor> paramTypeList;
1:     RoutineDesignator( TableName name,
1:                        boolean isFunction,
1:                        List<TypeDescriptor> paramTypeList)
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:2e83f13
/////////////////////////////////////////////////////////////////////////
1: class RoutineDesignator
/////////////////////////////////////////////////////////////////////////
0: 	RoutineDesignator( boolean isSpecific,
author:David Van Couvering
-------------------------------------------------------------------------------
commit:2d37fd6
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Satheesh E. Bandaram
-------------------------------------------------------------------------------
commit:b7730e4
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.impl.sql.compile.RoutineDesignator
1: 
0:    Copyright 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1: 	  http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package	org.apache.derby.impl.sql.compile;
1: 
0: import org.apache.derby.iapi.error.StandardException;
1: 
1: import org.apache.derby.impl.sql.execute.PrivilegeInfo;
1: import org.apache.derby.impl.sql.execute.RoutinePrivilegeInfo;
0: import org.apache.derby.iapi.sql.dictionary.AliasDescriptor;
1: 
0: import java.util.List;
1: 
1: /**
1:  * This node represents a routine signature.
1:  */
0: public class RoutineDesignator
1: {
0: 	boolean isSpecific;
1: 	TableName name; // TableName is a misnomer it is really just a schema qualified name
1: 	boolean isFunction; // else a procedure
1: 	/**
1: 	 * A list of DataTypeDescriptors
1: 	 * if null then the signature is not specified and this designator is ambiguous if there is
1: 	 * more than one function (procedure) with this name.
1: 	 */
0: 	List paramTypeList;
1: 	AliasDescriptor aliasDescriptor;
1: 
0: 	public RoutineDesignator( boolean isSpecific,
0: 							  TableName name,
0: 							  boolean isFunction,
0: 							  List paramTypeList)
1: 	{
0: 		this.isSpecific = isSpecific;
1: 		this.name = name;
1: 		this.isFunction = isFunction;
1: 		this.paramTypeList = paramTypeList;
1: 	}
1: 
1: 	void setAliasDescriptor( AliasDescriptor aliasDescriptor)
1: 	{
1: 		this.aliasDescriptor = aliasDescriptor;
1: 	}
1: 	
1: 	/**
1: 	 * @return PrivilegeInfo for this node
1: 	 */
1: 	PrivilegeInfo makePrivilegeInfo()
1: 	{
1: 		return new RoutinePrivilegeInfo( aliasDescriptor);
1: 	}
1: }
============================================================================