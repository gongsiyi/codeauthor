1:fc2589d: /*
1:87f37d6: 
1:fc2589d:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.JDBCHarnessJavaTest
1:87f37d6: 
1:fc2589d:    Licensed to the Apache Software Foundation (ASF) under one or more
1:fc2589d:    contributor license agreements.  See the NOTICE file distributed with
1:fc2589d:    this work for additional information regarding copyright ownership.
1:fc2589d:    The ASF licenses this file to You under the Apache License, Version 2.0
1:fc2589d:    (the "License"); you may not use this file except in compliance with
1:fc2589d:    the License.  You may obtain a copy of the License at
11:fc2589d: 
1:fc2589d:       http://www.apache.org/licenses/LICENSE-2.0
1:fc2589d: 
1:fc2589d:    Unless required by applicable law or agreed to in writing, software
1:fc2589d:    distributed under the License is distributed on an "AS IS" BASIS,
1:fc2589d:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc2589d:    See the License for the specific language governing permissions and
1:fc2589d:    limitations under the License.
1:fc2589d: 
3:fc2589d:  */
1:fc2589d: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1:fc2589d: 
1:fc2589d: import junit.framework.Test;
1:fc2589d: import org.apache.derbyTesting.functionTests.util.HarnessJavaTest;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:fc2589d: import org.apache.derbyTesting.junit.TestConfiguration;
1:fc2589d: 
1:87f37d6: /**
1:fc2589d:  * Run a jdbcapi '.java' test from the old harness in the Junit infrastructure.
1:fc2589d:  * The test's output is compared to a master file using the facilities
1:fc2589d:  * of the super class CanonTestCase.
1:fc2589d:  * <BR>
1:fc2589d:  * This allows a faster switch to running all tests under a single
1:fc2589d:  * JUnit infrastructure. Running a test using this class does not
1:fc2589d:  * preclude it from being converted to a real JUnit assert based test.
1:fc2589d:  *
1:87f37d6:  */
1:fc2589d: public class JDBCHarnessJavaTest extends HarnessJavaTest {
1:fc2589d:     
3:fc2589d:     /**
1:fc2589d:      * Tests that run in both client and embedded.
1:fc2589d:      * Ideally both for a test of JDBC api functionality.
1:fc2589d:      */
1:fc2589d:     private static final String[] JDBCAPI_TESTS_BOTH =
1:87f37d6:     {
1:fc2589d:             // from old jdbc20.runall
1:fc2589d:             "connectionJdbc20",
1:fc2589d:             "resultsetJdbc20",           
1:d029255:             
1:fc2589d:             // from old jdbcapi.runall
1:3cea1b9:             // "derbyStress",       TODO: Need a way to control heap size from Junit tests
1:87f37d6:             // "prepStmtMetaData",  TODO: convert - different canon for client
1:fc2589d:             "maxfieldsize",
1:fc2589d:             "SetQueryTimeoutTest",
1:fc2589d:             "rsgetXXXcolumnNames",
1:87f37d6:             
1:87f37d6:     };
1:87f37d6:     
1:fc2589d:     private JDBCHarnessJavaTest(String name) {
1:fc2589d:         super(name);
1:87f37d6:      }
1:87f37d6: 
1:fc2589d:     protected String getArea() {
1:fc2589d:         return "jdbcapi";
2:fc2589d:     }
1:fc2589d:     
1:fc2589d:     public static Test suite()
1:87f37d6:     {
1:1ae02c9:         BaseTestSuite suite =
1:1ae02c9:             new BaseTestSuite("jdbcapi: old harness java tests");
1:1ae02c9: 
1:fc2589d:         suite.addTest(baseSuite("embedded", JDBCAPI_TESTS_BOTH));
1:87f37d6:         suite.addTest(TestConfiguration.clientServerDecorator(
1:87f37d6:                 baseSuite("clientserver", JDBCAPI_TESTS_BOTH)));
1:fc2589d:         return suite;
1:fc2589d:     }
1:fc2589d:    
1:fc2589d:     private static Test baseSuite(String which, String[] set) {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("jdbcapi: " + which);
1:fc2589d:         for (int i = 0; i < set.length; i++)
4:fc2589d:         {
1:fc2589d:             suite.addTest(decorate(new JDBCHarnessJavaTest(set[i])));
1:fc2589d:         }
1:fc2589d:         return suite;
1:fc2589d:     }
1:fc2589d: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite =
1:             new BaseTestSuite("jdbcapi: old harness java tests");
1: 
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("jdbcapi: " + which);
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:246f557
/////////////////////////////////////////////////////////////////////////
commit:d73bd78
/////////////////////////////////////////////////////////////////////////
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:f945aa4
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:a95545d
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0: //    /**
0: //     * Tests that require JDBC 3.
0: //     */
0: //    private static final String[] JDBCAPI_TESTS_EMEBDDED_JDBC3 =
0: //    {
0: //        // Tests that run ok in embedded but have a different client master file.
0: //        "savepointJdbc30_XA",
0: //    };
/////////////////////////////////////////////////////////////////////////
0: //        if (JDBC.vmSupportsJDBC3())
0: //        {
0: //            suite.addTest(baseSuite("embedded_JDBC3",
0: //                    JDBCAPI_TESTS_EMEBDDED_JDBC3));
0: //        }
commit:3cea1b9
/////////////////////////////////////////////////////////////////////////
1:             // "derbyStress",       TODO: Need a way to control heap size from Junit tests
commit:1302ca5
/////////////////////////////////////////////////////////////////////////
commit:e507229
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:1350ae2
/////////////////////////////////////////////////////////////////////////
commit:e8c8d01
/////////////////////////////////////////////////////////////////////////
0:             //"setTransactionIsolation", TODO: investigate failure
commit:c0a5de2
/////////////////////////////////////////////////////////////////////////
0:             "setTransactionIsolation", 
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:bcdd056
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:f7b3a7a
/////////////////////////////////////////////////////////////////////////
commit:c7c71f2
/////////////////////////////////////////////////////////////////////////
commit:1b4dc97
/////////////////////////////////////////////////////////////////////////
commit:2d2cb5f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:a86bac7
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:aee2d05
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:f17077e
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:848a3f0
/////////////////////////////////////////////////////////////////////////
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:d029255
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         // Tests that run ok in embedded but have a different client master file.
0:         "savepointJdbc30_XA",
1:         
commit:87f37d6
/////////////////////////////////////////////////////////////////////////
0: import org.apache.derbyTesting.junit.JDBC;
/////////////////////////////////////////////////////////////////////////
0:             // "dataSourceReference", TODO: investigate failure/convert
1:             // "prepStmtMetaData",  TODO: convert - different canon for client
/////////////////////////////////////////////////////////////////////////
0:             // "testRelative", TODO: passes embedded, fails client - investigate failure/convert
0:             // "parameterMetaDataJdbc30", TODO: passes embedded, fails client - investigate failure/convert
0:             // "savepointJdbc30_JSR169", TODO: convert - different canon for client
0:             // "savepointJdbc30_XA", TODO: convert - different canon for client
0:             // "dataSourcePermissions", TODO: passes embedded, fails client - investigate failure/convert
1: 
/////////////////////////////////////////////////////////////////////////
1:         
0:         // Tests that run ok in embedded but have a different client master file.
0:         "savepointJdbc30_JSR169",
0:         "savepointJdbc30_XA",
0:         "prepStmtMetaData",
1:         
0:         // Tests that pass on embedded but fail on client
0:         "testRelative",
1:     /**
0:      * Tests that require JDBC 3.
1:      */
0:     private static final String[] JDBCAPI_TESTS_EMEBDDED_JDBC3 =
1:     {
0:         // Tests that pass on embedded but fail on client
0:         "parameterMetaDataJdbc30",
0:         "dataSourcePermissions",         
1:     };
1:     
1:     
/////////////////////////////////////////////////////////////////////////
0:         if (JDBC.vmSupportsJDBC3())
1:         {
0:             suite.addTest(baseSuite("embedded_JDBC3",
0:                     JDBCAPI_TESTS_EMEBDDED_JDBC3));
1:         }
1:         suite.addTest(TestConfiguration.clientServerDecorator(
1:                 baseSuite("clientserver", JDBCAPI_TESTS_BOTH)));
commit:fc2589d
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi.JDBCHarnessJavaTest
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: package org.apache.derbyTesting.functionTests.tests.jdbcapi;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.functionTests.util.HarnessJavaTest;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: /**
1:  * Run a jdbcapi '.java' test from the old harness in the Junit infrastructure.
1:  * The test's output is compared to a master file using the facilities
1:  * of the super class CanonTestCase.
1:  * <BR>
1:  * This allows a faster switch to running all tests under a single
1:  * JUnit infrastructure. Running a test using this class does not
1:  * preclude it from being converted to a real JUnit assert based test.
1:  *
1:  */
1: public class JDBCHarnessJavaTest extends HarnessJavaTest {
1:     
1:     /**
1:      * Tests that run in both client and embedded.
1:      * Ideally both for a test of JDBC api functionality.
1:      */
1:     private static final String[] JDBCAPI_TESTS_BOTH =
1:     {
1:             // from old jdbc20.runall
0:             // "batchUpdate", runs in embedded only
1:             "connectionJdbc20",
0:             // "statementJdbc20", runs in embedded only
1:             "resultsetJdbc20",           
0:             "StmtCloseFunTest",
0:             // "dataSourceReference",
1:             
1:             // from old jdbcapi.runall
0:             // "checkDriver",  TODO: investigate failure/convert
0:             "derbyStress",
0:             // "nullSQLText",  TODO: investigate failure/convert
0:             "prepStmtMetaData",
0:             //"resultset", TODO: investigate failure/convert
0:             // "resultsetStream", TODO: investigate failure/convert needs ext files
1:             "maxfieldsize",
0:             //"LOBTest", TODO: investigate failure/convert
0:             // "parameterMapping", TODO: investigate failure/convert
0:             // "setTransactionIsolation", TODO: investigate failure/convert
1:             "SetQueryTimeoutTest",
0:             "prepStmtNull",
0:             "testRelative",
1:             "rsgetXXXcolumnNames",
1:             
0:             // from old jdk14.runall
0:             //"autoGeneratedJdbc30", TODO: investigate failure/convert
0:             //"checkDataSource30", TODO: investigate failure/convert
0:             "parameterMetaDataJdbc30",
0:             // "statementJdbc30", runs in embedded only
0:             "savepointJdbc30_JSR169",
0:             "savepointJdbc30_XA",
1:             
0:             // from old xa.runall
0:             //"checkDataSource", TODO: investigate failure/convert
0:             "dataSourcePermissions",
0:             //"XATest" TODO: investigate failure/convert
0:     };
1:     
1:     /**
0:      * Tests that only run in embedded.
1:      */
0:     private static final String[] JDBCAPI_TESTS_EMEBDDED=
1:     {
0:         // excluded from derby client in old harness
0:         "batchUpdate",
0:         "statementJdbc20",
0:         "statementJdbc30",
0:     };
1:     
1:     private JDBCHarnessJavaTest(String name) {
1:         super(name);
1:      }
1: 
1:     protected String getArea() {
1:         return "jdbcapi";
1:     }
1:     
1:     public static Test suite()
1:     {
0:         TestSuite suite = new TestSuite("jdbcapi: old harness java tests");
1:         suite.addTest(baseSuite("embedded", JDBCAPI_TESTS_BOTH));
0:         suite.addTest(baseSuite("embedded", JDBCAPI_TESTS_EMEBDDED));
1:         
0:         //suite.addTest(TestConfiguration.clientServerDecorator(
0:         //        baseSuite("clientserver", JDBCAPI_TESTS_BOTH)));
1:         return suite;
1:     }
1:    
1:     private static Test baseSuite(String which, String[] set) {
0:         TestSuite suite = new TestSuite("jdbcapi: " + which);
1:         for (int i = 0; i < set.length; i++)
1:         {
1:             suite.addTest(decorate(new JDBCHarnessJavaTest(set[i])));
1:         }
1:         return suite;
1:     }
1: }
============================================================================