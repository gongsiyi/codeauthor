1:07e72c3: /*
4:07e72c3: 
1:07e72c3:    Derby - Class 
1:07e72c3:    org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManager
1:07e72c3: 
1:07e72c3:    Licensed to the Apache Software Foundation (ASF) under one or more
1:07e72c3:    contributor license agreements.  See the NOTICE file distributed with
1:07e72c3:    this work for additional information regarding copyright ownership.
1:07e72c3:    The ASF licenses this file to You under the Apache License, Version 2.0
1:07e72c3:    (the "License"); you may not use this file except in compliance with
1:07e72c3:    the License.  You may obtain a copy of the License at
1:07e72c3: 
1:07e72c3:       http://www.apache.org/licenses/LICENSE-2.0
1:07e72c3: 
1:07e72c3:    Unless required by applicable law or agreed to in writing, software
1:07e72c3:    distributed under the License is distributed on an "AS IS" BASIS,
1:07e72c3:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07e72c3:    See the License for the specific language governing permissions and
1:07e72c3:    limitations under the License.
1:07e72c3: 
1:07e72c3:  */
1:07e72c3: 
1:07e72c3: package org.apache.derbyTesting.functionTests.tests.tools;
1:07e72c3: 
1:07e72c3: import java.io.PrintStream;
1:07e72c3: import junit.framework.Test;
1:07e72c3: import org.apache.derby.tools.ij;
1:07e72c3: import org.apache.derbyTesting.functionTests.util.TestNullOutputStream;
1:07e72c3: import org.apache.derbyTesting.junit.BaseTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:07e72c3: import org.apache.derbyTesting.junit.SupportFilesSetup;
1:07e72c3: import org.apache.derbyTesting.junit.TestConfiguration;
1:07e72c3: 
1:07e72c3: public class IjSecurityManagerTest extends BaseTestCase {
1:07e72c3: 
1:07e72c3: 	public IjSecurityManagerTest(String name) {
1:07e72c3: 		super(name);
3:07e72c3: 	}
1:07e72c3: 
1:07e72c3: 	public void testRunIJ() throws Exception {
1:07e72c3: 	    /* Save the original out stream */
1:07e72c3: 	    final PrintStream out = System.out;
1:07e72c3: 	    
1:07e72c3: 	    /* Mute the test */
1:c393694:         setSystemOut(new PrintStream(new TestNullOutputStream()));
1:c393694: 
1:07e72c3: 	    try {
1:07e72c3: 	        /* Run ij */
1:07e72c3: 	        ij.main(new String[]{"extinout/IjSecurityManagerTest.sql"});
1:07e72c3: 	    } catch (Exception e) { /* Should NEVER happen */
1:07e72c3: 	        fail("Failed to run ij under security manager.",e);
1:07e72c3: 	    } finally {
1:07e72c3: 	        /* Restore the original out stream */
1:c393694:             setSystemOut(out);
1:07e72c3: 	    }
1:07e72c3: 	}
1:07e72c3: 	
1:07e72c3: 	private static Test decorateTest() {	    
1:07e72c3: 	    Test test = TestConfiguration.embeddedSuite(IjSecurityManagerTest.class);
1:07e72c3:         test = new SupportFilesSetup
1:07e72c3:          (
1:07e72c3:           test,
1:07e72c3:           null,
1:07e72c3:           new String[] { "functionTests/tests/tools/IjSecurityManagerTest.sql"  },
1:07e72c3:           null,
1:07e72c3:           new String[] { "IjSecurityManagerTest.sql"}
1:07e72c3:           );
1:07e72c3:         return test;
1:07e72c3: 	}
1:07e72c3: 	public static Test suite() {		
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("IjSecurityManagerTest");
1:07e72c3: 		suite.addTest(decorateTest());
1:07e72c3: 		return suite;
1:07e72c3: 	}
1:07e72c3: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("IjSecurityManagerTest");
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:c393694
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         setSystemOut(new PrintStream(new TestNullOutputStream()));
1: 
/////////////////////////////////////////////////////////////////////////
1:             setSystemOut(out);
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:07e72c3
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class 
1:    org.apache.derbyTesting.functionTests.tests.tools.IjSecurityManager
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.tools;
1: 
1: import java.io.PrintStream;
0: import java.security.AccessController;
0: import java.security.PrivilegedAction;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derby.tools.ij;
1: import org.apache.derbyTesting.functionTests.util.TestNullOutputStream;
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: import org.apache.derbyTesting.junit.SupportFilesSetup;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: public class IjSecurityManagerTest extends BaseTestCase {
1: 
1: 	public IjSecurityManagerTest(String name) {
1: 		super(name);
1: 	}
1: 
1: 	public void testRunIJ() throws Exception {
1: 	    /* Save the original out stream */
1: 	    final PrintStream out = System.out;
1: 	    
1: 	    /* Mute the test */
0: 	    AccessController.doPrivileged(new PrivilegedAction() {
0:             public Object run() {
0:                 System.setOut(new PrintStream(new TestNullOutputStream()));
0:                 return null;
1:             }
0:         });
1: 	    
1: 	    try {
1: 	        /* Run ij */
1: 	        ij.main(new String[]{"extinout/IjSecurityManagerTest.sql"});
1: 	    } catch (Exception e) { /* Should NEVER happen */
1: 	        fail("Failed to run ij under security manager.",e);
1: 	    } finally {
1: 	        /* Restore the original out stream */
0: 	        AccessController.doPrivileged(new PrivilegedAction() {
0: 	            public Object run() {
0: 	                System.setOut(out);
0: 	                return null;
1: 	            }
0: 	        });
1: 	    }
1: 	}
1: 	
1: 	private static Test decorateTest() {	    
1: 	    Test test = TestConfiguration.embeddedSuite(IjSecurityManagerTest.class);
1:         test = new SupportFilesSetup
1:          (
1:           test,
1:           null,
1:           new String[] { "functionTests/tests/tools/IjSecurityManagerTest.sql"  },
1:           null,
1:           new String[] { "IjSecurityManagerTest.sql"}
1:           );
1:         return test;
1: 	}
1: 	public static Test suite() {		
0: 		TestSuite suite = new TestSuite("IjSecurityManagerTest");
1: 		suite.addTest(decorateTest());
1: 		return suite;
1: 	}
1: }
============================================================================