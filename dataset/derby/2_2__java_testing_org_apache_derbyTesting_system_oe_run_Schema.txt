1:7a0c00a: /*
1:7a0c00a:  * 
1:7a0c00a:  * Derby - Class org.apache.derbyTesting.system.oe.run.Schema
1:7a0c00a:  * 
1:7a0c00a:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7a0c00a:  * contributor license agreements. See the NOTICE file distributed with this
1:7a0c00a:  * work for additional information regarding copyright ownership. The ASF
1:7a0c00a:  * licenses this file to You under the Apache License, Version 2.0 (the
1:7a0c00a:  * "License"); you may not use this file except in compliance with the License.
1:7a0c00a:  * You may obtain a copy of the License at
1:7a0c00a:  * 
1:7a0c00a:  * http://www.apache.org/licenses/LICENSE-2.0
1:7a0c00a:  * 
1:7a0c00a:  * Unless required by applicable law or agreed to in writing, software
1:7a0c00a:  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
1:7a0c00a:  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
1:7a0c00a:  * License for the specific language governing permissions and limitations under
1:7a0c00a:  * the License.
5:7a0c00a:  */
1:7a0c00a: package org.apache.derbyTesting.system.oe.run;
7:7a0c00a: 
1:7a0c00a: import java.io.IOException;
1:7a0c00a: import java.io.UnsupportedEncodingException;
1:7a0c00a: import java.security.PrivilegedActionException;
1:7a0c00a: import java.sql.SQLException;
1:7a0c00a: import junit.framework.Test;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:7a0c00a: import org.apache.derbyTesting.junit.JDBCPerfTestCase;
1:7a0c00a: 
5:7a0c00a: /**
1:7a0c00a:  * Load the OE schema
1:7a0c00a:  */
1:7a0c00a: public class Schema extends JDBCPerfTestCase {
1:7a0c00a: 
1:fbc46af:     private String scriptBase;
1:7a0c00a: 
1:7a0c00a:     /**
1:7a0c00a:      * Create a test case with the given name.
1:7a0c00a:      * 
1:7a0c00a:      * @param name
1:7a0c00a:      *            of the test case.
1:7a0c00a:      */
1:7a0c00a:     public Schema(String name) {
1:fbc46af:         super("testScript");
1:fbc46af:         scriptBase = name;
5:7a0c00a:     }
1:7a0c00a: 
1:7a0c00a:     /**
1:7a0c00a:      * junit tests to create schema
1:7a0c00a:      * 
1:7a0c00a:      * @return the tests to run
1:7a0c00a:      */
1:7a0c00a:     public static Test suite() {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("Order Entry- Schema");
1:7a0c00a: 
1:7a0c00a:         // Create Schema
1:8404f5d:         addBaseSchema(suite);
1:7a0c00a:         addConstraints(suite);
1:7a0c00a:         return suite;
1:7a0c00a:     }
1:8404f5d:     
1:1ae02c9:     public static void addBaseSchema(BaseTestSuite suite) {
1:8404f5d:         // Create Schema
1:8404f5d:         suite.addTest(new Schema("schema.sql"));
1:8404f5d:         suite.addTest(new Schema("dataroutines.sql"));
1:24e8abd:         suite.addTest(new Schema("delivery.sql"));
1:8404f5d:     }
1:7a0c00a: 
1:7a0c00a:     /**
1:7a0c00a:      * Add constraint tests to suite.
1:7a0c00a:      * 
1:7a0c00a:      * @param suite
1:7a0c00a:      */
1:1ae02c9:     static void addConstraints(BaseTestSuite suite) {
1:8404f5d:         suite.addTest(new Schema("primarykey.sql"));
1:8404f5d:         suite.addTest(new Schema("foreignkey.sql"));
1:8404f5d:         suite.addTest(new Schema("index.sql"));
1:7a0c00a: 
1:7a0c00a:     }
1:7a0c00a: 
1:7a0c00a:     /**
1:7a0c00a:      * Run a Order Entry script.
1:7a0c00a:      */
1:fbc46af:     public void testScript() throws UnsupportedEncodingException,
3:7a0c00a:     SQLException, PrivilegedActionException, IOException {
1:7a0c00a: 
1:fbc46af:         String script = "org/apache/derbyTesting/system/oe/schema/" + scriptBase;
1:7a0c00a:         int errorCount = runScript(script, "US-ASCII");
1:7a0c00a:         assertEquals("Errors in script ", 0, errorCount);
1:7a0c00a:     }
1:fbc46af:     
1:fbc46af:     public String getName() {
1:fbc46af:         return scriptBase;
1:fbc46af:     }
1:7a0c00a: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("Order Entry- Schema");
/////////////////////////////////////////////////////////////////////////
1:     public static void addBaseSchema(BaseTestSuite suite) {
/////////////////////////////////////////////////////////////////////////
1:     static void addConstraints(BaseTestSuite suite) {
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:fbc46af
/////////////////////////////////////////////////////////////////////////
1:     private String scriptBase;
/////////////////////////////////////////////////////////////////////////
1:         super("testScript");
1:         scriptBase = name;
/////////////////////////////////////////////////////////////////////////
1:     public void testScript() throws UnsupportedEncodingException,
1:         String script = "org/apache/derbyTesting/system/oe/schema/" + scriptBase;
1:     
1:     public String getName() {
1:         return scriptBase;
1:     }
commit:24e8abd
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(new Schema("delivery.sql"));
commit:8404f5d
/////////////////////////////////////////////////////////////////////////
1:         addBaseSchema(suite);
1:     
0:     public static void addBaseSchema(TestSuite suite) {
1:         // Create Schema
1:         suite.addTest(new Schema("schema.sql"));
1:         suite.addTest(new Schema("dataroutines.sql"));
1:     }
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(new Schema("primarykey.sql"));
1:         suite.addTest(new Schema("foreignkey.sql"));
1:         suite.addTest(new Schema("index.sql"));
0:     public void runTest() throws UnsupportedEncodingException,
0:         String script = "org/apache/derbyTesting/system/oe/schema/" + getName();
commit:7a0c00a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Derby - Class org.apache.derbyTesting.system.oe.run.Schema
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements. See the NOTICE file distributed with this
1:  * work for additional information regarding copyright ownership. The ASF
1:  * licenses this file to You under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  * 
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
1:  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
1:  * License for the specific language governing permissions and limitations under
1:  * the License.
1:  */
1: package org.apache.derbyTesting.system.oe.run;
1: 
1: import java.io.IOException;
1: import java.io.UnsupportedEncodingException;
1: import java.security.PrivilegedActionException;
1: import java.sql.SQLException;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.junit.JDBCPerfTestCase;
1: 
1: /**
1:  * Load the OE schema
1:  */
1: public class Schema extends JDBCPerfTestCase {
1: 
1: 
1:     /**
1:      * Create a test case with the given name.
1:      * 
1:      * @param name
1:      *            of the test case.
1:      */
1:     public Schema(String name) {
0:         super(name);
1:     }
1: 
1:     /**
1:      * junit tests to create schema
1:      * 
1:      * @return the tests to run
1:      */
1:     public static Test suite() {
0:         TestSuite suite = new TestSuite("Order Entry- Schema");
1: 
1:         // Create Schema
0:         suite.addTest(new Schema("testSchema"));
1:         addConstraints(suite);
1:         return suite;
1:     }
1: 
1:     /**
1:      * Add constraint tests to suite.
1:      * 
1:      * @param suite
1:      */
0:     static void addConstraints(TestSuite suite) {
0:         suite.addTest(new Schema("testPrimaryKey"));
0:         suite.addTest(new Schema("testForeignKey"));
0:         suite.addTest(new Schema("testIndex"));
1: 
1:     }
1: 
1:     /**
0:      * Test setting up the base tables.
1:      */
0:     public void testSchema() throws UnsupportedEncodingException, SQLException,
0:     PrivilegedActionException, IOException {
0:         script("schema.sql");
1:     }
1: 
1:     /**
0:      * Test setting up the primary keys.
1:      */
0:     public void testPrimaryKey() throws UnsupportedEncodingException,
1:     SQLException, PrivilegedActionException, IOException {
0:         script("primarykey.sql");
1:     }
1: 
1:     /**
0:      * Test setting up the foreign keys.
1:      */
0:     public void testForeignKey() throws UnsupportedEncodingException,
1:     SQLException, PrivilegedActionException, IOException {
0:         script("foreignkey.sql");
1:     }
1: 
1:     /**
0:      * Test setting up the remaining indexes.
1:      */
0:     public void testIndex() throws UnsupportedEncodingException, SQLException,
0:     PrivilegedActionException, IOException {
0:         script("index.sql");
1:     }
1: 
1:     /**
1:      * Run a Order Entry script.
1:      */
0:     private void script(String name) throws UnsupportedEncodingException,
1:     SQLException, PrivilegedActionException, IOException {
1: 
0:         String script = "org/apache/derbyTesting/system/oe/schema/" + name;
1:         int errorCount = runScript(script, "US-ASCII");
1:         assertEquals("Errors in script ", 0, errorCount);
1:     }
1: }
============================================================================