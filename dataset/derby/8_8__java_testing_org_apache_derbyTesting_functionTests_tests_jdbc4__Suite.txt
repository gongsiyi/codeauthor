1:12e892f: /*
5:12e892f: 
1:b12505f:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4._Suite
1:ab64754: 
1:12e892f:        Licensed to the Apache Software Foundation (ASF) under one
1:12e892f:        or more contributor license agreements.  See the NOTICE file
1:12e892f:        distributed with this work for additional information
1:12e892f:        regarding copyright ownership.  The ASF licenses this file
1:12e892f:        to you under the Apache License, Version 2.0 (the
1:12e892f:        "License"); you may not use this file except in compliance
1:12e892f:        with the License.  You may obtain a copy of the License at
1:12e892f: 
1:12e892f:          http://www.apache.org/licenses/LICENSE-2.0
1:12e892f: 
1:12e892f:        Unless required by applicable law or agreed to in writing,
1:12e892f:        software distributed under the License is distributed on an
1:12e892f:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:12e892f:        KIND, either express or implied.  See the License for the
1:12e892f:        specific language governing permissions and limitations
1:12e892f:        under the License
1:12e892f: */
1:12e892f: package org.apache.derbyTesting.functionTests.tests.jdbc4;
1:12e892f: 
1:7cfb7e6: import java.lang.reflect.Method;
1:12e892f: import java.sql.SQLException;
1:1ae02c9: import junit.framework.Test;
1:3bd1dd8: import org.apache.derbyTesting.junit.BaseTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:85038ef: import org.apache.derbyTesting.junit.JDBC;
1:3bd1dd8: 
1:12e892f: /**
1:12e892f:  * Suite to run all JUnit tests in this package:
1:12e892f:  * org.apache.derbyTesting.functionTests.tests.jdbc4
1:12e892f:  *
1:12e892f:  */
1:12e892f: public class _Suite extends BaseTestCase  {
1:12e892f: 
1:12e892f: 	/**
1:12e892f: 	 * Use suite method instead.
1:12e892f: 	 */
1:12e892f: 	private _Suite(String name) {
1:12e892f: 		super(name);
1:12e892f: 	}
1:12e892f: 
1:12e892f: 	public static Test suite() throws SQLException {
1:12e892f: 
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("jdbc4");
1:12e892f: 
1:ab64754:         // These really need to run standalone.
1:12e892f: 		//suite.addTestSuite(AutoloadBooting.class);
1:7cfb7e6: 
1:12e892f: 		suite.addTest(BlobTest.suite());
1:12e892f: 		suite.addTest(CallableStatementTest.suite());
1:12e892f: 		suite.addTest(ClobTest.suite());
1:12e892f: 		suite.addTest(ConnectionTest.suite());
1:12e892f: 		suite.addTest(DataSourceTest.suite());
1:12e892f: 		suite.addTest(ParameterMetaDataWrapperTest.suite());
1:12e892f: 		suite.addTest(PreparedStatementTest.suite());
1:12e892f: 		suite.addTest(ResultSetMetaDataTest.suite());
1:12e892f: 		suite.addTest(ResultSetTest.suite());
1:12e892f: 		suite.addTest(RowIdNotImplementedTest.suite());
1:ec5ae26: 		suite.addTest(SetObjectUnsupportedTest.suite());
1:12e892f: 		suite.addTest(StatementEventsTest.suite());
1:12e892f: 		suite.addTest(StatementTest.suite());
1:5d66268: 		suite.addTest(TestDbMetaData.suite());
1:f48e0cd: 		suite.addTest(TestJDBC40Exception.suite());
1:ec5ae26: 		suite.addTest(UnsupportedVetter.suite());
1:12e892f: 		suite.addTest(XA40Test.suite());
1:042f338: 		suite.addTest(ConnectionMethodsTest.suite());
1:9f5c33f:         suite.addTest(VerifySignatures.suite());
1:b2b30ec:         suite.addTest (LobStreamTest.suite());
1:7f0d066:         suite.addTest(LobSortTest.suite());
1:b2b30ec:         suite.addTest (BlobSetMethodsTest.suite());
1:8fcae92:         suite.addTest (JDBC4FromJDBC3DataSourceTest.suite());
1:93a23a8:         suite.addTest(Derby3650Test.suite());
1:ed6bf51:         suite.addTest(Derby2017LayerBTest.suite());
1:0a17859:         suite.addTest(AbortTest.suite());
1:09869c6:         suite.addTest(Driver40Test.suite());
1:3330126:         suite.addTest(Driver40UnbootedTest.suite());
1:25c1e7b:         suite.addTest(LoginTimeoutTest.suite());
1:7cfb7e6: 
1:85038ef:         if (JDBC.vmSupportsJDBC42())
1:7cfb7e6:         {
1:7cfb7e6:             suite.addTest( getSuite( "org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest42" ) );
1:7cfb7e6:         }
1:ab64754: 		
1:12e892f: 		return suite;
1:12e892f: 	}
1:7cfb7e6: 
1:7cfb7e6:     /**
1:7cfb7e6:      * <p>
1:7cfb7e6:      * Get the test suite from a class name.
1:7cfb7e6:      * </p>
1:7cfb7e6:      */
1:7cfb7e6:     private static  Test    getSuite( String className )
1:7cfb7e6:         throws SQLException
1:7cfb7e6:     {
1:7cfb7e6:         try {
1:7cfb7e6:             Class<?>   klass = Class.forName( className );
1:7cfb7e6:             Method  suiteMethod = klass.getMethod( "suite", new Class<?>[] {} );
1:7cfb7e6: 
1:7cfb7e6:             return (Test) suiteMethod.invoke( null, new Object[] {} );
1:7cfb7e6:         }
1:7cfb7e6:         catch (Exception e) { throw new SQLException( e.getMessage(), e ); }
1:7cfb7e6:     }
1:7cfb7e6:     
1:12e892f: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("jdbc4");
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:85038ef
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.JDBC;
/////////////////////////////////////////////////////////////////////////
1:         if (JDBC.vmSupportsJDBC42())
commit:e33b8d8
/////////////////////////////////////////////////////////////////////////
commit:6afb55c
/////////////////////////////////////////////////////////////////////////
commit:ec5ae26
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(JDBC40TranslationTest.suite());
1: 		suite.addTest(SetObjectUnsupportedTest.suite());
1: 		suite.addTest(UnsupportedVetter.suite());
commit:5d66268
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(TestDbMetaData.suite());
commit:f48e0cd
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(TestJDBC40Exception.suite());
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:25c1e7b
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LoginTimeoutTest.suite());
commit:7cfb7e6
/////////////////////////////////////////////////////////////////////////
1: import java.lang.reflect.Method;
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1: 
0:         if ( isJava8() )
1:         {
1:             suite.addTest( getSuite( "org.apache.derbyTesting.functionTests.tests.jdbc4.PreparedStatementTest42" ) );
1:         }
1: 
1:     /**
1:      * <p>
1:      * Get the test suite from a class name.
1:      * </p>
1:      */
1:     private static  Test    getSuite( String className )
1:         throws SQLException
1:     {
1:         try {
1:             Class<?>   klass = Class.forName( className );
1:             Method  suiteMethod = klass.getMethod( "suite", new Class<?>[] {} );
1: 
1:             return (Test) suiteMethod.invoke( null, new Object[] {} );
1:         }
1:         catch (Exception e) { throw new SQLException( e.getMessage(), e ); }
1:     }
1:     
commit:3330126
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Driver40UnbootedTest.suite());
commit:09869c6
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Driver40Test.suite());
commit:0a17859
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(AbortTest.suite());
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:ed6bf51
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby2017LayerBTest.suite());
commit:93a23a8
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby3650Test.suite());
commit:7f0d066
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(LobSortTest.suite());
commit:b2b30ec
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest (LobStreamTest.suite());
1:         suite.addTest (BlobSetMethodsTest.suite());
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:b12505f
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4._Suite
author:Katherine Marsden
-------------------------------------------------------------------------------
commit:042f338
/////////////////////////////////////////////////////////////////////////
1: 		suite.addTest(ConnectionMethodsTest.suite());
author:Army
-------------------------------------------------------------------------------
commit:8fcae92
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest (JDBC4FromJDBC3DataSourceTest.suite());
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:be41d87
/////////////////////////////////////////////////////////////////////////
commit:9f5c33f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(VerifySignatures.suite());
commit:e91ca16
/////////////////////////////////////////////////////////////////////////
0: 		TestSuite suite = new TestSuite("jdbc4");
commit:ab64754
/////////////////////////////////////////////////////////////////////////
1:         // These really need to run standalone.
1:         
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTestSuite(UnsupportedVetter.class);		
1:         
0:         // This test is a little strange in its suite
0:         // method in that it accesses 
0:         // the database to determine the set of tests to run.
0:         // suite.addTest(VerifySignatures.suite());
commit:3bd1dd8
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: 
commit:12e892f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbcapi._Suite
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
1: package org.apache.derbyTesting.functionTests.tests.jdbc4;
1: 
1: import java.sql.SQLException;
1: 
0: import org.apache.derbyTesting.functionTests.util.BaseTestCase;
0: import junit.framework.Test; 
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Suite to run all JUnit tests in this package:
1:  * org.apache.derbyTesting.functionTests.tests.jdbc4
1:  *
1:  */
1: public class _Suite extends BaseTestCase  {
1: 
1: 	/**
1: 	 * Use suite method instead.
1: 	 */
1: 	private _Suite(String name) {
1: 		super(name);
1: 	}
1: 
1: 	public static Test suite() throws SQLException {
1: 
0: 		TestSuite suite = new TestSuite();
1: 
1: 		//suite.addTestSuite(AutoloadBooting.class);
0: 		//suite.addTestSuite(AutoloadTest.class);
1: 		suite.addTest(BlobTest.suite());
1: 		suite.addTest(CallableStatementTest.suite());
1: 		suite.addTest(ClobTest.suite());
0: 		suite.addTest(ClosedObjectTest.suite());
1: 		suite.addTest(ConnectionTest.suite());
1: 		suite.addTest(DataSourceTest.suite());
0: 		suite.addTestSuite(JDBC40TranslationTest.class);	
1: 		suite.addTest(ParameterMetaDataWrapperTest.suite());
1: 		suite.addTest(PreparedStatementTest.suite());
1: 		suite.addTest(ResultSetMetaDataTest.suite());
1: 		suite.addTest(ResultSetTest.suite());
1: 		suite.addTest(RowIdNotImplementedTest.suite());
1: 		suite.addTest(StatementEventsTest.suite());
1: 		suite.addTest(StatementTest.suite());
0: 		suite.addTestSuite(UnsupportedVetter.class);
0: 		suite.addTest(VerifySignatures.suite());
1: 		suite.addTest(XA40Test.suite());
1: 		
1: 		return suite;
1: 	}
1: }
============================================================================