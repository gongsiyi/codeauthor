1:2bc809f: /*
2:2bc809f: 
1:2bc809f:    Derby - Class org.apache.derbyTesting.unitTests.harness.BasicUnitTest
1:2bc809f: 
1:c38b841:    Licensed to the Apache Software Foundation (ASF) under one or more
1:c38b841:    contributor license agreements.  See the NOTICE file distributed with
1:c38b841:    this work for additional information regarding copyright ownership.
1:c38b841:    The ASF licenses this file to You under the Apache License, Version 2.0
1:c38b841:    (the "License"); you may not use this file except in compliance with
1:c38b841:    the License.  You may obtain a copy of the License at
1:2bc809f: 
1:2bc809f:       http://www.apache.org/licenses/LICENSE-2.0
1:2bc809f: 
1:2bc809f:    Unless required by applicable law or agreed to in writing, software
1:2bc809f:    distributed under the License is distributed on an "AS IS" BASIS,
1:2bc809f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2bc809f:    See the License for the specific language governing permissions and
1:2bc809f:    limitations under the License.
1:2bc809f: 
1:2bc809f:  */
1:2bc809f: 
1:2bc809f: package org.apache.derbyTesting.unitTests.harness;
1:2bc809f: 
1:2bc809f: import org.apache.derbyTesting.unitTests.harness.UnitTest;
1:2bc809f: import org.apache.derby.iapi.services.stream.HeaderPrintWriter;
1:2bc809f: 
1:2bc809f: // For testing
1:2bc809f: //import java.io.OutputStreamWriter;
1:2bc809f: 
1:2bc809f: class BasicUnitTest implements UnitTest
1:2bc809f: {
1:2bc809f: 	String traceMessage;
1:2bc809f: 	int testType;
1:2bc809f: 	int testDuration;
1:2bc809f: 	boolean result;
1:2bc809f: 	Error exception;
1:2bc809f: 
1:2bc809f: 	BasicUnitTest(String traceMessage,
1:2bc809f: 				  int testType,
1:2bc809f: 				  int testDuration,
1:2bc809f: 				  boolean result,
1:2bc809f: 				  Error exception){
1:2bc809f: 		this.traceMessage = traceMessage;
1:2bc809f: 		this.testType = testType;
1:2bc809f: 		this.testDuration = testDuration;
1:2bc809f: 		this.result = result;
1:2bc809f: 		this.exception = exception;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	public String toString(){
1:2bc809f: 		return ("testType: "+testType+" testDuration: "+
1:2bc809f: 			testDuration+" traceMessage: "+traceMessage+
1:2bc809f: 			" result: "+result+" exception: "+exception);
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 
1:2bc809f: 	public boolean Execute (HeaderPrintWriter output) {
1:2bc809f: 	
1:2bc809f: 		output.printlnWithHeader(toString());
1:2bc809f: 		if (exception != null)
1:2bc809f: 			throw exception;
1:2bc809f: 	
1:2bc809f: 		return result;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 
1:2bc809f: 
1:2bc809f: 	public int UnitTestDuration(){
1:2bc809f: 		return testDuration;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	public int UnitTestType(){
1:2bc809f: 		return testType;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	private void executeCatch(HeaderPrintWriter output){
1:2bc809f: 		 try{
1:2bc809f: 			 Execute(output);
1:2bc809f: 		 }
1:2bc809f: 		 catch (Error e){
1:2bc809f: 			 System.out.println("Caught exception:"+ e);
1:2bc809f: 		 }
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: /*
1:2bc809f: 
1:2bc809f: 	public static void main(String[] Args){
1:2bc809f: 
1:2bc809f: 		OutputStreamWriter osw = new OutputStreamWriter(System.out);
1:2bc809f: 		BasicGetLogHeader glh = new BasicGetLogHeader(
1:2bc809f: 				true, true, "hi" );
1:2bc809f: 		BasicHeaderPrintWriter hpw = new BasicHeaderPrintWriter(osw,glh);
1:2bc809f:  
1:2bc809f: 		 
1:2bc809f: 		BasicUnitTest t1 = 
1:2bc809f: 			  new BasicUnitTest("hi Eric",1,1,true,null);
1:2bc809f: 				  
1:2bc809f: 		t1.executeCatch(hpw);
1:2bc809f: 
1:2bc809f: 		BasicUnitTest t2 = 
1:2bc809f: 			 new BasicUnitTest("hi my dear boy",1,1,true,null);
1:2bc809f: 
1:2bc809f: 		t2.executeCatch(hpw);
1:2bc809f: 
1:2bc809f: 		BasicUnitTest t3 = 
1:2bc809f: 			 new BasicUnitTest("hi my dear boy",1,1,true,
1:2bc809f: 				new Error("bogus Error"));
1:2bc809f: 
1:2bc809f: 		t3.executeCatch(hpw);
1:2bc809f: 
1:2bc809f: 		
1:2bc809f: 
1:2bc809f: 	}
1:2bc809f: 	
1:2bc809f: */
1:2bc809f: }
1:2bc809f: 
============================================================================
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:c38b841
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:2bc809f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.harness.BasicUnitTest
1: 
0:    Copyright 1997, 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.unitTests.harness;
1: 
1: import org.apache.derbyTesting.unitTests.harness.UnitTest;
1: import org.apache.derby.iapi.services.stream.HeaderPrintWriter;
1: 
1: // For testing
1: //import java.io.OutputStreamWriter;
1: 
1: class BasicUnitTest implements UnitTest
1: {
1: 	String traceMessage;
1: 	int testType;
1: 	int testDuration;
1: 	boolean result;
1: 	Error exception;
1: 
1: 	BasicUnitTest(String traceMessage,
1: 				  int testType,
1: 				  int testDuration,
1: 				  boolean result,
1: 				  Error exception){
1: 		this.traceMessage = traceMessage;
1: 		this.testType = testType;
1: 		this.testDuration = testDuration;
1: 		this.result = result;
1: 		this.exception = exception;
1: 	}
1: 
1: 	public String toString(){
1: 		return ("testType: "+testType+" testDuration: "+
1: 			testDuration+" traceMessage: "+traceMessage+
1: 			" result: "+result+" exception: "+exception);
1: 	}
1: 
1: 
1: 	public boolean Execute (HeaderPrintWriter output) {
1: 	
1: 		output.printlnWithHeader(toString());
1: 		if (exception != null)
1: 			throw exception;
1: 	
1: 		return result;
1: 	}
1: 
1: 
1: 
1: 	public int UnitTestDuration(){
1: 		return testDuration;
1: 	}
1: 
1: 	public int UnitTestType(){
1: 		return testType;
1: 	}
1: 
1: 	private void executeCatch(HeaderPrintWriter output){
1: 		 try{
1: 			 Execute(output);
1: 		 }
1: 		 catch (Error e){
1: 			 System.out.println("Caught exception:"+ e);
1: 		 }
1: 	}
1: 
1: /*
1: 
1: 	public static void main(String[] Args){
1: 
1: 		OutputStreamWriter osw = new OutputStreamWriter(System.out);
1: 		BasicGetLogHeader glh = new BasicGetLogHeader(
1: 				true, true, "hi" );
1: 		BasicHeaderPrintWriter hpw = new BasicHeaderPrintWriter(osw,glh);
1:  
1: 		 
1: 		BasicUnitTest t1 = 
1: 			  new BasicUnitTest("hi Eric",1,1,true,null);
1: 				  
1: 		t1.executeCatch(hpw);
1: 
1: 		BasicUnitTest t2 = 
1: 			 new BasicUnitTest("hi my dear boy",1,1,true,null);
1: 
1: 		t2.executeCatch(hpw);
1: 
1: 		BasicUnitTest t3 = 
1: 			 new BasicUnitTest("hi my dear boy",1,1,true,
1: 				new Error("bogus Error"));
1: 
1: 		t3.executeCatch(hpw);
1: 
1: 		
1: 
1: 	}
1: 	
1: */
1: }
1: 
============================================================================