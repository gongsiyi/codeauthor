1:6c24865: /*
1:6c24865: 
1:6c24865:   Derby - Class org.apache.derby.ui.container.DerbyClasspathContainer
1:6c24865: 
1:6c24865:   Licensed to the Apache Software Foundation (ASF) under one or more
1:6c24865:   contributor license agreements.  See the NOTICE file distributed with
1:6c24865:   this work for additional information regarding copyright ownership.
1:6c24865:   The ASF licenses this file to you under the Apache License, Version 2.0
1:6c24865:   (the "License"); you may not use this file except in compliance with
1:6c24865:   the License.  You may obtain a copy of the License at
1:6c24865: 
1:6c24865:   http://www.apache.org/licenses/LICENSE-2.0
1:6c24865: 
1:6c24865:   Unless required by applicable law or agreed to in writing, software
1:6c24865:   distributed under the License is distributed on an "AS IS" BASIS,
1:6c24865:   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6c24865:   See the License for the specific language governing permissions and
1:6c24865:   limitations under the License.
1:6c24865: 
1:6c24865: */
1:6c24865: 
1:6c24865: package org.apache.derby.ui.container;
1:6c24865: 
1:6c24865: import java.io.IOException;
1:6c24865: import java.net.URL;
1:6c24865: import java.util.ArrayList;
1:6c24865: import java.util.Enumeration;
1:6c24865: import java.util.List;
1:6c24865: 
1:6c24865: import org.apache.derby.ui.common.CommonNames;
1:6c24865: import org.apache.derby.ui.common.Messages;
1:6c24865: import org.apache.derby.ui.util.Logger;
1:6c24865: import org.eclipse.core.runtime.FileLocator;
1:6c24865: import org.eclipse.core.runtime.IPath;
1:6c24865: import org.eclipse.core.runtime.IStatus;
1:6c24865: import org.eclipse.core.runtime.Path;
1:6c24865: import org.eclipse.core.runtime.Platform;
1:6c24865: import org.eclipse.jdt.core.IClasspathContainer;
1:6c24865: import org.eclipse.jdt.core.IClasspathEntry;
1:6c24865: import org.eclipse.jdt.core.JavaCore;
1:6c24865: import org.osgi.framework.Bundle;
1:6c24865: 
1:6c24865: public class DerbyClasspathContainer implements IClasspathContainer {
1:6c24865:     public static final Path CONTAINER_ID = new Path("DERBY_CONTAINER"); //$NON-NLS-1$
1:6c24865:     private IClasspathEntry[] _entries;
1:6c24865:    
1:6c24865:     public DerbyClasspathContainer() {
1:6c24865:         List<IClasspathEntry> entries = new ArrayList<IClasspathEntry>();
1:6c24865:         Bundle bundle = Platform.getBundle(CommonNames.CORE_PATH);
1:6c24865:         Enumeration en = bundle.findEntries("/", "*.jar", true);
1:6c24865:         String rootPath = null;
1:6c24865:         try { 
1:6c24865:             rootPath = FileLocator.resolve(FileLocator.find(bundle, new Path("/"), null)).getPath();
1:6c24865:         } catch(IOException e) {
1:6c24865:             Logger.log(e.getMessage(), IStatus.ERROR);
1:6c24865:         }
1:6c24865:         while(en.hasMoreElements()) {
1:6c24865:             IClasspathEntry cpe = JavaCore.newLibraryEntry(new Path(rootPath+'/'+((URL)en.nextElement()).getFile()), null, null);
1:6c24865:             entries.add(cpe);
1:6c24865:         }    
1:6c24865:         IClasspathEntry[] cpes = new IClasspathEntry[entries.size()];
1:6c24865:         _entries = (IClasspathEntry[])entries.toArray(cpes);
1:6c24865:     }
1:6c24865: 
1:6c24865:     public IClasspathEntry[] getClasspathEntries() {      
1:6c24865:         return _entries;       
1:6c24865:     }
1:6c24865: 
1:6c24865:     public String getDescription() {
1:6c24865:         return Messages.DERBY_CONTAINER_DESC;
1:6c24865:     }
1:6c24865: 
1:6c24865:     public int getKind() {
1:6c24865:         return K_APPLICATION;
1:6c24865:     }
1:6c24865: 
1:6c24865:     public IPath getPath() {
1:6c24865:         return CONTAINER_ID;
1:6c24865:     }
1:6c24865: }
============================================================================
author:Dyre Tjeldvoll
-------------------------------------------------------------------------------
commit:6c24865
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:   Derby - Class org.apache.derby.ui.container.DerbyClasspathContainer
1: 
1:   Licensed to the Apache Software Foundation (ASF) under one or more
1:   contributor license agreements.  See the NOTICE file distributed with
1:   this work for additional information regarding copyright ownership.
1:   The ASF licenses this file to you under the Apache License, Version 2.0
1:   (the "License"); you may not use this file except in compliance with
1:   the License.  You may obtain a copy of the License at
1: 
1:   http://www.apache.org/licenses/LICENSE-2.0
1: 
1:   Unless required by applicable law or agreed to in writing, software
1:   distributed under the License is distributed on an "AS IS" BASIS,
1:   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:   See the License for the specific language governing permissions and
1:   limitations under the License.
1: 
1: */
1: 
1: package org.apache.derby.ui.container;
1: 
1: import java.io.IOException;
1: import java.net.URL;
1: import java.util.ArrayList;
1: import java.util.Enumeration;
1: import java.util.List;
1: 
1: import org.apache.derby.ui.common.CommonNames;
1: import org.apache.derby.ui.common.Messages;
1: import org.apache.derby.ui.util.Logger;
1: import org.eclipse.core.runtime.FileLocator;
1: import org.eclipse.core.runtime.IPath;
1: import org.eclipse.core.runtime.IStatus;
1: import org.eclipse.core.runtime.Path;
1: import org.eclipse.core.runtime.Platform;
1: import org.eclipse.jdt.core.IClasspathContainer;
1: import org.eclipse.jdt.core.IClasspathEntry;
1: import org.eclipse.jdt.core.JavaCore;
1: import org.osgi.framework.Bundle;
1: 
1: public class DerbyClasspathContainer implements IClasspathContainer {
1:     public static final Path CONTAINER_ID = new Path("DERBY_CONTAINER"); //$NON-NLS-1$
1:     private IClasspathEntry[] _entries;
1:    
1:     public DerbyClasspathContainer() {
1:         List<IClasspathEntry> entries = new ArrayList<IClasspathEntry>();
1:         Bundle bundle = Platform.getBundle(CommonNames.CORE_PATH);
1:         Enumeration en = bundle.findEntries("/", "*.jar", true);
1:         String rootPath = null;
1:         try { 
1:             rootPath = FileLocator.resolve(FileLocator.find(bundle, new Path("/"), null)).getPath();
1:         } catch(IOException e) {
1:             Logger.log(e.getMessage(), IStatus.ERROR);
1:         }
1:         while(en.hasMoreElements()) {
1:             IClasspathEntry cpe = JavaCore.newLibraryEntry(new Path(rootPath+'/'+((URL)en.nextElement()).getFile()), null, null);
1:             entries.add(cpe);
1:         }    
1:         IClasspathEntry[] cpes = new IClasspathEntry[entries.size()];
1:         _entries = (IClasspathEntry[])entries.toArray(cpes);
1:     }
1: 
1:     public IClasspathEntry[] getClasspathEntries() {      
1:         return _entries;       
1:     }
1: 
1:     public String getDescription() {
1:         return Messages.DERBY_CONTAINER_DESC;
1:     }
1: 
1:     public int getKind() {
1:         return K_APPLICATION;
1:     }
1: 
1:     public IPath getPath() {
1:         return CONTAINER_ID;
1:     }
1: }
============================================================================