1:fe77ca5: /*
3:fe77ca5: 
1:345de35:    Derby - Class org.apache.derby.impl.sql.compile.TransactionStatementNode
1:345de35: 
1:2d37fd6:    Licensed to the Apache Software Foundation (ASF) under one or more
1:2d37fd6:    contributor license agreements.  See the NOTICE file distributed with
1:2d37fd6:    this work for additional information regarding copyright ownership.
1:2d37fd6:    The ASF licenses this file to you under the Apache License, Version 2.0
1:2d37fd6:    (the "License"); you may not use this file except in compliance with
1:2d37fd6:    the License.  You may obtain a copy of the License at
1:345de35: 
1:345de35:       http://www.apache.org/licenses/LICENSE-2.0
1:345de35: 
1:345de35:    Unless required by applicable law or agreed to in writing, software
1:345de35:    distributed under the License is distributed on an "AS IS" BASIS,
1:345de35:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:345de35:    See the License for the specific language governing permissions and
1:345de35:    limitations under the License.
1:345de35: 
2:fe77ca5:  */
1:fe77ca5: 
1:fe77ca5: 
1:fe77ca5: package	org.apache.derby.impl.sql.compile;
1:fe77ca5: 
1:fe77ca5: import org.apache.derby.iapi.services.context.ContextManager;
1:fe77ca5: 
2:fe77ca5: /**
1:fe77ca5:  * A TransactionStatementNode represents any type of Transaction statement: 
1:fe77ca5:  * SET TRANSACTION, COMMIT, and ROLLBACK.
1:fe77ca5:  *
1:fe77ca5:  */
1:fe77ca5: 
1:0061383: abstract class TransactionStatementNode extends StatementNode
1:fe77ca5: {
1:3bb140c: 
1:3bb140c:     TransactionStatementNode(ContextManager cm) {
1:3bb140c:         super(cm);
1:3bb140c:     }
1:3bb140c: 
1:fe77ca5: 	int activationKind()
1:fe77ca5: 	{
1:fe77ca5: 		   return StatementNode.NEED_NOTHING_ACTIVATION;
1:fe77ca5: 	}
1:fe77ca5: 	/**
1:fe77ca5: 	 * COMMIT and ROLLBACK are allowed to commit
1:fe77ca5: 	 * and rollback, duh.
1:fe77ca5: 	 *
1:fe77ca5: 	 * @return false 
1:fe77ca5: 	 */	
1:3bb140c:     @Override
1:fe77ca5: 	public boolean isAtomic() 
1:fe77ca5: 	{
1:fe77ca5: 		return false;
1:fe77ca5: 	}
1:fe77ca5: 
1:fe77ca5: 	/**
1:fe77ca5: 	 * Returns whether or not this Statement requires a set/clear savepoint
1:fe77ca5: 	 * around its execution.  The following statement "types" do not require them:
1:fe77ca5: 	 *		Cursor	- unnecessary and won't work in a read only environment
1:fe77ca5: 	 *		Xact	- savepoint will get blown away underneath us during commit/rollback
1:fe77ca5: 	 *
1:fe77ca5: 	 * @return boolean	Whether or not this Statement requires a set/clear savepoint
1:fe77ca5: 	 */
1:3bb140c:     @Override
1:fe77ca5: 	public boolean needsSavepoint()
1:fe77ca5: 	{
1:fe77ca5: 		return false;
1:fe77ca5: 	}
1:fe77ca5: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:3bb140c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
1:     TransactionStatementNode(ContextManager cm) {
1:         super(cm);
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:David Van Couvering
-------------------------------------------------------------------------------
commit:2d37fd6
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:0061383
/////////////////////////////////////////////////////////////////////////
1: abstract class TransactionStatementNode extends StatementNode
commit:345de35
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.impl.sql.compile.TransactionStatementNode
1: 
0:    Copyright 1997, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:61070a6
/////////////////////////////////////////////////////////////////////////
commit:fe77ca5
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.compile
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: 
1: package	org.apache.derby.impl.sql.compile;
1: 
1: import org.apache.derby.iapi.services.context.ContextManager;
1: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
1: 
1: /**
1:  * A TransactionStatementNode represents any type of Transaction statement: 
1:  * SET TRANSACTION, COMMIT, and ROLLBACK.
1:  *
0:  * @author Ames Carlson
1:  */
1: 
0: public abstract class TransactionStatementNode extends StatementNode
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
1: 	int activationKind()
1: 	{
1: 		   return StatementNode.NEED_NOTHING_ACTIVATION;
1: 	}
1: 	/**
1: 	 * COMMIT and ROLLBACK are allowed to commit
1: 	 * and rollback, duh.
1: 	 *
1: 	 * @return false 
1: 	 */	
1: 	public boolean isAtomic() 
1: 	{
1: 		return false;
1: 	}
1: 
1: 	/**
1: 	 * Returns whether or not this Statement requires a set/clear savepoint
1: 	 * around its execution.  The following statement "types" do not require them:
1: 	 *		Cursor	- unnecessary and won't work in a read only environment
1: 	 *		Xact	- savepoint will get blown away underneath us during commit/rollback
1: 	 *
1: 	 * @return boolean	Whether or not this Statement requires a set/clear savepoint
1: 	 */
1: 	public boolean needsSavepoint()
1: 	{
1: 		return false;
1: 	}
1: }
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.impl.sql.compile
0:    (C) Copyright IBM Corp. 1997, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: 
0: package	org.apache.derby.impl.sql.compile;
0: 
0: import org.apache.derby.iapi.services.context.ContextManager;
0: 
0: import org.apache.derby.iapi.services.sanity.SanityManager;
0: 
0: /**
0:  * A TransactionStatementNode represents any type of Transaction statement: 
0:  * SET TRANSACTION, COMMIT, and ROLLBACK.
0:  *
0:  * @author Ames Carlson
0:  */
0: 
0: public abstract class TransactionStatementNode extends StatementNode
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1997_2004;
0: 	int activationKind()
0: 	{
0: 		   return StatementNode.NEED_NOTHING_ACTIVATION;
0: 	}
0: 	/**
0: 	 * COMMIT and ROLLBACK are allowed to commit
0: 	 * and rollback, duh.
0: 	 *
0: 	 * @return false 
0: 	 */	
0: 	public boolean isAtomic() 
0: 	{
0: 		return false;
0: 	}
0: 
0: 	/**
0: 	 * Returns whether or not this Statement requires a set/clear savepoint
0: 	 * around its execution.  The following statement "types" do not require them:
0: 	 *		Cursor	- unnecessary and won't work in a read only environment
0: 	 *		Xact	- savepoint will get blown away underneath us during commit/rollback
0: 	 *
0: 	 * @return boolean	Whether or not this Statement requires a set/clear savepoint
0: 	 */
0: 	public boolean needsSavepoint()
0: 	{
0: 		return false;
0: 	}
0: }
============================================================================