1:2bc809f: /*
2:2bc809f: 
1:2bc809f:    Derby - Class org.apache.derbyTesting.unitTests.lang.EmptyResultSetStatisticsFactory
1:2bc809f: 
1:c38b841:    Licensed to the Apache Software Foundation (ASF) under one or more
1:c38b841:    contributor license agreements.  See the NOTICE file distributed with
1:c38b841:    this work for additional information regarding copyright ownership.
1:c38b841:    The ASF licenses this file to You under the Apache License, Version 2.0
1:c38b841:    (the "License"); you may not use this file except in compliance with
1:c38b841:    the License.  You may obtain a copy of the License at
1:2bc809f: 
1:2bc809f:       http://www.apache.org/licenses/LICENSE-2.0
1:2bc809f: 
1:2bc809f:    Unless required by applicable law or agreed to in writing, software
1:2bc809f:    distributed under the License is distributed on an "AS IS" BASIS,
1:2bc809f:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2bc809f:    See the License for the specific language governing permissions and
1:2bc809f:    limitations under the License.
1:2bc809f: 
1:2bc809f:  */
1:2bc809f: 
1:2bc809f: package org.apache.derbyTesting.unitTests.lang;
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.services.monitor.Monitor;
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.error.StandardException;
1:2bc809f: 
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.sql.Activation;
1:2bc809f: import org.apache.derby.iapi.sql.ResultSet;
1:2bc809f: import org.apache.derby.iapi.sql.PreparedStatement;
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.sql.execute.NoPutResultSet;
1:2bc809f: import org.apache.derby.iapi.sql.execute.ResultSetFactory;
1:2bc809f: import org.apache.derby.iapi.sql.execute.ResultSetStatisticsFactory;
1:2bc809f: 
1:2bc809f: import org.apache.derby.iapi.sql.execute.RunTimeStatistics;
1:2bc809f: 
1:5825332: import org.apache.derby.iapi.sql.execute.ResultSetStatistics;
1:2bc809f: 
1:2bc809f: import java.util.Properties;
1:2bc809f: 
1:2bc809f: /**
1:2bc809f:  * ResultSetStatisticsFactory provides a wrapper around all of
1:2bc809f:  * objects associated with run time statistics.
1:2bc809f:  * <p>
1:2bc809f:  * This implementation of the protocol is for stubbing out
1:2bc809f:  * the RunTimeStatistics feature at execution time..
1:2bc809f:  *
1:2bc809f:  */
1:2bc809f: public class EmptyResultSetStatisticsFactory 
1:2bc809f: 		implements ResultSetStatisticsFactory
1:2bc809f: {
1:2bc809f: 	//
1:2bc809f: 	// ExecutionFactory interface
1:2bc809f: 	//
1:2bc809f: 	//
1:2bc809f: 	// ResultSetStatisticsFactory interface
1:2bc809f: 	//
1:2bc809f: 
1:2bc809f: 	/**
1:2bc809f: 		@see ResultSetStatisticsFactory#getRunTimeStatistics
1:2bc809f: 	 */
1:2bc809f: 	public RunTimeStatistics getRunTimeStatistics(
1:2bc809f: 			Activation activation, 
1:2bc809f: 			ResultSet rs,
1:2bc809f: 			NoPutResultSet[] subqueryTrackingArray)
1:2bc809f: 		throws StandardException
1:2bc809f: 	{
1:2bc809f: 		return null;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	/**
1:2bc809f: 		@see ResultSetStatisticsFactory#getResultSetStatistics
1:2bc809f: 	 */
1:2bc809f: 	public ResultSetStatistics getResultSetStatistics(ResultSet rs)
1:2bc809f: 	{
1:2bc809f: 		return null;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	/**
1:2bc809f: 		@see ResultSetStatisticsFactory#getResultSetStatistics
1:2bc809f: 	 */
1:2bc809f: 	public ResultSetStatistics getResultSetStatistics(NoPutResultSet rs)
1:2bc809f: 	{
1:2bc809f: 		return null;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	/**
1:2bc809f: 		@see ResultSetStatisticsFactory#getNoRowsResultSetStatistics
1:2bc809f: 	 */
1:2bc809f: 	public ResultSetStatistics getNoRowsResultSetStatistics(ResultSet rs)
1:2bc809f: 	{
1:2bc809f: 		return null;
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: 	//
1:2bc809f: 	// class interface
1:2bc809f: 	//
1:2bc809f: 	public EmptyResultSetStatisticsFactory() 
1:2bc809f: 	{
1:2bc809f: 	}
1:2bc809f: 
1:2bc809f: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:5825332
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derby.iapi.sql.execute.ResultSetStatistics;
author:Kristian Waagan
-------------------------------------------------------------------------------
commit:6c9dac8
/////////////////////////////////////////////////////////////////////////
author:Samuel Andrew McIntyre
-------------------------------------------------------------------------------
commit:c38b841
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to You under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
commit:2bc809f
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.unitTests.lang.EmptyResultSetStatisticsFactory
1: 
0:    Copyright 1999, 2005 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.unitTests.lang;
1: 
1: import org.apache.derby.iapi.services.monitor.Monitor;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: 
1: import org.apache.derby.iapi.sql.Activation;
1: import org.apache.derby.iapi.sql.ResultSet;
1: import org.apache.derby.iapi.sql.PreparedStatement;
1: 
1: import org.apache.derby.iapi.sql.execute.NoPutResultSet;
1: import org.apache.derby.iapi.sql.execute.ResultSetFactory;
1: import org.apache.derby.iapi.sql.execute.ResultSetStatisticsFactory;
1: 
1: import org.apache.derby.iapi.sql.execute.RunTimeStatistics;
1: 
0: import org.apache.derby.impl.sql.execute.rts.ResultSetStatistics;
1: 
1: import java.util.Properties;
1: 
1: /**
1:  * ResultSetStatisticsFactory provides a wrapper around all of
1:  * objects associated with run time statistics.
1:  * <p>
1:  * This implementation of the protocol is for stubbing out
1:  * the RunTimeStatistics feature at execution time..
1:  *
0:  * @author jerry
1:  */
1: public class EmptyResultSetStatisticsFactory 
1: 		implements ResultSetStatisticsFactory
1: {
1: 	//
1: 	// ExecutionFactory interface
1: 	//
1: 	//
1: 	// ResultSetStatisticsFactory interface
1: 	//
1: 
1: 	/**
1: 		@see ResultSetStatisticsFactory#getRunTimeStatistics
1: 	 */
1: 	public RunTimeStatistics getRunTimeStatistics(
1: 			Activation activation, 
1: 			ResultSet rs,
1: 			NoPutResultSet[] subqueryTrackingArray)
1: 		throws StandardException
1: 	{
1: 		return null;
1: 	}
1: 
1: 	/**
1: 		@see ResultSetStatisticsFactory#getResultSetStatistics
1: 	 */
1: 	public ResultSetStatistics getResultSetStatistics(ResultSet rs)
1: 	{
1: 		return null;
1: 	}
1: 
1: 	/**
1: 		@see ResultSetStatisticsFactory#getResultSetStatistics
1: 	 */
1: 	public ResultSetStatistics getResultSetStatistics(NoPutResultSet rs)
1: 	{
1: 		return null;
1: 	}
1: 
1: 	/**
1: 		@see ResultSetStatisticsFactory#getNoRowsResultSetStatistics
1: 	 */
1: 	public ResultSetStatistics getNoRowsResultSetStatistics(ResultSet rs)
1: 	{
1: 		return null;
1: 	}
1: 
1: 	//
1: 	// class interface
1: 	//
1: 	public EmptyResultSetStatisticsFactory() 
1: 	{
1: 	}
1: 
1: }
============================================================================