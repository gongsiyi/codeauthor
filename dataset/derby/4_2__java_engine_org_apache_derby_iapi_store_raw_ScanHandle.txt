1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.store.raw.ScanHandle
1:7ecc1f2: 
1:75c7276:    Licensed to the Apache Software Foundation (ASF) under one or more
1:75c7276:    contributor license agreements.  See the NOTICE file distributed with
1:75c7276:    this work for additional information regarding copyright ownership.
1:75c7276:    The ASF licenses this file to you under the Apache License, Version 2.0
1:75c7276:    (the "License"); you may not use this file except in compliance with
1:75c7276:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.store.raw;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: import org.apache.derby.iapi.store.access.DatabaseInstant;
1:eac0369: import java.io.InputStream;
1:eac0369: 
2:eac0369: /**
1:eac0369:   Inteface for scanning the log from outside the RawStore.
1:eac0369:   */
1:eac0369: public interface ScanHandle
1:eac0369: {
1:eac0369: 	/**
1:eac0369: 	  Position to the next log record. 
1:eac0369: 	  @return true if the log contains a next flushed log record and
1:eac0369: 	           false otherwise. If this returns false it is incorrect
1:eac0369: 			   to make any of the other calls on this interface.
1:eac0369: 	  @exception StandardException Oops
1:eac0369: 	  */
1:eac0369: 	public boolean next() throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  Get the group for the current log record.
1:eac0369: 	  @exception StandardException Oops
1:eac0369: 	  */
1:eac0369: 	public int getGroup() throws StandardException;
1:eac0369: 
1:eac0369: 	/**
1:eac0369: 	  Get the Loggable associated with the currentLogRecord
1:eac0369: 	  @exception StandardException Oops
1:eac0369: 	  */
1:eac0369: 	public Loggable getLoggable() throws StandardException;
1:eac0369: 	/**
1:eac0369: 	  Get an InputStream for reading the optional data associated with
1:eac0369: 	  the current log record. This may only be called once per log record.
1:eac0369: 	  @exception StandardException Oops
1:eac0369: 	  */
1:eac0369:     public InputStream getOptionalData() throws StandardException;
1:eac0369: 	/**
1:eac0369: 	  Get the DatabaseInstant for the current log record.
1:eac0369: 	  @exception StandardException Oops
1:eac0369: 	  */
1:eac0369:     public DatabaseInstant getInstant() throws StandardException;
1:eac0369: 	/**
1:eac0369: 	  Get the TransactionId for the current log record.
1:eac0369: 	  @exception StandardException Oops
1:eac0369: 	  */
1:eac0369: 	public Object getTransactionId() throws StandardException;
1:eac0369: 	/**
1:eac0369: 	  Close this scan.
1:eac0369: 	  */
1:eac0369:     public void close();
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:75c7276
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.store.raw.ScanHandle
1: 
0:    Copyright 1999, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:76addbc
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.raw
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.store.raw;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.store.access.DatabaseInstant;
1: import java.io.InputStream;
1: 
1: /**
1:   Inteface for scanning the log from outside the RawStore.
1:   */
1: public interface ScanHandle
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
1: 	/**
1: 	  Position to the next log record. 
1: 	  @return true if the log contains a next flushed log record and
1: 	           false otherwise. If this returns false it is incorrect
1: 			   to make any of the other calls on this interface.
1: 	  @exception StandardException Oops
1: 	  */
1: 	public boolean next() throws StandardException;
1: 
1: 	/**
1: 	  Get the group for the current log record.
1: 	  @exception StandardException Oops
1: 	  */
1: 	public int getGroup() throws StandardException;
1: 
1: 	/**
1: 	  Get the Loggable associated with the currentLogRecord
1: 	  @exception StandardException Oops
1: 	  */
1: 	public Loggable getLoggable() throws StandardException;
1: 	/**
1: 	  Get an InputStream for reading the optional data associated with
1: 	  the current log record. This may only be called once per log record.
1: 	  @exception StandardException Oops
1: 	  */
1:     public InputStream getOptionalData() throws StandardException;
1: 	/**
1: 	  Get the DatabaseInstant for the current log record.
1: 	  @exception StandardException Oops
1: 	  */
1:     public DatabaseInstant getInstant() throws StandardException;
1: 	/**
1: 	  Get the TransactionId for the current log record.
1: 	  @exception StandardException Oops
1: 	  */
1: 	public Object getTransactionId() throws StandardException;
1: 	/**
1: 	  Close this scan.
1: 	  */
1:     public void close();
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.store.raw
0:    (C) Copyright IBM Corp. 1999, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.store.raw;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: import org.apache.derby.iapi.store.access.DatabaseInstant;
0: import java.io.InputStream;
0: 
0: /**
0:   Inteface for scanning the log from outside the RawStore.
0:   */
0: public interface ScanHandle
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1999_2004;
0: 	/**
0: 	  Position to the next log record. 
0: 	  @return true if the log contains a next flushed log record and
0: 	           false otherwise. If this returns false it is incorrect
0: 			   to make any of the other calls on this interface.
0: 	  @exception StandardException Oops
0: 	  */
0: 	public boolean next() throws StandardException;
0: 
0: 	/**
0: 	  Get the group for the current log record.
0: 	  @exception StandardException Oops
0: 	  */
0: 	public int getGroup() throws StandardException;
0: 
0: 	/**
0: 	  Get the Loggable associated with the currentLogRecord
0: 	  @exception StandardException Oops
0: 	  */
0: 	public Loggable getLoggable() throws StandardException;
0: 	/**
0: 	  Get an InputStream for reading the optional data associated with
0: 	  the current log record. This may only be called once per log record.
0: 	  @exception StandardException Oops
0: 	  */
0:     public InputStream getOptionalData() throws StandardException;
0: 	/**
0: 	  Get the DatabaseInstant for the current log record.
0: 	  @exception StandardException Oops
0: 	  */
0:     public DatabaseInstant getInstant() throws StandardException;
0: 	/**
0: 	  Get the TransactionId for the current log record.
0: 	  @exception StandardException Oops
0: 	  */
0: 	public Object getTransactionId() throws StandardException;
0: 	/**
0: 	  Close this scan.
0: 	  */
0:     public void close();
0: }
============================================================================