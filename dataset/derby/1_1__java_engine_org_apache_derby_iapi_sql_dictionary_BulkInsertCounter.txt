1:a180287: /*
1:a180287: 
1:a180287:    Derby - Class org.apache.derby.iapi.sql.dictionary.BulkInsertCounter
1:a180287: 
1:a180287:    Licensed to the Apache Software Foundation (ASF) under one or more
1:a180287:    contributor license agreements.  See the NOTICE file distributed with
1:a180287:    this work for additional information regarding copyright ownership.
1:a180287:    The ASF licenses this file to you under the Apache License, Version 2.0
1:a180287:    (the "License"); you may not use this file except in compliance with
1:a180287:    the License.  You may obtain a copy of the License at
1:a180287: 
1:a180287:       http://www.apache.org/licenses/LICENSE-2.0
1:a180287: 
1:a180287:    Unless required by applicable law or agreed to in writing, software
1:a180287:    distributed under the License is distributed on an "AS IS" BASIS,
1:a180287:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a180287:    See the License for the specific language governing permissions and
1:a180287:    limitations under the License.
1:a180287: 
1:a180287:  */
1:a180287: 
1:a180287: package org.apache.derby.iapi.sql.dictionary;
1:a180287: 
1:a180287: import org.apache.derby.iapi.error.StandardException;
1:a180287: import org.apache.derby.iapi.types.NumberDataValue;
1:a180287: 
1:a180287: /**
1:a180287:  * Thin wrapper around a sequence generator to support the bulk-insert
1:a180287:  * optimization used by InsertResultSet.
1:a180287:  */
1:a180287: 
1:a180287: public interface BulkInsertCounter
1:a180287: {
1:a180287:     /**
1:a180287:      * <p>
1:a180287:      * Get the next sequence number for bulk-insert.
1:a180287:      * </p>
1:a180287:      *
1:a180287:      * @param returnValue This value is stuffed with the new sequence number.
1:a180287:      */
1:a180287:     public void getCurrentValueAndAdvance
1:a180287:         ( NumberDataValue returnValue ) throws StandardException;
1:a180287: 
1:a180287:     /**
1:a180287:      * <p>
1:a180287:      * Get the current value of the sequence generator without advancing it.
1:a180287:      * May return null if the generator is exhausted.
1:a180287:      * </p>
1:a180287:      */
1:a180287:     public Long peekAtCurrentValue() throws StandardException;
1:a180287:     
1:a180287: }
1:a180287: 
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:a180287
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derby.iapi.sql.dictionary.BulkInsertCounter
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.sql.dictionary;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: import org.apache.derby.iapi.types.NumberDataValue;
1: 
1: /**
1:  * Thin wrapper around a sequence generator to support the bulk-insert
1:  * optimization used by InsertResultSet.
1:  */
1: 
1: public interface BulkInsertCounter
1: {
1:     /**
1:      * <p>
1:      * Get the next sequence number for bulk-insert.
1:      * </p>
1:      *
1:      * @param returnValue This value is stuffed with the new sequence number.
1:      */
1:     public void getCurrentValueAndAdvance
1:         ( NumberDataValue returnValue ) throws StandardException;
1: 
1:     /**
1:      * <p>
1:      * Get the current value of the sequence generator without advancing it.
1:      * May return null if the generator is exhausted.
1:      * </p>
1:      */
1:     public Long peekAtCurrentValue() throws StandardException;
1:     
1: }
1: 
============================================================================