1:fc9b418: /*
2:fc9b418:  
1:fc9b418:    Derby - Class org.apache.derby.impl.jdbc.EmbedResultSet42
1:fc9b418:  
1:fc9b418:    Licensed to the Apache Software Foundation (ASF) under one or more
1:fc9b418:    contributor license agreements.  See the NOTICE file distributed with
1:fc9b418:    this work for additional information regarding copyright ownership.
1:fc9b418:    The ASF licenses this file to you under the Apache License, Version 2.0
1:fc9b418:    (the "License"); you may not use this file except in compliance with
1:fc9b418:    the License.  You may obtain a copy of the License at
1:fc9b418:  
1:fc9b418:       http://www.apache.org/licenses/LICENSE-2.0
1:fc9b418:  
1:fc9b418:    Unless required by applicable law or agreed to in writing, software
1:fc9b418:    distributed under the License is distributed on an "AS IS" BASIS,
1:fc9b418:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc9b418:    See the License for the specific language governing permissions and
1:fc9b418:    limitations under the License.
1:fc9b418:  
1:fc9b418:  */
1:fc9b418: 
1:fc9b418: package org.apache.derby.impl.jdbc;
1:fc9b418: 
1:fc9b418: import org.apache.derby.iapi.sql.ResultSet;
1:fc9b418: 
1:fc9b418: import java.sql.SQLException;
1:fc9b418: import java.sql.SQLType;
1:fc9b418: 
1:fc9b418: /**
1:fc9b418:  * JDBC 4.2 specific methods that cannot be implemented in superclasses.
1:fc9b418:  */
1:8514aa2: public class EmbedResultSet42 extends EmbedResultSet
1:fc9b418: {
1:fc9b418:     
1:fc9b418:     /** Creates a new instance of EmbedResultSet42 */
1:fc9b418:     public EmbedResultSet42(org.apache.derby.impl.jdbc.EmbedConnection conn,
1:fc9b418:         ResultSet resultsToWrap,
1:fc9b418:         boolean forMetaData,
1:fc9b418:         org.apache.derby.impl.jdbc.EmbedStatement stmt,
1:fc9b418:         boolean isAtomic)
1:fc9b418:         throws SQLException {
1:fc9b418:         
1:fc9b418:         super(conn, resultsToWrap, forMetaData, stmt, isAtomic);
1:fc9b418:     }
1:fc9b418:     
1:fc9b418:     public void updateObject
1:fc9b418:         ( int columnIndex, Object x, SQLType targetSqlType )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:38b200a:         checkIfClosed("updateObject");
1:4c2fc4a:         updateObject( columnIndex, x, Util42.getTypeAsInt( targetSqlType ) );
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     public void updateObject
1:fc9b418:         ( int columnIndex, Object x, SQLType targetSqlType, int scaleOrLength )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:38b200a:         checkIfClosed("updateObject");
1:4c2fc4a:         updateObject( columnIndex, x, Util42.getTypeAsInt( targetSqlType ) );
1:fc9b418:         adjustScale( columnIndex, scaleOrLength );
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     public void updateObject
1:fc9b418:         ( String columnName, Object x, SQLType targetSqlType )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:38b200a:         checkIfClosed("updateObject");
1:4c2fc4a:         updateObject( columnName, x, Util42.getTypeAsInt( targetSqlType ) );
1:fc9b418:     }
1:fc9b418: 
1:fc9b418:     public void updateObject
1:fc9b418:         ( String columnName, Object x, SQLType targetSqlType, int scaleOrLength )
1:fc9b418:         throws SQLException
1:fc9b418:     {
1:38b200a:         checkIfClosed("updateObject");
1:fc9b418:         updateObject( findColumnName( columnName ), x, targetSqlType, scaleOrLength );
1:fc9b418:     }
1:fc9b418:     
1:fc9b418: }
============================================================================
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:8514aa2
/////////////////////////////////////////////////////////////////////////
1: public class EmbedResultSet42 extends EmbedResultSet
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:4c2fc4a
/////////////////////////////////////////////////////////////////////////
1:         updateObject( columnIndex, x, Util42.getTypeAsInt( targetSqlType ) );
/////////////////////////////////////////////////////////////////////////
1:         updateObject( columnIndex, x, Util42.getTypeAsInt( targetSqlType ) );
/////////////////////////////////////////////////////////////////////////
1:         updateObject( columnName, x, Util42.getTypeAsInt( targetSqlType ) );
commit:38b200a
/////////////////////////////////////////////////////////////////////////
1:         checkIfClosed("updateObject");
/////////////////////////////////////////////////////////////////////////
1:         checkIfClosed("updateObject");
/////////////////////////////////////////////////////////////////////////
1:         checkIfClosed("updateObject");
/////////////////////////////////////////////////////////////////////////
1:         checkIfClosed("updateObject");
commit:fc9b418
/////////////////////////////////////////////////////////////////////////
1: /*
1:  
1:    Derby - Class org.apache.derby.impl.jdbc.EmbedResultSet42
1:  
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1:  
1:       http://www.apache.org/licenses/LICENSE-2.0
1:  
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1:  
1:  */
1: 
1: package org.apache.derby.impl.jdbc;
1: 
1: import org.apache.derby.iapi.sql.ResultSet;
1: 
0: import java.sql.JDBCType;
1: import java.sql.SQLException;
1: import java.sql.SQLType;
1: 
0: import org.apache.derby.iapi.reference.SQLState;
1: 
1: /**
1:  * JDBC 4.2 specific methods that cannot be implemented in superclasses.
1:  */
0: public class EmbedResultSet42 extends org.apache.derby.impl.jdbc.EmbedResultSet40
1: {
1:     
1:     /** Creates a new instance of EmbedResultSet42 */
1:     public EmbedResultSet42(org.apache.derby.impl.jdbc.EmbedConnection conn,
1:         ResultSet resultsToWrap,
1:         boolean forMetaData,
1:         org.apache.derby.impl.jdbc.EmbedStatement stmt,
1:         boolean isAtomic)
1:         throws SQLException {
1:         
1:         super(conn, resultsToWrap, forMetaData, stmt, isAtomic);
1:     }
1:     
1:     public void updateObject
1:         ( int columnIndex, Object x, SQLType targetSqlType )
1:         throws SQLException
1:     {
0:         updateObject( columnIndex, x, Util42.getTypeAsInt( this, targetSqlType ) );
1:     }
1: 
1:     public void updateObject
1:         ( int columnIndex, Object x, SQLType targetSqlType, int scaleOrLength )
1:         throws SQLException
1:     {
0:         updateObject( columnIndex, x, Util42.getTypeAsInt( this, targetSqlType ) );
1:         adjustScale( columnIndex, scaleOrLength );
1:     }
1: 
1:     public void updateObject
1:         ( String columnName, Object x, SQLType targetSqlType )
1:         throws SQLException
1:     {
0:         updateObject( columnName, x, Util42.getTypeAsInt( this, targetSqlType ) );
1:     }
1: 
1:     public void updateObject
1:         ( String columnName, Object x, SQLType targetSqlType, int scaleOrLength )
1:         throws SQLException
1:     {
1:         updateObject( findColumnName( columnName ), x, targetSqlType, scaleOrLength );
1:     }
1:     
1: }
============================================================================