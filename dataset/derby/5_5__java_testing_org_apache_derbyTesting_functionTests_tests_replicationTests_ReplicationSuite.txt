1:40a554b: /*
13:40a554b: 
1:8c9d41e:    Derby - Class org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationSuite
1:c5935ad: 
1:40a554b:        Licensed to the Apache Software Foundation (ASF) under one
1:40a554b:        or more contributor license agreements.  See the NOTICE file
1:40a554b:        distributed with this work for additional information
1:40a554b:        regarding copyright ownership.  The ASF licenses this file
1:40a554b:        to you under the Apache License, Version 2.0 (the
1:40a554b:        "License"); you may not use this file except in compliance
1:40a554b:        with the License.  You may obtain a copy of the License at
1:c5935ad: 
1:40a554b:          http://www.apache.org/licenses/LICENSE-2.0
1:c5935ad: 
1:40a554b:        Unless required by applicable law or agreed to in writing,
1:40a554b:        software distributed under the License is distributed on an
1:40a554b:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:40a554b:        KIND, either express or implied.  See the License for the
1:40a554b:        specific language governing permissions and limitations
1:40a554b:        under the License
1:40a554b: */
1:40a554b: package org.apache.derbyTesting.functionTests.tests.replicationTests;
1:c5935ad: 
1:40a554b: import java.sql.SQLException;
1:1ae02c9: import junit.framework.Test;
1:40a554b: import org.apache.derbyTesting.junit.BaseTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:c1192c0: import org.apache.derbyTesting.junit.Derby;
1:6c73d74: import org.apache.derbyTesting.junit.JDBC;
1:f41a8a7: 
1:40a554b: /**
1:40a554b:  * Suite to run all JUnit tests in this package:
1:8c9d41e:  * org.apache.derbyTesting.functionTests.tests.replicationTests
1:40a554b:  *
1:40a554b:  */
1:40a554b: public class ReplicationSuite extends BaseTestCase  
1:40a554b: {
1:40a554b: 	/**
1:40a554b: 	 * Use suite method instead.
1:40a554b: 	 */
1:40a554b: 	private ReplicationSuite(String name) {
1:40a554b: 		super(name);
1:40a554b: 	}
1:f41a8a7: 
1:40a554b: 	public static Test suite() throws SQLException {
1:017ac10: 
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("ReplicationSuite");
1:40a554b: 
1:026c5e8:         // DERBY-5998: The replication code uses javax.net.ServerSocketFactory
1:026c5e8:         // to set up communication channels between the master and the slave.
1:026c5e8:         // That class is only available in an optional part of the Foundation
1:026c5e8:         // Profile API. Skip the replication tests if it is not available.
1:026c5e8:         try {
1:026c5e8:             Class.forName("javax.net.ServerSocketFactory");
1:026c5e8:         } catch (ClassNotFoundException cnfe) {
1:026c5e8:             println("Skipping replication tests since "
1:026c5e8:                     + "javax.net.ServerSocketFactory is not available");
1:026c5e8:             return suite;
1:026c5e8:         }
1:026c5e8: 
1:6c73d74:         // The tests require both DriverManager and ClientDataSource. None
1:6c73d74:         // of those classes are available in JSR-169, so only run the test
1:c1192c0:         // on platforms that support JDBC3 and higher. The tests also require
1:c1192c0:         // a network server.
1:c1192c0:         if (JDBC.vmSupportsJDBC3() && Derby.hasServer()) {
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local.suite());
1:61b02b7:             suite.addTest(ReplicationRun_Local.localAuthenticationSuite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_1.suite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_1Indexing.suite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_StateTest_part1.suite());
1:6c73d74:             suite.addTest(ReplicationRun_Local_StateTest_part1_1.suite());
1:6c73d74:             suite.addTest(ReplicationRun_Local_StateTest_part1_2.suite());
1:6c73d74:             suite.addTest(ReplicationRun_Local_StateTest_part1_3.suite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_StateTest_part2.suite());
1:6c73d74: 
1:6c73d74:             // Run this separatly as it produces extra output:
1:6c73d74:             // suite.addTest(ReplicationRun_Local_showStateChange.suite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_3_p1.suite());
1:6c73d74:             suite.addTest(ReplicationRun_Local_3_p2.suite());
1:6c73d74:             suite.addTest(ReplicationRun_Local_3_p3.suite());
1:6c73d74:             suite.addTest(ReplicationRun_Local_3_p4.suite());
1:6c73d74: 
1:6c73d74:             // Test for DERBY-3878
1:6c73d74:             suite.addTest(ReplicationRun_Local_3_p5.suite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_Encrypted_1.suite());
1:6c73d74: 
1:6c73d74:             suite.addTest(ReplicationRun_Local_3_p6.suite());
1:b06f20e: 
1:b06f20e:             suite.addTest(ReplicationRun_Local_Derby4910.suite());
1:3f01c97: 
1:6c73d74:         }
1:6c73d74: 
1:f978b1f:         suite.addTest(Derby5937SlaveShutdownTest.suite());
1:f978b1f: 
1:40a554b: 		return suite;
1:40a554b: 	}
1:40a554b: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import junit.framework.Test;
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("ReplicationSuite");
commit:8c9d41e
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.replicationTests.ReplicationSuite
/////////////////////////////////////////////////////////////////////////
1:  * org.apache.derbyTesting.functionTests.tests.replicationTests
author:Knut Anders Hatlen
-------------------------------------------------------------------------------
commit:026c5e8
/////////////////////////////////////////////////////////////////////////
1:         // DERBY-5998: The replication code uses javax.net.ServerSocketFactory
1:         // to set up communication channels between the master and the slave.
1:         // That class is only available in an optional part of the Foundation
1:         // Profile API. Skip the replication tests if it is not available.
1:         try {
1:             Class.forName("javax.net.ServerSocketFactory");
1:         } catch (ClassNotFoundException cnfe) {
1:             println("Skipping replication tests since "
1:                     + "javax.net.ServerSocketFactory is not available");
1:             return suite;
1:         }
1: 
commit:f978b1f
/////////////////////////////////////////////////////////////////////////
1:         suite.addTest(Derby5937SlaveShutdownTest.suite());
1: 
commit:9700792
/////////////////////////////////////////////////////////////////////////
0:             suite.addTest(Derby5937SlaveShutdownTest.suite());
commit:3f01c97
/////////////////////////////////////////////////////////////////////////
1: 
0:             // Enable when DERBY-5937 has been fixed.
0:             //suite.addTest(Derby5937SlaveShutdownTest.suite());
commit:c1192c0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.Derby;
/////////////////////////////////////////////////////////////////////////
1:         // on platforms that support JDBC3 and higher. The tests also require
1:         // a network server.
1:         if (JDBC.vmSupportsJDBC3() && Derby.hasServer()) {
commit:b06f20e
/////////////////////////////////////////////////////////////////////////
1: 
1:             suite.addTest(ReplicationRun_Local_Derby4910.suite());
commit:6c73d74
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.JDBC;
/////////////////////////////////////////////////////////////////////////
1:         // The tests require both DriverManager and ClientDataSource. None
1:         // of those classes are available in JSR-169, so only run the test
0:         // on platforms that support JDBC3 and higher.
0:         if (JDBC.vmSupportsJDBC3()) {
1: 
1:             suite.addTest(ReplicationRun_Local.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_1.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_1Indexing.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_StateTest_part1.suite());
1:             suite.addTest(ReplicationRun_Local_StateTest_part1_1.suite());
1:             suite.addTest(ReplicationRun_Local_StateTest_part1_2.suite());
1:             suite.addTest(ReplicationRun_Local_StateTest_part1_3.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_StateTest_part2.suite());
1: 
1:             // Run this separatly as it produces extra output:
1:             // suite.addTest(ReplicationRun_Local_showStateChange.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_3_p1.suite());
1:             suite.addTest(ReplicationRun_Local_3_p2.suite());
1:             suite.addTest(ReplicationRun_Local_3_p3.suite());
1:             suite.addTest(ReplicationRun_Local_3_p4.suite());
1: 
1:             // Test for DERBY-3878
1:             suite.addTest(ReplicationRun_Local_3_p5.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_Encrypted_1.suite());
1: 
1:             suite.addTest(ReplicationRun_Local_3_p6.suite());
1:         }
1: 
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:61b02b7
/////////////////////////////////////////////////////////////////////////
1:             suite.addTest(ReplicationRun_Local.localAuthenticationSuite());
commit:c5935ad
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(ReplicationRun_Local_1Indexing.suite());
1: 		
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(ReplicationRun_Local_3_p5.suite()); // Test for DERBY-3878
1: 		
0: 		suite.addTest(ReplicationRun_Local_Encrypted_1.suite());
1: 		
0: 		suite.addTest(ReplicationRun_Local_3_p6.suite());
1: 		
author:Myrna van Lunteren
-------------------------------------------------------------------------------
commit:f41a8a7
/////////////////////////////////////////////////////////////////////////
0: 		// Run this separatly as it produces extra output:
0:         // suite.addTest(ReplicationRun_Local_showStateChange.suite());
1:         
0:         suite.addTest(ReplicationRun_Local_3_p1.suite());
0:         suite.addTest(ReplicationRun_Local_3_p2.suite());
0:         suite.addTest(ReplicationRun_Local_3_p3.suite());
0:         suite.addTest(ReplicationRun_Local_3_p4.suite());
1:         
author:Oystein Grovlen
-------------------------------------------------------------------------------
commit:017ac10
/////////////////////////////////////////////////////////////////////////
0: 		suite.addTest(ReplicationRun_Local_1.suite());
1:         
commit:40a554b
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Derby - Class org.apache.derbyTesting.functionTests.tests.jdbc4.ReplicationSuite
1: 
1:        Licensed to the Apache Software Foundation (ASF) under one
1:        or more contributor license agreements.  See the NOTICE file
1:        distributed with this work for additional information
1:        regarding copyright ownership.  The ASF licenses this file
1:        to you under the Apache License, Version 2.0 (the
1:        "License"); you may not use this file except in compliance
1:        with the License.  You may obtain a copy of the License at
1: 
1:          http://www.apache.org/licenses/LICENSE-2.0
1: 
1:        Unless required by applicable law or agreed to in writing,
1:        software distributed under the License is distributed on an
1:        "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:        KIND, either express or implied.  See the License for the
1:        specific language governing permissions and limitations
1:        under the License
1: */
1: package org.apache.derbyTesting.functionTests.tests.replicationTests;
1: 
1: import java.sql.SQLException;
1: 
1: import org.apache.derbyTesting.junit.BaseTestCase;
1: 
0: import junit.framework.Test; 
0: import junit.framework.TestSuite;
1: 
1: /**
1:  * Suite to run all JUnit tests in this package:
0:  * org.apache.derbyTesting.functionTests.tests.jdbc4
1:  *
1:  */
1: public class ReplicationSuite extends BaseTestCase  
1: {
1: 	/**
1: 	 * Use suite method instead.
1: 	 */
1: 	private ReplicationSuite(String name) {
1: 		super(name);
1: 	}
1: 
1: 	public static Test suite() throws SQLException {
1: 
0: 		TestSuite suite = new TestSuite("ReplicationSuite");
1: 
0: 		suite.addTest(ReplicationRun_Local.suite());
1:         
0: 		suite.addTest(ReplicationRun_Local_StateTest_part1.suite());
0: 		suite.addTest(ReplicationRun_Local_StateTest_part1_1.suite());
0: 		suite.addTest(ReplicationRun_Local_StateTest_part1_2.suite());
0: 		suite.addTest(ReplicationRun_Local_StateTest_part1_3.suite());
1:         
0: 		suite.addTest(ReplicationRun_Local_StateTest_part2.suite());
1:         		
1: 		return suite;
1: 	}
1: }
============================================================================