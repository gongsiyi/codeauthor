1:d57bbd3: /*
1:d57bbd3:  *
1:d57bbd3:  * Derby - Class org.apache.derbyTesting.functionTests.tests.nist.NistScripts
1:d57bbd3:  *
1:d57bbd3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d57bbd3:  * contributor license agreements.  See the NOTICE file distributed with
1:d57bbd3:  * this work for additional information regarding copyright ownership.
1:d57bbd3:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d57bbd3:  * (the "License"); you may not use this file except in compliance with
1:d57bbd3:  * the License.  You may obtain a copy of the License at
1:d57bbd3:  *
1:d57bbd3:  *    http://www.apache.org/licenses/LICENSE-2.0
1:d57bbd3:  *
1:d57bbd3:  * Unless required by applicable law or agreed to in writing, 
1:d57bbd3:  * software distributed under the License is distributed on an 
1:d57bbd3:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:d57bbd3:  * either express or implied. See the License for the specific 
1:d57bbd3:  * language governing permissions and limitations under the License.
1:d57bbd3:  */
1:d57bbd3: package org.apache.derbyTesting.functionTests.tests.nist;
4:d57bbd3: 
1:d57bbd3: import junit.framework.Test;
1:d57bbd3: import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
1:1ae02c9: import org.apache.derbyTesting.junit.BaseTestSuite;
1:d57bbd3: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1:d4ce3d1: import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
1:d57bbd3: import org.apache.derbyTesting.junit.TestConfiguration;
1:d57bbd3: 
1:d57bbd3: /**
1:d57bbd3:  * Run the NIST scripts as a single suite.
1:d57bbd3:  *
1:d57bbd3:  */
1:d57bbd3: public final class NistScripts extends ScriptTestCase {
1:d57bbd3: 
1:d57bbd3:     /**
1:d57bbd3:      * The complete set of NIST scripts for Derby.
1:d57bbd3:      * First element of array is the script name,
1:d57bbd3:      * second element is the user name for the connection.
1:d57bbd3:      */  
1:d57bbd3:     private static final String[][] TESTS = {
1:d57bbd3:     {"schema1", "HU"},
1:d57bbd3:     { "basetab", "HU"},
1:d57bbd3:     { "schema5", "FLATER"},
1:d57bbd3:     { "schema8", "SUN"},
1:d57bbd3:     { "temp_schem10", "HU"},
1:d57bbd3:     { "temp_cts5sch2", "HU"},
1:d57bbd3:     { "temp_cts5tab", "CTS1"},
1:d57bbd3:     { "flattab", "FLATER"},
1:d57bbd3:     { "dml012", "HU"},
1:d57bbd3:     { "dml013", "HU"},
1:d57bbd3:     { "dml018", "HU"},
1:d57bbd3:     { "dml022", "HU"},
1:d57bbd3:     {"dml025", "HU"},
1:d57bbd3:     {"dml044", "HU"},
1:d57bbd3:     {"dml045", "HU"},
1:d57bbd3:     {"dml051", "HU"},
1:d57bbd3:     {"dml059", "HU"},
1:d57bbd3:     {"dml061", "HU"},
1:d57bbd3:     {"dml073", "HU"},
1:d57bbd3:     {"dml087", "FLATER"},
1:d57bbd3:     {"dml090", "HU"},
1:d57bbd3:     {"dml106", "FLATER"},
1:d57bbd3:     {"dml108", "FLATER"},
1:d57bbd3:     {"dml114", "FLATER"},
1:d57bbd3:     {"dml141", "FLATER"},
1:d57bbd3:     {"dml144", "FLATER"},
1:d57bbd3:     {"dml162", "FLATER"},
1:d57bbd3:     {"dml177", "FLATER"},
1:d57bbd3:     {"dml010", "HU"},
1:d57bbd3:     {"dml015", "HU"},
1:d57bbd3:     {"dml020", "HU"},
1:d57bbd3:     {"dml037", "HU"},
1:d57bbd3:     {"dml038", "HU"},
1:d57bbd3:     {"dml042", "HU"},
1:d57bbd3:     {"dml043", "HU"},
1:d57bbd3:     {"dml047", "HU"},
1:d57bbd3:     {"dml056", "HU"},
1:d57bbd3:     {"dml065", "HU"},
1:d57bbd3:     {"dml076", "HU"},
1:d57bbd3:     {"sdl012", "HU"},
1:d57bbd3:     {"dml029", "HU"},
1:d57bbd3:     {"yts796", "CTS1"}, 
1:d57bbd3:     {"dml075", "HU"},
1:d57bbd3:     {"dml024", "HU"},
1:d57bbd3:     {"dml070", "HU"},
1:d57bbd3:     {"dml147", "FLATER"},
1:d57bbd3:     {"dml009", "HU"},
1:d57bbd3:     {"dml008", "HU"},
1:d57bbd3:     {"dml014", "HU"},
1:d57bbd3:     {"dml016", "SULLIVAN1"},
1:d57bbd3:     {"dml021", "HU"},
1:d57bbd3:     {"dml034", "HU"},
1:d57bbd3:     {"dml023", "HU"},
1:d57bbd3:     {"dml026", "HU"},
1:d57bbd3:     {"dml033", "HU"},
1:d57bbd3:     {"dml039", "HU"},
1:d57bbd3:     {"dml050", "HU"},
1:d57bbd3:     {"dml052", "HU"},
1:d57bbd3:     {"dml053", "HU"},
1:d57bbd3:     {"dml055", "HU"},
1:d57bbd3:     {"dml057", "HU"},
1:d57bbd3:     {"dml058", "HU"},
1:d57bbd3:     {"dml155", "FLATER"},
1:d57bbd3:     {"xts729", "CTS1"},
1:d57bbd3:     {"xts730", "CTS1"},
1:d57bbd3:     {"yts797", "CTS1"},
1:d57bbd3:     {"yts798", "CTS1"},
1:d57bbd3:     {"dml069", "HU"},
1:d57bbd3:     {"dml080", "SCHANZLE"},
1:d57bbd3:     {"dml081", "SCHANZLE"},
1:d57bbd3:     {"dml083", "SCHANZLE"},
1:d57bbd3:     {"dml085", "SCHANZLE"},
1:d57bbd3:     {"dml132", "FLATER"},
1:d57bbd3:     {"dml099", "FLATER"},
1:d57bbd3:     {"dml049", "HU"},
1:d57bbd3:     {"dml173", "FLATER"},
1:d57bbd3:     {"dml174", "FLATER"},
1:d57bbd3:     {"dml179", "FLATER"},
1:d57bbd3:     {"yts812", "CTS1"},
1:d57bbd3:     {"dml001", "HU"},
1:d57bbd3:     {"dml004", "HU"},
1:d57bbd3:     {"dml035", "HU"},
1:d57bbd3:     {"dml046", "HU"},
1:d57bbd3:     {"dml060", "HU"},
1:d57bbd3:     {"dml068", "HU"},
1:d57bbd3:     {"yts799", "CTS1"},
1:d57bbd3:     {"dml001", "HU"},
1:d57bbd3:     {"dml079", "HU"},
1:d57bbd3:     {"dml165", "FLATER"},
1:d57bbd3:     {"dml104", "FLATER"},
1:d57bbd3:     {"dml112", "FLATER"},
1:d57bbd3:     {"dml148", "FLATER"},
1:d57bbd3:     {"dml019", "HU"},
1:d57bbd3:     {"dml149", "FLATER"},
1:d57bbd3:     {"dml168", "FLATER"},
1:d57bbd3:     {"dml170", "FLATER"},
1:d57bbd3:     {"xts752", "CTS1"},
1:d57bbd3:     {"xts753", "CTS1"},
1:d57bbd3:     {"cdr002", "SUN"},
1:d57bbd3:     {"cdr003", "SUN"},
1:d57bbd3:     {"cdr004", "SUN"},
1:d57bbd3:     {"cdr005", "SUN"},
1:d57bbd3:     {"cdr006", "SUN"},
1:d57bbd3:     {"cdr007", "SUN"},
1:d57bbd3:     {"cdr027", "SUN"},
1:d57bbd3:     {"cdr030", "SUN"},
1:d57bbd3:     {"dml134", "FLATER"},
1:d57bbd3:     {"dml005", "HU"},
1:d57bbd3:     {"dml011", "HU"},
1:d57bbd3:     {"dml027", "HU"},
1:d57bbd3:     {"dml082", "SCHANZLE"},
1:d57bbd3:     {"dml091", "SCHANZLE"},
1:d57bbd3:     {"dml119", "FLATER"},
1:d57bbd3:     {"dml130", "FLATER"},
1:d57bbd3:     {"dml158", "HU"},
1:d57bbd3:     {"dml178", "FLATER"},
1:d57bbd3:     {"dml181", "FLATER"},
1:d57bbd3:     {"dml182", "FLATER"},
1:d57bbd3:     {"xts701", "CTS1"},
1:d57bbd3:     {"xts731", "CTS1"},
1:d57bbd3:     {"xts740", "CTS1"},
1:d57bbd3:     {"xts742", "CTS1"},
1:d57bbd3:     {"xts760", "CTS1"},
1:d57bbd3:     {"yts811", "CTS1"},
1:d57bbd3:     {"dml160", "FLATER"},
1:d57bbd3:     {"schema4", "SULLIVAN1"} 
1:d57bbd3:     };
1:d57bbd3: 
1:d57bbd3: 	/**
1:d57bbd3: 	 * Return the suite that runs the NIST SQL scripts.
1:d57bbd3: 	 */
1:d57bbd3: 	public static Test suite() {
1:1ae02c9:         BaseTestSuite suite = new BaseTestSuite("NIST");
1:d57bbd3:         
1:d57bbd3:         String suiteUser = null;
1:1ae02c9:         BaseTestSuite userSuite = null;
1:d57bbd3:         for (int i = 0; i < TESTS.length; i++) {
1:d57bbd3:             
1:d57bbd3:             String testScript = TESTS[i][0];
1:d57bbd3:             String testUser = TESTS[i][1];
1:d57bbd3:             
1:d57bbd3:             Test test = new NistScripts(testScript);
1:d57bbd3:             
1:d57bbd3:             if (testUser.equals(suiteUser))
1:d57bbd3:             {
1:d57bbd3:                 userSuite.addTest(test);
1:d57bbd3:                 continue;
1:d57bbd3:             }
1:d4ce3d1:             
1:d57bbd3:             // Add the new user suite with the change user decorator to
1:d57bbd3:             // the main suite but continue to add tests to the user suite.
1:1ae02c9:             userSuite = new BaseTestSuite("NIST user="+testUser);
1:64c254c:             String password = testUser.concat("ni8s4T");
1:d57bbd3:             suite.addTest(
1:d57bbd3:                     TestConfiguration.changeUserDecorator(userSuite, testUser, password));
1:d57bbd3:             suiteUser = testUser;
1:d57bbd3:             
1:d57bbd3:             userSuite.addTest(test);
1:d57bbd3:         }
1:d57bbd3:         
1:64c254c:         Test test = getIJConfig(suite);
1:64c254c:         
1:64c254c:         // Setup user authentication
1:64c254c:         test = DatabasePropertyTestSetup.builtinAuthentication(test,
1:674c2a4:                 new String[] {"APP", "HU","FLATER","SUN","CTS1","SULLIVAN1","SCHANZLE"},
1:64c254c:                 "ni8s4T");
1:64c254c:         
1:d4ce3d1:         // Lock timeout settings that were set for the old harness when
1:d4ce3d1:         // running nist.
1:64c254c:         test = DatabasePropertyTestSetup.setLockTimeouts(test, 2, 4);
1:64c254c:         
1:64c254c:         return new CleanDatabaseTestSetup(test);
1:d57bbd3:     }
1:d4ce3d1:     
1:d57bbd3: 	/*
1:e785359: 	 * A single JUnit test that runs a single Nist SQL script.
1:d57bbd3: 	 */
1:d57bbd3: 	private NistScripts(String nistScript){
1:d57bbd3: 		super(nistScript);
1:d57bbd3: 	}
1:d57bbd3: }
============================================================================
author:Dag H. Wanvik
-------------------------------------------------------------------------------
commit:1ae02c9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.BaseTestSuite;
/////////////////////////////////////////////////////////////////////////
1:         BaseTestSuite suite = new BaseTestSuite("NIST");
1:         BaseTestSuite userSuite = null;
/////////////////////////////////////////////////////////////////////////
1:             userSuite = new BaseTestSuite("NIST user="+testUser);
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:674c2a4
/////////////////////////////////////////////////////////////////////////
1:                 new String[] {"APP", "HU","FLATER","SUN","CTS1","SULLIVAN1","SCHANZLE"},
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:64c254c
/////////////////////////////////////////////////////////////////////////
1:             String password = testUser.concat("ni8s4T");
/////////////////////////////////////////////////////////////////////////
1:         Test test = getIJConfig(suite);
1:         
1:         // Setup user authentication
1:         test = DatabasePropertyTestSetup.builtinAuthentication(test,
0:                 new String[] {"HU","FLATER","SUN","CTS1","SULLIVAN1","SCHANZLE"},
1:                 "ni8s4T");
1:         
1:         test = DatabasePropertyTestSetup.setLockTimeouts(test, 2, 4);
1:         
1:         return new CleanDatabaseTestSetup(test);
commit:d4ce3d1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.derbyTesting.junit.DatabasePropertyTestSetup;
/////////////////////////////////////////////////////////////////////////
1:         // Lock timeout settings that were set for the old harness when
1:         // running nist.
1:  
0:         return new CleanDatabaseTestSetup(
0:            DatabasePropertyTestSetup.setLockTimeouts(getIJConfig(suite), 2, 4));
1: 
commit:e785359
/////////////////////////////////////////////////////////////////////////
0:         TestSuite suite = new TestSuite("NIST");
/////////////////////////////////////////////////////////////////////////
0:             userSuite = new TestSuite("NIST user="+testUser); 
/////////////////////////////////////////////////////////////////////////
1: 	 * A single JUnit test that runs a single Nist SQL script.
commit:d57bbd3
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Derby - Class org.apache.derbyTesting.functionTests.tests.nist.NistScripts
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, 
1:  * software distributed under the License is distributed on an 
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, 
1:  * either express or implied. See the License for the specific 
1:  * language governing permissions and limitations under the License.
1:  */
1: package org.apache.derbyTesting.functionTests.tests.nist;
1: 
1: import junit.framework.Test;
0: import junit.framework.TestSuite;
1: 
1: import org.apache.derbyTesting.functionTests.util.ScriptTestCase;
1: import org.apache.derbyTesting.junit.CleanDatabaseTestSetup;
1: import org.apache.derbyTesting.junit.TestConfiguration;
1: 
1: /**
1:  * Run the NIST scripts as a single suite.
1:  *
1:  */
1: public final class NistScripts extends ScriptTestCase {
1: 
1:     /**
1:      * The complete set of NIST scripts for Derby.
1:      * First element of array is the script name,
1:      * second element is the user name for the connection.
1:      */  
1:     private static final String[][] TESTS = {
1:     {"schema1", "HU"},
1:     { "basetab", "HU"},
1:     { "schema5", "FLATER"},
1:     { "schema8", "SUN"},
1:     { "temp_schem10", "HU"},
1:     { "temp_cts5sch2", "HU"},
1:     { "temp_cts5tab", "CTS1"},
1:     { "flattab", "FLATER"},
1:     { "dml012", "HU"},
1:     { "dml013", "HU"},
1:     { "dml018", "HU"},
1:     { "dml022", "HU"},
1:     {"dml025", "HU"},
1:     {"dml044", "HU"},
1:     {"dml045", "HU"},
1:     {"dml051", "HU"},
1:     {"dml059", "HU"},
1:     {"dml061", "HU"},
1:     {"dml073", "HU"},
1:     {"dml087", "FLATER"},
1:     {"dml090", "HU"},
1:     {"dml106", "FLATER"},
1:     {"dml108", "FLATER"},
1:     {"dml114", "FLATER"},
1:     {"dml141", "FLATER"},
1:     {"dml144", "FLATER"},
1:     {"dml162", "FLATER"},
1:     {"dml177", "FLATER"},
1:     {"dml010", "HU"},
1:     {"dml015", "HU"},
1:     {"dml020", "HU"},
1:     {"dml037", "HU"},
1:     {"dml038", "HU"},
1:     {"dml042", "HU"},
1:     {"dml043", "HU"},
1:     {"dml047", "HU"},
1:     {"dml056", "HU"},
1:     {"dml065", "HU"},
1:     {"dml076", "HU"},
1:     {"sdl012", "HU"},
1:     {"dml029", "HU"},
1:     {"yts796", "CTS1"}, 
1:     {"dml075", "HU"},
1:     {"dml024", "HU"},
1:     {"dml070", "HU"},
1:     {"dml147", "FLATER"},
1:     {"dml009", "HU"},
1:     {"dml008", "HU"},
1:     {"dml014", "HU"},
1:     {"dml016", "SULLIVAN1"},
1:     {"dml021", "HU"},
1:     {"dml034", "HU"},
1:     {"dml023", "HU"},
1:     {"dml026", "HU"},
1:     {"dml033", "HU"},
1:     {"dml039", "HU"},
1:     {"dml050", "HU"},
1:     {"dml052", "HU"},
1:     {"dml053", "HU"},
1:     {"dml055", "HU"},
1:     {"dml057", "HU"},
1:     {"dml058", "HU"},
1:     {"dml155", "FLATER"},
1:     {"xts729", "CTS1"},
1:     {"xts730", "CTS1"},
1:     {"yts797", "CTS1"},
1:     {"yts798", "CTS1"},
1:     {"dml069", "HU"},
1:     {"dml080", "SCHANZLE"},
1:     {"dml081", "SCHANZLE"},
1:     {"dml083", "SCHANZLE"},
1:     {"dml085", "SCHANZLE"},
1:     {"dml132", "FLATER"},
1:     {"dml099", "FLATER"},
1:     {"dml049", "HU"},
1:     {"dml173", "FLATER"},
1:     {"dml174", "FLATER"},
1:     {"dml179", "FLATER"},
1:     {"yts812", "CTS1"},
1:     {"dml001", "HU"},
1:     {"dml004", "HU"},
1:     {"dml035", "HU"},
1:     {"dml046", "HU"},
1:     {"dml060", "HU"},
1:     {"dml068", "HU"},
1:     {"yts799", "CTS1"},
1:     {"dml001", "HU"},
1:     {"dml079", "HU"},
1:     {"dml165", "FLATER"},
1:     {"dml104", "FLATER"},
1:     {"dml112", "FLATER"},
1:     {"dml148", "FLATER"},
1:     {"dml019", "HU"},
1:     {"dml149", "FLATER"},
1:     {"dml168", "FLATER"},
1:     {"dml170", "FLATER"},
1:     {"xts752", "CTS1"},
1:     {"xts753", "CTS1"},
1:     {"cdr002", "SUN"},
1:     {"cdr003", "SUN"},
1:     {"cdr004", "SUN"},
1:     {"cdr005", "SUN"},
1:     {"cdr006", "SUN"},
1:     {"cdr007", "SUN"},
1:     {"cdr027", "SUN"},
1:     {"cdr030", "SUN"},
1:     {"dml134", "FLATER"},
1:     {"dml005", "HU"},
1:     {"dml011", "HU"},
1:     {"dml027", "HU"},
1:     {"dml082", "SCHANZLE"},
1:     {"dml091", "SCHANZLE"},
1:     {"dml119", "FLATER"},
1:     {"dml130", "FLATER"},
1:     {"dml158", "HU"},
1:     {"dml178", "FLATER"},
1:     {"dml181", "FLATER"},
1:     {"dml182", "FLATER"},
1:     {"xts701", "CTS1"},
1:     {"xts731", "CTS1"},
1:     {"xts740", "CTS1"},
1:     {"xts742", "CTS1"},
1:     {"xts760", "CTS1"},
1:     {"yts811", "CTS1"},
1:     {"dml160", "FLATER"},
1:     {"schema4", "SULLIVAN1"} 
1:     };
1: 
1: 	/**
1: 	 * Return the suite that runs the NIST SQL scripts.
1: 	 */
1: 	public static Test suite() {
0:         TestSuite suite = new TestSuite();
1:         
1:         String suiteUser = null;
0:         TestSuite userSuite = null; 
1:         for (int i = 0; i < TESTS.length; i++) {
1:             
1:             String testScript = TESTS[i][0];
1:             String testUser = TESTS[i][1];
1:             
1:             Test test = new NistScripts(testScript);
1:             
1:             if (testUser.equals(suiteUser))
1:             {
1:                 userSuite.addTest(test);
1:                 continue;
1:             }
1:             
1:             // Add the new user suite with the change user decorator to
1:             // the main suite but continue to add tests to the user suite.
0:             userSuite = new TestSuite(); 
0:             String password = testUser.concat("PWD");
1:             suite.addTest(
1:                     TestConfiguration.changeUserDecorator(userSuite, testUser, password));
1:             suiteUser = testUser;
1:             
1:             userSuite.addTest(test);
1:         }
1:         
0:        return new CleanDatabaseTestSetup(getIJConfig(suite));
1:     }
1:     
1: 	/*
0: 	 * A single JUnit test that runs a single language SQL script.
1: 	 */
1: 	private NistScripts(String nistScript){
1: 		super(nistScript);
1: 	}
1: }
============================================================================