1:eac0369: /*
1:7ecc1f2: 
1:7ecc1f2:    Derby - Class org.apache.derby.iapi.services.diag.DiagnosticableGeneric
1:7ecc1f2: 
1:6baf18b:    Licensed to the Apache Software Foundation (ASF) under one or more
1:6baf18b:    contributor license agreements.  See the NOTICE file distributed with
1:6baf18b:    this work for additional information regarding copyright ownership.
1:6baf18b:    The ASF licenses this file to you under the Apache License, Version 2.0
1:6baf18b:    (the "License"); you may not use this file except in compliance with
1:6baf18b:    the License.  You may obtain a copy of the License at
1:7ecc1f2: 
1:7ecc1f2:       http://www.apache.org/licenses/LICENSE-2.0
1:7ecc1f2: 
1:7ecc1f2:    Unless required by applicable law or agreed to in writing, software
1:7ecc1f2:    distributed under the License is distributed on an "AS IS" BASIS,
1:7ecc1f2:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7ecc1f2:    See the License for the specific language governing permissions and
1:7ecc1f2:    limitations under the License.
2:eac0369: 
2:eac0369:  */
1:eac0369: 
1:eac0369: package org.apache.derby.iapi.services.diag;
1:eac0369: 
1:eac0369: import org.apache.derby.iapi.error.StandardException;
1:eac0369: 
1:eac0369: import java.util.Properties;
1:eac0369: 
2:eac0369: /**
1:eac0369: 
1:eac0369:   The Diagnosticable class implements the Diagnostics protocol, and can
1:eac0369:   be used as the parent class for all other Diagnosticable objects.
1:eac0369: 
1:eac0369: **/
1:eac0369: 
1:eac0369: public class DiagnosticableGeneric implements Diagnosticable
1:eac0369: {
1:eac0369: 	/*
1:eac0369: 	** Fields of Diagnosticable
1:eac0369: 	*/
1:eac0369:     protected Object diag_object = null;
1:eac0369: 
1:eac0369:    
1:eac0369:     public DiagnosticableGeneric()
1:eac0369:     {
1:eac0369:     }
1:eac0369: 
1:eac0369: 	/*
1:eac0369: 	** Methods of Diagnosticable
1:eac0369: 	*/
1:eac0369:     public void init(Object obj)
1:eac0369:     {
1:eac0369:         // This is the pointer to the instance of the object to work on.
1:eac0369:         this.diag_object = obj;
1:eac0369:     }
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * Default implementation of diagnostic on the object.
1:eac0369:      * <p>
1:eac0369:      * This routine returns a string with whatever diagnostic information
1:eac0369:      * you would like to provide about this object.
1:eac0369:      * <p>
1:eac0369:      * This routine should be overriden by a real implementation of the
1:eac0369:      * diagnostic information you would like to provide.
1:eac0369:      * <p>
1:eac0369:      *
1:eac0369: 	 * @return A string with diagnostic information about the object.
1:eac0369:      *
1:eac0369: 	 * @exception  StandardException  Standard exception policy.
1:eac0369:      **/
1:eac0369:     public String diag()
1:eac0369:         throws StandardException
1:eac0369:     {
1:eac0369:         return(diag_object.toString());
1:eac0369:     }
1:eac0369: 
1:eac0369:     /**
1:eac0369:      * Default implementation of detail diagnostic on the object.
1:eac0369:      * <p>
1:eac0369:      * This routine should be overriden if there is detail diagnostics to
1:eac0369:      * be provided by a real implementation.
1:eac0369:      * <p>
1:eac0369:      *
1:eac0369: 	 * @exception  StandardException  Standard exception policy.
1:eac0369:      **/
1:eac0369:     public void diag_detail(Properties prop)
1:eac0369:         throws StandardException
1:eac0369:     {
1:eac0369:         return;
1:eac0369:     }
1:eac0369: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:6baf18b
/////////////////////////////////////////////////////////////////////////
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
author:Oyvind Bakksjo
-------------------------------------------------------------------------------
commit:aaea357
author:Daniel John Debrunner
-------------------------------------------------------------------------------
commit:7ecc1f2
/////////////////////////////////////////////////////////////////////////
1:    Derby - Class org.apache.derby.iapi.services.diag.DiagnosticableGeneric
1: 
0:    Copyright 1998, 2004 The Apache Software Foundation or its licensors, as applicable.
1: 
0:    Licensed under the Apache License, Version 2.0 (the "License");
0:    you may not use this file except in compliance with the License.
0:    You may obtain a copy of the License at
1: 
1:       http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
commit:5d24b1a
/////////////////////////////////////////////////////////////////////////
commit:eac0369
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.diag
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
1: 
1:  */
1: 
1: package org.apache.derby.iapi.services.diag;
1: 
1: import org.apache.derby.iapi.error.StandardException;
1: 
1: import java.util.Properties;
1: 
1: /**
1: 
1:   The Diagnosticable class implements the Diagnostics protocol, and can
1:   be used as the parent class for all other Diagnosticable objects.
1: 
1: **/
1: 
1: public class DiagnosticableGeneric implements Diagnosticable
1: {
1: 	/**
0: 		IBM Copyright &copy notice.
1: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
1: 	/*
1: 	** Fields of Diagnosticable
1: 	*/
1:     protected Object diag_object = null;
1: 
1:    
1:     public DiagnosticableGeneric()
1:     {
1:     }
1: 
1: 	/*
1: 	** Methods of Diagnosticable
1: 	*/
1:     public void init(Object obj)
1:     {
1:         // This is the pointer to the instance of the object to work on.
1:         this.diag_object = obj;
1:     }
1: 
1:     /**
1:      * Default implementation of diagnostic on the object.
1:      * <p>
1:      * This routine returns a string with whatever diagnostic information
1:      * you would like to provide about this object.
1:      * <p>
1:      * This routine should be overriden by a real implementation of the
1:      * diagnostic information you would like to provide.
1:      * <p>
1:      *
1: 	 * @return A string with diagnostic information about the object.
1:      *
1: 	 * @exception  StandardException  Standard exception policy.
1:      **/
1:     public String diag()
1:         throws StandardException
1:     {
1:         return(diag_object.toString());
1:     }
1: 
1:     /**
1:      * Default implementation of detail diagnostic on the object.
1:      * <p>
1:      * This routine should be overriden if there is detail diagnostics to
1:      * be provided by a real implementation.
1:      * <p>
1:      *
1: 	 * @exception  StandardException  Standard exception policy.
1:      **/
1:     public void diag_detail(Properties prop)
1:         throws StandardException
1:     {
1:         return;
1:     }
1: }
author:Ken Coar
-------------------------------------------------------------------------------
commit:95e7b46
/////////////////////////////////////////////////////////////////////////
0: /*
0: 
0:    Licensed Materials - Property of IBM
0:    Cloudscape - Package org.apache.derby.iapi.services.diag
0:    (C) Copyright IBM Corp. 1998, 2004. All Rights Reserved.
0:    US Government Users Restricted Rights - Use, duplication or
0:    disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
0: 
0:  */
0: 
0: package org.apache.derby.iapi.services.diag;
0: 
0: import org.apache.derby.iapi.error.StandardException;
0: 
0: import java.util.Properties;
0: 
0: /**
0: 
0:   The Diagnosticable class implements the Diagnostics protocol, and can
0:   be used as the parent class for all other Diagnosticable objects.
0: 
0: **/
0: 
0: public class DiagnosticableGeneric implements Diagnosticable
0: {
0: 	/**
0: 		IBM Copyright &copy notice.
0: 	*/
0: 	public static final String copyrightNotice = org.apache.derby.iapi.reference.Copyright.SHORT_1998_2004;
0: 	/*
0: 	** Fields of Diagnosticable
0: 	*/
0:     protected Object diag_object = null;
0: 
0:    
0:     public DiagnosticableGeneric()
0:     {
0:     }
0: 
0: 	/*
0: 	** Methods of Diagnosticable
0: 	*/
0:     public void init(Object obj)
0:     {
0:         // This is the pointer to the instance of the object to work on.
0:         this.diag_object = obj;
0:     }
0: 
0:     /**
0:      * Default implementation of diagnostic on the object.
0:      * <p>
0:      * This routine returns a string with whatever diagnostic information
0:      * you would like to provide about this object.
0:      * <p>
0:      * This routine should be overriden by a real implementation of the
0:      * diagnostic information you would like to provide.
0:      * <p>
0:      *
0: 	 * @return A string with diagnostic information about the object.
0:      *
0: 	 * @exception  StandardException  Standard exception policy.
0:      **/
0:     public String diag()
0:         throws StandardException
0:     {
0:         return(diag_object.toString());
0:     }
0: 
0:     /**
0:      * Default implementation of detail diagnostic on the object.
0:      * <p>
0:      * This routine should be overriden if there is detail diagnostics to
0:      * be provided by a real implementation.
0:      * <p>
0:      *
0: 	 * @exception  StandardException  Standard exception policy.
0:      **/
0:     public void diag_detail(Properties prop)
0:         throws StandardException
0:     {
0:         return;
0:     }
0: }
============================================================================