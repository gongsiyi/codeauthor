1:25959e3: /*
1:25959e3: 
1:25959e3:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.OptionalToolExample
1:25959e3: 
1:25959e3:    Licensed to the Apache Software Foundation (ASF) under one or more
1:25959e3:    contributor license agreements.  See the NOTICE file distributed with
1:25959e3:    this work for additional information regarding copyright ownership.
1:25959e3:    The ASF licenses this file to you under the Apache License, Version 2.0
1:25959e3:    (the "License"); you may not use this file except in compliance with
1:25959e3:    the License.  You may obtain a copy of the License at
1:25959e3: 
1:25959e3:      http://www.apache.org/licenses/LICENSE-2.0
1:25959e3: 
1:25959e3:    Unless required by applicable law or agreed to in writing, software
1:25959e3:    distributed under the License is distributed on an "AS IS" BASIS,
1:25959e3:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:25959e3:    See the License for the specific language governing permissions and
1:25959e3:    limitations under the License.
1:25959e3: 
1:25959e3:  */
1:25959e3: 
1:25959e3: package org.apache.derbyTesting.functionTests.tests.lang;
1:25959e3: 
1:25959e3: import org.apache.derby.iapi.sql.dictionary.OptionalTool;
1:25959e3: 
1:25959e3: import java.sql.Connection;
1:25959e3: import java.sql.DriverManager;
1:25959e3: import java.sql.SQLException;
1:25959e3: 
1:25959e3: /**
1:25959e3:  * <p>
1:25959e3:  * Simple OptionalTool.
1:25959e3:  * </p>
1:25959e3:  */
1:25959e3: public class OptionalToolExample implements OptionalTool
1:25959e3: {
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3:     //
1:25959e3:     // CONSTANTS
1:25959e3:     //
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3: 
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3:     //
1:25959e3:     // STATE
1:25959e3:     //
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3: 
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3:     //
1:25959e3:     // CONSTRUCTOR
1:25959e3:     //
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3: 
1:25959e3:     /** 0-arg constructor required by the OptionalTool contract */
1:25959e3:     public  OptionalToolExample() {}
1:25959e3: 
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3:     //
1:25959e3:     // OptionalTool BEHAVIOR
1:25959e3:     //
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3: 
1:25959e3:     public  void    loadTool( String... configurationParameters )
1:25959e3:         throws SQLException
1:25959e3:     { loadToolMinion( "toString" ); }
1:25959e3: 
1:25959e3:     public  void    unloadTool( String... configurationParameters )
1:25959e3:         throws SQLException
1:25959e3:     { unloadToolMinion( "toString" ); }
1:25959e3:     
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3:     //
1:25959e3:     // MINIONS
1:25959e3:     //
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3: 
1:25959e3:     protected   void    loadToolMinion( String functionName )
1:25959e3:         throws SQLException
1:25959e3:     {
1:25959e3:         getDerbyConnection().prepareStatement
1:25959e3:             (
1:25959e3:              "create function " + functionName + "( intVal int ) returns varchar( 32672 )\n" +
1:25959e3:              "language java parameter style java no sql\n" +
1:25959e3:              "external name 'java.lang.Integer.toString'"
1:25959e3:              ).execute();
1:25959e3: 
1:25959e3:     }
1:25959e3:     
1:25959e3:     protected   void    unloadToolMinion( String functionName )
1:25959e3:         throws SQLException
1:25959e3:     {
1:25959e3:         getDerbyConnection().prepareStatement( "drop function " + functionName ).execute();
1:25959e3:     }
1:25959e3: 
1:25959e3:     private Connection  getDerbyConnection() throws SQLException
1:25959e3:     {
1:25959e3:         return DriverManager.getConnection( "jdbc:default:connection" );
1:25959e3:     }
1:25959e3: 
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3:     //
1:25959e3:     //  NESTED CLASS
1:25959e3:     //
1:25959e3:     ///////////////////////////////////////////////////////////////////////////////////
1:25959e3: 
1:25959e3:     public  static  final   class   VariableName    extends OptionalToolExample
1:25959e3:     {
1:25959e3:         public  void    loadTool( String... configurationParameters )
1:25959e3:             throws SQLException
1:25959e3:         { loadToolMinion( configurationParameters[ 0 ] ); }
1:25959e3: 
1:25959e3:         public  void    unloadTool( String... configurationParameters )
1:25959e3:             throws SQLException
1:25959e3:         { unloadToolMinion( configurationParameters[ 0 ]  ); }
1:25959e3:     }
1:25959e3: 
1:25959e3: }
============================================================================
author:Richard N. Hillegas
-------------------------------------------------------------------------------
commit:25959e3
/////////////////////////////////////////////////////////////////////////
1: /*
1: 
1:    Derby - Class org.apache.derbyTesting.functionTests.tests.lang.OptionalToolExample
1: 
1:    Licensed to the Apache Software Foundation (ASF) under one or more
1:    contributor license agreements.  See the NOTICE file distributed with
1:    this work for additional information regarding copyright ownership.
1:    The ASF licenses this file to you under the Apache License, Version 2.0
1:    (the "License"); you may not use this file except in compliance with
1:    the License.  You may obtain a copy of the License at
1: 
1:      http://www.apache.org/licenses/LICENSE-2.0
1: 
1:    Unless required by applicable law or agreed to in writing, software
1:    distributed under the License is distributed on an "AS IS" BASIS,
1:    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:    See the License for the specific language governing permissions and
1:    limitations under the License.
1: 
1:  */
1: 
1: package org.apache.derbyTesting.functionTests.tests.lang;
1: 
1: import org.apache.derby.iapi.sql.dictionary.OptionalTool;
1: 
1: import java.sql.Connection;
1: import java.sql.DriverManager;
1: import java.sql.SQLException;
1: 
1: /**
1:  * <p>
1:  * Simple OptionalTool.
1:  * </p>
1:  */
1: public class OptionalToolExample implements OptionalTool
1: {
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTANTS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // STATE
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // CONSTRUCTOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     /** 0-arg constructor required by the OptionalTool contract */
1:     public  OptionalToolExample() {}
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // OptionalTool BEHAVIOR
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public  void    loadTool( String... configurationParameters )
1:         throws SQLException
1:     { loadToolMinion( "toString" ); }
1: 
1:     public  void    unloadTool( String... configurationParameters )
1:         throws SQLException
1:     { unloadToolMinion( "toString" ); }
1:     
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     // MINIONS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     protected   void    loadToolMinion( String functionName )
1:         throws SQLException
1:     {
1:         getDerbyConnection().prepareStatement
1:             (
1:              "create function " + functionName + "( intVal int ) returns varchar( 32672 )\n" +
1:              "language java parameter style java no sql\n" +
1:              "external name 'java.lang.Integer.toString'"
1:              ).execute();
1: 
1:     }
1:     
1:     protected   void    unloadToolMinion( String functionName )
1:         throws SQLException
1:     {
1:         getDerbyConnection().prepareStatement( "drop function " + functionName ).execute();
1:     }
1: 
1:     private Connection  getDerbyConnection() throws SQLException
1:     {
1:         return DriverManager.getConnection( "jdbc:default:connection" );
1:     }
1: 
1:     ///////////////////////////////////////////////////////////////////////////////////
1:     //
1:     //  NESTED CLASS
1:     //
1:     ///////////////////////////////////////////////////////////////////////////////////
1: 
1:     public  static  final   class   VariableName    extends OptionalToolExample
1:     {
1:         public  void    loadTool( String... configurationParameters )
1:             throws SQLException
1:         { loadToolMinion( configurationParameters[ 0 ] ); }
1: 
1:         public  void    unloadTool( String... configurationParameters )
1:             throws SQLException
1:         { unloadToolMinion( configurationParameters[ 0 ]  ); }
1:     }
1: 
1: }
============================================================================