1:adab9e7: /**
1:adab9e7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:adab9e7:  * contributor license agreements.  See the NOTICE file distributed with
1:adab9e7:  * this work for additional information regarding copyright ownership.
1:adab9e7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:adab9e7:  * (the "License"); you may not use this file except in compliance with
1:adab9e7:  * the License.  You may obtain a copy of the License at
1:adab9e7:  *
1:adab9e7:  *     http://www.apache.org/licenses/LICENSE-2.0
1:adab9e7:  *
1:adab9e7:  * Unless required by applicable law or agreed to in writing, software
1:adab9e7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:adab9e7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:adab9e7:  * See the License for the specific language governing permissions and
1:adab9e7:  * limitations under the License.
1:adab9e7:  */
1:adab9e7: 
1:adab9e7: package org.apache.mahout.vectorizer.term;
1:adab9e7: 
1:adab9e7: import org.apache.hadoop.io.LongWritable;
1:adab9e7: import org.apache.hadoop.io.Text;
1:adab9e7: import org.apache.hadoop.mapreduce.Reducer;
1:adab9e7: 
1:adab9e7: import java.io.IOException;
1:adab9e7: 
1:adab9e7: /**
1:adab9e7:  * @see TermCountReducer
1:adab9e7:  */
1:adab9e7: public class TermCountCombiner extends Reducer<Text, LongWritable, Text, LongWritable> {
1:adab9e7: 
1:adab9e7:   @Override
1:adab9e7:   protected void reduce(Text key, Iterable<LongWritable> values, Context context)
1:adab9e7:     throws IOException, InterruptedException {
1:adab9e7:     long sum = 0;
1:adab9e7:     for (LongWritable value : values) {
1:adab9e7:       sum += value.get();
1:adab9e7:     }
1:adab9e7:     context.write(key, new LongWritable(sum));
1:adab9e7:   }
1:adab9e7: 
1:adab9e7: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:adab9e7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.vectorizer.term;
1: 
1: import org.apache.hadoop.io.LongWritable;
1: import org.apache.hadoop.io.Text;
1: import org.apache.hadoop.mapreduce.Reducer;
1: 
1: import java.io.IOException;
1: 
1: /**
1:  * @see TermCountReducer
1:  */
1: public class TermCountCombiner extends Reducer<Text, LongWritable, Text, LongWritable> {
1: 
1:   @Override
1:   protected void reduce(Text key, Iterable<LongWritable> values, Context context)
1:     throws IOException, InterruptedException {
1:     long sum = 0;
1:     for (LongWritable value : values) {
1:       sum += value.get();
1:     }
1:     context.write(key, new LongWritable(sum));
1:   }
1: 
1: }
============================================================================