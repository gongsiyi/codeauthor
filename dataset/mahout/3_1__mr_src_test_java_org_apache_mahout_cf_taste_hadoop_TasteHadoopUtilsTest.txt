1:6d8fbe2: /*
1:6d8fbe2:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6d8fbe2:  * contributor license agreements.  See the NOTICE file distributed with
1:6d8fbe2:  * this work for additional information regarding copyright ownership.
1:6d8fbe2:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6d8fbe2:  * (the "License"); you may not use this file except in compliance with
1:6d8fbe2:  * the License.  You may obtain a copy of the License at
1:6d8fbe2:  *
1:6d8fbe2:  *     http://www.apache.org/licenses/LICENSE-2.0
1:6d8fbe2:  *
1:6d8fbe2:  * Unless required by applicable law or agreed to in writing, software
1:6d8fbe2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6d8fbe2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6d8fbe2:  * See the License for the specific language governing permissions and
1:6d8fbe2:  * limitations under the License.
1:6d8fbe2:  */
1:6d8fbe2: 
1:6d8fbe2: package org.apache.mahout.cf.taste.hadoop;
1:6d8fbe2: 
1:6d8fbe2: import org.apache.mahout.cf.taste.impl.TasteTestCase;
1:6d8fbe2: import org.junit.Test;
1:6d8fbe2: 
1:6d8fbe2: /** <p>Tests {@link TasteHadoopUtils}.</p> */
1:6d8fbe2: public class TasteHadoopUtilsTest extends TasteTestCase {
1:6d8fbe2: 	
1:6d8fbe2:   @Test
1:6d8fbe2:   public void testWithinRange() {
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(0) >= 0);
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(0) < Integer.MAX_VALUE);
1:6d8fbe2: 
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(1) >= 0);
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(1) < Integer.MAX_VALUE);
1:6d8fbe2: 		
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(Long.MAX_VALUE) >= 0);
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(Long.MAX_VALUE) < Integer.MAX_VALUE);
1:6d8fbe2: 		
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(Integer.MAX_VALUE) >= 0);
1:6d8fbe2:     assertTrue(TasteHadoopUtils.idToIndex(Integer.MAX_VALUE) < Integer.MAX_VALUE);
1:6d8fbe2:   }
1:6d8fbe2: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:smarthi
-------------------------------------------------------------------------------
commit:6d8fbe2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.hadoop;
1: 
1: import org.apache.mahout.cf.taste.impl.TasteTestCase;
1: import org.junit.Test;
1: 
1: /** <p>Tests {@link TasteHadoopUtils}.</p> */
1: public class TasteHadoopUtilsTest extends TasteTestCase {
1: 	
1:   @Test
1:   public void testWithinRange() {
1:     assertTrue(TasteHadoopUtils.idToIndex(0) >= 0);
1:     assertTrue(TasteHadoopUtils.idToIndex(0) < Integer.MAX_VALUE);
1: 
1:     assertTrue(TasteHadoopUtils.idToIndex(1) >= 0);
1:     assertTrue(TasteHadoopUtils.idToIndex(1) < Integer.MAX_VALUE);
1: 		
1:     assertTrue(TasteHadoopUtils.idToIndex(Long.MAX_VALUE) >= 0);
1:     assertTrue(TasteHadoopUtils.idToIndex(Long.MAX_VALUE) < Integer.MAX_VALUE);
1: 		
1:     assertTrue(TasteHadoopUtils.idToIndex(Integer.MAX_VALUE) >= 0);
1:     assertTrue(TasteHadoopUtils.idToIndex(Integer.MAX_VALUE) < Integer.MAX_VALUE);
1:   }
1: }
============================================================================