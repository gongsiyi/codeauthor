1:8b6a26a: /*
1:8b6a26a:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8b6a26a:  * contributor license agreements.  See the NOTICE file distributed with
1:8b6a26a:  * this work for additional information regarding copyright ownership.
1:8b6a26a:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8b6a26a:  * (the "License"); you may not use this file except in compliance with
1:8b6a26a:  * the License.  You may obtain a copy of the License at
1:8b6a26a:  *
1:8b6a26a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8b6a26a:  *
1:8b6a26a:  * Unless required by applicable law or agreed to in writing, software
1:8b6a26a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8b6a26a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8b6a26a:  * See the License for the specific language governing permissions and
1:8b6a26a:  * limitations under the License.
1:8b6a26a:  */
1:8b6a26a: 
1:aebdfaf: package org.apache.mahout.math;
1:aebdfaf: 
1:aebdfaf: /**
1:aebdfaf:  * Marker interface for vectors that may cache their squared length.
1:aebdfaf:  */
1:aebdfaf: interface LengthCachingVector {
1:1e3f7ae:   /**
1:1e3f7ae:    * Gets the currently cached squared length or if there is none, recalculates
1:1e3f7ae:    * the value and returns that.
1:1e3f7ae:    * @return The sum of the squares of all elements in the vector.
1:1e3f7ae:    */
1:8b6a26a:   double getLengthSquared();
1:aebdfaf: 
1:aebdfaf:   /**
1:1e3f7ae:    * Invalidates the length cache.  This should be called by all mutators of the vector.
1:aebdfaf:    */
1:1e3f7ae:   void invalidateCachedLength();
1:aebdfaf: }
============================================================================
author:Ted Dunning
-------------------------------------------------------------------------------
commit:1e3f7ae
/////////////////////////////////////////////////////////////////////////
1:   /**
1:    * Gets the currently cached squared length or if there is none, recalculates
1:    * the value and returns that.
1:    * @return The sum of the squares of all elements in the vector.
1:    */
1:    * Invalidates the length cache.  This should be called by all mutators of the vector.
1:   void invalidateCachedLength();
commit:aebdfaf
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.math;
1: 
1: /**
1:  * Marker interface for vectors that may cache their squared length.
1:  */
1: interface LengthCachingVector {
0:   public double getLengthSquared();
1: 
1:   /**
0:    * This is a very dangerous method to call.  Passing in a wrong value can
0:    * completely screw up distance computations and normalization.
0:    * @param d2  The new value for the squared length cache.
1:    */
0:   public void setLengthSquared(double d2);
1: }
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:8b6a26a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1:   double getLengthSquared();
0:   void setLengthSquared(double d2);
============================================================================