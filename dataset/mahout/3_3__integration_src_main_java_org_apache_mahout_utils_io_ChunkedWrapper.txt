2:29a7f38: /**
1:29a7f38:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:29a7f38:  * contributor license agreements.  See the NOTICE file distributed with
1:29a7f38:  * this work for additional information regarding copyright ownership.
1:29a7f38:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:29a7f38:  * (the "License"); you may not use this file except in compliance with
1:29a7f38:  * the License.  You may obtain a copy of the License at
3:29a7f38:  *
1:29a7f38:  *     http://www.apache.org/licenses/LICENSE-2.0
1:29a7f38:  *
1:29a7f38:  * Unless required by applicable law or agreed to in writing, software
1:29a7f38:  * distributed under the License is distributed on an "AS IS" BASIS,
1:29a7f38:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:29a7f38:  * See the License for the specific language governing permissions and
1:29a7f38:  * limitations under the License.
1:29a7f38:  */
1:29a7f38: 
1:4194a28: package org.apache.mahout.utils.io;
1:29a7f38: 
1:29a7f38: import java.io.IOException;
1:29a7f38: 
1:d54c59b: /**
1:d54c59b:  * {@link ChunkedWriter} based implementation of the {@link WrappedWriter} interface.
1:d54c59b:  */
1:4194a28: public class ChunkedWrapper implements WrappedWriter {
1:4194a28: 
1:4194a28:   private final ChunkedWriter writer;
1:29a7f38: 
1:29a7f38:   public ChunkedWrapper(ChunkedWriter writer) {
1:29a7f38:     this.writer = writer;
1:29a7f38:   }
1:29a7f38: 
1:29a7f38:   @Override
1:29a7f38:   public void write(String key, String value) throws IOException {
1:29a7f38:     writer.write(key, value);
1:29a7f38:   }
1:29a7f38: 
1:29a7f38:   @Override
1:29a7f38:   public void close() throws IOException {
1:29a7f38:     writer.close();
1:29a7f38:   }
1:29a7f38: }
============================================================================
author:smarthi
-------------------------------------------------------------------------------
commit:d54c59b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * {@link ChunkedWriter} based implementation of the {@link WrappedWriter} interface.
1:  */
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:4194a28
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.utils.io;
1: public class ChunkedWrapper implements WrappedWriter {
1: 
1:   private final ChunkedWriter writer;
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:29a7f38
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.utils.io;
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: 
1: import java.io.IOException;
1: 
1: /**
1: *
1: *
0: **/
0: public class ChunkedWrapper extends WrappedWriter {
0:   ChunkedWriter writer;
1: 
1:   public ChunkedWrapper(ChunkedWriter writer) {
1:     this.writer = writer;
1:   }
1: 
1:   @Override
1:   public void write(String key, String value) throws IOException {
1:     writer.write(key, value);
1:   }
1: 
1:   @Override
1:   public void close() throws IOException {
1:     writer.close();
1:   }
1: }
============================================================================