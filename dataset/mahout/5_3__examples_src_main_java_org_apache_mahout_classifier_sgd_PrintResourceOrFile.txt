1:7aa6232: /*
1:7aa6232:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7aa6232:  * contributor license agreements.  See the NOTICE file distributed with
1:7aa6232:  * this work for additional information regarding copyright ownership.
1:7aa6232:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7aa6232:  * (the "License"); you may not use this file except in compliance with
1:7aa6232:  * the License.  You may obtain a copy of the License at
1:7aa6232:  *
1:7aa6232:  *     http://www.apache.org/licenses/LICENSE-2.0
1:7aa6232:  *
1:7aa6232:  * Unless required by applicable law or agreed to in writing, software
1:7aa6232:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7aa6232:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7aa6232:  * See the License for the specific language governing permissions and
1:7aa6232:  * limitations under the License.
1:7aa6232:  */
1:7aa6232: 
1:7aa6232: package org.apache.mahout.classifier.sgd;
1:7aa6232: 
1:69ba194: import com.google.common.base.Preconditions;
1:69ba194: 
1:7aa6232: import java.io.BufferedReader;
1:7aa6232: 
1:7aa6232: /**
1:7aa6232:  * Uses the same logic as TrainLogistic and RunLogistic for finding an input, but instead
1:7aa6232:  * of processing the input, this class just prints the input to standard out.
1:7aa6232:  */
1:3f1450a: public final class PrintResourceOrFile {
1:3f1450a: 
1:3f1450a:   private PrintResourceOrFile() {
1:3f1450a:   }
1:3f1450a: 
1:3f1450a:   public static void main(String[] args) throws Exception {
1:69ba194:     Preconditions.checkArgument(args.length == 1, "Must have a single argument that names a file or resource.");
1:4ef9d31:     try (BufferedReader in = TrainLogistic.open(args[0])){
1:69ba194:       String line;
1:69ba194:       while ((line = in.readLine()) != null) {
1:69ba194:         System.out.println(line);
1:69ba194:       }
2:7aa6232:     }
1:7aa6232:   }
1:7aa6232: }
============================================================================
author:Suneel Marthi
-------------------------------------------------------------------------------
commit:4ef9d31
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     try (BufferedReader in = TrainLogistic.open(args[0])){
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:31cb292
/////////////////////////////////////////////////////////////////////////
0:       Closeables.close(in, true);
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:d608a88
/////////////////////////////////////////////////////////////////////////
0: import com.google.common.io.Closeables;
/////////////////////////////////////////////////////////////////////////
0:       Closeables.closeQuietly(in);
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:69ba194
/////////////////////////////////////////////////////////////////////////
1: import com.google.common.base.Preconditions;
1: 
/////////////////////////////////////////////////////////////////////////
1:     Preconditions.checkArgument(args.length == 1, "Must have a single argument that names a file or resource.");
0:     try {
1:       String line;
1:       while ((line = in.readLine()) != null) {
1:         System.out.println(line);
1:       }
0:     } finally {
0:       in.close();
commit:61ae2e7
/////////////////////////////////////////////////////////////////////////
0:     BufferedReader in = TrainLogistic.open(args[0]);
commit:3f1450a
/////////////////////////////////////////////////////////////////////////
1: public final class PrintResourceOrFile {
1: 
1:   private PrintResourceOrFile() {
1:   }
1: 
1:   public static void main(String[] args) throws Exception {
author:Ted Dunning
-------------------------------------------------------------------------------
commit:7aa6232
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.classifier.sgd;
1: 
1: import java.io.BufferedReader;
0: import java.io.IOException;
1: 
1: /**
1:  * Uses the same logic as TrainLogistic and RunLogistic for finding an input, but instead
1:  * of processing the input, this class just prints the input to standard out.
1:  */
0: public class PrintResourceOrFile {
0:   public static void main(String[] args) throws IOException {
0:     if (args.length != 1) {
0:       throw new IllegalArgumentException("Must have a single argument that names a file or resource.");
1:     }
0:     BufferedReader in = TrainLogistic.InputOpener.open(args[0]);
0:     String line = in.readLine();
0:     while (line != null) {
0:       System.out.println(line);
0:       line = in.readLine();
1:     }
1:   }
1: }
commit:f4c8f73
commit:91456bb
============================================================================