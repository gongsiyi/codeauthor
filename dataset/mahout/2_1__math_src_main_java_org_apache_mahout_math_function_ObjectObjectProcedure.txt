1:35fa73f: /**
1:35fa73f:  * Licensed to the Apache Software Foundation (ASF) under one
1:35fa73f:  * or more contributor license agreements. See the NOTICE file
1:35fa73f:  * distributed with this work for additional information
1:35fa73f:  * regarding copyright ownership. The ASF licenses this file
1:35fa73f:  * to you under the Apache License, Version 2.0 (the
1:35fa73f:  * "License"); you may not use this file except in compliance
1:35fa73f:  * with the License. You may obtain a copy of the License at
1:35fa73f:  *
1:35fa73f:  * http://www.apache.org/licenses/LICENSE-2.0
1:35fa73f:  *
1:35fa73f:  * Unless required by applicable law or agreed to in writing,
1:35fa73f:  * software distributed under the License is distributed on an
1:35fa73f:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:35fa73f:  * KIND, either express or implied. See the License for the
1:35fa73f:  * specific language governing permissions and limitations
1:35fa73f:  * under the License.
1:35fa73f:  */
1:35fa73f: package org.apache.mahout.math.function;
1:35fa73f: 
1:35fa73f: /**
1:35fa73f:  * Interface that represents a procedure object: 
1:35fa73f:  * a procedure that takes two arguments and returns a 'continue' flag.
1:35fa73f:  */
1:35fa73f: public interface ObjectObjectProcedure<K,V> {
1:35fa73f: 
1:35fa73f:   /**
1:35fa73f:    * Applies a procedure to an argument. Optionally can return a boolean flag to inform the object calling the
1:35fa73f:    * procedure.
1:35fa73f:    *
1:35fa73f:    * <p>Example: forEach() methods often use procedure objects. To signal to a forEach() method whether iteration should
1:35fa73f:    * continue normally or terminate (because for example a matching element has been found), a procedure can return
1:35fa73f:    * <tt>false</tt> to indicate termination and <tt>true</tt> to indicate continuation.
1:35fa73f:    *
1:35fa73f:    * @param key key value passed to the procedure
1:35fa73f:    * @param value value value passed to the procedure.
1:35fa73f:    * @return a flag  to inform the object calling the procedure.
1:35fa73f:    */
1:35fa73f:   boolean apply(K key, V value);
1:35fa73f: }
============================================================================
author:Ted Dunning
-------------------------------------------------------------------------------
commit:35fa73f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements. See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership. The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License. You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied. See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.mahout.math.function;
1: 
1: /**
1:  * Interface that represents a procedure object: 
1:  * a procedure that takes two arguments and returns a 'continue' flag.
1:  */
1: public interface ObjectObjectProcedure<K,V> {
1: 
1:   /**
1:    * Applies a procedure to an argument. Optionally can return a boolean flag to inform the object calling the
1:    * procedure.
1:    *
1:    * <p>Example: forEach() methods often use procedure objects. To signal to a forEach() method whether iteration should
1:    * continue normally or terminate (because for example a matching element has been found), a procedure can return
1:    * <tt>false</tt> to indicate termination and <tt>true</tt> to indicate continuation.
1:    *
1:    * @param key key value passed to the procedure
1:    * @param value value value passed to the procedure.
1:    * @return a flag  to inform the object calling the procedure.
1:    */
1:   boolean apply(K key, V value);
1: }
author:Benson Margulies
-------------------------------------------------------------------------------
commit:ebf9a4d
/////////////////////////////////////////////////////////////////////////
commit:d7351cc
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements. See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership. The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License. You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied. See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: package org.apache.mahout.math.function;
0: 
0: /**
0:  * Interface that represents a procedure object: 
0:  * a procedure that takes two arguments and returns a 'continue' flag.
0:  */
0: public interface ObjectObjectProcedure<K,V> {
0: 
0:   /**
0:    * Applies a procedure to an argument. Optionally can return a boolean flag to inform the object calling the
0:    * procedure.
0:    *
0:    * <p>Example: forEach() methods often use procedure objects. To signal to a forEach() method whether iteration should
0:    * continue normally or terminate (because for example a matching element has been found), a procedure can return
0:    * <tt>false</tt> to indicate termination and <tt>true</tt> to indicate continuation.
0:    *
0:    * @param key key value passed to the procedure
0:    * @param value value value passed to the procedure.
0:    * @return a flag  to inform the object calling the procedure.
0:    */
0:   boolean apply(K key, V value);
0: }
============================================================================