1:287b72b: /**
1:287b72b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:287b72b:  * contributor license agreements.  See the NOTICE file distributed with
1:287b72b:  * this work for additional information regarding copyright ownership.
1:287b72b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:287b72b:  * (the "License"); you may not use this file except in compliance with
1:287b72b:  * the License.  You may obtain a copy of the License at
1:287b72b:  *
1:287b72b:  *     http://www.apache.org/licenses/LICENSE-2.0
1:287b72b:  *
1:287b72b:  * Unless required by applicable law or agreed to in writing, software
1:287b72b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:287b72b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:287b72b:  * See the License for the specific language governing permissions and
1:287b72b:  * limitations under the License.
1:287b72b:  */
5:287b72b: 
1:52ce412: package org.apache.mahout.classifier.df.mapreduce.partial;
1:df73dbc: 
1:287b72b: import java.util.Random;
1:287b72b: 
1:434cdff: import org.apache.mahout.common.MahoutTestCase;
1:8547de7: import org.apache.mahout.common.RandomUtils;
1:ff79ff4: import org.junit.Test;
1:1ffa3a4: @Deprecated
1:ff79ff4: public final class TreeIDTest extends MahoutTestCase {
1:ff79ff4: 
1:ff79ff4:   @Test
1:287b72b:   public void testTreeID() {
1:8547de7:     Random rng = RandomUtils.getRandom();
1:287b72b:     
1:ff79ff4:     for (int nloop = 0; nloop < 1000000; nloop++) {
1:287b72b:       int partition = Math.abs(rng.nextInt());
1:287b72b:       int treeId = rng.nextInt(TreeID.MAX_TREEID);
1:287b72b:       
1:287b72b:       TreeID t1 = new TreeID(partition, treeId);
1:287b72b:       
1:287b72b:       assertEquals(partition, t1.partition());
1:287b72b:       assertEquals(treeId, t1.treeId());
1:287b72b:       
1:287b72b:       TreeID t2 = new TreeID();
1:287b72b:       t2.set(partition, treeId);
1:287b72b: 
1:287b72b:       assertEquals(partition, t2.partition());
1:287b72b:       assertEquals(treeId, t2.treeId());
1:df73dbc:     }
2:287b72b:   }
1:287b72b: }
============================================================================
author:smarthi
-------------------------------------------------------------------------------
commit:1ffa3a4
/////////////////////////////////////////////////////////////////////////
1: @Deprecated
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:52ce412
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.classifier.df.mapreduce.partial;
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:ff79ff4
/////////////////////////////////////////////////////////////////////////
1: import org.junit.Test;
1: public final class TreeIDTest extends MahoutTestCase {
1: 
1:   @Test
1:     for (int nloop = 0; nloop < 1000000; nloop++) {
commit:434cdff
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.common.MahoutTestCase;
0: public class TreeIDTest extends MahoutTestCase {
commit:8547de7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.common.RandomUtils;
/////////////////////////////////////////////////////////////////////////
1:     Random rng = RandomUtils.getRandom();
author:Abdel Hakim Deneche
-------------------------------------------------------------------------------
commit:df73dbc
/////////////////////////////////////////////////////////////////////////
0:   @Override
0:   protected void setUp() throws Exception {
0:     super.setUp();
0:     RandomUtils.useTestSeed();
1:   }
1:                 
commit:287b72b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.mahout.df.mapreduce.partial;
1: 
1: import java.util.Random;
1: 
0: import org.apache.mahout.df.mapreduce.partial.TreeID;
1: 
0: import junit.framework.TestCase;
1: 
0: public class TreeIDTest extends TestCase {
1: 
1:   public void testTreeID() {
0:     int n = 1000000;
0:     Random rng = new Random();
1:     
0:     for (int nloop = 0; nloop < n; nloop++) {
1:       int partition = Math.abs(rng.nextInt());
1:       int treeId = rng.nextInt(TreeID.MAX_TREEID);
1:       
1:       TreeID t1 = new TreeID(partition, treeId);
1:       
1:       assertEquals(partition, t1.partition());
1:       assertEquals(treeId, t1.treeId());
1:       
1:       TreeID t2 = new TreeID();
1:       t2.set(partition, treeId);
1: 
1:       assertEquals(partition, t2.partition());
1:       assertEquals(treeId, t2.treeId());
1:     }
1:   }
1: }
============================================================================