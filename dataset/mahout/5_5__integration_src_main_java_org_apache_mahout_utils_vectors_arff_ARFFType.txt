1:758cc1b: /**
1:758cc1b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:758cc1b:  * contributor license agreements.  See the NOTICE file distributed with
1:758cc1b:  * this work for additional information regarding copyright ownership.
1:758cc1b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:758cc1b:  * (the "License"); you may not use this file except in compliance with
1:758cc1b:  * the License.  You may obtain a copy of the License at
1:758cc1b:  *
1:758cc1b:  *     http://www.apache.org/licenses/LICENSE-2.0
1:758cc1b:  *
1:758cc1b:  * Unless required by applicable law or agreed to in writing, software
1:758cc1b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:758cc1b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:758cc1b:  * See the License for the specific language governing permissions and
1:758cc1b:  * limitations under the License.
1:758cc1b:  */
1:758cc1b: 
1:ee4a261: package org.apache.mahout.utils.vectors.arff;
6:ee4a261: 
1:ee4a261: public enum ARFFType {
1:baa3a8c: 
1:baa3a8c:   NUMERIC("numeric"),
1:7dc7e09:   INTEGER("integer"),
1:7dc7e09:   REAL("real"),
1:baa3a8c:   NOMINAL("{"),
1:baa3a8c:   DATE("date"),
1:baa3a8c:   STRING("string");
1:233d93d:   
1:758cc1b:   private final String indicator;
1:baa3a8c:   
1:ee4a261:   ARFFType(String indicator) {
1:ee4a261:     this.indicator = indicator;
2:ee4a261:   }
1:233d93d:   
1:ee4a261:   public String getIndicator() {
1:ee4a261:     return indicator;
1:ee4a261:   }
1:233d93d:   
1:ee4a261:   public String getLabel(String line) {
1:baa3a8c:     int idx = line.lastIndexOf(indicator);
1:7b10d65:     return removeQuotes(line.substring(ARFFModel.ATTRIBUTE.length(), idx));
1:7b10d65:   }
1:7b10d65: 
1:7b10d65:   /**
1:7b10d65:    * Remove quotes and leading/trailing whitespace from a single or double quoted string
1:7b10d65:    * @param str quotes from
1:7b10d65:    * @return  A string without quotes
1:7b10d65:    */
1:7b10d65:   public static String removeQuotes(String str) {
1:7b10d65:     String cleaned = str;
1:7b10d65:     if (cleaned != null) {
1:6d16230:       cleaned = cleaned.trim();
1:6d16230:       boolean isQuoted = cleaned.length() > 1
1:6d16230:           && (cleaned.startsWith("\"") &&  cleaned.endsWith("\"")
1:6d16230:           || cleaned.startsWith("'") &&  cleaned.endsWith("'"));
1:6d16230:       if (isQuoted) {
1:6d16230:         cleaned = cleaned.substring(1, cleaned.length() - 1);
1:6d16230:       }
1:7b10d65:     }
1:7b10d65:     return cleaned;
1:7b10d65:   }
1:ee4a261: }
============================================================================
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:6d16230
/////////////////////////////////////////////////////////////////////////
1:       cleaned = cleaned.trim();
1:       boolean isQuoted = cleaned.length() > 1
1:           && (cleaned.startsWith("\"") &&  cleaned.endsWith("\"")
1:           || cleaned.startsWith("'") &&  cleaned.endsWith("'"));
1:       if (isQuoted) {
1:         cleaned = cleaned.substring(1, cleaned.length() - 1);
1:     }
commit:7b10d65
/////////////////////////////////////////////////////////////////////////
1:     return removeQuotes(line.substring(ARFFModel.ATTRIBUTE.length(), idx));
1:   }
1: 
1:   /**
1:    * Remove quotes and leading/trailing whitespace from a single or double quoted string
1:    * @param str quotes from
1:    * @return  A string without quotes
1:    */
1:   public static String removeQuotes(String str) {
1:     String cleaned = str;
1:     if (cleaned != null) {
0:         cleaned = cleaned.trim();
0:         boolean isQuoted = cleaned.length() > 1 &&
0:             (cleaned.startsWith("\"") &&  cleaned.endsWith("\"") ||
0:             cleaned.startsWith("'") &&  cleaned.endsWith("'"));
0:         if (isQuoted) {
0:           cleaned = cleaned.substring(1, cleaned.length() - 1);
1:         }
1:       }
1:     return cleaned;
author:Ted Dunning
-------------------------------------------------------------------------------
commit:7dc7e09
/////////////////////////////////////////////////////////////////////////
1:   INTEGER("integer"),
1:   REAL("real"),
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:baa3a8c
/////////////////////////////////////////////////////////////////////////
1: 
1:   NUMERIC("numeric"),
1:   NOMINAL("{"),
1:   DATE("date"),
1:   STRING("string");
1:   
/////////////////////////////////////////////////////////////////////////
1:     int idx = line.lastIndexOf(indicator);
0:     return line.substring(ARFFModel.ATTRIBUTE.length(), idx).trim();
commit:50fd693
commit:758cc1b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1:   private final String indicator;
/////////////////////////////////////////////////////////////////////////
author:Robin Anil
-------------------------------------------------------------------------------
commit:233d93d
/////////////////////////////////////////////////////////////////////////
1:   
1:   
1:   
0:       idx).trim();
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:20faad6
/////////////////////////////////////////////////////////////////////////
0:     int idx = line.indexOf(indicator);
0:     return line.substring(ARFFModel.ATTRIBUTE.length(),
0:             idx).trim();
commit:ee4a261
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.utils.vectors.arff;
1: 
1: public enum ARFFType {
0:   NUMERIC("numeric"), NOMINAL("{"), DATE("date"), STRING("string");
1: 
0:   private String indicator;
1:   ARFFType(String indicator) {
1:     this.indicator = indicator;
1:   }
1: 
1:   public String getIndicator() {
1:     return indicator;
1:   }
1: 
1:   
1: 
1:   public String getLabel(String line) {
0:     return line.substring(ARFFModel.ATTRIBUTE.length(), line.length() - indicator.length()).trim();
1:   }
1: }
============================================================================