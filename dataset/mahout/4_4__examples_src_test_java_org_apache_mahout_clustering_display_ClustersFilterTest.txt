1:b0ccf74: /*
1:b0ccf74:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b0ccf74:  * contributor license agreements.  See the NOTICE file distributed with
1:b0ccf74:  * this work for additional information regarding copyright ownership.
1:b0ccf74:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b0ccf74:  * (the "License"); you may not use this file except in compliance with
1:b0ccf74:  * the License.  You may obtain a copy of the License at
1:b0ccf74:  *
1:b0ccf74:  *     http://www.apache.org/licenses/LICENSE-2.0
1:b0ccf74:  *
1:b0ccf74:  * Unless required by applicable law or agreed to in writing, software
1:b0ccf74:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b0ccf74:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b0ccf74:  * See the License for the specific language governing permissions and
1:b0ccf74:  * limitations under the License.
1:b0ccf74:  */
1:b0ccf74: 
1:b0ccf74: package org.apache.mahout.clustering.display;
1:b0ccf74: 
1:b0ccf74: import org.apache.hadoop.conf.Configuration;
1:b0ccf74: import org.apache.hadoop.fs.Path;
1:b0ccf74: import org.apache.hadoop.fs.PathFilter;
1:b0ccf74: import org.apache.mahout.common.MahoutTestCase;
1:b0ccf74: import org.junit.Before;
1:b0ccf74: import org.junit.Test;
1:b0ccf74: 
1:b0ccf74: import java.io.IOException;
1:b0ccf74: 
1:b0ccf74: public class ClustersFilterTest extends MahoutTestCase {
1:b0ccf74: 
1:b0ccf74:   private Configuration configuration;
1:b0ccf74:   private Path output;
1:b0ccf74: 
1:b0ccf74:   @Override
1:b0ccf74:   @Before
1:b0ccf74:   public void setUp() throws Exception {
1:b0ccf74:     super.setUp();
1:921e201:     configuration = getConfiguration();
1:b0ccf74:     output = getTestTempDirPath();
1:b0ccf74:   }
1:b0ccf74: 
1:b0ccf74:   @Test
1:bdb1c48:   public void testAcceptNotFinal() throws Exception {
1:b0ccf74:     Path path0 = new Path(output, "clusters-0");
1:b0ccf74:     Path path1 = new Path(output, "clusters-1");
1:b0ccf74: 
1:b0ccf74:     path0.getFileSystem(configuration).createNewFile(path0);
1:b0ccf74:     path1.getFileSystem(configuration).createNewFile(path1);
1:b0ccf74: 
1:b0ccf74:     PathFilter clustersFilter = new ClustersFilter();
1:b0ccf74: 
1:3eba6f2:     assertTrue(clustersFilter.accept(path0));
1:3eba6f2:     assertTrue(clustersFilter.accept(path1));
1:b0ccf74:   }
1:b0ccf74: 
1:b0ccf74:   @Test
1:bdb1c48:   public void testAcceptFinalPath() throws IOException {
1:b0ccf74:     Path path0 = new Path(output, "clusters-0");
1:b0ccf74:     Path path1 = new Path(output, "clusters-1");
1:b0ccf74:     Path path2 = new Path(output, "clusters-2");
1:b0ccf74:     Path path3Final = new Path(output, "clusters-3-final");
1:b0ccf74: 
1:b0ccf74:     path0.getFileSystem(configuration).createNewFile(path0);
1:b0ccf74:     path1.getFileSystem(configuration).createNewFile(path1);
1:b0ccf74:     path2.getFileSystem(configuration).createNewFile(path2);
1:b0ccf74:     path3Final.getFileSystem(configuration).createNewFile(path3Final);
1:b0ccf74: 
1:b0ccf74:     PathFilter clustersFilter = new ClustersFilter();
1:b0ccf74: 
1:3eba6f2:     assertTrue(clustersFilter.accept(path0));
1:3eba6f2:     assertTrue(clustersFilter.accept(path1));
1:3eba6f2:     assertTrue(clustersFilter.accept(path2));
1:b0ccf74:     assertTrue(clustersFilter.accept(path3Final));
1:b0ccf74:   }
1:b0ccf74: }
============================================================================
author:sslavic
-------------------------------------------------------------------------------
commit:921e201
/////////////////////////////////////////////////////////////////////////
1:     configuration = getConfiguration();
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:bdb1c48
/////////////////////////////////////////////////////////////////////////
1:   public void testAcceptNotFinal() throws Exception {
/////////////////////////////////////////////////////////////////////////
1:   public void testAcceptFinalPath() throws IOException {
author:Jeff Eastman
-------------------------------------------------------------------------------
commit:3eba6f2
/////////////////////////////////////////////////////////////////////////
1:     assertTrue(clustersFilter.accept(path0));
1:     assertTrue(clustersFilter.accept(path1));
/////////////////////////////////////////////////////////////////////////
1:     assertTrue(clustersFilter.accept(path0));
1:     assertTrue(clustersFilter.accept(path1));
1:     assertTrue(clustersFilter.accept(path2));
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:b0ccf74
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.clustering.display;
1: 
1: import org.apache.hadoop.conf.Configuration;
1: import org.apache.hadoop.fs.Path;
1: import org.apache.hadoop.fs.PathFilter;
1: import org.apache.mahout.common.MahoutTestCase;
1: import org.junit.Before;
1: import org.junit.Test;
1: 
1: import java.io.IOException;
1: 
1: public class ClustersFilterTest extends MahoutTestCase {
1: 
1:   private Configuration configuration;
1:   private Path output;
1: 
1:   @Override
1:   @Before
1:   public void setUp() throws Exception {
1:     super.setUp();
0:     configuration = new Configuration();
1:     output = getTestTempDirPath();
1:   }
1: 
1:   @Test
0:   public void testAccept_notFinal() throws Exception {
1:     Path path0 = new Path(output, "clusters-0");
1:     Path path1 = new Path(output, "clusters-1");
1: 
1:     path0.getFileSystem(configuration).createNewFile(path0);
1:     path1.getFileSystem(configuration).createNewFile(path1);
1: 
1:     PathFilter clustersFilter = new ClustersFilter();
1: 
0:     assertFalse(clustersFilter.accept(path0));
0:     assertFalse(clustersFilter.accept(path1));
1:   }
1: 
1:   @Test
0:   public void testAccept_finalPath() throws IOException {
1:     Path path0 = new Path(output, "clusters-0");
1:     Path path1 = new Path(output, "clusters-1");
1:     Path path2 = new Path(output, "clusters-2");
1:     Path path3Final = new Path(output, "clusters-3-final");
1: 
1:     path0.getFileSystem(configuration).createNewFile(path0);
1:     path1.getFileSystem(configuration).createNewFile(path1);
1:     path2.getFileSystem(configuration).createNewFile(path2);
1:     path3Final.getFileSystem(configuration).createNewFile(path3Final);
1: 
1:     PathFilter clustersFilter = new ClustersFilter();
1: 
0:     assertFalse(clustersFilter.accept(path0));
0:     assertFalse(clustersFilter.accept(path1));
0:     assertFalse(clustersFilter.accept(path2));
1:     assertTrue(clustersFilter.accept(path3Final));
1:   }
1: }
============================================================================