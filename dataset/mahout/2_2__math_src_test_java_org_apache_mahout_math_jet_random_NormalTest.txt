1:0bff670: /*
1:0bff670:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:0bff670:  * contributor license agreements.  See the NOTICE file distributed with
1:0bff670:  * this work for additional information regarding copyright ownership.
1:0bff670:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:0bff670:  * (the "License"); you may not use this file except in compliance with
1:0bff670:  * the License.  You may obtain a copy of the License at
1:0bff670:  *
1:0bff670:  *     http://www.apache.org/licenses/LICENSE-2.0
1:0bff670:  *
1:0bff670:  * Unless required by applicable law or agreed to in writing, software
1:0bff670:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0bff670:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0bff670:  * See the License for the specific language governing permissions and
1:0bff670:  * limitations under the License.
2:0bff670:  */
2:0bff670: 
1:0bff670: package org.apache.mahout.math.jet.random;
1:0bff670: 
1:22726e8: import org.apache.mahout.common.RandomUtils;
1:ff79ff4: import org.apache.mahout.math.MahoutTestCase;
1:0bff670: import org.junit.Test;
1:0bff670: 
1:0bff670: import java.util.Random;
1:c0c8d9f: 
1:ff79ff4: public final class NormalTest extends MahoutTestCase {
1:0bff670: 
1:c0c8d9f:   private final double[] breaks =
1:c0c8d9f:       {-1.2815516, -0.8416212, -0.5244005, -0.2533471, 0.0000000, 0.2533471, 0.5244005, 0.8416212, 1.2815516};
1:c0c8d9f:   private final double[] quantiles = {0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9};
1:c0c8d9f: 
1:0bff670:   @Test
1:0bff670:   public void testCdf() {
1:1619a3f:     Random gen = RandomUtils.getRandom();
1:0bff670:     double offset = 0;
1:0bff670:     double scale = 1;
1:0bff670:     for (int k = 0; k < 20; k++) {
1:0bff670:       Normal dist = new Normal(offset, scale, null);
1:ff79ff4:       DistributionChecks.checkCdf(offset, scale, dist, breaks, quantiles);
1:0bff670:       offset = gen.nextGaussian();
1:0bff670:       scale = Math.exp(3 * gen.nextGaussian());
1:c0c8d9f:     }
2:0bff670:   }
1:0bff670: 
1:0bff670:   @Test
1:8396a27:   public void consistency() {
1:1619a3f:     Random gen = RandomUtils.getRandom();
1:0bff670:     double offset = 0;
1:0bff670:     double scale = 1;
1:c62fe14:     Normal dist = new Normal(offset, scale, RandomUtils.getRandom());
1:0bff670:     for (int k = 0; k < 20; k++) {
1:c62fe14:       dist.setState(offset, scale);
1:ff79ff4:       DistributionChecks.checkDistribution(dist, breaks, offset, scale, 10000);
1:0bff670:       offset = gen.nextGaussian();
1:0bff670:       scale = Math.exp(3 * gen.nextGaussian());
1:0bff670:     }
1:0bff670:   }
1:0bff670: 
1:0bff670:   @Test
1:ff79ff4:   public void testSetState() throws Exception {
1:22726e8:     Normal dist = new Normal(0, 1, RandomUtils.getRandom());
1:0bff670:     dist.setState(1.3, 5.9);
1:ff79ff4:     DistributionChecks.checkDistribution(dist, breaks, 1.3, 5.9, 10000);
1:0bff670:   }
1:0bff670: 
1:0bff670:   @Test
1:0bff670:   public void testToString() {
1:ff79ff4:     assertEquals("org.apache.mahout.math.jet.random.Normal(m=1.300000, sd=5.900000)",
1:ff79ff4:         new Normal(1.3, 5.9, null).toString());
1:0bff670:   }
1:0bff670: }
============================================================================
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:8396a27
/////////////////////////////////////////////////////////////////////////
1:   public void consistency() {
commit:85ec3a3
/////////////////////////////////////////////////////////////////////////
commit:58fd277
/////////////////////////////////////////////////////////////////////////
0:   public void consistency() throws Exception {
commit:1619a3f
/////////////////////////////////////////////////////////////////////////
1:     Random gen = RandomUtils.getRandom();
/////////////////////////////////////////////////////////////////////////
1:     Random gen = RandomUtils.getRandom();
commit:3f1450a
/////////////////////////////////////////////////////////////////////////
0:     Random gen = RandomUtils.getRandom(1L);
/////////////////////////////////////////////////////////////////////////
0:     Random gen = RandomUtils.getRandom(1L);
commit:ff79ff4
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.math.MahoutTestCase;
1: public final class NormalTest extends MahoutTestCase {
/////////////////////////////////////////////////////////////////////////
1:       DistributionChecks.checkCdf(offset, scale, dist, breaks, quantiles);
0:   public void consistency() throws Exception {
1:       DistributionChecks.checkDistribution(dist, breaks, offset, scale, 10000);
1:   public void testSetState() throws Exception {
1:     DistributionChecks.checkDistribution(dist, breaks, 1.3, 5.9, 10000);
1:     assertEquals("org.apache.mahout.math.jet.random.Normal(m=1.300000, sd=5.900000)",
1:         new Normal(1.3, 5.9, null).toString());
commit:c0c8d9f
/////////////////////////////////////////////////////////////////////////
0: import org.junit.Before;
1: 
1:   private final double[] breaks =
1:       {-1.2815516, -0.8416212, -0.5244005, -0.2533471, 0.0000000, 0.2533471, 0.5244005, 0.8416212, 1.2815516};
1:   private final double[] quantiles = {0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9};
1: 
0:   @Before
0:   public void setUp() {
0:     RandomUtils.useTestSeed();
1:   }
author:Ted Dunning
-------------------------------------------------------------------------------
commit:c62fe14
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.math.ConvergenceException;
0: import org.apache.commons.math.FunctionEvaluationException;
/////////////////////////////////////////////////////////////////////////
0:   public void consistency() throws ConvergenceException, FunctionEvaluationException {
1:     Normal dist = new Normal(offset, scale, RandomUtils.getRandom());
1:       dist.setState(offset, scale);
commit:d32f30a
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0: public class NormalTest extends DistributionChecks {
commit:22726e8
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.common.RandomUtils;
/////////////////////////////////////////////////////////////////////////
0:       Normal dist = new Normal(offset, scale, RandomUtils.getRandom());
/////////////////////////////////////////////////////////////////////////
1:     Normal dist = new Normal(0, 1, RandomUtils.getRandom());
commit:0bff670
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.math.jet.random;
1: 
0: import org.apache.commons.math.ConvergenceException;
0: import org.apache.commons.math.FunctionEvaluationException;
0: import org.apache.mahout.math.jet.random.engine.MersenneTwister;
0: import org.junit.Assert;
1: import org.junit.Test;
1: 
0: import java.util.Locale;
1: import java.util.Random;
1: 
0: /**
0:  * Created by IntelliJ IDEA. User: tdunning Date: Sep 1, 2010 Time: 9:09:44 AM To change this
0:  * template use File | Settings | File Templates.
1:  */
0: public class NormalTest extends DistributionTest {
0:   private double[] breaks = {-1.2815516, -0.8416212, -0.5244005, -0.2533471, 0.0000000, 0.2533471, 0.5244005, 0.8416212, 1.2815516};
0:   private double[] quantiles = {0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9};
1: 
1:   @Test
1:   public void testCdf() {
0:     Random gen = new Random(1);
1:     double offset = 0;
1:     double scale = 1;
1:     for (int k = 0; k < 20; k++) {
1:       Normal dist = new Normal(offset, scale, null);
0:       checkCdf(offset, scale, dist, breaks, quantiles);
1:       offset = gen.nextGaussian();
1:       scale = Math.exp(3 * gen.nextGaussian());
1:     }
1:   }
1: 
1:   @Test
0:   public void consistency() throws ConvergenceException, FunctionEvaluationException {
0:     Random gen = new Random(1);
1:     double offset = 0;
1:     double scale = 1;
1:     for (int k = 0; k < 20; k++) {
0:       Normal dist = new Normal(offset, scale, new MersenneTwister());
0:       checkDistribution(dist, breaks, offset, scale, 10000);
1:       offset = gen.nextGaussian();
1:       scale = Math.exp(3 * gen.nextGaussian());
1:     }
1:   }
1: 
1:   @Test
0:   public void testSetState() throws ConvergenceException, FunctionEvaluationException {
0:     Normal dist = new Normal(0, 1, new MersenneTwister());
1:     dist.setState(1.3, 5.9);
0:     checkDistribution(dist, breaks, 1.3, 5.9, 10000);
1:   }
1: 
1:   @Test
1:   public void testToString() {
0:     Locale d = Locale.getDefault();
0:     Locale.setDefault(Locale.GERMAN);
0:     Assert.assertEquals("org.apache.mahout.math.jet.random.Normal(m=1.300000, sd=5.900000)", new Normal(1.3, 5.9, null).toString());
0:     Locale.setDefault(d);
1:   }
1: }
============================================================================