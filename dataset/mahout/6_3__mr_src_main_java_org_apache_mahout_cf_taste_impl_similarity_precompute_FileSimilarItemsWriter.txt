1:1e898e7: /**
1:1e898e7:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1e898e7:  * contributor license agreements.  See the NOTICE file distributed with
1:1e898e7:  * this work for additional information regarding copyright ownership.
1:1e898e7:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1e898e7:  * (the "License"); you may not use this file except in compliance with
1:1e898e7:  * the License.  You may obtain a copy of the License at
1:1e898e7:  *
1:1e898e7:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1e898e7:  *
1:1e898e7:  * Unless required by applicable law or agreed to in writing, software
1:1e898e7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1e898e7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1e898e7:  * See the License for the specific language governing permissions and
1:1e898e7:  * limitations under the License.
1:1e898e7:  */
2:1e898e7: 
1:1e898e7: package org.apache.mahout.cf.taste.impl.similarity.precompute;
1:1e898e7: 
1:1e898e7: import java.io.BufferedWriter;
1:1e898e7: import java.io.File;
1:bdb1c48: import java.io.FileOutputStream;
1:1e898e7: import java.io.IOException;
1:bdb1c48: import java.io.OutputStreamWriter;
1:1e898e7: 
1:87d4b2e: import com.google.common.io.Closeables;
1:85f9ece: import org.apache.commons.io.Charsets;
1:87d4b2e: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItem;
1:87d4b2e: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItems;
1:87d4b2e: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItemsWriter;
1:87d4b2e: 
1:1e898e7: /**
1:1e898e7:  * Persist the precomputed item similarities to a file that can later be used
1:1e898e7:  * by a {@link org.apache.mahout.cf.taste.impl.similarity.file.FileItemSimilarity}
1:1e898e7:  */
1:1e898e7: public class FileSimilarItemsWriter implements SimilarItemsWriter {
1:1e898e7: 
1:1e898e7:   private final File file;
1:1e898e7:   private BufferedWriter writer;
1:1e898e7: 
1:1e898e7:   public FileSimilarItemsWriter(File file) {
1:1e898e7:     this.file = file;
1:1e898e7:   }
1:1e898e7: 
1:1e898e7:   @Override
1:1e898e7:   public void open() throws IOException {
1:bdb1c48:     writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), Charsets.UTF_8));
1:1e898e7:   }
1:1e898e7: 
1:1e898e7:   @Override
1:1e898e7:   public void add(SimilarItems similarItems) throws IOException {
1:1e898e7:     String itemID = String.valueOf(similarItems.getItemID());
1:1e898e7:     for (SimilarItem similarItem : similarItems.getSimilarItems()) {
1:1e898e7:       writer.write(itemID);
1:1e898e7:       writer.write(',');
1:1e898e7:       writer.write(String.valueOf(similarItem.getItemID()));
1:1e898e7:       writer.write(',');
1:1e898e7:       writer.write(String.valueOf(similarItem.getSimilarity()));
1:1e898e7:       writer.newLine();
1:1e898e7:     }
1:1e898e7:   }
1:1e898e7: 
1:1e898e7:   @Override
1:1e898e7:   public void close() throws IOException {
1:87d4b2e:     Closeables.close(writer, false);
1:1e898e7:   }
1:1e898e7: }
============================================================================
author:Suneel Marthi
-------------------------------------------------------------------------------
commit:85f9ece
/////////////////////////////////////////////////////////////////////////
1: import org.apache.commons.io.Charsets;
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:dfilimon
-------------------------------------------------------------------------------
commit:87d4b2e
/////////////////////////////////////////////////////////////////////////
0: import com.google.common.base.Charsets;
1: import com.google.common.io.Closeables;
1: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItem;
1: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItems;
1: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItemsWriter;
1: 
/////////////////////////////////////////////////////////////////////////
1:     Closeables.close(writer, false);
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:31cb292
/////////////////////////////////////////////////////////////////////////
0:     Closeables.close(writer, true);
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:bdb1c48
/////////////////////////////////////////////////////////////////////////
0: import com.google.common.base.Charsets;
/////////////////////////////////////////////////////////////////////////
1: import java.io.FileOutputStream;
1: import java.io.OutputStreamWriter;
/////////////////////////////////////////////////////////////////////////
1:     writer = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file), Charsets.UTF_8));
commit:1e898e7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.impl.similarity.precompute;
1: 
0: import com.google.common.io.Closeables;
0: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItem;
0: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItems;
0: import org.apache.mahout.cf.taste.similarity.precompute.SimilarItemsWriter;
1: 
1: import java.io.BufferedWriter;
1: import java.io.File;
0: import java.io.FileWriter;
1: import java.io.IOException;
1: 
1: /**
1:  * Persist the precomputed item similarities to a file that can later be used
1:  * by a {@link org.apache.mahout.cf.taste.impl.similarity.file.FileItemSimilarity}
1:  */
1: public class FileSimilarItemsWriter implements SimilarItemsWriter {
1: 
1:   private final File file;
1:   private BufferedWriter writer;
1: 
1:   public FileSimilarItemsWriter(File file) {
1:     this.file = file;
1:   }
1: 
1:   @Override
1:   public void open() throws IOException {
0:     writer = new BufferedWriter(new FileWriter(file));
1:   }
1: 
1:   @Override
1:   public void add(SimilarItems similarItems) throws IOException {
1:     String itemID = String.valueOf(similarItems.getItemID());
1:     for (SimilarItem similarItem : similarItems.getSimilarItems()) {
1:       writer.write(itemID);
1:       writer.write(',');
1:       writer.write(String.valueOf(similarItem.getItemID()));
1:       writer.write(',');
1:       writer.write(String.valueOf(similarItem.getSimilarity()));
1:       writer.newLine();
1:     }
1:   }
1: 
1:   @Override
1:   public void close() throws IOException {
0:     Closeables.closeQuietly(writer);
1:   }
1: }
============================================================================