1:5d02c70: /*
1:5d02c70:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:5d02c70:  *  contributor license agreements.  See the NOTICE file distributed with
1:5d02c70:  *  this work for additional information regarding copyright ownership.
1:5d02c70:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:5d02c70:  *  (the "License"); you may not use this file except in compliance with
1:5d02c70:  *  the License.  You may obtain a copy of the License at
1:5d02c70:  *
1:5d02c70:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5d02c70:  *
1:5d02c70:  *  Unless required by applicable law or agreed to in writing, software
1:5d02c70:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:5d02c70:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5d02c70:  *  See the License for the specific language governing permissions and
1:5d02c70:  *  limitations under the License.
1:5d02c70:  */
2:5d02c70: 
1:5d02c70: package org.apache.mahout.h2obindings.ops;
1:5d02c70: 
1:6ac833b: import org.apache.mahout.h2obindings.drm.H2ODrm;
1:5d02c70: import water.fvec.Frame;
1:5d02c70: import water.fvec.Vec;
1:5d02c70: 
1:5d02c70: /**
1:5d02c70:  * R-like cbind like operator, on a DRM and a new column containing
1:5d02c70:  * the given scalar value.
1:5d02c70:  */
1:5d02c70: public class CbindScalar {
1:5d02c70:   /**
1:5d02c70:    * Combine the columns of DRM A with a new column storing
1:5d02c70:    * the given scalar.
1:5d02c70:    *
1:5d02c70:    * @param drmA DRM representing matrix A.
1:6ac833b:    * @param scalar value to be filled in new column.
1:6ac833b:    * @param leftbind true if binding to the left
1:5d02c70:    * @return new DRM containing columns of A and d.
1:5d02c70:    */
1:5d02c70:   public static H2ODrm exec(H2ODrm drmA, double scalar, boolean leftbind) {
1:5d02c70:     Frame fra = drmA.frame;
1:5d02c70:     Vec newcol = fra.anyVec().makeCon(scalar);
1:5d02c70:     Vec vecs[] = new Vec[fra.vecs().length + 1];
1:5d02c70:     int d = 0;
1:5d02c70: 
1:5d02c70:     if (leftbind)
1:5d02c70:       vecs[d++] = newcol;
1:5d02c70:     for (Vec vfra : fra.vecs())
1:5d02c70:       vecs[d++] = vfra;
1:5d02c70:     if (!leftbind)
1:5d02c70:       vecs[d++] = newcol;
1:5d02c70: 
1:5d02c70:     return new H2ODrm(new Frame(vecs), drmA.keys);
1:5d02c70:   }
1:5d02c70: }
============================================================================
author:smarthi
-------------------------------------------------------------------------------
commit:6ac833b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.h2obindings.drm.H2ODrm;
/////////////////////////////////////////////////////////////////////////
1:    * @param scalar value to be filled in new column.
1:    * @param leftbind true if binding to the left
author:Anand Avati
-------------------------------------------------------------------------------
commit:5d02c70
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: 
1: package org.apache.mahout.h2obindings.ops;
1: 
0: import water.MRTask;
1: import water.fvec.Frame;
1: import water.fvec.Vec;
0: import water.fvec.Chunk;
1: 
0: import org.apache.mahout.h2obindings.drm.H2ODrm;
1: 
1: /**
1:  * R-like cbind like operator, on a DRM and a new column containing
1:  * the given scalar value.
1:  */
1: public class CbindScalar {
1:   /**
1:    * Combine the columns of DRM A with a new column storing
1:    * the given scalar.
1:    *
1:    * @param drmA DRM representing matrix A.
0:    * @param d value to be filled in new column.
1:    * @return new DRM containing columns of A and d.
1:    */
1:   public static H2ODrm exec(H2ODrm drmA, double scalar, boolean leftbind) {
1:     Frame fra = drmA.frame;
1:     Vec newcol = fra.anyVec().makeCon(scalar);
1:     Vec vecs[] = new Vec[fra.vecs().length + 1];
1:     int d = 0;
1: 
1:     if (leftbind)
1:       vecs[d++] = newcol;
1:     for (Vec vfra : fra.vecs())
1:       vecs[d++] = vfra;
1:     if (!leftbind)
1:       vecs[d++] = newcol;
1: 
1:     return new H2ODrm(new Frame(vecs), drmA.keys);
1:   }
1: }
============================================================================