1:bfd8214: /**
1:bfd8214:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:bfd8214:  * contributor license agreements.  See the NOTICE file distributed with
1:bfd8214:  * this work for additional information regarding copyright ownership.
1:bfd8214:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:bfd8214:  * (the "License"); you may not use this file except in compliance with
1:bfd8214:  * the License.  You may obtain a copy of the License at
1:bfd8214:  *
1:bfd8214:  *     http://www.apache.org/licenses/LICENSE-2.0
1:bfd8214:  *
1:bfd8214:  * Unless required by applicable law or agreed to in writing, software
1:bfd8214:  * distributed under the License is distributed on an "AS IS" BASIS,
1:bfd8214:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bfd8214:  * See the License for the specific language governing permissions and
1:bfd8214:  * limitations under the License.
1:bfd8214:  */
1:bfd8214: 
1:bfd8214: package org.apache.mahout.math;
1:bfd8214: 
1:bef1e8e: import org.apache.mahout.math.function.Functions;
1:bfd8214: import org.junit.Test;
1:bfd8214: 
1:bfd8214: public class MatrixVectorViewTest extends MahoutTestCase {
1:bfd8214: 
1:bfd8214:   /**
1:bfd8214:    * Test for the error reported in https://issues.apache.org/jira/browse/MAHOUT-1146
1:bfd8214:    */
1:bfd8214:   @Test
1:bfd8214:   public void testColumnView() {
1:bfd8214: 
1:bfd8214:     Matrix matrix = new DenseMatrix(5, 3);
1:bfd8214:     Vector column2 = matrix.viewColumn(2);
1:bfd8214:     Matrix outerProduct = column2.cross(column2);
1:bfd8214: 
1:bfd8214:     assertEquals(matrix.numRows(), outerProduct.numRows());
1:bfd8214:     assertEquals(matrix.numRows(), outerProduct.numCols());
1:bfd8214:   }
1:bef1e8e: 
1:bef1e8e:   /**
1:bef1e8e:    * Test for out of range column or row access.
1:bef1e8e:    */
1:bef1e8e:   @Test
1:bef1e8e:   public void testIndexRange() {
1:bef1e8e:     Matrix m = new DenseMatrix(20, 30).assign(Functions.random());
1:bef1e8e:     try {
1:bef1e8e:       m.viewColumn(30);
1:bef1e8e:       fail("Should have thrown exception");
1:bef1e8e:     } catch (IllegalArgumentException e) {
1:bef1e8e:       assertTrue(e.getMessage().startsWith("Index 30 is outside allowable"));
1:bef1e8e:     }
1:bef1e8e:     try {
1:bef1e8e:       m.viewRow(20);
1:bef1e8e:       fail("Should have thrown exception");
1:bef1e8e:     } catch (IllegalArgumentException e) {
1:bef1e8e:       assertTrue(e.getMessage().startsWith("Index 20 is outside allowable"));
1:bef1e8e:     }
1:bef1e8e:   }
1:bfd8214: }
============================================================================
author:Ted Dunning
-------------------------------------------------------------------------------
commit:bef1e8e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.math.function.Functions;
/////////////////////////////////////////////////////////////////////////
1: 
1:   /**
1:    * Test for out of range column or row access.
1:    */
1:   @Test
1:   public void testIndexRange() {
1:     Matrix m = new DenseMatrix(20, 30).assign(Functions.random());
1:     try {
1:       m.viewColumn(30);
1:       fail("Should have thrown exception");
1:     } catch (IllegalArgumentException e) {
1:       assertTrue(e.getMessage().startsWith("Index 30 is outside allowable"));
1:     }
1:     try {
1:       m.viewRow(20);
1:       fail("Should have thrown exception");
1:     } catch (IllegalArgumentException e) {
1:       assertTrue(e.getMessage().startsWith("Index 20 is outside allowable"));
1:     }
1:   }
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:bfd8214
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.math;
1: 
1: import org.junit.Test;
1: 
1: public class MatrixVectorViewTest extends MahoutTestCase {
1: 
1:   /**
1:    * Test for the error reported in https://issues.apache.org/jira/browse/MAHOUT-1146
1:    */
1:   @Test
1:   public void testColumnView() {
1: 
1:     Matrix matrix = new DenseMatrix(5, 3);
1:     Vector column2 = matrix.viewColumn(2);
1:     Matrix outerProduct = column2.cross(column2);
1: 
1:     assertEquals(matrix.numRows(), outerProduct.numRows());
1:     assertEquals(matrix.numRows(), outerProduct.numCols());
1:   }
1: }
============================================================================