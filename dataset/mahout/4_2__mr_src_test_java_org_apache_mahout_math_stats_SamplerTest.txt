1:131eb4a: /**
1:131eb4a:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:131eb4a:  * contributor license agreements.  See the NOTICE file distributed with
1:131eb4a:  * this work for additional information regarding copyright ownership.
1:131eb4a:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:131eb4a:  * (the "License"); you may not use this file except in compliance with
1:131eb4a:  * the License.  You may obtain a copy of the License at
1:131eb4a:  *
1:131eb4a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:131eb4a:  *
1:131eb4a:  * Unless required by applicable law or agreed to in writing, software
1:131eb4a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:131eb4a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:131eb4a:  * See the License for the specific language governing permissions and
1:131eb4a:  * limitations under the License.
1:131eb4a:  */
1:131eb4a: package org.apache.mahout.math.stats;
1:131eb4a: 
1:131eb4a: import org.apache.mahout.common.MahoutTestCase;
1:131eb4a: import org.apache.mahout.common.RandomUtils;
1:131eb4a: import org.apache.mahout.math.DenseVector;
1:131eb4a: import org.apache.mahout.math.Vector;
1:131eb4a: import org.junit.Test;
1:131eb4a: 
1:131eb4a: public class SamplerTest extends MahoutTestCase {
1:131eb4a: 
1:131eb4a:   @Test
1:131eb4a:   public void testDiscreteSampler() {
1:131eb4a:     Vector distribution = new DenseVector(new double[] {1, 0, 2, 3, 5, 0});
1:4fbfbc6:     Sampler sampler = new Sampler(RandomUtils.getRandom(), distribution);
1:131eb4a:     Vector sampledDistribution = distribution.like();
1:131eb4a:     int i = 0;
1:4fbfbc6:     while (i < 100000) {
1:131eb4a:       int index = sampler.sample();
1:131eb4a:       sampledDistribution.set(index, sampledDistribution.get(index) + 1);
1:131eb4a:       i++;
1:131eb4a:     }
1:131eb4a:     assertTrue("sampled distribution is far from the original",
1:4fbfbc6:         l1Dist(distribution, sampledDistribution) < 1.0e-2);
1:131eb4a:   }
1:131eb4a: 
1:4fbfbc6:   private static double l1Dist(Vector v, Vector w) {
1:4fbfbc6:     return v.normalize(1.0).minus(w.normalize(1)).norm(1.0);
1:131eb4a:   }
1:131eb4a: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:4fbfbc6
/////////////////////////////////////////////////////////////////////////
1:     Sampler sampler = new Sampler(RandomUtils.getRandom(), distribution);
1:     while (i < 100000) {
1:         l1Dist(distribution, sampledDistribution) < 1.0e-2);
1:   private static double l1Dist(Vector v, Vector w) {
1:     return v.normalize(1.0).minus(w.normalize(1)).norm(1.0);
author:Jacob Alexander Mannix
-------------------------------------------------------------------------------
commit:131eb4a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.mahout.math.stats;
1: 
1: import org.apache.mahout.common.MahoutTestCase;
1: import org.apache.mahout.common.RandomUtils;
1: import org.apache.mahout.math.DenseVector;
1: import org.apache.mahout.math.Vector;
1: import org.junit.Test;
1: 
1: public class SamplerTest extends MahoutTestCase {
1: 
1:   @Test
1:   public void testDiscreteSampler() {
1:     Vector distribution = new DenseVector(new double[] {1, 0, 2, 3, 5, 0});
0:     Sampler sampler = new Sampler(RandomUtils.getRandom(1234), distribution);
1:     Vector sampledDistribution = distribution.like();
1:     int i = 0;
0:     while(i < 10000) {
1:       int index = sampler.sample();
1:       sampledDistribution.set(index, sampledDistribution.get(index) + 1);
1:       i++;
1:     }
1:     assertTrue("sampled distribution is far from the original",
0:         l1Dist(distribution, sampledDistribution) < 1e-2);
1:   }
1: 
0:   private double l1Dist(Vector v, Vector w) {
0:     return v.normalize(1d).minus(w.normalize(1)).norm(1d);
1:   }
1: }
============================================================================