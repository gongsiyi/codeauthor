1:845cbcd: /**
1:845cbcd:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:845cbcd:  * contributor license agreements.  See the NOTICE file distributed with
1:845cbcd:  * this work for additional information regarding copyright ownership.
1:845cbcd:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:845cbcd:  * (the "License"); you may not use this file except in compliance with
1:845cbcd:  * the License.  You may obtain a copy of the License at
1:845cbcd:  *
1:845cbcd:  *     http://www.apache.org/licenses/LICENSE-2.0
1:845cbcd:  *
1:845cbcd:  * Unless required by applicable law or agreed to in writing, software
1:845cbcd:  * distributed under the License is distributed on an "AS IS" BASIS,
1:845cbcd:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:845cbcd:  * See the License for the specific language governing permissions and
1:845cbcd:  * limitations under the License.
1:845cbcd:  */
1:845cbcd: 
1:845cbcd: package org.apache.mahout.math.hadoop.similarity.cooccurrence.measures;
1:845cbcd: 
1:845cbcd: import java.util.Arrays;
1:845cbcd: 
1:845cbcd: public enum VectorSimilarityMeasures {
1:845cbcd: 
1:845cbcd:   SIMILARITY_COOCCURRENCE(CooccurrenceCountSimilarity.class),
1:845cbcd:   SIMILARITY_LOGLIKELIHOOD(LoglikelihoodSimilarity.class),
1:845cbcd:   SIMILARITY_TANIMOTO_COEFFICIENT(TanimotoCoefficientSimilarity.class),
1:845cbcd:   SIMILARITY_CITY_BLOCK(CityBlockSimilarity.class),
1:845cbcd:   SIMILARITY_COSINE(CosineSimilarity.class),
1:845cbcd:   SIMILARITY_PEARSON_CORRELATION(PearsonCorrelationSimilarity.class),
1:845cbcd:   SIMILARITY_EUCLIDEAN_DISTANCE(EuclideanDistanceSimilarity.class);
1:845cbcd: 
1:845cbcd:   private final Class<? extends VectorSimilarityMeasure> implementingClass;
1:845cbcd: 
1:845cbcd:   VectorSimilarityMeasures(Class<? extends VectorSimilarityMeasure> impl) {
1:845cbcd:     this.implementingClass = impl;
1:845cbcd:   }
1:845cbcd: 
1:845cbcd:   public String getClassname() {
1:845cbcd:     return implementingClass.getName();
1:845cbcd:   }
1:845cbcd: 
1:845cbcd:   public static String list() {
1:845cbcd:     return Arrays.toString(values());
1:845cbcd:   }
1:845cbcd: 
1:845cbcd: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:845cbcd
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.math.hadoop.similarity.cooccurrence.measures;
1: 
1: import java.util.Arrays;
1: 
1: public enum VectorSimilarityMeasures {
1: 
1:   SIMILARITY_COOCCURRENCE(CooccurrenceCountSimilarity.class),
1:   SIMILARITY_LOGLIKELIHOOD(LoglikelihoodSimilarity.class),
1:   SIMILARITY_TANIMOTO_COEFFICIENT(TanimotoCoefficientSimilarity.class),
1:   SIMILARITY_CITY_BLOCK(CityBlockSimilarity.class),
1:   SIMILARITY_COSINE(CosineSimilarity.class),
1:   SIMILARITY_PEARSON_CORRELATION(PearsonCorrelationSimilarity.class),
1:   SIMILARITY_EUCLIDEAN_DISTANCE(EuclideanDistanceSimilarity.class);
1: 
1:   private final Class<? extends VectorSimilarityMeasure> implementingClass;
1: 
1:   VectorSimilarityMeasures(Class<? extends VectorSimilarityMeasure> impl) {
1:     this.implementingClass = impl;
1:   }
1: 
1:   public String getClassname() {
1:     return implementingClass.getName();
1:   }
1: 
1:   public static String list() {
1:     return Arrays.toString(values());
1:   }
1: 
1: }
============================================================================