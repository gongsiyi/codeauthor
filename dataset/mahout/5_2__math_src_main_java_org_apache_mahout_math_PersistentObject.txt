2:35fa73f: /**
1:35fa73f:  * Licensed to the Apache Software Foundation (ASF) under one
1:35fa73f:  * or more contributor license agreements. See the NOTICE file
1:35fa73f:  * distributed with this work for additional information
1:35fa73f:  * regarding copyright ownership. The ASF licenses this file
1:35fa73f:  * to you under the Apache License, Version 2.0 (the
1:35fa73f:  * "License"); you may not use this file except in compliance
1:35fa73f:  * with the License. You may obtain a copy of the License at
2:35fa73f:  *
1:35fa73f:  * http://www.apache.org/licenses/LICENSE-2.0
1:35fa73f:  *
1:35fa73f:  * Unless required by applicable law or agreed to in writing,
1:35fa73f:  * software distributed under the License is distributed on an
1:35fa73f:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:35fa73f:  * KIND, either express or implied. See the License for the
1:35fa73f:  * specific language governing permissions and limitations
1:35fa73f:  * under the License.
2:35fa73f:  */
1:35fa73f: /*
1:35fa73f: Copyright 1999 CERN - European Organization for Nuclear Research.
1:35fa73f: Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose 
1:35fa73f: is hereby granted without fee, provided that the above copyright notice appear in all copies and 
1:35fa73f: that both that copyright notice and this permission notice appear in supporting documentation. 
1:35fa73f: CERN makes no representations about the suitability of this software for any purpose. 
1:35fa73f: It is provided "as is" without expressed or implied warranty.
1:35fa73f: */
1:35fa73f: package org.apache.mahout.math;
1:7926fcb: 
1:35fa73f: /**
1:35fa73f:  * This empty class is the common root for all persistent capable classes.
1:229aeff:  * If this class inherits from <tt>java.lang.Object</tt> then all subclasses are serializable with
1:229aeff:  * the standard Java serialization mechanism.
1:229aeff:  * If this class inherits from <tt>com.objy.db.app.ooObj</tt> then all subclasses are
1:229aeff:  * <i>additionally</i> serializable with the Objectivity ODBMS persistance mechanism.
1:229aeff:  * Thus, by modifying the inheritance of this class the entire tree of subclasses can
1:229aeff:  * be switched to Objectivity compatibility (and back) with minimum effort.
1:35fa73f:  */
1:7926fcb: public abstract class PersistentObject implements java.io.Serializable, Cloneable {
1:7926fcb: 
1:7926fcb:   /** Not yet commented. */
1:7926fcb:   protected PersistentObject() {
4:35fa73f:   }
1:7926fcb: 
1:7926fcb:   /**
1:7926fcb:    * Returns a copy of the receiver. This default implementation does not nothing except making the otherwise
1:7926fcb:    * <tt>protected</tt> clone method <tt>public</tt>.
1:7926fcb:    *
1:7926fcb:    * @return a copy of the receiver.
1:7926fcb:    */
1:7926fcb:   @Override
1:7926fcb:   public Object clone() {
1:7926fcb:     try {
1:7926fcb:       return super.clone();
1:7926fcb:     } catch (CloneNotSupportedException exc) {
1:7926fcb:       throw new InternalError(); //should never happen since we are cloneable
1:7926fcb:     }
1:7926fcb:   }
1:fcbc54a: }
============================================================================
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:229aeff
/////////////////////////////////////////////////////////////////////////
1:  * If this class inherits from <tt>java.lang.Object</tt> then all subclasses are serializable with
1:  * the standard Java serialization mechanism.
1:  * If this class inherits from <tt>com.objy.db.app.ooObj</tt> then all subclasses are
1:  * <i>additionally</i> serializable with the Objectivity ODBMS persistance mechanism.
1:  * Thus, by modifying the inheritance of this class the entire tree of subclasses can
1:  * be switched to Objectivity compatibility (and back) with minimum effort.
commit:7926fcb
/////////////////////////////////////////////////////////////////////////
1: 
0: /** @deprecated until unit tests are in place.  Until this time, this class/interface is unsupported. */
1: public abstract class PersistentObject implements java.io.Serializable, Cloneable {
1: 
1:   /** Not yet commented. */
1:   protected PersistentObject() {
1: 
1:   /**
1:    * Returns a copy of the receiver. This default implementation does not nothing except making the otherwise
1:    * <tt>protected</tt> clone method <tt>public</tt>.
1:    *
1:    * @return a copy of the receiver.
1:    */
1:   @Override
1:   public Object clone() {
1:     try {
1:       return super.clone();
1:     } catch (CloneNotSupportedException exc) {
1:       throw new InternalError(); //should never happen since we are cloneable
1:     }
1:   }
commit:fcbc54a
/////////////////////////////////////////////////////////////////////////
0:   public static final long serialVersionUID = 1020L;
/////////////////////////////////////////////////////////////////////////
0:   try {
0:     return super.clone();
0:   } catch (CloneNotSupportedException exc) {
0:     throw new InternalError(); //should never happen since we are cloneable
1:   }
author:Ted Dunning
-------------------------------------------------------------------------------
commit:35fa73f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements. See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership. The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License. You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied. See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: /*
1: Copyright 1999 CERN - European Organization for Nuclear Research.
1: Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose 
1: is hereby granted without fee, provided that the above copyright notice appear in all copies and 
1: that both that copyright notice and this permission notice appear in supporting documentation. 
1: CERN makes no representations about the suitability of this software for any purpose. 
1: It is provided "as is" without expressed or implied warranty.
1: */
1: package org.apache.mahout.math;
0: 
1: /**
1:  * This empty class is the common root for all persistent capable classes.
0:  * If this class inherits from <tt>java.lang.Object</tt> then all subclasses are serializable with the standard Java serialization mechanism.
0:  * If this class inherits from <tt>com.objy.db.app.ooObj</tt> then all subclasses are <i>additionally</i> serializable with the Objectivity ODBMS persistance mechanism.
0:  * Thus, by modifying the inheritance of this class the entire tree of subclasses can be switched to Objectivity compatibility (and back) with minimum effort.
1:  */
0: public abstract class PersistentObject implements java.io.Serializable, Cloneable {
0: 
0:   /** Not yet commented. */
0:   protected PersistentObject() {
1:   }
0: 
1:   /**
0:    * Returns a copy of the receiver. This default implementation does not nothing except making the otherwise
0:    * <tt>protected</tt> clone method <tt>public</tt>.
1:    *
0:    * @return a copy of the receiver.
1:    */
0:   @Override
0:   public Object clone() {
0:     try {
0:       return super.clone();
0:     } catch (CloneNotSupportedException exc) {
0:       throw new InternalError(); //should never happen since we are cloneable
1:     }
1:   }
1: }
author:Benson Margulies
-------------------------------------------------------------------------------
commit:ebf9a4d
/////////////////////////////////////////////////////////////////////////
author:Robin Anil
-------------------------------------------------------------------------------
commit:a51dd9e
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements. See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership. The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License. You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied. See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
/////////////////////////////////////////////////////////////////////////
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:a435efb
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.math;
commit:f49424e
/////////////////////////////////////////////////////////////////////////
0: package org.apache.mahout.matrix;
commit:7550a10
/////////////////////////////////////////////////////////////////////////
0: /*
0: Copyright 1999 CERN - European Organization for Nuclear Research.
0: Permission to use, copy, modify, distribute and sell this software and its documentation for any purpose 
0: is hereby granted without fee, provided that the above copyright notice appear in all copies and 
0: that both that copyright notice and this permission notice appear in supporting documentation. 
0: CERN makes no representations about the suitability of this software for any purpose. 
0: It is provided "as is" without expressed or implied warranty.
0: */
0: package org.apache.mahout.colt;
0: 
0: /**
0:  * This empty class is the common root for all persistent capable classes.
0:  * If this class inherits from <tt>java.lang.Object</tt> then all subclasses are serializable with the standard Java serialization mechanism.
0:  * If this class inherits from <tt>com.objy.db.app.ooObj</tt> then all subclasses are <i>additionally</i> serializable with the Objectivity ODBMS persistance mechanism.
0:  * Thus, by modifying the inheritance of this class the entire tree of subclasses can be switched to Objectivity compatibility (and back) with minimum effort.
0:  */
0: /** 
0:  * @deprecated until unit tests are in place.  Until this time, this class/interface is unsupported.
0:  */
0: @Deprecated
0: public abstract class PersistentObject extends Object implements java.io.Serializable, Cloneable {
0: 	public static final long serialVersionUID = 1020L;
0: /**
0:  * Not yet commented.
0:  */
0: protected PersistentObject() {
0: }
0: /**
0:  * Returns a copy of the receiver.
0:  * This default implementation does not nothing except making the otherwise <tt>protected</tt> clone method <tt>public</tt>.
0:  *
0:  * @return a copy of the receiver.
0:  */
0: public Object clone() {
0: 	try {
0: 		return super.clone();
0: 	} catch (CloneNotSupportedException exc) {
0: 		throw new InternalError(); //should never happen since we are cloneable
0: 	}
0: }
0: }
============================================================================