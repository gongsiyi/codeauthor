1:15712a6: /**
1:15712a6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:15712a6:  * contributor license agreements.  See the NOTICE file distributed with
1:15712a6:  * this work for additional information regarding copyright ownership.
1:15712a6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:15712a6:  * (the "License"); you may not use this file except in compliance with
1:15712a6:  * the License.  You may obtain a copy of the License at
1:15712a6:  *
1:15712a6:  *     http://www.apache.org/licenses/LICENSE-2.0
1:15712a6:  *
1:15712a6:  * Unless required by applicable law or agreed to in writing, software
1:15712a6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:15712a6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:15712a6:  * See the License for the specific language governing permissions and
1:15712a6:  * limitations under the License.
1:15712a6:  */
1:15712a6: 
1:3ffddc5: package org.apache.mahout.utils;
1:3ffddc5: 
1:3ffddc5: import com.google.common.collect.Lists;
1:b381afd: 
1:b381afd: import org.apache.mahout.common.MahoutTestCase;
1:3ffddc5: import org.junit.Test;
1:3ffddc5: 
1:3ffddc5: import java.util.Iterator;
1:3ffddc5: 
1:3ffddc5: public class Bump125Test extends MahoutTestCase {
1:3ffddc5:   @Test
1:3ffddc5:   public void testIncrement() throws Exception {
1:3ffddc5:     Iterator<Integer> ref = Lists.newArrayList(1, 2, 3, 4, 5, 6, 7,
1:3ffddc5:             8, 9, 10, 12, 14, 16, 18, 20, 25, 30, 35, 40, 50, 60,
1:3ffddc5:             70, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350,
1:3ffddc5:             400, 500, 600, 700, 800, 1000, 1200, 1400, 1600, 1800,
1:3ffddc5:             2000, 2500, 3000, 3500, 4000, 5000, 6000, 7000)
1:3ffddc5:             .iterator();
1:3ffddc5:     Bump125 b = new Bump125();
1:3ffddc5:     for (int i = 0; i < 50; i++) {
1:15712a6:       long x = b.increment();
1:3ffddc5:       assertEquals(ref.next().longValue(), x);
1:3ffddc5:     }
1:3ffddc5:   }
1:3ffddc5: }
============================================================================
author:sslavic
-------------------------------------------------------------------------------
commit:b381afd
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.apache.mahout.common.MahoutTestCase;
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:50fd693
commit:15712a6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
/////////////////////////////////////////////////////////////////////////
1:       long x = b.increment();
author:Ted Dunning
-------------------------------------------------------------------------------
commit:3ffddc5
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.utils;
1: 
1: import com.google.common.collect.Lists;
1: import org.junit.Test;
1: 
1: import java.util.Iterator;
1: 
1: public class Bump125Test extends MahoutTestCase {
1:   @Test
1:   public void testIncrement() throws Exception {
1:     Iterator<Integer> ref = Lists.newArrayList(1, 2, 3, 4, 5, 6, 7,
1:             8, 9, 10, 12, 14, 16, 18, 20, 25, 30, 35, 40, 50, 60,
1:             70, 80, 100, 120, 140, 160, 180, 200, 250, 300, 350,
1:             400, 500, 600, 700, 800, 1000, 1200, 1400, 1600, 1800,
1:             2000, 2500, 3000, 3500, 4000, 5000, 6000, 7000)
1:             .iterator();
1:     Bump125 b = new Bump125();
1:     for (int i = 0; i < 50; i++) {
0:       final long x = b.increment();
1:       assertEquals(ref.next().longValue(), x);
1:     }
1:   }
1: }
============================================================================