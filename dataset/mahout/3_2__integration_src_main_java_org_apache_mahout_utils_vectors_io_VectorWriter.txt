1:f55276b: /**
1:f55276b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f55276b:  * contributor license agreements.  See the NOTICE file distributed with
1:f55276b:  * this work for additional information regarding copyright ownership.
1:f55276b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f55276b:  * (the "License"); you may not use this file except in compliance with
1:f55276b:  * the License.  You may obtain a copy of the License at
1:f55276b:  *
1:f55276b:  *     http://www.apache.org/licenses/LICENSE-2.0
1:f55276b:  *
1:f55276b:  * Unless required by applicable law or agreed to in writing, software
1:f55276b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f55276b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f55276b:  * See the License for the specific language governing permissions and
1:f55276b:  * limitations under the License.
1:f55276b:  */
1:f55276b: 
1:075ea19: package org.apache.mahout.utils.vectors.io;
3:075ea19: 
1:b16c260: import java.io.Closeable;
1:075ea19: import java.io.IOException;
1:075ea19: 
1:a435efb: import org.apache.mahout.math.Vector;
1:075ea19: 
1:b16c260: public interface VectorWriter extends Closeable {
2:63e11c0:   /**
1:63e11c0:    * Write all values in the Iterable to the output
1:15c61ee:    * @param iterable The {@link Iterable} to loop over
1:63e11c0:    * @return the number of docs written
1:63e11c0:    * @throws IOException if there was a problem writing
1:63e11c0:    *
2:63e11c0:    */
1:b16c260:   long write(Iterable<Vector> iterable) throws IOException;
1:747dfa4: 
1:747dfa4:   /**
1:747dfa4:    * Write out a vector
1:747dfa4:    *
1:747dfa4:    * @param vector The {@link org.apache.mahout.math.Vector} to write
1:747dfa4:    * @throws IOException
1:747dfa4:    */
1:b16c260:   void write(Vector vector) throws IOException;
1:075ea19:   
1:63e11c0:   /**
1:39fe224:    * Write the first {@code maxDocs} to the output.
1:15c61ee:    * @param iterable The {@link Iterable} to loop over
1:63e11c0:    * @param maxDocs the maximum number of docs to write
1:63e11c0:    * @return The number of docs written
1:63e11c0:    * @throws IOException if there was a problem writing
1:63e11c0:    */
1:b16c260:   long write(Iterable<Vector> iterable, long maxDocs) throws IOException;
1:b16c260: 
1:075ea19: }
============================================================================
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:50fd693
commit:39fe224
/////////////////////////////////////////////////////////////////////////
1:    * Write the first {@code maxDocs} to the output.
commit:b16c260
/////////////////////////////////////////////////////////////////////////
1: import java.io.Closeable;
1: public interface VectorWriter extends Closeable {
/////////////////////////////////////////////////////////////////////////
1:   long write(Iterable<Vector> iterable) throws IOException;
/////////////////////////////////////////////////////////////////////////
1:   void write(Vector vector) throws IOException;
/////////////////////////////////////////////////////////////////////////
1:   long write(Iterable<Vector> iterable, long maxDocs) throws IOException;
1: 
commit:0f033b2
commit:254af09
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:f55276b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
/////////////////////////////////////////////////////////////////////////
0:   long write(VectorIterable iterable) throws IOException;
/////////////////////////////////////////////////////////////////////////
0:   long write(VectorIterable iterable, long maxDocs) throws IOException;
0:   void close() throws IOException;
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:747dfa4
/////////////////////////////////////////////////////////////////////////
0: public abstract class VectorWriter {
/////////////////////////////////////////////////////////////////////////
0:   public abstract long write(Iterable<Vector> iterable) throws IOException;
1: 
1:   /**
1:    * Write out a vector
1:    *
1:    * @param vector The {@link org.apache.mahout.math.Vector} to write
1:    * @throws IOException
1:    */
0:   public abstract void write(Vector vector) throws IOException;
/////////////////////////////////////////////////////////////////////////
0:   public abstract long write(Iterable<Vector> iterable, long maxDocs) throws IOException;
0:   public abstract void close() throws IOException;
commit:15c61ee
/////////////////////////////////////////////////////////////////////////
1:    * @param iterable The {@link Iterable} to loop over
/////////////////////////////////////////////////////////////////////////
1:    * @param iterable The {@link Iterable} to loop over
commit:a435efb
/////////////////////////////////////////////////////////////////////////
1: import org.apache.mahout.math.Vector;
commit:90fe0a2
/////////////////////////////////////////////////////////////////////////
0: import org.apache.mahout.matrix.Vector;
/////////////////////////////////////////////////////////////////////////
0:    * @see #write(Iterable
0:   long write(Iterable<Vector> iterable) throws IOException;
/////////////////////////////////////////////////////////////////////////
0:   long write(Iterable<Vector> iterable, long maxDocs) throws IOException;
commit:63e11c0
/////////////////////////////////////////////////////////////////////////
1:   /**
1:    * Write all values in the Iterable to the output
0:    * @param iterable The {@link org.apache.mahout.utils.vectors.VectorIterable}
1:    * @return the number of docs written
1:    * @throws IOException if there was a problem writing
1:    *
0:    * @see #write(org.apache.mahout.utils.vectors.VectorIterable, long)
1:    */
1:   /**
0:    * Write the first <code>maxDocs</code> to the output.
0:    * @param iterable The {@link org.apache.mahout.utils.vectors.VectorIterable}
1:    * @param maxDocs the maximum number of docs to write
1:    * @return The number of docs written
1:    * @throws IOException if there was a problem writing
1:    */
1:   /**
0:    * Close any internally held resources.  If external Writers are passed in, the implementation should indicate
0:    * whether it also closes them
0:    * @throws IOException if there was an issue closing the item
1:    */
commit:075ea19
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.utils.vectors.io;
1: 
0: import org.apache.mahout.utils.vectors.VectorIterable;
1: 
1: import java.io.IOException;
1: 
1: 
0: /**
0:  *
0:  *
0:  **/
0: public interface VectorWriter {
0:   public long write(VectorIterable iterable) throws IOException;
1: 
0:   public long write(VectorIterable iterable, long maxDocs) throws IOException;
1: 
0:   public void close() throws IOException;
1: }
author:Robin Anil
-------------------------------------------------------------------------------
commit:233d93d
/////////////////////////////////////////////////////////////////////////
0: import org.apache.mahout.math.Vector;
0: 
/////////////////////////////////////////////////////////////////////////
0:   
/////////////////////////////////////////////////////////////////////////
0:   
============================================================================