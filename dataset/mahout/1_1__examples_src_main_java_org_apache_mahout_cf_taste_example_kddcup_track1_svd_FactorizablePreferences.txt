1:c439f53: /**
1:c439f53:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c439f53:  * contributor license agreements.  See the NOTICE file distributed with
1:c439f53:  * this work for additional information regarding copyright ownership.
1:c439f53:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c439f53:  * (the "License"); you may not use this file except in compliance with
1:c439f53:  * the License.  You may obtain a copy of the License at
1:c439f53:  *
1:c439f53:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c439f53:  *
1:c439f53:  * Unless required by applicable law or agreed to in writing, software
1:c439f53:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c439f53:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c439f53:  * See the License for the specific language governing permissions and
1:c439f53:  * limitations under the License.
1:c439f53:  */
1:c439f53: 
1:c439f53: package org.apache.mahout.cf.taste.example.kddcup.track1.svd;
1:c439f53: 
1:c439f53: import org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;
1:c439f53: import org.apache.mahout.cf.taste.model.Preference;
1:c439f53: 
1:c439f53: /**
1:c439f53:  * models the necessary input for {@link ParallelArraysSGDFactorizer}
1:c439f53:  */
1:c439f53: public interface FactorizablePreferences {
1:c439f53: 
1:c439f53:   LongPrimitiveIterator getUserIDs();
1:c439f53: 
1:c439f53:   LongPrimitiveIterator getItemIDs();
1:c439f53: 
1:c439f53:   Iterable<Preference> getPreferences();
1:c439f53: 
1:c439f53:   float getMinPreference();
1:c439f53: 
1:c439f53:   float getMaxPreference();
1:c439f53: 
1:c439f53:   int numUsers();
1:c439f53: 
1:c439f53:   int numItems();
1:c439f53: 
1:c439f53:   int numPreferences();
1:c439f53: 
1:c439f53: }
============================================================================
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:c439f53
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.example.kddcup.track1.svd;
1: 
1: import org.apache.mahout.cf.taste.impl.common.LongPrimitiveIterator;
1: import org.apache.mahout.cf.taste.model.Preference;
1: 
1: /**
1:  * models the necessary input for {@link ParallelArraysSGDFactorizer}
1:  */
1: public interface FactorizablePreferences {
1: 
1:   LongPrimitiveIterator getUserIDs();
1: 
1:   LongPrimitiveIterator getItemIDs();
1: 
1:   Iterable<Preference> getPreferences();
1: 
1:   float getMinPreference();
1: 
1:   float getMaxPreference();
1: 
1:   int numUsers();
1: 
1:   int numItems();
1: 
1:   int numPreferences();
1: 
1: }
============================================================================