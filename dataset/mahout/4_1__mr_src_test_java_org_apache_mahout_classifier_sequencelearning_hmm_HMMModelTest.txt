1:27d33a2: /**
1:27d33a2:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:27d33a2:  * contributor license agreements.  See the NOTICE file distributed with
1:27d33a2:  * this work for additional information regarding copyright ownership.
1:27d33a2:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:27d33a2:  * (the "License"); you may not use this file except in compliance with
1:27d33a2:  * the License.  You may obtain a copy of the License at
1:27d33a2:  *
1:27d33a2:  *     http://www.apache.org/licenses/LICENSE-2.0
1:27d33a2:  *
1:27d33a2:  * Unless required by applicable law or agreed to in writing, software
1:27d33a2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:27d33a2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:27d33a2:  * See the License for the specific language governing permissions and
1:27d33a2:  * limitations under the License.
1:27d33a2:  */
3:27d33a2: 
1:27d33a2: package org.apache.mahout.classifier.sequencelearning.hmm;
1:27d33a2: 
1:27d33a2: import org.junit.Test;
1:27d33a2: 
1:27d33a2: public class HMMModelTest extends HMMTestBase {
1:27d33a2: 
2:27d33a2:   @Test
1:27d33a2:   public void testRandomModelGeneration() {
1:27d33a2:     // make sure we generate a valid random model
1:27d33a2:     HmmModel model = new HmmModel(10, 20);
1:27d33a2:     // check whether the model is valid
1:27d33a2:     HmmUtils.validate(model);
2:27d33a2:   }
1:27d33a2: 
1:27d33a2: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:35032b8
/////////////////////////////////////////////////////////////////////////
commit:d53cf4a
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:     String serialized = getModel().toJson();
0:     assertEquals(serialized, serialized2);
author:Isabel Drost
-------------------------------------------------------------------------------
commit:27d33a2
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.classifier.sequencelearning.hmm;
1: 
0: import junit.framework.Assert;
1: 
1: import org.junit.Test;
1: 
1: public class HMMModelTest extends HMMTestBase {
1: 
1:   @Test
1:   public void testRandomModelGeneration() {
1:     // make sure we generate a valid random model
1:     HmmModel model = new HmmModel(10, 20);
1:     // check whether the model is valid
1:     HmmUtils.validate(model);
1:   }
1: 
1:   @Test
0:   public void testSerialization() {
0:     String serialized = model.toJson();
0:     HmmModel model2 = HmmModel.fromJson(serialized);
0:     String serialized2 = model2.toJson();
0:     // since there are no equals methods for the underlying objects, we
0:     // check identity via the serialization string
0:     Assert.assertEquals(serialized, serialized2);
1:   }
1: 
1: }
============================================================================