1:8c37a84: /**
1:8c37a84:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8c37a84:  * contributor license agreements.  See the NOTICE file distributed with
1:8c37a84:  * this work for additional information regarding copyright ownership.
1:8c37a84:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8c37a84:  * (the "License"); you may not use this file except in compliance with
1:8c37a84:  * the License.  You may obtain a copy of the License at
4:8c37a84:  *
1:8c37a84:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8c37a84:  *
1:8c37a84:  * Unless required by applicable law or agreed to in writing, software
1:8c37a84:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8c37a84:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8c37a84:  * See the License for the specific language governing permissions and
1:8c37a84:  * limitations under the License.
1:8c37a84:  */
5:8c37a84: 
1:52ce412: package org.apache.mahout.classifier.df.data.conditions;
1:8c37a84: 
1:52ce412: import org.apache.mahout.classifier.df.data.Instance;
1:8c37a84: 
1:8c37a84: /**
1:8c37a84:  * Condition on Instance
1:8c37a84:  */
1:1ffa3a4: @Deprecated
1:8c37a84: public abstract class Condition {
1:ad11134:   
1:8c37a84:   /**
1:8c37a84:    * Returns true is the checked instance matches the condition
1:8c37a84:    * 
1:ad11134:    * @param instance
1:ad11134:    *          checked instance
1:8c37a84:    * @return true is the checked instance matches the condition
1:8c37a84:    */
1:8c37a84:   public abstract boolean isTrueFor(Instance instance);
1:ad11134:   
1:8c37a84:   /**
1:ad11134:    * Condition that checks if the given attribute has a value "equal" to the given value
1:8c37a84:    */
1:8c37a84:   public static Condition equals(int attr, double value) {
1:8c37a84:     return new Equals(attr, value);
1:8c37a84:   }
1:ad11134:   
1:8c37a84:   /**
1:ad11134:    * Condition that checks if the given attribute has a value "lesser" than the given value
1:8c37a84:    */
1:8c37a84:   public static Condition lesser(int attr, double value) {
1:8c37a84:     return new Lesser(attr, value);
1:8c37a84:   }
1:ad11134:   
1:8c37a84:   /**
1:ad11134:    * Condition that checks if the given attribute has a value "greater or equal" than the given value
1:8c37a84:    */
1:8c37a84:   public static Condition greaterOrEquals(int attr, double value) {
1:8c37a84:     return new GreaterOrEquals(attr, value);
1:8c37a84:   }
1:8c37a84: }
============================================================================
author:smarthi
-------------------------------------------------------------------------------
commit:1ffa3a4
/////////////////////////////////////////////////////////////////////////
1: @Deprecated
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Grant Ingersoll
-------------------------------------------------------------------------------
commit:52ce412
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.classifier.df.data.conditions;
1: import org.apache.mahout.classifier.df.data.Instance;
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:45cebc4
author:Robin Anil
-------------------------------------------------------------------------------
commit:ad11134
/////////////////////////////////////////////////////////////////////////
1:   
1:    * @param instance
1:    *          checked instance
1:   
1:    * Condition that checks if the given attribute has a value "equal" to the given value
/////////////////////////////////////////////////////////////////////////
1:   
1:    * Condition that checks if the given attribute has a value "lesser" than the given value
/////////////////////////////////////////////////////////////////////////
1:   
1:    * Condition that checks if the given attribute has a value "greater or equal" than the given value
author:Abdel Hakim Deneche
-------------------------------------------------------------------------------
commit:8c37a84
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.mahout.df.data.conditions;
1: 
0: import org.apache.mahout.df.data.Instance;
1: 
1: /**
1:  * Condition on Instance
1:  */
1: public abstract class Condition {
1: 
1:   /**
1:    * Returns true is the checked instance matches the condition
1:    * 
0:    * @param instance checked instance
1:    * @return true is the checked instance matches the condition
1:    */
1:   public abstract boolean isTrueFor(Instance instance);
1: 
1:   /**
0:    * Condition that checks if the given attribute has a value "equal" to the
0:    * given value
1:    * 
0:    * @param attr
0:    * @param value
0:    * @return
1:    */
1:   public static Condition equals(int attr, double value) {
1:     return new Equals(attr, value);
1:   }
1: 
1:   /**
0:    * Condition that checks if the given attribute has a value "lesser" than the
0:    * given value
1:    * 
0:    * @param attr
0:    * @param value
0:    * @return
1:    */
1:   public static Condition lesser(int attr, double value) {
1:     return new Lesser(attr, value);
1:   }
1: 
1:   /**
0:    * Condition that checks if the given attribute has a value "greater or equal"
0:    * than the given value
1:    * 
0:    * @param attr
0:    * @param value
0:    * @return
1:    */
1:   public static Condition greaterOrEquals(int attr, double value) {
1:     return new GreaterOrEquals(attr, value);
1:   }
1: }
============================================================================