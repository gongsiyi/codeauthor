1:9d44881: /**
1:9d44881:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:9d44881:  * contributor license agreements.  See the NOTICE file distributed with
1:9d44881:  * this work for additional information regarding copyright ownership.
1:9d44881:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:9d44881:  * (the "License"); you may not use this file except in compliance with
1:9d44881:  * the License.  You may obtain a copy of the License at
1:9d44881:  *
1:9d44881:  *     http://www.apache.org/licenses/LICENSE-2.0
1:9d44881:  *
1:9d44881:  * Unless required by applicable law or agreed to in writing, software
1:9d44881:  * distributed under the License is distributed on an "AS IS" BASIS,
1:9d44881:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9d44881:  * See the License for the specific language governing permissions and
1:9d44881:  * limitations under the License.
1:9d44881:  */
3:9d44881: 
1:9d44881: package org.apache.mahout.clustering.topdown;
1:9d44881: 
1:9d44881: import java.io.File;
1:9d44881: 
1:9d44881: import org.apache.hadoop.fs.Path;
1:9d44881: 
1:9d44881: /**
1:9d44881:  * Contains list of all internal paths used in top down clustering.
1:9d44881:  */
1:564c3e1: public final class PathDirectory {
1:564c3e1: 
1:564c3e1:   public static final String TOP_LEVEL_CLUSTER_DIRECTORY = "topLevelCluster";
1:564c3e1:   public static final String POST_PROCESS_DIRECTORY = "clusterPostProcessed";
1:564c3e1:   public static final String CLUSTERED_POINTS_DIRECTORY = "clusteredPoints";
1:564c3e1:   public static final String BOTTOM_LEVEL_CLUSTER_DIRECTORY = "bottomLevelCluster";
1:564c3e1: 
1:564c3e1:   private PathDirectory() {
1:564c3e1:   }
1:564c3e1: 
1:9d44881:   /**
1:9d44881:    * All output of top level clustering is stored in output directory/topLevelCluster.
1:9d44881:    * 
1:9d44881:    * @param output
1:9d44881:    *          the output path of clustering.
1:9d44881:    * @return The top level Cluster Directory.
1:9d44881:    */
1:9d44881:   public static Path getTopLevelClusterPath(Path output) {
1:564c3e1:     return new Path(output + File.separator + TOP_LEVEL_CLUSTER_DIRECTORY);
2:9d44881:   }
1:9d44881:   
1:9d44881:   /**
1:9d44881:    * The output of top level clusters is post processed and kept in this path.
1:9d44881:    * 
1:9d44881:    * @param outputPathProvidedByUser
1:9d44881:    *          the output path of clustering.
1:9d44881:    * @return the path where the output of top level cluster post processor is kept.
1:9d44881:    */
1:9d44881:   public static Path getClusterPostProcessorOutputDirectory(Path outputPathProvidedByUser) {
1:564c3e1:     return new Path(outputPathProvidedByUser + File.separator + POST_PROCESS_DIRECTORY);
1:9d44881:   }
1:9d44881:   
1:9d44881:   /**
1:9d44881:    * The top level clustered points before post processing is generated here.
1:9d44881:    * 
1:9d44881:    * @param output
1:9d44881:    *          the output path of clustering.
1:9d44881:    * @return the clustered points directory
1:9d44881:    */
1:9d44881:   public static Path getClusterOutputClusteredPoints(Path output) {
1:564c3e1:     return new Path(output + File.separator + CLUSTERED_POINTS_DIRECTORY + File.separator, "*");
1:9d44881:   }
1:9d44881:   
1:9d44881:   /**
1:9d44881:    * Each cluster produced by top level clustering is processed in output/"bottomLevelCluster"/clusterId.
1:9d44881:    * 
1:9d44881:    * @param output
1:9d44881:    * @param clusterId
1:9d44881:    * @return the bottom level clustering path.
1:9d44881:    */
1:9d44881:   public static Path getBottomLevelClusterPath(Path output, String clusterId) {
1:564c3e1:     return new Path(output + File.separator + BOTTOM_LEVEL_CLUSTER_DIRECTORY + File.separator + clusterId);
1:9d44881:   }
1:9d44881:   
1:9d44881:   /**
1:9d44881:    * Each clusters path name is its clusterId. The vectors reside in separate files inside it.
1:9d44881:    * 
1:9d44881:    * @param clusterPostProcessorOutput
1:9d44881:    *          the path of cluster post processor output.
1:9d44881:    * @param clusterId
1:9d44881:    *          the id of the cluster.
1:9d44881:    * @return the cluster path for cluster id.
1:9d44881:    */
1:9d44881:   public static Path getClusterPathForClusterId(Path clusterPostProcessorOutput, String clusterId) {
1:9d44881:     return new Path(clusterPostProcessorOutput + File.separator + clusterId);
1:4841efb:   }
1:9d44881:   
1:9d44881: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:4841efb
/////////////////////////////////////////////////////////////////////////
1: }
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:564c3e1
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public final class PathDirectory {
1: 
1:   public static final String TOP_LEVEL_CLUSTER_DIRECTORY = "topLevelCluster";
1:   public static final String POST_PROCESS_DIRECTORY = "clusterPostProcessed";
1:   public static final String CLUSTERED_POINTS_DIRECTORY = "clusteredPoints";
1:   public static final String BOTTOM_LEVEL_CLUSTER_DIRECTORY = "bottomLevelCluster";
1: 
1:   private PathDirectory() {
1:   }
1: 
/////////////////////////////////////////////////////////////////////////
1:     return new Path(output + File.separator + TOP_LEVEL_CLUSTER_DIRECTORY);
/////////////////////////////////////////////////////////////////////////
1:     return new Path(outputPathProvidedByUser + File.separator + POST_PROCESS_DIRECTORY);
/////////////////////////////////////////////////////////////////////////
1:     return new Path(output + File.separator + CLUSTERED_POINTS_DIRECTORY + File.separator, "*");
/////////////////////////////////////////////////////////////////////////
1:     return new Path(output + File.separator + BOTTOM_LEVEL_CLUSTER_DIRECTORY + File.separator + clusterId);
author:Jeff Eastman
-------------------------------------------------------------------------------
commit:9d44881
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.clustering.topdown;
1: 
0: import static org.apache.mahout.clustering.topdown.TopDownClusteringPathConstants.bottomLevelClusterDirectory;
0: import static org.apache.mahout.clustering.topdown.TopDownClusteringPathConstants.clusteredPointsDirectory;
0: import static org.apache.mahout.clustering.topdown.TopDownClusteringPathConstants.postProcessDirectory;
0: import static org.apache.mahout.clustering.topdown.TopDownClusteringPathConstants.topLevelClusterDirectory;
1: 
1: import java.io.File;
1: 
1: import org.apache.hadoop.fs.Path;
1: 
1: /**
1:  * Contains list of all internal paths used in top down clustering.
1:  */
0: public class PathDirectory {
1:   
1:   /**
1:    * All output of top level clustering is stored in output directory/topLevelCluster.
1:    * 
1:    * @param output
1:    *          the output path of clustering.
1:    * @return The top level Cluster Directory.
1:    */
1:   public static Path getTopLevelClusterPath(Path output) {
0:     return new Path(output + File.separator + topLevelClusterDirectory);
1:   }
1:   
1:   /**
1:    * The output of top level clusters is post processed and kept in this path.
1:    * 
1:    * @param outputPathProvidedByUser
1:    *          the output path of clustering.
1:    * @return the path where the output of top level cluster post processor is kept.
1:    */
1:   public static Path getClusterPostProcessorOutputDirectory(Path outputPathProvidedByUser) {
0:     return new Path(outputPathProvidedByUser + File.separator + postProcessDirectory);
1:   }
1:   
1:   /**
1:    * The top level clustered points before post processing is generated here.
1:    * 
1:    * @param output
1:    *          the output path of clustering.
1:    * @return the clustered points directory
1:    */
1:   public static Path getClusterOutputClusteredPoints(Path output) {
0:     return new Path(output + File.separator + clusteredPointsDirectory + File.separator, "*");
1:   }
1:   
1:   /**
1:    * Each cluster produced by top level clustering is processed in output/"bottomLevelCluster"/clusterId.
1:    * 
1:    * @param output
1:    * @param clusterId
1:    * @return the bottom level clustering path.
1:    */
1:   public static Path getBottomLevelClusterPath(Path output, String clusterId) {
0:     return new Path(output + File.separator + bottomLevelClusterDirectory + File.separator + clusterId);
1:   }
1:   
1:   /**
1:    * Each clusters path name is its clusterId. The vectors reside in separate files inside it.
1:    * 
1:    * @param clusterPostProcessorOutput
1:    *          the path of cluster post processor output.
1:    * @param clusterId
1:    *          the id of the cluster.
1:    * @return the cluster path for cluster id.
1:    */
1:   public static Path getClusterPathForClusterId(Path clusterPostProcessorOutput, String clusterId) {
1:     return new Path(clusterPostProcessorOutput + File.separator + clusterId);
1:   }
1:   
1: }
============================================================================