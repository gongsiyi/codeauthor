1:9bd4f80: /**
1:9bd4f80:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:9bd4f80:  * contributor license agreements.  See the NOTICE file distributed with
1:9bd4f80:  * this work for additional information regarding copyright ownership.
1:9bd4f80:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:9bd4f80:  * (the "License"); you may not use this file except in compliance with
1:9bd4f80:  * the License.  You may obtain a copy of the License at
1:9bd4f80:  *
1:9bd4f80:  *     http://www.apache.org/licenses/LICENSE-2.0
1:9bd4f80:  *
1:9bd4f80:  * Unless required by applicable law or agreed to in writing, software
1:9bd4f80:  * distributed under the License is distributed on an "AS IS" BASIS,
1:9bd4f80:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9bd4f80:  * See the License for the specific language governing permissions and
1:9bd4f80:  * limitations under the License.
1:9bd4f80:  */
1:9bd4f80: 
1:9bd4f80: package org.apache.mahout.cf.taste.impl.similarity;
1:9bd4f80: 
1:9bd4f80: import org.apache.mahout.cf.taste.impl.common.Cache;
1:9bd4f80: import org.apache.mahout.common.LongPair;
1:9bd4f80: 
1:9bd4f80: /**
1:9bd4f80:  * A {@link Cache.MatchPredicate} which will match an ID against either element of a
1:9bd4f80:  * {@link LongPair}.
1:9bd4f80:  */
1:9bd4f80: final class LongPairMatchPredicate implements Cache.MatchPredicate<LongPair> {
1:9bd4f80: 
1:9bd4f80:   private final long id;
1:9bd4f80: 
1:9bd4f80:   LongPairMatchPredicate(long id) {
1:9bd4f80:     this.id = id;
1:9bd4f80:   }
1:9bd4f80: 
1:9bd4f80:   @Override
1:9bd4f80:   public boolean matches(LongPair pair) {
1:9bd4f80:     return pair.getFirst() == id || pair.getSecond() == id;
1:9bd4f80:   }
1:9bd4f80: 
1:9bd4f80: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:9bd4f80
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.cf.taste.impl.similarity;
1: 
1: import org.apache.mahout.cf.taste.impl.common.Cache;
1: import org.apache.mahout.common.LongPair;
1: 
1: /**
1:  * A {@link Cache.MatchPredicate} which will match an ID against either element of a
1:  * {@link LongPair}.
1:  */
1: final class LongPairMatchPredicate implements Cache.MatchPredicate<LongPair> {
1: 
1:   private final long id;
1: 
1:   LongPairMatchPredicate(long id) {
1:     this.id = id;
1:   }
1: 
1:   @Override
1:   public boolean matches(LongPair pair) {
1:     return pair.getFirst() == id || pair.getSecond() == id;
1:   }
1: 
1: }
============================================================================