1:a28cf1d: /**
1:a28cf1d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a28cf1d:  * contributor license agreements.  See the NOTICE file distributed with
1:a28cf1d:  * this work for additional information regarding copyright ownership.
1:a28cf1d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a28cf1d:  * (the "License"); you may not use this file except in compliance with
1:a28cf1d:  * the License.  You may obtain a copy of the License at
1:a28cf1d:  *
1:a28cf1d:  *     http://www.apache.org/licenses/LICENSE-2.0
1:a28cf1d:  *
1:a28cf1d:  * Unless required by applicable law or agreed to in writing, software
1:a28cf1d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a28cf1d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a28cf1d:  * See the License for the specific language governing permissions and
1:a28cf1d:  * limitations under the License.
1:a28cf1d:  */
1:8d102ea: package org.apache.mahout.clustering.iterator;
1:a28cf1d: 
1:a28cf1d: import java.io.DataInput;
1:a28cf1d: import java.io.DataOutput;
1:a28cf1d: import java.io.IOException;
1:a28cf1d: 
1:a28cf1d: import org.apache.hadoop.io.Writable;
1:a28cf1d: import org.apache.mahout.classifier.sgd.PolymorphicWritable;
1:a28cf1d: 
1:a28cf1d: public class ClusteringPolicyWritable implements Writable {
1:a28cf1d:   
1:a28cf1d:   private ClusteringPolicy value;
1:a28cf1d:   
1:a28cf1d:   public ClusteringPolicyWritable(ClusteringPolicy policy) {
1:a28cf1d:     this.value = policy;
1:a28cf1d:   }
1:a28cf1d: 
1:a28cf1d:   public ClusteringPolicyWritable() {
1:a28cf1d:   }
1:a28cf1d: 
1:a28cf1d:   public ClusteringPolicy getValue() {
1:a28cf1d:     return value;
1:a28cf1d:   }
1:a28cf1d:   
1:a28cf1d:   public void setValue(ClusteringPolicy value) {
1:a28cf1d:     this.value = value;
1:a28cf1d:   }
1:a28cf1d:   
1:a28cf1d:   @Override
1:a28cf1d:   public void write(DataOutput out) throws IOException {
1:a28cf1d:     PolymorphicWritable.write(out, value);
1:a28cf1d:   }
1:a28cf1d:   
1:a28cf1d:   @Override
1:a28cf1d:   public void readFields(DataInput in) throws IOException {
1:a28cf1d:     value = PolymorphicWritable.read(in, ClusteringPolicy.class);
1:a28cf1d:   }
1:a28cf1d:   
1:a28cf1d: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Jeff Eastman
-------------------------------------------------------------------------------
commit:8d102ea
/////////////////////////////////////////////////////////////////////////
1: package org.apache.mahout.clustering.iterator;
commit:a28cf1d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.mahout.clustering;
1: 
1: import java.io.DataInput;
1: import java.io.DataOutput;
1: import java.io.IOException;
1: 
1: import org.apache.hadoop.io.Writable;
1: import org.apache.mahout.classifier.sgd.PolymorphicWritable;
1: 
1: public class ClusteringPolicyWritable implements Writable {
1:   
1:   private ClusteringPolicy value;
1:   
1:   public ClusteringPolicyWritable(ClusteringPolicy policy) {
1:     this.value = policy;
1:   }
1: 
1:   public ClusteringPolicyWritable() {
1:   }
1: 
1:   public ClusteringPolicy getValue() {
1:     return value;
1:   }
1:   
1:   public void setValue(ClusteringPolicy value) {
1:     this.value = value;
1:   }
1:   
1:   @Override
1:   public void write(DataOutput out) throws IOException {
1:     PolymorphicWritable.write(out, value);
1:   }
1:   
1:   @Override
1:   public void readFields(DataInput in) throws IOException {
1:     value = PolymorphicWritable.read(in, ClusteringPolicy.class);
1:   }
1:   
1: }
============================================================================