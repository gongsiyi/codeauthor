1:e3fb0c4: /**
1:e3fb0c4:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e3fb0c4:  * contributor license agreements.  See the NOTICE file distributed with
1:e3fb0c4:  * this work for additional information regarding copyright ownership.
1:e3fb0c4:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e3fb0c4:  * (the "License"); you may not use this file except in compliance with
1:e3fb0c4:  * the License.  You may obtain a copy of the License at
1:e3fb0c4:  *
1:e3fb0c4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:e3fb0c4:  *
1:e3fb0c4:  * Unless required by applicable law or agreed to in writing, software
1:e3fb0c4:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e3fb0c4:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e3fb0c4:  * See the License for the specific language governing permissions and
1:e3fb0c4:  * limitations under the License.
1:e3fb0c4:  */
1:e3fb0c4: 
1:e3fb0c4: package org.apache.mahout.classifier.naivebayes.training;
1:e3fb0c4: 
1:e3fb0c4: import org.apache.hadoop.io.IntWritable;
1:e3fb0c4: import org.apache.hadoop.io.Text;
1:e3fb0c4: import org.apache.hadoop.mapreduce.Mapper;
1:e3fb0c4: import org.apache.mahout.common.MahoutTestCase;
1:e3fb0c4: import org.apache.mahout.math.DenseVector;
1:e3fb0c4: import org.apache.mahout.math.Vector;
1:e3fb0c4: import org.apache.mahout.math.VectorWritable;
1:e3fb0c4: import org.easymock.EasyMock;
1:e3fb0c4: import org.junit.Test;
1:e3fb0c4: 
1:e3fb0c4: public class WeightsMapperTest extends MahoutTestCase {
1:e3fb0c4: 
1:e3fb0c4:   @Test
1:e3fb0c4:   public void scores() throws Exception {
1:e3fb0c4: 
1:e3fb0c4:     Mapper.Context ctx = EasyMock.createMock(Mapper.Context.class);
1:e3fb0c4:     Vector instance1 = new DenseVector(new double[] { 1, 0,   0.5, 0.5, 0 });
1:e3fb0c4:     Vector instance2 = new DenseVector(new double[] { 0, 0.5, 0,   0,   0 });
1:e3fb0c4:     Vector instance3 = new DenseVector(new double[] { 1, 0.5, 1,   1.5, 1 });
1:e3fb0c4: 
1:e3fb0c4:     Vector weightsPerLabel = new DenseVector(new double[] { 0, 0 });
1:e3fb0c4: 
1:e3fb0c4:     ctx.write(new Text(TrainNaiveBayesJob.WEIGHTS_PER_FEATURE),
1:e3fb0c4:         new VectorWritable(new DenseVector(new double[] { 2, 1, 1.5, 2, 1 })));
1:e3fb0c4:     ctx.write(new Text(TrainNaiveBayesJob.WEIGHTS_PER_LABEL),
1:e3fb0c4:         new VectorWritable(new DenseVector(new double[] { 2.5, 5 })));
1:e3fb0c4: 
1:e3fb0c4:     EasyMock.replay(ctx);
1:e3fb0c4: 
1:e3fb0c4:     WeightsMapper weights = new WeightsMapper();
1:e3fb0c4:     setField(weights, "weightsPerLabel", weightsPerLabel);
1:e3fb0c4: 
1:e3fb0c4:     weights.map(new IntWritable(0), new VectorWritable(instance1), ctx);
1:e3fb0c4:     weights.map(new IntWritable(0), new VectorWritable(instance2), ctx);
1:e3fb0c4:     weights.map(new IntWritable(1), new VectorWritable(instance3), ctx);
1:e3fb0c4: 
1:e3fb0c4:     weights.cleanup(ctx);
1:e3fb0c4: 
1:e3fb0c4:     EasyMock.verify(ctx);
1:e3fb0c4:   }
1:e3fb0c4: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:e3fb0c4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.classifier.naivebayes.training;
1: 
1: import org.apache.hadoop.io.IntWritable;
1: import org.apache.hadoop.io.Text;
1: import org.apache.hadoop.mapreduce.Mapper;
1: import org.apache.mahout.common.MahoutTestCase;
1: import org.apache.mahout.math.DenseVector;
1: import org.apache.mahout.math.Vector;
1: import org.apache.mahout.math.VectorWritable;
1: import org.easymock.EasyMock;
1: import org.junit.Test;
1: 
1: public class WeightsMapperTest extends MahoutTestCase {
1: 
1:   @Test
1:   public void scores() throws Exception {
1: 
1:     Mapper.Context ctx = EasyMock.createMock(Mapper.Context.class);
1:     Vector instance1 = new DenseVector(new double[] { 1, 0,   0.5, 0.5, 0 });
1:     Vector instance2 = new DenseVector(new double[] { 0, 0.5, 0,   0,   0 });
1:     Vector instance3 = new DenseVector(new double[] { 1, 0.5, 1,   1.5, 1 });
1: 
1:     Vector weightsPerLabel = new DenseVector(new double[] { 0, 0 });
1: 
1:     ctx.write(new Text(TrainNaiveBayesJob.WEIGHTS_PER_FEATURE),
1:         new VectorWritable(new DenseVector(new double[] { 2, 1, 1.5, 2, 1 })));
1:     ctx.write(new Text(TrainNaiveBayesJob.WEIGHTS_PER_LABEL),
1:         new VectorWritable(new DenseVector(new double[] { 2.5, 5 })));
1: 
1:     EasyMock.replay(ctx);
1: 
1:     WeightsMapper weights = new WeightsMapper();
1:     setField(weights, "weightsPerLabel", weightsPerLabel);
1: 
1:     weights.map(new IntWritable(0), new VectorWritable(instance1), ctx);
1:     weights.map(new IntWritable(0), new VectorWritable(instance2), ctx);
1:     weights.map(new IntWritable(1), new VectorWritable(instance3), ctx);
1: 
1:     weights.cleanup(ctx);
1: 
1:     EasyMock.verify(ctx);
1:   }
1: }
============================================================================