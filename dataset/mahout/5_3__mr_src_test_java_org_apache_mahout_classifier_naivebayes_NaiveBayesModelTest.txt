1:515a414: /**
1:515a414:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:515a414:  * contributor license agreements.  See the NOTICE file distributed with
1:515a414:  * this work for additional information regarding copyright ownership.
1:515a414:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:515a414:  * (the "License"); you may not use this file except in compliance with
1:515a414:  * the License.  You may obtain a copy of the License at
1:515a414:  *
1:515a414:  *     http://www.apache.org/licenses/LICENSE-2.0
1:515a414:  *
1:515a414:  * Unless required by applicable law or agreed to in writing, software
1:515a414:  * distributed under the License is distributed on an "AS IS" BASIS,
1:515a414:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:515a414:  * See the License for the specific language governing permissions and
1:515a414:  * limitations under the License.
1:515a414:  */
2:515a414: 
1:515a414: package org.apache.mahout.classifier.naivebayes;
1:515a414: 
1:515a414: import org.junit.Test;
1:515a414: 
1:515a414: public class NaiveBayesModelTest extends NaiveBayesTestBase {
1:515a414:   
2:515a414:   @Test
1:515a414:   public void testRandomModelGeneration() {
1:515a414:     // make sure we generate a valid random model
1:9a5bab5:     NaiveBayesModel standardModel = getStandardModel();
1:515a414:     // check whether the model is valid
1:9a5bab5:     standardModel.validate();
1:9a5bab5:     
1:9a5bab5:     // same for Complementary
1:9a5bab5:     NaiveBayesModel complementaryModel = getComplementaryModel();
1:9a5bab5:     complementaryModel.validate();
2:515a414:   }
1:35032b8: 
1:515a414: }
============================================================================
author:pferrel
-------------------------------------------------------------------------------
commit:b988c49
author:Sebastian Schelter
-------------------------------------------------------------------------------
commit:9a5bab5
/////////////////////////////////////////////////////////////////////////
1:     NaiveBayesModel standardModel = getStandardModel();
1:     standardModel.validate();
1:     
1:     // same for Complementary
1:     NaiveBayesModel complementaryModel = getComplementaryModel();
1:     complementaryModel.validate();
commit:e3fb0c4
/////////////////////////////////////////////////////////////////////////
0:     model.validate();
author:frankscholten
-------------------------------------------------------------------------------
commit:1a42d85
author:Sean R. Owen
-------------------------------------------------------------------------------
commit:35032b8
/////////////////////////////////////////////////////////////////////////
1: 
author:Robin Anil
-------------------------------------------------------------------------------
commit:515a414
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.mahout.classifier.naivebayes;
1: 
1: import org.junit.Test;
1: 
1: public class NaiveBayesModelTest extends NaiveBayesTestBase {
1:   
1:   @Test
1:   public void testRandomModelGeneration() {
1:     // make sure we generate a valid random model
0:     NaiveBayesModel model = getModel();
1:     // check whether the model is valid
0:     NaiveBayesModel.validate(model);
1:   }
1:   
1:   @Test
0:   public void testSerialization() {
0:     String serialized = getModel().toJson();
0:     NaiveBayesModel model2 = NaiveBayesModel.fromJson(serialized);
0:     String serialized2 = model2.toJson();
0:     // since there are no equals methods for the underlying objects, we
0:     // check identity via the serialization string
0:     assertEquals(serialized, serialized2);
1:   }  
1: }
============================================================================