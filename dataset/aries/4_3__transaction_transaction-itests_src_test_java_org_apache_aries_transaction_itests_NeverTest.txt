1:5c15102: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:5c15102:  *  contributor license agreements.  See the NOTICE file distributed with
1:5c15102:  *  this work for additional information regarding copyright ownership.
1:5c15102:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:5c15102:  *  (the "License"); you may not use this file except in compliance with
1:5c15102:  *  the License.  You may obtain a copy of the License at
1:5c15102:  *
1:5c15102:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5c15102:  *
1:5c15102:  *  Unless required by applicable law or agreed to in writing, software
1:5c15102:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:5c15102:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5c15102:  *  See the License for the specific language governing permissions and
1:5c15102:  *  limitations under the License.
1:5c15102:  */
1:5c15102: package org.apache.aries.transaction.itests;
1:5d2c3a1: 
1:febc5c2: import javax.inject.Inject;
11:5c15102: 
1:5c15102: import org.apache.aries.transaction.test.TestBean;
1:5c15102: import org.junit.Test;
1:febc5c2: import org.ops4j.pax.exam.util.Filter;
1:5c15102: 
1:bd98451: public class NeverTest extends AbstractIntegrationTest {
1:70e39b6:     @Inject
1:70e39b6:     @Filter("(tranAttribute=Never)")
1:febc5c2:     TestBean bean;
1:5c15102: 
1:a44e725:     /**
1:a44e725:      * Test with client transaction - an exception is thrown because transactions are not allowed
1:a44e725:      * @throws Exception
1:a44e725:      */
1:70e39b6:     @Test
1:a44e725:     public void testInsertFails() throws Exception {
1:a44e725:         clientTransaction = true;
1:a44e725:         assertInsertFails();
1:a44e725:     }
1:a44e725:     
1:a44e725:     @Test
1:a44e725:     public void testDelegateInsertFails() throws Exception {
1:a44e725:         clientTransaction = false;
1:a44e725:         assertDelegateInsertFails();
1:70e39b6:     }
1:70e39b6: 
1:70e39b6:     @Override
1:70e39b6:     protected TestBean getBean() {
1:70e39b6:         return bean;
1:70e39b6:     }
1:70e39b6: 
4:5c15102: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:bd98451
/////////////////////////////////////////////////////////////////////////
1: public class NeverTest extends AbstractIntegrationTest {
commit:a44e725
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Test with client transaction - an exception is thrown because transactions are not allowed
1:      * @throws Exception
1:      */
1:     public void testInsertFails() throws Exception {
1:         clientTransaction = true;
1:         assertInsertFails();
1:     }
1:     
1:     @Test
1:     public void testDelegateInsertFails() throws Exception {
1:         clientTransaction = false;
1:         assertDelegateInsertFails();
commit:70e39b6
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     @Inject
1:     @Filter("(tranAttribute=Never)")
1:     @Test
0:     public void testNever() throws Exception {
0:         assertInsertWithTranFails();
0:         assertDelegatedInsertWithoutTranFails();
1:     }
1: 
1:     @Override
1:     protected TestBean getBean() {
1:         return bean;
1:     }
1: 
commit:febc5c2
/////////////////////////////////////////////////////////////////////////
1: import javax.inject.Inject;
1: import org.ops4j.pax.exam.util.Filter;
0:     @Inject @Filter("(tranAttribute=Never)") 
1:     TestBean bean;
author:Daniel Kulp
-------------------------------------------------------------------------------
commit:5d2c3a1
/////////////////////////////////////////////////////////////////////////
1:   
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:86224ba
/////////////////////////////////////////////////////////////////////////
0:       TestBean bean = context().getService(TestBean.class, "(tranAttribute=Never)");
0:       UserTransaction tran = context().getService(UserTransaction.class);
commit:5c15102
/////////////////////////////////////////////////////////////////////////
1: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.transaction.itests;
1: 
0: import static org.junit.Assert.assertTrue;
0: import static org.junit.Assert.fail;
1: 
0: import javax.transaction.UserTransaction;
1: 
1: import org.apache.aries.transaction.test.TestBean;
1: import org.junit.Test;
1: 
0: public class NeverTranStrategyTest extends AbstractIntegrationTest {
1:   
0:   @Test
0:   public void testNever() throws Exception {
0:       TestBean bean = getOsgiService(TestBean.class, "(tranStrategy=Never)", DEFAULT_TIMEOUT);
0:       UserTransaction tran = getOsgiService(UserTransaction.class);
1:       
0:       //Test with client transaction - an exception is thrown because transactions are not allowed
0:       int initialRows = bean.countRows();
1:       
0:       tran.begin();
1:       
0:       try {
0:           bean.insertRow("testWithClientTran", 1);
0:           fail("IllegalStateException not thrown");
0:       } catch (IllegalStateException e) {
0:           e.printStackTrace();
1:       }
1:       
0:       tran.commit();
1:       
0:       int finalRows = bean.countRows();
0:       assertTrue("Initial rows: " + initialRows + ", Final rows: " + finalRows, finalRows - initialRows == 0);
1:       
0:       //Test without client transaction - the insert fails because the bean delegates to another
0:       //bean with a transaction strategy of Mandatory, and no transaction is available
0:       initialRows = bean.countRows();
1: 
0:       try {
0:           bean.insertRow("testWithoutClientTran", 1, true);
0:           fail("Exception not thrown");
0:       } catch (Exception e) {
0:           e.printStackTrace();
1:       }
1:       
0:       finalRows = bean.countRows();
0:       assertTrue("Initial rows: " + initialRows + ", Final rows: " + finalRows, finalRows - initialRows == 0);
1:   }
1: }
author:Lin Sun
-------------------------------------------------------------------------------
commit:bb00f0a
/////////////////////////////////////////////////////////////////////////
0: public class NeverTranAttributeTest extends AbstractIntegrationTest {
0:       TestBean bean = getOsgiService(TestBean.class, "(tranAttribute=Never)", DEFAULT_TIMEOUT);
commit:e5f3248
/////////////////////////////////////////////////////////////////////////
0:           fail("IllegalStateException not thrown");
0:       } catch (IllegalStateException e) {
============================================================================