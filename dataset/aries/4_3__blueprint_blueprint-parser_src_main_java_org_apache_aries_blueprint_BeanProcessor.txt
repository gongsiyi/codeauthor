1:f13c6ac: /**
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint;
1:f13c6ac: 
1:aa58216: import org.osgi.service.blueprint.reflect.BeanMetadata;
1:aa58216: 
1:f13c6ac: /**
1:f13c6ac:  * TODO: javadoc
1:f13c6ac:  *
1:f13c6ac:  * Processors must be advertized as being such.  This can be done by using
1:f13c6ac:  * the custom attribtue defined in the extension schema.
1:f13c6ac:  * <pre>
1:f13c6ac:  *    &lt;bp:bean ext:role="processor" ...&gt;
1:f13c6ac:  * </pre>
1:f13c6ac:  *
1:76b662a:  * @version $Rev$, $Date$
1:f13c6ac:  */
1:f13c6ac: public interface BeanProcessor extends Processor {
1:f13c6ac: 
1:aa58216:     /**
1:aa58216:      * Interface from which a BeanProcessor can obtain another bean.
1:aa58216:      */
1:aa58216:     interface BeanCreator {
1:aa58216:         /**
1:aa58216:          * Obtains a new instance of the Bean this BeanProcessor handled. <br>
1:aa58216:          * New instances have been processed by the same chain of BeanProcessors
1:aa58216:          * that the original Bean had been. 
1:aa58216:          * @return new instance of bean.
1:aa58216:          */
1:aa58216:         Object getBean();
1:aa58216:     }    
1:aa58216:     
1:aa58216:     Object beforeInit(Object bean, String beanName, BeanCreator beanCreator, BeanMetadata beanData);
1:f13c6ac: 
1:aa58216:     Object afterInit(Object bean, String beanName, BeanCreator beanCreator, BeanMetadata beanData);
1:f13c6ac: 
1:f13c6ac:     void beforeDestroy(Object bean, String beanName);
1:f13c6ac: 
1:f13c6ac:     void afterDestroy(Object bean, String beanName);
1:f13c6ac: 
1:f13c6ac: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:09a7647
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:76b662a
/////////////////////////////////////////////////////////////////////////
1:  * @version $Rev$, $Date$
commit:de68801
/////////////////////////////////////////////////////////////////////////
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint;
author:Andrew Osborne
-------------------------------------------------------------------------------
commit:aa58216
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.service.blueprint.reflect.BeanMetadata;
1: 
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Interface from which a BeanProcessor can obtain another bean.
1:      */
1:     interface BeanCreator {
1:         /**
1:          * Obtains a new instance of the Bean this BeanProcessor handled. <br>
1:          * New instances have been processed by the same chain of BeanProcessors
1:          * that the original Bean had been. 
1:          * @return new instance of bean.
1:          */
1:         Object getBean();
1:     }    
1:     
1:     Object beforeInit(Object bean, String beanName, BeanCreator beanCreator, BeanMetadata beanData);
1:     Object afterInit(Object bean, String beanName, BeanCreator beanCreator, BeanMetadata beanData);
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint;
1: 
1: /**
1:  * TODO: javadoc
1:  *
1:  * Processors must be advertized as being such.  This can be done by using
1:  * the custom attribtue defined in the extension schema.
1:  * <pre>
1:  *    &lt;bp:bean ext:role="processor" ...&gt;
1:  * </pre>
1:  *
0:  * @author <a href="mailto:dev@geronimo.apache.org">Apache Geronimo Project</a>
0:  * @version $Rev: 766508 $, $Date: 2009-04-19 22:09:27 +0200 (Sun, 19 Apr 2009) $
1:  */
1: public interface BeanProcessor extends Processor {
1: 
0:     Object beforeInit(Object bean, String beanName);
1: 
0:     Object afterInit(Object bean, String beanName);
1: 
1:     void beforeDestroy(Object bean, String beanName);
1: 
1:     void afterDestroy(Object bean, String beanName);
1: 
1: }
============================================================================