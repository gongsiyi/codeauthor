1:e9f9bca: package org.apache.aries.subsystem.scope.itests;
1:e9f9bca: 
1:e9f9bca: import static org.junit.Assert.assertFalse;
1:e9f9bca: import static org.junit.Assert.assertNotNull;
1:e9f9bca: import static org.junit.Assert.assertTrue;
1:e9f9bca: 
1:e9f9bca: import java.net.URL;
1:e9f9bca: import java.util.Arrays;
1:e9f9bca: 
1:e9f9bca: import org.apache.aries.subsystem.scope.InstallInfo;
1:e9f9bca: import org.apache.aries.subsystem.scope.ScopeUpdate;
1:e9f9bca: import org.junit.Test;
1:e9f9bca: import org.osgi.framework.Bundle;
1:e9f9bca: import org.osgi.framework.wiring.FrameworkWiring;
1:e9f9bca: 
1:e9f9bca: public class SharePolicyTest extends AbstractTest {
1:e9f9bca: 	/**
1:e9f9bca: 	 * Bundle tb5
1:e9f9bca: 	 * Bundle tb6
1:e9f9bca: 	 * tb5 imports package exported by tb6
1:e9f9bca: 	 * tb5 and tb6 in same scope
1:e9f9bca: 	 * tb5 should resolve
1:e9f9bca: 	 * 
1:e9f9bca: 	 * Share policies have no effect within the same scope.
1:e9f9bca: 	 * 
1:e9f9bca: 	 * @throws Exception
1:e9f9bca: 	 */
1:e9f9bca: 	@Test
1:e9f9bca: 	public void test1() throws Exception {
1:e9f9bca: 		Bundle tb5 = null;
1:e9f9bca: 		Bundle tb6 = null;
1:e9f9bca: 		try {
1:e9f9bca: 			String tb5Location = getBundleLocation("tb-5.jar");
1:e9f9bca: 			String tb6Location = getBundleLocation("tb-6.jar");
1:e9f9bca: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1:e9f9bca: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
1:6f4b079: 			ScopeUpdate scopeUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			scopeUpdate.getBundlesToInstall().add(tb5Info);
1:e9f9bca: 			scopeUpdate.commit();
1:e9f9bca: 			tb5 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb5");
1:e9f9bca: 			assertNotNull(tb5);
1:e9f9bca: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1:e9f9bca: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
1:6f4b079: 			scopeUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			scopeUpdate.getBundlesToInstall().add(tb6Info);
1:e9f9bca: 			scopeUpdate.commit();
1:e9f9bca: 			tb6 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb6");
1:e9f9bca: 			assertNotNull(tb6);
1:e9f9bca: 			assertTrue(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1:e9f9bca: 		}
1:e9f9bca: 		finally {
1:e9f9bca: 			uninstallQuietly(tb6);
1:e9f9bca: 			uninstallQuietly(tb5);
1:e9f9bca: 		}
1:e9f9bca: 	}
1:e9f9bca: 	
1:e9f9bca: 	/**
1:e9f9bca: 	 * Bundle tb5
1:e9f9bca: 	 * Bundle tb6
1:e9f9bca: 	 * tb5 imports package exported by tb6
1:e9f9bca: 	 * tb5 in root scope
1:e9f9bca: 	 * tb6 in child scope of root
1:e9f9bca: 	 * tb6 scope does not export tb6 package
1:e9f9bca: 	 * tb5 should not resolve
1:e9f9bca: 	 * @throws Exception
1:e9f9bca: 	 */
1:e9f9bca: 	@Test
1:e9f9bca: 	public void test2() throws Exception {
1:e9f9bca: 		Bundle tb5 = null;
1:e9f9bca: 		Bundle tb6 = null;
1:e9f9bca: 		try {
1:e9f9bca: 			String tb5Location = getBundleLocation("tb-5.jar");
1:e9f9bca: 			String tb6Location = getBundleLocation("tb-6.jar");
1:e9f9bca: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1:e9f9bca: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
1:6f4b079: 			ScopeUpdate scopeUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			scopeUpdate.getBundlesToInstall().add(tb5Info);
1:e9f9bca: 			scopeUpdate.commit();
1:e9f9bca: 			tb5 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb5");
1:e9f9bca: 			assertNotNull(tb5);
1:e9f9bca: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1:e9f9bca: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
1:6f4b079: 			scopeUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			ScopeUpdate tb6ScopeUpdate = scopeUpdate.newChild("tb6");
1:e9f9bca: 			scopeUpdate.getChildren().add(tb6ScopeUpdate);
1:e9f9bca: 			tb6ScopeUpdate.getBundlesToInstall().add(tb6Info);
1:e9f9bca: 			scopeUpdate.commit();
1:e9f9bca: 			tb6 = findBundle("org.apache.aries.subsystem.scope.itests.tb6", tb6ScopeUpdate.getScope());
1:e9f9bca: 			assertNotNull(tb6);
1:e9f9bca: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1:e9f9bca: 		}
1:e9f9bca: 		finally {
1:e9f9bca: 			uninstallQuietly(tb6);
1:e9f9bca: 			uninstallQuietly(tb5);
1:e9f9bca: 		}
1:e9f9bca: 	}
1:e9f9bca: 	
1:e9f9bca: 	/**
1:e9f9bca: 	 * Bundle tb5
1:e9f9bca: 	 * Bundle tb6
1:e9f9bca: 	 * tb5 imports package exported by tb6
1:e9f9bca: 	 * tb5 in root scope
1:e9f9bca: 	 * tb6 in child scope of root
1:e9f9bca: 	 * tb6 scope exports tb6 package
1:e9f9bca: 	 * tb5 should resolve
1:e9f9bca: 	 * 
1:e9f9bca: 	 * There is an implicit import between parent and child. In other words,
1:e9f9bca: 	 * anything exported by a child is automatically available without the
1:e9f9bca: 	 * parent explicitly importing it.
1:e9f9bca: 	 * 
1:e9f9bca: 	 * @throws Exception
1:e9f9bca: 	 */
1:e9f9bca: 	@Test
1:e9f9bca: 	public void test3() throws Exception {
1:e9f9bca: 		Bundle tb5 = null;
1:e9f9bca: 		Bundle tb6 = null;
1:e9f9bca: 		try {
1:e9f9bca: 			String tb5Location = getBundleLocation("tb-5.jar");
1:e9f9bca: 			String tb6Location = getBundleLocation("tb-6.jar");
1:e9f9bca: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1:e9f9bca: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
1:6f4b079: 			ScopeUpdate scopeUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			scopeUpdate.getBundlesToInstall().add(tb5Info);
1:e9f9bca: 			scopeUpdate.commit();
1:e9f9bca: 			tb5 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb5");
1:e9f9bca: 			assertNotNull(tb5);
1:e9f9bca: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1:e9f9bca: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
1:6f4b079: 			scopeUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			ScopeUpdate tb6ScopeUpdate = scopeUpdate.newChild("tb6");
1:e9f9bca: 			scopeUpdate.getChildren().add(tb6ScopeUpdate);
1:e9f9bca: 			tb6ScopeUpdate.getBundlesToInstall().add(tb6Info);
1:e9f9bca: 			addPackageExportPolicy("org.apache.aries.subsystem.scope.itests.tb6", tb6ScopeUpdate);
1:e9f9bca: 			scopeUpdate.commit();
1:e9f9bca: 			tb6 = findBundle("org.apache.aries.subsystem.scope.itests.tb6", tb6ScopeUpdate.getScope());
1:e9f9bca: 			assertNotNull(tb6);
1:e9f9bca: 			tb5.start();
1:e9f9bca: 			assertTrue(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1:e9f9bca: 		}
1:e9f9bca: 		finally {
1:e9f9bca: 			uninstallQuietly(tb6);
1:e9f9bca: 			uninstallQuietly(tb5);
1:e9f9bca: 		}
1:e9f9bca: 	}
1:e9f9bca: 	
1:e9f9bca: 	/**
1:e9f9bca: 	 * Bundle tb5
1:e9f9bca: 	 * Bundle tb6
1:e9f9bca: 	 * tb5 imports package exported by tb6
1:e9f9bca: 	 * tb5 in child scope of root
1:e9f9bca: 	 * tb6 in different child scope of root
1:e9f9bca: 	 * tb6 scope exports tb6 package
1:e9f9bca: 	 * root scope exports tb6 package
1:e9f9bca: 	 * tb5 scope imports tb6 package
1:e9f9bca: 	 * tb5 should resolve
1:e9f9bca: 	 * 
1:e9f9bca: 	 * @throws Exception
1:e9f9bca: 	 */
1:e9f9bca: 	@Test
1:e9f9bca: 	public void test4() throws Exception {
1:e9f9bca: 		Bundle tb5 = null;
1:e9f9bca: 		Bundle tb6 = null;
1:e9f9bca: 		try {
1:e9f9bca: 			String tb5Location = getBundleLocation("tb-5.jar");
1:e9f9bca: 			String tb6Location = getBundleLocation("tb-6.jar");
1:e9f9bca: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1:e9f9bca: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
1:6f4b079: 			ScopeUpdate rootUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			addPackageExportPolicy("org.apache.aries.subsystem.scope.itests.tb6", rootUpdate);
1:e9f9bca: 			ScopeUpdate tb5Update = rootUpdate.newChild("tb5");
1:e9f9bca: 			rootUpdate.getChildren().add(tb5Update);
1:e9f9bca: 			tb5Update.getBundlesToInstall().add(tb5Info);
1:e9f9bca: 			addPackageImportPolicy("org.apache.aries.subsystem.scope.itests.tb6", tb5Update);
1:e9f9bca: 			rootUpdate.commit();
1:e9f9bca: 			tb5 = findBundle("org.apache.aries.subsystem.scope.itests.tb5", tb5Update.getScope());
1:e9f9bca: 			assertNotNull(tb5);
1:e9f9bca: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1:e9f9bca: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
1:6f4b079: 			rootUpdate = getScope().newScopeUpdate();
1:e9f9bca: 			ScopeUpdate tb6Update = rootUpdate.newChild("tb6");
1:e9f9bca: 			rootUpdate.getChildren().add(tb6Update);
1:e9f9bca: 			tb6Update.getBundlesToInstall().add(tb6Info);
1:e9f9bca: 			addPackageExportPolicy("org.apache.aries.subsystem.scope.itests.tb6", tb6Update);
1:e9f9bca: 			rootUpdate.commit();
1:e9f9bca: 			tb6 = findBundle("org.apache.aries.subsystem.scope.itests.tb6", tb6Update.getScope());
1:e9f9bca: 			assertNotNull(tb6);
1:e9f9bca: 			assertTrue(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1:e9f9bca: 		}
1:e9f9bca: 		finally {
1:e9f9bca: 			uninstallQuietly(tb6);
1:e9f9bca: 			uninstallQuietly(tb5);
1:e9f9bca: 		}
1:e9f9bca: 	}
1:e9f9bca: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:5bdb2b8
/////////////////////////////////////////////////////////////////////////
author:Graham Charters
-------------------------------------------------------------------------------
commit:6f4b079
/////////////////////////////////////////////////////////////////////////
1: 			ScopeUpdate scopeUpdate = getScope().newScopeUpdate();
1: 			scopeUpdate = getScope().newScopeUpdate();
/////////////////////////////////////////////////////////////////////////
1: 			ScopeUpdate scopeUpdate = getScope().newScopeUpdate();
1: 			scopeUpdate = getScope().newScopeUpdate();
/////////////////////////////////////////////////////////////////////////
1: 			ScopeUpdate scopeUpdate = getScope().newScopeUpdate();
1: 			scopeUpdate = getScope().newScopeUpdate();
/////////////////////////////////////////////////////////////////////////
1: 			ScopeUpdate rootUpdate = getScope().newScopeUpdate();
/////////////////////////////////////////////////////////////////////////
1: 			rootUpdate = getScope().newScopeUpdate();
commit:e9f9bca
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.scope.itests;
1: 
1: import static org.junit.Assert.assertFalse;
1: import static org.junit.Assert.assertNotNull;
1: import static org.junit.Assert.assertTrue;
1: 
1: import java.net.URL;
1: import java.util.Arrays;
1: 
1: import org.apache.aries.subsystem.scope.InstallInfo;
1: import org.apache.aries.subsystem.scope.ScopeUpdate;
1: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.wiring.FrameworkWiring;
1: 
0: @RunWith(JUnit4TestRunner.class)
1: public class SharePolicyTest extends AbstractTest {
1: 	/**
1: 	 * Bundle tb5
1: 	 * Bundle tb6
1: 	 * tb5 imports package exported by tb6
1: 	 * tb5 and tb6 in same scope
1: 	 * tb5 should resolve
1: 	 * 
1: 	 * Share policies have no effect within the same scope.
1: 	 * 
1: 	 * @throws Exception
1: 	 */
1: 	@Test
1: 	public void test1() throws Exception {
1: 		Bundle tb5 = null;
1: 		Bundle tb6 = null;
1: 		try {
1: 			String tb5Location = getBundleLocation("tb-5.jar");
1: 			String tb6Location = getBundleLocation("tb-6.jar");
1: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
0: 			ScopeUpdate scopeUpdate = scope.newScopeUpdate();
1: 			scopeUpdate.getBundlesToInstall().add(tb5Info);
1: 			scopeUpdate.commit();
1: 			tb5 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb5");
1: 			assertNotNull(tb5);
1: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
0: 			scopeUpdate = scope.newScopeUpdate();
1: 			scopeUpdate.getBundlesToInstall().add(tb6Info);
1: 			scopeUpdate.commit();
1: 			tb6 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb6");
1: 			assertNotNull(tb6);
1: 			assertTrue(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1: 		}
1: 		finally {
1: 			uninstallQuietly(tb6);
1: 			uninstallQuietly(tb5);
1: 		}
1: 	}
1: 	
1: 	/**
1: 	 * Bundle tb5
1: 	 * Bundle tb6
1: 	 * tb5 imports package exported by tb6
1: 	 * tb5 in root scope
1: 	 * tb6 in child scope of root
1: 	 * tb6 scope does not export tb6 package
1: 	 * tb5 should not resolve
1: 	 * @throws Exception
1: 	 */
1: 	@Test
1: 	public void test2() throws Exception {
1: 		Bundle tb5 = null;
1: 		Bundle tb6 = null;
1: 		try {
1: 			String tb5Location = getBundleLocation("tb-5.jar");
1: 			String tb6Location = getBundleLocation("tb-6.jar");
1: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
0: 			ScopeUpdate scopeUpdate = scope.newScopeUpdate();
1: 			scopeUpdate.getBundlesToInstall().add(tb5Info);
1: 			scopeUpdate.commit();
1: 			tb5 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb5");
1: 			assertNotNull(tb5);
1: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
0: 			scopeUpdate = scope.newScopeUpdate();
1: 			ScopeUpdate tb6ScopeUpdate = scopeUpdate.newChild("tb6");
1: 			scopeUpdate.getChildren().add(tb6ScopeUpdate);
1: 			tb6ScopeUpdate.getBundlesToInstall().add(tb6Info);
1: 			scopeUpdate.commit();
1: 			tb6 = findBundle("org.apache.aries.subsystem.scope.itests.tb6", tb6ScopeUpdate.getScope());
1: 			assertNotNull(tb6);
1: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1: 		}
1: 		finally {
1: 			uninstallQuietly(tb6);
1: 			uninstallQuietly(tb5);
1: 		}
1: 	}
1: 	
1: 	/**
1: 	 * Bundle tb5
1: 	 * Bundle tb6
1: 	 * tb5 imports package exported by tb6
1: 	 * tb5 in root scope
1: 	 * tb6 in child scope of root
1: 	 * tb6 scope exports tb6 package
1: 	 * tb5 should resolve
1: 	 * 
1: 	 * There is an implicit import between parent and child. In other words,
1: 	 * anything exported by a child is automatically available without the
1: 	 * parent explicitly importing it.
1: 	 * 
1: 	 * @throws Exception
1: 	 */
1: 	@Test
1: 	public void test3() throws Exception {
1: 		Bundle tb5 = null;
1: 		Bundle tb6 = null;
1: 		try {
1: 			String tb5Location = getBundleLocation("tb-5.jar");
1: 			String tb6Location = getBundleLocation("tb-6.jar");
1: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
0: 			ScopeUpdate scopeUpdate = scope.newScopeUpdate();
1: 			scopeUpdate.getBundlesToInstall().add(tb5Info);
1: 			scopeUpdate.commit();
1: 			tb5 = findBundleInRootScope("org.apache.aries.subsystem.scope.itests.tb5");
1: 			assertNotNull(tb5);
1: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
0: 			scopeUpdate = scope.newScopeUpdate();
1: 			ScopeUpdate tb6ScopeUpdate = scopeUpdate.newChild("tb6");
1: 			scopeUpdate.getChildren().add(tb6ScopeUpdate);
1: 			tb6ScopeUpdate.getBundlesToInstall().add(tb6Info);
1: 			addPackageExportPolicy("org.apache.aries.subsystem.scope.itests.tb6", tb6ScopeUpdate);
1: 			scopeUpdate.commit();
1: 			tb6 = findBundle("org.apache.aries.subsystem.scope.itests.tb6", tb6ScopeUpdate.getScope());
1: 			assertNotNull(tb6);
1: 			tb5.start();
1: 			assertTrue(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1: 		}
1: 		finally {
1: 			uninstallQuietly(tb6);
1: 			uninstallQuietly(tb5);
1: 		}
1: 	}
1: 	
1: 	/**
1: 	 * Bundle tb5
1: 	 * Bundle tb6
1: 	 * tb5 imports package exported by tb6
1: 	 * tb5 in child scope of root
1: 	 * tb6 in different child scope of root
1: 	 * tb6 scope exports tb6 package
1: 	 * root scope exports tb6 package
1: 	 * tb5 scope imports tb6 package
1: 	 * tb5 should resolve
1: 	 * 
1: 	 * @throws Exception
1: 	 */
1: 	@Test
1: 	public void test4() throws Exception {
1: 		Bundle tb5 = null;
1: 		Bundle tb6 = null;
1: 		try {
1: 			String tb5Location = getBundleLocation("tb-5.jar");
1: 			String tb6Location = getBundleLocation("tb-6.jar");
1: 			InstallInfo tb5Info = new InstallInfo(tb5Location, new URL(tb5Location));
1: 			InstallInfo tb6Info = new InstallInfo(tb6Location, new URL(tb6Location));
0: 			ScopeUpdate rootUpdate = scope.newScopeUpdate();
1: 			addPackageExportPolicy("org.apache.aries.subsystem.scope.itests.tb6", rootUpdate);
1: 			ScopeUpdate tb5Update = rootUpdate.newChild("tb5");
1: 			rootUpdate.getChildren().add(tb5Update);
1: 			tb5Update.getBundlesToInstall().add(tb5Info);
1: 			addPackageImportPolicy("org.apache.aries.subsystem.scope.itests.tb6", tb5Update);
1: 			rootUpdate.commit();
1: 			tb5 = findBundle("org.apache.aries.subsystem.scope.itests.tb5", tb5Update.getScope());
1: 			assertNotNull(tb5);
1: 			FrameworkWiring frameworkWiring = bundleContext.getBundle(0).adapt(FrameworkWiring.class);
1: 			assertFalse(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5})));
0: 			rootUpdate = scope.newScopeUpdate();
1: 			ScopeUpdate tb6Update = rootUpdate.newChild("tb6");
1: 			rootUpdate.getChildren().add(tb6Update);
1: 			tb6Update.getBundlesToInstall().add(tb6Info);
1: 			addPackageExportPolicy("org.apache.aries.subsystem.scope.itests.tb6", tb6Update);
1: 			rootUpdate.commit();
1: 			tb6 = findBundle("org.apache.aries.subsystem.scope.itests.tb6", tb6Update.getScope());
1: 			assertNotNull(tb6);
1: 			assertTrue(frameworkWiring.resolveBundles(Arrays.asList(new Bundle[]{tb5,tb6})));
1: 		}
1: 		finally {
1: 			uninstallQuietly(tb6);
1: 			uninstallQuietly(tb5);
1: 		}
1: 	}
1: }
============================================================================