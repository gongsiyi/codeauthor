1:628add4: /**
1:628add4:  *  Licensed to4the Apache Software Foundation (ASF) under one
1:628add4:  *  or more contributor license agreements.  See the NOTICE file
1:628add4:  *  distributed with this work for additional information
1:628add4:  *  regarding copyright ownership. The ASF licenses this file to
1:628add4:  *  You under the Apache License, Version 2.0 (the "License");
1:628add4:  *  you may not use this file except in compliance with the
1:628add4:  *  License.  You may obtain a copy of the License at
1:628add4:  *
1:628add4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:628add4:  *
1:628add4:  *  Unless required by applicable law or agreed to in writing, software
1:628add4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:628add4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:628add4:  *  See the License for the specific language governing permissions and
1:628add4:  *  limitations under the License.
1:628add4:  */
1:56a6860: package org.apache.aries.samples.ariestrader.util;
3:628add4: 
1:628add4: import javax.naming.InitialContext;
1:628add4: import javax.naming.NamingException;
1:628add4: 
1:628add4: /**
1:628add4:  * ServiceUtilities provides servlet specific client side
1:628add4:  * utility functions.
1:628add4:  */
1:628add4: public class ServiceUtilities {
1:628add4: 
1:628add4:     /**
1:628add4:      * Lookup and return an osgi service
1:628add4:      * 
1:628add4:      * @return Object
1:628add4:      * @exception javax.io.IOException
1:628add4:      *                If an exception occurs during the service
1:628add4:      *                lookup
1:628add4:      * 
1:628add4:      */
1:628add4:     public static final Object getOSGIService(String serviceName) {
1:628add4:         if (Log.doTrace())
1:628add4:             Log.trace("ServiceUtilities:getOSGIService()", serviceName);
1:628add4:         return getOSGIService(serviceName, null);
1:628add4:     }
1:628add4: 
1:628add4:     /**
1:628add4:      * Lookup and return an osgi service
1:628add4:      * 
1:628add4:      * @return Object
1:628add4:      * 
1:628add4:      */
1:628add4:     public static final Object getOSGIService(String serviceName, String filter) {
1:628add4:         if (Log.doTrace())
1:628add4:             Log.trace("ServiceUtilities:getOSGIService()", serviceName, filter);
1:22b06a7:         String name = TradeConfig.OSGI_SERVICE_PREFIX + serviceName;
1:628add4:         if (filter != null) {
1:628add4:             name = name + "/" + filter;
1:628add4:         }
1:628add4: 
1:628add4:         try {
1:628add4:             InitialContext ic = new InitialContext();
1:628add4:             return ic.lookup(name);
1:628add4:         } catch (NamingException e) {
1:628add4:             Log.error("ServiceUtilities:getOSGIService() -- NamingException on OSGI service lookup", name, e);
1:628add4:             e.printStackTrace();
1:628add4:             return null;
1:628add4:         }
1:628add4:     }
1:628add4: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:39f53f6
commit:989ba4e
commit:22b06a7
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         String name = TradeConfig.OSGI_SERVICE_PREFIX + serviceName;
commit:56a6860
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.ariestrader.util;
commit:3be9855
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.samples.daytrader.util;
commit:92b2ae7
commit:3d66c06
commit:628add4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to4the Apache Software Foundation (ASF) under one
1:  *  or more contributor license agreements.  See the NOTICE file
1:  *  distributed with this work for additional information
1:  *  regarding copyright ownership. The ASF licenses this file to
1:  *  You under the Apache License, Version 2.0 (the "License");
1:  *  you may not use this file except in compliance with the
1:  *  License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.samples.daytrader.util;
1: 
1: import javax.naming.InitialContext;
1: import javax.naming.NamingException;
1: 
1: /**
1:  * ServiceUtilities provides servlet specific client side
1:  * utility functions.
1:  */
1: public class ServiceUtilities {
1: 
0:     private static String prefix = "aries:services/";
1: 
1: 
1:     /**
1:      * Lookup and return an osgi service
1:      * 
1:      * @return Object
1:      * @exception javax.io.IOException
1:      *                If an exception occurs during the service
1:      *                lookup
1:      * 
1:      */
1:     public static final Object getOSGIService(String serviceName) {
1:         if (Log.doTrace())
1:             Log.trace("ServiceUtilities:getOSGIService()", serviceName);
1:         return getOSGIService(serviceName, null);
1:     }
1: 
1:     /**
1:      * Lookup and return an osgi service
1:      * 
1:      * @return Object
1:      * 
1:      */
1:     public static final Object getOSGIService(String serviceName, String filter) {
1:         if (Log.doTrace())
1:             Log.trace("ServiceUtilities:getOSGIService()", serviceName, filter);
0:         String name = prefix + serviceName;
1:         if (filter != null) {
1:             name = name + "/" + filter;
1:         }
1: 
1:         try {
1:             InitialContext ic = new InitialContext();
1:             return ic.lookup(name);
1:         } catch (NamingException e) {
1:             Log.error("ServiceUtilities:getOSGIService() -- NamingException on OSGI service lookup", name, e);
1:             e.printStackTrace();
1:             return null;
1:         }
1:     }
1: }
============================================================================