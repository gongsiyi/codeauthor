1:dd9325e: /**
1:dd9325e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:dd9325e:  *  contributor license agreements.  See the NOTICE file distributed with
1:dd9325e:  *  this work for additional information regarding copyright ownership.
1:dd9325e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:dd9325e:  *  (the "License"); you may not use this file except in compliance with
1:dd9325e:  *  the License.  You may obtain a copy of the License at
1:dd9325e:  *
1:dd9325e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dd9325e:  *
1:dd9325e:  *  Unless required by applicable law or agreed to in writing, software
1:dd9325e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:dd9325e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dd9325e:  *  See the License for the specific language governing permissions and
1:dd9325e:  *  limitations under the License.
1:dd9325e:  */
1:dd9325e: package org.apache.aries.blueprint.annotation;
1:dd9325e: 
1:dd9325e: import java.io.File;
1:dd9325e: import java.util.List;
1:dd9325e: 
1:dd9325e: import javax.xml.bind.JAXBContext;
1:dd9325e: import javax.xml.bind.JAXBException;
1:dd9325e: import javax.xml.bind.Marshaller;
1:dd9325e: 
1:dd9325e: import org.apache.aries.blueprint.jaxb.Tbean;
1:dd9325e: import org.apache.aries.blueprint.jaxb.Tblueprint;
1:dd9325e: import org.apache.aries.blueprint.jaxb.Tproperty;
1:dd9325e: import org.apache.aries.blueprint.jaxb.Tvalue;
1:dd9325e: import org.osgi.framework.Bundle;
1:dd9325e: import org.osgi.framework.Version;
1:dd9325e: 
1:dd9325e: import junit.framework.TestCase;
1:dd9325e: 
1:dd9325e: public class AnnotationTest extends TestCase {
1:dd9325e: 
1:dd9325e:     public void testGenerationFile() throws Exception {
1:dd9325e:         File file = new File("test-annotation.xml");
1:dd9325e:         if (file.exists()) {
1:dd9325e:             file.delete();
1:dd9325e:             file.createNewFile();
1:dd9325e:         }
1:dd9325e: 
1:dd9325e:         Tblueprint tblueprint = new Tblueprint();
1:dd9325e:         List<Object> components = tblueprint.getServiceOrReferenceListOrBean();
1:dd9325e:         Tbean tbean = new Tbean();
1:dd9325e:         tbean.setDependsOn(null);
1:dd9325e:         tbean.setId("Bar");
1:dd9325e:         tbean.setClazz("org.apache.aries.blueprint.sample.Bar");
1:dd9325e:         List<Object> props = tbean.getArgumentOrPropertyOrAny();
1:dd9325e: 
1:dd9325e:         String value = "Hello Bar";
1:dd9325e:         Tproperty tp = new Tproperty();
1:dd9325e:         tp.setName("value");
1:dd9325e:         //Tvalue tvalue = new Tvalue();
1:dd9325e:         //tvalue.setContent(value);
1:dd9325e:         //tp.setValue(tvalue);
1:dd9325e:         tp.setValueAttribute(value);
1:dd9325e:         props.add(tp);
1:dd9325e: 
1:dd9325e:         components.add(tbean);
1:dd9325e: 
1:dd9325e:         marshallOBRModel(tblueprint, file);
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     private void marshallOBRModel(Tblueprint tblueprint, File blueprintFile)
1:dd9325e:             throws JAXBException {
1:dd9325e:         JAXBContext context = JAXBContext.newInstance(Tblueprint.class);
1:dd9325e:         Marshaller marshaller = context.createMarshaller();
1:dd9325e:         marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
1:dd9325e:         marshaller.marshal(tblueprint, blueprintFile);
1:dd9325e: 
1:dd9325e:     }
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.annotation;
1: 
1: import java.io.File;
1: import java.util.List;
1: 
1: import javax.xml.bind.JAXBContext;
1: import javax.xml.bind.JAXBException;
1: import javax.xml.bind.Marshaller;
1: 
1: import org.apache.aries.blueprint.jaxb.Tbean;
1: import org.apache.aries.blueprint.jaxb.Tblueprint;
1: import org.apache.aries.blueprint.jaxb.Tproperty;
1: import org.apache.aries.blueprint.jaxb.Tvalue;
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.Version;
1: 
1: import junit.framework.TestCase;
1: 
1: public class AnnotationTest extends TestCase {
1: 
1:     public void testGenerationFile() throws Exception {
1:         File file = new File("test-annotation.xml");
1:         if (file.exists()) {
1:             file.delete();
1:             file.createNewFile();
1:         }
1: 
1:         Tblueprint tblueprint = new Tblueprint();
1:         List<Object> components = tblueprint.getServiceOrReferenceListOrBean();
1:         Tbean tbean = new Tbean();
1:         tbean.setDependsOn(null);
1:         tbean.setId("Bar");
1:         tbean.setClazz("org.apache.aries.blueprint.sample.Bar");
1:         List<Object> props = tbean.getArgumentOrPropertyOrAny();
1: 
1:         String value = "Hello Bar";
1:         Tproperty tp = new Tproperty();
1:         tp.setName("value");
1:         //Tvalue tvalue = new Tvalue();
1:         //tvalue.setContent(value);
1:         //tp.setValue(tvalue);
1:         tp.setValueAttribute(value);
1:         props.add(tp);
1: 
1:         components.add(tbean);
1: 
1:         marshallOBRModel(tblueprint, file);
1:     }
1: 
1:     private void marshallOBRModel(Tblueprint tblueprint, File blueprintFile)
1:             throws JAXBException {
1:         JAXBContext context = JAXBContext.newInstance(Tblueprint.class);
1:         Marshaller marshaller = context.createMarshaller();
1:         marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
1:         marshaller.marshal(tblueprint, blueprintFile);
1: 
1:     }
1: }
============================================================================