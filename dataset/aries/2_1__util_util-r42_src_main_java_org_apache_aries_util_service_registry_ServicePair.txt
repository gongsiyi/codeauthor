1:7bde01a: /**
1:7bde01a:  * Licensed to the Apache Software Foundation (ASF) under one
1:7bde01a:  * or more contributor license agreements.  See the NOTICE file
1:7bde01a:  * distributed with this work for additional information
1:7bde01a:  * regarding copyright ownership.  The ASF licenses this file
1:7bde01a:  * to you under the Apache License, Version 2.0 (the
1:7bde01a:  * "License"); you may not use this file except in compliance
1:7bde01a:  * with the License.  You may obtain a copy of the License at
1:7bde01a:  *
1:7bde01a:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7bde01a:  *
1:7bde01a:  * Unless required by applicable law or agreed to in writing,
1:7bde01a:  * software distributed under the License is distributed on an
1:7bde01a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:7bde01a:  * KIND, either express or implied.  See the License for the
1:7bde01a:  * specific language governing permissions and limitations
1:7bde01a:  * under the License.
1:7bde01a:  */
1:7bde01a: package org.apache.aries.util.service.registry;
1:7bde01a: 
1:bd2f411: import java.security.AccessController;
1:bd2f411: import java.security.PrivilegedAction;
1:bd2f411: 
1:7bde01a: import org.osgi.framework.BundleContext;
1:7bde01a: import org.osgi.framework.ServiceReference;
1:7bde01a: 
1:7bde01a: // TODO need to determine if this needs to be thread safe or not
1:7bde01a: public class ServicePair<T>
1:7bde01a: {
1:7bde01a:   private BundleContext ctx;
1:7bde01a:   private ServiceReference ref;
1:7bde01a:   private T serviceObject;
1:7bde01a:   
1:7bde01a:   public ServicePair(BundleContext context, ServiceReference serviceRef)
1:7bde01a:   {
1:7bde01a:     ctx = context;
1:7bde01a:     ref = serviceRef;
1:7bde01a:   }
1:7bde01a:   
1:7bde01a:   public ServicePair(BundleContext context, ServiceReference serviceRef, T service)
1:7bde01a:   {
1:7bde01a:     ctx = context;
1:7bde01a:     ref = serviceRef;
1:7bde01a:     serviceObject = service;
1:7bde01a:   }
1:7bde01a:   
1:7bde01a:   @SuppressWarnings("unchecked")
1:7bde01a:   public T get()
1:7bde01a:   {
1:7bde01a:     if (serviceObject == null && ref.getBundle() != null) {
1:bd2f411:       serviceObject = AccessController.doPrivileged(new PrivilegedAction<T>() {
1:bd2f411:           public T run()
1:bd2f411:           {
1:bd2f411:             return serviceObject = (T) ctx.getService(ref);
1:bd2f411:           }
1:bd2f411:         });
1:7bde01a:     }
1:7bde01a:     
1:7bde01a:     return serviceObject;
1:7bde01a:   }
1:7bde01a:   
1:7bde01a:   public boolean isValid() {
1:7bde01a:     return (ref.getBundle() != null);
1:7bde01a:   }
1:7bde01a: 
1:7bde01a:   public void unget()
1:7bde01a:   {
1:7bde01a:     if (serviceObject != null) {
1:7bde01a:       ctx.ungetService(ref);
1:7bde01a:       serviceObject = null;
1:7bde01a:     }
1:7bde01a:   }
1:7bde01a: 
1:7bde01a:   public ServiceReference getReference() 
1:7bde01a:   {
1:7bde01a:     return ref;
1:7bde01a:   }
1:7bde01a: }
============================================================================
author:David Jencks
-------------------------------------------------------------------------------
commit:6df3ad3
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:bd2f411
/////////////////////////////////////////////////////////////////////////
1: import java.security.AccessController;
1: import java.security.PrivilegedAction;
1: 
/////////////////////////////////////////////////////////////////////////
1:       serviceObject = AccessController.doPrivileged(new PrivilegedAction<T>() {
1:           public T run()
1:           {
1:             return serviceObject = (T) ctx.getService(ref);
1:           }
1:         });
commit:7bde01a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.util.service.registry;
1: 
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.ServiceReference;
1: 
1: // TODO need to determine if this needs to be thread safe or not
1: public class ServicePair<T>
1: {
1:   private BundleContext ctx;
1:   private ServiceReference ref;
1:   private T serviceObject;
1:   
1:   public ServicePair(BundleContext context, ServiceReference serviceRef)
1:   {
1:     ctx = context;
1:     ref = serviceRef;
1:   }
1:   
1:   public ServicePair(BundleContext context, ServiceReference serviceRef, T service)
1:   {
1:     ctx = context;
1:     ref = serviceRef;
1:     serviceObject = service;
1:   }
1:   
1:   @SuppressWarnings("unchecked")
1:   public T get()
1:   {
1:     if (serviceObject == null && ref.getBundle() != null) {
0:       serviceObject = (T) ctx.getService(ref);
1:     }
1:     
1:     return serviceObject;
1:   }
1:   
1:   public boolean isValid() {
1:     return (ref.getBundle() != null);
1:   }
1: 
1:   public void unget()
1:   {
1:     if (serviceObject != null) {
1:       ctx.ungetService(ref);
1:       serviceObject = null;
1:     }
1:   }
1: 
1:   public ServiceReference getReference() 
1:   {
1:     return ref;
1:   }
1: }
============================================================================