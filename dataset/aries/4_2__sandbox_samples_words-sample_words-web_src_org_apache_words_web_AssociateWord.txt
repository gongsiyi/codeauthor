1:90e8be0: /**
1:90e8be0:  * Licensed to the Apache Software Foundation (ASF) under one
1:90e8be0:  * or more contributor license agreements.  See the NOTICE file
1:90e8be0:  * distributed with this work for additional information
1:90e8be0:  * regarding copyright ownership.  The ASF licenses this file
1:90e8be0:  * to you under the Apache License, Version 2.0 (the
1:90e8be0:  * "License"); you may not use this file except in compliance
1:90e8be0:  * with the License.  You may obtain a copy of the License at
1:90e8be0:  *
1:90e8be0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:90e8be0:  *
1:90e8be0:  * Unless required by applicable law or agreed to in writing,
1:90e8be0:  * software distributed under the License is distributed on an
1:90e8be0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:90e8be0:  * KIND, either express or implied.  See the License for the
1:90e8be0:  * specific language governing permissions and limitations
1:90e8be0:  * under the License.
1:90e8be0:  */
1:90e8be0: 
1:8aa58cd: package org.apache.words.web;
1:90e8be0: 
1:90e8be0: import java.io.IOException;
1:90e8be0: import java.io.PrintWriter;
1:90e8be0: 
1:90e8be0: import javax.naming.InitialContext;
1:90e8be0: import javax.naming.NamingException;
1:90e8be0: import javax.servlet.ServletException;
1:90e8be0: import javax.servlet.http.HttpServlet;
1:90e8be0: import javax.servlet.http.HttpServletRequest;
1:90e8be0: import javax.servlet.http.HttpServletResponse;
1:90e8be0: 
1:8aa58cd: import org.apache.words.AssociationRecorderService;
1:8aa58cd: import org.apache.words.WordGetterService;
1:90e8be0: 
1:90e8be0: /**
1:90e8be0:  * Servlet implementation class AssociateWord
1:90e8be0:  */
1:90e8be0: public class AssociateWord extends HttpServlet {
1:90e8be0: 	private static final long serialVersionUID = 1L;
1:90e8be0: 
1:90e8be0: 	/**
1:90e8be0: 	 * Default constructor.
1:90e8be0: 	 */
1:90e8be0: 	public AssociateWord() {
1:90e8be0: 	}
1:90e8be0: 
1:90e8be0: 	/**
1:90e8be0: 	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
1:90e8be0: 	 *      response)
1:90e8be0: 	 */
1:90e8be0: 	protected void doGet(HttpServletRequest request,
1:90e8be0: 			HttpServletResponse response) throws ServletException, IOException {
1:90e8be0: 		PrintWriter out = response.getWriter();
1:90e8be0: 
1:90e8be0: 		out.println("<html>");
1:90e8be0: 		String randomWord = null;
1:90e8be0: 		WordGetterService getter = null;
1:90e8be0: 		try {
1:90e8be0: 			getter = (WordGetterService) new InitialContext()
1:90e8be0: 					.lookup("aries:services/"
1:90e8be0: 							+ WordGetterService.class.getName());
1:90e8be0: 		} catch (NamingException e) {
1:90e8be0: 			e.printStackTrace();
1:90e8be0: 		}
1:90e8be0: 		if (getter != null) {
1:90e8be0: 			randomWord = getter.getRandomWord();
1:90e8be0: 			out.println("The word is " + randomWord);
1:90e8be0: 		} else {
1:90e8be0: 			out.println("Oh dear. We couldn't find our service.");
1:90e8be0: 		}
1:90e8be0: 		out.println("</br>");
1:90e8be0: 		out.println("<form action=\"AssociateWord\" method=\"post\">");
1:90e8be0: 		out.println("What do you associate with "
1:90e8be0: 				+ randomWord
1:90e8be0: 				+ "?	    <input type=\"text\" name=\"association\" /> <br />    ");
1:90e8be0: 		out.println("<input type=\"hidden\" name=\"word\" value=\""
1:90e8be0: 				+ randomWord + "\"/>");
1:90e8be0: 		out.println("<input type=\"submit\" name=\"Submit\"/>");
1:90e8be0: 		out.println("</form>");
1:90e8be0: 		out.println("</html>");
1:90e8be0: 	}
1:90e8be0: 
1:90e8be0: 	/**
1:90e8be0: 	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
1:90e8be0: 	 *      response)
1:90e8be0: 	 */
1:90e8be0: 	protected void doPost(HttpServletRequest request,
1:90e8be0: 			HttpServletResponse response) throws ServletException, IOException {
1:90e8be0: 		String word = request.getParameter("word");
1:90e8be0: 		String association = request.getParameter("association");
1:90e8be0: 
1:90e8be0: 		AssociationRecorderService recorder = null;
1:90e8be0: 		try {
1:90e8be0: 			recorder = (AssociationRecorderService) new InitialContext()
1:90e8be0: 					.lookup("aries:services/"
1:90e8be0: 							+ AssociationRecorderService.class.getName());
1:90e8be0: 		} catch (NamingException e) {
1:90e8be0: 			e.printStackTrace();
1:90e8be0: 		}
1:90e8be0: 		String previousAssociation = null;
1:90e8be0: 		if (recorder != null) {
1:90e8be0: 			previousAssociation = recorder.getLastAssociation(word);
1:90e8be0: 			recorder.recordAssociation(word, association);
1:90e8be0: 		}
1:90e8be0: 		PrintWriter out = response.getWriter();
1:90e8be0: 		out.println("The last person associated " + word + " with "
1:90e8be0: 				+ previousAssociation + ".");
1:90e8be0: 
1:90e8be0: 	}
1:90e8be0: }
============================================================================
author:Jeremy Hughes
-------------------------------------------------------------------------------
commit:a220afc
author:Holly Cummins
-------------------------------------------------------------------------------
commit:8aa58cd
/////////////////////////////////////////////////////////////////////////
1: package org.apache.words.web;
/////////////////////////////////////////////////////////////////////////
1: import org.apache.words.AssociationRecorderService;
1: import org.apache.words.WordGetterService;
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:83a59ec
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:90e8be0
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
0: package org.apache.wordassociation.web;
1: 
1: import java.io.IOException;
1: import java.io.PrintWriter;
1: 
1: import javax.naming.InitialContext;
1: import javax.naming.NamingException;
1: import javax.servlet.ServletException;
1: import javax.servlet.http.HttpServlet;
1: import javax.servlet.http.HttpServletRequest;
1: import javax.servlet.http.HttpServletResponse;
1: 
0: import org.apache.wordassociation.AssociationRecorderService;
0: import org.apache.wordassociation.WordGetterService;
1: 
1: /**
1:  * Servlet implementation class AssociateWord
1:  */
1: public class AssociateWord extends HttpServlet {
1: 	private static final long serialVersionUID = 1L;
1: 
1: 	/**
1: 	 * Default constructor.
1: 	 */
1: 	public AssociateWord() {
1: 	}
1: 
1: 	/**
1: 	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
1: 	 *      response)
1: 	 */
1: 	protected void doGet(HttpServletRequest request,
1: 			HttpServletResponse response) throws ServletException, IOException {
1: 		PrintWriter out = response.getWriter();
1: 
1: 		out.println("<html>");
1: 		String randomWord = null;
1: 		WordGetterService getter = null;
1: 		try {
1: 			getter = (WordGetterService) new InitialContext()
1: 					.lookup("aries:services/"
1: 							+ WordGetterService.class.getName());
1: 		} catch (NamingException e) {
1: 			e.printStackTrace();
1: 		}
1: 		if (getter != null) {
1: 			randomWord = getter.getRandomWord();
1: 			out.println("The word is " + randomWord);
1: 		} else {
1: 			out.println("Oh dear. We couldn't find our service.");
1: 		}
1: 		out.println("</br>");
1: 		out.println("<form action=\"AssociateWord\" method=\"post\">");
1: 		out.println("What do you associate with "
1: 				+ randomWord
1: 				+ "?	    <input type=\"text\" name=\"association\" /> <br />    ");
1: 		out.println("<input type=\"hidden\" name=\"word\" value=\""
1: 				+ randomWord + "\"/>");
1: 		out.println("<input type=\"submit\" name=\"Submit\"/>");
1: 		out.println("</form>");
1: 		out.println("</html>");
1: 	}
1: 
1: 	/**
1: 	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
1: 	 *      response)
1: 	 */
1: 	protected void doPost(HttpServletRequest request,
1: 			HttpServletResponse response) throws ServletException, IOException {
1: 		String word = request.getParameter("word");
1: 		String association = request.getParameter("association");
1: 
1: 		AssociationRecorderService recorder = null;
1: 		try {
1: 			recorder = (AssociationRecorderService) new InitialContext()
1: 					.lookup("aries:services/"
1: 							+ AssociationRecorderService.class.getName());
1: 		} catch (NamingException e) {
1: 			e.printStackTrace();
1: 		}
1: 		String previousAssociation = null;
1: 		if (recorder != null) {
1: 			previousAssociation = recorder.getLastAssociation(word);
1: 			recorder.recordAssociation(word, association);
1: 		}
1: 		PrintWriter out = response.getWriter();
1: 		out.println("The last person associated " + word + " with "
1: 				+ previousAssociation + ".");
1: 
1: 	}
1: }
============================================================================