1:af3b4b3: /**
1:af3b4b3:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:af3b4b3:  *  contributor license agreements.  See the NOTICE file distributed with
1:af3b4b3:  *  this work for additional information regarding copyright ownership.
1:af3b4b3:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:af3b4b3:  *  (the "License"); you may not use this file except in compliance with
1:af3b4b3:  *  the License.  You may obtain a copy of the License at
1:af3b4b3:  *
1:af3b4b3:  *     http://www.apache.org/licenses/LICENSE-2.0
1:af3b4b3:  *
1:af3b4b3:  *  Unless required by applicable law or agreed to in writing, software
1:af3b4b3:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:af3b4b3:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:af3b4b3:  *  See the License for the specific language governing permissions and
1:af3b4b3:  *  limitations under the License.
1:af3b4b3:  */
1:af3b4b3: package org.apache.aries.jmx.codec;
1:af3b4b3: 
1:af3b4b3: import java.util.HashMap;
1:af3b4b3: import java.util.Map;
1:af3b4b3: 
1:af3b4b3: import javax.management.openmbean.CompositeData;
1:af3b4b3: import javax.management.openmbean.CompositeDataSupport;
1:af3b4b3: import javax.management.openmbean.OpenDataException;
1:af3b4b3: 
1:af3b4b3: import org.osgi.jmx.framework.FrameworkMBean;
1:af3b4b3: 
1:8b67a25: public class BatchResolveResult {
1:af3b4b3:     private final boolean success;
1:af3b4b3:     private final Long[] successfulBundles;
1:af3b4b3: 
1:8b67a25:     public BatchResolveResult(boolean success, Long[] successfulBundles) {
1:af3b4b3:         this.success = success;
1:af3b4b3:         this.successfulBundles = successfulBundles;
1:af3b4b3:     }
1:af3b4b3: 
1:af3b4b3:     public CompositeData toCompositeData() {
1:af3b4b3:         try {
1:af3b4b3:             Map<String, Object> items = new HashMap<String, Object>();
1:af3b4b3:             items.put(FrameworkMBean.COMPLETED, successfulBundles);
1:af3b4b3:             items.put(FrameworkMBean.SUCCESS, success);
1:af3b4b3:             return new CompositeDataSupport(FrameworkMBean.BATCH_RESOLVE_RESULT_TYPE, items);
1:af3b4b3:         } catch (OpenDataException e) {
1:af3b4b3:             throw new IllegalStateException("Can't create CompositeData", e);
1:af3b4b3:         }
1:af3b4b3:     }
1:af3b4b3: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:8b67a25
/////////////////////////////////////////////////////////////////////////
1: public class BatchResolveResult {
1:     public BatchResolveResult(boolean success, Long[] successfulBundles) {
commit:af3b4b3
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jmx.codec;
1: 
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import javax.management.openmbean.CompositeData;
1: import javax.management.openmbean.CompositeDataSupport;
1: import javax.management.openmbean.OpenDataException;
1: 
1: import org.osgi.jmx.framework.FrameworkMBean;
1: 
0: public class BatchRefreshResult extends BatchResult {
1:     private final boolean success;
1:     private final Long[] successfulBundles;
1: 
0:     public BatchRefreshResult(boolean success, Long[] successfulBundles) {
1:         this.success = success;
1:         this.successfulBundles = successfulBundles;
1:     }
1: 
1:     public CompositeData toCompositeData() {
1:         try {
1:             Map<String, Object> items = new HashMap<String, Object>();
1:             items.put(FrameworkMBean.COMPLETED, successfulBundles);
1:             items.put(FrameworkMBean.SUCCESS, success);
1:             return new CompositeDataSupport(FrameworkMBean.BATCH_RESOLVE_RESULT_TYPE, items);
1:         } catch (OpenDataException e) {
1:             throw new IllegalStateException("Can't create CompositeData", e);
1:         }
1:     }
1: }
============================================================================