1:430e8f5: /**
1:430e8f5:  * Licensed to the Apache Software Foundation (ASF) under one
1:430e8f5:  * or more contributor license agreements.  See the NOTICE file
1:430e8f5:  * distributed with this work for additional information
1:430e8f5:  * regarding copyright ownership.  The ASF licenses this file
1:430e8f5:  * to you under the Apache License, Version 2.0 (the
1:430e8f5:  * "License"); you may not use this file except in compliance
1:430e8f5:  * with the License.  You may obtain a copy of the License at
1:430e8f5:  *
1:430e8f5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:430e8f5:  *
1:430e8f5:  * Unless required by applicable law or agreed to in writing,
1:430e8f5:  * software distributed under the License is distributed on an
1:430e8f5:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:430e8f5:  * KIND, either express or implied.  See the License for the
1:430e8f5:  * specific language governing permissions and limitations
1:430e8f5:  * under the License.
1:430e8f5:  */
1:e0beeec: package org.apache.aries.samples.blog.biz;
7:430e8f5: 
1:430e8f5: import java.util.Calendar;
1:430e8f5: import java.util.Date;
1:bb9ffe7: import java.util.List;
1:430e8f5: 
1:430e8f5: import org.apache.aries.samples.blog.api.BlogAuthor;
1:bb9ffe7: import org.apache.aries.samples.blog.api.BlogEntry;
1:380a6c0: import org.apache.aries.samples.blog.api.persistence.Author;
1:380a6c0: import org.apache.aries.samples.blog.api.persistence.Entry;
1:430e8f5: 
1:8aedaf5: public class BlogAuthorImpl implements BlogAuthor {
1:8aedaf5: 	private static Calendar cal = Calendar.getInstance();
1:8aedaf5: 	private Author author;
1:430e8f5: 
1:8aedaf5: 	public BlogAuthorImpl(Author a) {
1:8aedaf5: 		author = a;
1:8aedaf5: 	}
1:bb9ffe7: 
1:8aedaf5: 	public String getBio() {
1:8aedaf5: 		return author.getBio();
1:8aedaf5: 	}
1:bb9ffe7: 
1:8aedaf5: 	public String getEmailAddress() {
1:8aedaf5: 		return author.getEmail();
1:8aedaf5: 	}
1:430e8f5: 
1:8aedaf5: 	public String getFullName() {
1:8aedaf5: 		return author.getName();
1:8aedaf5: 	}
1:430e8f5: 
1:8aedaf5: 	public String getName() {
1:8aedaf5: 		return author.getDisplayName();
1:8aedaf5: 	}
1:430e8f5: 
1:8aedaf5: 	public String getDateOfBirth() {
1:8aedaf5: 		Date dob = author.getDob();
1:430e8f5: 
1:8aedaf5: 		int year = 0;
1:8aedaf5: 		int month = 0;
1:8aedaf5: 		int date = 0;
1:8aedaf5: 
1:8aedaf5: 		synchronized (cal) {
1:8aedaf5: 			if (dob != null) {
1:8aedaf5: 				cal.setTime(dob);
1:8aedaf5: 				year = cal.get(Calendar.YEAR);
1:8aedaf5: 				month = cal.get(Calendar.MONTH) + 1;
1:8aedaf5: 				date = cal.get(Calendar.DATE);
1:8aedaf5: 			}
1:8aedaf5: 		}
1:8aedaf5: 		return year + "-" + month + "-" + date;
1:8aedaf5: 
1:8aedaf5: 	}
1:8aedaf5: 
1:bb9ffe7: 	public List<? extends BlogEntry> getEntries() {
1:bb9ffe7: 		return adapt(author.getEntries());
1:bb9ffe7: 	}
1:8aedaf5: 
1:8aedaf5: 	private List<? extends BlogEntry> adapt(List<? extends Entry> list) {
1:8aedaf5: 		List<BlogEntryImpl> bei = null;
1:8aedaf5: 		;
1:bb9ffe7: 		return bei;
1:bb9ffe7: 	}
8:430e8f5: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:380a6c0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.blog.api.persistence.Author;
1: import org.apache.aries.samples.blog.api.persistence.Entry;
commit:e0beeec
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.blog.biz;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.samples.blog.api.persistence.api.Author;
0: import org.apache.aries.samples.blog.api.persistence.api.Entry;
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:8aedaf5
/////////////////////////////////////////////////////////////////////////
1: public class BlogAuthorImpl implements BlogAuthor {
1: 	private static Calendar cal = Calendar.getInstance();
1: 	private Author author;
1: 	public BlogAuthorImpl(Author a) {
1: 		author = a;
1: 	}
1: 	public String getBio() {
1: 		return author.getBio();
1: 	}
1: 	public String getEmailAddress() {
1: 		return author.getEmail();
1: 	}
1: 	public String getFullName() {
1: 		return author.getName();
1: 	}
1: 	public String getName() {
1: 		return author.getDisplayName();
1: 	}
1: 	public String getDateOfBirth() {
1: 		Date dob = author.getDob();
1: 		int year = 0;
1: 		int month = 0;
1: 		int date = 0;
1: 
1: 		synchronized (cal) {
1: 			if (dob != null) {
1: 				cal.setTime(dob);
1: 				year = cal.get(Calendar.YEAR);
1: 				month = cal.get(Calendar.MONTH) + 1;
1: 				date = cal.get(Calendar.DATE);
1: 			}
1: 		}
1: 		return year + "-" + month + "-" + date;
1: 
1: 	}
1: 
1: 
1: 	private List<? extends BlogEntry> adapt(List<? extends Entry> list) {
1: 		List<BlogEntryImpl> bei = null;
1: 		;
commit:afa98ec
commit:607acfe
commit:bb9ffe7
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1: import org.apache.aries.samples.blog.api.BlogEntry;
0: import org.apache.aries.samples.blog.persistence.api.Entry;
/////////////////////////////////////////////////////////////////////////
0:   public BlogAuthorImpl(Author a)
/////////////////////////////////////////////////////////////////////////
1:   
1: 	public List<? extends BlogEntry> getEntries() {
1: 		return adapt(author.getEntries());
1: 	}
1: 	
0: 	private List<? extends BlogEntry> adapt (List<? extends Entry> list) {
0: 		List<BlogEntryImpl> bei = null;;
1: 		return bei;
1: 	}
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:430e8f5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.samples.blog;
1: 
1: import java.util.Calendar;
1: import java.util.Date;
1: 
1: import org.apache.aries.samples.blog.api.BlogAuthor;
0: import org.apache.aries.samples.blog.persistence.api.Author;
1: 
1: 
1: 
0: public class BlogAuthorImpl implements BlogAuthor
0: {
0:   private static Calendar cal = Calendar.getInstance();
0:   private Author author;
0:   private BloggingServiceImpl bloggingService;
1:   
0:   public BlogAuthorImpl(Author a, BloggingServiceImpl bs)
0:   {
0:     author = a;
0:     bloggingService = bs;
1:   }
1: 
0:   public String getBio()
0:   {
0:     return author.getBio();
1:   }
1: 
0:   public String getEmailAddress()
0:   {
0:     return author.getEmail();
1:   }
1: 
0:   public String getFullName()
0:   {
0:     return author.getName();
1:   }
1: 
0:   public String getName()
0:   {
0:     return author.getDisplayName();
1:   }
1: 
0:   public String getDateOfBirth()
0:   {
0:     Date dob = author.getDob();
1:     
0:     int year;
0:     int month;
0:     int date;
1:     
0:     synchronized (cal) {
0:       cal.setTime(dob);
0:       year = cal.get(Calendar.YEAR);
0:       month = cal.get(Calendar.MONTH) + 1;
0:       date = cal.get(Calendar.DATE);
1:     }
1:     
0:     return year + "-" + month + "-" + date;
1:   }
1: }
============================================================================