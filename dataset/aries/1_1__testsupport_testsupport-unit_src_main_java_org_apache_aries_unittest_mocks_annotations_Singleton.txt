1:264011e: /*
1:264011e:  * Licensed to the Apache Software Foundation (ASF) under one
1:264011e:  * or more contributor license agreements.  See the NOTICE file
1:264011e:  * distributed with this work for additional information
1:264011e:  * regarding copyright ownership.  The ASF licenses this file
1:264011e:  * to you under the Apache License, Version 2.0 (the
1:264011e:  * "License"); you may not use this file except in compliance
1:264011e:  * with the License.  You may obtain a copy of the License at
1:264011e:  *
1:264011e:  *   http://www.apache.org/licenses/LICENSE-2.0
1:264011e:  *
1:264011e:  * Unless required by applicable law or agreed to in writing,
1:264011e:  * software distributed under the License is distributed on an
1:264011e:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:264011e:  * KIND, either express or implied.  See the License for the
1:264011e:  * specific language governing permissions and limitations
1:264011e:  * under the License.
1:264011e:  */
1:264011e: package org.apache.aries.unittest.mocks.annotations;
1:264011e: 
1:264011e: import java.lang.annotation.ElementType;
1:264011e: import java.lang.annotation.Retention;
1:264011e: import java.lang.annotation.RetentionPolicy;
1:264011e: import java.lang.annotation.Target;
1:264011e: 
1:264011e: /**
1:264011e:  * This annotation can be applied to template objects. If a template object's
1:264011e:  * class has this annotation and is passed multiple times to the Skeleton.newMock
1:264011e:  * method with the same interface class the same mock will be returned, unless
1:264011e:  * the garbage collector has cleared the previous mock.
1:264011e:  */
1:264011e: @Target(ElementType.TYPE)
1:264011e: @Retention(RetentionPolicy.RUNTIME)
1:264011e: public @interface Singleton
1:264011e: {
1:264011e: 
1:4e2fb0c: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:264011e
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.unittest.mocks.annotations;
1: 
1: import java.lang.annotation.ElementType;
1: import java.lang.annotation.Retention;
1: import java.lang.annotation.RetentionPolicy;
1: import java.lang.annotation.Target;
1: 
1: /**
1:  * This annotation can be applied to template objects. If a template object's
1:  * class has this annotation and is passed multiple times to the Skeleton.newMock
1:  * method with the same interface class the same mock will be returned, unless
1:  * the garbage collector has cleared the previous mock.
1:  */
1: @Target(ElementType.TYPE)
1: @Retention(RetentionPolicy.RUNTIME)
1: public @interface Singleton
1: {
1: 
commit:4e2fb0c
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: package org.apache.aries.unittest.mocks.annotations;
0: 
0: import java.lang.annotation.ElementType;
0: import java.lang.annotation.Retention;
0: import java.lang.annotation.RetentionPolicy;
0: import java.lang.annotation.Target;
0: 
0: /**
0:  * This annotation can be applied to template objects. If a template object's
0:  * class has this annotation and is passed multiple times to the Skeleton.newMock
0:  * method with the same interface class the same mock will be returned, unless
0:  * the garbage collector has cleared the previous mock.
0:  */
0: @Target(ElementType.TYPE)
0: @Retention(RetentionPolicy.RUNTIME)
0: public @interface Singleton
0: {
0: 
1: }
============================================================================