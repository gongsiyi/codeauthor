1:c70a567: /*
1:c70a567:  * Licensed to the Apache Software Foundation (ASF) under one
1:c70a567:  * or more contributor license agreements.  See the NOTICE file
1:c70a567:  * distributed with this work for additional information
1:c70a567:  * regarding copyright ownership.  The ASF licenses this file
1:c70a567:  * to you under the Apache License, Version 2.0 (the
1:c70a567:  * "License"); you may not use this file except in compliance
1:c70a567:  * with the License.  You may obtain a copy of the License at
1:c70a567:  *
1:c70a567:  *   http://www.apache.org/licenses/LICENSE-2.0
1:c70a567:  *
1:c70a567:  * Unless required by applicable law or agreed to in writing,
1:c70a567:  * software distributed under the License is distributed on an
1:c70a567:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:c70a567:  * KIND, either express or implied.  See the License for the
1:c70a567:  * specific language governing permissions and limitations
1:c70a567:  * under the License.
1:c70a567:  */
1:c70a567: package org.apache.aries.application.management.repository;
3:c70a567: 
1:c70a567: import java.util.Set;
1:c70a567: 
1:c70a567: import org.apache.aries.application.Content;
1:c70a567: import org.apache.aries.application.DeploymentContent;
1:c70a567: import org.apache.aries.application.management.AriesApplication;
1:c70a567: import org.apache.aries.application.management.BundleInfo;
1:666dd1b: import org.apache.aries.application.management.spi.framework.BundleFramework;
1:89f804e: import org.apache.aries.application.management.spi.repository.BundleRepository;
1:89f804e: import org.apache.aries.application.management.spi.resolve.AriesApplicationResolver;
1:c70a567: import org.osgi.framework.Bundle;
1:c70a567: import org.osgi.framework.BundleException;
1:c70a567: import org.osgi.framework.Version;
1:c70a567: 
1:c70a567: public class ApplicationRepository implements BundleRepository
1:c70a567: {
1:c70a567:   private static final int REPOSITORY_COST = 0;
1:3006a3e: 
1:0907e54:   private AriesApplication app;
1:c70a567:   AriesApplicationResolver resolver;
1:c70a567: 
1:0907e54:   public ApplicationRepository(AriesApplication app)
1:c70a567:   {
1:0907e54:     this.app = app;
4:c70a567:   }
1:c70a567:   
1:c70a567:   public int getCost()
1:c70a567:   {
1:c70a567:     return REPOSITORY_COST;
1:c70a567:   }
1:c70a567: 
1:c70a567:   public BundleSuggestion suggestBundleToUse(DeploymentContent content)
1:c70a567:   {
1:3006a3e:     BundleInfo bundleInfo = null;
1:3006a3e:     if ((app.getBundleInfo() != null) && (!app.getBundleInfo().isEmpty())) {
1:3006a3e:       for (BundleInfo bi : app.getBundleInfo()) {
1:3006a3e:         if (bi.getSymbolicName().equals(content.getContentName()) && (bi.getVersion().equals(content.getVersion().getExactVersion()))) {
1:3006a3e:           bundleInfo = bi;
1:3006a3e:           break;
1:3006a3e:         }
1:3006a3e:       }
1:3006a3e:     }
1:3006a3e:     
1:3006a3e:     if (bundleInfo != null) {
1:3006a3e:       return new BundleSuggestionImpl(bundleInfo);
1:3006a3e:     } else {
1:3006a3e:       return null;
1:3006a3e:     }
1:0907e54:   }
1:c70a567: 
1:c70a567:   private class BundleSuggestionImpl implements BundleSuggestion
1:c70a567:   {
1:3006a3e:     private final BundleInfo bundleInfo;
1:0907e54:     
1:3006a3e:     BundleSuggestionImpl(BundleInfo bundleInfo)
1:c70a567:     {
1:3006a3e:       this.bundleInfo = bundleInfo;
1:0907e54:     }
1:c70a567: 
1:c70a567:     public int getCost()
1:c70a567:     {
1:c70a567:       return REPOSITORY_COST;
1:0907e54:     }
1:c70a567: 
1:c70a567:     public Set<Content> getExportPackage()
1:c70a567:     {
1:0907e54:       if (bundleInfo != null) {
1:c70a567:       return bundleInfo.getExportPackage();
1:0907e54:       } else {
1:0907e54:         return null;
1:0907e54:       }
1:c70a567:     }
1:c70a567: 
1:c70a567:     public Set<Content> getImportPackage()
1:c70a567:     {
1:0907e54:       if (bundleInfo != null) {
1:0907e54:         return bundleInfo.getImportPackage();
1:0907e54:         } else {
1:0907e54:           return null;
1:0907e54:         }
1:0907e54:       
1:c70a567:     }
1:c70a567: 
1:0907e54:     public Version getVersion() 
1:c70a567:     {
1:0907e54:       if (bundleInfo != null) {
1:0907e54:         return bundleInfo.getVersion();
1:0907e54:         } else {        	
1:0907e54:           return null;
1:0907e54:         }
1:0907e54:       
1:c70a567:     }
1:c70a567: 
1:666dd1b:     public Bundle install(BundleFramework framework, AriesApplication app) throws BundleException
1:c70a567:     {
1:0907e54:       if (bundleInfo != null ) {
1:666dd1b:         return framework.getIsolatedBundleContext().installBundle(bundleInfo.getLocation());
1:0907e54:       } else {
1:0907e54:         throw new BundleException("Unable to install the bundle, as the BundleInfo is null.");
1:0907e54:       }
1:c70a567:     }
1:c70a567:     
1:c70a567:   }
1:c70a567:   
1:c70a567: }
============================================================================
author:Chris Wilkinson
-------------------------------------------------------------------------------
commit:666dd1b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.spi.framework.BundleFramework;
/////////////////////////////////////////////////////////////////////////
1:     public Bundle install(BundleFramework framework, AriesApplication app) throws BundleException
1:         return framework.getIsolatedBundleContext().installBundle(bundleInfo.getLocation());
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.spi.repository.BundleRepository;
1: import org.apache.aries.application.management.spi.resolve.AriesApplicationResolver;
commit:3006a3e
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:     BundleInfo bundleInfo = null;
1:     if ((app.getBundleInfo() != null) && (!app.getBundleInfo().isEmpty())) {
1:       for (BundleInfo bi : app.getBundleInfo()) {
1:         if (bi.getSymbolicName().equals(content.getContentName()) && (bi.getVersion().equals(content.getVersion().getExactVersion()))) {
1:           bundleInfo = bi;
1:           break;
1:         }
1:       }
1:     }
1:     
1:     if (bundleInfo != null) {
1:       return new BundleSuggestionImpl(bundleInfo);
1:     } else {
1:       return null;
1:     }
1:     private final BundleInfo bundleInfo;
1:     BundleSuggestionImpl(BundleInfo bundleInfo)
1:       this.bundleInfo = bundleInfo;
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:0907e54
/////////////////////////////////////////////////////////////////////////
0: import java.util.Collections;
/////////////////////////////////////////////////////////////////////////
1:   private AriesApplication app;
1:   public ApplicationRepository(AriesApplication app)
1:     this.app = app;
/////////////////////////////////////////////////////////////////////////
0:     private BundleInfo bundleInfo = null;
0:       if ((app.getBundleInfo() != null) && (!app.getBundleInfo().isEmpty())) {
0:         for (BundleInfo bi : app.getBundleInfo()) {
0:           if (bi.getSymbolicName().equals(content.getContentName()) && (bi.getVersion().equals(content.getVersion().getExactVersion()))) {
0:             bundleInfo = bi;
0:             break;
1:           }
1:         }
1:       }
1: 
/////////////////////////////////////////////////////////////////////////
1:       if (bundleInfo != null) {
1:       } else {
1:         return null;
1:       }
1:       if (bundleInfo != null) {
1:         return bundleInfo.getImportPackage();
1:         } else {
1:           return null;
1:         }
1:       
1:     public Version getVersion() 
1:       if (bundleInfo != null) {
1:         return bundleInfo.getVersion();
1:         } else {        	
1:           return null;
1:         }
1:       
1:       if (bundleInfo != null ) {
0:         return ctx.installBundle(bundleInfo.getLocation());
1:       } else {
1:         throw new BundleException("Unable to install the bundle, as the BundleInfo is null.");
1:       }
commit:c70a567
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application.management.repository;
1: 
1: import java.util.Set;
1: 
0: import org.apache.aries.application.ApplicationMetadata;
1: import org.apache.aries.application.Content;
1: import org.apache.aries.application.DeploymentContent;
1: import org.apache.aries.application.management.AriesApplication;
0: import org.apache.aries.application.management.AriesApplicationResolver;
1: import org.apache.aries.application.management.BundleInfo;
0: import org.apache.aries.application.management.BundleRepository;
1: import org.osgi.framework.Bundle;
0: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.BundleException;
1: import org.osgi.framework.Version;
1: 
1: public class ApplicationRepository implements BundleRepository
1: {
1:   private static final int REPOSITORY_COST = 0;
0:   public static final String REPOSITORY_SCOPE = "repositoryScope";
1:   
1:   AriesApplicationResolver resolver;
1: 
0:   public ApplicationRepository(AriesApplicationResolver resolver)
1:   {
0:     this.resolver = resolver;
1:   }
1:   
1:   public int getCost()
1:   {
1:     return REPOSITORY_COST;
1:   }
1: 
1:   public BundleSuggestion suggestBundleToUse(DeploymentContent content)
1:   {
0:     return new BundleSuggestionImpl(content);
1:   }
1: 
1:   private class BundleSuggestionImpl implements BundleSuggestion
1:   {
0:     private BundleInfo bundleInfo;
1:     
0:     BundleSuggestionImpl(DeploymentContent content)
1:     {
0:       this.bundleInfo = resolver.getBundleInfo(content.getContentName(), content.getExactVersion());
1:     }
1:     
1:     public int getCost()
1:     {
1:       return REPOSITORY_COST;
1:     }
1: 
1:     public Set<Content> getExportPackage()
1:     {
1:       return bundleInfo.getExportPackage();
1:     }
1: 
1:     public Set<Content> getImportPackage()
1:     {
0:       return bundleInfo.getImportPackage();
1:     }
1: 
0:     public Version getVersion()
1:     {
0:       return bundleInfo.getVersion();
1:     }
1: 
0:     public Bundle install(BundleContext ctx, AriesApplication app) throws BundleException
1:     {
0:       return ctx.installBundle(bundleInfo.getLocation());
1:     }
1:     
1:   }
1:   
1: }
============================================================================