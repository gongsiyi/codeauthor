1:0afdb06: /*
1:0afdb06:  * Licensed under the Apache License, Version 2.0 (the "License");
1:0afdb06:  * you may not use this file except in compliance with the License.
1:0afdb06:  * You may obtain a copy of the License at
1:0afdb06:  *
1:0afdb06:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0afdb06:  *
1:0afdb06:  * Unless required by applicable law or agreed to in writing, software
1:0afdb06:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0afdb06:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0afdb06:  * See the License for the specific language governing permissions and
1:0afdb06:  * limitations under the License.
1:0afdb06:  */
1:0afdb06: package org.apache.aries.subsystem.itests.tb4;
1:0afdb06: 
1:0afdb06: import java.util.Dictionary;
1:0afdb06: import java.util.Hashtable;
1:0afdb06: 
1:0afdb06: import org.osgi.framework.BundleActivator;
1:0afdb06: import org.osgi.framework.BundleContext;
1:0afdb06: import org.osgi.framework.Filter;
1:0afdb06: import org.osgi.util.tracker.ServiceTracker;
1:0afdb06: 
1:0afdb06: public class Activator implements BundleActivator {
1:0afdb06:     private ServiceTracker<String, String> st;
1:0afdb06: 
1:0afdb06:     @Override
1:0afdb06:     public void start(BundleContext context) throws Exception {
1:0afdb06:         Filter filter = context.createFilter(
1:0afdb06:                 "(&(objectClass=java.lang.String)(test=testCompositeServiceImports))");
1:0afdb06:         st = new ServiceTracker<String, String>(context, filter, null);
1:0afdb06:         st.open();
1:0afdb06: 
1:0afdb06:         String svc = st.waitForService(5000);
1:0afdb06:         if ("testCompositeServiceImports".equals(svc)) {
1:0afdb06:             Dictionary<String, Object> props = new Hashtable<String, Object>();
1:0afdb06:             props.put("test", "tb4");
1:0afdb06:             context.registerService(String.class, "tb4", props);
1:0afdb06:         }
1:0afdb06:     }
1:0afdb06: 
1:0afdb06:     @Override
1:0afdb06:     public void stop(BundleContext context) throws Exception {
1:0afdb06:         st.close();
1:0afdb06:     }
1:0afdb06: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0afdb06
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.itests.tb4;
1: 
1: import java.util.Dictionary;
1: import java.util.Hashtable;
1: 
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.Filter;
1: import org.osgi.util.tracker.ServiceTracker;
1: 
1: public class Activator implements BundleActivator {
1:     private ServiceTracker<String, String> st;
1: 
1:     @Override
1:     public void start(BundleContext context) throws Exception {
1:         Filter filter = context.createFilter(
1:                 "(&(objectClass=java.lang.String)(test=testCompositeServiceImports))");
1:         st = new ServiceTracker<String, String>(context, filter, null);
1:         st.open();
1: 
1:         String svc = st.waitForService(5000);
1:         if ("testCompositeServiceImports".equals(svc)) {
1:             Dictionary<String, Object> props = new Hashtable<String, Object>();
1:             props.put("test", "tb4");
1:             context.registerService(String.class, "tb4", props);
1:         }
1:     }
1: 
1:     @Override
1:     public void stop(BundleContext context) throws Exception {
1:         st.close();
1:     }
1: }
============================================================================