1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.pojos;
1:f13c6ac: 
1:f13c6ac: import java.net.URI;
1:f13c6ac: import java.util.List;
1:f13c6ac: 
1:f13c6ac: public class PojoB {
1:f13c6ac: 
1:f13c6ac:     private List<Object> objects;
1:f13c6ac:     private URI uri;
1:f13c6ac:     private int number;
1:f13c6ac:     private BeanD bean;
1:f13c6ac:     
1:f13c6ac:     private boolean initCalled;
1:f13c6ac:     private boolean destroyCalled;
1:f13c6ac:     
1:f13c6ac:     public PojoB() {
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public PojoB(URI uri, int number) {
1:f13c6ac:         this.uri = uri;
1:f13c6ac:         this.number = number;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public URI getUri() {
1:f13c6ac:         return uri;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void setUri(URI uri) {
1:f13c6ac:         this.uri = uri;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public List<Object> getObjects() {
1:f13c6ac:         return objects;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void setObjects(List<Object> objects) {
1:f13c6ac:         this.objects = objects;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void init() {
1:f13c6ac:         initCalled = true;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public boolean getInitCalled() {
1:f13c6ac:         return initCalled;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public void destroy() {
1:f13c6ac:         destroyCalled = true;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public boolean getDestroyCalled() {
1:f13c6ac:         return destroyCalled;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public int getNumber() {
1:f13c6ac:         return number;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public BeanD getBean() {
1:f13c6ac:         if (bean == null) {
1:f13c6ac:             bean = new BeanD();
1:f13c6ac:         }
1:f13c6ac:         return bean;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public static PojoB createStatic(URI uri, int number) {
1:f13c6ac:         return new PojoB(URI.create(uri + "-static"), number);
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public PojoB createDynamic(URI uri, int number) {
1:f13c6ac:         return new PojoB(URI.create(uri + "-dynamic"), number);
1:f13c6ac:     }
1:f13c6ac: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.pojos;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint.pojos;
1: 
1: import java.net.URI;
1: import java.util.List;
1: 
1: public class PojoB {
1: 
1:     private List<Object> objects;
1:     private URI uri;
1:     private int number;
1:     private BeanD bean;
1:     
1:     private boolean initCalled;
1:     private boolean destroyCalled;
1:     
1:     public PojoB() {
1:     }
1:     
1:     public PojoB(URI uri, int number) {
1:         this.uri = uri;
1:         this.number = number;
1:     }
1: 
1:     public URI getUri() {
1:         return uri;
1:     }
1: 
1:     public void setUri(URI uri) {
1:         this.uri = uri;
1:     }
1: 
1:     public List<Object> getObjects() {
1:         return objects;
1:     }
1: 
1:     public void setObjects(List<Object> objects) {
1:         this.objects = objects;
1:     }
1: 
1:     public void init() {
1:         initCalled = true;
1:     }
1:     
1:     public boolean getInitCalled() {
1:         return initCalled;
1:     }
1:     
1:     public void destroy() {
1:         destroyCalled = true;
1:     }
1:     
1:     public boolean getDestroyCalled() {
1:         return destroyCalled;
1:     }
1:     
1:     public int getNumber() {
1:         return number;
1:     }
1:     
1:     public BeanD getBean() {
1:         if (bean == null) {
1:             bean = new BeanD();
1:         }
1:         return bean;
1:     }
1:     
1:     public static PojoB createStatic(URI uri, int number) {
1:         return new PojoB(URI.create(uri + "-static"), number);
1:     }
1:     
1:     public PojoB createDynamic(URI uri, int number) {
1:         return new PojoB(URI.create(uri + "-dynamic"), number);
1:     }
1: }
============================================================================