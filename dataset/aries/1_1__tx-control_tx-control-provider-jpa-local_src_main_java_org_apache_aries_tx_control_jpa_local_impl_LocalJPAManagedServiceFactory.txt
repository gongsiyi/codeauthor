1:84a8d37: /*
1:84a8d37:  * Licensed to the Apache Software Foundation (ASF) under one
1:84a8d37:  * or more contributor license agreements.  See the NOTICE file
1:84a8d37:  * distributed with this work for additional information
1:84a8d37:  * regarding copyright ownership.  The ASF licenses this file
1:84a8d37:  * to you under the Apache License, Version 2.0 (the
1:84a8d37:  * "License"); you may not use this file except in compliance
1:84a8d37:  * with the License.  You may obtain a copy of the License at
1:84a8d37:  *
1:84a8d37:  *   http://www.apache.org/licenses/LICENSE-2.0
1:84a8d37:  *
1:84a8d37:  * Unless required by applicable law or agreed to in writing,
1:84a8d37:  * software distributed under the License is distributed on an
1:84a8d37:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:84a8d37:  * KIND, either express or implied.  See the License for the
1:84a8d37:  * specific language governing permissions and limitations
1:84a8d37:  * under the License.
1:84a8d37:  */
1:84a8d37: package org.apache.aries.tx.control.jpa.local.impl;
1:84a8d37: 
1:84a8d37: import java.util.Map;
1:84a8d37: import java.util.Properties;
1:84a8d37: 
1:84a8d37: import javax.persistence.spi.PersistenceUnitTransactionType;
1:84a8d37: 
1:84a8d37: import org.apache.aries.tx.control.jpa.common.impl.AbstractJPAManagedServiceFactory;
1:84a8d37: import org.apache.aries.tx.control.jpa.common.impl.AbstractManagedJPADataSourceSetup;
1:84a8d37: import org.apache.aries.tx.control.jpa.common.impl.AbstractManagedJPAEMFLocator;
1:84a8d37: import org.apache.aries.tx.control.resource.common.impl.LifecycleAware;
1:84a8d37: import org.osgi.framework.BundleContext;
1:84a8d37: import org.osgi.framework.InvalidSyntaxException;
1:84a8d37: import org.osgi.service.cm.ConfigurationException;
1:84a8d37: 
1:84a8d37: public class LocalJPAManagedServiceFactory extends AbstractJPAManagedServiceFactory {
1:84a8d37: 
1:84a8d37: 	public LocalJPAManagedServiceFactory(BundleContext context) {
1:84a8d37: 		super(context);
1:84a8d37: 	}
1:84a8d37: 
1:84a8d37: 	@Override
1:84a8d37: 	public String getName() {
1:84a8d37: 		return "Aries JPAEntityManagerProvider (Local only) service";
1:84a8d37: 	}
1:84a8d37: 
1:84a8d37: 	@Override
1:84a8d37: 	protected AbstractManagedJPADataSourceSetup dataSourceTracking(BundleContext context, String pid, Map<String, Object> properties,
1:84a8d37: 			Properties jdbcProps, Map<String, Object> jpaProps) throws InvalidSyntaxException, ConfigurationException {
1:84a8d37: 		return new LocalJPADataSourceSetup(context, pid, jdbcProps, jpaProps, properties);
1:84a8d37: 	}
1:84a8d37: 
1:84a8d37: 	@Override
1:84a8d37: 	protected AbstractManagedJPAEMFLocator emfTracking(BundleContext context, String pid, Map<String, Object> properties,
1:84a8d37: 			Map<String, Object> jpaProps) throws InvalidSyntaxException, ConfigurationException {
1:84a8d37: 		return new LocalJPAEMFLocator(context, pid, jpaProps, properties, null);
1:84a8d37: 	}
1:84a8d37: 
1:84a8d37: 	@Override
1:84a8d37: 	protected PersistenceUnitTransactionType getTransactionType() {
1:84a8d37: 		return PersistenceUnitTransactionType.RESOURCE_LOCAL;
1:84a8d37: 	}
1:84a8d37: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:84a8d37
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.tx.control.jpa.local.impl;
1: 
1: import java.util.Map;
1: import java.util.Properties;
1: 
1: import javax.persistence.spi.PersistenceUnitTransactionType;
1: 
1: import org.apache.aries.tx.control.jpa.common.impl.AbstractJPAManagedServiceFactory;
1: import org.apache.aries.tx.control.jpa.common.impl.AbstractManagedJPADataSourceSetup;
1: import org.apache.aries.tx.control.jpa.common.impl.AbstractManagedJPAEMFLocator;
1: import org.apache.aries.tx.control.resource.common.impl.LifecycleAware;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.InvalidSyntaxException;
1: import org.osgi.service.cm.ConfigurationException;
1: 
1: public class LocalJPAManagedServiceFactory extends AbstractJPAManagedServiceFactory {
1: 
1: 	public LocalJPAManagedServiceFactory(BundleContext context) {
1: 		super(context);
1: 	}
1: 
1: 	@Override
1: 	public String getName() {
1: 		return "Aries JPAEntityManagerProvider (Local only) service";
1: 	}
1: 
1: 	@Override
1: 	protected AbstractManagedJPADataSourceSetup dataSourceTracking(BundleContext context, String pid, Map<String, Object> properties,
1: 			Properties jdbcProps, Map<String, Object> jpaProps) throws InvalidSyntaxException, ConfigurationException {
1: 		return new LocalJPADataSourceSetup(context, pid, jdbcProps, jpaProps, properties);
1: 	}
1: 
1: 	@Override
1: 	protected AbstractManagedJPAEMFLocator emfTracking(BundleContext context, String pid, Map<String, Object> properties,
1: 			Map<String, Object> jpaProps) throws InvalidSyntaxException, ConfigurationException {
1: 		return new LocalJPAEMFLocator(context, pid, jpaProps, properties, null);
1: 	}
1: 
1: 	@Override
1: 	protected PersistenceUnitTransactionType getTransactionType() {
1: 		return PersistenceUnitTransactionType.RESOURCE_LOCAL;
1: 	}
1: }
============================================================================