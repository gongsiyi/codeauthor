1:730e256: /*
1:730e256:  * Licensed to the Apache Software Foundation (ASF) under one
1:730e256:  * or more contributor license agreements.  See the NOTICE file
1:730e256:  * distributed with this work for additional information
1:730e256:  * regarding copyright ownership.  The ASF licenses this file
1:730e256:  * to you under the Apache License, Version 2.0 (the
1:730e256:  * "License"); you may not use this file except in compliance
1:730e256:  * with the License.  You may obtain a copy of the License at
1:730e256:  *
1:730e256:  *   http://www.apache.org/licenses/LICENSE-2.0
1:730e256:  *
1:730e256:  * Unless required by applicable law or agreed to in writing,
1:730e256:  * software distributed under the License is distributed on an
1:730e256:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:730e256:  * KIND, either express or implied.  See the License for the
1:730e256:  * specific language governing permissions and limitations
1:730e256:  * under the License.
1:730e256:  */
1:730e256: package org.apache.aries.proxy.itests;
3:730e256: 
1:ff49259: import org.ops4j.pax.exam.Configuration;
1:730e256: import org.ops4j.pax.exam.Option;
1:730e256: 
1:730e256: /**
1:730e256:  * This test runs the weaving proxy tests for the proxy uber bundle. 
1:730e256:  * It needs to be a separate class from the individual-bundle test, since equinox configuration
1:730e256:  * doesn't seem to be cleaned properly within the same test class, so we always run with the 
1:730e256:  * uber-bundle, which means we test nothing.
1:730e256:  *
1:730e256:  */
1:730e256: public class WeavingProxyUberBundleTest extends AbstractWeavingProxyTest
1:730e256: {
1:ff49259:   @Configuration
1:ff49259:   public Option[] configuration() {
1:ff49259:       return proxyUberBundle();
1:730e256:   }
1:730e256: 
1:730e256: }
============================================================================
author:Daniel Kulp
-------------------------------------------------------------------------------
commit:ff49259
/////////////////////////////////////////////////////////////////////////
1: import org.ops4j.pax.exam.Configuration;
/////////////////////////////////////////////////////////////////////////
1:   @Configuration
1:   public Option[] configuration() {
1:       return proxyUberBundle();
author:Holly Cummins
-------------------------------------------------------------------------------
commit:730e256
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.proxy.itests;
1: 
0: import static org.junit.Assert.assertEquals;
0: import static org.junit.Assert.assertTrue;
0: import static org.ops4j.pax.exam.CoreOptions.equinox;
0: import static org.apache.aries.itest.ExtraOptions.*;
1: 
0: import java.util.ArrayList;
0: import java.util.Arrays;
0: import java.util.Collection;
0: import java.util.concurrent.Callable;
1: 
0: import org.apache.aries.itest.AbstractIntegrationTest;
0: import org.apache.aries.proxy.FinalModifierException;
0: import org.apache.aries.proxy.ProxyManager;
0: import org.apache.aries.proxy.UnableToProxyException;
0: import org.junit.Test;
0: import org.junit.runner.RunWith;
0: import org.ops4j.pax.exam.CoreOptions;
1: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.container.def.PaxRunnerOptions;
0: import org.ops4j.pax.exam.container.def.options.CleanCachesOption;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
0: import org.osgi.framework.Bundle;
0: import org.osgi.framework.FrameworkUtil;
0: import static org.ops4j.pax.exam.CoreOptions.waitForFrameworkStartup;
0: import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.vmOption;
1: 
1: /**
1:  * This test runs the weaving proxy tests for the proxy uber bundle. 
1:  * It needs to be a separate class from the individual-bundle test, since equinox configuration
1:  * doesn't seem to be cleaned properly within the same test class, so we always run with the 
1:  * uber-bundle, which means we test nothing.
1:  *
1:  */
0: @RunWith(JUnit4TestRunner.class)
1: public class WeavingProxyUberBundleTest extends AbstractWeavingProxyTest
1: {
0:   @org.ops4j.pax.exam.junit.Configuration
0:   public static Option[] configuration37UberBundle() {
0:       return testOptions(
0:           generalOptions(), 
0:           proxyUberBundle(),
0:           equinox37()
0:       );
1:   }
1: 
1: }
============================================================================