1:f13c6ac: /**
1:f13c6ac:  *
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f13c6ac:  * contributor license agreements.  See the NOTICE file distributed with
1:f13c6ac:  * this work for additional information regarding copyright ownership.
1:f13c6ac:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f13c6ac:  * (the "License"); you may not use this file except in compliance with
1:f13c6ac:  * the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *     http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  *  Unless required by applicable law or agreed to in writing, software
1:f13c6ac:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:f13c6ac:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f13c6ac:  *  See the License for the specific language governing permissions and
1:f13c6ac:  *  limitations under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.di;
1:f13c6ac: 
1:f13c6ac: import java.util.List;
1:f13c6ac: 
1:f13c6ac: import org.osgi.service.blueprint.container.ComponentDefinitionException;
1:f13c6ac: 
1:f13c6ac: public class CircularDependencyException extends ComponentDefinitionException {
1:f13c6ac:     private final List<Recipe> circularDependency;
1:f13c6ac: 
1:f13c6ac:     public CircularDependencyException(List<Recipe> circularDependency) {
1:f13c6ac:         super(circularDependency.toString());
1:f13c6ac:         this.circularDependency = circularDependency;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public CircularDependencyException(String message, List<Recipe> circularDependency) {
1:f13c6ac:         super(message + ": " + circularDependency);
1:f13c6ac:         this.circularDependency = circularDependency;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public CircularDependencyException(String message, Throwable cause, List<Recipe> circularDependency) {
1:f13c6ac:         super(message + ": " + circularDependency, cause);
1:f13c6ac:         this.circularDependency = circularDependency;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public CircularDependencyException(Throwable cause, List<Recipe> circularDependency) {
1:f13c6ac:         super(circularDependency.toString(), cause);
1:f13c6ac:         this.circularDependency = circularDependency;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public List<Recipe> getCircularDependency() {
1:f13c6ac:         return circularDependency;
1:f13c6ac:     }
1:f13c6ac: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.di;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.blueprint.di;
1: 
1: import java.util.List;
1: 
1: import org.osgi.service.blueprint.container.ComponentDefinitionException;
1: 
1: public class CircularDependencyException extends ComponentDefinitionException {
1:     private final List<Recipe> circularDependency;
1: 
1:     public CircularDependencyException(List<Recipe> circularDependency) {
1:         super(circularDependency.toString());
1:         this.circularDependency = circularDependency;
1:     }
1: 
1:     public CircularDependencyException(String message, List<Recipe> circularDependency) {
1:         super(message + ": " + circularDependency);
1:         this.circularDependency = circularDependency;
1:     }
1: 
1:     public CircularDependencyException(String message, Throwable cause, List<Recipe> circularDependency) {
1:         super(message + ": " + circularDependency, cause);
1:         this.circularDependency = circularDependency;
1:     }
1: 
1:     public CircularDependencyException(Throwable cause, List<Recipe> circularDependency) {
1:         super(circularDependency.toString(), cause);
1:         this.circularDependency = circularDependency;
1:     }
1: 
1:     public List<Recipe> getCircularDependency() {
1:         return circularDependency;
1:     }
1: }
============================================================================