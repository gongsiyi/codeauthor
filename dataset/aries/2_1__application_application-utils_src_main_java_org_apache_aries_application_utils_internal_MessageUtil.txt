1:8914925: /*
1:8914925:  * Licensed to the Apache Software Foundation (ASF) under one
1:8914925:  * or more contributor license agreements.  See the NOTICE file
1:8914925:  * distributed with this work for additional information
1:8914925:  * regarding copyright ownership.  The ASF licenses this file
1:8914925:  * to you under the Apache License, Version 2.0 (the
1:8914925:  * "License"); you may not use this file except in compliance
1:8914925:  * with the License.  You may obtain a copy of the License at
1:8914925:  *
1:8914925:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8914925:  *
1:8914925:  * Unless required by applicable law or agreed to in writing,
1:8914925:  * software distributed under the License is distributed on an
1:8914925:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:8914925:  * KIND, either express or implied.  See the License for the
1:8914925:  * specific language governing permissions and limitations
1:8914925:  * under the License.
1:8914925:  */
1:8914925: 
1:8914925: package org.apache.aries.application.utils.internal;
1:8914925: 
1:8914925: import java.text.MessageFormat;
1:8914925: import java.util.ResourceBundle;
1:8914925: 
1:8914925: public class MessageUtil
1:8914925: {
1:8914925:   /** The resource bundle for blueprint messages */
1:8914925:   private final static ResourceBundle messages = ResourceBundle.getBundle("org.apache.aries.application.utils.messages.APPUTILSmessages");
1:8914925:   
1:8914925:   /**
1:8914925:    * Resolve a message from the bundle, including any necessary formatting.
1:8914925:    * 
1:8914925:    * @param key     the message key.
1:8914925:    * @param inserts any required message inserts.
1:8914925:    * @return        the message translated into the server local.
1:8914925:    */
1:8914925:   public static final String getMessage(String key, Object ... inserts)
1:8914925:   {
1:8914925:     String msg = messages.getString(key);
1:8914925:     
1:8914925:     if (inserts.length > 0)
1:8914925:       msg = MessageFormat.format(msg, inserts);
1:8914925:     
1:8914925:     return msg;
1:8914925:   }
1:8914925: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:8914925
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.application.utils.internal;
1: 
1: import java.text.MessageFormat;
1: import java.util.ResourceBundle;
1: 
1: public class MessageUtil
1: {
1:   /** The resource bundle for blueprint messages */
1:   private final static ResourceBundle messages = ResourceBundle.getBundle("org.apache.aries.application.utils.messages.APPUTILSmessages");
1:   
1:   /**
1:    * Resolve a message from the bundle, including any necessary formatting.
1:    * 
1:    * @param key     the message key.
1:    * @param inserts any required message inserts.
1:    * @return        the message translated into the server local.
1:    */
1:   public static final String getMessage(String key, Object ... inserts)
1:   {
1:     String msg = messages.getString(key);
1:     
1:     if (inserts.length > 0)
1:       msg = MessageFormat.format(msg, inserts);
1:     
1:     return msg;
1:   }
1: }
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:3c38842
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: 
0: package org.apache.aries.application.utils.internal;
0: 
0: import java.text.MessageFormat;
0: import java.util.ResourceBundle;
0: 
0: public class MessageUtil
0: {
0:   /** The resource bundle for blueprint messages */
0:   private final static ResourceBundle messages = ResourceBundle.getBundle("org.apache.aries.application.utils.messages.APPUTILSmessages");
0:   
0:   /**
0:    * Resolve a message from the bundle, including any necessary formatting.
0:    * 
0:    * @param key     the message key.
0:    * @param inserts any required message inserts.
0:    * @return        the message translated into the server local.
0:    */
0:   public static final String getMessage(String key, Object ... inserts)
0:   {
0:     String msg = messages.getString(key);
0:     
0:     if (inserts.length > 0)
0:       msg = MessageFormat.format(msg, inserts);
0:     
0:     return msg;
0:   }
0: }
============================================================================