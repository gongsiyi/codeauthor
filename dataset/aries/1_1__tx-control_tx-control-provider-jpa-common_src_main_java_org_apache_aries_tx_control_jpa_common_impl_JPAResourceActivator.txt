1:0e20712: /*
1:0e20712:  * Licensed to the Apache Software Foundation (ASF) under one
1:0e20712:  * or more contributor license agreements.  See the NOTICE file
1:0e20712:  * distributed with this work for additional information
1:0e20712:  * regarding copyright ownership.  The ASF licenses this file
1:0e20712:  * to you under the Apache License, Version 2.0 (the
1:0e20712:  * "License"); you may not use this file except in compliance
1:0e20712:  * with the License.  You may obtain a copy of the License at
1:0e20712:  *
1:0e20712:  *   http://www.apache.org/licenses/LICENSE-2.0
1:0e20712:  *
1:0e20712:  * Unless required by applicable law or agreed to in writing,
1:0e20712:  * software distributed under the License is distributed on an
1:0e20712:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:0e20712:  * KIND, either express or implied.  See the License for the
1:0e20712:  * specific language governing permissions and limitations
1:0e20712:  * under the License.
1:0e20712:  */
1:0e20712: package org.apache.aries.tx.control.jpa.common.impl;
1:0e20712: 
1:0e20712: import org.apache.aries.tx.control.resource.common.impl.ResourceActivator;
1:0e20712: import org.apache.geronimo.specs.jpa.PersistenceActivator;
1:0e20712: import org.osgi.framework.BundleActivator;
1:0e20712: import org.osgi.framework.BundleContext;
1:0e20712: import org.osgi.service.transaction.control.jpa.JPAEntityManagerProviderFactory;
1:0e20712: import org.slf4j.Logger;
1:0e20712: import org.slf4j.LoggerFactory;
1:0e20712: 
1:0e20712: public abstract class JPAResourceActivator extends
1:0e20712: 	ResourceActivator<AbstractJPAEntityManagerProvider, ResourceTrackingJPAEntityManagerProviderFactory>{
1:0e20712: 
1:0e20712: 	private static final Logger LOG = LoggerFactory.getLogger(JPAResourceActivator.class);
1:0e20712: 	
1:0e20712: 	private final BundleActivator geronimoActivator = new PersistenceActivator();
1:0e20712: 	
1:0e20712: 	@Override
1:0e20712: 	public void start(BundleContext context) throws Exception {
1:0e20712: 		LOG.debug("Starting JPA API trackers");
1:0e20712: 		geronimoActivator.start(context);
1:0e20712: 		super.start(context);
1:0e20712: 	}
1:0e20712: 
1:0e20712: 	@Override
1:0e20712: 	public void stop(BundleContext context) throws Exception {
1:0e20712: 		try {
1:0e20712: 			super.stop(context);
1:0e20712: 		} finally {
1:0e20712: 			LOG.debug("Stopping JPA API trackers");
1:0e20712: 			geronimoActivator.stop(context);
1:0e20712: 		}
1:0e20712: 	}
1:0e20712: 
1:0e20712: 
1:0e20712: 	@Override
1:0e20712: 	protected Class<JPAEntityManagerProviderFactory> getAdvertisedInterface() {
1:0e20712: 		return JPAEntityManagerProviderFactory.class;
1:0e20712: 	}
1:0e20712: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:0e20712
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.tx.control.jpa.common.impl;
1: 
1: import org.apache.aries.tx.control.resource.common.impl.ResourceActivator;
1: import org.apache.geronimo.specs.jpa.PersistenceActivator;
1: import org.osgi.framework.BundleActivator;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.service.transaction.control.jpa.JPAEntityManagerProviderFactory;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: public abstract class JPAResourceActivator extends
1: 	ResourceActivator<AbstractJPAEntityManagerProvider, ResourceTrackingJPAEntityManagerProviderFactory>{
1: 
1: 	private static final Logger LOG = LoggerFactory.getLogger(JPAResourceActivator.class);
1: 	
1: 	private final BundleActivator geronimoActivator = new PersistenceActivator();
1: 	
1: 	@Override
1: 	public void start(BundleContext context) throws Exception {
1: 		LOG.debug("Starting JPA API trackers");
1: 		geronimoActivator.start(context);
1: 		super.start(context);
1: 	}
1: 
1: 	@Override
1: 	public void stop(BundleContext context) throws Exception {
1: 		try {
1: 			super.stop(context);
1: 		} finally {
1: 			LOG.debug("Stopping JPA API trackers");
1: 			geronimoActivator.stop(context);
1: 		}
1: 	}
1: 
1: 
1: 	@Override
1: 	protected Class<JPAEntityManagerProviderFactory> getAdvertisedInterface() {
1: 		return JPAEntityManagerProviderFactory.class;
1: 	}
1: }
============================================================================