1:a5079e5: /*
1:a5079e5:  * Licensed to the Apache Software Foundation (ASF) under one
1:a5079e5:  * or more contributor license agreements.  See the NOTICE file
1:a5079e5:  * distributed with this work for additional information
1:a5079e5:  * regarding copyright ownership.  The ASF licenses this file
1:a5079e5:  * to you under the Apache License, Version 2.0 (the
1:a5079e5:  * "License"); you may not use this file except in compliance
1:a5079e5:  * with the License.  You may obtain a copy of the License at
1:a5079e5:  *
1:a5079e5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a5079e5:  *
1:a5079e5:  * Unless required by applicable law or agreed to in writing,
1:a5079e5:  * software distributed under the License is distributed on an
1:a5079e5:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:a5079e5:  * KIND, either express or implied.  See the License for the
1:a5079e5:  * specific language governing permissions and limitations
1:a5079e5:  * under the License.
2:a5079e5:  */
1:a5079e5: package org.apache.aries.application.modelling;
1:a5079e5: 
1:7281615: import java.io.IOException;
1:7281615: import java.io.InputStream;
1:7281615: 
1:910fec0: import org.apache.aries.util.filesystem.IDirectory;
1:a5079e5: 
1:a5079e5: public interface ModelledResourceManager
1:a5079e5: {
1:a5079e5:   /**
1:7281615:    * Utility interface for re-presenting a source of InputStreams
1:7281615:    */
1:7281615:   interface InputStreamProvider {
1:7281615:     /** 
1:7281615:      * Return a fresh input stream
1:7281615:      */
1:7281615:     InputStream open() throws IOException;
1:7281615:   }
1:7281615:     
1:7281615:   /**
1:7281615:    * Obtain a ModelledResource object.
1:7281615:    * @param uri The URI to the conceptual location of the bundle, that will be returned from the getLocation method
1:7281615:    * on {@link ModelledResource}
1:a5079e5:    * @param bundle the bundle file
1:7ceb4ac:    * @return the modelled resource.
1:7281615:    */    
1:a5079e5:   ModelledResource getModelledResource(String uri, IDirectory bundle) throws ModellerException;
1:7281615:   
1:7281615:   /**
1:7281615:    * Obtain a ModelledResource object. 
1:7281615:    * 
1:7281615:    * This method is equivalent to calling <pre>getModelledResource(bundle.toURL().toURI().toString(), bundle)</pre>
1:7281615:    * @param bundle the bundle file
1:7281615:    * @return the modelled resource.
1:7281615:    */    
1:7281615:   ModelledResource getModelledResource(IDirectory bundle) throws ModellerException;
1:7281615:   
1:7281615:   /**
1:7281615:    * Obtain a ModelledResource via InputStreams
1:7281615:    * 
1:7281615:    * 
1:7281615:    * @param uri The URI to the conceptual location of the bundle, that will be returned from the getLocation method
1:7281615:    * on {@link ModelledResource}
1:7281615:    * @param bundle The bundle
1:7281615:    * @return
1:7281615:    * @throws ModellerException
1:7281615:    */
1:7281615:   ModelledResource getModelledResource(String uri, InputStreamProvider bundle) throws ModellerException;
1:a5079e5: 
1:7281615:   /**
1:7281615:    * Parse service and reference elements of a bundle
1:7281615:    * @param archive
1:7281615:    * @return
1:7281615:    * @throws ModellerException
1:7281615:    */
1:6cff8dd:   ParsedServiceElements getServiceElements (IDirectory archive) throws ModellerException; 
1:6cff8dd: 
1:7281615:   /**
1:7281615:    * Parse service and reference elements of a bundle
1:7281615:    * @param archive
1:7281615:    * @return
1:7281615:    * @throws ModellerException
1:7281615:    */
1:7281615:   ParsedServiceElements getServiceElements (InputStreamProvider archive) throws ModellerException;   
1:a5079e5: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:7281615
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1: import java.io.InputStream;
1: 
1:    * Utility interface for re-presenting a source of InputStreams
1:    */
1:   interface InputStreamProvider {
1:     /** 
1:      * Return a fresh input stream
1:      */
1:     InputStream open() throws IOException;
1:   }
1:     
1:   /**
1:    * Obtain a ModelledResource object.
1:    * @param uri The URI to the conceptual location of the bundle, that will be returned from the getLocation method
1:    * on {@link ModelledResource}
1:    */    
1:   
1:   /**
1:    * Obtain a ModelledResource object. 
1:    * 
1:    * This method is equivalent to calling <pre>getModelledResource(bundle.toURL().toURI().toString(), bundle)</pre>
1:    * @param bundle the bundle file
1:    * @return the modelled resource.
1:    */    
1:   ModelledResource getModelledResource(IDirectory bundle) throws ModellerException;
1:   
1:   /**
1:    * Obtain a ModelledResource via InputStreams
1:    * 
1:    * 
1:    * @param uri The URI to the conceptual location of the bundle, that will be returned from the getLocation method
1:    * on {@link ModelledResource}
1:    * @param bundle The bundle
1:    * @return
1:    * @throws ModellerException
1:    */
1:   ModelledResource getModelledResource(String uri, InputStreamProvider bundle) throws ModellerException;
1:   /**
1:    * Parse service and reference elements of a bundle
1:    * @param archive
1:    * @return
1:    * @throws ModellerException
1:    */
1:   /**
1:    * Parse service and reference elements of a bundle
1:    * @param archive
1:    * @return
1:    * @throws ModellerException
1:    */
1:   ParsedServiceElements getServiceElements (InputStreamProvider archive) throws ModellerException;   
commit:910fec0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.util.filesystem.IDirectory;
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return the modelled resource.
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:6cff8dd
/////////////////////////////////////////////////////////////////////////
1:   ParsedServiceElements getServiceElements (IDirectory archive) throws ModellerException; 
1: 
commit:a5079e5
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application.modelling;
1: 
0: import org.apache.aries.application.filesystem.IDirectory;
1: 
1: public interface ModelledResourceManager
1: {
1:   /**
0:    * Obtain a ModelledResource object
0:    * @param uri the file uri
1:    * @param bundle the bundle file
0:    * @return
1:    */
1:   ModelledResource getModelledResource(String uri, IDirectory bundle) throws ModellerException;
1: 
1: }
============================================================================