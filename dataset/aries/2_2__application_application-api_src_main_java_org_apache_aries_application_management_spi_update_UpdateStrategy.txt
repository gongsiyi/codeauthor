1:8151f8c: /*
1:8151f8c:  * Licensed to the Apache Software Foundation (ASF) under one
1:8151f8c:  * or more contributor license agreements.  See the NOTICE file
1:8151f8c:  * distributed with this work for additional information
1:8151f8c:  * regarding copyright ownership.  The ASF licenses this file
1:8151f8c:  * to you under the Apache License, Version 2.0 (the
1:8151f8c:  * "License"); you may not use this file except in compliance
1:8151f8c:  * with the License.  You may obtain a copy of the License at
1:8151f8c:  *
1:8151f8c:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8151f8c:  *
1:8151f8c:  * Unless required by applicable law or agreed to in writing,
1:8151f8c:  * software distributed under the License is distributed on an
1:8151f8c:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8151f8c:  * KIND, either express or implied.  See the License for the
1:8151f8c:  * specific language governing permissions and limitations
1:8151f8c:  * under the License.
1:8151f8c:  */
1:89f804e: package org.apache.aries.application.management.spi.update;
1:8151f8c: 
1:8151f8c: import java.util.Collection;
1:8151f8c: import java.util.Map;
1:8151f8c: 
1:8151f8c: import org.apache.aries.application.DeploymentContent;
1:8151f8c: import org.apache.aries.application.DeploymentMetadata;
1:8151f8c: import org.apache.aries.application.management.AriesApplication;
1:8151f8c: import org.apache.aries.application.management.UpdateException;
1:89f804e: import org.apache.aries.application.management.spi.framework.BundleFramework;
1:89f804e: import org.apache.aries.application.management.spi.repository.BundleRepository;
1:89f804e: import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;
1:8151f8c: import org.osgi.framework.Bundle;
1:9db128e: import org.osgi.framework.BundleException;
1:8151f8c: 
1:8151f8c: /**
1:8151f8c:  * Plug point for update implementation
1:8151f8c:  */
1:8151f8c: public interface UpdateStrategy {
1:8151f8c: 
1:8151f8c:   /**
1:8151f8c:    * Are the two deployments subject to update or do they require full reinstall
1:8151f8c:    */
1:8151f8c:   public boolean allowsUpdate(DeploymentMetadata newMetadata, DeploymentMetadata oldMetadata);
1:8151f8c:   
1:8151f8c:   /**
1:8151f8c:    * Update an application
1:8151f8c:    */
1:8151f8c:   public void update(UpdateInfo paramUpdateInfo) throws UpdateException;
1:8151f8c: 
1:8151f8c:   /**
1:8151f8c:    * Representation for an update request
1:8151f8c:    */
1:8151f8c:   public static interface UpdateInfo
1:8151f8c:   {
1:8151f8c:     /**
1:8151f8c:      * Find {@link BundleSuggestion} objects for new bundle requests
1:8151f8c:      */
1:8151f8c:     public Map<DeploymentContent, BundleRepository.BundleSuggestion> suggestBundle(Collection<DeploymentContent> bundles)
1:9db128e:       throws BundleException;
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Register a new bundle with the application (i.e. a new bundle was installed)
1:8151f8c:      */
1:8151f8c:     public void register(Bundle bundle);
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Unregister a bundle from the application (i.e. the bundle was uninstalled)
1:8151f8c:      */
1:8151f8c:     public void unregister(Bundle bundle);
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Get a {@link BundleFramework} object for the shared framework
1:8151f8c:      */
1:8151f8c:     public BundleFramework getSharedFramework();
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Get a {@link BundleFramework} object for the isolated framework corresponding 
1:8151f8c:      * to the application to be updated
1:8151f8c:      */
1:8151f8c:     public BundleFramework getAppFramework();
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Get the {@link DeploymentMetadata} that is currently active and to be phased out
1:8151f8c:      */
1:8151f8c:     public DeploymentMetadata getOldMetadata();
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Get the {@link DeploymentMetadata} that is to be activated
1:8151f8c:      */
1:8151f8c:     public DeploymentMetadata getNewMetadata();
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Get the {@link AriesApplication} object being updated
1:8151f8c:      */
1:8151f8c:     public AriesApplication getApplication();
1:8151f8c: 
1:8151f8c:     /**
1:8151f8c:      * Whether to start any newly installed bundles
1:8151f8c:      */
1:8151f8c:     public boolean startBundles();
1:8151f8c:   }
1:8151f8c: }
============================================================================
author:Chris Wilkinson
-------------------------------------------------------------------------------
commit:9db128e
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.BundleException;
/////////////////////////////////////////////////////////////////////////
1:       throws BundleException;
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.management.spi.update;
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.spi.framework.BundleFramework;
1: import org.apache.aries.application.management.spi.repository.BundleRepository;
0: import org.apache.aries.application.management.spi.repository.ContextException;
1: import org.apache.aries.application.management.spi.repository.BundleRepository.BundleSuggestion;
commit:8151f8c
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.application.management.provider;
1: 
1: import java.util.Collection;
1: import java.util.Map;
1: 
1: import org.apache.aries.application.DeploymentContent;
1: import org.apache.aries.application.DeploymentMetadata;
1: import org.apache.aries.application.management.AriesApplication;
0: import org.apache.aries.application.management.BundleFramework;
0: import org.apache.aries.application.management.BundleRepository;
0: import org.apache.aries.application.management.ContextException;
1: import org.apache.aries.application.management.UpdateException;
0: import org.apache.aries.application.management.BundleRepository.BundleSuggestion;
1: import org.osgi.framework.Bundle;
1: 
1: /**
1:  * Plug point for update implementation
1:  */
1: public interface UpdateStrategy {
1: 
1:   /**
1:    * Are the two deployments subject to update or do they require full reinstall
1:    */
1:   public boolean allowsUpdate(DeploymentMetadata newMetadata, DeploymentMetadata oldMetadata);
1:   
1:   /**
1:    * Update an application
1:    */
1:   public void update(UpdateInfo paramUpdateInfo) throws UpdateException;
1: 
1:   /**
1:    * Representation for an update request
1:    */
1:   public static interface UpdateInfo
1:   {
1:     /**
1:      * Find {@link BundleSuggestion} objects for new bundle requests
1:      */
1:     public Map<DeploymentContent, BundleRepository.BundleSuggestion> suggestBundle(Collection<DeploymentContent> bundles)
0:       throws ContextException;
1: 
1:     /**
1:      * Register a new bundle with the application (i.e. a new bundle was installed)
1:      */
1:     public void register(Bundle bundle);
1: 
1:     /**
1:      * Unregister a bundle from the application (i.e. the bundle was uninstalled)
1:      */
1:     public void unregister(Bundle bundle);
1: 
1:     /**
1:      * Get a {@link BundleFramework} object for the shared framework
1:      */
1:     public BundleFramework getSharedFramework();
1: 
1:     /**
1:      * Get a {@link BundleFramework} object for the isolated framework corresponding 
1:      * to the application to be updated
1:      */
1:     public BundleFramework getAppFramework();
1: 
1:     /**
1:      * Get the {@link DeploymentMetadata} that is currently active and to be phased out
1:      */
1:     public DeploymentMetadata getOldMetadata();
1: 
1:     /**
1:      * Get the {@link DeploymentMetadata} that is to be activated
1:      */
1:     public DeploymentMetadata getNewMetadata();
1: 
1:     /**
1:      * Get the {@link AriesApplication} object being updated
1:      */
1:     public AriesApplication getApplication();
1: 
1:     /**
1:      * Whether to start any newly installed bundles
1:      */
1:     public boolean startBundles();
1:   }
1: }
============================================================================