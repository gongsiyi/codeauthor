1:86224ba: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:86224ba:  *  contributor license agreements.  See the NOTICE file distributed with
1:86224ba:  *  this work for additional information regarding copyright ownership.
1:86224ba:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:86224ba:  *  (the "License"); you may not use this file except in compliance with
1:86224ba:  *  the License.  You may obtain a copy of the License at
1:86224ba:  *
1:86224ba:  *     http://www.apache.org/licenses/LICENSE-2.0
1:86224ba:  *
1:86224ba:  *  Unless required by applicable law or agreed to in writing, software
1:86224ba:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:86224ba:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:86224ba:  *  See the License for the specific language governing permissions and
1:86224ba:  *  limitations under the License.
1:cbf9be0:  */
1:6d497a2: package org.apache.aries.jpa.container.itest;
4:3b80dcd: 
1:2cfdf52: import static org.junit.Assert.assertTrue;
1:2cfdf52: 
1:2cfdf52: import java.util.Arrays;
1:2cfdf52: 
1:e5c89d2: import org.apache.aries.jpa.container.itest.entities.Car;
1:3b80dcd: import org.eclipse.persistence.internal.weaving.PersistenceWeaved;
1:3b80dcd: import org.junit.Test;
1:ece43ad: import org.ops4j.pax.exam.Configuration;
1:01b1fa4: import org.ops4j.pax.exam.Option;
1:2cfdf52: 
1:6d497a2: public class JPAContainerEclipseLinkTest extends JPAContainerTest {
1:6d497a2: 
1:01b1fa4:     @Configuration
1:ece43ad:     public Option[] eclipseLinkConfig() {
1:2cfdf52:         return new Option[] {
1:2cfdf52:             baseOptions(), //
1:2cfdf52:             ariesJpa21(), //
1:f50875c:             jta12Bundles(), //
1:2cfdf52:             eclipseLink(), //
1:2cfdf52:             derbyDSF(), //
1:e5c89d2:             testBundle()
1:2cfdf52:         };
1:01b1fa4:     }
1:2cfdf52: 
1:01b1fa4:     @Test
1:01b1fa4:     public void testClassIsWoven() throws Exception {
1:2cfdf52:         assertTrue("Not PersistenceCapable",
1:2cfdf52:                    Arrays.asList(Car.class.getInterfaces()).contains(PersistenceWeaved.class));
1:01b1fa4:     }
1:01b1fa4: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:f50875c
/////////////////////////////////////////////////////////////////////////
1:             jta12Bundles(), //
commit:6d497a2
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.jpa.container.itest;
/////////////////////////////////////////////////////////////////////////
1: public class JPAContainerEclipseLinkTest extends JPAContainerTest {
1: 
/////////////////////////////////////////////////////////////////////////
commit:e5c89d2
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.jpa.container.itest.entities.Car;
/////////////////////////////////////////////////////////////////////////
1:             testBundle()
commit:2cfdf52
/////////////////////////////////////////////////////////////////////////
1: import static org.junit.Assert.assertTrue;
1: 
1: import java.util.Arrays;
1: 
1:         return new Option[] {
1:             baseOptions(), //
1:             ariesJpa21(), //
1:             eclipseLink(), //
1:             derbyDSF(), //
0:             testBundleAdvanced()
1:         };
1: 
1:         assertTrue("Not PersistenceCapable",
1:                    Arrays.asList(Car.class.getInterfaces()).contains(PersistenceWeaved.class));
1: 
commit:3b80dcd
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.jpa.container.PersistenceUnitConstants;
0: import org.apache.aries.jpa.container.advanced.itest.bundle.entities.Car;
1: import org.eclipse.persistence.internal.weaving.PersistenceWeaved;
1: import org.junit.Test;
0: import static org.junit.Assert.assertTrue;
0: import static org.ops4j.pax.exam.CoreOptions.*;
1: 
0: import java.util.Arrays;
1: 
0: import javax.persistence.EntityManagerFactory;
1: 
0:             baseOptions(),
0:             ariesJpa21(),
0:             eclipseLink(),
0:             testBundleAdvanced()          
0:       Thread.sleep(200);
1: 	
commit:ece43ad
/////////////////////////////////////////////////////////////////////////
1: import org.ops4j.pax.exam.Configuration;
1:     public Option[] eclipseLinkConfig() {
0:         		baseOptions(), 
0:         		eclipseLink(),
0:         		openJpa(),
0:         		testBundleAdvanced()
0: 
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:cbf9be0
/////////////////////////////////////////////////////////////////////////
0:     /* Aries-811: EclipseLink removed from build to debug other build breaks
/////////////////////////////////////////////////////////////////////////
1: 	*/
commit:528a1f0
/////////////////////////////////////////////////////////////////////////
0: import static org.apache.aries.itest.ExtraOptions.mavenBundle;
/////////////////////////////////////////////////////////////////////////
0: import org.junit.Ignore;
0: @Ignore
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:86224ba
/////////////////////////////////////////////////////////////////////////
1: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
0:  */
0: import static org.apache.aries.itest.ExtraOptions.*;
/////////////////////////////////////////////////////////////////////////
0:       context().getService(EntityManagerFactory.class, "(&(osgi.unit.name=test-unit)(" + PersistenceUnitConstants.CONTAINER_MANAGED_PERSISTENCE_UNIT + "=true))");
0:       
commit:b95cbad
/////////////////////////////////////////////////////////////////////////
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.jpa").noStart(),
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.core").noStart(),
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.asm").noStart(),
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.antlr").noStart(),
commit:01b1fa4
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.jpa.advanced.features.itest;
0: 
0: import static org.junit.Assert.assertTrue;
0: import static org.ops4j.pax.exam.CoreOptions.options;
0: 
0: import java.util.Arrays;
0: 
0: import javax.persistence.EntityManagerFactory;
0: 
0: import org.apache.aries.jpa.container.PersistenceUnitConstants;
0: import org.apache.aries.jpa.container.advanced.itest.bundle.entities.Car;
0: import org.eclipse.persistence.internal.weaving.PersistenceWeaved;
0: import org.junit.Test;
0: import org.junit.runner.RunWith;
1: import org.ops4j.pax.exam.Option;
0: import org.ops4j.pax.exam.junit.Configuration;
0: import org.ops4j.pax.exam.junit.JUnit4TestRunner;
0: 
0: @RunWith(JUnit4TestRunner.class)
0: public class EclipseLinkWeavingAndAnnotationScanningTest extends JPAWeavingAndAnnotationScanningTest {
1:     @Configuration
0:     public static Option[] eclipseLinkConfig() {
0:         return options(        
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.jpa"),
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.core"),
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.asm"),
0:                 mavenBundle("org.eclipse.persistence", "org.eclipse.persistence.antlr"),
0:                 
0:                 mavenBundle("org.apache.aries.jpa", "org.apache.aries.jpa.eclipselink.adapter")
0:         );
1:     }
0:     
0:     
1:     @Test
1:     public void testClassIsWoven() throws Exception {
0:       getOsgiService(bundleContext, EntityManagerFactory.class, "(&(osgi.unit.name=test-unit)(" + PersistenceUnitConstants.CONTAINER_MANAGED_PERSISTENCE_UNIT + "=true))", DEFAULT_TIMEOUT);
0:       assertTrue("Not PersistenceCapable", Arrays.asList(Car.class.getInterfaces())
0:           .contains(PersistenceWeaved.class));
1:     }
0: 
1: }
============================================================================