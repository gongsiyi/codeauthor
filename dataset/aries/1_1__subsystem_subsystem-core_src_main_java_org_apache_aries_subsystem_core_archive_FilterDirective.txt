1:a14f2fd: /*
1:a14f2fd:  * Licensed under the Apache License, Version 2.0 (the "License");
1:a14f2fd:  * you may not use this file except in compliance with the License.
1:a14f2fd:  * You may obtain a copy of the License at
1:a14f2fd:  *
1:a14f2fd:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a14f2fd:  *
1:a14f2fd:  * Unless required by applicable law or agreed to in writing, software
1:a14f2fd:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a14f2fd:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a14f2fd:  * See the License for the specific language governing permissions and
1:a14f2fd:  * limitations under the License.
1:a14f2fd:  */
1:fc759fb: package org.apache.aries.subsystem.core.archive;
1:fc759fb: 
1:2ffcfb9: import org.apache.aries.subsystem.core.capabilityset.SimpleFilter;
1:fc759fb: import org.osgi.framework.Constants;
1:fc759fb: 
1:fc759fb: public class FilterDirective extends AbstractDirective {
1:fc759fb: 	public static final String NAME = Constants.FILTER_DIRECTIVE;
1:fc759fb: 	
1:2ffcfb9: 	private final SimpleFilter filter;
1:2ffcfb9: 	
1:fc759fb: 	public FilterDirective(String value) {
1:fc759fb: 		super(NAME, value);
1:2ffcfb9: 		filter = SimpleFilter.parse(value);
3:fc759fb: 	}
1:fc759fb: 
1:2ffcfb9: 	@Override
1:2ffcfb9:     public String toString() {
1:fc759fb: 		return new StringBuilder()
1:fc759fb: 		.append(getName())
1:fc759fb: 		.append(":=\"")
1:fc759fb: 		.append(getValue())
1:fc759fb: 		.append('\"')
1:fc759fb: 		.toString();
1:fc759fb: 	}
1:2ffcfb9: 	
1:2ffcfb9: 	@Override
1:2ffcfb9:     public int hashCode() {
1:2ffcfb9:         return 31 * 17 + filter.hashCode();
1:2ffcfb9:     }
1:2ffcfb9:     
1:2ffcfb9:     @Override
1:2ffcfb9:     public boolean equals(Object o) {
1:2ffcfb9:     	if (o == this) {
1:2ffcfb9:     		return true;
1:2ffcfb9:     	}
1:2ffcfb9:     	if (!(o instanceof FilterDirective)) {
1:2ffcfb9:     		return false;
1:2ffcfb9:     	}
1:2ffcfb9:     	FilterDirective that = (FilterDirective)o;
1:2ffcfb9:     	return that.filter.equals(this.filter);
1:2ffcfb9:     }
1:fc759fb: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:2ffcfb9
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.subsystem.core.capabilityset.SimpleFilter;
1: 	private final SimpleFilter filter;
1: 	
1: 		filter = SimpleFilter.parse(value);
1: 	@Override
1:     public String toString() {
/////////////////////////////////////////////////////////////////////////
1: 	
1: 	@Override
1:     public int hashCode() {
1:         return 31 * 17 + filter.hashCode();
1:     }
1:     
1:     @Override
1:     public boolean equals(Object o) {
1:     	if (o == this) {
1:     		return true;
1:     	}
1:     	if (!(o instanceof FilterDirective)) {
1:     		return false;
1:     	}
1:     	FilterDirective that = (FilterDirective)o;
1:     	return that.filter.equals(this.filter);
1:     }
commit:a14f2fd
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:fc759fb
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.core.archive;
1: 
1: import org.osgi.framework.Constants;
0: import org.osgi.framework.FrameworkUtil;
0: import org.osgi.framework.InvalidSyntaxException;
1: 
1: public class FilterDirective extends AbstractDirective {
1: 	public static final String NAME = Constants.FILTER_DIRECTIVE;
1: 	
1: 	public FilterDirective(String value) {
1: 		super(NAME, value);
0: 		try {
0: 			FrameworkUtil.createFilter(value);
1: 		}
0: 		catch (InvalidSyntaxException e) {
0: 			throw new IllegalArgumentException("Invalid filter: " + value, e);
1: 		}
1: 	}
1: 
0: 	public String toString() {
1: 		return new StringBuilder()
1: 		.append(getName())
1: 		.append(":=\"")
1: 		.append(getValue())
1: 		.append('\"')
1: 		.toString();
1: 	}
1: }
============================================================================