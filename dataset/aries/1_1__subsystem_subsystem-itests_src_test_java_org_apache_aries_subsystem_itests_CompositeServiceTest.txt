1:0afdb06: /*
1:0afdb06:  * Licensed under the Apache License, Version 2.0 (the "License");
1:0afdb06:  * you may not use this file except in compliance with the License.
1:0afdb06:  * You may obtain a copy of the License at
1:0afdb06:  *
1:0afdb06:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0afdb06:  *
1:0afdb06:  * Unless required by applicable law or agreed to in writing, software
1:0afdb06:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0afdb06:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0afdb06:  * See the License for the specific language governing permissions and
1:0afdb06:  * limitations under the License.
1:0afdb06:  */
1:0afdb06: package org.apache.aries.subsystem.itests;
1:0afdb06: 
1:0afdb06: import static org.junit.Assert.assertEquals;
1:0afdb06: import static org.junit.Assert.assertNotNull;
1:0afdb06: 
1:0afdb06: import java.util.Dictionary;
1:0afdb06: import java.util.Hashtable;
1:0afdb06: 
1:0afdb06: import org.junit.Test;
1:0afdb06: import org.osgi.framework.Filter;
1:0afdb06: import org.osgi.framework.ServiceRegistration;
1:0afdb06: import org.osgi.service.subsystem.Subsystem;
1:0afdb06: import org.osgi.util.tracker.ServiceTracker;
1:0afdb06: 
1:0afdb06: public class CompositeServiceTest extends SubsystemTest {
1:0afdb06: 
1:0afdb06:     @Override
1:0afdb06:     protected void createApplications() throws Exception {
1:0afdb06:         createApplication("composite2", "tb4.jar");
1:0afdb06:     }
1:0afdb06: 
1:0afdb06:     @Test
1:0afdb06:     public void testCompositeServiceImportExportWildcards() throws Exception {
1:0afdb06:         Dictionary<String, Object> props = new Hashtable<String, Object>();
1:0afdb06:         props.put("test", "testCompositeServiceImports");
1:0afdb06:         ServiceRegistration<String> reg = bundleContext.registerService(String.class, "testCompositeServiceImports", props);
1:0afdb06: 
1:0afdb06:         Filter filter = bundleContext.createFilter("(&(objectClass=java.lang.String)(test=tb4))");
1:0afdb06:         ServiceTracker<String, String> st = new ServiceTracker<String, String>(bundleContext, filter, null);
1:0afdb06:         st.open();
1:0afdb06: 
1:0afdb06:         Subsystem subsystem = installSubsystemFromFile("composite2.esa");
1:0afdb06:         try {
1:0afdb06:             assertEquals(Subsystem.State.INSTALLED, subsystem.getState());
1:0afdb06:             subsystem.start();
1:0afdb06: 
1:0afdb06:             String svc = st.waitForService(5000);
1:0afdb06:             assertNotNull("The service registered by the bundle inside the composite cannot be found", svc);
1:0afdb06: 
1:0afdb06:             assertEquals(Subsystem.State.ACTIVE, subsystem.getState());
1:0afdb06:         } finally {
1:0afdb06:             subsystem.stop();
1:0afdb06:             uninstallSubsystem(subsystem);
1:0afdb06:             reg.unregister();
1:0afdb06:             st.close();
1:0afdb06:         }
1:0afdb06:     }
1:0afdb06: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0afdb06
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.itests;
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertNotNull;
1: 
1: import java.util.Dictionary;
1: import java.util.Hashtable;
1: 
1: import org.junit.Test;
1: import org.osgi.framework.Filter;
1: import org.osgi.framework.ServiceRegistration;
1: import org.osgi.service.subsystem.Subsystem;
1: import org.osgi.util.tracker.ServiceTracker;
1: 
1: public class CompositeServiceTest extends SubsystemTest {
1: 
1:     @Override
1:     protected void createApplications() throws Exception {
1:         createApplication("composite2", "tb4.jar");
1:     }
1: 
1:     @Test
1:     public void testCompositeServiceImportExportWildcards() throws Exception {
1:         Dictionary<String, Object> props = new Hashtable<String, Object>();
1:         props.put("test", "testCompositeServiceImports");
1:         ServiceRegistration<String> reg = bundleContext.registerService(String.class, "testCompositeServiceImports", props);
1: 
1:         Filter filter = bundleContext.createFilter("(&(objectClass=java.lang.String)(test=tb4))");
1:         ServiceTracker<String, String> st = new ServiceTracker<String, String>(bundleContext, filter, null);
1:         st.open();
1: 
1:         Subsystem subsystem = installSubsystemFromFile("composite2.esa");
1:         try {
1:             assertEquals(Subsystem.State.INSTALLED, subsystem.getState());
1:             subsystem.start();
1: 
1:             String svc = st.waitForService(5000);
1:             assertNotNull("The service registered by the bundle inside the composite cannot be found", svc);
1: 
1:             assertEquals(Subsystem.State.ACTIVE, subsystem.getState());
1:         } finally {
1:             subsystem.stop();
1:             uninstallSubsystem(subsystem);
1:             reg.unregister();
1:             st.close();
1:         }
1:     }
1: }
============================================================================