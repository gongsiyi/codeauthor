1:ab11b33: /*
1:ab11b33:  * Licensed to the Apache Software Foundation (ASF) under one
1:ab11b33:  * or more contributor license agreements.  See the NOTICE file
1:ab11b33:  * distributed with this work for additional information
1:ab11b33:  * regarding copyright ownership.  The ASF licenses this file
1:ab11b33:  * to you under the Apache License, Version 2.0 (the
1:ab11b33:  * "License"); you may not use this file except in compliance
1:ab11b33:  * with the License.  You may obtain a copy of the License at
1:ab11b33:  *
1:ab11b33:  *   http://www.apache.org/licenses/LICENSE-2.0
1:ab11b33:  *
1:ab11b33:  * Unless required by applicable law or agreed to in writing,
1:ab11b33:  * software distributed under the License is distributed on an
1:ab11b33:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:ab11b33:  * KIND, either express or implied.  See the License for the
1:ab11b33:  * specific language governing permissions and limitations
1:ab11b33:  * under the License.
1:ab11b33:  */
1:0adda31: package org.apache.aries.application.converters;
1:0adda31: 
1:0adda31: import java.io.IOException;
1:0adda31: import java.io.InputStream;
1:0adda31: import java.util.Properties;
1:0adda31: 
1:3af6ab7: import org.apache.aries.application.management.BundleInfo;
1:89f804e: import org.apache.aries.application.management.spi.convert.BundleConversion;
1:89f804e: import org.apache.aries.application.management.spi.convert.BundleConverter;
1:838d6c2: import org.apache.aries.application.utils.management.SimpleBundleInfo;
1:910fec0: import org.apache.aries.util.filesystem.IDirectory;
1:910fec0: import org.apache.aries.util.filesystem.IFile;
1:910fec0: import org.apache.aries.util.manifest.BundleManifest;
1:3af6ab7: import org.apache.aries.web.converter.WabConversion;
1:d80741a: import org.apache.aries.web.converter.WarToWabConverter;
1:d80741a: import org.apache.aries.web.converter.WarToWabConverter.InputStreamProvider;
1:d5a204f: import org.slf4j.Logger;
1:d5a204f: import org.slf4j.LoggerFactory;
1:0adda31: 
1:0adda31: public class WabConverterService implements BundleConverter {
1:d5a204f:     private static final String WAR_FILE_EXTENSION = ".war";
1:d5a204f:     private static final Logger LOGGER = LoggerFactory.getLogger(WabConverterService.class);
1:d5a204f:     
1:d5a204f:     private WarToWabConverter wabConverter;
1:d80741a: 
1:d5a204f:     public WarToWabConverter getWabConverter() {
1:d5a204f:         return wabConverter;
1:d80741a:     }
1:d80741a: 
1:d5a204f:     public void setWabConverter(WarToWabConverter wabConverter) {
1:d5a204f:         this.wabConverter = wabConverter;
1:d5a204f:     }
1:d5a204f: 
1:3af6ab7:     public BundleConversion convert(IDirectory parentEba, final IFile toBeConverted) {
1:d5a204f:         if (toBeConverted.getName().endsWith(WAR_FILE_EXTENSION)) {
1:d5a204f:             try {
1:3af6ab7:             	final WabConversion conversion = wabConverter.convert(new InputStreamProvider() {
1:d5a204f:                     public InputStream getInputStream() throws IOException {
1:d5a204f:                         return toBeConverted.open();
1:d5a204f:                     }
1:d5a204f:                 }, toBeConverted.getName(), new Properties());
1:0adda31:             	            	
1:3af6ab7:                 return new BundleConversion() {
1:0adda31: 
1:838d6c2: 					public BundleInfo getBundleInfo() throws IOException {
1:838d6c2: 						return new SimpleBundleInfo(BundleManifest.fromBundle(conversion.getWAB()), toBeConverted.toString());
1:d80741a: 					}
3:3af6ab7: 
1:d80741a: 					public InputStream getInputStream() throws IOException {
1:3af6ab7: 						return conversion.getWAB();
1:d80741a: 					}
1:3af6ab7:                 	
1:3af6ab7:                 };
1:d5a204f:             } catch (IOException e) {
1:d5a204f:                 LOGGER.error("Encountered an exception while converting " + toBeConverted.getName() 
1:d5a204f:                         + " in " + parentEba.getName(), e);
1:d5a204f:             }
1:d5a204f:         }
1:d5a204f: 
1:d5a204f:         return null;
1:d5a204f:     }
3:0adda31: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:910fec0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.util.filesystem.IDirectory;
1: import org.apache.aries.util.filesystem.IFile;
1: import org.apache.aries.util.manifest.BundleManifest;
commit:89f804e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.management.spi.convert.BundleConversion;
1: import org.apache.aries.application.management.spi.convert.BundleConverter;
commit:d5a204f
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final String WAR_FILE_EXTENSION = ".war";
1:     private static final Logger LOGGER = LoggerFactory.getLogger(WabConverterService.class);
1:     
1:     private WarToWabConverter wabConverter;
1:     public WarToWabConverter getWabConverter() {
1:         return wabConverter;
1:     public void setWabConverter(WarToWabConverter wabConverter) {
1:         this.wabConverter = wabConverter;
1:     }
1: 
0:     public InputStream convert(IDirectory parentEba, final IFile toBeConverted) {
1:         if (toBeConverted.getName().endsWith(WAR_FILE_EXTENSION)) {
1:             try {
0:                 return wabConverter.convert(new InputStreamProvider() {
1:                     public InputStream getInputStream() throws IOException {
1:                         return toBeConverted.open();
1:                     }
1:                 }, toBeConverted.getName(), new Properties());
1:             } catch (IOException e) {
1:                 LOGGER.error("Encountered an exception while converting " + toBeConverted.getName() 
1:                         + " in " + parentEba.getName(), e);
1:             }
1:         }
1: 
1:         return null;
1:     }
commit:ab11b33
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:d80741a
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.web.converter.WarToWabConverter;
1: import org.apache.aries.web.converter.WarToWabConverter.InputStreamProvider;
0:   private WarToWabConverter wabConverter;
1:   
0:   public WarToWabConverter getWabConverter() {
0:     return wabConverter;
1:   }
0:   public void setWabConverter(WarToWabConverter wabConverter) {
0:     this.wabConverter = wabConverter;
1:   }
1: 
0:   public InputStream convert(IDirectory parentEba, final IFile toBeConverted) {
0:       return wabConverter.convert(new InputStreamProvider() {
1:         public InputStream getInputStream() throws IOException {
0:           return toBeConverted.open();
1:         }
0:       }, toBeConverted.getName(), new Properties());
commit:0adda31
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.application.converters;
1: 
1: import java.io.IOException;
1: import java.io.InputStream;
1: import java.util.Properties;
1: 
0: import org.apache.aries.application.filesystem.IDirectory;
0: import org.apache.aries.application.filesystem.IFile;
0: import org.apache.aries.application.management.BundleConverter;
1: 
1: public class WabConverterService implements BundleConverter {
1: 
0:   public InputStream convert(IDirectory parentEba, IFile toBeConverted) {
0:     try {
0:       //TODO find the real name of the WAR file
0:       WarToWabConverter converter = new WarToWabConverter(toBeConverted, new Properties());
0:       return converter.getWAB();
0:     } catch (IOException e) {
0:       // TODO what to do with the Exception
0:       return null;
1:     }
1:   }
1: 
1: }
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:288bf66
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:838d6c2
/////////////////////////////////////////////////////////////////////////
0: import java.beans.SimpleBeanInfo;
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.application.utils.management.SimpleBundleInfo;
0: import org.apache.aries.application.utils.manifest.BundleManifest;
/////////////////////////////////////////////////////////////////////////
1: 					public BundleInfo getBundleInfo() throws IOException {
1: 						return new SimpleBundleInfo(BundleManifest.fromBundle(conversion.getWAB()), toBeConverted.toString());
commit:3af6ab7
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.application.ApplicationMetadataFactory;
0: import org.apache.aries.application.management.BundleConversion;
1: import org.apache.aries.application.management.BundleInfo;
0: import org.apache.aries.application.utils.management.SimpleBundleInfo;
0: import org.apache.aries.application.utils.manifest.BundleManifest;
1: import org.apache.aries.web.converter.WabConversion;
/////////////////////////////////////////////////////////////////////////
1:     public BundleConversion convert(IDirectory parentEba, final IFile toBeConverted) {
1:             	final WabConversion conversion = wabConverter.convert(new InputStreamProvider() {
1:             	            	
1:                 return new BundleConversion() {
1: 
0: 					public BundleInfo getBundleInfo(ApplicationMetadataFactory amf) throws IOException {
0: 						return new SimpleBundleInfo(amf, BundleManifest.fromBundle(conversion.getWAB()), toBeConverted.toString());
0: 					}
1: 
0: 					public InputStream getInputStream() throws IOException {
1: 						return conversion.getWAB();
0: 					}
1:                 	
1:                 };
============================================================================