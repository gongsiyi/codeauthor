1:efb3993: /*
1:efb3993:  * Licensed to the Apache Software Foundation (ASF) under one
1:efb3993:  * or more contributor license agreements.  See the NOTICE file
1:efb3993:  * distributed with this work for additional information
1:efb3993:  * regarding copyright ownership.  The ASF licenses this file
1:efb3993:  * to you under the Apache License, Version 2.0 (the
1:efb3993:  * "License"); you may not use this file except in compliance
1:efb3993:  * with the License.  You may obtain a copy of the License at
1:efb3993:  *
1:efb3993:  *   http://www.apache.org/licenses/LICENSE-2.0
1:efb3993:  *
1:efb3993:  * Unless required by applicable law or agreed to in writing,
1:efb3993:  * software distributed under the License is distributed on an
1:efb3993:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:efb3993:  * KIND, either express or implied.  See the License for the
1:efb3993:  * specific language governing permissions and limitations
1:efb3993:  * under the License.
1:efb3993:  */
1:2906477: package org.apache.aries.tx.control.jdbc.common.impl;
1:2906477: 
1:2906477: import java.sql.Driver;
1:2906477: import java.util.Map;
1:2906477: import java.util.Properties;
1:2906477: 
1:2906477: import javax.sql.DataSource;
1:2906477: import javax.sql.XADataSource;
1:2906477: 
1:2906477: import org.osgi.service.jdbc.DataSourceFactory;
1:2906477: import org.osgi.service.transaction.control.jdbc.JDBCConnectionProviderFactory;
1:2906477: 
1:2906477: public interface InternalJDBCConnectionProviderFactory extends JDBCConnectionProviderFactory {
1:2906477: 
1:2906477: 	@Override
1:2906477: 	AbstractJDBCConnectionProvider getProviderFor(DataSourceFactory dsf, Properties jdbcProperties,
1:2906477: 			Map<String, Object> resourceProviderProperties);
1:2906477: 
1:2906477: 	AbstractJDBCConnectionProvider getProviderFor(DataSource ds, Map<String, Object> resourceProviderProperties);
1:2906477: 
1:2906477: 	@Override
1:2906477: 	AbstractJDBCConnectionProvider getProviderFor(Driver driver, Properties jdbcProperties,
1:2906477: 			Map<String, Object> resourceProviderProperties);
1:2906477: 
1:2906477: 	AbstractJDBCConnectionProvider getProviderFor(XADataSource ds, Map<String, Object> resourceProviderProperties);
1:2906477: 
1:2906477: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:efb3993
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:2906477
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.tx.control.jdbc.common.impl;
1: 
1: import java.sql.Driver;
1: import java.util.Map;
1: import java.util.Properties;
1: 
1: import javax.sql.DataSource;
1: import javax.sql.XADataSource;
1: 
1: import org.osgi.service.jdbc.DataSourceFactory;
1: import org.osgi.service.transaction.control.jdbc.JDBCConnectionProviderFactory;
1: 
1: public interface InternalJDBCConnectionProviderFactory extends JDBCConnectionProviderFactory {
1: 
1: 	@Override
1: 	AbstractJDBCConnectionProvider getProviderFor(DataSourceFactory dsf, Properties jdbcProperties,
1: 			Map<String, Object> resourceProviderProperties);
1: 
1: 	AbstractJDBCConnectionProvider getProviderFor(DataSource ds, Map<String, Object> resourceProviderProperties);
1: 
1: 	@Override
1: 	AbstractJDBCConnectionProvider getProviderFor(Driver driver, Properties jdbcProperties,
1: 			Map<String, Object> resourceProviderProperties);
1: 
1: 	AbstractJDBCConnectionProvider getProviderFor(XADataSource ds, Map<String, Object> resourceProviderProperties);
1: 
1: }
============================================================================