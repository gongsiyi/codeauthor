1:fdf3952: /**
1:fdf3952:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:fdf3952:  *  contributor license agreements.  See the NOTICE file distributed with
1:fdf3952:  *  this work for additional information regarding copyright ownership.
1:fdf3952:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:fdf3952:  *  (the "License"); you may not use this file except in compliance with
1:fdf3952:  *  the License.  You may obtain a copy of the License at
4:fdf3952:  *
1:fdf3952:  *     http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  *  Unless required by applicable law or agreed to in writing, software
1:fdf3952:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:fdf3952:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fdf3952:  *  See the License for the specific language governing permissions and
1:fdf3952:  *  limitations under the License.
1:fdf3952:  */
1:fdf3952: package org.apache.aries.jmx.framework;
1:fdf3952: 
1:fdf3952: import javax.management.NotCompliantMBeanException;
1:fdf3952: import javax.management.StandardMBean;
1:fdf3952: 
1:fdf3952: import org.apache.aries.jmx.Logger;
1:fdf3952: import org.apache.aries.jmx.MBeanHandler;
1:f5398b2: import org.apache.aries.jmx.agent.JMXAgentContext;
1:7186eab: import org.apache.aries.jmx.util.ObjectNameUtils;
1:fdf3952: import org.osgi.framework.BundleContext;
1:fdf3952: import org.osgi.framework.ServiceReference;
1:fdf3952: import org.osgi.jmx.framework.FrameworkMBean;
1:fdf3952: import org.osgi.service.log.LogService;
1:fdf3952: import org.osgi.service.packageadmin.PackageAdmin;
1:fdf3952: import org.osgi.service.startlevel.StartLevel;
1:fdf3952: 
1:fdf3952: /**
1:fdf3952:  * <p>
1:fdf3952:  * <tt>FrameworkMBeanHandler</tt> represents MBeanHandler which
1:fdf3952:  * holding information about {@link FrameworkMBean}.</p>
1:7186eab:  *
1:fdf3952:  * @see MBeanHandler
1:7186eab:  *
1:fdf3952:  * @version $Rev$ $Date$
1:fdf3952:  */
1:fdf3952: public class FrameworkMBeanHandler implements MBeanHandler {
1:fdf3952: 
1:f5398b2:     private JMXAgentContext agentContext;
1:fdf3952:     private String name;
1:fdf3952:     private StandardMBean mbean;
1:fdf3952:     private BundleContext context;
1:fdf3952:     private Logger logger;
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * Constructs new FrameworkMBeanHandler.
1:7186eab:      *
1:f5398b2:      * @param agentContext agent context
1:fdf3952:      */
1:f5398b2:     public FrameworkMBeanHandler(JMXAgentContext agentContext) {
1:f5398b2:         this.agentContext = agentContext;
1:f5398b2:         this.context = agentContext.getBundleContext();
1:f5398b2:         this.logger = agentContext.getLogger();
1:7186eab:         this.name = ObjectNameUtils.createFullObjectName(context, FrameworkMBean.OBJECTNAME);
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * @see org.apache.aries.jmx.MBeanHandler#getMbean()
1:fdf3952:      */
1:fdf3952:     public StandardMBean getMbean() {
1:fdf3952:         return mbean;
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * @see org.apache.aries.jmx.MBeanHandler#open()
1:fdf3952:      */
1:fdf3952:     public void open() {
1:fdf3952:         ServiceReference adminRef = context.getServiceReference(PackageAdmin.class.getCanonicalName());
1:fdf3952:         PackageAdmin packageAdmin = (PackageAdmin) context.getService(adminRef);
1:fdf3952:         ServiceReference startLevelRef = context.getServiceReference(StartLevel.class.getCanonicalName());
1:fdf3952:         StartLevel startLevel = (StartLevel) context.getService(startLevelRef);
1:fdf3952:         FrameworkMBean framework = new Framework(context, startLevel, packageAdmin);
1:fdf3952:         try {
1:fdf3952:             mbean = new StandardMBean(framework, FrameworkMBean.class);
1:fdf3952:         } catch (NotCompliantMBeanException e) {
1:fdf3952:             logger.log(LogService.LOG_ERROR, "Not compliant MBean", e);
1:fdf3952:         }
1:f5398b2:         agentContext.registerMBean(this);
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * @see org.apache.aries.jmx.MBeanHandler#close()
1:fdf3952:      */
1:fdf3952:     public void close() {
1:f5398b2:         agentContext.unregisterMBean(this);
1:fdf3952:     }
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * @see org.apache.aries.jmx.MBeanHandler#getName()
1:fdf3952:      */
1:fdf3952:     public String getName() {
1:fdf3952:         return name;
1:fdf3952:     }
1:fdf3952: 
1:fdf3952: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f5398b2
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.jmx.agent.JMXAgentContext;
/////////////////////////////////////////////////////////////////////////
1:     private JMXAgentContext agentContext;
/////////////////////////////////////////////////////////////////////////
1:      * @param agentContext agent context
1:     public FrameworkMBeanHandler(JMXAgentContext agentContext) {
1:         this.agentContext = agentContext;
1:         this.context = agentContext.getBundleContext();
1:         this.logger = agentContext.getLogger();
/////////////////////////////////////////////////////////////////////////
1:         agentContext.registerMBean(this);
1:         agentContext.unregisterMBean(this);
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:7186eab
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.jmx.util.ObjectNameUtils;
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
/////////////////////////////////////////////////////////////////////////
1:      *
1:         this.name = ObjectNameUtils.createFullObjectName(context, FrameworkMBean.OBJECTNAME);
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jmx.framework;
1: 
1: import javax.management.NotCompliantMBeanException;
1: import javax.management.StandardMBean;
1: 
1: import org.apache.aries.jmx.Logger;
1: import org.apache.aries.jmx.MBeanHandler;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.ServiceReference;
1: import org.osgi.jmx.framework.FrameworkMBean;
1: import org.osgi.service.log.LogService;
1: import org.osgi.service.packageadmin.PackageAdmin;
1: import org.osgi.service.startlevel.StartLevel;
1: 
1: /**
1:  * <p>
1:  * <tt>FrameworkMBeanHandler</tt> represents MBeanHandler which
1:  * holding information about {@link FrameworkMBean}.</p>
1:  * 
1:  * @see MBeanHandler
1:  * 
1:  * @version $Rev$ $Date$
1:  */
1: public class FrameworkMBeanHandler implements MBeanHandler {
1: 
1:     private String name;
1:     private StandardMBean mbean;
1:     private BundleContext context;
1:     private Logger logger;
1: 
1:     /**
1:      * Constructs new FrameworkMBeanHandler.
1:      * 
0:      * @param context bundle context of JMX bundle.
0:      * @param logger @see {@link Logger}.
1:      */
0:     public FrameworkMBeanHandler(BundleContext context, Logger logger) {
0:         this.context = context;
0:         this.name = FrameworkMBean.OBJECTNAME;
0:         this.logger = logger;
1:     }
1: 
1:     /**
1:      * @see org.apache.aries.jmx.MBeanHandler#getMbean()
1:      */
1:     public StandardMBean getMbean() {
1:         return mbean;
1:     }
1: 
1:     /**
1:      * @see org.apache.aries.jmx.MBeanHandler#open()
1:      */
1:     public void open() {
1:         ServiceReference adminRef = context.getServiceReference(PackageAdmin.class.getCanonicalName());
1:         PackageAdmin packageAdmin = (PackageAdmin) context.getService(adminRef);
1:         ServiceReference startLevelRef = context.getServiceReference(StartLevel.class.getCanonicalName());
1:         StartLevel startLevel = (StartLevel) context.getService(startLevelRef);
1:         FrameworkMBean framework = new Framework(context, startLevel, packageAdmin);
1:         try {
1:             mbean = new StandardMBean(framework, FrameworkMBean.class);
1:         } catch (NotCompliantMBeanException e) {
1:             logger.log(LogService.LOG_ERROR, "Not compliant MBean", e);
1:         }
1:     }
1: 
1:     /**
1:      * @see org.apache.aries.jmx.MBeanHandler#close()
1:      */
1:     public void close() {
0:         //not used
1:     }
1: 
1:     /**
1:      * @see org.apache.aries.jmx.MBeanHandler#getName()
1:      */
1:     public String getName() {
1:         return name;
1:     }
1: 
1: }
============================================================================