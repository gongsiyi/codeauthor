1:dd9325e: //
1:dd9325e: // This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
1:dd9325e: // See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
1:dd9325e: // Any modifications to this file will be lost upon recompilation of the source schema. 
1:dd9325e: // Generated on: 2010.04.23 at 12:57:08 PM EDT 
1:dd9325e: //
1:dd9325e: 
1:dd9325e: 
1:dd9325e: package org.apache.aries.blueprint.jaxb;
1:dd9325e: 
1:dd9325e: import java.math.BigInteger;
1:dd9325e: import java.util.HashMap;
1:dd9325e: import java.util.List;
1:dd9325e: import java.util.Map;
1:dd9325e: import java.util.Vector;
1:dd9325e: import javax.xml.bind.JAXBElement;
1:dd9325e: import javax.xml.bind.annotation.XmlAccessType;
1:dd9325e: import javax.xml.bind.annotation.XmlAccessorType;
1:dd9325e: import javax.xml.bind.annotation.XmlAnyAttribute;
1:dd9325e: import javax.xml.bind.annotation.XmlAnyElement;
1:dd9325e: import javax.xml.bind.annotation.XmlAttribute;
1:dd9325e: import javax.xml.bind.annotation.XmlElement;
1:dd9325e: import javax.xml.bind.annotation.XmlElementRef;
1:dd9325e: import javax.xml.bind.annotation.XmlElementRefs;
1:dd9325e: import javax.xml.bind.annotation.XmlRootElement;
1:dd9325e: import javax.xml.bind.annotation.XmlType;
1:dd9325e: import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
1:dd9325e: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
1:dd9325e: import javax.xml.namespace.QName;
1:dd9325e: 
1:dd9325e: 
1:dd9325e: /**
1:dd9325e:  * <p>Java class for Tblueprint complex type.
1:dd9325e:  * 
1:dd9325e:  * <p>The following schema fragment specifies the expected content contained within this class.
1:dd9325e:  * 
1:dd9325e:  * <pre>
1:dd9325e:  * &lt;complexType name="Tblueprint">
1:dd9325e:  *   &lt;complexContent>
1:dd9325e:  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
1:dd9325e:  *       &lt;sequence>
1:dd9325e:  *         &lt;element name="description" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tdescription" minOccurs="0"/>
1:dd9325e:  *         &lt;element name="type-converters" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Ttype-converters" minOccurs="0"/>
1:dd9325e:  *         &lt;choice maxOccurs="unbounded" minOccurs="0">
1:dd9325e:  *           &lt;element name="service" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tservice"/>
1:dd9325e:  *           &lt;element name="reference-list" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Treference-list"/>
1:dd9325e:  *           &lt;element name="bean" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tbean"/>
1:dd9325e:  *           &lt;element name="reference" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Treference"/>
1:dd9325e:  *           &lt;any/>
1:dd9325e:  *         &lt;/choice>
1:dd9325e:  *       &lt;/sequence>
1:dd9325e:  *       &lt;attribute name="default-activation" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tactivation" default="eager" />
1:dd9325e:  *       &lt;attribute name="default-timeout" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Ttimeout" default="300000" />
1:dd9325e:  *       &lt;attribute name="default-availability" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tavailability" default="mandatory" />
1:dd9325e:  *     &lt;/restriction>
1:dd9325e:  *   &lt;/complexContent>
1:dd9325e:  * &lt;/complexType>
1:dd9325e:  * </pre>
1:dd9325e:  * 
1:dd9325e:  * 
1:dd9325e:  */
1:dd9325e: @XmlAccessorType(XmlAccessType.FIELD)
1:dd9325e: @XmlType(name = "Tblueprint", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", propOrder = {
1:dd9325e:     "description",
1:dd9325e:     "typeConverters",
1:dd9325e:     "serviceOrReferenceListOrBean"
1:dd9325e: })
1:dd9325e: @XmlRootElement(name = "blueprint")
1:dd9325e: public class Tblueprint {
1:dd9325e: 
1:dd9325e:     protected Tdescription description;
1:dd9325e:     @XmlElement(name = "type-converters")
1:dd9325e:     protected TtypeConverters typeConverters;
1:dd9325e:     @XmlElementRefs({
1:dd9325e:         @XmlElementRef(name = "reference", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class),
1:dd9325e:         @XmlElementRef(name = "bean", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class),
1:dd9325e:         @XmlElementRef(name = "reference-list", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class),
1:dd9325e:         @XmlElementRef(name = "service", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class)
1:dd9325e:     })
1:dd9325e:     @XmlAnyElement(lax = true)
1:dd9325e:     protected List<Object> serviceOrReferenceListOrBean = new Vector<Object>();
1:dd9325e:     @XmlAttribute(name = "default-activation")
1:dd9325e:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:dd9325e:     protected String defaultActivation;
1:dd9325e:     @XmlAttribute(name = "default-timeout")
1:dd9325e:     protected BigInteger defaultTimeout;
1:dd9325e:     @XmlAttribute(name = "default-availability")
1:dd9325e:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:dd9325e:     protected String defaultAvailability;
1:dd9325e:     @XmlAnyAttribute
1:dd9325e:     private Map<QName, String> otherAttributes = new HashMap<QName, String>();
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the description property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link Tdescription }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public Tdescription getDescription() {
1:dd9325e:         return description;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the description property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link Tdescription }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setDescription(Tdescription value) {
1:dd9325e:         this.description = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the typeConverters property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link TtypeConverters }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public TtypeConverters getTypeConverters() {
1:dd9325e:         if (typeConverters == null) {
1:dd9325e:             typeConverters = new TtypeConverters();
1:dd9325e:         }
1:dd9325e:         return typeConverters;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the typeConverters property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link TtypeConverters }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setTypeConverters(TtypeConverters value) {
1:dd9325e:         this.typeConverters = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the serviceOrReferenceListOrBean property.
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * This accessor method returns a reference to the live list,
1:dd9325e:      * not a snapshot. Therefore any modification you make to the
1:dd9325e:      * returned list will be present inside the JAXB object.
1:dd9325e:      * This is why there is not a <CODE>set</CODE> method for the serviceOrReferenceListOrBean property.
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * For example, to add a new item, do as follows:
1:dd9325e:      * <pre>
1:dd9325e:      *    getServiceOrReferenceListOrBean().add(newItem);
1:dd9325e:      * </pre>
1:dd9325e:      * 
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * Objects of the following type(s) are allowed in the list
1:dd9325e:      * {@link JAXBElement }{@code <}{@link Treference }{@code >}
1:dd9325e:      * {@link Object }
1:dd9325e:      * {@link JAXBElement }{@code <}{@link Tservice }{@code >}
1:dd9325e:      * {@link JAXBElement }{@code <}{@link Tbean }{@code >}
1:dd9325e:      * {@link JAXBElement }{@code <}{@link TreferenceList }{@code >}
1:dd9325e:      * 
1:dd9325e:      * 
1:dd9325e:      */
1:dd9325e:     public List<Object> getServiceOrReferenceListOrBean() {
1:dd9325e:         if (serviceOrReferenceListOrBean == null) {
1:dd9325e:             serviceOrReferenceListOrBean = new Vector<Object>();
1:dd9325e:         }
1:dd9325e:         return this.serviceOrReferenceListOrBean;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the defaultActivation property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public String getDefaultActivation() {
1:dd9325e:         if (defaultActivation == null) {
1:dd9325e:             return "eager";
1:dd9325e:         } else {
1:dd9325e:             return defaultActivation;
1:dd9325e:         }
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the defaultActivation property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setDefaultActivation(String value) {
1:dd9325e:         this.defaultActivation = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the defaultTimeout property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link BigInteger }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public BigInteger getDefaultTimeout() {
1:dd9325e:         if (defaultTimeout == null) {
1:dd9325e:             return new BigInteger("300000");
1:dd9325e:         } else {
1:dd9325e:             return defaultTimeout;
1:dd9325e:         }
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the defaultTimeout property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link BigInteger }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setDefaultTimeout(BigInteger value) {
1:dd9325e:         this.defaultTimeout = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the defaultAvailability property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public String getDefaultAvailability() {
1:dd9325e:         if (defaultAvailability == null) {
1:dd9325e:             return "mandatory";
1:dd9325e:         } else {
1:dd9325e:             return defaultAvailability;
1:dd9325e:         }
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the defaultAvailability property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setDefaultAvailability(String value) {
1:dd9325e:         this.defaultAvailability = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets a map that contains attributes that aren't bound to any typed property on this class.
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * the map is keyed by the name of the attribute and 
1:dd9325e:      * the value is the string value of the attribute.
1:dd9325e:      * 
1:dd9325e:      * the map returned by this method is live, and you can add new attribute
1:dd9325e:      * by updating the map directly. Because of this design, there's no setter.
1:dd9325e:      * 
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     always non-null
1:dd9325e:      */
1:dd9325e:     public Map<QName, String> getOtherAttributes() {
1:dd9325e:         return otherAttributes;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: //
1: // This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
1: // See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
1: // Any modifications to this file will be lost upon recompilation of the source schema. 
1: // Generated on: 2010.04.23 at 12:57:08 PM EDT 
1: //
1: 
1: 
1: package org.apache.aries.blueprint.jaxb;
1: 
1: import java.math.BigInteger;
1: import java.util.HashMap;
1: import java.util.List;
1: import java.util.Map;
1: import java.util.Vector;
1: import javax.xml.bind.JAXBElement;
1: import javax.xml.bind.annotation.XmlAccessType;
1: import javax.xml.bind.annotation.XmlAccessorType;
1: import javax.xml.bind.annotation.XmlAnyAttribute;
1: import javax.xml.bind.annotation.XmlAnyElement;
1: import javax.xml.bind.annotation.XmlAttribute;
1: import javax.xml.bind.annotation.XmlElement;
1: import javax.xml.bind.annotation.XmlElementRef;
1: import javax.xml.bind.annotation.XmlElementRefs;
1: import javax.xml.bind.annotation.XmlRootElement;
1: import javax.xml.bind.annotation.XmlType;
1: import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
1: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
1: import javax.xml.namespace.QName;
1: 
1: 
1: /**
1:  * <p>Java class for Tblueprint complex type.
1:  * 
1:  * <p>The following schema fragment specifies the expected content contained within this class.
1:  * 
1:  * <pre>
1:  * &lt;complexType name="Tblueprint">
1:  *   &lt;complexContent>
1:  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
1:  *       &lt;sequence>
1:  *         &lt;element name="description" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tdescription" minOccurs="0"/>
1:  *         &lt;element name="type-converters" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Ttype-converters" minOccurs="0"/>
1:  *         &lt;choice maxOccurs="unbounded" minOccurs="0">
1:  *           &lt;element name="service" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tservice"/>
1:  *           &lt;element name="reference-list" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Treference-list"/>
1:  *           &lt;element name="bean" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tbean"/>
1:  *           &lt;element name="reference" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Treference"/>
1:  *           &lt;any/>
1:  *         &lt;/choice>
1:  *       &lt;/sequence>
1:  *       &lt;attribute name="default-activation" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tactivation" default="eager" />
1:  *       &lt;attribute name="default-timeout" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Ttimeout" default="300000" />
1:  *       &lt;attribute name="default-availability" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tavailability" default="mandatory" />
1:  *     &lt;/restriction>
1:  *   &lt;/complexContent>
1:  * &lt;/complexType>
1:  * </pre>
1:  * 
1:  * 
1:  */
1: @XmlAccessorType(XmlAccessType.FIELD)
1: @XmlType(name = "Tblueprint", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", propOrder = {
1:     "description",
1:     "typeConverters",
1:     "serviceOrReferenceListOrBean"
1: })
1: @XmlRootElement(name = "blueprint")
1: public class Tblueprint {
1: 
1:     protected Tdescription description;
1:     @XmlElement(name = "type-converters")
1:     protected TtypeConverters typeConverters;
1:     @XmlElementRefs({
1:         @XmlElementRef(name = "reference", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class),
1:         @XmlElementRef(name = "bean", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class),
1:         @XmlElementRef(name = "reference-list", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class),
1:         @XmlElementRef(name = "service", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", type = JAXBElement.class)
1:     })
1:     @XmlAnyElement(lax = true)
1:     protected List<Object> serviceOrReferenceListOrBean = new Vector<Object>();
1:     @XmlAttribute(name = "default-activation")
1:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:     protected String defaultActivation;
1:     @XmlAttribute(name = "default-timeout")
1:     protected BigInteger defaultTimeout;
1:     @XmlAttribute(name = "default-availability")
1:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:     protected String defaultAvailability;
1:     @XmlAnyAttribute
1:     private Map<QName, String> otherAttributes = new HashMap<QName, String>();
1: 
1:     /**
1:      * Gets the value of the description property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link Tdescription }
1:      *     
1:      */
1:     public Tdescription getDescription() {
1:         return description;
1:     }
1: 
1:     /**
1:      * Sets the value of the description property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link Tdescription }
1:      *     
1:      */
1:     public void setDescription(Tdescription value) {
1:         this.description = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the typeConverters property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link TtypeConverters }
1:      *     
1:      */
1:     public TtypeConverters getTypeConverters() {
1:         if (typeConverters == null) {
1:             typeConverters = new TtypeConverters();
1:         }
1:         return typeConverters;
1:     }
1: 
1:     /**
1:      * Sets the value of the typeConverters property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link TtypeConverters }
1:      *     
1:      */
1:     public void setTypeConverters(TtypeConverters value) {
1:         this.typeConverters = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the serviceOrReferenceListOrBean property.
1:      * 
1:      * <p>
1:      * This accessor method returns a reference to the live list,
1:      * not a snapshot. Therefore any modification you make to the
1:      * returned list will be present inside the JAXB object.
1:      * This is why there is not a <CODE>set</CODE> method for the serviceOrReferenceListOrBean property.
1:      * 
1:      * <p>
1:      * For example, to add a new item, do as follows:
1:      * <pre>
1:      *    getServiceOrReferenceListOrBean().add(newItem);
1:      * </pre>
1:      * 
1:      * 
1:      * <p>
1:      * Objects of the following type(s) are allowed in the list
1:      * {@link JAXBElement }{@code <}{@link Treference }{@code >}
1:      * {@link Object }
1:      * {@link JAXBElement }{@code <}{@link Tservice }{@code >}
1:      * {@link JAXBElement }{@code <}{@link Tbean }{@code >}
1:      * {@link JAXBElement }{@code <}{@link TreferenceList }{@code >}
1:      * 
1:      * 
1:      */
1:     public List<Object> getServiceOrReferenceListOrBean() {
1:         if (serviceOrReferenceListOrBean == null) {
1:             serviceOrReferenceListOrBean = new Vector<Object>();
1:         }
1:         return this.serviceOrReferenceListOrBean;
1:     }
1: 
1:     /**
1:      * Gets the value of the defaultActivation property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link String }
1:      *     
1:      */
1:     public String getDefaultActivation() {
1:         if (defaultActivation == null) {
1:             return "eager";
1:         } else {
1:             return defaultActivation;
1:         }
1:     }
1: 
1:     /**
1:      * Sets the value of the defaultActivation property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link String }
1:      *     
1:      */
1:     public void setDefaultActivation(String value) {
1:         this.defaultActivation = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the defaultTimeout property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link BigInteger }
1:      *     
1:      */
1:     public BigInteger getDefaultTimeout() {
1:         if (defaultTimeout == null) {
1:             return new BigInteger("300000");
1:         } else {
1:             return defaultTimeout;
1:         }
1:     }
1: 
1:     /**
1:      * Sets the value of the defaultTimeout property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link BigInteger }
1:      *     
1:      */
1:     public void setDefaultTimeout(BigInteger value) {
1:         this.defaultTimeout = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the defaultAvailability property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link String }
1:      *     
1:      */
1:     public String getDefaultAvailability() {
1:         if (defaultAvailability == null) {
1:             return "mandatory";
1:         } else {
1:             return defaultAvailability;
1:         }
1:     }
1: 
1:     /**
1:      * Sets the value of the defaultAvailability property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link String }
1:      *     
1:      */
1:     public void setDefaultAvailability(String value) {
1:         this.defaultAvailability = value;
1:     }
1: 
1:     /**
1:      * Gets a map that contains attributes that aren't bound to any typed property on this class.
1:      * 
1:      * <p>
1:      * the map is keyed by the name of the attribute and 
1:      * the value is the string value of the attribute.
1:      * 
1:      * the map returned by this method is live, and you can add new attribute
1:      * by updating the map directly. Because of this design, there's no setter.
1:      * 
1:      * 
1:      * @return
1:      *     always non-null
1:      */
1:     public Map<QName, String> getOtherAttributes() {
1:         return otherAttributes;
1:     }
1: 
1: }
============================================================================