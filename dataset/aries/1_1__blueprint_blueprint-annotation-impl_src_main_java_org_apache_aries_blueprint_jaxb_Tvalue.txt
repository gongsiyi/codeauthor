1:dd9325e: //
1:dd9325e: // This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
1:dd9325e: // See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
1:dd9325e: // Any modifications to this file will be lost upon recompilation of the source schema. 
1:dd9325e: // Generated on: 2010.04.23 at 12:57:08 PM EDT 
1:dd9325e: //
1:dd9325e: 
1:dd9325e: 
1:dd9325e: package org.apache.aries.blueprint.jaxb;
1:dd9325e: 
1:dd9325e: import javax.xml.bind.annotation.XmlAccessType;
1:dd9325e: import javax.xml.bind.annotation.XmlAccessorType;
1:dd9325e: import javax.xml.bind.annotation.XmlAttribute;
1:dd9325e: import javax.xml.bind.annotation.XmlRootElement;
1:dd9325e: import javax.xml.bind.annotation.XmlType;
1:dd9325e: import javax.xml.bind.annotation.XmlValue;
1:dd9325e: import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
1:dd9325e: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
1:dd9325e: 
1:dd9325e: 
1:dd9325e: /**
1:dd9325e:  * 
1:dd9325e:  *                 
1:dd9325e:  *                 Tvalue is the type used for <value> elements.  The <value> element
1:dd9325e:  *                 is used for types that can be created from a single string value.
1:dd9325e:  *                 The string value is the data value for the element.  The optional
1:dd9325e:  *                 type attribute allows a target conversion value to be explicitly
1:dd9325e:  *                 specified.
1:dd9325e:  *                 
1:dd9325e:  * 			
1:dd9325e:  * 
1:dd9325e:  * <p>Java class for Tvalue complex type.
1:dd9325e:  * 
1:dd9325e:  * <p>The following schema fragment specifies the expected content contained within this class.
1:dd9325e:  * 
1:dd9325e:  * <pre>
1:dd9325e:  * &lt;complexType name="Tvalue">
1:dd9325e:  *   &lt;complexContent>
1:dd9325e:  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
1:dd9325e:  *       &lt;attribute name="type" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Ttype" />
1:dd9325e:  *     &lt;/restriction>
1:dd9325e:  *   &lt;/complexContent>
1:dd9325e:  * &lt;/complexType>
1:dd9325e:  * </pre>
1:dd9325e:  * 
1:dd9325e:  * 
1:dd9325e:  */
1:dd9325e: @XmlAccessorType(XmlAccessType.FIELD)
1:dd9325e: @XmlType(name = "Tvalue", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", propOrder = {
1:dd9325e:     "content"
1:dd9325e: })
1:dd9325e: @XmlRootElement(name = "value")
1:dd9325e: public class Tvalue {
1:dd9325e: 
1:dd9325e:     @XmlValue
1:dd9325e:     protected String content;
1:dd9325e:     @XmlAttribute
1:dd9325e:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:dd9325e:     protected String type;
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * 
1:dd9325e:      *                 
1:dd9325e:      *                 Tvalue is the type used for <value> elements.  The <value> element
1:dd9325e:      *                 is used for types that can be created from a single string value.
1:dd9325e:      *                 The string value is the data value for the element.  The optional
1:dd9325e:      *                 type attribute allows a target conversion value to be explicitly
1:dd9325e:      *                 specified.
1:dd9325e:      *                 
1:dd9325e:      * 			
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public String getContent() {
1:dd9325e:         return content;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * 
1:dd9325e:      *                 
1:dd9325e:      *                 Tvalue is the type used for <value> elements.  The <value> element
1:dd9325e:      *                 is used for types that can be created from a single string value.
1:dd9325e:      *                 The string value is the data value for the element.  The optional
1:dd9325e:      *                 type attribute allows a target conversion value to be explicitly
1:dd9325e:      *                 specified.
1:dd9325e:      *                 
1:dd9325e:      * 			
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setContent(String value) {
1:dd9325e:         this.content = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the type property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public String getType() {
1:dd9325e:         return type;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the type property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setType(String value) {
1:dd9325e:         this.type = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: //
1: // This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
1: // See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
1: // Any modifications to this file will be lost upon recompilation of the source schema. 
1: // Generated on: 2010.04.23 at 12:57:08 PM EDT 
1: //
1: 
1: 
1: package org.apache.aries.blueprint.jaxb;
1: 
1: import javax.xml.bind.annotation.XmlAccessType;
1: import javax.xml.bind.annotation.XmlAccessorType;
1: import javax.xml.bind.annotation.XmlAttribute;
1: import javax.xml.bind.annotation.XmlRootElement;
1: import javax.xml.bind.annotation.XmlType;
1: import javax.xml.bind.annotation.XmlValue;
1: import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
1: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
1: 
1: 
1: /**
1:  * 
1:  *                 
1:  *                 Tvalue is the type used for <value> elements.  The <value> element
1:  *                 is used for types that can be created from a single string value.
1:  *                 The string value is the data value for the element.  The optional
1:  *                 type attribute allows a target conversion value to be explicitly
1:  *                 specified.
1:  *                 
1:  * 			
1:  * 
1:  * <p>Java class for Tvalue complex type.
1:  * 
1:  * <p>The following schema fragment specifies the expected content contained within this class.
1:  * 
1:  * <pre>
1:  * &lt;complexType name="Tvalue">
1:  *   &lt;complexContent>
1:  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
1:  *       &lt;attribute name="type" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Ttype" />
1:  *     &lt;/restriction>
1:  *   &lt;/complexContent>
1:  * &lt;/complexType>
1:  * </pre>
1:  * 
1:  * 
1:  */
1: @XmlAccessorType(XmlAccessType.FIELD)
1: @XmlType(name = "Tvalue", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0", propOrder = {
1:     "content"
1: })
1: @XmlRootElement(name = "value")
1: public class Tvalue {
1: 
1:     @XmlValue
1:     protected String content;
1:     @XmlAttribute
1:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:     protected String type;
1: 
1:     /**
1:      * 
1:      *                 
1:      *                 Tvalue is the type used for <value> elements.  The <value> element
1:      *                 is used for types that can be created from a single string value.
1:      *                 The string value is the data value for the element.  The optional
1:      *                 type attribute allows a target conversion value to be explicitly
1:      *                 specified.
1:      *                 
1:      * 			
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link String }
1:      *     
1:      */
1:     public String getContent() {
1:         return content;
1:     }
1: 
1:     /**
1:      * 
1:      *                 
1:      *                 Tvalue is the type used for <value> elements.  The <value> element
1:      *                 is used for types that can be created from a single string value.
1:      *                 The string value is the data value for the element.  The optional
1:      *                 type attribute allows a target conversion value to be explicitly
1:      *                 specified.
1:      *                 
1:      * 			
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link String }
1:      *     
1:      */
1:     public void setContent(String value) {
1:         this.content = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the type property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link String }
1:      *     
1:      */
1:     public String getType() {
1:         return type;
1:     }
1: 
1:     /**
1:      * Sets the value of the type property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link String }
1:      *     
1:      */
1:     public void setType(String value) {
1:         this.type = value;
1:     }
1: 
1: }
============================================================================