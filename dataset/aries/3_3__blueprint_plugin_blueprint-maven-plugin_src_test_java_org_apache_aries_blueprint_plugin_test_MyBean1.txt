1:46cfc09: /**
1:46cfc09:  * Licensed to the Apache Software Foundation (ASF) under one
1:46cfc09:  * or more contributor license agreements.  See the NOTICE file
1:46cfc09:  * distributed with this work for additional information
1:46cfc09:  * regarding copyright ownership.  The ASF licenses this file
1:46cfc09:  * to you under the Apache License, Version 2.0 (the
1:46cfc09:  * "License"); you may not use this file except in compliance
1:46cfc09:  * with the License.  You may obtain a copy of the License at
1:46cfc09:  *
1:46cfc09:  *   http://www.apache.org/licenses/LICENSE-2.0
1:46cfc09:  *
1:46cfc09:  * Unless required by applicable law or agreed to in writing,
1:46cfc09:  * software distributed under the License is distributed on an
1:46cfc09:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:46cfc09:  * KIND, either express or implied.  See the License for the
1:46cfc09:  * specific language governing permissions and limitations
1:46cfc09:  * under the License.
1:46cfc09:  */
1:46cfc09: package org.apache.aries.blueprint.plugin.test;
6:46cfc09: 
1:7583a4c: import org.springframework.context.annotation.Lazy;
1:66fc490: 
1:46cfc09: import javax.annotation.PostConstruct;
1:46cfc09: import javax.inject.Singleton;
1:46cfc09: import javax.transaction.Transactional;
1:46cfc09: import javax.transaction.Transactional.TxType;
1:46cfc09: 
1:46cfc09: @Singleton
1:fff2e99: @Transactional(value=TxType.REQUIRES_NEW)
1:7583a4c: @Lazy
1:0b1a9fb: public class MyBean1 extends ParentBean {
1:46cfc09: 
1:d1eab6d:     public void overridenInit() {
1:d1eab6d:         // By overriding the method and removing the annotation, this method has lost its
1:d1eab6d:         // @PostConstruct method because it isn't @Inherited
1:46cfc09:     }
1:46cfc09: 
1:46cfc09:     @PostConstruct
1:46cfc09:     public void init() {
1:fff2e99: 
1:46cfc09:     }
1:46cfc09: 
1:fff2e99:     @Transactional(TxType.NOT_SUPPORTED)
1:fff2e99:     public void txNotSupported() {
1:fff2e99:     }
1:46cfc09: 
1:fff2e99:     @Transactional(TxType.MANDATORY)
1:fff2e99:     public void txMandatory() {
1:fff2e99:     }
1:fff2e99: 
1:fff2e99:     @Transactional(TxType.NEVER)
1:fff2e99:     public void txNever() {
1:fff2e99:     }
1:fff2e99: 
1:fff2e99:     @Transactional(TxType.REQUIRED)
1:fff2e99:     public void txRequired() {
1:fff2e99:     }
1:fff2e99: 
1:fff2e99:     @Override
1:fff2e99:     public void txOverridenWithoutTransactional() {
1:fff2e99:     }
1:fff2e99: 
1:fff2e99:     @Transactional(TxType.REQUIRES_NEW)
1:fff2e99:     public void txOverridenWithRequiresNew() {
1:46cfc09:     }
1:46cfc09: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
commit:3aa60ba
/////////////////////////////////////////////////////////////////////////
commit:fff2e99
/////////////////////////////////////////////////////////////////////////
1: @Transactional(value=TxType.REQUIRES_NEW)
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Transactional(TxType.NOT_SUPPORTED)
1:     public void txNotSupported() {
1:     }
1:     @Transactional(TxType.MANDATORY)
1:     public void txMandatory() {
1:     }
1: 
1:     @Transactional(TxType.NEVER)
1:     public void txNever() {
1:     }
1: 
1:     @Transactional(TxType.REQUIRED)
1:     public void txRequired() {
1:     }
1: 
1:     @Override
1:     public void txOverridenWithoutTransactional() {
1:     }
1: 
1:     @Transactional(TxType.REQUIRES_NEW)
1:     public void txOverridenWithRequiresNew() {
commit:66fc490
/////////////////////////////////////////////////////////////////////////
0: import javax.persistence.PersistenceContext;
/////////////////////////////////////////////////////////////////////////
0:     @PersistenceContext(unitName="person")
0:     @PersistenceUnit(unitName="person")
0:     EntityManager emf;
1:     
commit:0b1a9fb
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public class MyBean1 extends ParentBean {
/////////////////////////////////////////////////////////////////////////
commit:46cfc09
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.test;
1: 
1: import javax.annotation.PostConstruct;
0: import javax.annotation.PreDestroy;
1: import javax.inject.Singleton;
0: import javax.persistence.EntityManager;
0: import javax.persistence.PersistenceUnit;
1: import javax.transaction.Transactional;
1: import javax.transaction.Transactional.TxType;
1: 
0: import org.springframework.beans.factory.annotation.Autowired;
1: 
1: @Singleton
0: @Transactional(value=TxType.REQUIRED)
0: public class MyBean1 {
1: 
0:     @Autowired
0:     ServiceA bean2;
1:     
0:     @PersistenceUnit(unitName="person")
0:     EntityManager em;
1:     
1:     @PostConstruct
1:     public void init() {
1:         
1:     }
1:     
0:     @PreDestroy
0:     public void destroy() {
1:         
1:     }
1: 
0:     public void saveData() {
1:         
1:     }
1: }
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:7583a4c
/////////////////////////////////////////////////////////////////////////
1: import org.springframework.context.annotation.Lazy;
0: 
/////////////////////////////////////////////////////////////////////////
1: @Lazy
author:asf-sync-process
-------------------------------------------------------------------------------
commit:d1eab6d
/////////////////////////////////////////////////////////////////////////
0: import javax.annotation.PostConstruct;
/////////////////////////////////////////////////////////////////////////
0: 
0: 
0: 
1:     public void overridenInit() {
1:         // By overriding the method and removing the annotation, this method has lost its
1:         // @PostConstruct method because it isn't @Inherited
0: 
0:     @PostConstruct
0:     public void init() {
0: 
============================================================================