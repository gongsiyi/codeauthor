1:2cfdf52: /*
1:2cfdf52:  * Licensed to the Apache Software Foundation (ASF) under one
1:2cfdf52:  * or more contributor license agreements.  See the NOTICE file
1:2cfdf52:  * distributed with this work for additional information
1:2cfdf52:  * regarding copyright ownership.  The ASF licenses this file
1:2cfdf52:  * to you under the Apache License, Version 2.0 (the
1:2cfdf52:  * "License"); you may not use this file except in compliance
1:2cfdf52:  * with the License.  You may obtain a copy of the License at
1:2cfdf52:  *
1:2cfdf52:  *   http://www.apache.org/licenses/LICENSE-2.0
1:2cfdf52:  *
1:2cfdf52:  * Unless required by applicable law or agreed to in writing,
1:2cfdf52:  * software distributed under the License is distributed on an
1:2cfdf52:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:2cfdf52:  * KIND, either express or implied.  See the License for the
1:2cfdf52:  * specific language governing permissions and limitations
1:2cfdf52:  * under the License.
1:2cfdf52:  */
1:2cfdf52: package org.apache.aries.jpa.support.impl;
2:2cfdf52: 
1:2cfdf52: import javax.persistence.EntityManager;
1:2cfdf52: 
1:2cfdf52: import org.apache.aries.jpa.template.EmConsumer;
1:2cfdf52: import org.apache.aries.jpa.template.EmFunction;
1:2cfdf52: import org.apache.aries.jpa.template.JpaTemplate;
1:2cfdf52: import org.apache.aries.jpa.template.TransactionType;
1:2cfdf52: 
1:2cfdf52: public abstract class AbstractJpaTemplate implements JpaTemplate {
1:2cfdf52: 
1:0d59ccb:     @Override
1:0d59ccb:     public void tx(final TransactionType type, final EmConsumer code) {
1:0d59ccb:         txExpr(type, new EmFunction<Object>() {
1:ec3ea65:             @Override
1:0d59ccb:             public Object apply(EntityManager em) {
1:0d59ccb:                 code.accept(em);
1:0d59ccb:                 return null;
1:0d59ccb:             }
1:0d59ccb:         });
1:0d59ccb:     }
1:2cfdf52: 
1:0d59ccb:     @Override
1:0d59ccb:     public <R> R txExpr(final EmFunction<R> code) {
1:0d59ccb:         return txExpr(TransactionType.Required, code);
1:0d59ccb:     }
1:2cfdf52: 
1:0d59ccb:     @Override
1:0d59ccb:     public void tx(final EmConsumer code) {
1:0d59ccb:         tx(TransactionType.Required, code);
1:0d59ccb:     }
1:65669d0: 
1:da68ac2:     protected RuntimeException wrapThrowable(Throwable ex, String message) {
1:65669d0:         if (ex instanceof RuntimeException) {
1:65669d0:             return (RuntimeException) ex;
1:65669d0:         }
1:da68ac2:         return new RuntimeException(message, ex);
1:65669d0:     }
5:2cfdf52: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:ec3ea65
/////////////////////////////////////////////////////////////////////////
1:             @Override
/////////////////////////////////////////////////////////////////////////
commit:da68ac2
/////////////////////////////////////////////////////////////////////////
1:     protected RuntimeException wrapThrowable(Throwable ex, String message) {
1:         return new RuntimeException(message, ex);
commit:65669d0
/////////////////////////////////////////////////////////////////////////
1: 
0:     protected RuntimeException wrapThrowable(Throwable ex) {
1:         if (ex instanceof RuntimeException) {
1:             return (RuntimeException) ex;
1:         }
0:         return new RuntimeException(ex);
1:     }
commit:0d59ccb
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public void tx(final TransactionType type, final EmConsumer code) {
1:         txExpr(type, new EmFunction<Object>() {
1:             public Object apply(EntityManager em) {
1:                 code.accept(em);
1:                 return null;
1:             }
1:         });
1:     }
1:     @Override
1:     public <R> R txExpr(final EmFunction<R> code) {
1:         return txExpr(TransactionType.Required, code);
1:     }
1:     @Override
1:     public void tx(final EmConsumer code) {
1:         tx(TransactionType.Required, code);
1:     }
commit:2cfdf52
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.jpa.support.impl;
1: 
1: import javax.persistence.EntityManager;
1: 
1: import org.apache.aries.jpa.template.EmConsumer;
1: import org.apache.aries.jpa.template.EmFunction;
1: import org.apache.aries.jpa.template.JpaTemplate;
1: import org.apache.aries.jpa.template.TransactionType;
1: 
1: public abstract class AbstractJpaTemplate implements JpaTemplate {
1: 
0: 	@Override
0: 	public void tx(final TransactionType type, final EmConsumer code) {
0: 		txExpr(type, new EmFunction<Object>() {
0: 			public Object apply(EntityManager em) {
0: 				code.accept(em);
0: 				return null;
1: 			}
0: 		});
1: 	}
1: 
0: 	@Override
0: 	public <R> R txExpr(final EmFunction<R> code) {
0: 		return txExpr(TransactionType.Required, code);
1: 	}
1: 
0: 	@Override
0: 	public void tx(final EmConsumer code) {
0: 		tx(TransactionType.Required, code);
1: 	}
1: 
1: }
============================================================================