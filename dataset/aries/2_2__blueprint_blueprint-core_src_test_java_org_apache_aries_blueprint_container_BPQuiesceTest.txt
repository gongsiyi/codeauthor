1:0fb37ff: /*
1:0fb37ff:  * Licensed to the Apache Software Foundation (ASF) under one
1:0fb37ff:  * or more contributor license agreements.  See the NOTICE file
1:0fb37ff:  * distributed with this work for additional information
1:0fb37ff:  * regarding copyright ownership.  The ASF licenses this file
1:0fb37ff:  * to you under the Apache License, Version 2.0 (the
1:0fb37ff:  * "License"); you may not use this file except in compliance
1:0fb37ff:  * with the License.  You may obtain a copy of the License at
1:0fb37ff:  *
1:0fb37ff:  *   http://www.apache.org/licenses/LICENSE-2.0
1:0fb37ff:  *
1:0fb37ff:  * Unless required by applicable law or agreed to in writing,
1:0fb37ff:  * software distributed under the License is distributed on an
1:0fb37ff:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:0fb37ff:  * KIND, either express or implied.  See the License for the
1:0fb37ff:  * specific language governing permissions and limitations
1:0fb37ff:  * under the License.
1:0fb37ff:  */
1:0fb37ff: package org.apache.aries.blueprint.container;
4:0fb37ff: 
1:a77cc7b: import static junit.framework.Assert.assertTrue;
1:a77cc7b: 
1:0fb37ff: import java.util.Arrays;
1:0fb37ff: import java.util.concurrent.Semaphore;
1:0fb37ff: import java.util.concurrent.TimeUnit;
1:0fb37ff: 
1:0fb37ff: import org.apache.aries.quiesce.manager.QuiesceCallback;
1:a77cc7b: import org.easymock.EasyMock;
1:a77cc7b: import org.easymock.IMocksControl;
1:0fb37ff: import org.junit.Test;
1:0fb37ff: import org.osgi.framework.Bundle;
1:0fb37ff: import org.osgi.framework.BundleContext;
1:0fb37ff: 
1:0fb37ff: public class BPQuiesceTest {
1:0fb37ff:   @Test
1:0fb37ff:   public void canQuiesceNoBPBundle() throws Exception {
1:a77cc7b:     IMocksControl c = EasyMock.createControl();
1:a77cc7b:     BundleContext ctx = c.createMock(BundleContext.class);
1:a77cc7b:     Bundle bpBundle = c.createMock(Bundle.class);
1:a77cc7b:     Bundle testBundle = c.createMock(Bundle.class);
1:0fb37ff:     
1:a77cc7b:     EasyMock.expect(ctx.getBundle()).andReturn(bpBundle);
1:0fb37ff:     
1:0fb37ff:     BlueprintQuiesceParticipant bqp = new BlueprintQuiesceParticipant(ctx, new BlueprintExtender() {
1:0fb37ff:       @Override
1:0fb37ff:       protected BlueprintContainerImpl getBlueprintContainerImpl(Bundle bundle) {
1:0fb37ff:         return null;
1:0fb37ff:       }      
1:0fb37ff:     });
1:0fb37ff:     
1:0fb37ff:     final Semaphore result = new Semaphore(0);
1:0fb37ff:     
1:0fb37ff:     QuiesceCallback qc = new QuiesceCallback() {
1:0fb37ff:       public void bundleQuiesced(Bundle... bundlesQuiesced) {
1:0fb37ff:         result.release();
1:0fb37ff:       }
1:0fb37ff:     };
1:a77cc7b:     c.replay();
1:0fb37ff:     bqp.quiesce(qc, Arrays.asList(testBundle));
1:a77cc7b:     c.verify();
1:0fb37ff:     assertTrue(result.tryAcquire(2, TimeUnit.SECONDS));
1:0fb37ff:   }
1:0fb37ff: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:a77cc7b
/////////////////////////////////////////////////////////////////////////
1: import static junit.framework.Assert.assertTrue;
1: 
1: import org.easymock.EasyMock;
1: import org.easymock.IMocksControl;
1:     IMocksControl c = EasyMock.createControl();
1:     BundleContext ctx = c.createMock(BundleContext.class);
1:     Bundle bpBundle = c.createMock(Bundle.class);
1:     Bundle testBundle = c.createMock(Bundle.class);
1:     EasyMock.expect(ctx.getBundle()).andReturn(bpBundle);
/////////////////////////////////////////////////////////////////////////
1:     c.replay();
1:     c.verify();
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:0fb37ff
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.container;
1: 
1: import java.util.Arrays;
1: import java.util.concurrent.Semaphore;
1: import java.util.concurrent.TimeUnit;
1: 
1: import org.apache.aries.quiesce.manager.QuiesceCallback;
0: import org.apache.aries.unittest.mocks.MethodCall;
0: import org.apache.aries.unittest.mocks.Skeleton;
1: import org.junit.Test;
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleContext;
1: 
0: import static junit.framework.Assert.*;
1: 
1: public class BPQuiesceTest {
1:   @Test
1:   public void canQuiesceNoBPBundle() throws Exception {
0:     BundleContext ctx = Skeleton.newMock(BundleContext.class);
0:     Bundle bpBundle = Skeleton.newMock(Bundle.class);
0:     Bundle testBundle = Skeleton.newMock(Bundle.class);
1:     
0:     Skeleton.getSkeleton(ctx).setReturnValue(
0:         new MethodCall(BundleContext.class, "getBundle"), bpBundle);
1:     
1:     BlueprintQuiesceParticipant bqp = new BlueprintQuiesceParticipant(ctx, new BlueprintExtender() {
1:       @Override
1:       protected BlueprintContainerImpl getBlueprintContainerImpl(Bundle bundle) {
1:         return null;
1:       }      
1:     });
1:     
1:     final Semaphore result = new Semaphore(0);
1:     
1:     QuiesceCallback qc = new QuiesceCallback() {
1:       public void bundleQuiesced(Bundle... bundlesQuiesced) {
1:         result.release();
1:       }
1:     };
1:     
1:     bqp.quiesce(qc, Arrays.asList(testBundle));
1:     
1:     assertTrue(result.tryAcquire(2, TimeUnit.SECONDS));
1:   }
1: }
============================================================================