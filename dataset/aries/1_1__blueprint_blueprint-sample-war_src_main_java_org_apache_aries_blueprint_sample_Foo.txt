1:c1032f2: /**
1:c1032f2:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:c1032f2:  *  contributor license agreements.  See the NOTICE file distributed with
1:c1032f2:  *  this work for additional information regarding copyright ownership.
1:c1032f2:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:c1032f2:  *  (the "License"); you may not use this file except in compliance with
1:c1032f2:  *  the License.  You may obtain a copy of the License at
1:c1032f2:  *
1:c1032f2:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c1032f2:  *
1:c1032f2:  *  Unless required by applicable law or agreed to in writing, software
1:c1032f2:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:c1032f2:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c1032f2:  *  See the License for the specific language governing permissions and
1:c1032f2:  *  limitations under the License.
1:c1032f2:  */
1:c1032f2: package org.apache.aries.blueprint.sample;
1:c1032f2: 
1:c1032f2: import java.io.Serializable;
1:c1032f2: import java.util.Currency;
1:c1032f2: import java.util.Date;
1:c1032f2: import java.util.Map;
1:c1032f2: 
1:c1032f2: public class Foo implements Serializable {
1:c1032f2:     
1:c1032f2:     private int a;
1:c1032f2:     private int b;
1:c1032f2:     private Currency currency;
1:c1032f2:     private Date date;
1:c1032f2: 
1:c1032f2:     public boolean initialized;
1:c1032f2:     public boolean destroyed;
1:c1032f2:     private Map<String, Object> props;
1:c1032f2: 
1:c1032f2:     public int getA() {
1:c1032f2:         return a;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void setA(int i) {
1:c1032f2:         a = i;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public int getB() {
1:c1032f2:         return b;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void setB(int i) {
1:c1032f2:         b = i;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public Currency getCurrency() {
1:c1032f2:         return currency;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void setCurrency(Currency c) {
1:c1032f2:         currency = c;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public Date getDate() {
1:c1032f2:         return date;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void setDate(Date d) {
1:c1032f2:         date = d;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public String toString() {
1:c1032f2:         return a + " " + b + " " + currency + " " + date;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void init() {
1:c1032f2:         System.out.println("======== Initializing Foo =========");
1:c1032f2:         initialized = true;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void destroy() {
1:c1032f2:         System.out.println("======== Destroying Foo =========");
1:c1032f2:         destroyed = true;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public boolean isInitialized() {
1:c1032f2:         return initialized;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public boolean isDestroyed() {
1:c1032f2:         return destroyed;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public void update(Map<String,Object> props) {
1:c1032f2:         this.props = props;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2:     public Map<String, Object> getProps() {
1:c1032f2:         return props;
1:c1032f2:     }
1:c1032f2: 
1:c1032f2: }
1:c1032f2: 
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:c1032f2
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.sample;
1: 
1: import java.io.Serializable;
1: import java.util.Currency;
1: import java.util.Date;
1: import java.util.Map;
1: 
1: public class Foo implements Serializable {
1:     
1:     private int a;
1:     private int b;
1:     private Currency currency;
1:     private Date date;
1: 
1:     public boolean initialized;
1:     public boolean destroyed;
1:     private Map<String, Object> props;
1: 
1:     public int getA() {
1:         return a;
1:     }
1: 
1:     public void setA(int i) {
1:         a = i;
1:     }
1: 
1:     public int getB() {
1:         return b;
1:     }
1: 
1:     public void setB(int i) {
1:         b = i;
1:     }
1: 
1:     public Currency getCurrency() {
1:         return currency;
1:     }
1: 
1:     public void setCurrency(Currency c) {
1:         currency = c;
1:     }
1: 
1:     public Date getDate() {
1:         return date;
1:     }
1: 
1:     public void setDate(Date d) {
1:         date = d;
1:     }
1: 
1:     public String toString() {
1:         return a + " " + b + " " + currency + " " + date;
1:     }
1: 
1:     public void init() {
1:         System.out.println("======== Initializing Foo =========");
1:         initialized = true;
1:     }
1: 
1:     public void destroy() {
1:         System.out.println("======== Destroying Foo =========");
1:         destroyed = true;
1:     }
1: 
1:     public boolean isInitialized() {
1:         return initialized;
1:     }
1: 
1:     public boolean isDestroyed() {
1:         return destroyed;
1:     }
1: 
1:     public void update(Map<String,Object> props) {
1:         this.props = props;
1:     }
1: 
1:     public Map<String, Object> getProps() {
1:         return props;
1:     }
1: 
1: }
1: 
============================================================================