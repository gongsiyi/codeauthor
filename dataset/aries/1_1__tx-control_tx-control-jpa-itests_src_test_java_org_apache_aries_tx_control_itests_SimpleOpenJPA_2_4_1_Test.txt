1:593cb80: /*
1:593cb80:  * Licensed to the Apache Software Foundation (ASF) under one
1:593cb80:  * or more contributor license agreements.  See the NOTICE file
1:593cb80:  * distributed with this work for additional information
1:593cb80:  * regarding copyright ownership.  The ASF licenses this file
1:593cb80:  * to you under the Apache License, Version 2.0 (the
1:593cb80:  * "License"); you may not use this file except in compliance
1:593cb80:  * with the License.  You may obtain a copy of the License at
1:593cb80:  *
1:593cb80:  *   http://www.apache.org/licenses/LICENSE-2.0
1:593cb80:  *
1:593cb80:  * Unless required by applicable law or agreed to in writing,
1:593cb80:  * software distributed under the License is distributed on an
1:593cb80:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:593cb80:  * KIND, either express or implied.  See the License for the
1:593cb80:  * specific language governing permissions and limitations
1:593cb80:  * under the License.
1:593cb80:  */
1:b73433a: package org.apache.aries.tx.control.itests;
1:b73433a: 
1:b73433a: import static org.ops4j.pax.exam.CoreOptions.bootClasspathLibrary;
1:b73433a: import static org.ops4j.pax.exam.CoreOptions.mavenBundle;
1:b73433a: import static org.ops4j.pax.exam.CoreOptions.systemPackage;
1:b73433a: import static org.ops4j.pax.exam.CoreOptions.systemProperty;
1:b73433a: 
1:b73433a: import java.util.Dictionary;
1:b73433a: import java.util.Hashtable;
1:b73433a: 
1:b73433a: import org.ops4j.pax.exam.CoreOptions;
1:b73433a: import org.ops4j.pax.exam.Option;
1:b73433a: 
1:b73433a: public class SimpleOpenJPA_2_4_1_Test extends AbstractSimpleTransactionTest {
1:b73433a: 
1:b73433a: 	protected String ariesJPAVersion() {
1:f6f7de7: 		return "2.4.0";
1:b73433a: 	}
1:b73433a: 	
1:b73433a: 	protected Dictionary<String, Object> getBaseProperties() {
1:b73433a: 		Dictionary<String, Object> base = new Hashtable<>();
1:b73433a: 		//This is necessary due to https://issues.apache.org/jira/browse/OPENJPA-2521
1:b73433a: 		base.put("openjpa.MetaDataFactory", "jpa(Types=org.apache.aries.tx.control.itests.entity.Message)");
1:b73433a: 		base.put("openjpa.RuntimeUnenhancedClasses", "supported");
1:b73433a: 		
1:b73433a: 		//This is necessary as OpenJPA is only JPA 2.0 compliant and does not understand the standard properties
1:b73433a: 		base.put("openjpa.jdbc.SynchronizeMappings", "buildSchema(ForeignKeys=true, SchemaAction='add,deleteTableContents')");
1:b73433a: 		
1:b73433a: 		base.put("openjpa.Log", "DefaultLevel=TRACE");
1:b73433a: 		return base;
1:b73433a: 	}
1:b73433a: 	
1:b73433a: 	@Override
1:b73433a: 	protected Option jpaProvider() {
1:b73433a: 		return CoreOptions.composite(
1:b73433a: 			// Add JTA 1.1 as a system package because of the link to javax.sql
1:b73433a: 			
1:b73433a: 			systemProperty(ARIES_EMF_BUILDER_TARGET_FILTER)
1:b73433a: 				.value("(osgi.unit.provider=org.apache.openjpa.persistence.PersistenceProviderImpl)"),
1:b73433a: 			systemPackage("javax.transaction;version=1.1"),
1:b73433a: 			systemPackage("javax.transaction.xa;version=1.1"),
1:b73433a: 			bootClasspathLibrary(mavenBundle("org.apache.geronimo.specs", "geronimo-jta_1.1_spec", "1.1.1")).beforeFramework(),
1:b73433a: 			
1:b73433a: 			// OpenJPA bundles and their dependencies (JPA API is available from the tx-control)
1:b73433a: 			mavenBundle("commons-pool", "commons-pool", "1.5.4"),
1:b73433a: 			mavenBundle("commons-lang", "commons-lang", "2.4"),
1:b73433a: 			mavenBundle("commons-collections", "commons-collections", "3.2.2"),
1:b73433a: 			mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.serp", "1.15.1_1"),
1:b73433a: 			mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.commons-dbcp", "1.4_3"),
1:b73433a: 			mavenBundle("org.apache.xbean", "xbean-asm5-shaded", "3.17"),
1:b73433a: 			mavenBundle("org.apache.openjpa", "openjpa", "2.4.1"));
1:b73433a: 	}
1:b73433a: 
1:b73433a: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:f6f7de7
/////////////////////////////////////////////////////////////////////////
1: 		return "2.4.0";
commit:593cb80
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:b73433a
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.tx.control.itests;
1: 
1: import static org.ops4j.pax.exam.CoreOptions.bootClasspathLibrary;
1: import static org.ops4j.pax.exam.CoreOptions.mavenBundle;
1: import static org.ops4j.pax.exam.CoreOptions.systemPackage;
1: import static org.ops4j.pax.exam.CoreOptions.systemProperty;
1: 
1: import java.util.Dictionary;
1: import java.util.Hashtable;
1: 
1: import org.ops4j.pax.exam.CoreOptions;
1: import org.ops4j.pax.exam.Option;
1: 
1: public class SimpleOpenJPA_2_4_1_Test extends AbstractSimpleTransactionTest {
1: 
1: 	protected String ariesJPAVersion() {
0: 		return "2.4.0-SNAPSHOT";
1: 	}
1: 	
1: 	protected Dictionary<String, Object> getBaseProperties() {
1: 		Dictionary<String, Object> base = new Hashtable<>();
1: 		//This is necessary due to https://issues.apache.org/jira/browse/OPENJPA-2521
1: 		base.put("openjpa.MetaDataFactory", "jpa(Types=org.apache.aries.tx.control.itests.entity.Message)");
1: 		base.put("openjpa.RuntimeUnenhancedClasses", "supported");
1: 		
1: 		//This is necessary as OpenJPA is only JPA 2.0 compliant and does not understand the standard properties
1: 		base.put("openjpa.jdbc.SynchronizeMappings", "buildSchema(ForeignKeys=true, SchemaAction='add,deleteTableContents')");
1: 		
1: 		base.put("openjpa.Log", "DefaultLevel=TRACE");
1: 		return base;
1: 	}
1: 	
1: 	@Override
1: 	protected Option jpaProvider() {
1: 		return CoreOptions.composite(
1: 			// Add JTA 1.1 as a system package because of the link to javax.sql
1: 			
1: 			systemProperty(ARIES_EMF_BUILDER_TARGET_FILTER)
1: 				.value("(osgi.unit.provider=org.apache.openjpa.persistence.PersistenceProviderImpl)"),
1: 			systemPackage("javax.transaction;version=1.1"),
1: 			systemPackage("javax.transaction.xa;version=1.1"),
1: 			bootClasspathLibrary(mavenBundle("org.apache.geronimo.specs", "geronimo-jta_1.1_spec", "1.1.1")).beforeFramework(),
1: 			
1: 			// OpenJPA bundles and their dependencies (JPA API is available from the tx-control)
1: 			mavenBundle("commons-pool", "commons-pool", "1.5.4"),
1: 			mavenBundle("commons-lang", "commons-lang", "2.4"),
1: 			mavenBundle("commons-collections", "commons-collections", "3.2.2"),
1: 			mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.serp", "1.15.1_1"),
1: 			mavenBundle("org.apache.servicemix.bundles", "org.apache.servicemix.bundles.commons-dbcp", "1.4_3"),
1: 			mavenBundle("org.apache.xbean", "xbean-asm5-shaded", "3.17"),
1: 			mavenBundle("org.apache.openjpa", "openjpa", "2.4.1"));
1: 	}
1: 
1: }
============================================================================