1:dd9325e: //
1:dd9325e: // This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
1:dd9325e: // See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
1:dd9325e: // Any modifications to this file will be lost upon recompilation of the source schema. 
1:dd9325e: // Generated on: 2010.04.23 at 12:57:08 PM EDT 
1:dd9325e: //
1:dd9325e: 
1:dd9325e: 
1:dd9325e: package org.apache.aries.blueprint.jaxb;
1:dd9325e: 
1:dd9325e: import java.util.List;
1:dd9325e: import java.util.Vector;
1:dd9325e: import javax.xml.bind.annotation.XmlAccessType;
1:dd9325e: import javax.xml.bind.annotation.XmlAccessorType;
1:dd9325e: import javax.xml.bind.annotation.XmlAttribute;
1:dd9325e: import javax.xml.bind.annotation.XmlID;
1:dd9325e: import javax.xml.bind.annotation.XmlSchemaType;
1:dd9325e: import javax.xml.bind.annotation.XmlSeeAlso;
1:dd9325e: import javax.xml.bind.annotation.XmlType;
1:dd9325e: import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
1:dd9325e: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
1:dd9325e: 
1:dd9325e: 
1:dd9325e: /**
1:dd9325e:  * 
1:dd9325e:  *                 
1:dd9325e:  *                     The Tcomponent type is the base type for top-level
1:dd9325e:  *                     Blueprint components.  The <bean> <reference>, <service>,
1:dd9325e:  *                     and <reference-list> elements are all derived from
1:dd9325e:  *                     the Tcomponent type.  This type defines an id attribute
1:dd9325e:  *                     that is used create references between different components.
1:dd9325e:  *                     Component elements can also be inlined within other component
1:dd9325e:  *                     definitions.  The id attribute is not valid when inlined.
1:dd9325e:  *                 
1:dd9325e:  * 			
1:dd9325e:  * 
1:dd9325e:  * <p>Java class for Tcomponent complex type.
1:dd9325e:  * 
1:dd9325e:  * <p>The following schema fragment specifies the expected content contained within this class.
1:dd9325e:  * 
1:dd9325e:  * <pre>
1:dd9325e:  * &lt;complexType name="Tcomponent">
1:dd9325e:  *   &lt;complexContent>
1:dd9325e:  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
1:dd9325e:  *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
1:dd9325e:  *       &lt;attribute name="activation" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tactivation" />
1:dd9325e:  *       &lt;attribute name="depends-on" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}TdependsOn" />
1:dd9325e:  *     &lt;/restriction>
1:dd9325e:  *   &lt;/complexContent>
1:dd9325e:  * &lt;/complexType>
1:dd9325e:  * </pre>
1:dd9325e:  * 
1:dd9325e:  * 
1:dd9325e:  */
1:dd9325e: @XmlAccessorType(XmlAccessType.FIELD)
1:dd9325e: @XmlType(name = "Tcomponent", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0")
1:dd9325e: @XmlSeeAlso({
1:dd9325e:     Tbean.class,
1:dd9325e:     TserviceReference.class,
1:dd9325e:     Tservice.class
1:dd9325e: })
1:dd9325e: public abstract class Tcomponent {
1:dd9325e: 
1:dd9325e:     @XmlAttribute
1:dd9325e:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:dd9325e:     @XmlID
1:dd9325e:     @XmlSchemaType(name = "ID")
1:dd9325e:     protected String id;
1:dd9325e:     @XmlAttribute
1:dd9325e:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:dd9325e:     protected String activation;
1:dd9325e:     @XmlAttribute(name = "depends-on")
1:dd9325e:     protected List<String> dependsOn = new Vector<String>();
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the id property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public String getId() {
1:dd9325e:         return id;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the id property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setId(String value) {
1:dd9325e:         this.id = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the activation property.
1:dd9325e:      * 
1:dd9325e:      * @return
1:dd9325e:      *     possible object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public String getActivation() {
1:dd9325e:         return activation;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Sets the value of the activation property.
1:dd9325e:      * 
1:dd9325e:      * @param value
1:dd9325e:      *     allowed object is
1:dd9325e:      *     {@link String }
1:dd9325e:      *     
1:dd9325e:      */
1:dd9325e:     public void setActivation(String value) {
1:dd9325e:         this.activation = value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     /**
1:dd9325e:      * Gets the value of the dependsOn property.
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * This accessor method returns a reference to the live list,
1:dd9325e:      * not a snapshot. Therefore any modification you make to the
1:dd9325e:      * returned list will be present inside the JAXB object.
1:dd9325e:      * This is why there is not a <CODE>set</CODE> method for the dependsOn property.
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * For example, to add a new item, do as follows:
1:dd9325e:      * <pre>
1:dd9325e:      *    getDependsOn().add(newItem);
1:dd9325e:      * </pre>
1:dd9325e:      * 
1:dd9325e:      * 
1:dd9325e:      * <p>
1:dd9325e:      * Objects of the following type(s) are allowed in the list
1:dd9325e:      * {@link String }
1:dd9325e:      * 
1:dd9325e:      * 
1:dd9325e:      */
1:dd9325e:     public List<String> getDependsOn() {
1:dd9325e:         //if (dependsOn == null) {
1:dd9325e:         //    dependsOn = new Vector<String>();
1:dd9325e:         //}
1:dd9325e:         return this.dependsOn;
1:dd9325e:     }
1:dd9325e:     
1:dd9325e:     public void setDependsOn(List<String> dependsOn) {
1:dd9325e:         this.dependsOn = dependsOn;
1:dd9325e:     }
1:dd9325e:     
1:dd9325e: 
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: //
1: // This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
1: // See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
1: // Any modifications to this file will be lost upon recompilation of the source schema. 
1: // Generated on: 2010.04.23 at 12:57:08 PM EDT 
1: //
1: 
1: 
1: package org.apache.aries.blueprint.jaxb;
1: 
1: import java.util.List;
1: import java.util.Vector;
1: import javax.xml.bind.annotation.XmlAccessType;
1: import javax.xml.bind.annotation.XmlAccessorType;
1: import javax.xml.bind.annotation.XmlAttribute;
1: import javax.xml.bind.annotation.XmlID;
1: import javax.xml.bind.annotation.XmlSchemaType;
1: import javax.xml.bind.annotation.XmlSeeAlso;
1: import javax.xml.bind.annotation.XmlType;
1: import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
1: import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
1: 
1: 
1: /**
1:  * 
1:  *                 
1:  *                     The Tcomponent type is the base type for top-level
1:  *                     Blueprint components.  The <bean> <reference>, <service>,
1:  *                     and <reference-list> elements are all derived from
1:  *                     the Tcomponent type.  This type defines an id attribute
1:  *                     that is used create references between different components.
1:  *                     Component elements can also be inlined within other component
1:  *                     definitions.  The id attribute is not valid when inlined.
1:  *                 
1:  * 			
1:  * 
1:  * <p>Java class for Tcomponent complex type.
1:  * 
1:  * <p>The following schema fragment specifies the expected content contained within this class.
1:  * 
1:  * <pre>
1:  * &lt;complexType name="Tcomponent">
1:  *   &lt;complexContent>
1:  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
1:  *       &lt;attribute name="id" type="{http://www.w3.org/2001/XMLSchema}ID" />
1:  *       &lt;attribute name="activation" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}Tactivation" />
1:  *       &lt;attribute name="depends-on" type="{http://www.osgi.org/xmlns/blueprint/v1.0.0}TdependsOn" />
1:  *     &lt;/restriction>
1:  *   &lt;/complexContent>
1:  * &lt;/complexType>
1:  * </pre>
1:  * 
1:  * 
1:  */
1: @XmlAccessorType(XmlAccessType.FIELD)
1: @XmlType(name = "Tcomponent", namespace = "http://www.osgi.org/xmlns/blueprint/v1.0.0")
1: @XmlSeeAlso({
1:     Tbean.class,
1:     TserviceReference.class,
1:     Tservice.class
1: })
1: public abstract class Tcomponent {
1: 
1:     @XmlAttribute
1:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:     @XmlID
1:     @XmlSchemaType(name = "ID")
1:     protected String id;
1:     @XmlAttribute
1:     @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
1:     protected String activation;
1:     @XmlAttribute(name = "depends-on")
1:     protected List<String> dependsOn = new Vector<String>();
1: 
1:     /**
1:      * Gets the value of the id property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link String }
1:      *     
1:      */
1:     public String getId() {
1:         return id;
1:     }
1: 
1:     /**
1:      * Sets the value of the id property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link String }
1:      *     
1:      */
1:     public void setId(String value) {
1:         this.id = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the activation property.
1:      * 
1:      * @return
1:      *     possible object is
1:      *     {@link String }
1:      *     
1:      */
1:     public String getActivation() {
1:         return activation;
1:     }
1: 
1:     /**
1:      * Sets the value of the activation property.
1:      * 
1:      * @param value
1:      *     allowed object is
1:      *     {@link String }
1:      *     
1:      */
1:     public void setActivation(String value) {
1:         this.activation = value;
1:     }
1: 
1:     /**
1:      * Gets the value of the dependsOn property.
1:      * 
1:      * <p>
1:      * This accessor method returns a reference to the live list,
1:      * not a snapshot. Therefore any modification you make to the
1:      * returned list will be present inside the JAXB object.
1:      * This is why there is not a <CODE>set</CODE> method for the dependsOn property.
1:      * 
1:      * <p>
1:      * For example, to add a new item, do as follows:
1:      * <pre>
1:      *    getDependsOn().add(newItem);
1:      * </pre>
1:      * 
1:      * 
1:      * <p>
1:      * Objects of the following type(s) are allowed in the list
1:      * {@link String }
1:      * 
1:      * 
1:      */
1:     public List<String> getDependsOn() {
1:         //if (dependsOn == null) {
1:         //    dependsOn = new Vector<String>();
1:         //}
1:         return this.dependsOn;
1:     }
1:     
1:     public void setDependsOn(List<String> dependsOn) {
1:         this.dependsOn = dependsOn;
1:     }
1:     
1: 
1: }
============================================================================