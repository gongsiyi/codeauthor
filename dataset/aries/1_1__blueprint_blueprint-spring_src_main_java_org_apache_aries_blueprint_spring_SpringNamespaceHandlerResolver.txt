1:8d9ae6e: /**
1:8d9ae6e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:8d9ae6e:  *  contributor license agreements.  See the NOTICE file distributed with
1:8d9ae6e:  *  this work for additional information regarding copyright ownership.
1:8d9ae6e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:8d9ae6e:  *  (the "License"); you may not use this file except in compliance with
1:8d9ae6e:  *  the License.  You may obtain a copy of the License at
1:8d9ae6e:  *
1:8d9ae6e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8d9ae6e:  *
1:8d9ae6e:  *  Unless required by applicable law or agreed to in writing, software
1:8d9ae6e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:8d9ae6e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8d9ae6e:  *  See the License for the specific language governing permissions and
1:8d9ae6e:  *  limitations under the License.
1:8d9ae6e:  */
1:8d9ae6e: package org.apache.aries.blueprint.spring;
1:8d9ae6e: 
1:8d9ae6e: import java.net.URI;
1:8d9ae6e: 
1:8d9ae6e: import org.apache.aries.blueprint.NamespaceHandler;
1:8d9ae6e: import org.apache.aries.blueprint.ParserContext;
1:8d9ae6e: import org.osgi.service.blueprint.container.ComponentDefinitionException;
1:8d9ae6e: import org.springframework.beans.factory.xml.NamespaceHandlerResolver;
1:8d9ae6e: 
1:8d9ae6e: public class SpringNamespaceHandlerResolver implements NamespaceHandlerResolver {
1:8d9ae6e: 
1:8d9ae6e:     private final ParserContext parserContext;
1:8d9ae6e: 
1:8d9ae6e:     public SpringNamespaceHandlerResolver(ParserContext parserContext) {
1:8d9ae6e:         this.parserContext = parserContext;
1:8d9ae6e:     }
1:8d9ae6e: 
1:8d9ae6e:     @Override
1:8d9ae6e:     public org.springframework.beans.factory.xml.NamespaceHandler resolve(String namespaceUri) {
1:8d9ae6e:         try {
1:8d9ae6e:             NamespaceHandler handler = parserContext.getNamespaceHandler(URI.create(namespaceUri));
1:8d9ae6e:             if (handler instanceof BlueprintNamespaceHandler) {
1:8d9ae6e:                 return ((BlueprintNamespaceHandler) handler).getSpringHandler();
1:8d9ae6e:             }
1:09b7171:             else if (handler != null) {
1:09b7171:                 return new SpringNamespaceHandler(parserContext, handler);
1:09b7171:             }
1:8d9ae6e:         } catch (ComponentDefinitionException e) {
1:8d9ae6e:             // Ignore
1:8d9ae6e:         }
1:8d9ae6e:         return null;
1:8d9ae6e:     }
1:8d9ae6e: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:09b7171
/////////////////////////////////////////////////////////////////////////
1:             else if (handler != null) {
1:                 return new SpringNamespaceHandler(parserContext, handler);
1:             }
commit:8d9ae6e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.spring;
1: 
1: import java.net.URI;
1: 
1: import org.apache.aries.blueprint.NamespaceHandler;
1: import org.apache.aries.blueprint.ParserContext;
1: import org.osgi.service.blueprint.container.ComponentDefinitionException;
1: import org.springframework.beans.factory.xml.NamespaceHandlerResolver;
1: 
1: public class SpringNamespaceHandlerResolver implements NamespaceHandlerResolver {
1: 
1:     private final ParserContext parserContext;
1: 
1:     public SpringNamespaceHandlerResolver(ParserContext parserContext) {
1:         this.parserContext = parserContext;
1:     }
1: 
1:     @Override
1:     public org.springframework.beans.factory.xml.NamespaceHandler resolve(String namespaceUri) {
1:         try {
1:             NamespaceHandler handler = parserContext.getNamespaceHandler(URI.create(namespaceUri));
1:             if (handler instanceof BlueprintNamespaceHandler) {
1:                 return ((BlueprintNamespaceHandler) handler).getSpringHandler();
1:             }
1:         } catch (ComponentDefinitionException e) {
1:             // Ignore
1:         }
1:         return null;
1:     }
1: }
============================================================================