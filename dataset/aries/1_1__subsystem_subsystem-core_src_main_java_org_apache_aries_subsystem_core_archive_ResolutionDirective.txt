1:1129914: /*
1:1129914:  * Licensed under the Apache License, Version 2.0 (the "License");
1:1129914:  * you may not use this file except in compliance with the License.
1:1129914:  * You may obtain a copy of the License at
1:1129914:  *
1:1129914:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1129914:  *
1:1129914:  * Unless required by applicable law or agreed to in writing, software
1:1129914:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1129914:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1129914:  * See the License for the specific language governing permissions and
1:1129914:  * limitations under the License.
1:1129914:  */
1:1129914: package org.apache.aries.subsystem.core.archive;
2:1129914: 
1:1129914: import org.osgi.framework.Constants;
1:1129914: 
1:1129914: public class ResolutionDirective extends AbstractDirective {
1:4717af0: 	public static final String NAME = Constants.RESOLUTION_DIRECTIVE;
1:c1afebc: 	public static final String VALUE_MANDATORY = Constants.RESOLUTION_MANDATORY;
1:c1afebc: 	public static final String VALUE_OPTIONAL = Constants.RESOLUTION_OPTIONAL;
1:1129914: 	
1:c1afebc: 	public static final ResolutionDirective MANDATORY = new ResolutionDirective(VALUE_MANDATORY);
1:c1afebc: 	public static final ResolutionDirective OPTIONAL = new ResolutionDirective(VALUE_OPTIONAL);
1:1129914: 	
1:c1afebc: 	public ResolutionDirective() {
1:c1afebc: 		this(VALUE_MANDATORY);
4:1129914: 	}
1:1129914: 	
1:c1afebc: 	public static ResolutionDirective getInstance(String value) {
1:c1afebc: 		if (VALUE_MANDATORY.equals(value))
1:c1afebc: 			return MANDATORY;
1:c1afebc: 		if (VALUE_OPTIONAL.equals(value))
1:c1afebc: 			return OPTIONAL;
1:2ffcfb9:         throw new IllegalArgumentException("Invalid " + Constants.RESOLUTION_DIRECTIVE + " directive: " + value);
1:c1afebc: 	}
1:1129914: 	
1:c1afebc: 	private ResolutionDirective(String value) {
1:c1afebc: 		super(NAME, value);
1:1129914: 	}
1:1129914: 
1:1129914: 	public boolean isMandatory() {
1:c1afebc: 		return MANDATORY == this || VALUE_MANDATORY.equals(getValue());
1:1129914: 	}
1:1129914: 	
1:1129914: 	public boolean isOptional() {
1:c1afebc: 		return OPTIONAL == this || VALUE_OPTIONAL.equals(getValue());
1:1129914: 	}
1:1129914: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:2ffcfb9
/////////////////////////////////////////////////////////////////////////
1:         throw new IllegalArgumentException("Invalid " + Constants.RESOLUTION_DIRECTIVE + " directive: " + value);
commit:c1afebc
/////////////////////////////////////////////////////////////////////////
1: 	public static final String VALUE_MANDATORY = Constants.RESOLUTION_MANDATORY;
1: 	public static final String VALUE_OPTIONAL = Constants.RESOLUTION_OPTIONAL;
1: 	public static final ResolutionDirective MANDATORY = new ResolutionDirective(VALUE_MANDATORY);
1: 	public static final ResolutionDirective OPTIONAL = new ResolutionDirective(VALUE_OPTIONAL);
1: 	public ResolutionDirective() {
1: 		this(VALUE_MANDATORY);
1: 	public static ResolutionDirective getInstance(String value) {
1: 		if (VALUE_MANDATORY.equals(value))
1: 			return MANDATORY;
1: 		if (VALUE_OPTIONAL.equals(value))
1: 			return OPTIONAL;
0: 		else
0: 			throw new IllegalArgumentException("Invalid " + Constants.RESOLUTION_DIRECTIVE + " directive: " + value);
1: 	}
1: 	private ResolutionDirective(String value) {
1: 		super(NAME, value);
1: 		return MANDATORY == this || VALUE_MANDATORY.equals(getValue());
1: 		return OPTIONAL == this || VALUE_OPTIONAL.equals(getValue());
commit:4717af0
/////////////////////////////////////////////////////////////////////////
1: 	public static final String NAME = Constants.RESOLUTION_DIRECTIVE;
/////////////////////////////////////////////////////////////////////////
0: 		super(NAME, mandatory ? Constants.RESOLUTION_MANDATORY : Constants.RESOLUTION_OPTIONAL);
commit:1129914
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.core.archive;
1: 
1: import org.osgi.framework.Constants;
1: 
1: public class ResolutionDirective extends AbstractDirective {
0: 	public static final String NAME = "resolution";
1: 	
0: 	public static final ResolutionDirective MANDATORY = new ResolutionDirective(true);
0: 	public static final ResolutionDirective OPTIONAL = new ResolutionDirective(false);
1: 	
0: 	public static ResolutionDirective getInstance(String value) {
0: 		if (Constants.RESOLUTION_MANDATORY.equals(value)) {
0: 			return MANDATORY;
1: 		}
0: 		else if (Constants.RESOLUTION_OPTIONAL.equals(value)) {
0: 			return OPTIONAL;
1: 		}
0: 		else {
0: 			throw new IllegalArgumentException("Illegal " + Constants.RESOLUTION_DIRECTIVE + " value: " + value);
1: 		}
1: 		
1: 	}
1: 	
0: 	private final boolean mandatory;
1: 	
0: 	private ResolutionDirective(boolean mandatory) {
0: 		super(Constants.RESOLUTION_DIRECTIVE, mandatory ? Constants.RESOLUTION_MANDATORY : Constants.RESOLUTION_OPTIONAL);
0: 		this.mandatory = mandatory;
1: 	}
1: 
1: 	public boolean isMandatory() {
0: 		return mandatory;
1: 	}
1: 	
1: 	public boolean isOptional() {
0: 		return !mandatory;
1: 	}
1: }
============================================================================