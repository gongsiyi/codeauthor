1:51515a4: /**
1:51515a4:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:51515a4:  *  contributor license agreements.  See the NOTICE file distributed with
1:51515a4:  *  this work for additional information regarding copyright ownership.
1:51515a4:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:51515a4:  *  (the "License"); you may not use this file except in compliance with
1:51515a4:  *  the License.  You may obtain a copy of the License at
1:51515a4:  *
1:51515a4:  *     http://www.apache.org/licenses/LICENSE-2.0
1:51515a4:  *
1:51515a4:  *  Unless required by applicable law or agreed to in writing, software
1:51515a4:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:51515a4:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:51515a4:  *  See the License for the specific language governing permissions and
1:51515a4:  *  limitations under the License.
1:51515a4:  */
1:51515a4: package org.apache.aries.blueprint.testbundlea;
2:51515a4: 
1:51515a4: import java.net.URL;
1:51515a4: import java.util.Collections;
1:51515a4: import java.util.List;
1:51515a4: import java.util.Set;
1:51515a4: 
1:51515a4: import org.apache.aries.blueprint.NamespaceHandler;
1:51515a4: import org.apache.aries.blueprint.ParserContext;
1:51515a4: import org.apache.aries.blueprint.PassThroughMetadata;
1:51515a4: import org.apache.aries.blueprint.mutable.MutableBeanMetadata;
1:51515a4: import org.apache.aries.blueprint.mutable.MutableRefMetadata;
1:51515a4: import org.osgi.service.blueprint.reflect.BeanMetadata;
1:51515a4: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1:51515a4: import org.osgi.service.blueprint.reflect.Metadata;
1:51515a4: import org.osgi.service.blueprint.reflect.RefMetadata;
1:51515a4: 
1:51515a4: import org.w3c.dom.Attr;
1:51515a4: import org.w3c.dom.Element;
1:51515a4: import org.w3c.dom.Node;
1:51515a4: 
1:51515a4: public class NSHandlerFour implements NamespaceHandler{
1:51515a4:     public static String NSURI = "http://ns.handler.four";
1:51515a4:     private static String ELT_NAME = "nshandlerfour";
1:51515a4:     private static String ATTRIB_ID = "id";
1:51515a4: 
1:51515a4:     //process elements
1:51515a4:     public Metadata parse(Element element, ParserContext context) {
1:51515a4:         Metadata retval = null;       
1:51515a4:         if( element.getLocalName().equals(ELT_NAME) ) {
1:51515a4:             final String id = element.getAttributeNS(NSURI, ATTRIB_ID);
1:51515a4:             MutableBeanMetadata bm = context.createMetadata(MutableBeanMetadata.class);
1:51515a4:             bm.setId(id);
1:c52e099:             bm.setScope("PROTOTYPE");
1:6be355e:             bm.setClassName(TestBean.class.getName());
1:51515a4:             retval = bm;
3:51515a4:         }
1:51515a4:         return retval;
1:51515a4:     }    
1:51515a4: 
1:51515a4:     //supply schema back to blueprint.
1:51515a4:     public URL getSchemaLocation(String namespace) {
1:51515a4:         return this.getClass().getResource("nshandlerfour.xsd");
1:51515a4:     }
1:51515a4: 
1:51515a4:     public Set<Class> getManagedClasses() {
1:6be355e:         Class cls = TestBean.class;
1:51515a4:         return Collections.singleton(cls);
1:51515a4:     }
1:51515a4: 
1:51515a4:     public ComponentMetadata decorate(Node node, ComponentMetadata component,
1:51515a4:                                       ParserContext context) {
1:51515a4:         return component;
1:51515a4:     }
1:51515a4: 
1:51515a4: }
============================================================================
author:J. Daniel Kulp
-------------------------------------------------------------------------------
commit:6be355e
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:             bm.setClassName(TestBean.class.getName());
/////////////////////////////////////////////////////////////////////////
1:         Class cls = TestBean.class;
commit:c52e099
/////////////////////////////////////////////////////////////////////////
1:             bm.setScope("PROTOTYPE");
commit:51515a4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.testbundlea;
1: 
1: import java.net.URL;
1: import java.util.Collections;
1: import java.util.List;
1: import java.util.Set;
1: 
1: import org.apache.aries.blueprint.NamespaceHandler;
1: import org.apache.aries.blueprint.ParserContext;
1: import org.apache.aries.blueprint.PassThroughMetadata;
1: import org.apache.aries.blueprint.mutable.MutableBeanMetadata;
1: import org.apache.aries.blueprint.mutable.MutableRefMetadata;
1: import org.osgi.service.blueprint.reflect.BeanMetadata;
1: import org.osgi.service.blueprint.reflect.ComponentMetadata;
1: import org.osgi.service.blueprint.reflect.Metadata;
1: import org.osgi.service.blueprint.reflect.RefMetadata;
1: 
1: import org.w3c.dom.Attr;
1: import org.w3c.dom.Element;
1: import org.w3c.dom.Node;
1: 
1: public class NSHandlerFour implements NamespaceHandler{
1:     public static String NSURI = "http://ns.handler.four";
1:     private static String ELT_NAME = "nshandlerfour";
1:     private static String ATTRIB_ID = "id";
1: 
1: 
0:     public static class Four {
0:         public Four() {
1:         }
1:     }
1:     //process elements
1:     public Metadata parse(Element element, ParserContext context) {
1:         Metadata retval = null;       
1:         if( element.getLocalName().equals(ELT_NAME) ) {
1:             final String id = element.getAttributeNS(NSURI, ATTRIB_ID);
1:             MutableBeanMetadata bm = context.createMetadata(MutableBeanMetadata.class);
1:             bm.setId(id);
0:             bm.setClassName(Four.class.getName());
1:             retval = bm;
1:         }
1:         return retval;
1:     }    
1: 
1:     //supply schema back to blueprint.
1:     public URL getSchemaLocation(String namespace) {
1:         return this.getClass().getResource("nshandlerfour.xsd");
1:     }
1: 
1:     public Set<Class> getManagedClasses() {
0:         Class cls = Four.class;
1:         return Collections.singleton(cls);
1:     }
1: 
1:     public ComponentMetadata decorate(Node node, ComponentMetadata component,
1:                                       ParserContext context) {
1:         return component;
1:     }
1: 
1: }
============================================================================