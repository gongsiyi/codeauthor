2:430e8f5: /**
1:430e8f5:  * Licensed to the Apache Software Foundation (ASF) under one
1:430e8f5:  * or more contributor license agreements.  See the NOTICE file
1:430e8f5:  * distributed with this work for additional information
1:430e8f5:  * regarding copyright ownership.  The ASF licenses this file
1:430e8f5:  * to you under the Apache License, Version 2.0 (the
1:430e8f5:  * "License"); you may not use this file except in compliance
1:430e8f5:  * with the License.  You may obtain a copy of the License at
1:430e8f5:  *
1:430e8f5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:430e8f5:  *
1:430e8f5:  * Unless required by applicable law or agreed to in writing,
1:430e8f5:  * software distributed under the License is distributed on an
1:430e8f5:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:430e8f5:  * KIND, either express or implied.  See the License for the
1:430e8f5:  * specific language governing permissions and limitations
1:430e8f5:  * under the License.
2:430e8f5:  */
1:430e8f5: package org.apache.aries.samples.blog.api;
3:430e8f5: 
1:430e8f5: import java.text.ParseException;
1:430e8f5: import java.util.List;
1:430e8f5: 
1:430e8f5: 
1:f3e430e: public interface BlogAuthorManager
1:430e8f5: {
1:430e8f5:   /**
1:430e8f5:    * Create an author.
1:430e8f5:    * @param email the author's email address, this is used as the key in the database
1:430e8f5:    * @param dob the author's date of birth
1:430e8f5:    * @param name the author's full name
1:430e8f5:    * @param displayName the author's display name
1:430e8f5:    * @param bio the author's biography
2:430e8f5:    * @throws ParseException
1:430e8f5:    */
1:430e8f5:   public void createAuthor(String email, String dob, String name, String displayName, String bio) throws ParseException;
1:430e8f5:   
1:430e8f5:   /**
1:430e8f5:    * Get all authors from the database.
1:430e8f5:    * @return a List<Author> of all authors in the database
1:430e8f5:    */
1:f3e430e:   public List<? extends BlogAuthor> getAllAuthors();
1:430e8f5:   
1:430e8f5:   /**
1:430e8f5:    * Get an individual author.
1:430e8f5:    * @param emailAddress - the email address of the author to retrieve
1:430e8f5:    * @return the author
1:430e8f5:    */
1:f3e430e:   public BlogAuthor getAuthor(String emailAddress);
1:430e8f5:   
1:430e8f5:   /**
1:430e8f5:    * Delete an author from the database.
1:430e8f5:    * @param emailAddress the email address of the author to delete
1:430e8f5:    */
1:430e8f5:   public void removeAuthor(String emailAddress);
1:430e8f5:   
1:430e8f5:   /**
2:430e8f5:    * Update a specific author.
2:430e8f5:    * @param email the email address of the author being updated.
1:430e8f5:    * @param dob the new date of birth (as a string)
2:430e8f5:    * @param name the new full name
2:430e8f5:    * @param displayName the new display name
2:430e8f5:    * @param bio the new biography
1:430e8f5:    * @throws ParseException
1:430e8f5:    */
1:430e8f5:   public void updateAuthor(String email, String dob, String name, String displayName, String bio) throws ParseException;
1:430e8f5:   
1:430e8f5: }
============================================================================
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:afa98ec
commit:f3e430e
/////////////////////////////////////////////////////////////////////////
1: public interface BlogAuthorManager
/////////////////////////////////////////////////////////////////////////
1:   public List<? extends BlogAuthor> getAllAuthors();
1:   public BlogAuthor getAuthor(String emailAddress);
/////////////////////////////////////////////////////////////////////////
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:430e8f5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.blog.api;
1: 
1: import java.text.ParseException;
0: import java.util.Date;
1: import java.util.List;
1: 
0: import org.apache.aries.samples.blog.persistence.api.Author;
1: 
1: 
1: 
0: public interface AuthorManager
1: {
1:   /**
1:    * Create an author.
1:    * @param email the author's email address, this is used as the key in the database
1:    * @param dob the author's date of birth
1:    * @param name the author's full name
1:    * @param displayName the author's display name
1:    * @param bio the author's biography
1:    * @throws ParseException
1:    */
1:   public void createAuthor(String email, String dob, String name, String displayName, String bio) throws ParseException;
1:   
1:   /**
1:    * Get all authors from the database.
1:    * @return a List<Author> of all authors in the database
1:    */
0:   public List<Author> getAllAuthors();
1:   
1:   /**
1:    * Get an individual author.
1:    * @param emailAddress - the email address of the author to retrieve
1:    * @return the author
1:    */
0:   public Author getAuthor(String emailAddress);
1:   
1:   /**
1:    * Delete an author from the database.
1:    * @param emailAddress the email address of the author to delete
1:    */
1:   public void removeAuthor(String emailAddress);
1:   
1:   /**
1:    * Update a specific author.
1:    * @param email the email address of the author being updated.
1:    * @param dob the new date of birth (as a string)
1:    * @param name the new full name
1:    * @param displayName the new display name
1:    * @param bio the new biography
1:    * @throws ParseException
1:    */
1:   public void updateAuthor(String email, String dob, String name, String displayName, String bio) throws ParseException;
1:   
1:   /**
1:    * Update a specific author.
1:    * @param email the email address of the author being updated.
0:    * @param dob the new date of birth (as a Date)
1:    * @param name the new full name
1:    * @param displayName the new display name
1:    * @param bio the new biography
1:    * @throws ParseException
1:    */
0:   public void updateAuthor(String email, Date dob, String name, String displayName, String bio) throws ParseException;
1: }
============================================================================