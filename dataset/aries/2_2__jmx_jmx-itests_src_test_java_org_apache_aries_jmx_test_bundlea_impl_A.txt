1:fdf3952: /**
1:fdf3952:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:fdf3952:  *  contributor license agreements.  See the NOTICE file distributed with
1:fdf3952:  *  this work for additional information regarding copyright ownership.
1:fdf3952:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:fdf3952:  *  (the "License"); you may not use this file except in compliance with
1:fdf3952:  *  the License.  You may obtain a copy of the License at
1:fdf3952:  *
1:fdf3952:  *     http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  *  Unless required by applicable law or agreed to in writing, software
1:fdf3952:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:fdf3952:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fdf3952:  *  See the License for the specific language governing permissions and
1:fdf3952:  *  limitations under the License.
1:fdf3952:  */
1:fdf3952: package org.apache.aries.jmx.test.bundlea.impl;
1:fdf3952: 
1:fdf3952: import java.util.Dictionary;
1:fdf3952: 
1:fdf3952: import org.apache.aries.jmx.test.bundlea.api.InterfaceA;
1:fdf3952: import org.apache.aries.jmx.test.bundleb.api.InterfaceB;
1:fdf3952: import org.osgi.service.cm.ConfigurationException;
1:fdf3952: import org.osgi.util.tracker.ServiceTracker;
1:fdf3952: 
1:fdf3952: /**
1:fdf3952:  * 
1:fdf3952:  *
1:fdf3952:  * @version $Rev$ $Date$
1:fdf3952:  */
1:0a8778f: @SuppressWarnings("rawtypes")
1:fdf3952: public class A implements InterfaceA {
1:fdf3952: 
1:fdf3952:     private ServiceTracker tracker;
1:fdf3952:     private Dictionary props;
1:fdf3952:     
1:fdf3952:     public A(ServiceTracker tracker) {
1:fdf3952:         this.tracker = tracker;
1:fdf3952:     }
1:fdf3952:     
1:fdf3952:     /* (non-Javadoc)
1:fdf3952:      * @see org.apache.aries.jmx.test.bundlea.api.InterfaceA#invoke()
1:fdf3952:      */
1:fdf3952:     public boolean invoke() {
1:fdf3952:         
1:fdf3952:         if (tracker.getService() != null) {
1:fdf3952:             InterfaceB service = (InterfaceB) tracker.getService();
1:fdf3952:             return service.invoke();
1:fdf3952:         } else {
1:fdf3952:             return false;
1:fdf3952:         }
1:fdf3952:         
1:fdf3952:     }
1:fdf3952: 
1:0a8778f: 	public void updated(Dictionary dictionary) throws ConfigurationException {
1:fdf3952:         this.props = dictionary;
1:fdf3952:     }
1:fdf3952:     
1:fdf3952:     // test cback
1:fdf3952:     public Dictionary getConfig() {
1:fdf3952:         return this.props;
1:fdf3952:     }
1:fdf3952: 
1:fdf3952: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:0a8778f
/////////////////////////////////////////////////////////////////////////
1: @SuppressWarnings("rawtypes")
/////////////////////////////////////////////////////////////////////////
1: 	public void updated(Dictionary dictionary) throws ConfigurationException {
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jmx.test.bundlea.impl;
1: 
1: import java.util.Dictionary;
1: 
1: import org.apache.aries.jmx.test.bundlea.api.InterfaceA;
1: import org.apache.aries.jmx.test.bundleb.api.InterfaceB;
1: import org.osgi.service.cm.ConfigurationException;
1: import org.osgi.util.tracker.ServiceTracker;
1: 
1: /**
1:  * 
1:  *
1:  * @version $Rev$ $Date$
1:  */
0: @SuppressWarnings("unchecked")
1: public class A implements InterfaceA {
1: 
1:     private ServiceTracker tracker;
1:     private Dictionary props;
1:     
1:     public A(ServiceTracker tracker) {
1:         this.tracker = tracker;
1:     }
1:     
1:     /* (non-Javadoc)
1:      * @see org.apache.aries.jmx.test.bundlea.api.InterfaceA#invoke()
1:      */
1:     public boolean invoke() {
1:         
1:         if (tracker.getService() != null) {
1:             InterfaceB service = (InterfaceB) tracker.getService();
1:             return service.invoke();
1:         } else {
1:             return false;
1:         }
1:         
1:     }
1: 
0:     public void updated(Dictionary dictionary) throws ConfigurationException {
1:         this.props = dictionary;
1:     }
1:     
1:     // test cback
1:     public Dictionary getConfig() {
1:         return this.props;
1:     }
1: 
1: }
============================================================================