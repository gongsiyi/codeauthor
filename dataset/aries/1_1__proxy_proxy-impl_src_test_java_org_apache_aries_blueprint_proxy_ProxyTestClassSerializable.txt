1:8f4b919: /*
1:8f4b919:  * Licensed to the Apache Software Foundation (ASF) under one
1:8f4b919:  * or more contributor license agreements.  See the NOTICE file
1:8f4b919:  * distributed with this work for additional information
1:8f4b919:  * regarding copyright ownership.  The ASF licenses this file
1:8f4b919:  * to you under the Apache License, Version 2.0 (the
1:8f4b919:  * "License"); you may not use this file except in compliance
1:8f4b919:  * with the License.  You may obtain a copy of the License at
1:8f4b919:  *
1:8f4b919:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8f4b919:  *
1:8f4b919:  * Unless required by applicable law or agreed to in writing,
1:8f4b919:  * software distributed under the License is distributed on an
1:8f4b919:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8f4b919:  * KIND, either express or implied.  See the License for the
1:8f4b919:  * specific language governing permissions and limitations
1:8f4b919:  * under the License.
1:8f4b919:  */
1:8f4b919: package org.apache.aries.blueprint.proxy;
1:8f4b919: 
1:8f4b919: import static org.junit.Assert.assertEquals;
1:8f4b919: 
1:8f4b919: import java.io.ByteArrayInputStream;
1:8f4b919: import java.io.ObjectInputStream;
1:8f4b919: import java.io.Serializable;
1:8f4b919: 
1:8f4b919: public class ProxyTestClassSerializable implements Serializable {
1:8f4b919:   
1:8f4b919:   public int value = 0;
1:8f4b919: 
1:8f4b919:   /**
1:8f4b919:    * We deserialize using this static method to ensure that the right classloader
1:8f4b919:    * is used when deserializing our object, it will always be the classloader that
1:8f4b919:    * loaded this class, which might be the JUnit one, or our weaving one.
1:8f4b919:    * 
1:8f4b919:    * @param bytes
1:8f4b919:    * @param value
1:8f4b919:    * @throws Exception
1:8f4b919:    */
1:8f4b919:   public static void checkDeserialization(byte[] bytes, int value) throws Exception {
1:8f4b919:     ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
1:8f4b919:     ProxyTestClassSerializable out = (ProxyTestClassSerializable) ois.readObject();
1:8f4b919:     assertEquals(value, out.value);
1:8f4b919:   }
1:8f4b919:   
1:8f4b919: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:8f4b919
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.proxy;
1: 
1: import static org.junit.Assert.assertEquals;
1: 
1: import java.io.ByteArrayInputStream;
1: import java.io.ObjectInputStream;
1: import java.io.Serializable;
1: 
1: public class ProxyTestClassSerializable implements Serializable {
1:   
1:   public int value = 0;
1: 
1:   /**
1:    * We deserialize using this static method to ensure that the right classloader
1:    * is used when deserializing our object, it will always be the classloader that
1:    * loaded this class, which might be the JUnit one, or our weaving one.
1:    * 
1:    * @param bytes
1:    * @param value
1:    * @throws Exception
1:    */
1:   public static void checkDeserialization(byte[] bytes, int value) throws Exception {
1:     ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
1:     ProxyTestClassSerializable out = (ProxyTestClassSerializable) ois.readObject();
1:     assertEquals(value, out.value);
1:   }
1:   
1: }
============================================================================