1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint;
1:f13c6ac: 
1:f13c6ac: import java.io.IOException;
1:f13c6ac: import java.net.URI;
1:f13c6ac: import java.util.Collections;
1:f117d81: import java.util.Map;
1:f13c6ac: import java.util.Set;
1:f13c6ac: 
1:f13c6ac: import javax.xml.validation.Schema;
1:f13c6ac: 
1:f13c6ac: import junit.framework.TestCase;
1:79e9d13: 
1:be8e9c5: import org.apache.aries.blueprint.ext.impl.ExtNamespaceHandler;
1:6bd0f94: import org.apache.aries.blueprint.parser.ComponentDefinitionRegistryImpl;
1:09a7647: import org.apache.aries.blueprint.parser.Parser;
1:09a7647: import org.apache.aries.blueprint.parser.NamespaceHandlerSet;
1:f13c6ac: import org.xml.sax.SAXException;
1:f13c6ac: 
1:f13c6ac: public abstract class AbstractBlueprintTest extends TestCase {
1:f13c6ac: 
1:f13c6ac:     protected ComponentDefinitionRegistryImpl parse(String name) throws Exception {
1:d08aba3:       final URI extensionHandler = new URI("http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0");
1:09a7647:       NamespaceHandlerSet handlers = new NamespaceHandlerSet() {
1:3b2c33b:             public Set<URI> getNamespaces() {
2:f13c6ac:                 return null;
3:f13c6ac:             }
1:3b2c33b:             public NamespaceHandler getNamespaceHandler(URI namespace) {
1:d08aba3:                 if (namespace.equals(extensionHandler)) {
1:d08aba3:                   return new ExtNamespaceHandler();
1:d08aba3:                 } else {
1:3b2c33b:                   return null;
1:3b2c33b:                 }
1:3b2c33b:             }
1:09a7647:             public void removeListener(NamespaceHandlerSet.Listener listener) {
1:f13c6ac:             }
1:3b2c33b:             public Schema getSchema() throws SAXException, IOException {
1:3b2c33b:                 return null;
1:3b2c33b:             }
1:f117d81:             public Schema getSchema(Map<String, String> locations) throws SAXException, IOException {
1:f117d81:               return null;
1:f117d81:             }
1:3b2c33b:             public boolean isComplete() {
1:3b2c33b:                 return false;
1:3b2c33b:             }
1:09a7647:             public void addListener(NamespaceHandlerSet.Listener listener) {
1:f13c6ac:             }
1:f13c6ac:             public void destroy() {
1:f13c6ac:             }
1:f13c6ac:         };
1:f13c6ac:         return parse(name, handlers);
1:f13c6ac:     }
1:f13c6ac: 
1:09a7647:     protected ComponentDefinitionRegistryImpl parse(String name, NamespaceHandlerSet handlers) throws Exception {
1:f13c6ac:         ComponentDefinitionRegistryImpl registry = new ComponentDefinitionRegistryImpl();
1:f13c6ac:         Parser parser = new Parser();
1:f13c6ac:         parser.parse(Collections.singletonList(getClass().getResource(name)));
1:f13c6ac:         parser.populate(handlers, registry);
1:f13c6ac:         return registry;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f117d81
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
/////////////////////////////////////////////////////////////////////////
1:             public Schema getSchema(Map<String, String> locations) throws SAXException, IOException {
1:               return null;
1:             }
commit:be8e9c5
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.ext.impl.ExtNamespaceHandler;
commit:3b2c33b
/////////////////////////////////////////////////////////////////////////
0: import org.osgi.framework.Bundle;
0:         NamespaceHandlerRegistry.NamespaceHandlerSet handlers = new NamespaceHandlerRegistry.NamespaceHandlerSet() {
1:             public Set<URI> getNamespaces() {
1:             public NamespaceHandler getNamespaceHandler(URI namespace) {
1:                 return null;
1:             }
0:             public void removeListener(NamespaceHandlerRegistry.Listener listener) {
1:             }
1:             public Schema getSchema() throws SAXException, IOException {
1:                 return null;
1:             }
1:             public boolean isComplete() {
1:                 return false;
1:             }
0:             public void addListener(NamespaceHandlerRegistry.Listener listener) {
0:     protected ComponentDefinitionRegistryImpl parse(String name, NamespaceHandlerRegistry.NamespaceHandlerSet handlers) throws Exception {
commit:2f55d71
/////////////////////////////////////////////////////////////////////////
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint;
1: 
1: import java.net.URI;
1: import java.util.Collections;
1: import java.util.Set;
1: import java.io.IOException;
1: 
1: import javax.xml.validation.Schema;
1: 
1: import junit.framework.TestCase;
0: import org.apache.geronimo.blueprint.container.NamespaceHandlerRegistry;
0: import org.apache.geronimo.blueprint.container.Parser;
0: import org.apache.geronimo.blueprint.namespace.ComponentDefinitionRegistryImpl;
0: import org.apache.geronimo.blueprint.reflect.EnvironmentMetadataImpl;
1: import org.xml.sax.SAXException;
1: 
1: public abstract class AbstractBlueprintTest extends TestCase {
1: 
1:     protected ComponentDefinitionRegistryImpl parse(String name) throws Exception {
0:         NamespaceHandlerRegistry handlers = new NamespaceHandlerRegistry() {
0:             public NamespaceHandler getNamespaceHandler(URI uri) {
1:                 return null;
1:             }
0:             public void addCallback(Runnable runnable) {
1:             }
1:             public void destroy() {
1:             }
0:             public void addListener(Listener listener) {
1:             }
0:             public void removeListener(Listener listener) {
1:             }
0:             public Schema getSchema(Set<URI> namespaces) throws SAXException, IOException {
1:                 return null;
1:             }
1:         };
1:         return parse(name, handlers);
1:     }
1: 
0:     protected ComponentDefinitionRegistryImpl parse(String name, NamespaceHandlerRegistry handlers) throws Exception {
1:         ComponentDefinitionRegistryImpl registry = new ComponentDefinitionRegistryImpl();
1:         Parser parser = new Parser();
1:         parser.parse(Collections.singletonList(getClass().getResource(name)));
1:         parser.populate(handlers, registry);
1:         return registry;
1:     }
1: 
1: }
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:6bd0f94
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.parser.ComponentDefinitionRegistryImpl;
commit:09a7647
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.parser.Parser;
1: import org.apache.aries.blueprint.parser.NamespaceHandlerSet;
1:       NamespaceHandlerSet handlers = new NamespaceHandlerSet() {
/////////////////////////////////////////////////////////////////////////
1:             public void removeListener(NamespaceHandlerSet.Listener listener) {
/////////////////////////////////////////////////////////////////////////
1:             public void addListener(NamespaceHandlerSet.Listener listener) {
/////////////////////////////////////////////////////////////////////////
1:     protected ComponentDefinitionRegistryImpl parse(String name, NamespaceHandlerSet handlers) throws Exception {
commit:d08aba3
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.blueprint.ext.ExtNamespaceHandler;
1:       final URI extensionHandler = new URI("http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0");
0:       NamespaceHandlerRegistry.NamespaceHandlerSet handlers = new NamespaceHandlerRegistry.NamespaceHandlerSet() {
1:                 if (namespace.equals(extensionHandler)) {
1:                   return new ExtNamespaceHandler();
1:                 } else {
0:                   return null;
0:                 }
commit:c1dc516
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         ComponentDefinitionRegistryImpl registry = new ComponentDefinitionRegistryImpl();
commit:79e9d13
/////////////////////////////////////////////////////////////////////////
0: import java.io.IOException;
1: 
0: import org.apache.aries.unittest.mocks.Skeleton;
0: import org.osgi.framework.BundleContext;
0: import org.osgi.service.blueprint.container.BlueprintContainer;
0: import org.osgi.service.blueprint.container.Converter;
/////////////////////////////////////////////////////////////////////////
0:         ComponentDefinitionRegistryImpl registry = new ComponentDefinitionRegistryImpl(
0:                 Skeleton.newMock(BlueprintContainer.class),
0:                 Skeleton.newMock(BundleContext.class),
0:                 Skeleton.newMock(Converter.class));
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.blueprint.container.NamespaceHandlerRegistry;
0: import org.apache.aries.blueprint.container.Parser;
0: import org.apache.aries.blueprint.namespace.ComponentDefinitionRegistryImpl;
0: import org.apache.aries.blueprint.reflect.EnvironmentMetadataImpl;
============================================================================