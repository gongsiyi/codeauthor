1:d042317: /**
1:d042317:  * Licensed to the Apache Software Foundation (ASF) under one
1:d042317:  * or more contributor license agreements.  See the NOTICE file
1:d042317:  * distributed with this work for additional information
1:d042317:  * regarding copyright ownership.  The ASF licenses this file
1:d042317:  * to you under the Apache License, Version 2.0 (the
1:d042317:  * "License"); you may not use this file except in compliance
1:d042317:  * with the License.  You may obtain a copy of the License at
1:d042317:  * <p>
1:d042317:  * http://www.apache.org/licenses/LICENSE-2.0
1:d042317:  * <p>
1:d042317:  * Unless required by applicable law or agreed to in writing,
1:d042317:  * software distributed under the License is distributed on an
1:d042317:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:d042317:  * KIND, either express or implied.  See the License for the
1:d042317:  * specific language governing permissions and limitations
1:d042317:  * under the License.
1:d042317:  */
1:b5bf406: package org.apache.aries.blueprint.plugin.test;
1:b5bf406: 
1:5ab57d7: import org.ops4j.pax.cdi.api.OsgiService;
1:5ab57d7: import org.springframework.beans.factory.annotation.Value;
1:5ab57d7: 
1:b5bf406: import javax.enterprise.inject.Produces;
1:b5bf406: import javax.inject.Inject;
1:5ab57d7: import javax.inject.Named;
1:b5bf406: import javax.inject.Singleton;
1:b5bf406: 
1:b5bf406: @Singleton
1:b5bf406: public class MyFactoryBean {
1:b5bf406:     
1:b5bf406:     @Inject
1:b5bf406:     ServiceB serviceB;
1:b5bf406: 
1:b5bf406:     @Produces
1:b5bf406:     public MyProduced create() {
1:b5bf406:         return new MyProduced("My message");
1:b5bf406:     }
1:5ab57d7: 
1:5ab57d7:     @Produces
1:5ab57d7:     public MyProducedWithConstructor createBeanWithParameters(MyBean1 myBean1, @Value("100") int bla, @OsgiService(filter = "myRef") @Named("ser1") ServiceC myReference) {
1:5ab57d7:         return new MyProducedWithConstructor(null);
1:5ab57d7:     }
1:b5bf406: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
commit:5ab57d7
/////////////////////////////////////////////////////////////////////////
1: import org.ops4j.pax.cdi.api.OsgiService;
1: import org.springframework.beans.factory.annotation.Value;
1: 
1: import javax.inject.Named;
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Produces
1:     public MyProducedWithConstructor createBeanWithParameters(MyBean1 myBean1, @Value("100") int bla, @OsgiService(filter = "myRef") @Named("ser1") ServiceC myReference) {
1:         return new MyProducedWithConstructor(null);
1:     }
commit:d042317
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * <p>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p>
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:b5bf406
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.plugin.test;
1: 
1: import javax.enterprise.inject.Produces;
1: import javax.inject.Inject;
1: import javax.inject.Singleton;
1: 
1: @Singleton
1: public class MyFactoryBean {
1:     
1:     @Inject
1:     ServiceB serviceB;
1: 
1:     @Produces
1:     public MyProduced create() {
1:         return new MyProduced("My message");
1:     }
1: }
============================================================================