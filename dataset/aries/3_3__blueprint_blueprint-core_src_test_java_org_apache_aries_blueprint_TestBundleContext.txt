1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint;
1:f13c6ac: 
1:f13c6ac: import java.io.File;
1:f13c6ac: import java.io.InputStream;
1:b49a314: import java.util.Collection;
1:f13c6ac: import java.util.Dictionary;
1:f13c6ac: 
1:f13c6ac: import org.osgi.framework.Bundle;
1:f13c6ac: import org.osgi.framework.BundleContext;
1:f13c6ac: import org.osgi.framework.BundleException;
1:f13c6ac: import org.osgi.framework.BundleListener;
1:f13c6ac: import org.osgi.framework.Filter;
1:f13c6ac: import org.osgi.framework.FrameworkListener;
1:f13c6ac: import org.osgi.framework.InvalidSyntaxException;
1:f13c6ac: import org.osgi.framework.ServiceListener;
1:f13c6ac: import org.osgi.framework.ServiceReference;
1:f13c6ac: import org.osgi.framework.ServiceRegistration;
1:f13c6ac: 
1:f13c6ac: public class TestBundleContext implements BundleContext {
1:f13c6ac: 
1:f13c6ac:     public void addBundleListener(BundleListener arg0) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void addFrameworkListener(FrameworkListener arg0) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void addServiceListener(ServiceListener arg0) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void addServiceListener(ServiceListener arg0, String arg1)
2:f13c6ac:         throws InvalidSyntaxException {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Filter createFilter(String arg0) throws InvalidSyntaxException {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public ServiceReference[] getAllServiceReferences(String arg0, String arg1)
1:f13c6ac:         throws InvalidSyntaxException {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Bundle getBundle() {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Bundle getBundle(long arg0) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:b49a314:     public Bundle getBundle(String arg0) { return null; }
1:b49a314: 
1:f13c6ac:     public Bundle[] getBundles() {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public File getDataFile(String arg0) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public String getProperty(String arg0) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Object getService(ServiceReference arg0) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public ServiceReference getServiceReference(String arg0) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:b49a314:     public ServiceReference getServiceReference(Class aClass) {
1:b49a314:         return null;
1:b49a314:     }
1:b49a314: 
1:b49a314:     public ServiceReference[] getServiceReferences(String arg0, String arg1) throws InvalidSyntaxException {
1:b49a314:         return null;
1:b49a314:     }
1:b49a314: 
1:b49a314:     public Collection getServiceReferences(Class arg0, String arg1) throws InvalidSyntaxException {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Bundle installBundle(String arg0) throws BundleException {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Bundle installBundle(String arg0, InputStream arg1) throws BundleException {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public ServiceRegistration registerService(String[] arg0, Object arg1, Dictionary arg2) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public ServiceRegistration registerService(String arg0, Object arg1, Dictionary arg2) {
1:f13c6ac:         return null;
1:f13c6ac:     }
1:f13c6ac: 
1:b49a314:     public <S> ServiceRegistration<S> registerService(Class<S> aClass, S s, Dictionary<String,?> dictionary) {
1:b49a314:         return null;
1:b49a314:     }
1:b49a314: 
1:f13c6ac:     public void removeBundleListener(BundleListener arg0) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void removeFrameworkListener(FrameworkListener arg0) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void removeServiceListener(ServiceListener arg0) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public boolean ungetService(ServiceReference arg0) {
1:f13c6ac:         return false;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac: }
============================================================================
author:Jean-Baptiste Onofre
-------------------------------------------------------------------------------
commit:b49a314
/////////////////////////////////////////////////////////////////////////
1: import java.util.Collection;
/////////////////////////////////////////////////////////////////////////
1:     public Bundle getBundle(String arg0) { return null; }
1: 
/////////////////////////////////////////////////////////////////////////
1:     public ServiceReference getServiceReference(Class aClass) {
1:         return null;
1:     }
1: 
1:     public ServiceReference[] getServiceReferences(String arg0, String arg1) throws InvalidSyntaxException {
1:         return null;
1:     }
1: 
1:     public Collection getServiceReferences(Class arg0, String arg1) throws InvalidSyntaxException {
/////////////////////////////////////////////////////////////////////////
1:     public <S> ServiceRegistration<S> registerService(Class<S> aClass, S s, Dictionary<String,?> dictionary) {
1:         return null;
1:     }
1: 
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint;
1: 
1: import java.io.File;
1: import java.io.InputStream;
1: import java.util.Dictionary;
1: 
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleContext;
1: import org.osgi.framework.BundleException;
1: import org.osgi.framework.BundleListener;
1: import org.osgi.framework.Filter;
1: import org.osgi.framework.FrameworkListener;
1: import org.osgi.framework.InvalidSyntaxException;
1: import org.osgi.framework.ServiceListener;
1: import org.osgi.framework.ServiceReference;
1: import org.osgi.framework.ServiceRegistration;
1: 
1: public class TestBundleContext implements BundleContext {
1: 
1:     public void addBundleListener(BundleListener arg0) {
1:     }
1: 
1:     public void addFrameworkListener(FrameworkListener arg0) {
1:     }
1: 
1:     public void addServiceListener(ServiceListener arg0) {
1:     }
1: 
1:     public void addServiceListener(ServiceListener arg0, String arg1)
1:         throws InvalidSyntaxException {
1:     }
1: 
1:     public Filter createFilter(String arg0) throws InvalidSyntaxException {
1:         return null;
1:     }
1: 
1:     public ServiceReference[] getAllServiceReferences(String arg0, String arg1)
1:         throws InvalidSyntaxException {
1:         return null;
1:     }
1: 
1:     public Bundle getBundle() {
1:         return null;
1:     }
1: 
1:     public Bundle getBundle(long arg0) {
1:         return null;
1:     }
1: 
1:     public Bundle[] getBundles() {
1:         return null;
1:     }
1: 
1:     public File getDataFile(String arg0) {
1:         return null;
1:     }
1: 
1:     public String getProperty(String arg0) {
1:         return null;
1:     }
1: 
1:     public Object getService(ServiceReference arg0) {
1:         return null;
1:     }
1: 
1:     public ServiceReference getServiceReference(String arg0) {
1:         return null;
1:     }
1: 
0:     public ServiceReference[] getServiceReferences(String arg0, String arg1)
1:     throws InvalidSyntaxException {
1:         return null;
1:     }
1: 
1:     public Bundle installBundle(String arg0) throws BundleException {
1:         return null;
1:     }
1: 
1:     public Bundle installBundle(String arg0, InputStream arg1) throws BundleException {
1:         return null;
1:     }
1: 
1:     public ServiceRegistration registerService(String[] arg0, Object arg1, Dictionary arg2) {
1:         return null;
1:     }
1: 
1:     public ServiceRegistration registerService(String arg0, Object arg1, Dictionary arg2) {
1:         return null;
1:     }
1: 
1:     public void removeBundleListener(BundleListener arg0) {
1:     }
1: 
1:     public void removeFrameworkListener(FrameworkListener arg0) {
1:     }
1: 
1:     public void removeServiceListener(ServiceListener arg0) {
1:     }
1: 
1:     public boolean ungetService(ServiceReference arg0) {
1:         return false;
1:     }
1: 
1: }
============================================================================