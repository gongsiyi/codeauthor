1:f3e430e: /**
1:f3e430e:  * Licensed to the Apache Software Foundation (ASF) under one
1:f3e430e:  * or more contributor license agreements.  See the NOTICE file
1:f3e430e:  * distributed with this work for additional information
1:f3e430e:  * regarding copyright ownership.  The ASF licenses this file
1:f3e430e:  * to you under the Apache License, Version 2.0 (the
1:f3e430e:  * "License"); you may not use this file except in compliance
1:f3e430e:  * with the License.  You may obtain a copy of the License at
1:f3e430e:  *
1:f3e430e:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f3e430e:  *
1:f3e430e:  * Unless required by applicable law or agreed to in writing,
1:f3e430e:  * software distributed under the License is distributed on an
1:f3e430e:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f3e430e:  * KIND, either express or implied.  See the License for the
1:f3e430e:  * specific language governing permissions and limitations
1:f3e430e:  * under the License.
1:f3e430e:  */
1:f3e430e: package org.apache.aries.samples.blog.api;
1:f3e430e: 
1:f3e430e: import java.util.List;
1:f3e430e: 
1:f3e430e: public interface BlogCommentManager {
1:f3e430e: 	/**
1:f3e430e: 	 * Create a comment by an author (email) against a post (Id)
1:f3e430e: 	 * @param comment
1:f3e430e: 	 * @param email
1:f3e430e: 	 * @param entryId
1:f3e430e: 	 */
1:f3e430e: 	public void createComment(String comment, String email, long entryId);
1:f3e430e: 
1:f3e430e: 	/**
1:f3e430e: 	 * Get all the comments made by an author
1:f3e430e: 	 * @param email
1:f3e430e: 	 * @return a list of comments made by an author
1:f3e430e: 	 */
1:f3e430e: 	public List<? extends BlogComment> getCommentsByAuthor(String email);
1:f3e430e: 
1:f3e430e: 	/**
1:f3e430e: 	 * 
1:f3e430e: 	 * @param id
1:f3e430e: 	 * @return A list of comments made about an entry
1:f3e430e: 	 */
1:f3e430e: 	public List<? extends BlogComment> getCommentsForPost(long id); 
1:f3e430e: 
1:f3e430e: 	/**
1:f3e430e: 	 * Delete a specific comment using it's id
1:f3e430e: 	 * @param id
1:f3e430e: 	 */
1:f3e430e: 	public void deleteComment(int id);
1:f3e430e: 
1:f3e430e: 	/**
1:f3e430e: 	 * Check to see whether the comment service is available
1:f3e430e: 	 * @return
1:f3e430e: 	 */
1:f3e430e: 	public boolean isCommentingAvailable();
1:f3e430e: 
1:f3e430e: }
============================================================================
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:afa98ec
commit:f3e430e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.blog.api;
1: 
1: import java.util.List;
1: 
1: public interface BlogCommentManager {
1: 	/**
1: 	 * Create a comment by an author (email) against a post (Id)
1: 	 * @param comment
1: 	 * @param email
1: 	 * @param entryId
1: 	 */
1: 	public void createComment(String comment, String email, long entryId);
1: 
1: 	/**
1: 	 * Get all the comments made by an author
1: 	 * @param email
1: 	 * @return a list of comments made by an author
1: 	 */
1: 	public List<? extends BlogComment> getCommentsByAuthor(String email);
1: 
1: 	/**
1: 	 * 
1: 	 * @param id
1: 	 * @return A list of comments made about an entry
1: 	 */
1: 	public List<? extends BlogComment> getCommentsForPost(long id); 
1: 
1: 	/**
1: 	 * Delete a specific comment using it's id
1: 	 * @param id
1: 	 */
1: 	public void deleteComment(int id);
1: 
1: 	/**
1: 	 * Check to see whether the comment service is available
1: 	 * @return
1: 	 */
1: 	public boolean isCommentingAvailable();
1: 
1: }
============================================================================