1:7fa86e8: /*
1:7fa86e8:  * Licensed to the Apache Software Foundation (ASF) under one
1:7fa86e8:  * or more contributor license agreements.  See the NOTICE file
1:7fa86e8:  * distributed with this work for additional information
1:7fa86e8:  * regarding copyright ownership.  The ASF licenses this file
1:7fa86e8:  * to you under the Apache License, Version 2.0 (the
1:7fa86e8:  * "License"); you may not use this file except in compliance
1:7fa86e8:  * with the License.  You may obtain a copy of the License at
1:7fa86e8:  *
1:7fa86e8:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7fa86e8:  *
1:7fa86e8:  * Unless required by applicable law or agreed to in writing,
1:7fa86e8:  * software distributed under the License is distributed on an
1:7fa86e8:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:7fa86e8:  * KIND, either express or implied.  See the License for the
1:7fa86e8:  * specific language governing permissions and limitations
1:7fa86e8:  * under the License.
1:7fa86e8:  */
1:7fa86e8: package org.osgi.util.pushstream;
1:7fa86e8: 
1:7fa86e8: import java.util.concurrent.BlockingQueue;
1:7fa86e8: import java.util.concurrent.Executor;
1:7fa86e8: 
1:7fa86e8: abstract class AbstractBufferBuilder<R, T, U extends BlockingQueue<PushEvent< ? extends T>>>
1:7fa86e8: 		implements BufferBuilder<R,T,U> {
1:7fa86e8: 
1:7fa86e8: 	protected Executor				worker;
1:7fa86e8: 	protected int					concurrency;
1:7fa86e8: 	protected PushbackPolicy<T,U>	backPressure;
1:7fa86e8: 	protected QueuePolicy<T,U>		bufferingPolicy;
1:7fa86e8: 	protected U						buffer;
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withBuffer(U queue) {
1:7fa86e8: 		this.buffer = queue;
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withQueuePolicy(
1:7fa86e8: 			QueuePolicy<T,U> queuePolicy) {
1:7fa86e8: 		this.bufferingPolicy = queuePolicy;
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withQueuePolicy(
1:7fa86e8: 			QueuePolicyOption queuePolicyOption) {
1:7fa86e8: 		this.bufferingPolicy = queuePolicyOption.getPolicy();
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withPushbackPolicy(
1:7fa86e8: 			PushbackPolicy<T,U> pushbackPolicy) {
1:7fa86e8: 		this.backPressure = pushbackPolicy;
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withPushbackPolicy(
1:7fa86e8: 			PushbackPolicyOption pushbackPolicyOption, long time) {
1:7fa86e8: 		this.backPressure = pushbackPolicyOption.getPolicy(time);
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withParallelism(int parallelism) {
1:7fa86e8: 		this.concurrency = parallelism;
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: 
1:7fa86e8: 	@Override
1:7fa86e8: 	public BufferBuilder<R,T,U> withExecutor(Executor executor) {
1:7fa86e8: 		this.worker = executor;
1:7fa86e8: 		return this;
1:7fa86e8: 	}
1:7fa86e8: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:7fa86e8
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.osgi.util.pushstream;
1: 
1: import java.util.concurrent.BlockingQueue;
1: import java.util.concurrent.Executor;
1: 
1: abstract class AbstractBufferBuilder<R, T, U extends BlockingQueue<PushEvent< ? extends T>>>
1: 		implements BufferBuilder<R,T,U> {
1: 
1: 	protected Executor				worker;
1: 	protected int					concurrency;
1: 	protected PushbackPolicy<T,U>	backPressure;
1: 	protected QueuePolicy<T,U>		bufferingPolicy;
1: 	protected U						buffer;
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withBuffer(U queue) {
1: 		this.buffer = queue;
1: 		return this;
1: 	}
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withQueuePolicy(
1: 			QueuePolicy<T,U> queuePolicy) {
1: 		this.bufferingPolicy = queuePolicy;
1: 		return this;
1: 	}
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withQueuePolicy(
1: 			QueuePolicyOption queuePolicyOption) {
1: 		this.bufferingPolicy = queuePolicyOption.getPolicy();
1: 		return this;
1: 	}
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withPushbackPolicy(
1: 			PushbackPolicy<T,U> pushbackPolicy) {
1: 		this.backPressure = pushbackPolicy;
1: 		return this;
1: 	}
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withPushbackPolicy(
1: 			PushbackPolicyOption pushbackPolicyOption, long time) {
1: 		this.backPressure = pushbackPolicyOption.getPolicy(time);
1: 		return this;
1: 	}
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withParallelism(int parallelism) {
1: 		this.concurrency = parallelism;
1: 		return this;
1: 	}
1: 
1: 	@Override
1: 	public BufferBuilder<R,T,U> withExecutor(Executor executor) {
1: 		this.worker = executor;
1: 		return this;
1: 	}
1: }
============================================================================