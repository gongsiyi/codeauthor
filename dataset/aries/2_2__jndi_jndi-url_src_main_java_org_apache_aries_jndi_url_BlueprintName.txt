1:29c4662: /*
1:29c4662:  * Licensed to the Apache Software Foundation (ASF) under one
1:29c4662:  * or more contributor license agreements.  See the NOTICE file
1:29c4662:  * distributed with this work for additional information
1:29c4662:  * regarding copyright ownership.  The ASF licenses this file
1:29c4662:  * to you under the Apache License, Version 2.0 (the
1:29c4662:  * "License"); you may not use this file except in compliance
1:29c4662:  * with the License.  You may obtain a copy of the License at
1:29c4662:  *
1:29c4662:  *   http://www.apache.org/licenses/LICENSE-2.0
1:29c4662:  *
1:29c4662:  * Unless required by applicable law or agreed to in writing,
1:29c4662:  * software distributed under the License is distributed on an
1:29c4662:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:29c4662:  * KIND, either express or implied.  See the License for the
1:29c4662:  * specific language governing permissions and limitations
1:29c4662:  * under the License.
1:29c4662:  */
1:29c4662: 
1:29c4662: package org.apache.aries.jndi.url;
1:29c4662: 
1:29c4662: import javax.naming.InvalidNameException;
1:29c4662: import javax.naming.Name;
1:29c4662: 
1:29c4662: public class BlueprintName extends AbstractName 
1:29c4662: {
1:29c4662:   /**
1:29c4662:    * 
1:29c4662:    */
1:29c4662:   private static final long serialVersionUID = 7460901600614300179L;
1:29c4662: 
1:29c4662:   public BlueprintName(String name) throws InvalidNameException
1:29c4662:   {
1:08490c1:     super(name);
1:29c4662:   }
1:29c4662: 
1:29c4662:   public BlueprintName(Name name) throws InvalidNameException
1:29c4662:   {
1:29c4662:     this(name.toString());
1:29c4662:   }
1:29c4662: 
1:29c4662:   public String getComponentId()
1:29c4662:   {
1:29c4662:     return get(1);
1:29c4662:   }
1:29c4662:   
1:29c4662:   public boolean hasComponent() { 
1:29c4662:     return size() > 1;
1:29c4662:   }
1:29c4662: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:08490c1
/////////////////////////////////////////////////////////////////////////
1:     super(name);
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:29c4662
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.jndi.url;
1: 
1: import javax.naming.InvalidNameException;
1: import javax.naming.Name;
1: 
1: public class BlueprintName extends AbstractName 
1: {
1:   /**
1:    * 
1:    */
1:   private static final long serialVersionUID = 7460901600614300179L;
1: 
1:   public BlueprintName(String name) throws InvalidNameException
1:   {
0:     super(split(name));
1:   }
1: 
1:   public BlueprintName(Name name) throws InvalidNameException
1:   {
1:     this(name.toString());
1:   }
1: 
1:   public String getComponentId()
1:   {
1:     return get(1);
1:   }
1:   
1:   public boolean hasComponent() { 
1:     return size() > 1;
1:   }
1: }
============================================================================