1:643420c: /*
1:643420c:  * Licensed to the Apache Software Foundation (ASF) under one
1:643420c:  * or more contributor license agreements.  See the NOTICE file
1:643420c:  * distributed with this work for additional information
1:643420c:  * regarding copyright ownership.  The ASF licenses this file
1:643420c:  * to you under the Apache License, Version 2.0 (the
1:643420c:  * "License"); you may not use this file except in compliance
1:643420c:  * with the License.  You may obtain a copy of the License at
1:643420c:  *
1:643420c:  *   http://www.apache.org/licenses/LICENSE-2.0
1:643420c:  *
1:643420c:  * Unless required by applicable law or agreed to in writing,
1:643420c:  * software distributed under the License is distributed on an
1:643420c:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:643420c:  * KIND, either express or implied.  See the License for the
1:643420c:  * specific language governing permissions and limitations
1:643420c:  * under the License.
3:643420c:  */
1:643420c: package org.apache.aries.subsystem.scope;
3:643420c: 
1:e9f9bca: import java.io.IOException;
1:643420c: import java.io.InputStream;
1:643420c: import java.net.URL;
1:643420c: 
3:643420c: /**
1:643420c:  * Information for installing a bundle into a {@link ScopeUpdate scope
1:643420c:  * update}.
1:643420c:  */
1:643420c: public class InstallInfo {
1:e9f9bca: 	private final InputStream content;
1:643420c: 	private final String location;
1:e9f9bca: 	
1:e9f9bca: 	/**
1:e9f9bca: 	 * Constructor for a bundle install info.
1:e9f9bca: 	 * @param content the content of the bundle.
1:e9f9bca: 	 * @param location the location of the bundle.
1:e9f9bca: 	 */
1:e9f9bca: 	public InstallInfo(String location, URL content) throws IOException {
1:e9f9bca: 		this(location == null ? content.toExternalForm() : location, content.openStream());
1:e9f9bca: 	}
1:e9f9bca: 	
1:e9f9bca: 	   /**
1:e9f9bca:      * Constructor for a bundle install info.
1:e9f9bca:      * @param content the content of the bundle.
1:e9f9bca:      * @param location the location of the bundle.
1:e9f9bca:      */
1:e9f9bca:     public InstallInfo(String location, InputStream content) {
1:e9f9bca:     	if (location == null || location.length() == 0)
1:e9f9bca:     		throw new IllegalArgumentException("Missing required parameter: location");
1:e9f9bca:     	if (content == null)
1:e9f9bca:     		throw new NullPointerException("Missing required parameter: content");
1:e9f9bca:         this.location = location;
1:e9f9bca:         this.content = content;
1:e9f9bca:     }
1:643420c: 
1:643420c: 	/**
1:643420c: 	 * Returns a url to the content of the bundle to install.
1:643420c: 	 * @return a url to the content of the bundle to install.
1:643420c: 	 */
1:e9f9bca: 	public InputStream getContent() {
1:643420c: 		return content;
3:643420c: 	}
1:643420c: 
1:643420c: 	/**
1:643420c: 	 * Returns the location to use for bundle installation.
1:643420c: 	 * @return the location to use for bundle installation.
1:643420c: 	 */
1:643420c: 	public String getLocation() {
1:643420c: 		return location;
1:643420c: 	}
1:643420c: }
============================================================================
author:Graham Charters
-------------------------------------------------------------------------------
commit:e9f9bca
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
/////////////////////////////////////////////////////////////////////////
1: 	private final InputStream content;
1: 	
1: 	/**
1: 	 * Constructor for a bundle install info.
1: 	 * @param content the content of the bundle.
1: 	 * @param location the location of the bundle.
1: 	 */
1: 	public InstallInfo(String location, URL content) throws IOException {
1: 		this(location == null ? content.toExternalForm() : location, content.openStream());
1: 	}
1: 	
1: 	   /**
1:      * Constructor for a bundle install info.
1:      * @param content the content of the bundle.
1:      * @param location the location of the bundle.
1:      */
1:     public InstallInfo(String location, InputStream content) {
1:     	if (location == null || location.length() == 0)
1:     		throw new IllegalArgumentException("Missing required parameter: location");
1:     	if (content == null)
1:     		throw new NullPointerException("Missing required parameter: content");
1:         this.location = location;
1:         this.content = content;
1:     }
1: 	public InputStream getContent() {
/////////////////////////////////////////////////////////////////////////
author:Lin Sun
-------------------------------------------------------------------------------
commit:643420c
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.subsystem.scope;
1: 
1: import java.io.InputStream;
1: import java.net.URL;
1: 
1: /**
1:  * Information for installing a bundle into a {@link ScopeUpdate scope
1:  * update}.
1:  */
1: public class InstallInfo {
0: 	private final URL content;
1: 	private final String location;
0: 	private final InputStream is;
1: 
1: 	/**
1: 	 * Returns a url to the content of the bundle to install.
1: 	 * @return a url to the content of the bundle to install.
1: 	 */
0: 	public URL getContent() {
1: 		return content;
1: 	}
1: 
1: 	/**
1: 	 * Returns the location to use for bundle installation.
1: 	 * @return the location to use for bundle installation.
1: 	 */
1: 	public String getLocation() {
1: 		return location;
1: 	}
1: 
1: 	/**
0: 	 * Constructor for a bundle install info.
0: 	 * @param content the content of the bundle.
0: 	 * @param location the location of the bundle.
1: 	 */
0: 	public InstallInfo(URL content, String location) {
0: 		this.content = content;
0: 		this.location = location;
0: 		this.is = null;
1: 	}
1: 	
1: 	   /**
0:      * Constructor for a bundle install info.
0:      * @param content the content of the bundle.
0:      * @param location the location of the bundle.
1:      */
0:     public InstallInfo(InputStream is, String location) {
0:         this.is = is;
0:         this.location = location;
0:         this.content = null;
1:     }
1: }
============================================================================