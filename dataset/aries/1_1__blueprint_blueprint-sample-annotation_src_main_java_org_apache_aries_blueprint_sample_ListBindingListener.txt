1:dd9325e: /**
1:dd9325e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:dd9325e:  *  contributor license agreements.  See the NOTICE file distributed with
1:dd9325e:  *  this work for additional information regarding copyright ownership.
1:dd9325e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:dd9325e:  *  (the "License"); you may not use this file except in compliance with
1:dd9325e:  *  the License.  You may obtain a copy of the License at
1:dd9325e:  *
1:dd9325e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dd9325e:  *
1:dd9325e:  *  Unless required by applicable law or agreed to in writing, software
1:dd9325e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:dd9325e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dd9325e:  *  See the License for the specific language governing permissions and
1:dd9325e:  *  limitations under the License.
1:dd9325e:  */
1:dd9325e: package org.apache.aries.blueprint.sample;
1:dd9325e: 
1:dd9325e: import java.util.List;
1:dd9325e: import java.util.Map;
1:dd9325e: 
1:dd9325e: import org.apache.aries.blueprint.annotation.Bean;
1:15ff7ec: import org.apache.aries.blueprint.annotation.Bind;
1:dd9325e: import org.apache.aries.blueprint.annotation.Init;
1:15ff7ec: import org.apache.aries.blueprint.annotation.Inject;
1:15ff7ec: import org.apache.aries.blueprint.annotation.ReferenceList;
1:15ff7ec: import org.apache.aries.blueprint.annotation.ReferenceListener;
1:15ff7ec: import org.apache.aries.blueprint.annotation.Unbind;
1:dd9325e: import org.osgi.framework.ServiceReference;
1:dd9325e: 
1:dd9325e: @Bean(id="listBindingListener")
1:15ff7ec: @ReferenceListener
1:dd9325e: public class ListBindingListener {
1:dd9325e: 
1:15ff7ec:     @Inject @ReferenceList (id="ref-list", 
1:15ff7ec:             serviceInterface = InterfaceA.class,
1:15ff7ec:             referenceListeners=@ReferenceListener(ref="listBindingListener"))
1:dd9325e:     private InterfaceA a;
1:dd9325e:     private Map props;
1:dd9325e:     private ServiceReference reference;
1:dd9325e:     private List list;
1:dd9325e: 
1:dd9325e:     public InterfaceA getA() {
1:dd9325e:         return a;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public Map getProps() {
1:dd9325e:         return props;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public ServiceReference getReference() {
1:dd9325e:         return reference;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public List getList() {
1:dd9325e:         return list;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public void setList(List list) {
1:dd9325e:         this.list = list;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     @Init
1:dd9325e:     public void init() {
1:dd9325e:     }
1:dd9325e: 
1:15ff7ec:     @Bind
1:dd9325e:     public void bind(InterfaceA a, Map props) {
1:dd9325e:         this.a = a;
1:dd9325e:         this.props = props;
1:dd9325e:     }
1:dd9325e: 
1:15ff7ec:     @Bind
1:dd9325e:     public void bind(ServiceReference ref) {
1:dd9325e:         this.reference = ref;
1:dd9325e:     }
1:dd9325e: 
1:15ff7ec:     @Unbind
1:dd9325e:     public void unbind(InterfaceA a, Map props) {
1:dd9325e:         this.a = null;
1:dd9325e:         this.props = null;
1:dd9325e:     }
1:dd9325e: 
1:15ff7ec:     @Unbind
1:dd9325e:     public void unbind(ServiceReference ref) {
1:dd9325e:         this.reference = null;
1:dd9325e:     }
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:15ff7ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.annotation.Bind;
1: import org.apache.aries.blueprint.annotation.Inject;
1: import org.apache.aries.blueprint.annotation.ReferenceList;
1: import org.apache.aries.blueprint.annotation.ReferenceListener;
1: import org.apache.aries.blueprint.annotation.Unbind;
1: @ReferenceListener
1:     @Inject @ReferenceList (id="ref-list", 
1:             serviceInterface = InterfaceA.class,
1:             referenceListeners=@ReferenceListener(ref="listBindingListener"))
/////////////////////////////////////////////////////////////////////////
1:     @Bind
1:     @Bind
1:     @Unbind
1:     @Unbind
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.sample;
1: 
1: import java.util.List;
1: import java.util.Map;
1: 
1: import org.apache.aries.blueprint.annotation.Bean;
1: import org.apache.aries.blueprint.annotation.Init;
1: import org.osgi.framework.ServiceReference;
1: 
1: @Bean(id="listBindingListener")
1: public class ListBindingListener {
1: 
1:     private InterfaceA a;
1:     private Map props;
1:     private ServiceReference reference;
1:     private List list;
1: 
1:     public InterfaceA getA() {
1:         return a;
1:     }
1: 
1:     public Map getProps() {
1:         return props;
1:     }
1: 
1:     public ServiceReference getReference() {
1:         return reference;
1:     }
1: 
1:     public List getList() {
1:         return list;
1:     }
1: 
1:     public void setList(List list) {
1:         this.list = list;
1:     }
1: 
1:     @Init
1:     public void init() {
1:     }
1: 
1:     public void bind(InterfaceA a, Map props) {
1:         this.a = a;
1:         this.props = props;
1:     }
1: 
1:     public void bind(ServiceReference ref) {
1:         this.reference = ref;
1:     }
1: 
1:     public void unbind(InterfaceA a, Map props) {
1:         this.a = null;
1:         this.props = null;
1:     }
1: 
1:     public void unbind(ServiceReference ref) {
1:         this.reference = null;
1:     }
1: }
============================================================================