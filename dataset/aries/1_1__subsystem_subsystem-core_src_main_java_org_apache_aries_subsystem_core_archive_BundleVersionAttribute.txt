1:47d9366: /*
1:47d9366:  * Licensed under the Apache License, Version 2.0 (the "License");
1:47d9366:  * you may not use this file except in compliance with the License.
1:47d9366:  * You may obtain a copy of the License at
1:47d9366:  *
1:47d9366:  *      http://www.apache.org/licenses/LICENSE-2.0
1:47d9366:  *
1:47d9366:  * Unless required by applicable law or agreed to in writing, software
1:47d9366:  * distributed under the License is distributed on an "AS IS" BASIS,
1:47d9366:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:47d9366:  * See the License for the specific language governing permissions and
1:47d9366:  * limitations under the License.
1:47d9366:  */
1:47d9366: package org.apache.aries.subsystem.core.archive;
1:47d9366: 
1:47d9366: import org.osgi.framework.Constants;
1:47d9366: import org.osgi.framework.Version;
1:47d9366: import org.osgi.framework.VersionRange;
1:47d9366: 
1:47d9366: public class BundleVersionAttribute extends AbstractAttribute {
1:47d9366: 	public static final String NAME = Constants.BUNDLE_VERSION_ATTRIBUTE;
1:47d9366: 	
1:47d9366: 	private final VersionRange range;
1:47d9366: 	
1:47d9366: 	public BundleVersionAttribute() {
1:47d9366: 		this(Version.emptyVersion.toString());
1:47d9366: 	}
1:47d9366: 			
1:47d9366: 	public BundleVersionAttribute(String value) {
1:47d9366: 		this(new VersionRange(value));
1:47d9366: 	}
1:47d9366: 	
1:47d9366: 	public BundleVersionAttribute(VersionRange range) {
1:47d9366: 		super(NAME, range.toString());
1:47d9366: 		this.range = range;
1:47d9366: 	}
1:47d9366: 	
1:47d9366: 	public StringBuilder appendToFilter(StringBuilder builder) {
1:47d9366: 		return builder.append(range.toFilterString(NAME));
1:47d9366: 	}
1:47d9366: 
1:47d9366: 	public VersionRange getVersionRange() {
1:47d9366: 		return range;
1:47d9366: 	}
1:c5864b3: 	
1:c5864b3: 	@Override
1:c5864b3: 	public Object getValue() {
1:c5864b3: 		return new StringBuilder().append('"').append(range.toString()).append('"').toString();
1:c5864b3: 	}
1:47d9366: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:c5864b3
/////////////////////////////////////////////////////////////////////////
1: 	
1: 	@Override
1: 	public Object getValue() {
1: 		return new StringBuilder().append('"').append(range.toString()).append('"').toString();
1: 	}
commit:47d9366
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.core.archive;
1: 
1: import org.osgi.framework.Constants;
1: import org.osgi.framework.Version;
1: import org.osgi.framework.VersionRange;
1: 
1: public class BundleVersionAttribute extends AbstractAttribute {
1: 	public static final String NAME = Constants.BUNDLE_VERSION_ATTRIBUTE;
1: 	
1: 	private final VersionRange range;
1: 	
1: 	public BundleVersionAttribute() {
1: 		this(Version.emptyVersion.toString());
1: 	}
1: 			
1: 	public BundleVersionAttribute(String value) {
1: 		this(new VersionRange(value));
1: 	}
1: 	
1: 	public BundleVersionAttribute(VersionRange range) {
1: 		super(NAME, range.toString());
1: 		this.range = range;
1: 	}
1: 	
1: 	public StringBuilder appendToFilter(StringBuilder builder) {
1: 		return builder.append(range.toFilterString(NAME));
1: 	}
1: 
1: 	public VersionRange getVersionRange() {
1: 		return range;
1: 	}
1: }
============================================================================