1:a990e32: /*
1:a990e32:  * Licensed under the Apache License, Version 2.0 (the "License");
1:a990e32:  * you may not use this file except in compliance with the License.
1:a990e32:  * You may obtain a copy of the License at
1:a990e32:  *
1:a990e32:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a990e32:  *
1:a990e32:  * Unless required by applicable law or agreed to in writing, software
1:a990e32:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a990e32:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a990e32:  * See the License for the specific language governing permissions and
1:a990e32:  * limitations under the License.
1:a990e32:  */
1:a990e32: package org.apache.aries.subsystem.core.archive;
1:a990e32: 
1:a990e32: /**
1:a990e32:  * Aries specific implementation directive that can be added to the
1:a990e32:  * SubsystemSymbolicName header to defer provision of dependencies to start time
1:a990e32:  * (refer to jira aries-1383 for fuller description of this behavior).
1:a990e32:  * <p>
1:a990e32:  * The legal values for the directives are "start" and "install". The default is
1:a990e32:  * install.
1:a990e32:  * <p>
1:a990e32:  * There are exactly two instances of this type constructed. Statically
1:a990e32:  * references are
1:a990e32:  * {@code AriesProvisionDependenciesDirective.PROVISION_DEPENDENCIES_AT_INSTALL}
1:a990e32:  * or
1:a990e32:  * {@code AriesProvisionDependenciesDirective.PROVISION_DEPENDENCIES_AT_START}.
1:a990e32:  */
1:a990e32: public class AriesProvisionDependenciesDirective extends AbstractDirective {
1:a990e32:     public static final String NAME = "apache-aries-provision-dependencies";
1:a990e32:     
1:a990e32:     public static final String VALUE_INSTALL = "install";
1:a990e32:     public static final String VALUE_RESOLVE = "resolve";
1:a990e32: 
1:a990e32:     public static final AriesProvisionDependenciesDirective INSTALL = new AriesProvisionDependenciesDirective(VALUE_INSTALL);
1:a990e32:     public static final AriesProvisionDependenciesDirective RESOLVE = new AriesProvisionDependenciesDirective(VALUE_RESOLVE);
1:a990e32: 
1:a990e32:     public static final AriesProvisionDependenciesDirective DEFAULT = INSTALL;
1:a990e32: 
1:a990e32:     public static AriesProvisionDependenciesDirective getInstance(String value) {
1:a990e32:         if (VALUE_INSTALL.equals(value))
1:a990e32:             return INSTALL;
1:a990e32:         if (VALUE_RESOLVE.equals(value))
1:a990e32:             return RESOLVE;
1:a990e32:         throw new IllegalArgumentException(value);
1:a990e32:     }
1:a990e32: 
1:a990e32:     private AriesProvisionDependenciesDirective(String value) {
1:a990e32:         super(NAME, value);
1:a990e32:     }
1:a990e32: 
1:a990e32:     public String getProvisionDependencies() {
1:a990e32:         return getValue();
1:a990e32:     }
1:a990e32: 
1:a990e32:     public boolean isInstall() {
1:a990e32:         return this == INSTALL;
1:a990e32:     }
1:a990e32: 
1:a990e32:     public boolean isResolve() {
1:a990e32:         return this == RESOLVE;
1:a990e32:     }
1:a990e32: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:a990e32
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.subsystem.core.archive;
1: 
1: /**
1:  * Aries specific implementation directive that can be added to the
1:  * SubsystemSymbolicName header to defer provision of dependencies to start time
1:  * (refer to jira aries-1383 for fuller description of this behavior).
1:  * <p>
1:  * The legal values for the directives are "start" and "install". The default is
1:  * install.
1:  * <p>
1:  * There are exactly two instances of this type constructed. Statically
1:  * references are
1:  * {@code AriesProvisionDependenciesDirective.PROVISION_DEPENDENCIES_AT_INSTALL}
1:  * or
1:  * {@code AriesProvisionDependenciesDirective.PROVISION_DEPENDENCIES_AT_START}.
1:  */
1: public class AriesProvisionDependenciesDirective extends AbstractDirective {
1:     public static final String NAME = "apache-aries-provision-dependencies";
1:     
1:     public static final String VALUE_INSTALL = "install";
1:     public static final String VALUE_RESOLVE = "resolve";
1: 
1:     public static final AriesProvisionDependenciesDirective INSTALL = new AriesProvisionDependenciesDirective(VALUE_INSTALL);
1:     public static final AriesProvisionDependenciesDirective RESOLVE = new AriesProvisionDependenciesDirective(VALUE_RESOLVE);
1: 
1:     public static final AriesProvisionDependenciesDirective DEFAULT = INSTALL;
1: 
1:     public static AriesProvisionDependenciesDirective getInstance(String value) {
1:         if (VALUE_INSTALL.equals(value))
1:             return INSTALL;
1:         if (VALUE_RESOLVE.equals(value))
1:             return RESOLVE;
1:         throw new IllegalArgumentException(value);
1:     }
1: 
1:     private AriesProvisionDependenciesDirective(String value) {
1:         super(NAME, value);
1:     }
1: 
1:     public String getProvisionDependencies() {
1:         return getValue();
1:     }
1: 
1:     public boolean isInstall() {
1:         return this == INSTALL;
1:     }
1: 
1:     public boolean isResolve() {
1:         return this == RESOLVE;
1:     }
1: }
============================================================================