1:6e2d69a: /**
1:6e2d69a:  * Licensed to the Apache Software Foundation (ASF) under one
1:6e2d69a:  * or more contributor license agreements.  See the NOTICE file
1:6e2d69a:  * distributed with this work for additional information
1:6e2d69a:  * regarding copyright ownership.  The ASF licenses this file
1:6e2d69a:  * to you under the Apache License, Version 2.0 (the
1:6e2d69a:  * "License"); you may not use this file except in compliance
1:6e2d69a:  * with the License.  You may obtain a copy of the License at
1:6e2d69a:  *
1:6e2d69a:  *   http://www.apache.org/licenses/LICENSE-2.0
1:6e2d69a:  *
1:6e2d69a:  * Unless required by applicable law or agreed to in writing,
1:6e2d69a:  * software distributed under the License is distributed on an
1:6e2d69a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6e2d69a:  * KIND, either express or implied.  See the License for the
1:6e2d69a:  * specific language governing permissions and limitations
1:6e2d69a:  * under the License.
1:6e2d69a:  */
1:6e2d69a: package org.apache.aries.samples.bank.web;
1:6e2d69a: 
1:6e2d69a: import java.io.IOException;
1:6e2d69a: import java.io.Writer;
1:6e2d69a: 
1:6e2d69a: import javax.naming.InitialContext;
1:6e2d69a: import javax.naming.NamingException;
1:6e2d69a: import javax.servlet.ServletException;
1:6e2d69a: import javax.servlet.http.HttpServlet;
1:6e2d69a: import javax.servlet.http.HttpServletRequest;
1:6e2d69a: import javax.servlet.http.HttpServletResponse;
1:6e2d69a: 
1:6e2d69a: import org.apache.aries.samples.bank.api.AccountServicesToOutsideWorld;
1:6e2d69a: 
1:6e2d69a: /**
1:6e2d69a:  * Servlet implementation class ViewAccount
1:6e2d69a:  */
1:6e2d69a: public class ViewAccount extends HttpServlet {
1:6e2d69a:   private static final long serialVersionUID = 1L;
1:6e2d69a: 
1:6e2d69a:   protected void doGet(HttpServletRequest request, HttpServletResponse response)
1:6e2d69a:       throws ServletException, IOException {
1:6e2d69a:     process(request, response);
1:6e2d69a:   }
1:6e2d69a: 
1:6e2d69a:   /**
1:6e2d69a:    * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
1:6e2d69a:    *      response)
1:6e2d69a:    */
1:6e2d69a:   protected void doPost(HttpServletRequest request, HttpServletResponse response)
1:6e2d69a:       throws ServletException, IOException {
1:6e2d69a:     process(request, response);
1:6e2d69a:   }
1:6e2d69a: 
1:6e2d69a:   private void process(HttpServletRequest request, HttpServletResponse response)
1:6e2d69a:       throws ServletException, IOException {
1:6e2d69a:     int accountNumber = Integer.parseInt(request.getParameter("accountNumber"));
1:6e2d69a:     Writer writer = response.getWriter();
1:6e2d69a:     writer.write("<html><head></head><body>");
1:6e2d69a: 
1:6e2d69a:     AccountServicesToOutsideWorld accAccess;
1:6e2d69a:     try {
1:6e2d69a:       InitialContext ic = new InitialContext();
1:6e2d69a:       accAccess = (AccountServicesToOutsideWorld) ic.lookup("osgi:service/"
1:6e2d69a:           + AccountServicesToOutsideWorld.class.getName());
1:6e2d69a:     } catch (NamingException nx) {
1:6e2d69a:       throw new ServletException(nx);
1:6e2d69a:     }
1:6e2d69a: 
1:6e2d69a:     if (accAccess != null) {
1:6e2d69a:       String operation = request.getParameter("operation");
1:6e2d69a:       if (operation != null) {
1:6e2d69a:         int amount = Integer.parseInt(request.getParameter("amount"));
1:6e2d69a:         if (operation.equals("deposit")) {
1:6e2d69a:           accAccess.deposit(accountNumber, amount);
1:6e2d69a:         } else if (operation.equals("withdraw")) {
1:6e2d69a:           accAccess.withdraw(accountNumber, amount);
1:6e2d69a:         } else {
1:6e2d69a:           System.out.println("Unknown operation " + operation
1:6e2d69a:               + " in ViewAccount");
1:6e2d69a:         }
1:6e2d69a:       }
1:6e2d69a: 
1:6e2d69a:       String name = accAccess.name(accountNumber);
1:6e2d69a:       int balance = accAccess.balance(accountNumber);
1:6e2d69a:       writer.write("<br/>Account " + accountNumber + " name `"
1:6e2d69a:           + name + "` balance: " + balance);
1:6e2d69a:       
1:6e2d69a:       // Deposit or withdraw
1:6e2d69a:       writer.write("<form action=\"ViewAccount\" method=\"POST\">");
1:6e2d69a:       writer.write("<input type=\"hidden\" name=\"accountNumber\" value=\""
1:6e2d69a:           + accountNumber + "\"/>");
1:6e2d69a:       writer.write("<select name=\"operation\"><option value=\"deposit\">deposit</option>");
1:6e2d69a:       writer.write("<option value=\"withdraw\">withdraw</option></select>");
1:6e2d69a:       writer.write("<input name=\"amount\" type=\"text\"/>");
1:6e2d69a:       writer.write("<input type=\"submit\" value=\"submit request\" /></form>");
1:6e2d69a: 
1:6e2d69a:       //TODO: transfer
1:6e2d69a:       writer.write("<br/>TODO: Form to make a transfer goes here<br/>");
1:6e2d69a:       writer.write("<a href=\"index.html\">back to main menu</a>");
1:6e2d69a:     } else {
1:6e2d69a:       writer.write("<br/>ERROR: Unable to find AccountAccessService");
1:6e2d69a:     }
1:6e2d69a:    
1:6e2d69a:     writer.write("</body></html>");
1:6e2d69a:     writer.close();
1:6e2d69a:   }
1:6e2d69a: }
============================================================================
author:Jeremy Hughes
-------------------------------------------------------------------------------
commit:a220afc
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:6e2d69a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.bank.web;
1: 
1: import java.io.IOException;
1: import java.io.Writer;
1: 
1: import javax.naming.InitialContext;
1: import javax.naming.NamingException;
1: import javax.servlet.ServletException;
1: import javax.servlet.http.HttpServlet;
1: import javax.servlet.http.HttpServletRequest;
1: import javax.servlet.http.HttpServletResponse;
1: 
1: import org.apache.aries.samples.bank.api.AccountServicesToOutsideWorld;
1: 
1: /**
1:  * Servlet implementation class ViewAccount
1:  */
1: public class ViewAccount extends HttpServlet {
1:   private static final long serialVersionUID = 1L;
1: 
1:   protected void doGet(HttpServletRequest request, HttpServletResponse response)
1:       throws ServletException, IOException {
1:     process(request, response);
1:   }
1: 
1:   /**
1:    * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
1:    *      response)
1:    */
1:   protected void doPost(HttpServletRequest request, HttpServletResponse response)
1:       throws ServletException, IOException {
1:     process(request, response);
1:   }
1: 
1:   private void process(HttpServletRequest request, HttpServletResponse response)
1:       throws ServletException, IOException {
1:     int accountNumber = Integer.parseInt(request.getParameter("accountNumber"));
1:     Writer writer = response.getWriter();
1:     writer.write("<html><head></head><body>");
1: 
1:     AccountServicesToOutsideWorld accAccess;
1:     try {
1:       InitialContext ic = new InitialContext();
1:       accAccess = (AccountServicesToOutsideWorld) ic.lookup("osgi:service/"
1:           + AccountServicesToOutsideWorld.class.getName());
1:     } catch (NamingException nx) {
1:       throw new ServletException(nx);
1:     }
1: 
1:     if (accAccess != null) {
1:       String operation = request.getParameter("operation");
1:       if (operation != null) {
1:         int amount = Integer.parseInt(request.getParameter("amount"));
1:         if (operation.equals("deposit")) {
1:           accAccess.deposit(accountNumber, amount);
1:         } else if (operation.equals("withdraw")) {
1:           accAccess.withdraw(accountNumber, amount);
1:         } else {
1:           System.out.println("Unknown operation " + operation
1:               + " in ViewAccount");
1:         }
1:       }
1: 
1:       String name = accAccess.name(accountNumber);
1:       int balance = accAccess.balance(accountNumber);
1:       writer.write("<br/>Account " + accountNumber + " name `"
1:           + name + "` balance: " + balance);
1:       
1:       // Deposit or withdraw
1:       writer.write("<form action=\"ViewAccount\" method=\"POST\">");
1:       writer.write("<input type=\"hidden\" name=\"accountNumber\" value=\""
1:           + accountNumber + "\"/>");
1:       writer.write("<select name=\"operation\"><option value=\"deposit\">deposit</option>");
1:       writer.write("<option value=\"withdraw\">withdraw</option></select>");
1:       writer.write("<input name=\"amount\" type=\"text\"/>");
1:       writer.write("<input type=\"submit\" value=\"submit request\" /></form>");
1: 
1:       //TODO: transfer
1:       writer.write("<br/>TODO: Form to make a transfer goes here<br/>");
1:       writer.write("<a href=\"index.html\">back to main menu</a>");
1:     } else {
1:       writer.write("<br/>ERROR: Unable to find AccountAccessService");
1:     }
1:    
1:     writer.write("</body></html>");
1:     writer.close();
1:   }
1: }
============================================================================