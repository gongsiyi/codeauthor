1:a8ccbc9: /**
1:a8ccbc9:  * Licensed to the Apache Software Foundation (ASF) under one
1:a8ccbc9:  * or more contributor license agreements.  See the NOTICE file
1:a8ccbc9:  * distributed with this work for additional information
1:a8ccbc9:  * regarding copyright ownership.  The ASF licenses this file
1:a8ccbc9:  * to you under the Apache License, Version 2.0 (the
1:a8ccbc9:  * "License"); you may not use this file except in compliance
1:a8ccbc9:  * with the License.  You may obtain a copy of the License at
1:a8ccbc9:  *
1:a8ccbc9:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a8ccbc9:  *
1:a8ccbc9:  * Unless required by applicable law or agreed to in writing,
1:a8ccbc9:  * software distributed under the License is distributed on an
1:a8ccbc9:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:a8ccbc9:  * KIND, either express or implied.  See the License for the
1:a8ccbc9:  * specific language governing permissions and limitations
1:a8ccbc9:  * under the License.
1:a8ccbc9:  */
1:a8ccbc9: package org.apache.aries.spifly;
2:a8ccbc9: 
1:a8ccbc9: import org.osgi.framework.Bundle;
1:a8ccbc9: import org.osgi.framework.BundleEvent;
1:a8ccbc9: import org.osgi.util.tracker.BundleTrackerCustomizer;
1:a8ccbc9: 
1:a8ccbc9: public class ConsumerBundleTrackerCustomizer implements BundleTrackerCustomizer {
1:a8ccbc9:     private final BaseActivator activator;
1:a8ccbc9:     private final String headerName;
1:a166d95: 
1:a8ccbc9:     public ConsumerBundleTrackerCustomizer(BaseActivator baseActivator, String consumerHeaderName) {
1:a8ccbc9:         activator = baseActivator;
1:a8ccbc9:         headerName = consumerHeaderName;
1:a8ccbc9:     }
1:a8ccbc9: 
1:a8ccbc9:     @Override
1:a8ccbc9:     public Object addingBundle(Bundle bundle, BundleEvent event) {
1:a166d95:         try {
1:a166d95:             activator.addConsumerWeavingData(bundle, headerName);
1:a166d95:         } catch (Exception e) {
1:a166d95:             throw new RuntimeException(e);
1:a166d95:         }
1:a8ccbc9:         return bundle;
1:a8ccbc9:     }
1:a8ccbc9: 
1:a8ccbc9:     @Override
1:a8ccbc9:     public void modifiedBundle(Bundle bundle, BundleEvent event, Object object) {
1:a8ccbc9:         removedBundle(bundle, event, object);
1:a8ccbc9:         addingBundle(bundle, event);
1:a8ccbc9:     }
1:a8ccbc9: 
1:a8ccbc9:     @Override
1:a8ccbc9:     public void removedBundle(Bundle bundle, BundleEvent event, Object object) {
1:a8ccbc9:         activator.removeWeavingData(bundle);
1:a8ccbc9:     }
1:a8ccbc9: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:a166d95
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:         try {
1:             activator.addConsumerWeavingData(bundle, headerName);
1:         } catch (Exception e) {
1:             throw new RuntimeException(e);
1:         }
commit:f886534
/////////////////////////////////////////////////////////////////////////
0:         activator.addConsumerWeavingData(bundle, headerName);                    
commit:a8ccbc9
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.spifly;
1: 
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.BundleEvent;
1: import org.osgi.util.tracker.BundleTrackerCustomizer;
1: 
1: public class ConsumerBundleTrackerCustomizer implements BundleTrackerCustomizer {
1:     private final BaseActivator activator;
1:     private final String headerName;
1:     
1:     public ConsumerBundleTrackerCustomizer(BaseActivator baseActivator, String consumerHeaderName) {
1:         activator = baseActivator;
1:         headerName = consumerHeaderName;
1:     }
1: 
1:     @Override
1:     public Object addingBundle(Bundle bundle, BundleEvent event) {
0:         activator.addWeavingData(bundle, headerName);                    
1:         return bundle;
1:     }
1: 
1:     @Override
1:     public void modifiedBundle(Bundle bundle, BundleEvent event, Object object) {
1:         removedBundle(bundle, event, object);
1:         addingBundle(bundle, event);
1:     }
1: 
1:     @Override
1:     public void removedBundle(Bundle bundle, BundleEvent event, Object object) {
1:         activator.removeWeavingData(bundle);
1:     }
1: }
============================================================================