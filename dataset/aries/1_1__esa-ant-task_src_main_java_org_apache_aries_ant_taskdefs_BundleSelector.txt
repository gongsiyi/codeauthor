1:02735d7: /**
1:02735d7:  * Licensed to the Apache Software Foundation (ASF) under one
1:02735d7:  * or more contributor license agreements.  See the NOTICE file
1:02735d7:  * distributed with this work for additional information
1:02735d7:  * regarding copyright ownership.  The ASF licenses this file
1:02735d7:  * to you under the Apache License, Version 2.0 (the
1:02735d7:  * "License"); you may not use this file except in compliance
1:02735d7:  * with the License.  You may obtain a copy of the License at
1:02735d7:  *
1:02735d7:  *  http://www.apache.org/licenses/LICENSE-2.0
1:02735d7:  *
1:02735d7:  * Unless required by applicable law or agreed to in writing,
1:02735d7:  * software distributed under the License is distributed on an
1:02735d7:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:02735d7:  * KIND, either express or implied.  See the License for the
1:02735d7:  * specific language governing permissions and limitations
1:02735d7:  * under the License.
1:02735d7:  */
1:02735d7: 
1:02735d7: package org.apache.aries.ant.taskdefs;
1:02735d7: 
1:02735d7: import java.io.File;
1:02735d7: import java.util.jar.JarFile;
1:02735d7: import java.util.jar.Manifest;
1:02735d7: 
1:02735d7: import org.apache.tools.ant.BuildException;
1:02735d7: import org.apache.tools.ant.types.selectors.FileSelector;
1:02735d7: 
1:02735d7: /**
1:02735d7:  * A simple Ant {@link FileSelector} that can be used to filter out valid OSGi
1:02735d7:  * bundles
1:02735d7:  * 
1:02735d7:  * @version $Id: $
1:02735d7:  */
1:02735d7: public class BundleSelector implements FileSelector {
1:02735d7: 
1:02735d7: 	@Override
1:02735d7: 	public boolean isSelected(File basedir, String filename, File file)
1:02735d7: 		throws BuildException {
1:02735d7: 
1:02735d7: 		boolean isValid = false;
1:02735d7: 
1:02735d7: 		if (file.isFile()) {
1:02735d7: 
1:02735d7: 			isValid =
1:02735d7: 				(filename.toLowerCase().endsWith(".esa") || filename.toLowerCase().endsWith(".jar") );
1:02735d7: 
1:02735d7: 			JarFile osgiBundle = null;
1:02735d7: 
1:02735d7: 			try {
1:02735d7: 
1:02735d7: 				osgiBundle = new JarFile(new File(basedir, filename));
1:02735d7: 
1:02735d7: 				if(osgiBundle!=null){
1:02735d7: 					Manifest manifest = osgiBundle.getManifest();
1:02735d7: 					isValid = isValid && manifest != null;
1:02735d7: 				}
1:02735d7: 				
1:02735d7: 
1:02735d7: 			}
1:02735d7: 			catch (Exception e) {
1:02735d7: 				// nothing to do
1:02735d7: 				isValid = isValid && false;
1:02735d7: 			}
1:02735d7: 			finally {
1:02735d7: 				try {
1:02735d7: 					
1:02735d7: 					if(osgiBundle!=null){
1:02735d7: 						osgiBundle.close();
1:02735d7: 					}
1:02735d7: 				}
1:02735d7: 				catch (Exception e) {
1:02735d7: 					// nothing to do
1:02735d7: 				}
1:02735d7: 			}
1:02735d7: 		}
1:02735d7: 
1:02735d7: 		return isValid;
1:02735d7: 	}
1:02735d7: 
1:02735d7: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:02735d7
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *  http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.ant.taskdefs;
1: 
1: import java.io.File;
1: import java.util.jar.JarFile;
1: import java.util.jar.Manifest;
1: 
1: import org.apache.tools.ant.BuildException;
1: import org.apache.tools.ant.types.selectors.FileSelector;
1: 
1: /**
1:  * A simple Ant {@link FileSelector} that can be used to filter out valid OSGi
1:  * bundles
1:  * 
1:  * @version $Id: $
1:  */
1: public class BundleSelector implements FileSelector {
1: 
1: 	@Override
1: 	public boolean isSelected(File basedir, String filename, File file)
1: 		throws BuildException {
1: 
1: 		boolean isValid = false;
1: 
1: 		if (file.isFile()) {
1: 
1: 			isValid =
1: 				(filename.toLowerCase().endsWith(".esa") || filename.toLowerCase().endsWith(".jar") );
1: 
1: 			JarFile osgiBundle = null;
1: 
1: 			try {
1: 
1: 				osgiBundle = new JarFile(new File(basedir, filename));
1: 
1: 				if(osgiBundle!=null){
1: 					Manifest manifest = osgiBundle.getManifest();
1: 					isValid = isValid && manifest != null;
1: 				}
1: 				
1: 
1: 			}
1: 			catch (Exception e) {
1: 				// nothing to do
1: 				isValid = isValid && false;
1: 			}
1: 			finally {
1: 				try {
1: 					
1: 					if(osgiBundle!=null){
1: 						osgiBundle.close();
1: 					}
1: 				}
1: 				catch (Exception e) {
1: 					// nothing to do
1: 				}
1: 			}
1: 		}
1: 
1: 		return isValid;
1: 	}
1: 
1: }
============================================================================