1:fdf3952: /*
1:fdf3952:  * Licensed to the Apache Software Foundation (ASF) under one
1:fdf3952:  * or more contributor license agreements.  See the NOTICE file
1:fdf3952:  * distributed with this work for additional information
1:fdf3952:  * regarding copyright ownership.  The ASF licenses this file
1:fdf3952:  * to you under the Apache License, Version 2.0 (the
1:fdf3952:  * "License"); you may not use this file except in compliance
1:fdf3952:  * with the License.  You may obtain a copy of the License at
1:fdf3952:  *
1:fdf3952:  *  http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  * Unless required by applicable law or agreed to in writing,
1:fdf3952:  * software distributed under the License is distributed on an
1:fdf3952:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:fdf3952:  * KIND, either express or implied.  See the License for the
1:fdf3952:  * specific language governing permissions and limitations
1:fdf3952:  * under the License.
1:fdf3952:  */
1:fdf3952: 
1:fdf3952: package org.apache.aries.jmx.blueprint;
1:fdf3952: 
1:fdf3952: import java.io.IOException;
1:fdf3952: 
1:fdf3952: import javax.management.openmbean.CompositeData;
1:fdf3952: import javax.management.openmbean.CompositeType;
1:fdf3952: import javax.management.openmbean.SimpleType;
1:fdf3952: import javax.management.openmbean.TabularData;
1:fdf3952: import javax.management.openmbean.TabularType;
1:fdf3952: 
1:fdf3952: /**
1:fdf3952:  * This MBean provides the management interface to the OSGi Blueprint Service.
1:fdf3952:  *
1:fdf3952:  * This MBean also emits events that clients can use to get notified of the
1:fdf3952:  * changes in the blueprint containers state in the framework.
1:fdf3952:  * 
1:fdf3952:  * @version $Revision$
1:fdf3952:  */
1:fdf3952: public interface BlueprintStateMBean {
1:fdf3952:     /**
1:fdf3952:      * The object name for this MBean.
1:fdf3952:      */
1:fdf3952:     String OBJECTNAME = JmxConstants.ARIES_BLUEPRINT+":service=blueprintState,version=1.0";
1:fdf3952:     
1:fdf3952:     ///////////////////////////////////////////////////////////////
1:fdf3952:     // Define Event's CompositeType
1:fdf3952:     ///////////////////////////////////////////////////////////////
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The key BUNDLE_ID, used in {@link #BUNDLE_ID_ITEM}.
1:fdf3952:      */
1:fdf3952:     String          BUNDLE_ID                  = "BundleId";
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The item containing the Blueprint bundle id associated with this event.
1:fdf3952:      * The key is {@link #BUNDLE_ID}, and the type is {@link SimpleType#LONG}.
1:fdf3952:      */
1:fdf3952:     Item            BUNDLE_ID_ITEM             = new Item(
1:fdf3952:                                                     BUNDLE_ID,
1:fdf3952:                                                     "the Blueprint bundle id associated with this event.",
1:fdf3952:                                                     SimpleType.LONG);
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The key EXTENDER_BUNDLE_ID, used in {@link #EXTENDER_BUNDLE_ID_ITEM}.
1:fdf3952:      */
1:fdf3952:     String          EXTENDER_BUNDLE_ID   = "ExtenderBundleId";
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The item containing the Blueprint extender bundle id that is generating this event.
1:fdf3952:      * The key is {@link #EXTENDER_BUNDLE_ID}, and the type is {@link SimpleType#LONG}.
1:fdf3952:      */
1:fdf3952:     Item            EXTENDER_BUNDLE_ID_ITEM    = new Item(
1:fdf3952:                                                     EXTENDER_BUNDLE_ID,
1:fdf3952:                                                     "the Blueprint extender bundle id that is generating this event.",
1:fdf3952:                                                     SimpleType.LONG);
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * The key REPLAY, used in {@link #REPLAY_ITEM}.
1:fdf3952:      */ 
1:fdf3952:     String          REPLAY               = "Replay";
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The item containing the flag that represents whether this event is a replay event.
1:fdf3952:      * The key is {@link #REPLAY}, and the type is {@link SimpleType#BOOLEAN}.
1:fdf3952:      */
1:fdf3952:     Item            REPLAY_ITEM          = new Item(
1:fdf3952:                                                     REPLAY,
1:fdf3952:                                                     "the flag that represents whether this event is a replay event.",
1:fdf3952:                                                     SimpleType.BOOLEAN);
1:fdf3952:     
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The key EVENT_TYPE, used in {@link #EVENT_TYPE_ITEM}.
1:fdf3952:      */
1:fdf3952:     String          EVENT_TYPE                    = "EventType";
1:fdf3952:  
1:fdf3952:     /**
1:fdf3952:      * The item containing the type of this event.
1:fdf3952:      * The key is {@link #EVENT_TYPE}, and the type is {@link SimpleType#STRING}.
1:fdf3952:      */
1:fdf3952:     Item            EVENT_TYPE_ITEM              = new Item(
1:fdf3952:                                                     EVENT_TYPE,
1:fdf3952:                                                     "The type of the event: {CREATING=1, CREATED=2, DESTROYING=3, DESTROYED=4, FAILURE=5, GRACE_PERIOD=6, WAITING=7}",
1:fdf3952:                                                     SimpleType.INTEGER);
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The key TIMESTAMP, used in {@link #TIMESTAMP_ITEM}.
1:fdf3952:      */    
1:fdf3952:     String          TIMESTAMP               = "Timestamp";
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The item containing the time at which this event was created.
1:fdf3952:      * The key is {@link #TIMESTAMP}, and the type is {@link SimpleType#LONG}.
1:fdf3952:      */
1:fdf3952:     Item            TIMESTAMP_ITEM          = new Item(
1:fdf3952:                                                     TIMESTAMP,
1:fdf3952:                                                     "the time at which this event was created.",
1:fdf3952:                                                     SimpleType.LONG);
1:fdf3952: 
1:fdf3952: 
1:fdf3952:     /**
1:fdf3952:      * The key DEPENDENCIES, used in {@link #DEPENDENCIES_ITEM}.
1:fdf3952:      */
1:fdf3952:     String          DEPENDENCIES            = "Dependencies";
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The item containing the filters identifying the missing dependencies that caused the WAITING, GRACE_PERIOD or FAILURE event.
1:fdf3952:      * The key is {@link #DEPENDENCIES}, and the type is {@link JmxConstants#STRING_ARRAY_TYPE}.
1:fdf3952:      */
1:fdf3952:     Item            DEPENDENCIES_ITEM       = new Item(
1:fdf3952:                                                     DEPENDENCIES,
1:fdf3952:                                                     "the filters identifying the missing dependencies that caused the WAITING, GRACE_PERIOD or FAILURE event.",
1:fdf3952:                                                     JmxConstants.STRING_ARRAY_TYPE);
1:fdf3952:         
1:fdf3952:     /**
1:fdf3952:      * The key EXCEPTION_MESSAGE, used in {@link #ERROR_MESSAGE_ITEM}.
1:fdf3952:      */    
1:fdf3952:     String          EXCEPTION_MESSAGE       = "ExceptionMessage";
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The item containing the exception message that cause this FAILURE event.
1:fdf3952:      * The key is {@link #EXCEPTION_MESSAGE}, and the type is {@link SimpleType#STRING}.
1:fdf3952:      */
1:fdf3952:     Item            EXCEPTION_MESSAGE_ITEM  = new Item(
1:fdf3952:                                                     EXCEPTION_MESSAGE,
1:fdf3952:                                                     "the exception message that cause this FAILURE event.",
1:fdf3952:                                                     SimpleType.STRING);
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The CompositeType for a blueprint event. It contains the following items:
1:fdf3952:      * <ul>
1:fdf3952:      * <li>{@link #BUNDLE_ID}</li>
1:fdf3952:      * <li>{@link #EXTENDER_BUNDLE_ID}</li>
1:fdf3952:      * <li>{@link #EVENT_TYPE}</li>
1:fdf3952:      * <li>{@link #REPLAY}</li>
1:fdf3952:      * <li>{@link #TIMESTAMP}</li>
1:fdf3952:      * <li>{@link #DEPENDENCIES}</li>
1:fdf3952:      * <li>{@link #EXCEPTION_MESSAGE}</li>
1:fdf3952:      * </ul>
1:fdf3952:      */
1:fdf3952:     CompositeType   OSGI_BLUEPRINT_EVENT_TYPE   = Item.compositeType(
1:fdf3952:                                                     "OSGI_BLUEPRINT_EVENT", 
1:fdf3952:                                                     "Blueprint event", 
1:fdf3952:                                                     BUNDLE_ID_ITEM,
1:fdf3952:                                                     EXTENDER_BUNDLE_ID_ITEM,
1:fdf3952:                                                     EVENT_TYPE_ITEM,
1:fdf3952:                                                     REPLAY_ITEM,
1:fdf3952:                                                     TIMESTAMP_ITEM,
1:fdf3952:                                                     DEPENDENCIES_ITEM,
1:fdf3952:                                                     EXCEPTION_MESSAGE_ITEM);
1:fdf3952:     
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * The Tabular Type for A list of blueprint events. The row type is
1:fdf3952:      * {@link #OSGI_BLUEPRINT_EVENT_TYPE}.
1:fdf3952:      */
1:fdf3952:     TabularType     OSGI_BLUEPRINT_EVENTS_TYPE  = Item.tabularType(
1:fdf3952:                                                     "BUNDLES", 
1:fdf3952:                                                     "A list of blueprint events",
1:fdf3952:                                                     OSGI_BLUEPRINT_EVENT_TYPE, 
1:fdf3952:                                                     new String[] { BUNDLE_ID });
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * Returns the BlueprintEvent associated with this blueprint container.
1:fdf3952:      * The returned Composite Data is typed by {@link #OSGI_BLUEPRINT_EVENT_TYPE}.
1:fdf3952:      * 
1:fdf3952:      * @param bundleId The bundle id of a blueprint bundle
1:fdf3952:      * @return the last event associated with the blueprint bundle, see {@link #OSGI_BLUEPRINT_EVENT_TYPE} 
1:fdf3952:      * @throws IOException if the operation fails
1:fdf3952:      * @throws IllegalArgumentException if the bundle is not a blueprint bundle
1:fdf3952:      */
1:fdf3952:     public CompositeData getLastEvent(long bundleId) throws IOException;
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * Returns all the last events associated with the blueprint bundles.
1:fdf3952:      * 
1:fdf3952:      * @return the tabular representation of all the last events associated with the blueprint bundles see {@link #OSGI_BLUEPRINT_EVENTS_TYPE}
1:fdf3952:      * @throws IOException if the operation fails
1:fdf3952:      */ 
1:fdf3952:     public TabularData getLastEvents() throws IOException;
1:fdf3952:     
1:fdf3952:     /**
1:fdf3952:      * Returns all the blueprint bundles' IDs, which are either 
1:fdf3952:      * successfully created or not by current extender.
1:fdf3952:      * 
1:fdf3952:      * @return the list of all the blueprint bundles's IDs (either successfully created or not by current extender)
1:fdf3952:      * @throws IOException if the operation fails
1:fdf3952:      */
1:fdf3952:     public long[] getBlueprintBundleIds() throws IOException;
1:fdf3952:     
1:fdf3952: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *  http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: 
1: package org.apache.aries.jmx.blueprint;
1: 
1: import java.io.IOException;
1: 
1: import javax.management.openmbean.CompositeData;
1: import javax.management.openmbean.CompositeType;
1: import javax.management.openmbean.SimpleType;
1: import javax.management.openmbean.TabularData;
1: import javax.management.openmbean.TabularType;
1: 
1: /**
1:  * This MBean provides the management interface to the OSGi Blueprint Service.
1:  *
1:  * This MBean also emits events that clients can use to get notified of the
1:  * changes in the blueprint containers state in the framework.
1:  * 
1:  * @version $Revision$
1:  */
1: public interface BlueprintStateMBean {
1:     /**
1:      * The object name for this MBean.
1:      */
1:     String OBJECTNAME = JmxConstants.ARIES_BLUEPRINT+":service=blueprintState,version=1.0";
1:     
1:     ///////////////////////////////////////////////////////////////
1:     // Define Event's CompositeType
1:     ///////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * The key BUNDLE_ID, used in {@link #BUNDLE_ID_ITEM}.
1:      */
1:     String          BUNDLE_ID                  = "BundleId";
1:     
1:     /**
1:      * The item containing the Blueprint bundle id associated with this event.
1:      * The key is {@link #BUNDLE_ID}, and the type is {@link SimpleType#LONG}.
1:      */
1:     Item            BUNDLE_ID_ITEM             = new Item(
1:                                                     BUNDLE_ID,
1:                                                     "the Blueprint bundle id associated with this event.",
1:                                                     SimpleType.LONG);
1:     
1:     /**
1:      * The key EXTENDER_BUNDLE_ID, used in {@link #EXTENDER_BUNDLE_ID_ITEM}.
1:      */
1:     String          EXTENDER_BUNDLE_ID   = "ExtenderBundleId";
1:     
1:     /**
1:      * The item containing the Blueprint extender bundle id that is generating this event.
1:      * The key is {@link #EXTENDER_BUNDLE_ID}, and the type is {@link SimpleType#LONG}.
1:      */
1:     Item            EXTENDER_BUNDLE_ID_ITEM    = new Item(
1:                                                     EXTENDER_BUNDLE_ID,
1:                                                     "the Blueprint extender bundle id that is generating this event.",
1:                                                     SimpleType.LONG);
1: 
1:     /**
1:      * The key REPLAY, used in {@link #REPLAY_ITEM}.
1:      */ 
1:     String          REPLAY               = "Replay";
1:     
1:     /**
1:      * The item containing the flag that represents whether this event is a replay event.
1:      * The key is {@link #REPLAY}, and the type is {@link SimpleType#BOOLEAN}.
1:      */
1:     Item            REPLAY_ITEM          = new Item(
1:                                                     REPLAY,
1:                                                     "the flag that represents whether this event is a replay event.",
1:                                                     SimpleType.BOOLEAN);
1:     
1:     
1:     /**
1:      * The key EVENT_TYPE, used in {@link #EVENT_TYPE_ITEM}.
1:      */
1:     String          EVENT_TYPE                    = "EventType";
1:  
1:     /**
1:      * The item containing the type of this event.
1:      * The key is {@link #EVENT_TYPE}, and the type is {@link SimpleType#STRING}.
1:      */
1:     Item            EVENT_TYPE_ITEM              = new Item(
1:                                                     EVENT_TYPE,
1:                                                     "The type of the event: {CREATING=1, CREATED=2, DESTROYING=3, DESTROYED=4, FAILURE=5, GRACE_PERIOD=6, WAITING=7}",
1:                                                     SimpleType.INTEGER);
1:     
1:     /**
1:      * The key TIMESTAMP, used in {@link #TIMESTAMP_ITEM}.
1:      */    
1:     String          TIMESTAMP               = "Timestamp";
1:     
1:     /**
1:      * The item containing the time at which this event was created.
1:      * The key is {@link #TIMESTAMP}, and the type is {@link SimpleType#LONG}.
1:      */
1:     Item            TIMESTAMP_ITEM          = new Item(
1:                                                     TIMESTAMP,
1:                                                     "the time at which this event was created.",
1:                                                     SimpleType.LONG);
1: 
1: 
1:     /**
1:      * The key DEPENDENCIES, used in {@link #DEPENDENCIES_ITEM}.
1:      */
1:     String          DEPENDENCIES            = "Dependencies";
1:     
1:     /**
1:      * The item containing the filters identifying the missing dependencies that caused the WAITING, GRACE_PERIOD or FAILURE event.
1:      * The key is {@link #DEPENDENCIES}, and the type is {@link JmxConstants#STRING_ARRAY_TYPE}.
1:      */
1:     Item            DEPENDENCIES_ITEM       = new Item(
1:                                                     DEPENDENCIES,
1:                                                     "the filters identifying the missing dependencies that caused the WAITING, GRACE_PERIOD or FAILURE event.",
1:                                                     JmxConstants.STRING_ARRAY_TYPE);
1:         
1:     /**
1:      * The key EXCEPTION_MESSAGE, used in {@link #ERROR_MESSAGE_ITEM}.
1:      */    
1:     String          EXCEPTION_MESSAGE       = "ExceptionMessage";
1:     
1:     /**
1:      * The item containing the exception message that cause this FAILURE event.
1:      * The key is {@link #EXCEPTION_MESSAGE}, and the type is {@link SimpleType#STRING}.
1:      */
1:     Item            EXCEPTION_MESSAGE_ITEM  = new Item(
1:                                                     EXCEPTION_MESSAGE,
1:                                                     "the exception message that cause this FAILURE event.",
1:                                                     SimpleType.STRING);
1:     
1:     /**
1:      * The CompositeType for a blueprint event. It contains the following items:
1:      * <ul>
1:      * <li>{@link #BUNDLE_ID}</li>
1:      * <li>{@link #EXTENDER_BUNDLE_ID}</li>
1:      * <li>{@link #EVENT_TYPE}</li>
1:      * <li>{@link #REPLAY}</li>
1:      * <li>{@link #TIMESTAMP}</li>
1:      * <li>{@link #DEPENDENCIES}</li>
1:      * <li>{@link #EXCEPTION_MESSAGE}</li>
1:      * </ul>
1:      */
1:     CompositeType   OSGI_BLUEPRINT_EVENT_TYPE   = Item.compositeType(
1:                                                     "OSGI_BLUEPRINT_EVENT", 
1:                                                     "Blueprint event", 
1:                                                     BUNDLE_ID_ITEM,
1:                                                     EXTENDER_BUNDLE_ID_ITEM,
1:                                                     EVENT_TYPE_ITEM,
1:                                                     REPLAY_ITEM,
1:                                                     TIMESTAMP_ITEM,
1:                                                     DEPENDENCIES_ITEM,
1:                                                     EXCEPTION_MESSAGE_ITEM);
1:     
1:     
1:     /**
1:      * The Tabular Type for A list of blueprint events. The row type is
1:      * {@link #OSGI_BLUEPRINT_EVENT_TYPE}.
1:      */
1:     TabularType     OSGI_BLUEPRINT_EVENTS_TYPE  = Item.tabularType(
1:                                                     "BUNDLES", 
1:                                                     "A list of blueprint events",
1:                                                     OSGI_BLUEPRINT_EVENT_TYPE, 
1:                                                     new String[] { BUNDLE_ID });
1:     
1:     /**
1:      * Returns the BlueprintEvent associated with this blueprint container.
1:      * The returned Composite Data is typed by {@link #OSGI_BLUEPRINT_EVENT_TYPE}.
1:      * 
1:      * @param bundleId The bundle id of a blueprint bundle
1:      * @return the last event associated with the blueprint bundle, see {@link #OSGI_BLUEPRINT_EVENT_TYPE} 
1:      * @throws IOException if the operation fails
1:      * @throws IllegalArgumentException if the bundle is not a blueprint bundle
1:      */
1:     public CompositeData getLastEvent(long bundleId) throws IOException;
1:     
1:     /**
1:      * Returns all the last events associated with the blueprint bundles.
1:      * 
1:      * @return the tabular representation of all the last events associated with the blueprint bundles see {@link #OSGI_BLUEPRINT_EVENTS_TYPE}
1:      * @throws IOException if the operation fails
1:      */ 
1:     public TabularData getLastEvents() throws IOException;
1:     
1:     /**
1:      * Returns all the blueprint bundles' IDs, which are either 
1:      * successfully created or not by current extender.
1:      * 
1:      * @return the list of all the blueprint bundles's IDs (either successfully created or not by current extender)
1:      * @throws IOException if the operation fails
1:      */
1:     public long[] getBlueprintBundleIds() throws IOException;
1:     
1: }
============================================================================