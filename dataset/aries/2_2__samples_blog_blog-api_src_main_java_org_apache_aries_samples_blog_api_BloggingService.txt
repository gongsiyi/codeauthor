1:430e8f5: /**
1:430e8f5:  * Licensed to the Apache Software Foundation (ASF) under one
1:430e8f5:  * or more contributor license agreements.  See the NOTICE file
1:430e8f5:  * distributed with this work for additional information
1:430e8f5:  * regarding copyright ownership.  The ASF licenses this file
1:430e8f5:  * to you under the Apache License, Version 2.0 (the
1:430e8f5:  * "License"); you may not use this file except in compliance
1:430e8f5:  * with the License.  You may obtain a copy of the License at
1:430e8f5:  *
1:430e8f5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:430e8f5:  *
1:430e8f5:  * Unless required by applicable law or agreed to in writing,
1:430e8f5:  * software distributed under the License is distributed on an
1:430e8f5:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:430e8f5:  * KIND, either express or implied.  See the License for the
1:430e8f5:  * specific language governing permissions and limitations
1:430e8f5:  * under the License.
1:430e8f5:  */
1:430e8f5: package org.apache.aries.samples.blog.api;
1:430e8f5: 
1:f3e430e: import java.util.List;
1:f3e430e: 
1:430e8f5: public interface BloggingService
1:430e8f5: {
1:430e8f5:   /**
1:430e8f5:    *  Get the blog
1:f3e430e:    *  @return the title of the Blog
1:430e8f5:    */
1:f3e430e:   String getBlogTitle();
1:430e8f5: 
1:430e8f5:   /** 
1:430e8f5:    * Get the author associated with a given email address.
1:430e8f5:    * 
1:430e8f5:    * @param email the email address of interest
1:430e8f5:    * @return the blog author with the supplied email address
1:430e8f5:    */
1:430e8f5:   BlogAuthor getBlogAuthor(String email);
1:430e8f5:   
1:430e8f5:   /**
1:430e8f5:    * Get the blog post with the specified id.
1:430e8f5:    * 
1:430e8f5:    * @param id the blog entry id
1:430e8f5:    * @return the blog post
1:430e8f5:    */
1:f3e430e:   BlogEntry getBlogEntry(long id);
1:f3e430e: 
1:430e8f5: 
1:430e8f5:   /**
1:430e8f5:    * Update the attributes of an author.
1:430e8f5:    * 
1:430e8f5:    * @param email the email address of the author being updated
1:430e8f5:    * @param nickName the display name for this author
1:430e8f5:    * @param name the full name for this author
1:430e8f5:    * @param bio the biography for this author
1:430e8f5:    * @param dob the date of birth for this author
1:430e8f5:    */
1:f3e430e:   void updateBlogAuthor(String email, String nickName, String name, String bio, String dob);
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * Get the number of entries(posts) in the blog
1:f3e430e:    * @return the number of posts.
1:f3e430e:    */
1:f3e430e:   public int getNoOfEntries(); 
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * Get the a number of entries starting at the teh first index
1:f3e430e:    * @param firstPostIndex
1:f3e430e:    * @param noOfPosts
1:f3e430e:    * @return a list of BlogEntries
1:f3e430e:    */
1:f3e430e:   public List<? extends BlogEntry> getBlogEntries(int firstPostIndex, int noOfPosts);
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * Get all the blog entries
1:f3e430e:    * @return a lost of BlogEntrys
1:f3e430e:    */
1:f3e430e:   public List<? extends BlogEntry> getAllBlogEntries();
1:430e8f5: 
1:430e8f5:   /**
1:430e8f5:    * Create a new author.
1:430e8f5:    * 
1:430e8f5:    * @param email the author's email address
1:430e8f5:    * @param nickName the author's display name
1:430e8f5:    * @param name the author's full name
1:430e8f5:    * @param bio the author's biography
1:430e8f5:    * @param dob the author's date of birth
1:430e8f5:    */
1:f3e430e:   void createBlogAuthor(String email, String nickName, String name, String bio, String dob);
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * 
1:f3e430e:    * @param email the email address of the author
1:f3e430e:    * @param title the title of the post
1:f3e430e:    * @param blogText the test of the post
1:f3e430e:    * @param tags list of tags associated with the post
1:f3e430e:    */
1:f3e430e:   void createBlogEntry(String email, String title, String blogText, String tags); 
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * Retrieve the state of the blog commenting service
1:f3e430e:    * 
1:f3e430e:    * @return true if available else false
1:f3e430e:    */
1:f3e430e:   boolean isCommentingAvailable();
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * Create a comment
1:f3e430e:    * @param text
1:f3e430e:    * @param email
1:f3e430e:    * @param entryId
1:f3e430e:    */
1:f3e430e:   void createBlogComment(String text, String email, long entryId);
1:f3e430e:   
1:f3e430e:   /**
1:f3e430e:    * Get the comments associated with an entry
1:f3e430e:    * @param entry
1:f3e430e:    * @return a list of comments for an entry (post)
1:f3e430e:    */
1:f3e430e:   List <? extends BlogComment> getCommentsForEntry(BlogEntry entry);
1:f3e430e:   
1:f3e430e:   
1:f3e430e:   
1:430e8f5:   
1:430e8f5: }
============================================================================
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:afa98ec
commit:f3e430e
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1: 
1:    *  @return the title of the Blog
1:   String getBlogTitle();
/////////////////////////////////////////////////////////////////////////
1:   BlogEntry getBlogEntry(long id);
1: 
/////////////////////////////////////////////////////////////////////////
1:   void updateBlogAuthor(String email, String nickName, String name, String bio, String dob);
1:   
1:   /**
1:    * Get the number of entries(posts) in the blog
1:    * @return the number of posts.
1:    */
1:   public int getNoOfEntries(); 
1:   
1:   /**
1:    * Get the a number of entries starting at the teh first index
1:    * @param firstPostIndex
1:    * @param noOfPosts
1:    * @return a list of BlogEntries
1:    */
1:   public List<? extends BlogEntry> getBlogEntries(int firstPostIndex, int noOfPosts);
1:   
1:   /**
1:    * Get all the blog entries
1:    * @return a lost of BlogEntrys
1:    */
1:   public List<? extends BlogEntry> getAllBlogEntries();
/////////////////////////////////////////////////////////////////////////
1:   void createBlogAuthor(String email, String nickName, String name, String bio, String dob);
1:   
1:   /**
1:    * 
1:    * @param email the email address of the author
1:    * @param title the title of the post
1:    * @param blogText the test of the post
1:    * @param tags list of tags associated with the post
1:    */
1:   void createBlogEntry(String email, String title, String blogText, String tags); 
1:   
1:   /**
1:    * Retrieve the state of the blog commenting service
1:    * 
1:    * @return true if available else false
1:    */
1:   boolean isCommentingAvailable();
1:   
1:   /**
1:    * Create a comment
1:    * @param text
1:    * @param email
1:    * @param entryId
1:    */
1:   void createBlogComment(String text, String email, long entryId);
1:   
1:   /**
1:    * Get the comments associated with an entry
1:    * @param entry
1:    * @return a list of comments for an entry (post)
1:    */
1:   List <? extends BlogComment> getCommentsForEntry(BlogEntry entry);
1:   
1:   
1:   
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:430e8f5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.samples.blog.api;
1: 
1: public interface BloggingService
1: {
1:   /**
1:    *  Get the blog
0:    *  @return the blog with all entries
1:    */
0:   Blog getBlog();
1: 
1:   /** 
1:    * Get the author associated with a given email address.
1:    * 
1:    * @param email the email address of interest
1:    * @return the blog author with the supplied email address
1:    */
1:   BlogAuthor getBlogAuthor(String email);
1:   
1:   /**
1:    * Get the blog post with the specified id.
1:    * 
1:    * @param id the blog entry id
1:    * @return the blog post
1:    */
0:   BlogPost getPost(long id);
1: 
1:   /**
1:    * Update the attributes of an author.
1:    * 
1:    * @param email the email address of the author being updated
1:    * @param nickName the display name for this author
1:    * @param name the full name for this author
1:    * @param bio the biography for this author
1:    * @param dob the date of birth for this author
1:    */
0:   void updateAuthor(String email, String nickName, String name, String bio, String dob);
1: 
1:   /**
1:    * Create a new author.
1:    * 
1:    * @param email the author's email address
1:    * @param nickName the author's display name
1:    * @param name the author's full name
1:    * @param bio the author's biography
1:    * @param dob the author's date of birth
1:    */
0:   void createAuthor(String email, String nickName, String name, String bio, String dob);
1:   
1: }
============================================================================