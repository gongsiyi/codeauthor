1:4243a2b: /**
1:4243a2b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4243a2b:  * contributor license agreements.  See the NOTICE file distributed with
1:4243a2b:  * this work for additional information regarding copyright ownership.
1:4243a2b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4243a2b:  * (the "License"); you may not use this file except in compliance with
1:4243a2b:  * the License.  You may obtain a copy of the License at
1:4243a2b:  *
1:4243a2b:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4243a2b:  *
1:4243a2b:  * Unless required by applicable law or agreed to in writing, software
1:4243a2b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4243a2b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4243a2b:  * See the License for the specific language governing permissions and
1:4243a2b:  * limitations under the License.
1:4243a2b:  */
1:4243a2b: package org.apache.aries.transaction.jms;
1:4243a2b: 
1:4243a2b: import javax.jms.Connection;
1:4243a2b: 
1:4243a2b: import org.apache.aries.transaction.jms.internal.ConnectionPool;
1:4243a2b: import org.apache.aries.transaction.jms.internal.GenericResourceManager;
1:4243a2b: import org.apache.aries.transaction.jms.internal.RecoverableConnectionPool;
1:4243a2b: import org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory;
1:4243a2b: 
1:4243a2b: /**
1:4243a2b:  * A pooled connection factory which is dedicated to work with the Geronimo/Aries
1:4243a2b:  * transaction manager for proper recovery of in-flight transactions after a
1:4243a2b:  * crash.
1:4243a2b:  *
1:4243a2b:  * @org.apache.xbean.XBean element="xaPooledConnectionFactory"
1:4243a2b:  */
1:8047ebe: @SuppressWarnings("serial")
1:4243a2b: public class RecoverablePooledConnectionFactory extends XaPooledConnectionFactory {
1:4243a2b: 
1:4243a2b:     private String name;
1:4243a2b: 
1:4243a2b:     public RecoverablePooledConnectionFactory() {
1:4243a2b:         super();
2:4243a2b:     }
1:4243a2b: 
1:4243a2b:     public String getName() {
1:4243a2b:         return name;
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     /**
1:4243a2b:      * The unique name for this managed XAResource.  This name will be used
1:4243a2b:      * by the transaction manager to recover transactions.
1:4243a2b:      *
1:4243a2b:      * @param name
1:4243a2b:      */
1:4243a2b:     public void setName(String name) {
1:4243a2b:         this.name = name;
1:4243a2b:     }
1:4243a2b: 
1:4c2ef4a:     protected ConnectionPool createConnectionPool(Connection connection) {
1:4c2ef4a:         return new RecoverableConnectionPool(connection, getTransactionManager(), getName());
1:4243a2b:     }
1:4243a2b: 
1:4243a2b:     /**
1:4243a2b:      * @org.apache.xbean.InitMethod
1:4243a2b:      */
1:4243a2b:     @Override
1:4243a2b:     public void start() {
1:4243a2b:         if (getConnectionFactory() == null) {
1:4c2ef4a:             throw new IllegalArgumentException("connectionFactory must be set");
1:4243a2b:         }
1:4243a2b:         if (getTransactionManager() == null) {
1:4243a2b:             throw new IllegalArgumentException("transactionManager must be set");
1:4243a2b:         }
1:4243a2b:         super.start();
1:4243a2b:         new GenericResourceManager(name, getTransactionManager(), getConnectionFactory()).recoverResource();
1:4243a2b:     }
1:4243a2b: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:8047ebe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: @SuppressWarnings("serial")
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:4c2ef4a
/////////////////////////////////////////////////////////////////////////
1:     protected ConnectionPool createConnectionPool(Connection connection) {
1:         return new RecoverableConnectionPool(connection, getTransactionManager(), getName());
/////////////////////////////////////////////////////////////////////////
1:             throw new IllegalArgumentException("connectionFactory must be set");
commit:4243a2b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.aries.transaction.jms;
1: 
0: import javax.jms.JMSException;
1: import javax.jms.Connection;
0: import javax.jms.XAConnection;
1: 
1: import org.apache.aries.transaction.jms.internal.ConnectionPool;
1: import org.apache.aries.transaction.jms.internal.GenericResourceManager;
1: import org.apache.aries.transaction.jms.internal.RecoverableConnectionPool;
1: import org.apache.aries.transaction.jms.internal.XaPooledConnectionFactory;
1: 
1: /**
1:  * A pooled connection factory which is dedicated to work with the Geronimo/Aries
1:  * transaction manager for proper recovery of in-flight transactions after a
1:  * crash.
1:  *
1:  * @org.apache.xbean.XBean element="xaPooledConnectionFactory"
1:  */
1: public class RecoverablePooledConnectionFactory extends XaPooledConnectionFactory {
1: 
1:     private String name;
1: 
1:     public RecoverablePooledConnectionFactory() {
1:         super();
1:     }
1: 
1:     public String getName() {
1:         return name;
1:     }
1: 
1:     /**
1:      * The unique name for this managed XAResource.  This name will be used
1:      * by the transaction manager to recover transactions.
1:      *
1:      * @param name
1:      */
1:     public void setName(String name) {
1:         this.name = name;
1:     }
1: 
0:     protected ConnectionPool createConnectionPool(Connection connection) throws JMSException {
0:     	if (!(connection instanceof XAConnection)) {
0:     		throw new JMSException("Require an instance of javax.jms.XAConnection for creating the ConnectionPool");
1:     	}
0:         return new RecoverableConnectionPool((XAConnection)connection, getPoolFactory(), getTransactionManager(), getName());
1:     }
1: 
1:     /**
1:      * @org.apache.xbean.InitMethod
1:      */
1:     @Override
1:     public void start() {
1:         if (getConnectionFactory() == null) {
0:             throw new IllegalArgumentException("connectionFactory or xaConnectionFactory must be set");
1:         }
1:         if (getTransactionManager() == null) {
1:             throw new IllegalArgumentException("transactionManager must be set");
1:         }
1:         super.start();
1:         new GenericResourceManager(name, getTransactionManager(), getConnectionFactory()).recoverResource();
1:     }
1: }
============================================================================