1:1c72f1f: /**
1:1c72f1f:  * Licensed to the Apache Software Foundation (ASF) under one
1:1c72f1f:  * or more contributor license agreements.  See the NOTICE file
1:1c72f1f:  * distributed with this work for additional information
1:1c72f1f:  * regarding copyright ownership.  The ASF licenses this file
1:1c72f1f:  * to you under the Apache License, Version 2.0 (the
1:1c72f1f:  * "License"); you may not use this file except in compliance
1:1c72f1f:  * with the License.  You may obtain a copy of the License at
1:1c72f1f:  *
1:1c72f1f:  *   http://www.apache.org/licenses/LICENSE-2.0
1:1c72f1f:  *
1:1c72f1f:  * Unless required by applicable law or agreed to in writing,
1:1c72f1f:  * software distributed under the License is distributed on an
1:1c72f1f:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:1c72f1f:  * KIND, either express or implied.  See the License for the
1:1c72f1f:  * specific language governing permissions and limitations
1:1c72f1f:  * under the License.
1:1c72f1f:  */
1:01524e7: package org.apache.aries.blueprint.itests.authz.helper;
1:01524e7: 
1:01524e7: import java.util.Map;
1:01524e7: 
1:01524e7: import javax.security.auth.Subject;
1:01524e7: import javax.security.auth.callback.CallbackHandler;
1:01524e7: import javax.security.auth.login.LoginException;
1:01524e7: import javax.security.auth.spi.LoginModule;
1:01524e7: 
1:01524e7: public class SimpleLoginModule implements LoginModule {
1:01524e7: 
1:01524e7:     private Subject subject;
1:01524e7:     private String name;
1:01524e7:     private String[] groups;
1:01524e7: 
1:01524e7:     @Override
1:01524e7:     public void initialize(Subject subject, CallbackHandler callbackHandler, Map<String, ?> sharedState,
1:01524e7:                            Map<String, ?> options) {
1:01524e7:         this.subject = subject;
1:01524e7:         this.name = (String)options.get("username");
1:01524e7:         this.groups = (String[])options.get("groups");
1:01524e7:     }
1:01524e7: 
1:01524e7:     @Override
1:01524e7:     public boolean login() throws LoginException {
1:01524e7:         return true;
1:01524e7:     }
1:01524e7: 
1:01524e7:     @Override
1:01524e7:     public boolean commit() throws LoginException {
1:01524e7:         subject.getPrincipals().add(new UserPrincipal(name));
1:01524e7:         for (String group : groups) {
1:01524e7:             subject.getPrincipals().add(new GroupPrincipal(group));
1:01524e7:         }
1:01524e7:         return true;
1:01524e7:     }
1:01524e7: 
1:01524e7:     @Override
1:01524e7:     public boolean abort() throws LoginException {
1:01524e7:         return true;
1:01524e7:     }
1:01524e7: 
1:01524e7:     @Override
1:01524e7:     public boolean logout() throws LoginException {
1:01524e7:         subject.getPrincipals().clear();
1:01524e7:         return true;
1:01524e7:     }
1:01524e7:     
1:01524e7: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:1c72f1f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:01524e7
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.itests.authz.helper;
1: 
1: import java.util.Map;
1: 
1: import javax.security.auth.Subject;
1: import javax.security.auth.callback.CallbackHandler;
1: import javax.security.auth.login.LoginException;
1: import javax.security.auth.spi.LoginModule;
1: 
1: public class SimpleLoginModule implements LoginModule {
1: 
1:     private Subject subject;
1:     private String name;
1:     private String[] groups;
1: 
1:     @Override
1:     public void initialize(Subject subject, CallbackHandler callbackHandler, Map<String, ?> sharedState,
1:                            Map<String, ?> options) {
1:         this.subject = subject;
1:         this.name = (String)options.get("username");
1:         this.groups = (String[])options.get("groups");
1:     }
1: 
1:     @Override
1:     public boolean login() throws LoginException {
1:         return true;
1:     }
1: 
1:     @Override
1:     public boolean commit() throws LoginException {
1:         subject.getPrincipals().add(new UserPrincipal(name));
1:         for (String group : groups) {
1:             subject.getPrincipals().add(new GroupPrincipal(group));
1:         }
1:         return true;
1:     }
1: 
1:     @Override
1:     public boolean abort() throws LoginException {
1:         return true;
1:     }
1: 
1:     @Override
1:     public boolean logout() throws LoginException {
1:         subject.getPrincipals().clear();
1:         return true;
1:     }
1:     
1: }
============================================================================