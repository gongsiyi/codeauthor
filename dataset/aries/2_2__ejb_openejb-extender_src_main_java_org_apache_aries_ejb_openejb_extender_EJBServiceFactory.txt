1:541fd79: /**
1:541fd79:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:541fd79:  *  contributor license agreements.  See the NOTICE file distributed with
1:541fd79:  *  this work for additional information regarding copyright ownership.
1:541fd79:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:541fd79:  *  (the "License"); you may not use this file except in compliance with
1:541fd79:  *  the License.  You may obtain a copy of the License at
1:541fd79:  *
1:541fd79:  *     http://www.apache.org/licenses/LICENSE-2.0
1:541fd79:  *
1:541fd79:  *  Unless required by applicable law or agreed to in writing, software
1:541fd79:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:541fd79:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:541fd79:  *  See the License for the specific language governing permissions and
1:541fd79:  *  limitations under the License.
1:541fd79:  */
1:541fd79: package org.apache.aries.ejb.openejb.extender;
2:541fd79: 
1:541fd79: import org.apache.openejb.BeanContext.BusinessLocalBeanHome;
1:541fd79: import org.apache.openejb.BeanContext.BusinessLocalHome;
1:541fd79: import org.apache.openejb.BeanContext.BusinessRemoteHome;
1:541fd79: import org.apache.openejb.core.ivm.BaseEjbProxyHandler;
1:541fd79: import org.apache.openejb.util.proxy.InvocationHandler;
1:541fd79: import org.osgi.framework.Bundle;
1:541fd79: import org.osgi.framework.ServiceFactory;
1:541fd79: import org.osgi.framework.ServiceRegistration;
1:541fd79: 
1:b49a314: public class EJBServiceFactory implements ServiceFactory<Object> {
1:541fd79: 
1:541fd79:   private static enum Type {LOCAL, LOCAL_NO_IFACE, REMOTE;}
1:541fd79:   
1:541fd79:   private final BusinessLocalBeanHome localBeanHome;
1:541fd79:   private final BusinessLocalHome localHome;
1:541fd79:   private final BusinessRemoteHome remoteHome;
1:541fd79:   
1:541fd79:   private final Type type;
1:541fd79:   
1:541fd79:   public EJBServiceFactory(BusinessLocalBeanHome home) {
1:541fd79:     this.localBeanHome = home;
1:541fd79:     type = Type.LOCAL_NO_IFACE;
1:541fd79:     this.remoteHome = null;
1:541fd79:     this.localHome = null;
1:541fd79:   }
1:541fd79: 
1:541fd79:   public EJBServiceFactory(BusinessLocalHome home) {
1:541fd79:     this.localHome = home;
1:541fd79:     type = Type.LOCAL;
1:541fd79:     this.remoteHome = null;
1:541fd79:     this.localBeanHome = null;
1:541fd79:   }
1:541fd79: 
1:541fd79:   public EJBServiceFactory(BusinessRemoteHome home) {
1:541fd79:     this.remoteHome = home;
1:541fd79:     type = Type.REMOTE;
1:541fd79:     this.localHome = null;
1:541fd79:     this.localBeanHome = null;
1:541fd79:   }
1:541fd79: 
1:541fd79:   public Object getService(Bundle bundle,
1:541fd79:       ServiceRegistration<Object> registration) {
1:541fd79:     switch(type) {
1:541fd79:       case LOCAL :
1:541fd79:         return localHome.create();
1:541fd79:       case LOCAL_NO_IFACE :
1:541fd79:         return localBeanHome.create();
1:541fd79:       case REMOTE : {
1:541fd79:         InvocationHandler ih = AriesProxyService.get().getInvocationHandler(remoteHome);
1:541fd79:         
1:541fd79:         if(ih instanceof BaseEjbProxyHandler) {
1:541fd79:           ((BaseEjbProxyHandler)ih).setIntraVmCopyMode(false);
1:541fd79:         }
1:541fd79:         return remoteHome.create();
1:541fd79:       }
1:541fd79:       default :
1:541fd79:         throw new IllegalArgumentException("Unknown EJB type " + type);
1:541fd79:     }
1:541fd79:   }
1:541fd79: 
1:541fd79:   public void ungetService(Bundle bundle,
1:541fd79:       ServiceRegistration<Object> registration, Object service) {
1:541fd79:   }
1:541fd79: }
============================================================================
author:Jean-Baptiste Onofre
-------------------------------------------------------------------------------
commit:b49a314
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: public class EJBServiceFactory implements ServiceFactory<Object> {
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:541fd79
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.ejb.openejb.extender;
1: 
0: import java.lang.reflect.Method;
1: 
1: import org.apache.openejb.BeanContext.BusinessLocalBeanHome;
1: import org.apache.openejb.BeanContext.BusinessLocalHome;
1: import org.apache.openejb.BeanContext.BusinessRemoteHome;
1: import org.apache.openejb.core.ivm.BaseEjbProxyHandler;
1: import org.apache.openejb.util.proxy.InvocationHandler;
1: import org.osgi.framework.Bundle;
1: import org.osgi.framework.ServiceFactory;
1: import org.osgi.framework.ServiceRegistration;
1: 
0: public class EJBServiceFactory implements ServiceFactory<Object>{
1: 
1:   private static enum Type {LOCAL, LOCAL_NO_IFACE, REMOTE;}
1:   
1:   private final BusinessLocalBeanHome localBeanHome;
1:   private final BusinessLocalHome localHome;
1:   private final BusinessRemoteHome remoteHome;
1:   
1:   private final Type type;
1:   
1:   public EJBServiceFactory(BusinessLocalBeanHome home) {
1:     this.localBeanHome = home;
1:     type = Type.LOCAL_NO_IFACE;
1:     this.remoteHome = null;
1:     this.localHome = null;
1:   }
1: 
1:   public EJBServiceFactory(BusinessLocalHome home) {
1:     this.localHome = home;
1:     type = Type.LOCAL;
1:     this.remoteHome = null;
1:     this.localBeanHome = null;
1:   }
1: 
1:   public EJBServiceFactory(BusinessRemoteHome home) {
1:     this.remoteHome = home;
1:     type = Type.REMOTE;
1:     this.localHome = null;
1:     this.localBeanHome = null;
1:   }
1: 
1:   public Object getService(Bundle bundle,
1:       ServiceRegistration<Object> registration) {
1:     switch(type) {
1:       case LOCAL :
1:         return localHome.create();
1:       case LOCAL_NO_IFACE :
1:         return localBeanHome.create();
1:       case REMOTE : {
1:         InvocationHandler ih = AriesProxyService.get().getInvocationHandler(remoteHome);
1:         
1:         if(ih instanceof BaseEjbProxyHandler) {
1:           ((BaseEjbProxyHandler)ih).setIntraVmCopyMode(false);
1:         }
1:         return remoteHome.create();
1:       }
1:       default :
1:         throw new IllegalArgumentException("Unknown EJB type " + type);
1:     }
1:   }
1: 
1:   public void ungetService(Bundle bundle,
1:       ServiceRegistration<Object> registration, Object service) {
1:   }
1: }
============================================================================