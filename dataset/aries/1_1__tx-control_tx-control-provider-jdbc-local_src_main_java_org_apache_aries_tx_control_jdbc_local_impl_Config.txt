1:efb3993: /*
1:efb3993:  * Licensed to the Apache Software Foundation (ASF) under one
1:efb3993:  * or more contributor license agreements.  See the NOTICE file
1:efb3993:  * distributed with this work for additional information
1:efb3993:  * regarding copyright ownership.  The ASF licenses this file
1:efb3993:  * to you under the Apache License, Version 2.0 (the
1:efb3993:  * "License"); you may not use this file except in compliance
1:efb3993:  * with the License.  You may obtain a copy of the License at
1:efb3993:  *
1:efb3993:  *   http://www.apache.org/licenses/LICENSE-2.0
1:efb3993:  *
1:efb3993:  * Unless required by applicable law or agreed to in writing,
1:efb3993:  * software distributed under the License is distributed on an
1:efb3993:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:efb3993:  * KIND, either express or implied.  See the License for the
1:efb3993:  * specific language governing permissions and limitations
1:efb3993:  * under the License.
1:efb3993:  */
1:8adb3c5: package org.apache.aries.tx.control.jdbc.local.impl;
1:8adb3c5: 
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_DATABASE_NAME;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_DATASOURCE_NAME;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_DESCRIPTION;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_NETWORK_PROTOCOL;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_PASSWORD;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_PORT_NUMBER;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_ROLE_NAME;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_SERVER_NAME;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_URL;
1:8adb3c5: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_USER;
1:8adb3c5: 
1:8adb3c5: import org.osgi.service.metatype.annotations.AttributeDefinition;
1:8adb3c5: import org.osgi.service.metatype.annotations.AttributeType;
1:8adb3c5: import org.osgi.service.metatype.annotations.ObjectClassDefinition;
1:8adb3c5: 
1:8adb3c5: @ObjectClassDefinition(factoryPid="org.apache.aries.tx.control.jdbc.local", description="Aries Transaction Control Factory for Local JDBCResourceProvider Services")
1:8adb3c5: public @interface Config {
1:8adb3c5: 
1:8adb3c5: 	// Most commonly used properties declared first so that they go into the metatype first
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, 
1:8adb3c5: 			description="The name of the driver class for the DataSourceFactory service. This property need not be defined if aries.dsf.target.filter is defined.")
1:8adb3c5: 	String osgi_jdbc_driver_class();
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="The JDBC URL to pass to the DataSourceFactory")
1:8adb3c5: 	String url();
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The userid to pass to the DataSourceFactory")
1:8adb3c5: 	String user();
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(type=AttributeType.PASSWORD, required=false, 
1:8adb3c5: 			description="The password to pass to the DataSourceFactory (not visible as a service property)")
1:8adb3c5: 	String password();
1:8adb3c5: 	
1:8adb3c5: 	// Pool configuration properties
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="Is connection pooling enabled for this JDBCResourceProvider")
1:8adb3c5: 	boolean osgi_connection_pooling_enabled() default true;
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The maximum number of connections in the pool")
1:8adb3c5: 	int osgi_connection_max() default 10;
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="The minimum number of connections in the pool")
1:8adb3c5: 	int osgi_connection_min() default 10;
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The maximum time (in ms) that the pool will wait for a connection before failing")
1:8adb3c5: 	long osgi_connection_timeout() default 30000;
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The minimum time (in ms) a connection will be idle before being reclaimed by the pool")
1:8adb3c5: 	long osgi_idle_timeout() default 180000;
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The maximum time (in ms) that a connection will stay in the pool before being discarded")
1:8adb3c5: 	long osgi_connection_lifetime() default 10800000;
1:8adb3c5: 	
1:8adb3c5: 	// Detailed Configuration
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The filter to use when finding the DataSourceFactory service. This property need not be defined if osgi.jdbc.driver.class is defined.")
1:8adb3c5: 	String aries_dsf_target_filter();
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="The names of the properties from this configuration that should be passed to the DataSourceFactory")
1:8adb3c5: 	String[] aries_jdbc_property_names() default {JDBC_DATABASE_NAME, JDBC_DATASOURCE_NAME,
1:8adb3c5: 			JDBC_DESCRIPTION, JDBC_NETWORK_PROTOCOL, JDBC_PASSWORD, JDBC_PORT_NUMBER, JDBC_ROLE_NAME, JDBC_SERVER_NAME,
1:8adb3c5: 			JDBC_URL, JDBC_USER};
1:8adb3c5: 	
1:8adb3c5: 
1:8adb3c5: 	//Raw JDBC configuration
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	String databaseName();
1:8adb3c5: 	
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	String dataSourceName();
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	String description();
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	String networkProtocol();
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	int portNumber();
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	String roleName();
1:8adb3c5: 
1:8adb3c5: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1:8adb3c5: 	String serverName();
1:8adb3c5: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:efb3993
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:8adb3c5
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.tx.control.jdbc.local.impl;
1: 
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_DATABASE_NAME;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_DATASOURCE_NAME;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_DESCRIPTION;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_NETWORK_PROTOCOL;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_PASSWORD;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_PORT_NUMBER;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_ROLE_NAME;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_SERVER_NAME;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_URL;
1: import static org.osgi.service.jdbc.DataSourceFactory.JDBC_USER;
1: 
1: import org.osgi.service.metatype.annotations.AttributeDefinition;
1: import org.osgi.service.metatype.annotations.AttributeType;
1: import org.osgi.service.metatype.annotations.ObjectClassDefinition;
1: 
1: @ObjectClassDefinition(factoryPid="org.apache.aries.tx.control.jdbc.local", description="Aries Transaction Control Factory for Local JDBCResourceProvider Services")
1: public @interface Config {
1: 
1: 	// Most commonly used properties declared first so that they go into the metatype first
1: 	
1: 	@AttributeDefinition(required=false, 
1: 			description="The name of the driver class for the DataSourceFactory service. This property need not be defined if aries.dsf.target.filter is defined.")
1: 	String osgi_jdbc_driver_class();
1: 
1: 	@AttributeDefinition(required=false, description="The JDBC URL to pass to the DataSourceFactory")
1: 	String url();
1: 	
1: 	@AttributeDefinition(required=false, description="The userid to pass to the DataSourceFactory")
1: 	String user();
1: 	
1: 	@AttributeDefinition(type=AttributeType.PASSWORD, required=false, 
1: 			description="The password to pass to the DataSourceFactory (not visible as a service property)")
1: 	String password();
1: 	
1: 	// Pool configuration properties
1: 	
1: 	@AttributeDefinition(required=false, description="Is connection pooling enabled for this JDBCResourceProvider")
1: 	boolean osgi_connection_pooling_enabled() default true;
1: 	
1: 	@AttributeDefinition(required=false, description="The maximum number of connections in the pool")
1: 	int osgi_connection_max() default 10;
1: 
1: 	@AttributeDefinition(required=false, description="The minimum number of connections in the pool")
1: 	int osgi_connection_min() default 10;
1: 	
1: 	@AttributeDefinition(required=false, description="The maximum time (in ms) that the pool will wait for a connection before failing")
1: 	long osgi_connection_timeout() default 30000;
1: 	
1: 	@AttributeDefinition(required=false, description="The minimum time (in ms) a connection will be idle before being reclaimed by the pool")
1: 	long osgi_idle_timeout() default 180000;
1: 	
1: 	@AttributeDefinition(required=false, description="The maximum time (in ms) that a connection will stay in the pool before being discarded")
1: 	long osgi_connection_lifetime() default 10800000;
1: 	
1: 	// Detailed Configuration
1: 	
1: 	@AttributeDefinition(required=false, description="The filter to use when finding the DataSourceFactory service. This property need not be defined if osgi.jdbc.driver.class is defined.")
1: 	String aries_dsf_target_filter();
1: 	
1: 	@AttributeDefinition(required=false, description="The names of the properties from this configuration that should be passed to the DataSourceFactory")
1: 	String[] aries_jdbc_property_names() default {JDBC_DATABASE_NAME, JDBC_DATASOURCE_NAME,
1: 			JDBC_DESCRIPTION, JDBC_NETWORK_PROTOCOL, JDBC_PASSWORD, JDBC_PORT_NUMBER, JDBC_ROLE_NAME, JDBC_SERVER_NAME,
1: 			JDBC_URL, JDBC_USER};
1: 	
1: 
1: 	//Raw JDBC configuration
1: 	
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	String databaseName();
1: 	
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	String dataSourceName();
1: 
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	String description();
1: 
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	String networkProtocol();
1: 
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	int portNumber();
1: 
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	String roleName();
1: 
1: 	@AttributeDefinition(required=false, description="JDBC configuration property")
1: 	String serverName();
1: }
============================================================================