1:01524e7: package org.apache.aries.blueprint.itests.authz.helper;
1:01524e7: 
1:01524e7: import java.security.PrivilegedAction;
1:01524e7: import java.util.HashMap;
1:01524e7: import java.util.Map;
1:01524e7: 
1:01524e7: import javax.security.auth.Subject;
1:01524e7: import javax.security.auth.login.AppConfigurationEntry;
1:01524e7: import javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag;
1:01524e7: import javax.security.auth.login.Configuration;
1:01524e7: import javax.security.auth.login.LoginContext;
1:01524e7: import javax.security.auth.login.LoginException;
1:01524e7: 
1:01524e7: public class JAASHelper {
1:01524e7: 
1:01524e7:     public static <T> void doAs(final String[] groups, PrivilegedAction<T> action) {
1:01524e7:         Configuration config = new Configuration() {
1:01524e7:     
1:01524e7:             @Override
1:01524e7:             public AppConfigurationEntry[] getAppConfigurationEntry(String name) {
1:01524e7:                 Map<String, Object> options = new HashMap<String, Object>();
1:01524e7:                 options.put("username", "dummy"); // The user does not matter
1:01524e7:                 options.put("groups", groups);
1:01524e7:                 AppConfigurationEntry entry = new AppConfigurationEntry(SimpleLoginModule.class.getName(),
1:01524e7:                                                                         LoginModuleControlFlag.REQUIRED,
1:01524e7:                                                                         options);
1:01524e7:                 return new AppConfigurationEntry[] {
1:01524e7:                     entry
1:01524e7:                 };
1:01524e7:             }
1:01524e7:     
1:01524e7:         };
1:01524e7:         try {
1:01524e7:             LoginContext lc = new LoginContext("test", new Subject(), null, config);
1:01524e7:             lc.login();
1:01524e7:             Subject.doAs(lc.getSubject(), action);
1:01524e7:             lc.logout();
1:01524e7:         } catch (LoginException e) {
1:01524e7:             throw new RuntimeException(e.getMessage(), e);
1:01524e7:         }
1:01524e7:     }
1:01524e7: 
1:01524e7:     
1:01524e7: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:01524e7
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.itests.authz.helper;
1: 
1: import java.security.PrivilegedAction;
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import javax.security.auth.Subject;
1: import javax.security.auth.login.AppConfigurationEntry;
1: import javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag;
1: import javax.security.auth.login.Configuration;
1: import javax.security.auth.login.LoginContext;
1: import javax.security.auth.login.LoginException;
1: 
1: public class JAASHelper {
1: 
1:     public static <T> void doAs(final String[] groups, PrivilegedAction<T> action) {
1:         Configuration config = new Configuration() {
1:     
1:             @Override
1:             public AppConfigurationEntry[] getAppConfigurationEntry(String name) {
1:                 Map<String, Object> options = new HashMap<String, Object>();
1:                 options.put("username", "dummy"); // The user does not matter
1:                 options.put("groups", groups);
1:                 AppConfigurationEntry entry = new AppConfigurationEntry(SimpleLoginModule.class.getName(),
1:                                                                         LoginModuleControlFlag.REQUIRED,
1:                                                                         options);
1:                 return new AppConfigurationEntry[] {
1:                     entry
1:                 };
1:             }
1:     
1:         };
1:         try {
1:             LoginContext lc = new LoginContext("test", new Subject(), null, config);
1:             lc.login();
1:             Subject.doAs(lc.getSubject(), action);
1:             lc.logout();
1:         } catch (LoginException e) {
1:             throw new RuntimeException(e.getMessage(), e);
1:         }
1:     }
1: 
1:     
1: }
============================================================================