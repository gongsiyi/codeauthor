1:6aa0635: /*
1:6aa0635:  * Licensed to the Apache Software Foundation (ASF) under one
1:6aa0635:  * or more contributor license agreements.  See the NOTICE file
1:6aa0635:  * distributed with this work for additional information
1:6aa0635:  * regarding copyright ownership.  The ASF licenses this file
1:6aa0635:  * to you under the Apache License, Version 2.0 (the
1:6aa0635:  * "License"); you may not use this file except in compliance
1:6aa0635:  * with the License.  You may obtain a copy of the License at
1:6aa0635:  *
1:6aa0635:  *   http://www.apache.org/licenses/LICENSE-2.0
1:6aa0635:  *
1:6aa0635:  * Unless required by applicable law or agreed to in writing,
1:6aa0635:  * software distributed under the License is distributed on an
1:6aa0635:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6aa0635:  * KIND, either express or implied.  See the License for the
1:6aa0635:  * specific language governing permissions and limitations
1:6aa0635:  * under the License.
1:6aa0635:  */
1:6aa0635: package org.apache.aries.versioning.utils;
1:6aa0635: 
1:f9b43fb: 
1:9822203: public class FieldDeclaration extends GenericDeclaration {
1:9822203:     private final String desc;
1:9822203:     private final Object value;
1:6aa0635: 
1:9822203:     FieldDeclaration(int access, String name, String desc, String signature, Object value) {
1:9822203:         super(access, name, signature);
1:9822203:         this.desc = desc;
1:9822203:         this.value = value;
1:9822203:     }
1:6aa0635: 
1:9822203:     public String getDesc() {
1:9822203:         return desc;
1:9822203:     }
1:6aa0635: 
1:9822203:     public Object getValue() {
1:9822203:         return value;
1:9822203:     }
1:6aa0635: 
1:9822203:     @Override
1:9822203:     public int hashCode() {
1:9822203:         final int prime = 31;
1:9822203:         int result = 1;
1:9822203:         result = prime * result + ((getName() == null) ? 0 : getName().hashCode());
1:9822203:         return result;
1:9822203:     }
1:9822203: 
1:9822203:     @Override
1:9822203:     public boolean equals(Object obj) {
1:9822203:         if (this == obj) return true;
1:9822203:         if (getClass() != obj.getClass()) return false;
1:9822203:         FieldDeclaration other = (FieldDeclaration) obj;
1:9822203:         if (getName() == null) {
1:9822203:             if (other.getName() != null) return false;
1:9822203:         } else if (!getName().equals(other.getName())) return false;
1:9822203:         return true;
1:9822203:     }
1:6aa0635: 
1:f9b43fb: }
============================================================================
author:David Jencks
-------------------------------------------------------------------------------
commit:9822203
/////////////////////////////////////////////////////////////////////////
1: public class FieldDeclaration extends GenericDeclaration {
1:     private final String desc;
1:     private final Object value;
1:     FieldDeclaration(int access, String name, String desc, String signature, Object value) {
1:         super(access, name, signature);
1:         this.desc = desc;
1:         this.value = value;
1:     }
1:     public String getDesc() {
1:         return desc;
1:     }
1:     public Object getValue() {
1:         return value;
1:     }
1:     @Override
1:     public int hashCode() {
1:         final int prime = 31;
1:         int result = 1;
1:         result = prime * result + ((getName() == null) ? 0 : getName().hashCode());
1:         return result;
1:     }
1: 
1:     @Override
1:     public boolean equals(Object obj) {
1:         if (this == obj) return true;
1:         if (getClass() != obj.getClass()) return false;
1:         FieldDeclaration other = (FieldDeclaration) obj;
1:         if (getName() == null) {
1:             if (other.getName() != null) return false;
1:         } else if (!getName().equals(other.getName())) return false;
1:         return true;
1:     }
author:Emily Jiang
-------------------------------------------------------------------------------
commit:f9b43fb
/////////////////////////////////////////////////////////////////////////
1: 
0:   private final String desc;
0:   private final Object value;
0:   FieldDeclaration(int access, String name, String desc, String signature, Object value) {
0:     this.value = value;
0:   public Object getValue() {
0:     return value;
1:   }
0:     int result = 1;
/////////////////////////////////////////////////////////////////////////
commit:6aa0635
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.versioning.utils;
1: 
1: 
0: public class FieldDeclaration extends GenericDeclaration
0: {
0:   private String desc;
0:   FieldDeclaration(int access, String name, String desc, String signature) {
0:     super(access, name, signature);
0:     this.desc = desc;
0:   }
1: 
0:   public String getDesc()
0:   {
0:     return desc;
0:   }
1: 
0:   @Override
0:   public int hashCode()
0:   {
0:     final int prime = 31;
0:     int result = super.hashCode();
0:     result = prime * result + ((getName()== null) ? 0 : getName().hashCode());
0:     result = prime * result + ((desc == null) ? 0 : desc.hashCode());
0:     result = prime * result + ((getSignature() == null) ? 0 : getSignature().hashCode());
0:     return result;
0:   }
1: 
0:   @Override
0:   public boolean equals(Object obj)
0:   {
0:     if (this == obj) return true;
0:     if (getClass() != obj.getClass()) return false;
0:     FieldDeclaration other = (FieldDeclaration) obj;
0:     if (getName() == null) {
0:       if (other.getName() != null) return false;
0:     } else if (!getName().equals(other.getName())) return false;
0:     if (desc == null) {
0:       if (other.desc != null) return false;
0:     } else if (!desc.equals(other.desc)) return false;
0:     if (getSignature() == null) {
0:       if (other.getSignature() != null) return false;
0:     } else if (!getSignature().equals(other.getSignature())) return false;
0:     return true;
0:   }
1: 
0: }
============================================================================