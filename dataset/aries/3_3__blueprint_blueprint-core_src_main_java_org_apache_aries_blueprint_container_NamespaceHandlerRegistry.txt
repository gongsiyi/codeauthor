1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
10:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:3b2c33b:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
3:3b2c33b:  */
1:6414875: package org.apache.aries.blueprint.container;
3:3b2c33b: 
1:f13c6ac: import java.net.URI;
1:f13c6ac: import java.util.Set;
1:3b2c33b: 
1:f13c6ac: import javax.xml.validation.Schema;
1:3b2c33b: 
1:09a7647: import org.apache.aries.blueprint.parser.NamespaceHandlerSet;
1:3b2c33b: import org.osgi.framework.Bundle;
1:3b2c33b: 
4:3b2c33b: /**
1:f13c6ac:  * Registry of NamespaceHandler.
1:3b2c33b:  *
1:76b662a:  * @version $Rev$, $Date$
1:3b2c33b:  */
1:f13c6ac: public interface NamespaceHandlerRegistry {
1:3b2c33b: 
1:3b2c33b:     /**
1:1d8c3ec:      * Retrieve the <code>NamespaceHandler</code> for the specified URI. Make sure
1:3b2c33b:      *
1:f13c6ac:      * @param uri the namespace identifying the namespace handler
1:3b2c33b:      * @param bundle the blueprint bundle to be checked for class space consistency
1:3b2c33b:      *
1:3b2c33b:      * @return a set of registered <code>NamespaceHandler</code>s compatible with the class space of the given bundle
1:3b2c33b:      */
1:3b2c33b:     NamespaceHandlerSet getNamespaceHandlers(Set<URI> uri, Bundle bundle);
1:3b2c33b: 
1:3b2c33b:     /**
1:f13c6ac:      * Destroy this registry
1:3b2c33b:      */
1:3b2c33b:     void destroy();
1:3b2c33b: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:09a7647
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.parser.NamespaceHandlerSet;
/////////////////////////////////////////////////////////////////////////
commit:1d8c3ec
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:      * Retrieve the <code>NamespaceHandler</code> for the specified URI. Make sure
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:76b662a
/////////////////////////////////////////////////////////////////////////
1:  * @version $Rev$, $Date$
commit:de68801
/////////////////////////////////////////////////////////////////////////
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.container;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.blueprint.NamespaceHandler;
/////////////////////////////////////////////////////////////////////////
0:      * @see NamespaceHandlerRegistry#addListener(org.apache.aries.blueprint.container.NamespaceHandlerRegistry.Listener)
0:      * @see NamespaceHandlerRegistry#removeListener(org.apache.aries.blueprint.container.NamespaceHandlerRegistry.Listener) 
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:3b2c33b
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.Bundle;
0: import org.osgi.framework.BundleContext;
/////////////////////////////////////////////////////////////////////////
1:      * @param bundle the blueprint bundle to be checked for class space consistency
1:      * @return a set of registered <code>NamespaceHandler</code>s compatible with the class space of the given bundle
1:     NamespaceHandlerSet getNamespaceHandlers(Set<URI> uri, Bundle bundle);
/////////////////////////////////////////////////////////////////////////
0:      * Interface used to managed a set of namespace handlers
1:      */
0:     public interface NamespaceHandlerSet {
1: 
0:         Set<URI> getNamespaces();
1: 
0:         boolean isComplete();
1: 
1:         /**
0:          * Retrieve the NamespaceHandler to use for the given namespace
1:          *
0:          * @return the NamespaceHandler to use or <code>null</code> if none is available at this time
1:          */
0:         NamespaceHandler getNamespaceHandler(URI namespace);
1: 
1:         /**
0:          * Obtain a schema to validate the XML for the given list of namespaces
1:          *
0:          * @return the schema to use to validate the XML
1:          */
0:         Schema getSchema() throws SAXException, IOException;
1: 
1:         /**
0:          * Add a new Listener to be called when namespace handlers are registerd or unregistered
1:          *
0:          * @param listener the listener to register
1:          */
0:         void addListener(Listener listener);
1: 
1:         /**
0:          * Remove a previously registered Listener
1:          *
0:          * @param listener the listener to unregister
1:          */
0:         void removeListener(Listener listener);
1: 
1:         /**
0:          * Destroy this handler set
1:          */
1:         void destroy();
1:     }
1: 
1:     /**
0:      * @see NamespaceHandlerSet#addListener(org.apache.aries.blueprint.container.NamespaceHandlerRegistry.Listener)
0:      * @see NamespaceHandlerSet#removeListener(org.apache.aries.blueprint.container.NamespaceHandlerRegistry.Listener) 
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
0:  */
0: package org.apache.geronimo.blueprint.container;
0: 
1: import java.net.URI;
1: import java.util.Set;
0: import java.io.IOException;
0: 
1: import javax.xml.validation.Schema;
0: 
0: import org.apache.geronimo.blueprint.NamespaceHandler;
0: import org.xml.sax.SAXException;
0: 
0: /**
1:  * Registry of NamespaceHandler.
1:  *
0:  * @author <a href="mailto:dev@geronimo.apache.org">Apache Geronimo Project</a>
0:  * @version $Rev: 760378 $, $Date: 2009-03-31 11:31:38 +0200 (Tue, 31 Mar 2009) $
0:  */
1: public interface NamespaceHandlerRegistry {
0: 
0:     /**
0:      * Retrieve the <code>NamespaceHandler</code> for the specified URI
1:      *
1:      * @param uri the namespace identifying the namespace handler
0:      * @return the registered <code>NamespaceHandler</code> or <code>null</code> if none has been registered for the given namespace
0:      */
0:     NamespaceHandler getNamespaceHandler(URI uri);
0: 
0:     /**
0:      * Add a new Listener to be called when namespace handlers are registerd or unregistered
1:      *
0:      * @param listener the listener to register
0:      */
0:     void addListener(Listener listener);
0: 
0:     /**
0:      * Remove a previously registered Listener
1:      *
0:      * @param listener the listener to unregister
0:      */
0:     void removeListener(Listener listener);
0: 
0:     /**
0:      * Obtain a schema to validate the XML for the given list of namespaces
1:      *
0:      * @param namespaces
0:      * @return
0:      */
0:     Schema getSchema(Set<URI> namespaces) throws SAXException, IOException;
0: 
0:     /**
1:      * Destroy this registry
0:      */
0:     void destroy();
0: 
0:     /**
0:      * Interface used to listen to registered or unregistered namespace handlers.
1:      *
0:      * @see NamespaceHandlerRegistry#addListener(org.apache.geronimo.blueprint.container.NamespaceHandlerRegistry.Listener)
0:      * @see NamespaceHandlerRegistry#removeListener(org.apache.geronimo.blueprint.container.NamespaceHandlerRegistry.Listener) 
0:      */
0:     public interface Listener {
0: 
0:         /**
0:          * Called when a NamespaceHandler has been registered for the specified URI.
1:          *
0:          * @param uri the URI of the newly registered namespace handler
0:          */
0:         void namespaceHandlerRegistered(URI uri);
0: 
0:         /**
0:          * Called when a NamespaceHandler has been unregistered for the specified URI.
1:          *
0:          * @param uri the URI of the newly unregistered namespace handler
0:          */
0:         void namespaceHandlerUnregistered(URI uri);
0: 
0:     }
0: }
============================================================================