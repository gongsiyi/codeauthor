1:bd98451: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:bd98451:  *  contributor license agreements.  See the NOTICE file distributed with
1:bd98451:  *  this work for additional information regarding copyright ownership.
1:bd98451:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:bd98451:  *  (the "License"); you may not use this file except in compliance with
1:bd98451:  *  the License.  You may obtain a copy of the License at
1:bd98451:  *
1:bd98451:  *     http://www.apache.org/licenses/LICENSE-2.0
1:bd98451:  *
1:bd98451:  *  Unless required by applicable law or agreed to in writing, software
1:bd98451:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:bd98451:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bd98451:  *  See the License for the specific language governing permissions and
1:bd98451:  *  limitations under the License.
1:bd98451:  */
1:bd98451: package org.apache.aries.transaction.itests;
1:bd98451: 
1:bd98451: import static junit.framework.Assert.assertEquals;
1:bd98451: 
1:bd98451: import java.sql.SQLException;
1:bd98451: 
1:bd98451: import javax.inject.Inject;
1:bd98451: 
1:bd98451: import org.apache.aries.transaction.test.TestBean;
1:bd98451: import org.junit.Test;
1:bd98451: import org.ops4j.pax.exam.util.Filter;
1:bd98451: 
1:bd98451: public class NotSupportedTest extends AbstractIntegrationTest {
1:bd98451:     @Inject
1:bd98451:     @Filter("(tranAttribute=NotSupported)")
1:bd98451:     TestBean nsBean;
1:bd98451: 
1:bd98451:     @Inject
1:bd98451:     @Filter("(tranAttribute=Required)")
1:bd98451:     TestBean rBean;
1:bd98451: 
1:bd98451:     /**
1:bd98451:      * The client transaction is suspended. So the delegate bean that mandates a transaction
1:bd98451:      * fails.
1:bd98451:      * @throws Exception
1:bd98451:      */
1:bd98451:     @Test
1:bd98451:     public void testNotSupported() throws Exception {
1:bd98451:         assertDelegateInsertFails();
1:bd98451:         clientTransaction = false;
1:bd98451:         assertDelegateInsertFails();
1:bd98451:     }
1:bd98451: 
1:bd98451:     @Test
1:bd98451:     public void testExceptionsDoNotAffectTransaction() throws Exception {
1:bd98451:         int initialRows = counter.countRows();
1:bd98451: 
1:bd98451:         tran.begin();
1:bd98451:         rBean.insertRow("testWithClientTranAndWithRuntimeException", 1, null);
1:bd98451:         try {
1:bd98451:             nsBean.throwApplicationException();
1:bd98451:         } catch (SQLException e) {
1:bd98451:             // Ignore expected
1:bd98451:         }
1:bd98451:         try {
1:bd98451:             nsBean.throwRuntimeException();
1:bd98451:         } catch (RuntimeException e) {
1:bd98451:             // Ignore expected
1:bd98451:         }
1:bd98451:         tran.commit();
1:bd98451: 
1:bd98451:         int finalRows = counter.countRows();
1:bd98451:         assertEquals("Added rows", 1, finalRows - initialRows);
1:bd98451: 
1:bd98451:     }
1:bd98451: 
1:bd98451:     @Override
1:bd98451:     protected TestBean getBean() {
1:bd98451:         return nsBean;
1:bd98451:     }
1:bd98451: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:bd98451
/////////////////////////////////////////////////////////////////////////
1: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.transaction.itests;
1: 
1: import static junit.framework.Assert.assertEquals;
1: 
1: import java.sql.SQLException;
1: 
1: import javax.inject.Inject;
1: 
1: import org.apache.aries.transaction.test.TestBean;
1: import org.junit.Test;
1: import org.ops4j.pax.exam.util.Filter;
1: 
1: public class NotSupportedTest extends AbstractIntegrationTest {
1:     @Inject
1:     @Filter("(tranAttribute=NotSupported)")
1:     TestBean nsBean;
1: 
1:     @Inject
1:     @Filter("(tranAttribute=Required)")
1:     TestBean rBean;
1: 
1:     /**
1:      * The client transaction is suspended. So the delegate bean that mandates a transaction
1:      * fails.
1:      * @throws Exception
1:      */
1:     @Test
1:     public void testNotSupported() throws Exception {
1:         assertDelegateInsertFails();
1:         clientTransaction = false;
1:         assertDelegateInsertFails();
1:     }
1: 
1:     @Test
1:     public void testExceptionsDoNotAffectTransaction() throws Exception {
1:         int initialRows = counter.countRows();
1: 
1:         tran.begin();
1:         rBean.insertRow("testWithClientTranAndWithRuntimeException", 1, null);
1:         try {
1:             nsBean.throwApplicationException();
1:         } catch (SQLException e) {
1:             // Ignore expected
1:         }
1:         try {
1:             nsBean.throwRuntimeException();
1:         } catch (RuntimeException e) {
1:             // Ignore expected
1:         }
1:         tran.commit();
1: 
1:         int finalRows = counter.countRows();
1:         assertEquals("Added rows", 1, finalRows - initialRows);
1: 
1:     }
1: 
1:     @Override
1:     protected TestBean getBean() {
1:         return nsBean;
1:     }
1: }
============================================================================