1:8914925: /*
1:8914925:  * Licensed to the Apache Software Foundation (ASF) under one
1:8914925:  * or more contributor license agreements.  See the NOTICE file
1:8914925:  * distributed with this work for additional information
1:8914925:  * regarding copyright ownership.  The ASF licenses this file
1:8914925:  * to you under the Apache License, Version 2.0 (the
1:8914925:  * "License"); you may not use this file except in compliance
1:8914925:  * with the License.  You may obtain a copy of the License at
1:8914925:  *
1:8914925:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8914925:  *
1:8914925:  * Unless required by applicable law or agreed to in writing,
1:8914925:  * software distributed under the License is distributed on an
1:8914925:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:8914925:  * KIND, either express or implied.  See the License for the
1:8914925:  * specific language governing permissions and limitations
1:8914925:  * under the License.
1:8914925:  */
1:8914925: package org.apache.aries.application; 
2:8914925: 
1:0e0fd84: import java.io.File;
1:b05ae71: import java.io.IOException;
1:0e0fd84: import java.io.OutputStream;
1:a5079e5: import java.util.Collection;
1:8914925: import java.util.List;
1:8914925: 
1:8914925: import org.osgi.framework.Version;
1:8914925: 
1:8914925: /**
1:43be66f:  * A representation of an APPLICATION.MF file. 
1:8914925:  *
1:8914925:  */
1:8914925: public interface ApplicationMetadata
1:8914925: {
1:8914925:   /**
1:8914925:    * get the value of the Application-SymbolicName header
1:8914925:    * @return the value of the Application-SymbolicName header
1:8914925:    */
1:8914925:   public String getApplicationSymbolicName();
1:8914925:   
1:8914925:   /**
1:8914925:    * get the value of the Application-Version header
1:8914925:    * @return the value of the Application-Version header
1:8914925:    */
1:8914925:   public Version getApplicationVersion();
1:8914925:   
1:8914925:   /**
1:8914925:    * get the name of the application
1:8914925:    * @return the name of the application
1:8914925:    */
1:8914925:   public String getApplicationName();
1:8914925:   /**
1:8914925:    * get the list of Application contents includes bundle name, 
1:8914925:    * version, directives and attributes
1:8914925:    * @return the list of the Application contents 
1:8914925:    */
1:8914925:   public List<Content> getApplicationContents();
1:8914925:   
1:8914925:   /**
1:8914925:    * get the value of the Export-Service header
1:8914925:    * @return the list of ServiceDeclaration
1:8914925:    */
1:8914925:   public List<ServiceDeclaration> getApplicationExportServices();
1:8914925:   
1:8914925:   /**
1:8914925:    * get the value of the Import-Service header
1:8914925:    * @return the list of ServiceDeclaration
1:8914925:    */
1:8914925:   public List<ServiceDeclaration> getApplicationImportServices();  
1:8914925:   
1:8914925:   /**
1:8914925:    * get the value of the Application-Scope, which is 
1:8914925:    * calculated from Application-SymbolicName and Application-Version
1:8914925:    * @return    the value of the AppScope
1:8914925:    */
1:8914925:   public String getApplicationScope();
1:0e0fd84:   
1:a5079e5:   /**
1:a5079e5:    * get the list of use-bundle content including bundle symbolic name and version range
1:7ceb4ac:    * @return the collection of use bundles.
1:a5079e5:    */
1:a5079e5:   public Collection<Content> getUseBundles();
1:a5079e5:   
1:43be66f:   /** 
1:43be66f:    * Persist this metadata. 
1:43be66f:    * @param f The file to store this metadata to
1:43be66f:    * @throws IOException
1:43be66f:    */
1:b05ae71:   public void store(File f) throws IOException;
1:43be66f:   
1:43be66f:   /** 
1:43be66f:    * Persist this metadata. 
1:43be66f:    * @param out The output stream to store this metadata to
1:43be66f:    * @throws IOException
1:43be66f:    */
1:b05ae71:   public void store(OutputStream out) throws IOException;
1:8914925: }
============================================================================
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:7ceb4ac
/////////////////////////////////////////////////////////////////////////
1:    * @return the collection of use bundles.
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:152f64a
/////////////////////////////////////////////////////////////////////////
commit:04e1814
/////////////////////////////////////////////////////////////////////////
0:  * @see <a href="http://aries.apache.org/applications.html">
0:  * http://aries.apache.org/applications.html</a>. 
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:a5079e5
/////////////////////////////////////////////////////////////////////////
1: import java.util.Collection;
/////////////////////////////////////////////////////////////////////////
1:   /**
1:    * get the list of use-bundle content including bundle symbolic name and version range
0:    * @return
1:    */
1:   public Collection<Content> getUseBundles();
1:   
commit:43be66f
/////////////////////////////////////////////////////////////////////////
1:  * A representation of an APPLICATION.MF file. 
0:  * @see <a href="http://incubator.apache.org/aries/applications.html">
0:  * http://incubator.apache.org/aries/applications.html</a>. 
/////////////////////////////////////////////////////////////////////////
1:   /** 
1:    * Persist this metadata. 
1:    * @param f The file to store this metadata to
1:    * @throws IOException
1:    */
1:   
1:   /** 
1:    * Persist this metadata. 
1:    * @param out The output stream to store this metadata to
1:    * @throws IOException
1:    */
commit:b05ae71
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
/////////////////////////////////////////////////////////////////////////
1:   public void store(File f) throws IOException;
1:   public void store(OutputStream out) throws IOException;
commit:0e0fd84
/////////////////////////////////////////////////////////////////////////
1: import java.io.File;
1: import java.io.OutputStream;
/////////////////////////////////////////////////////////////////////////
1:   
0:   /** Stores any changes to disk using this implementation's storage form */
0:   public void store(File f);
0:   public void store(OutputStream out);
commit:a20c83a
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:8914925
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.application; 
1: 
0: import java.io.File;
0: import java.io.IOException;
0: import java.io.OutputStream;
1: import java.util.List;
1: 
1: import org.osgi.framework.Version;
1: 
1: /**
0:  * this interface describes the Application.mf file
1:  *
1:  */
1: public interface ApplicationMetadata
1: {
1:   /**
1:    * get the value of the Application-SymbolicName header
1:    * @return the value of the Application-SymbolicName header
1:    */
1:   public String getApplicationSymbolicName();
1:   
1:   /**
1:    * get the value of the Application-Version header
1:    * @return the value of the Application-Version header
1:    */
1:   public Version getApplicationVersion();
1:   
1:   /**
1:    * get the name of the application
1:    * @return the name of the application
1:    */
1:   public String getApplicationName();
1:   /**
1:    * get the list of Application contents includes bundle name, 
1:    * version, directives and attributes
1:    * @return the list of the Application contents 
1:    */
1:   public List<Content> getApplicationContents();
1:   
1:   /**
1:    * get the value of the Export-Service header
1:    * @return the list of ServiceDeclaration
1:    */
1:   public List<ServiceDeclaration> getApplicationExportServices();
1:   
1:   /**
1:    * get the value of the Import-Service header
1:    * @return the list of ServiceDeclaration
1:    */
1:   public List<ServiceDeclaration> getApplicationImportServices();  
1:   
1:   /**
1:    * get the value of the Application-Scope, which is 
1:    * calculated from Application-SymbolicName and Application-Version
1:    * @return    the value of the AppScope
1:    */
1:   public String getApplicationScope();
1:   
0:   /** Stores any changes to disk using this implementation's storage form */
0:   public void store(File f) throws IOException;
0:   public void store(OutputStream out) throws IOException;
1: }
author:Ian Robinson
-------------------------------------------------------------------------------
commit:a73aaae
/////////////////////////////////////////////////////////////////////////
0: package org.apache.aries.application; 
author:Graham Charters
-------------------------------------------------------------------------------
commit:d77c519
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: package org.apache.aries.application;
0: 
0: import java.util.List;
0: 
0: import org.osgi.framework.Version;
0: 
0: /**
0:  * this interface describes the Application.mf file
0:  *
0:  */
0: public interface ApplicationMetadata
0: {
0:   /**
0:    * get the value of the Application-SymbolicName header
0:    * @return the value of the Application-SymbolicName header
0:    */
0:   public String getApplicationSymbolicName();
0:   
0:   /**
0:    * get the value of the Application-Version header
0:    * @return the value of the Application-Version header
0:    */
0:   public Version getApplicationVersion();
0:   
0:   /**
0:    * get the name of the application
0:    * @return the name of the application
0:    */
0:   public String getApplicationName();
0:   /**
0:    * get the list of Application contents includes bundle name, 
0:    * version, directives and attributes
0:    * @return the list of the Application contents 
0:    */
0:   public List<Content> getApplicationContents();
0:   
0:   /**
0:    * get the value of the Export-Service header
0:    * @return the list of ServiceDeclaration
0:    */
0:   public List<ServiceDeclaration> getApplicationExportServices();
0:   
0:   /**
0:    * get the value of the Import-Service header
0:    * @return the list of ServiceDeclaration
0:    */
0:   public List<ServiceDeclaration> getApplicationImportServices();  
0:   
0:   /**
0:    * get the value of the Application-Scope, which is 
0:    * calculated from Application-SymbolicName and Application-Version
0:    * @return    the value of the AppScope
0:    */
0:   public String getApplicationScope();
0: }
============================================================================