1:c3177de: /*
1:c3177de: * Licensed to the Apache Software Foundation (ASF) under one
1:c3177de: * or more contributor license agreements.  See the NOTICE file
1:c3177de: * distributed with this work for additional information
1:c3177de: * regarding copyright ownership.  The ASF licenses this file
1:c3177de: * to you under the Apache License, Version 2.0 (the
1:c3177de: * "License"); you may not use this file except in compliance
1:c3177de: * with the License.  You may obtain a copy of the License at
1:c3177de: *
1:c3177de: *   http://www.apache.org/licenses/LICENSE-2.0
1:c3177de: *
1:c3177de: * Unless required by applicable law or agreed to in writing,
1:c3177de: * software distributed under the License is distributed on an
1:c3177de: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:c3177de: * KIND, either express or implied.  See the License for the
1:c3177de: * specific language governing permissions and limitations
1:c3177de: * under the License.
1:c3177de: */
1:c3177de: package org.apache.aries.versioning.tests;
1:c3177de: 
1:c3177de: import static org.junit.Assert.assertTrue;
1:c3177de: import static org.junit.Assert.fail;
1:c3177de: 
1:c3177de: import java.io.File;
1:c3177de: import java.io.IOException;
1:c3177de: import java.net.URL;
1:c3177de: import java.net.URLClassLoader;
1:c3177de: import java.util.ArrayList;
1:c3177de: import java.util.List;
1:c3177de: 
1:c3177de: import org.apache.aries.util.manifest.BundleManifest;
1:c3177de: import org.apache.aries.versioning.check.BundleCompatibility;
1:c3177de: import org.apache.aries.versioning.check.BundleInfo;
1:c3177de: import org.junit.Test;
1:c3177de: 
1:c3177de: 
1:c3177de: /**
1:c3177de:  * Test that results can be excluded.
1:c3177de:  */
1:c3177de: public class FilterResultsTest {
1:c3177de: 
1:c3177de:   /**
1:c3177de:    * Test an error is excluded when required. This test uses two bundles each containing the same
1:c3177de:    * class, where the later versioned class has had a method removed.
1:c3177de:    */
1:c3177de:     @Test
1:c3177de:     public void testApiMethodErrorExcluded() {
1:c3177de:    
1:c3177de:       try {
1:c3177de:         File oldBundleFile = new File("../src/test/resources/api_1.0.0.jar");
1:c3177de:         BundleInfo oldBundle = new BundleInfo(BundleManifest.fromBundle(oldBundleFile), oldBundleFile);
1:c3177de:   
1:c3177de:         File newBundleFile = new File("../src/test/resources/api_1.0.1.jar");
1:c3177de:         BundleInfo newBundle = new BundleInfo(BundleManifest.fromBundle(newBundleFile), newBundleFile);
1:c3177de:         
1:c3177de:         String bundleSymbolicName = newBundle.getBundleManifest().getSymbolicName();
1:c3177de:         URLClassLoader oldClassLoader = new URLClassLoader(new URL[] {oldBundle.getBundle().toURI()
1:c3177de:             .toURL()});
1:c3177de:         URLClassLoader newClassLoader = new URLClassLoader(new URL[] {newBundle.getBundle().toURI()
1:c3177de:             .toURL()});
1:c3177de:   
1:c3177de:         List<String> excludes = new ArrayList<String>();
1:c3177de:         excludes.add("method void methodToBeExcludedFrom() has been deleted");
1:c3177de:         
1:c3177de:         BundleCompatibility bundleCompatibility = new BundleCompatibility(bundleSymbolicName,
1:c3177de:             newBundle, oldBundle,
1:c3177de:             oldClassLoader,
1:c3177de:             newClassLoader,
1:c3177de:             excludes);
1:c3177de:         
1:c3177de:         bundleCompatibility.invoke();
1:c3177de:         String bundleElement = bundleCompatibility.getBundleElement();
1:c3177de:         String pkgElement = bundleCompatibility.getPkgElements().toString();
1:c3177de: 
1:c3177de:         assertTrue("Unexpected bundle versioning issue", bundleElement==null);
1:c3177de:         assertTrue("Unexpected package versioning issue", pkgElement.trim().length() == 0);
1:c3177de:       
1:c3177de:       } catch (IOException e) {
1:c3177de:         fail("Unexpected IOException " + e);
1:c3177de:       }
1:c3177de:     }
1:c3177de: }
============================================================================
author:Jeremy Hughes
-------------------------------------------------------------------------------
commit:c3177de
/////////////////////////////////////////////////////////////////////////
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
1: *   http://www.apache.org/licenses/LICENSE-2.0
1: *
1: * Unless required by applicable law or agreed to in writing,
1: * software distributed under the License is distributed on an
1: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1: * KIND, either express or implied.  See the License for the
1: * specific language governing permissions and limitations
1: * under the License.
1: */
1: package org.apache.aries.versioning.tests;
1: 
1: import static org.junit.Assert.assertTrue;
1: import static org.junit.Assert.fail;
1: 
1: import java.io.File;
1: import java.io.IOException;
1: import java.net.URL;
1: import java.net.URLClassLoader;
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: import org.apache.aries.util.manifest.BundleManifest;
1: import org.apache.aries.versioning.check.BundleCompatibility;
1: import org.apache.aries.versioning.check.BundleInfo;
1: import org.junit.Test;
1: 
1: 
1: /**
1:  * Test that results can be excluded.
1:  */
1: public class FilterResultsTest {
1: 
1:   /**
1:    * Test an error is excluded when required. This test uses two bundles each containing the same
1:    * class, where the later versioned class has had a method removed.
1:    */
1:     @Test
1:     public void testApiMethodErrorExcluded() {
1:    
1:       try {
1:         File oldBundleFile = new File("../src/test/resources/api_1.0.0.jar");
1:         BundleInfo oldBundle = new BundleInfo(BundleManifest.fromBundle(oldBundleFile), oldBundleFile);
1:   
1:         File newBundleFile = new File("../src/test/resources/api_1.0.1.jar");
1:         BundleInfo newBundle = new BundleInfo(BundleManifest.fromBundle(newBundleFile), newBundleFile);
1:         
1:         String bundleSymbolicName = newBundle.getBundleManifest().getSymbolicName();
1:         URLClassLoader oldClassLoader = new URLClassLoader(new URL[] {oldBundle.getBundle().toURI()
1:             .toURL()});
1:         URLClassLoader newClassLoader = new URLClassLoader(new URL[] {newBundle.getBundle().toURI()
1:             .toURL()});
1:   
1:         List<String> excludes = new ArrayList<String>();
1:         excludes.add("method void methodToBeExcludedFrom() has been deleted");
1:         
1:         BundleCompatibility bundleCompatibility = new BundleCompatibility(bundleSymbolicName,
1:             newBundle, oldBundle,
1:             oldClassLoader,
1:             newClassLoader,
1:             excludes);
1:         
1:         bundleCompatibility.invoke();
1:         String bundleElement = bundleCompatibility.getBundleElement();
1:         String pkgElement = bundleCompatibility.getPkgElements().toString();
1: 
1:         assertTrue("Unexpected bundle versioning issue", bundleElement==null);
1:         assertTrue("Unexpected package versioning issue", pkgElement.trim().length() == 0);
1:       
1:       } catch (IOException e) {
1:         fail("Unexpected IOException " + e);
1:       }
1:     }
1: }
============================================================================