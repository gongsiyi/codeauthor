1:1cfd24a: /*
1:1cfd24a:  * Licensed to the Apache Software Foundation (ASF) under one
1:1cfd24a:  * or more contributor license agreements.  See the NOTICE file
1:1cfd24a:  * distributed with this work for additional information
1:1cfd24a:  * regarding copyright ownership.  The ASF licenses this file
1:1cfd24a:  * to you under the Apache License, Version 2.0 (the
1:1cfd24a:  * "License"); you may not use this file except in compliance
1:1cfd24a:  * with the License.  You may obtain a copy of the License at
1:1cfd24a:  *
1:1cfd24a:  *   http://www.apache.org/licenses/LICENSE-2.0
1:1cfd24a:  *
1:1cfd24a:  * Unless required by applicable law or agreed to in writing,
1:1cfd24a:  * software distributed under the License is distributed on an
1:1cfd24a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:1cfd24a:  * KIND, either express or implied.  See the License for the
1:1cfd24a:  * specific language governing permissions and limitations
1:1cfd24a:  * under the License.
1:1cfd24a:  */
1:1cfd24a: package org.apache.aries.blueprint.di;
1:1cfd24a: 
1:1cfd24a: import java.util.List;
1:1cfd24a: 
1:09a7647: import org.apache.aries.blueprint.services.ExtendedBlueprintContainer;
1:1cfd24a: import org.apache.aries.blueprint.ext.ComponentFactoryMetadata;
1:1cfd24a: import org.osgi.service.blueprint.container.ComponentDefinitionException;
1:1cfd24a: 
1:1cfd24a: /**
1:1cfd24a:  * Pass-through recipe that allows custom bean manager (represented by a ComponentFactoryMetadata instance)
1:1cfd24a:  * to fit into the container lifecycle.
1:1cfd24a:  * 
1:1cfd24a:  * @param <T>
1:1cfd24a:  */
1:1cfd24a: public class ComponentFactoryRecipe<T extends ComponentFactoryMetadata> extends AbstractRecipe {
1:1cfd24a:     private T metadata;
1:1cfd24a:     private List<Recipe> dependencies;
1:1cfd24a:     
1:1cfd24a:     public ComponentFactoryRecipe(String name, T metadata, 
1:1cfd24a:             ExtendedBlueprintContainer container, List<Recipe> dependencies) {
1:1cfd24a:         super(name);
1:1cfd24a:         this.metadata = metadata;
1:1cfd24a:         this.dependencies = dependencies;
1:1cfd24a:         metadata.init(container);
1:1cfd24a:     }
1:1cfd24a: 
1:1cfd24a:     @Override
1:1cfd24a:     protected Object internalCreate() throws ComponentDefinitionException {
1:1cfd24a:         return metadata.create();
1:1cfd24a:     }
1:1cfd24a: 
1:1cfd24a:     public List<Recipe> getDependencies() {
1:1cfd24a:         return dependencies;
1:1cfd24a:     }
1:1cfd24a: 
1:1cfd24a:     @Override 
1:1cfd24a:     public void destroy(Object instance) {
1:1cfd24a:         metadata.destroy(instance);
1:1cfd24a:     }
1:1cfd24a:     
1:1cfd24a:     protected T getMetadata() {
1:1cfd24a:         return metadata;
1:1cfd24a:     }
1:1cfd24a: 
1:1cfd24a: }
============================================================================
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:09a7647
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.blueprint.services.ExtendedBlueprintContainer;
commit:1cfd24a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.di;
1: 
1: import java.util.List;
1: 
0: import org.apache.aries.blueprint.ExtendedBlueprintContainer;
1: import org.apache.aries.blueprint.ext.ComponentFactoryMetadata;
1: import org.osgi.service.blueprint.container.ComponentDefinitionException;
1: 
1: /**
1:  * Pass-through recipe that allows custom bean manager (represented by a ComponentFactoryMetadata instance)
1:  * to fit into the container lifecycle.
1:  * 
1:  * @param <T>
1:  */
1: public class ComponentFactoryRecipe<T extends ComponentFactoryMetadata> extends AbstractRecipe {
1:     private T metadata;
1:     private List<Recipe> dependencies;
1:     
1:     public ComponentFactoryRecipe(String name, T metadata, 
1:             ExtendedBlueprintContainer container, List<Recipe> dependencies) {
1:         super(name);
1:         this.metadata = metadata;
1:         this.dependencies = dependencies;
1:         metadata.init(container);
1:     }
1: 
1:     @Override
1:     protected Object internalCreate() throws ComponentDefinitionException {
1:         return metadata.create();
1:     }
1: 
1:     public List<Recipe> getDependencies() {
1:         return dependencies;
1:     }
1: 
1:     @Override 
1:     public void destroy(Object instance) {
1:         metadata.destroy(instance);
1:     }
1:     
1:     protected T getMetadata() {
1:         return metadata;
1:     }
1: 
1: }
============================================================================