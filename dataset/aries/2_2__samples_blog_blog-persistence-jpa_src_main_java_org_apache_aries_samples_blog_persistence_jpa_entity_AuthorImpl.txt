1:5eeafa4: /**
1:5eeafa4:  * Licensed to the Apache Software Foundation (ASF) under one
1:5eeafa4:  * or more contributor license agreements.  See the NOTICE file
1:5eeafa4:  * distributed with this work for additional information
1:5eeafa4:  * regarding copyright ownership.  The ASF licenses this file
1:5eeafa4:  * to you under the Apache License, Version 2.0 (the
1:5eeafa4:  * "License"); you may not use this file except in compliance
1:5eeafa4:  * with the License.  You may obtain a copy of the License at
1:5eeafa4:  *
1:5eeafa4:  *   http://www.apache.org/licenses/LICENSE-2.0
1:5eeafa4:  *
1:5eeafa4:  * Unless required by applicable law or agreed to in writing,
1:5eeafa4:  * software distributed under the License is distributed on an
1:5eeafa4:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:5eeafa4:  * KIND, either express or implied.  See the License for the
1:5eeafa4:  * specific language governing permissions and limitations
1:5eeafa4:  * under the License.
1:5eeafa4:  */
1:c887046: package org.apache.aries.samples.blog.persistence.jpa.entity;
1:5eeafa4: 
1:5eeafa4: 
1:5eeafa4: import java.util.Date;
1:5eeafa4: import java.util.List;
1:5eeafa4: 
1:5eeafa4: import javax.persistence.CascadeType;
1:5eeafa4: import javax.persistence.Column;
1:5eeafa4: import javax.persistence.Entity;
1:5eeafa4: import javax.persistence.FetchType;
1:5eeafa4: import javax.persistence.Id;
1:5eeafa4: import javax.persistence.OneToMany;
1:5eeafa4: import javax.persistence.OrderBy;
1:5eeafa4: import javax.persistence.Table;
1:5eeafa4: 
1:380a6c0: import org.apache.aries.samples.blog.api.persistence.Author;
1:5eeafa4: 
1:5eeafa4: /**
1:5eeafa4:  * This class represents a blog post Author
1:5eeafa4:  */
1:5eeafa4: 
1:5eeafa4: @Entity(name = "AUTHOR")
1:5eeafa4: @Table(name = "AUTHOR")
1:5eeafa4: public class AuthorImpl implements Author
1:5eeafa4: {
1:5eeafa4:   /** The author's email address */
1:5eeafa4:   @Id
1:e0c0819:   @Column(nullable = false)
1:5eeafa4:   private String email;
1:5eeafa4:   
1:5eeafa4:   /** The author's full name */
1:5eeafa4:   private String name;
1:5eeafa4:   /** The display name for this author */
1:5eeafa4:   private String displayName;
1:5eeafa4:   /** A short bio for this author */
1:5eeafa4:   private String bio;  
1:5eeafa4:   /** The Author's date of birth */
1:5eeafa4:   private Date dob;
1:5eeafa4: 
1:5eeafa4:   /** The blog entries posted by this user */
1:5eeafa4:   @OneToMany(cascade = {CascadeType.REMOVE}, fetch = FetchType.EAGER)
1:5eeafa4:   @OrderBy("publishDate DESC")
1:5eeafa4:   private List<EntryImpl> posts;
1:5eeafa4: 
1:5eeafa4:   /** Get the author's email address */
1:5eeafa4:   public String getEmail()
1:5eeafa4:   {
1:5eeafa4:     return email;
1:5eeafa4:   }
1:5eeafa4: 
1:5eeafa4:   /** Get the author's full name */
1:5eeafa4:   public String getName()
1:5eeafa4:   {
1:5eeafa4:     return name;
1:5eeafa4:   } 
1:5eeafa4:   
1:5eeafa4:   /** Get the author's displayed name */
1:5eeafa4:   public String getDisplayName()
1:5eeafa4:   {
1:5eeafa4:     return displayName;
1:5eeafa4:   }
1:5eeafa4: 
1:5eeafa4:   /** Get the author's biographical information */
1:5eeafa4:   public String getBio()
1:5eeafa4:   {
1:5eeafa4:     return bio;
1:5eeafa4:   }
1:5eeafa4: 
1:5eeafa4:   /** Get the author's date of birth */
1:5eeafa4:   public Date getDob()
1:5eeafa4:   {
1:5eeafa4:     return dob;
1:5eeafa4:   } 
1:5eeafa4: 
1:5eeafa4:   /** Get the author's blog posts */
1:5eeafa4:   public List<EntryImpl> getEntries()
1:5eeafa4:   {
1:5eeafa4:     return posts;
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4:   // Set methods are not defined in the interface
1:5eeafa4:   
1:5eeafa4:   /** Set the author's email address */
1:5eeafa4:   public void setEmail(String email)
1:5eeafa4:   {
1:5eeafa4:     this.email = email;
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4:   /** Set the author's full name */
1:5eeafa4:   public void setName(String name)
1:5eeafa4:   {
1:5eeafa4:     this.name = name;
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4:   /** Set the author's displayed name */
1:5eeafa4:   public void setDisplayName(String displayName)
1:5eeafa4:   {
1:5eeafa4:     this.displayName = displayName;
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4:   /** Set the author's biographical information */
1:5eeafa4:   public void setBio(String bio)
1:5eeafa4:   {
1:5eeafa4:     this.bio = bio;
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4:   /** Set the author's date of birth */
1:5eeafa4:   public void setDob(Date dob)
1:5eeafa4:   {
1:5eeafa4:     this.dob = dob;
1:5eeafa4:   }
1:5eeafa4: 
1:5eeafa4:   /** Update  the author's blog posts */
1:5eeafa4:   public void updateEntries(EntryImpl b)
1:5eeafa4:   {
1:5eeafa4:     this.posts.add(b);
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4:   /** set  the author's blog posts */
1:5eeafa4:   public void setEntries(List<EntryImpl> lb)
1:5eeafa4:   {
1:5eeafa4:     this.posts = lb;
1:5eeafa4:   }
1:5eeafa4:   
1:5eeafa4: }
============================================================================
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:e0c0819
/////////////////////////////////////////////////////////////////////////
1:   @Column(nullable = false)
commit:afa98ec
commit:3ae61e4
commit:5eeafa4
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.samples.blog.persistence.entity;
1: 
1: 
1: import java.util.Date;
1: import java.util.List;
1: 
1: import javax.persistence.CascadeType;
1: import javax.persistence.Column;
1: import javax.persistence.Entity;
1: import javax.persistence.FetchType;
1: import javax.persistence.Id;
1: import javax.persistence.OneToMany;
1: import javax.persistence.OrderBy;
1: import javax.persistence.Table;
1: 
0: import org.apache.aries.samples.blog.persistence.api.Author;
1: 
1: /**
1:  * This class represents a blog post Author
1:  */
1: 
1: @Entity(name = "AUTHOR")
1: @Table(name = "AUTHOR")
1: public class AuthorImpl implements Author
1: {
1:   /** The author's email address */
1:   @Id
0:   @Column(nullable = false, unique = true)
1:   private String email;
1:   
1:   /** The author's full name */
1:   private String name;
1:   /** The display name for this author */
1:   private String displayName;
1:   /** A short bio for this author */
1:   private String bio;  
1:   /** The Author's date of birth */
1:   private Date dob;
1: 
1:   /** The blog entries posted by this user */
1:   @OneToMany(cascade = {CascadeType.REMOVE}, fetch = FetchType.EAGER)
1:   @OrderBy("publishDate DESC")
1:   private List<EntryImpl> posts;
1: 
1:   /** Get the author's email address */
1:   public String getEmail()
1:   {
1:     return email;
1:   }
1: 
1:   /** Get the author's full name */
1:   public String getName()
1:   {
1:     return name;
1:   } 
1:   
1:   /** Get the author's displayed name */
1:   public String getDisplayName()
1:   {
1:     return displayName;
1:   }
1: 
1:   /** Get the author's biographical information */
1:   public String getBio()
1:   {
1:     return bio;
1:   }
1: 
1:   /** Get the author's date of birth */
1:   public Date getDob()
1:   {
1:     return dob;
1:   } 
1: 
1:   /** Get the author's blog posts */
1:   public List<EntryImpl> getEntries()
1:   {
1:     return posts;
1:   }
1:   
1:   // Set methods are not defined in the interface
1:   
1:   /** Set the author's email address */
1:   public void setEmail(String email)
1:   {
1:     this.email = email;
1:   }
1:   
1:   /** Set the author's full name */
1:   public void setName(String name)
1:   {
1:     this.name = name;
1:   }
1:   
1:   /** Set the author's displayed name */
1:   public void setDisplayName(String displayName)
1:   {
1:     this.displayName = displayName;
1:   }
1:   
1:   /** Set the author's biographical information */
1:   public void setBio(String bio)
1:   {
1:     this.bio = bio;
1:   }
1:   
1:   /** Set the author's date of birth */
1:   public void setDob(Date dob)
1:   {
1:     this.dob = dob;
1:   }
1: 
1:   /** Update  the author's blog posts */
1:   public void updateEntries(EntryImpl b)
1:   {
1:     this.posts.add(b);
1:   }
1:   
1:   /** set  the author's blog posts */
1:   public void setEntries(List<EntryImpl> lb)
1:   {
1:     this.posts = lb;
1:   }
1:   
1: }
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:c887046
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.blog.persistence.jpa.entity;
commit:380a6c0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.blog.api.persistence.Author;
commit:e0beeec
/////////////////////////////////////////////////////////////////////////
0: import org.apache.aries.samples.blog.api.persistence.api.Author;
============================================================================