1:76b662a: /**
1:76b662a:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:76b662a:  *  contributor license agreements.  See the NOTICE file distributed with
1:76b662a:  *  this work for additional information regarding copyright ownership.
1:76b662a:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:76b662a:  *  (the "License"); you may not use this file except in compliance with
1:76b662a:  *  the License.  You may obtain a copy of the License at
1:76b662a:  *
1:76b662a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:76b662a:  *
1:76b662a:  *  Unless required by applicable law or agreed to in writing, software
1:76b662a:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:76b662a:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:76b662a:  *  See the License for the specific language governing permissions and
1:76b662a:  *  limitations under the License.
1:76b662a:  */
1:76b662a: package org.apache.aries.blueprint.testbundlea;
1:76b662a: 
1:76b662a: import org.apache.aries.blueprint.BeanProcessor;
1:76b662a: import org.osgi.service.blueprint.reflect.BeanMetadata;
1:76b662a: 
1:76b662a: public class BeanProcessorTest implements BeanProcessor {
1:76b662a:     
1:76b662a:     public Object beforeInit(Object bean, String beanName,
1:76b662a:             BeanCreator beanCreator, BeanMetadata beanData) {
1:76b662a:         if(bean instanceof ProcessableBean){
1:76b662a:             ProcessableBean pb = (ProcessableBean)bean;
1:76b662a:             pb.processBeforeInit(this);
1:76b662a:         }
1:76b662a:         return bean;
1:76b662a:     }
1:76b662a:     public Object afterInit(Object bean, String beanName,
1:76b662a:             BeanCreator beanCreator, BeanMetadata beanData) {
1:76b662a:         if(bean instanceof ProcessableBean){
1:76b662a:             ((ProcessableBean)bean).processAfterInit(this);
1:76b662a:         }
1:76b662a:         return bean;
1:76b662a:     }
1:76b662a:     public void beforeDestroy(Object bean, String beanName) {
1:76b662a:         if(bean instanceof ProcessableBean){
1:76b662a:             ((ProcessableBean)bean).processBeforeDestroy(this);
1:76b662a:         }
1:76b662a:     }
1:76b662a:     public void afterDestroy(Object bean, String beanName) {
1:76b662a:         if(bean instanceof ProcessableBean){
1:76b662a:             ((ProcessableBean)bean).processAfterDestroy(this);
1:76b662a:         }
1:76b662a:     }
9:4f67549: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:76b662a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.testbundlea;
1: 
1: import org.apache.aries.blueprint.BeanProcessor;
1: import org.osgi.service.blueprint.reflect.BeanMetadata;
1: 
1: public class BeanProcessorTest implements BeanProcessor {
1:     
1:     public Object beforeInit(Object bean, String beanName,
1:             BeanCreator beanCreator, BeanMetadata beanData) {
1:         if(bean instanceof ProcessableBean){
1:             ProcessableBean pb = (ProcessableBean)bean;
1:             pb.processBeforeInit(this);
1:         }
1:         return bean;
1:     }
1:     public Object afterInit(Object bean, String beanName,
1:             BeanCreator beanCreator, BeanMetadata beanData) {
1:         if(bean instanceof ProcessableBean){
1:             ((ProcessableBean)bean).processAfterInit(this);
1:         }
1:         return bean;
1:     }
1:     public void beforeDestroy(Object bean, String beanName) {
1:         if(bean instanceof ProcessableBean){
1:             ((ProcessableBean)bean).processBeforeDestroy(this);
1:         }
1:     }
1:     public void afterDestroy(Object bean, String beanName) {
1:         if(bean instanceof ProcessableBean){
1:             ((ProcessableBean)bean).processAfterDestroy(this);
1:         }
1:     }
author:Andrew Osborne
-------------------------------------------------------------------------------
commit:4f67549
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *  Licensed to the Apache Software Foundation (ASF) under one or more
0:  *  contributor license agreements.  See the NOTICE file distributed with
0:  *  this work for additional information regarding copyright ownership.
0:  *  The ASF licenses this file to You under the Apache License, Version 2.0
0:  *  (the "License"); you may not use this file except in compliance with
0:  *  the License.  You may obtain a copy of the License at
0:  *
0:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  *  Unless required by applicable law or agreed to in writing, software
0:  *  distributed under the License is distributed on an "AS IS" BASIS,
0:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  *  See the License for the specific language governing permissions and
0:  *  limitations under the License.
0:  */
0: package org.apache.aries.blueprint.testbundlea;
0: 
0: import org.apache.aries.blueprint.BeanProcessor;
0: import org.osgi.service.blueprint.reflect.BeanMetadata;
0: 
0: public class BeanProcessorTest implements BeanProcessor {
0:     
0:     public Object beforeInit(Object bean, String beanName,
0:             BeanCreator beanCreator, BeanMetadata beanData) {
0:         if(bean instanceof ProcessableBean){
0:             ProcessableBean pb = (ProcessableBean)bean;
0:             pb.processBeforeInit(this);
1:         }
0:         return bean;
1:     }
0:     public Object afterInit(Object bean, String beanName,
0:             BeanCreator beanCreator, BeanMetadata beanData) {
0:         if(bean instanceof ProcessableBean){
0:             ((ProcessableBean)bean).processAfterInit(this);
1:         }
0:         return bean;
1:     }
0:     public void beforeDestroy(Object bean, String beanName) {
0:         if(bean instanceof ProcessableBean){
0:             ((ProcessableBean)bean).processBeforeDestroy(this);
1:         }
1:     }
0:     public void afterDestroy(Object bean, String beanName) {
0:         if(bean instanceof ProcessableBean){
0:             ((ProcessableBean)bean).processAfterDestroy(this);
1:         }
1:     }
1: }
============================================================================