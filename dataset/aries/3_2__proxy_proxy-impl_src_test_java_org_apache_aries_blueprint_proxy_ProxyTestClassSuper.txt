1:6a4e3c8: /*
1:6a4e3c8:  * Licensed to the Apache Software Foundation (ASF) under one
1:6a4e3c8:  * or more contributor license agreements.  See the NOTICE file
1:6a4e3c8:  * distributed with this work for additional information
1:6a4e3c8:  * regarding copyright ownership.  The ASF licenses this file
1:6a4e3c8:  * to you under the Apache License, Version 2.0 (the
1:6a4e3c8:  * "License"); you may not use this file except in compliance
1:6a4e3c8:  * with the License.  You may obtain a copy of the License at
1:6a4e3c8:  *
1:6a4e3c8:  *   http://www.apache.org/licenses/LICENSE-2.0
1:6a4e3c8:  *
1:6a4e3c8:  * Unless required by applicable law or agreed to in writing,
1:6a4e3c8:  * software distributed under the License is distributed on an
1:6a4e3c8:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6a4e3c8:  * KIND, either express or implied.  See the License for the
1:6a4e3c8:  * specific language governing permissions and limitations
1:6a4e3c8:  * under the License.
1:6a4e3c8:  */
1:6a4e3c8: package org.apache.aries.blueprint.proxy;
2:6a4e3c8: 
1:6a4e3c8: public class ProxyTestClassSuper
1:6a4e3c8: {
1:96d4e06:   static {
1:96d4e06:     System.out.println("The time is: " + System.currentTimeMillis());
1:96d4e06:   }
1:96d4e06:   
1:6a4e3c8:   public void bMethod()
1:6a4e3c8:   {
1:6a4e3c8:     aPrivateMethod();
1:6a4e3c8:   }
1:96d4e06: 
1:6a4e3c8:   protected void bProMethod()
1:6a4e3c8:   {
1:6a4e3c8: 
1:6a4e3c8:   }
1:6a4e3c8: 
1:6a4e3c8:   void bDefMethod()
1:6a4e3c8:   {
1:6a4e3c8: 
1:6a4e3c8:   }
1:6a4e3c8: 
1:6a4e3c8:   private void aPrivateMethod()
1:6a4e3c8:   {
1:6a4e3c8: 
1:6a4e3c8:   }
1:6a4e3c8:   
1:96d4e06:   public Object getTargetObject() {
1:96d4e06:     return null;
1:96d4e06:   }
1:96d4e06:   
1:96d4e06:   private void doTarget() {
1:96d4e06:     Object o = getTargetObject();
1:96d4e06:     if(this != o)
1:96d4e06:       ((ProxyTestClassSuper)o).doTarget();
1:96d4e06:   }
1:6a4e3c8: 
1:6a4e3c8: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:96d4e06
/////////////////////////////////////////////////////////////////////////
1:   static {
1:     System.out.println("The time is: " + System.currentTimeMillis());
1:   }
1:   
/////////////////////////////////////////////////////////////////////////
1:   
1:   public Object getTargetObject() {
1:     return null;
1:   }
1:   
1:   private void doTarget() {
1:     Object o = getTargetObject();
1:     if(this != o)
1:       ((ProxyTestClassSuper)o).doTarget();
1:   }
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:24455ce
author:Andrew Osborne
-------------------------------------------------------------------------------
commit:6a4e3c8
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.proxy;
1: 
1: public class ProxyTestClassSuper
1: {
1: 
1:   public void bMethod()
1:   {
1:     aPrivateMethod();
1:   }
1: 
1:   protected void bProMethod()
1:   {
1: 
1:   }
1: 
1:   void bDefMethod()
1:   {
1: 
1:   }
1: 
1:   private void aPrivateMethod()
1:   {
1: 
1:   }
1: 
1: }
============================================================================