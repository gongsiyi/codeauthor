1:5a4dcb4: /*
1:5a4dcb4:  * Licensed to the Apache Software Foundation (ASF) under one
1:5a4dcb4:  * or more contributor license agreements.  See the NOTICE file
1:5a4dcb4:  * distributed with this work for additional information
1:5a4dcb4:  * regarding copyright ownership.  The ASF licenses this file
1:5a4dcb4:  * to you under the Apache License, Version 2.0 (the
1:5a4dcb4:  * "License"); you may not use this file except in compliance
1:5a4dcb4:  * with the License.  You may obtain a copy of the License at
1:5a4dcb4:  *
1:5a4dcb4:  *   http://www.apache.org/licenses/LICENSE-2.0
1:5a4dcb4:  *
1:5a4dcb4:  * Unless required by applicable law or agreed to in writing,
1:5a4dcb4:  * software distributed under the License is distributed on an
1:5a4dcb4:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:5a4dcb4:  * KIND, either express or implied.  See the License for the
1:5a4dcb4:  * specific language governing permissions and limitations
1:5a4dcb4:  * under the License.
1:5a4dcb4:  */
1:5a4dcb4: package org.apache.aries.jpa.example.tasklist.cdi.impl;
1:5a4dcb4: 
1:5a4dcb4: import java.util.HashMap;
1:5a4dcb4: import java.util.Map;
1:5a4dcb4: 
1:5a4dcb4: import javax.persistence.EntityManager;
1:5a4dcb4: import javax.persistence.EntityManagerFactory;
1:5a4dcb4: import javax.persistence.Persistence;
1:5a4dcb4: 
1:5a4dcb4: import org.apache.aries.jpa.example.tasklist.cdi.impl.TaskServiceImpl;
1:5a4dcb4: import org.apache.aries.jpa.example.tasklist.model.Task;
1:5a4dcb4: import org.apache.aries.jpa.example.tasklist.model.TaskService;
1:5a4dcb4: import org.junit.Assert;
1:5a4dcb4: import org.junit.Test;
1:5a4dcb4: 
1:5a4dcb4: public class TaskServiceImplTest {
1:5a4dcb4:     @Test
1:5a4dcb4:     public void testPersistence() {
1:5a4dcb4:         // Make sure derby.log is in target
1:5a4dcb4:         System.setProperty("derby.stream.error.file", "target/derby.log");
1:5a4dcb4:         TaskServiceImpl taskServiceImpl = new TaskServiceImpl();
1:5a4dcb4:         EntityManagerFactory emf = createTestEMF();
1:5a4dcb4:         final EntityManager em = emf.createEntityManager();
1:5a4dcb4:         em.getTransaction().begin();
1:5a4dcb4:         taskServiceImpl.em = em;
1:5a4dcb4: 
1:5a4dcb4:         TaskService taskService = taskServiceImpl;
1:5a4dcb4: 
1:5a4dcb4:         Task task = new Task();
1:5a4dcb4:         task.setId(1);
1:5a4dcb4:         task.setTitle("test");
1:5a4dcb4:         taskService.addTask(task);
1:5a4dcb4: 
1:5a4dcb4:         Task task2 = taskService.getTask(1);
1:5a4dcb4:         Assert.assertEquals(task.getTitle(), task2.getTitle());
1:5a4dcb4:         em.getTransaction().commit();
1:5a4dcb4:         em.close();
1:5a4dcb4:     }
1:5a4dcb4: 
1:5a4dcb4:     private EntityManagerFactory createTestEMF() {
1:5a4dcb4:         Map<String, String> properties = new HashMap<String, String>();
1:5a4dcb4:         properties.put("javax.persistence.jdbc.driver", "org.apache.derby.jdbc.EmbeddedDriver");
1:5a4dcb4:         properties.put("javax.persistence.jdbc.url", "jdbc:derby:memory:TEST;create=true");
1:5a4dcb4:         EntityManagerFactory emf = Persistence.createEntityManagerFactory("tasklist", properties);
1:5a4dcb4:         return emf;
1:5a4dcb4:     }
1:5a4dcb4: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:5a4dcb4
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.jpa.example.tasklist.cdi.impl;
1: 
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import javax.persistence.EntityManager;
1: import javax.persistence.EntityManagerFactory;
1: import javax.persistence.Persistence;
1: 
1: import org.apache.aries.jpa.example.tasklist.cdi.impl.TaskServiceImpl;
1: import org.apache.aries.jpa.example.tasklist.model.Task;
1: import org.apache.aries.jpa.example.tasklist.model.TaskService;
1: import org.junit.Assert;
1: import org.junit.Test;
1: 
1: public class TaskServiceImplTest {
1:     @Test
1:     public void testPersistence() {
1:         // Make sure derby.log is in target
1:         System.setProperty("derby.stream.error.file", "target/derby.log");
1:         TaskServiceImpl taskServiceImpl = new TaskServiceImpl();
1:         EntityManagerFactory emf = createTestEMF();
1:         final EntityManager em = emf.createEntityManager();
1:         em.getTransaction().begin();
1:         taskServiceImpl.em = em;
1: 
1:         TaskService taskService = taskServiceImpl;
1: 
1:         Task task = new Task();
1:         task.setId(1);
1:         task.setTitle("test");
1:         taskService.addTask(task);
1: 
1:         Task task2 = taskService.getTask(1);
1:         Assert.assertEquals(task.getTitle(), task2.getTitle());
1:         em.getTransaction().commit();
1:         em.close();
1:     }
1: 
1:     private EntityManagerFactory createTestEMF() {
1:         Map<String, String> properties = new HashMap<String, String>();
1:         properties.put("javax.persistence.jdbc.driver", "org.apache.derby.jdbc.EmbeddedDriver");
1:         properties.put("javax.persistence.jdbc.url", "jdbc:derby:memory:TEST;create=true");
1:         EntityManagerFactory emf = Persistence.createEntityManagerFactory("tasklist", properties);
1:         return emf;
1:     }
1: }
============================================================================