1:1c43780: /**
1:1c43780:  * Licensed to the Apache Software Foundation (ASF) under one
1:1c43780:  * or more contributor license agreements.  See the NOTICE file
1:1c43780:  * distributed with this work for additional information
1:1c43780:  * regarding copyright ownership.  The ASF licenses this file
1:1c43780:  * to you under the Apache License, Version 2.0 (the
1:1c43780:  * "License"); you may not use this file except in compliance
1:1c43780:  * with the License.  You may obtain a copy of the License at
1:1c43780:  *
1:1c43780:  *   http://www.apache.org/licenses/LICENSE-2.0
1:1c43780:  *
1:1c43780:  * Unless required by applicable law or agreed to in writing,
1:1c43780:  * software distributed under the License is distributed on an
1:1c43780:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:1c43780:  * KIND, either express or implied.  See the License for the
1:1c43780:  * specific language governing permissions and limitations
1:1c43780:  * under the License.
1:1c43780:  */
1:1c43780: package org.apache.aries.spifly;
1:1c43780: 
1:1c43780: /**
1:1c43780:  * A simple holder object for a pair of objects.
1:1c43780:  */
1:1c43780: public class Pair <A, B> {
1:1c43780:     private final A left;
1:1c43780:     private final B right;
1:1c43780: 
1:1c43780:     public Pair(A left, B right) {
1:1c43780:         this.left = left;
1:1c43780:         this.right = right;
1:1c43780:     }
1:1c43780: 
1:1c43780:     public A getLeft() {
1:1c43780:         return left;
1:1c43780:     }
1:1c43780: 
1:1c43780:     public B getRight() {
1:1c43780:         return right;
1:1c43780:     }
1:1c43780: 
1:1c43780:     @Override
1:1c43780:     public int hashCode() {
1:1c43780:         final int prime = 31;
1:1c43780:         int result = 1;
1:1c43780:         result = prime * result + ((left == null) ? 0 : left.hashCode());
1:1c43780:         result = prime * result + ((right == null) ? 0 : right.hashCode());
1:1c43780:         return result;
1:1c43780:     }
1:1c43780: 
1:1c43780:     @Override
1:1c43780:     public boolean equals(Object obj) {
1:1c43780:         if (this == obj)
1:1c43780:             return true;
1:1c43780:         
1:1c43780:         if (obj == null)
1:1c43780:             return false;
1:1c43780:         if (getClass() != obj.getClass())
1:1c43780:             return false;
1:1c43780:         
1:1c43780:         Pair<?, ?> other = (Pair<?, ?>) obj;
1:1c43780:         if (left == null) {
1:1c43780:             if (other.left != null)
1:1c43780:                 return false;
1:1c43780:         } else if (!left.equals(other.left))
1:1c43780:             return false;
1:1c43780:         if (right == null) {
1:1c43780:             if (other.right != null)
1:1c43780:                 return false;
1:1c43780:         } else if (!right.equals(other.right))
1:1c43780:             return false;
1:1c43780:         return true;
1:1c43780:     }
1:1c43780: 
1:1c43780:     @Override
1:1c43780:     public String toString() {
1:1c43780:         return "Pair [left=" + left + ", right=" + right + "]";
1:1c43780:     }    
1:1c43780: }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:1c43780
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.spifly;
1: 
1: /**
1:  * A simple holder object for a pair of objects.
1:  */
1: public class Pair <A, B> {
1:     private final A left;
1:     private final B right;
1: 
1:     public Pair(A left, B right) {
1:         this.left = left;
1:         this.right = right;
1:     }
1: 
1:     public A getLeft() {
1:         return left;
1:     }
1: 
1:     public B getRight() {
1:         return right;
1:     }
1: 
1:     @Override
1:     public int hashCode() {
1:         final int prime = 31;
1:         int result = 1;
1:         result = prime * result + ((left == null) ? 0 : left.hashCode());
1:         result = prime * result + ((right == null) ? 0 : right.hashCode());
1:         return result;
1:     }
1: 
1:     @Override
1:     public boolean equals(Object obj) {
1:         if (this == obj)
1:             return true;
1:         
1:         if (obj == null)
1:             return false;
1:         if (getClass() != obj.getClass())
1:             return false;
1:         
1:         Pair<?, ?> other = (Pair<?, ?>) obj;
1:         if (left == null) {
1:             if (other.left != null)
1:                 return false;
1:         } else if (!left.equals(other.left))
1:             return false;
1:         if (right == null) {
1:             if (other.right != null)
1:                 return false;
1:         } else if (!right.equals(other.right))
1:             return false;
1:         return true;
1:     }
1: 
1:     @Override
1:     public String toString() {
1:         return "Pair [left=" + left + ", right=" + right + "]";
1:     }    
1: }
============================================================================