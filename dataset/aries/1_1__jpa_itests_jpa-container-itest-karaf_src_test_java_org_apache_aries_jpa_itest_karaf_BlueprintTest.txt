1:9ce39d6: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:9ce39d6:  *  contributor license agreements.  See the NOTICE file distributed with
1:9ce39d6:  *  this work for additional information regarding copyright ownership.
1:9ce39d6:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:9ce39d6:  *  (the "License"); you may not use this file except in compliance with
1:9ce39d6:  *  the License.  You may obtain a copy of the License at
1:9ce39d6:  *
1:9ce39d6:  *     http://www.apache.org/licenses/LICENSE-2.0
1:9ce39d6:  *
1:9ce39d6:  *  Unless required by applicable law or agreed to in writing, software
1:9ce39d6:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:9ce39d6:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9ce39d6:  *  See the License for the specific language governing permissions and
1:9ce39d6:  *  limitations under the License.
1:9ce39d6:  */
1:9ce39d6: package org.apache.aries.jpa.itest.karaf;
1:9ce39d6: 
1:9ce39d6: import static org.ops4j.pax.exam.CoreOptions.mavenBundle;
1:9ce39d6: 
1:9ce39d6: import java.util.Collection;
1:9ce39d6: 
1:9ce39d6: import javax.inject.Inject;
1:9ce39d6: 
1:9ce39d6: import org.apache.aries.jpa.example.tasklist.model.Task;
1:9ce39d6: import org.apache.aries.jpa.example.tasklist.model.TaskService;
1:9ce39d6: import org.junit.Assert;
1:9ce39d6: import org.junit.Before;
1:9ce39d6: import org.junit.Test;
1:9ce39d6: import org.junit.runner.RunWith;
1:9ce39d6: import org.ops4j.pax.exam.Configuration;
1:9ce39d6: import org.ops4j.pax.exam.Option;
1:9ce39d6: import org.ops4j.pax.exam.junit.PaxExam;
1:9ce39d6: import org.ops4j.pax.exam.spi.reactors.ExamReactorStrategy;
1:9ce39d6: import org.ops4j.pax.exam.spi.reactors.PerClass;
1:9ce39d6: import org.osgi.framework.BundleException;
1:9ce39d6: 
1:9ce39d6: @RunWith(PaxExam.class)
1:9ce39d6: @ExamReactorStrategy(PerClass.class)
1:9ce39d6: public class BlueprintTest extends AbstractJPAItest {
1:9ce39d6:     
1:9ce39d6:     @Inject
1:9ce39d6:     TaskService taskService;
1:9ce39d6: 
1:9ce39d6:     @Before
1:9ce39d6:     public void initService() {
1:9ce39d6:         taskService = getService(TaskService.class, null);
1:9ce39d6:     }
1:9ce39d6:     
1:9ce39d6:     @Test
1:9ce39d6:     public void test() throws BundleException {
1:9ce39d6:         resolveBundles();
1:9ce39d6:         Assert.assertEquals(0, taskService.getTasks().size());
1:9ce39d6:         Task task = new Task();
1:9ce39d6:         task.setId(1);
1:9ce39d6:         task.setDescription("My task");
1:9ce39d6:         taskService.addTask(task);
1:9ce39d6:         Collection<Task> tasks = taskService.getTasks();
1:9ce39d6:         Assert.assertEquals(1, tasks.size());
1:9ce39d6:         Task task1  = tasks.iterator().next();
1:9ce39d6:         Assert.assertEquals(1, task1.getId().intValue());
1:9ce39d6:         Assert.assertEquals("My task", task1.getDescription());
1:9ce39d6:     }
1:9ce39d6: 
1:9ce39d6:     @Configuration
1:9ce39d6:     public Option[] configuration() {
1:9ce39d6:         return new Option[] {
1:9ce39d6:             baseOptions(), //
1:9ce39d6:             mavenBundle("org.apache.aries.jpa.example", "org.apache.aries.jpa.example.tasklist.blueprint").versionAsInProject()
1:9ce39d6:         };
1:9ce39d6:     }
1:9ce39d6: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:9ce39d6
/////////////////////////////////////////////////////////////////////////
1: /*  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.jpa.itest.karaf;
1: 
1: import static org.ops4j.pax.exam.CoreOptions.mavenBundle;
1: 
1: import java.util.Collection;
1: 
1: import javax.inject.Inject;
1: 
1: import org.apache.aries.jpa.example.tasklist.model.Task;
1: import org.apache.aries.jpa.example.tasklist.model.TaskService;
1: import org.junit.Assert;
1: import org.junit.Before;
1: import org.junit.Test;
1: import org.junit.runner.RunWith;
1: import org.ops4j.pax.exam.Configuration;
1: import org.ops4j.pax.exam.Option;
1: import org.ops4j.pax.exam.junit.PaxExam;
1: import org.ops4j.pax.exam.spi.reactors.ExamReactorStrategy;
1: import org.ops4j.pax.exam.spi.reactors.PerClass;
1: import org.osgi.framework.BundleException;
1: 
1: @RunWith(PaxExam.class)
1: @ExamReactorStrategy(PerClass.class)
1: public class BlueprintTest extends AbstractJPAItest {
1:     
1:     @Inject
1:     TaskService taskService;
1: 
1:     @Before
1:     public void initService() {
1:         taskService = getService(TaskService.class, null);
1:     }
1:     
1:     @Test
1:     public void test() throws BundleException {
1:         resolveBundles();
1:         Assert.assertEquals(0, taskService.getTasks().size());
1:         Task task = new Task();
1:         task.setId(1);
1:         task.setDescription("My task");
1:         taskService.addTask(task);
1:         Collection<Task> tasks = taskService.getTasks();
1:         Assert.assertEquals(1, tasks.size());
1:         Task task1  = tasks.iterator().next();
1:         Assert.assertEquals(1, task1.getId().intValue());
1:         Assert.assertEquals("My task", task1.getDescription());
1:     }
1: 
1:     @Configuration
1:     public Option[] configuration() {
1:         return new Option[] {
1:             baseOptions(), //
1:             mavenBundle("org.apache.aries.jpa.example", "org.apache.aries.jpa.example.tasklist.blueprint").versionAsInProject()
1:         };
1:     }
1: }
============================================================================