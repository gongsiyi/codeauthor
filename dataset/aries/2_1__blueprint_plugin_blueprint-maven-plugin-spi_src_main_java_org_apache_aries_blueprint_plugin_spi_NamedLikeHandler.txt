1:c201f83: /**
1:c201f83:  * Licensed to the Apache Software Foundation (ASF) under one
1:c201f83:  * or more contributor license agreements.  See the NOTICE file
1:c201f83:  * distributed with this work for additional information
1:c201f83:  * regarding copyright ownership.  The ASF licenses this file
1:c201f83:  * to you under the Apache License, Version 2.0 (the
1:c201f83:  * "License"); you may not use this file except in compliance
1:c201f83:  * with the License.  You may obtain a copy of the License at
1:fc7ae19:  * <p>
1:fc7ae19:  * http://www.apache.org/licenses/LICENSE-2.0
1:fc7ae19:  * <p>
1:c201f83:  * Unless required by applicable law or agreed to in writing,
1:c201f83:  * software distributed under the License is distributed on an
1:c201f83:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:c201f83:  * KIND, either express or implied.  See the License for the
1:c201f83:  * specific language governing permissions and limitations
1:c201f83:  * under the License.
1:c201f83:  */
1:c201f83: package org.apache.aries.blueprint.plugin.spi;
2:c201f83: 
1:fc7ae19: import java.lang.annotation.Annotation;
1:c201f83: import java.lang.reflect.AnnotatedElement;
1:c201f83: 
1:fc7ae19: /**
1:fc7ae19:  * Annotation A on class provides id of bean in blueprint XML created from this class. Annotation could be also used to inject bean with provided id in constructor, setter or field.
1:fc7ae19:  */
1:fc7ae19: public interface NamedLikeHandler<A extends Annotation> extends AnnotationHandler<A> {
1:fc7ae19:     /**
1:fc7ae19:      * @param clazz depends on annotated element - if it is class then clazz is class itself, if setter then class of method argument and if field then class of field
1:fc7ae19:      * @param annotatedElement class, method, field annotated with A
1:fc7ae19:      * @return name of bean
1:fc7ae19:      */
1:c201f83:     String getName(Class clazz, AnnotatedElement annotatedElement);
1:c201f83: 
1:fc7ae19:     /**
1:fc7ae19:      * Using to get name of bean based only on annotation when:
1:fc7ae19:      * - inject via constructor
1:fc7ae19:      * - inject via setter
1:fc7ae19:      * @param annotation instance of A annotation
1:fc7ae19:      * @return name of bean
1:fc7ae19:      */
1:c201f83:     String getName(Object annotation);
1:c201f83: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:fc7ae19
/////////////////////////////////////////////////////////////////////////
1:  * <p>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p>
/////////////////////////////////////////////////////////////////////////
1: import java.lang.annotation.Annotation;
1: /**
1:  * Annotation A on class provides id of bean in blueprint XML created from this class. Annotation could be also used to inject bean with provided id in constructor, setter or field.
1:  */
1: public interface NamedLikeHandler<A extends Annotation> extends AnnotationHandler<A> {
1:     /**
1:      * @param clazz depends on annotated element - if it is class then clazz is class itself, if setter then class of method argument and if field then class of field
1:      * @param annotatedElement class, method, field annotated with A
1:      * @return name of bean
1:      */
1:     /**
1:      * Using to get name of bean based only on annotation when:
1:      * - inject via constructor
1:      * - inject via setter
1:      * @param annotation instance of A annotation
1:      * @return name of bean
1:      */
commit:b0360cc
commit:c201f83
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.spi;
1: 
1: import java.lang.reflect.AnnotatedElement;
1: 
0: public interface NamedLikeHandler {
0:     Class getAnnotation();
1: 
1:     String getName(Class clazz, AnnotatedElement annotatedElement);
1: 
1:     String getName(Object annotation);
1: }
============================================================================