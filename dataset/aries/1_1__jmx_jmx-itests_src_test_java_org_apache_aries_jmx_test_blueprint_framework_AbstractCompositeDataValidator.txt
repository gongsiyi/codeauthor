1:fdf3952: /*
1:fdf3952:  * Licensed to the Apache Software Foundation (ASF) under one
1:fdf3952:  * or more contributor license agreements.  See the NOTICE file
1:fdf3952:  * distributed with this work for additional information
1:fdf3952:  * regarding copyright ownership.  The ASF licenses this file
1:fdf3952:  * to you under the Apache License, Version 2.0 (the
1:fdf3952:  * "License"); you may not use this file except in compliance
1:fdf3952:  * with the License.  You may obtain a copy of the License at
1:fdf3952:  *
1:fdf3952:  *  http://www.apache.org/licenses/LICENSE-2.0
1:fdf3952:  *
1:fdf3952:  * Unless required by applicable law or agreed to in writing,
1:fdf3952:  * software distributed under the License is distributed on an
1:fdf3952:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:fdf3952:  * KIND, either express or implied.  See the License for the
1:fdf3952:  * specific language governing permissions and limitations
1:fdf3952:  * under the License.
1:fdf3952:  */
1:fdf3952: package org.apache.aries.jmx.test.blueprint.framework;
1:fdf3952: 
1:fdf3952: import static org.junit.Assert.assertEquals;
1:fdf3952: import static org.junit.Assert.fail;
1:fdf3952: 
1:fdf3952: import java.util.HashMap;
1:fdf3952: import java.util.Iterator;
1:fdf3952: import java.util.Map;
1:fdf3952: import java.util.Set;
1:fdf3952: 
1:fdf3952: import javax.management.openmbean.CompositeData;
1:fdf3952: import javax.management.openmbean.CompositeType;
1:fdf3952: 
1:fdf3952: abstract public class AbstractCompositeDataValidator {
1:fdf3952:         
1:fdf3952:         private CompositeType type;
1:fdf3952:         private Map<String, Object> expectValues;
1:fdf3952:                 
1:fdf3952:         protected AbstractCompositeDataValidator(CompositeType type){
1:fdf3952:             this.type = type;
1:fdf3952:             expectValues = new HashMap<String, Object>();
1:fdf3952:         }
1:fdf3952:                 
1:fdf3952:         void setExpectValue(String key, Object value){
1:fdf3952:             expectValues.put(key, value);
1:fdf3952:         }
1:fdf3952:         
1:fdf3952:         public void validate(CompositeData target){
1:fdf3952:             if (!type.equals(target.getCompositeType()))
1:fdf3952:                 fail("Expect type is " + type + ", but target type is " +target.getCompositeType());
1:fdf3952:             Set<String> keys = expectValues.keySet();
1:fdf3952:             Iterator<String> it = keys.iterator();
1:fdf3952:             while (it.hasNext()) {
1:fdf3952:                 String key = it.next();
1:fdf3952:                 assertEquals(expectValues.get(key), target.get(key));
1:fdf3952:             }
1:fdf3952:             
1:fdf3952:         }
1:fdf3952:         
1:fdf3952:     }
============================================================================
author:A. J. David Bosschaert
-------------------------------------------------------------------------------
commit:0273964
commit:fdf3952
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *  http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.jmx.test.blueprint.framework;
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.fail;
1: 
1: import java.util.HashMap;
1: import java.util.Iterator;
1: import java.util.Map;
1: import java.util.Set;
1: 
1: import javax.management.openmbean.CompositeData;
1: import javax.management.openmbean.CompositeType;
1: 
1: abstract public class AbstractCompositeDataValidator {
1:         
1:         private CompositeType type;
1:         private Map<String, Object> expectValues;
1:                 
1:         protected AbstractCompositeDataValidator(CompositeType type){
1:             this.type = type;
1:             expectValues = new HashMap<String, Object>();
1:         }
1:                 
1:         void setExpectValue(String key, Object value){
1:             expectValues.put(key, value);
1:         }
1:         
1:         public void validate(CompositeData target){
1:             if (!type.equals(target.getCompositeType()))
1:                 fail("Expect type is " + type + ", but target type is " +target.getCompositeType());
1:             Set<String> keys = expectValues.keySet();
1:             Iterator<String> it = keys.iterator();
1:             while (it.hasNext()) {
1:                 String key = it.next();
1:                 assertEquals(expectValues.get(key), target.get(key));
1:             }
1:             
1:         }
1:         
1:     }
============================================================================