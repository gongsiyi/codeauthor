1:a14f2fd: /*
1:8ad6b99:  * Licensed to the Apache Software Foundation (ASF) under one
1:8ad6b99:  * or more contributor license agreements.  See the NOTICE file
1:8ad6b99:  * distributed with this work for additional information
1:8ad6b99:  * regarding copyright ownership.  The ASF licenses this file
1:8ad6b99:  * to you under the Apache License, Version 2.0 (the
1:8ad6b99:  * "License"); you may not use this file except in compliance
1:8ad6b99:  * with the License.  You may obtain a copy of the License at
1:a14f2fd:  *
1:8ad6b99:  *   http://www.apache.org/licenses/LICENSE-2.0
1:a14f2fd:  *
1:8ad6b99:  * Unless required by applicable law or agreed to in writing,
1:8ad6b99:  * software distributed under the License is distributed on an
1:8ad6b99:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8ad6b99:  * KIND, either express or implied.  See the License for the
1:8ad6b99:  * specific language governing permissions and limitations
1:8ad6b99:  * under the License.
1:a14f2fd:  */
1:fc759fb: package org.apache.aries.subsystem.itests.util;
1:fc759fb: 
1:fc759fb: import java.io.ByteArrayInputStream;
1:fc759fb: import java.io.InputStream;
1:fc759fb: import java.util.ArrayList;
1:fc759fb: import java.util.List;
1:fc759fb: 
1:fc759fb: import org.osgi.service.repository.RepositoryContent;
1:fc759fb: 
1:fc759fb: public class TestRepositoryContent extends TestResource implements RepositoryContent {
1:fc759fb: 	public static class Builder {
1:fc759fb: 		private final List<TestCapability.Builder> capabilities = new ArrayList<TestCapability.Builder>();
1:8ad6b99: 		private final List<TestRequirement.Builder> requirements = new ArrayList<TestRequirement.Builder>();
1:fc759fb: 		
1:fc759fb: 		private byte[] content;
1:fc759fb: 		
1:fc759fb: 		public TestRepositoryContent build() {
1:fc759fb: 			return new TestRepositoryContent(capabilities, requirements, content);
1:fc759fb: 		}
1:fc759fb: 		
1:fc759fb: 		public Builder capability(TestCapability.Builder value) {
1:fc759fb: 			capabilities.add(value);
1:fc759fb: 			return this;
1:fc759fb: 		}
1:fc759fb: 		
1:fc759fb: 		public Builder content(byte[] value) {
1:fc759fb: 			content = value;
1:fc759fb: 			return this;
1:fc759fb: 		}
1:fc759fb: 		
1:8ad6b99: 		public Builder requirement(TestRequirement.Builder value) {
1:fc759fb: 			requirements.add(value);
1:fc759fb: 			return this;
1:fc759fb: 		}
1:fc759fb: 	}
1:fc759fb: 	
1:fc759fb: 	private final byte[] content;
1:fc759fb: 	
1:fc759fb: 	public TestRepositoryContent(
1:fc759fb: 			List<TestCapability.Builder> capabilities, 
1:8ad6b99: 			List<TestRequirement.Builder> requirements,
1:fc759fb: 			byte[] content) {
1:fc759fb: 		super(capabilities, requirements);
1:fc759fb: 		this.content = content;
1:fc759fb: 	}
1:fc759fb: 
1:fc759fb: 	@Override
1:aac6a2a: 	public InputStream getContent() {
1:aac6a2a: 		try {
1:aac6a2a: 			return new ByteArrayInputStream(content);
1:aac6a2a: 		}
1:aac6a2a: 		catch (Exception e) {
1:aac6a2a: 			throw new RuntimeException(e);
1:aac6a2a: 		}
1:fc759fb: 	}
1:fc759fb: 
1:fc759fb: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:8ad6b99
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
/////////////////////////////////////////////////////////////////////////
1: 		private final List<TestRequirement.Builder> requirements = new ArrayList<TestRequirement.Builder>();
/////////////////////////////////////////////////////////////////////////
1: 		public Builder requirement(TestRequirement.Builder value) {
/////////////////////////////////////////////////////////////////////////
1: 			List<TestRequirement.Builder> requirements,
commit:a14f2fd
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
1:  */
commit:aac6a2a
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 	public InputStream getContent() {
1: 		try {
1: 			return new ByteArrayInputStream(content);
1: 		}
1: 		catch (Exception e) {
1: 			throw new RuntimeException(e);
1: 		}
commit:8ee8aac
/////////////////////////////////////////////////////////////////////////
0: 	public InputStream getContent(String osgiContent) throws IOException {
commit:71fe81a
/////////////////////////////////////////////////////////////////////////
0: import org.osgi.resource.Requirement;
commit:fc759fb
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.subsystem.itests.util;
1: 
1: import java.io.ByteArrayInputStream;
0: import java.io.IOException;
1: import java.io.InputStream;
1: import java.util.ArrayList;
1: import java.util.List;
1: 
0: import org.osgi.framework.resource.Requirement;
1: import org.osgi.service.repository.RepositoryContent;
1: 
1: public class TestRepositoryContent extends TestResource implements RepositoryContent {
1: 	public static class Builder {
1: 		private final List<TestCapability.Builder> capabilities = new ArrayList<TestCapability.Builder>();
0: 		private final List<Requirement> requirements = new ArrayList<Requirement>();
1: 		
1: 		private byte[] content;
1: 		
1: 		public TestRepositoryContent build() {
1: 			return new TestRepositoryContent(capabilities, requirements, content);
1: 		}
1: 		
1: 		public Builder capability(TestCapability.Builder value) {
1: 			capabilities.add(value);
1: 			return this;
1: 		}
1: 		
1: 		public Builder content(byte[] value) {
1: 			content = value;
1: 			return this;
1: 		}
1: 		
0: 		public Builder requirement(Requirement value) {
1: 			requirements.add(value);
1: 			return this;
1: 		}
1: 	}
1: 	
1: 	private final byte[] content;
1: 	
1: 	public TestRepositoryContent(
1: 			List<TestCapability.Builder> capabilities, 
0: 			List<Requirement> requirements,
1: 			byte[] content) {
1: 		super(capabilities, requirements);
1: 		this.content = content;
1: 	}
1: 
1: 	@Override
0: 	public InputStream getContent() throws IOException {
0: 		return new ByteArrayInputStream(content);
1: 	}
1: 
1: }
============================================================================