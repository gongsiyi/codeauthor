1:ab11b33: /*
1:ab11b33:  * Licensed to the Apache Software Foundation (ASF) under one
1:ab11b33:  * or more contributor license agreements.  See the NOTICE file
1:ab11b33:  * distributed with this work for additional information
1:ab11b33:  * regarding copyright ownership.  The ASF licenses this file
1:ab11b33:  * to you under the Apache License, Version 2.0 (the
1:ab11b33:  * "License"); you may not use this file except in compliance
1:ab11b33:  * with the License.  You may obtain a copy of the License at
1:ab11b33:  *
1:ab11b33:  *   http://www.apache.org/licenses/LICENSE-2.0
1:ab11b33:  *
1:ab11b33:  * Unless required by applicable law or agreed to in writing,
1:ab11b33:  * software distributed under the License is distributed on an
1:ab11b33:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:ab11b33:  * KIND, either express or implied.  See the License for the
1:ab11b33:  * specific language governing permissions and limitations
1:ab11b33:  * under the License.
1:ab11b33:  */
1:d80741a: package org.apache.aries.web.converter.impl;
2:d80741a: 
1:d80741a: import java.io.IOException;
1:d80741a: import java.util.Properties;
1:d80741a: 
1:3af6ab7: import org.apache.aries.web.converter.WabConversion;
1:d80741a: import org.apache.aries.web.converter.WarToWabConverter;
1:d80741a: 
1:d80741a: public class WarToWabConverterService implements WarToWabConverter {
1:d80741a: 
1:3af6ab7:   public WabConversion convert(InputStreamProvider input, String name, Properties properties) throws IOException {
1:3af6ab7:     return new WarToWabConverterImpl(input, name, properties);
2:d80741a:   }
1:d80741a: 
1:d80741a: }
============================================================================
author:Mark Nuttall
-------------------------------------------------------------------------------
commit:3af6ab7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.web.converter.WabConversion;
1:   public WabConversion convert(InputStreamProvider input, String name, Properties properties) throws IOException {
1:     return new WarToWabConverterImpl(input, name, properties);
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:ab11b33
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIESOR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:d80741a
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.web.converter.impl;
1: 
1: import java.io.IOException;
0: import java.io.InputStream;
1: import java.util.Properties;
0: import java.util.jar.Manifest;
1: 
1: import org.apache.aries.web.converter.WarToWabConverter;
1: 
1: public class WarToWabConverterService implements WarToWabConverter {
1: 
0:   public InputStream convert(InputStreamProvider input, String name, Properties properties) throws IOException {
0:     WarToWabConverterImpl converter = new WarToWabConverterImpl(input, name, properties);
0:     return converter.getWAB();
1:   }
1: 
0:   public Manifest generateManifest(InputStreamProvider input, String name, Properties properties) throws IOException {
0:     WarToWabConverterImpl converter = new WarToWabConverterImpl(input, name, properties);
0:     return converter.getWABManifest();
1:   }
1: 
1: }
============================================================================