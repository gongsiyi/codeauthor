1:f13c6ac: /*
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.pojos;
1:f13c6ac: 
1:f13c6ac: import java.util.Map;
1:f13c6ac: import java.util.Properties;
1:f13c6ac: 
1:f13c6ac: public class Multiple {
1:f13c6ac: 
1:f13c6ac:     private int intValue = -1;
1:f13c6ac:     private Integer integerValue = null;
1:f13c6ac:     private String stringValue = null;
1:f13c6ac:     private Map map;
1:f13c6ac:     private Properties properties;
1:f13c6ac: 
1:f13c6ac:     public Multiple() {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Multiple(Map map) {
1:f13c6ac:         this.map = map;
1:f13c6ac:     }
1:f13c6ac: 
1:515d107:     public Multiple(Properties props, String disambiguator) {
1:f13c6ac:         this.properties = props;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Multiple(String arg) {   
1:f13c6ac:         stringValue = arg;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Multiple(int arg) {   
1:f13c6ac:         intValue = arg;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public Multiple(Integer arg) {   
1:f13c6ac:         integerValue = arg;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Map getMap() {
1:f13c6ac:         return map;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public Properties getProperties() {
1:f13c6ac:         return properties;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public int getInt() {
1:f13c6ac:         return intValue;
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public Integer getInteger() {
1:f13c6ac:         return integerValue;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public String getString() {
1:f13c6ac:         return stringValue;
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void setAmbiguous(int v) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public void setAmbiguous(Object v) {
1:f13c6ac:     }
1:f13c6ac: 
1:f13c6ac:     public static Multiple create(String arg1, Integer arg2) {
1:f13c6ac:         return new Multiple(arg2.intValue());
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public static Multiple create(String arg1, Boolean arg2) {
1:f13c6ac:         return new Multiple(arg1 + "-boolean");
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac: }
============================================================================
author:Holly Cummins
-------------------------------------------------------------------------------
commit:515d107
/////////////////////////////////////////////////////////////////////////
1:     public Multiple(Properties props, String disambiguator) {
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.pojos;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint.pojos;
1: 
1: import java.util.Map;
1: import java.util.Properties;
1: 
1: public class Multiple {
1: 
1:     private int intValue = -1;
1:     private Integer integerValue = null;
1:     private String stringValue = null;
1:     private Map map;
1:     private Properties properties;
1: 
1:     public Multiple() {
1:     }
1: 
1:     public Multiple(Map map) {
1:         this.map = map;
1:     }
1: 
0:     public Multiple(Properties props) {
1:         this.properties = props;
1:     }
1: 
1:     public Multiple(String arg) {   
1:         stringValue = arg;
1:     }
1: 
1:     public Multiple(int arg) {   
1:         intValue = arg;
1:     }
1:     
1:     public Multiple(Integer arg) {   
1:         integerValue = arg;
1:     }
1: 
1:     public Map getMap() {
1:         return map;
1:     }
1: 
1:     public Properties getProperties() {
1:         return properties;
1:     }
1: 
1:     public int getInt() {
1:         return intValue;
1:     }
1:     
1:     public Integer getInteger() {
1:         return integerValue;
1:     }
1: 
1:     public String getString() {
1:         return stringValue;
1:     }
1: 
1:     public void setAmbiguous(int v) {
1:     }
1: 
1:     public void setAmbiguous(Object v) {
1:     }
1: 
1:     public static Multiple create(String arg1, Integer arg2) {
1:         return new Multiple(arg2.intValue());
1:     }
1:     
1:     public static Multiple create(String arg1, Boolean arg2) {
1:         return new Multiple(arg1 + "-boolean");
1:     }
1:     
1: }
============================================================================