1:8ab013a: /*
1:8ab013a:  * Licensed to the Apache Software Foundation (ASF) under one
1:8ab013a:  * or more contributor license agreements.  See the NOTICE file
1:8ab013a:  * distributed with this work for additional information
1:8ab013a:  * regarding copyright ownership.  The ASF licenses this file
1:8ab013a:  * to you under the Apache License, Version 2.0 (the
1:8ab013a:  * "License"); you may not use this file except in compliance
1:8ab013a:  * with the License.  You may obtain a copy of the License at
1:8ab013a:  *
1:8ab013a:  *   http://www.apache.org/licenses/LICENSE-2.0
1:8ab013a:  *
1:8ab013a:  * Unless required by applicable law or agreed to in writing,
1:8ab013a:  * software distributed under the License is distributed on an
1:8ab013a:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:8ab013a:  * KIND, either express or implied.  See the License for the
1:8ab013a:  * specific language governing permissions and limitations
1:8ab013a:  * under the License.
1:8ab013a:  */
1:8ab013a: package org.apache.aries.subsystem.itests.defect;
1:8ab013a: 
1:8ab013a: import static org.junit.Assert.fail;
1:8ab013a: 
1:8ab013a: import java.io.IOException;
1:8ab013a: import java.util.HashMap;
1:8ab013a: import java.util.Map;
1:8ab013a: 
1:8ab013a: import org.apache.aries.subsystem.itests.Header;
1:8ab013a: import org.apache.aries.subsystem.itests.SubsystemTest;
1:8ab013a: import org.junit.Before;
1:8ab013a: import org.junit.Test;
1:8ab013a: import org.osgi.service.subsystem.Subsystem;
1:8ab013a: import org.osgi.service.subsystem.SubsystemConstants;
1:8ab013a: import org.osgi.service.subsystem.SubsystemException;
1:8ab013a: 
1:8ab013a: /*
1:8ab013a:  * https://issues.apache.org/jira/browse/ARIES-1423
1:8ab013a:  * 
1:8ab013a:  * IllegalArgumentException when GenericHeader has no clauses
1:8ab013a:  */
1:8ab013a: public class Aries1423Test extends SubsystemTest {
1:8ab013a:     /*
1:8ab013a:      * Subsystem-SymbolicName: application.a.esa
1:8ab013a:      * 
1:8ab013a: 	 * Included In Archive
1:8ab013a: 	 * 		bundle.a.jar
1:8ab013a:      */
1:8ab013a:     private static final String APPLICATION_A = "application.a.esa";
1:8ab013a: 	/*
1:8ab013a: 	 * Bundle-SymbolicName: bundle.a.jar
1:8ab013a: 	 * Build-Plan:
1:8ab013a: 	 * Build-Number: 
1:8ab013a: 	 */
1:8ab013a: 	private static final String BUNDLE_A = "bundle.a.jar";
1:8ab013a: 	
1:8ab013a: 	private static boolean createdTestFiles;
1:8ab013a: 	
1:8ab013a: 	@Before
1:8ab013a: 	public void createTestFiles() throws Exception {
1:8ab013a: 		if (createdTestFiles)
1:8ab013a: 			return;
1:8ab013a: 		createBundleA();
1:8ab013a: 		createApplicationA();
1:8ab013a: 		createdTestFiles = true;
1:8ab013a: 	}
1:8ab013a: 	
1:8ab013a: 	private void createBundleA() throws IOException {
1:8ab013a: 		createBundle(
1:8ab013a: 				name(BUNDLE_A), 
1:8ab013a: 				new Header("Build-Plan", ""),
1:8ab013a: 				new Header("Build-Number", "") {});
1:8ab013a: 	}
1:8ab013a: 	
1:8ab013a: 	private static void createApplicationA() throws IOException {
1:8ab013a:         createApplicationAManifest();
1:8ab013a:         createSubsystem(APPLICATION_A, BUNDLE_A);
1:8ab013a:     }
1:8ab013a:     
1:8ab013a:     private static void createApplicationAManifest() throws IOException {
1:8ab013a:         Map<String, String> attributes = new HashMap<String, String>();
1:8ab013a:         attributes.put(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME, APPLICATION_A);
1:8ab013a:         attributes.put("Build-Plan", "");
1:8ab013a:         attributes.put("Build-Number", "");
1:8ab013a:         createManifest(APPLICATION_A + ".mf", attributes);
1:8ab013a:     }
1:8ab013a:     
1:8ab013a:     @Test
1:8ab013a:     public void testEmptyNonOsgiHeaders() throws Exception {
1:8ab013a:     	try {
1:8ab013a:     		Subsystem applicationA = installSubsystemFromFile(APPLICATION_A);
1:8ab013a:     		uninstallSubsystemSilently(applicationA);
1:8ab013a:     	}
1:8ab013a:     	catch (SubsystemException e) {
1:8ab013a:     		e.printStackTrace();
1:8ab013a:     		fail("Subsystem should have installed");
1:8ab013a:     	}
1:8ab013a:     }
1:8ab013a: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:8ab013a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.subsystem.itests.defect;
1: 
1: import static org.junit.Assert.fail;
1: 
1: import java.io.IOException;
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import org.apache.aries.subsystem.itests.Header;
1: import org.apache.aries.subsystem.itests.SubsystemTest;
1: import org.junit.Before;
1: import org.junit.Test;
1: import org.osgi.service.subsystem.Subsystem;
1: import org.osgi.service.subsystem.SubsystemConstants;
1: import org.osgi.service.subsystem.SubsystemException;
1: 
1: /*
1:  * https://issues.apache.org/jira/browse/ARIES-1423
1:  * 
1:  * IllegalArgumentException when GenericHeader has no clauses
1:  */
1: public class Aries1423Test extends SubsystemTest {
1:     /*
1:      * Subsystem-SymbolicName: application.a.esa
1:      * 
1: 	 * Included In Archive
1: 	 * 		bundle.a.jar
1:      */
1:     private static final String APPLICATION_A = "application.a.esa";
1: 	/*
1: 	 * Bundle-SymbolicName: bundle.a.jar
1: 	 * Build-Plan:
1: 	 * Build-Number: 
1: 	 */
1: 	private static final String BUNDLE_A = "bundle.a.jar";
1: 	
1: 	private static boolean createdTestFiles;
1: 	
1: 	@Before
1: 	public void createTestFiles() throws Exception {
1: 		if (createdTestFiles)
1: 			return;
1: 		createBundleA();
1: 		createApplicationA();
1: 		createdTestFiles = true;
1: 	}
1: 	
1: 	private void createBundleA() throws IOException {
1: 		createBundle(
1: 				name(BUNDLE_A), 
1: 				new Header("Build-Plan", ""),
1: 				new Header("Build-Number", "") {});
1: 	}
1: 	
1: 	private static void createApplicationA() throws IOException {
1:         createApplicationAManifest();
1:         createSubsystem(APPLICATION_A, BUNDLE_A);
1:     }
1:     
1:     private static void createApplicationAManifest() throws IOException {
1:         Map<String, String> attributes = new HashMap<String, String>();
1:         attributes.put(SubsystemConstants.SUBSYSTEM_SYMBOLICNAME, APPLICATION_A);
1:         attributes.put("Build-Plan", "");
1:         attributes.put("Build-Number", "");
1:         createManifest(APPLICATION_A + ".mf", attributes);
1:     }
1:     
1:     @Test
1:     public void testEmptyNonOsgiHeaders() throws Exception {
1:     	try {
1:     		Subsystem applicationA = installSubsystemFromFile(APPLICATION_A);
1:     		uninstallSubsystemSilently(applicationA);
1:     	}
1:     	catch (SubsystemException e) {
1:     		e.printStackTrace();
1:     		fail("Subsystem should have installed");
1:     	}
1:     }
1: }
============================================================================