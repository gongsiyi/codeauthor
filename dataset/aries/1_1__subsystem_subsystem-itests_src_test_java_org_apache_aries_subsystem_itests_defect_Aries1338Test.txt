1:3d090ca: /*
1:3d090ca:  * Licensed to the Apache Software Foundation (ASF) under one
1:3d090ca:  * or more contributor license agreements.  See the NOTICE file
1:3d090ca:  * distributed with this work for additional information
1:3d090ca:  * regarding copyright ownership.  The ASF licenses this file
1:3d090ca:  * to you under the Apache License, Version 2.0 (the
1:3d090ca:  * "License"); you may not use this file except in compliance
1:3d090ca:  * with the License.  You may obtain a copy of the License at
1:3d090ca:  *
1:3d090ca:  *   http://www.apache.org/licenses/LICENSE-2.0
1:3d090ca:  *
1:3d090ca:  * Unless required by applicable law or agreed to in writing,
1:3d090ca:  * software distributed under the License is distributed on an
1:3d090ca:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:3d090ca:  * KIND, either express or implied.  See the License for the
1:3d090ca:  * specific language governing permissions and limitations
1:3d090ca:  * under the License.
1:3d090ca:  */
1:3d090ca: package org.apache.aries.subsystem.itests.defect;
1:3d090ca: 
1:3d090ca: import static org.junit.Assert.fail;
1:3d090ca: 
1:3d090ca: import org.apache.aries.subsystem.itests.SubsystemTest;
1:3d090ca: import org.apache.aries.subsystem.itests.util.BundleArchiveBuilder;
1:3d090ca: import org.apache.aries.subsystem.itests.util.SubsystemArchiveBuilder;
1:3d090ca: import org.junit.Test;
1:3d090ca: import org.osgi.service.subsystem.Subsystem;
1:3d090ca: import org.osgi.service.subsystem.SubsystemException;
1:3d090ca: 
1:3d090ca: public class Aries1338Test extends SubsystemTest {
1:3d090ca: 	@Test
1:3d090ca: 	public void test() throws Exception {
1:3d090ca: 		test("x;y;z;version=1", "x;version=1,y;version=1,z;version=1", false);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	@Test
1:3d090ca: 	public void testMissingExportPackageX() throws Exception {
1:3d090ca: 		test("x;y;z;version=1", "y;version=1,z;version=1", true);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	@Test
1:3d090ca: 	public void testMissingExportPackageY() throws Exception {
1:3d090ca: 		test("x;y;z;version=1", "x;version=1,z;version=1", true);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	@Test
1:3d090ca: 	public void testMissingExportPackageZ() throws Exception {
1:3d090ca: 		test("x;y;z;version=1", "x;version=1,y;version=1", true);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	@Test
1:3d090ca: 	public void testWrongVersionExportPackageX() throws Exception {
1:3d090ca: 		test("x;y;z;version=\"[1,2)\"", "x;version=0,y;version=1,z;version=1.1", true);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	@Test
1:3d090ca: 	public void testWrongVersionExportPackageY() throws Exception {
1:3d090ca: 		test("x;y;z;version=\"[1,2)\"", "x;version=1.9,y;version=2,z;version=1.1", true);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	@Test
1:3d090ca: 	public void testWrongVersionExportPackageZ() throws Exception {
1:3d090ca: 		test("x;y;z;version=\"[1,2)\"", "x;version=1.9,y;version=1.0.1,z", true);
1:3d090ca: 	}
1:3d090ca: 	
1:3d090ca: 	private void test(String importPackage, String exportPackage, boolean shouldFail) throws Exception {
1:3d090ca: 		Subsystem root = getRootSubsystem();
1:3d090ca: 		try {
1:3d090ca: 			Subsystem subsystem = installSubsystem(
1:3d090ca: 					root,
1:3d090ca: 					"subsystem",
1:3d090ca: 					new SubsystemArchiveBuilder()
1:3d090ca: 							.symbolicName("subsystem")
1:3d090ca: 							.bundle(
1:3d090ca: 									"a", 
1:3d090ca: 									new BundleArchiveBuilder()
1:3d090ca: 											.symbolicName("a")
1:3d090ca: 											.importPackage(importPackage)
1:3d090ca: 											.build())
1:3d090ca: 							.bundle(
1:3d090ca: 									"b", 
1:3d090ca: 									new BundleArchiveBuilder()
1:3d090ca: 											.symbolicName("b")
1:3d090ca: 											.exportPackage(exportPackage)
1:3d090ca: 											.build())
1:3d090ca: 							.build());
1:3d090ca: 			uninstallableSubsystems.add(subsystem);
1:3d090ca: 			if (shouldFail) {
1:3d090ca: 				fail("Subsystem should not have installed");
1:3d090ca: 			}
1:3d090ca: 		}
1:3d090ca: 		catch (SubsystemException e) {
1:3d090ca: 			e.printStackTrace();
1:3d090ca: 			if (!shouldFail) {
1:3d090ca: 				fail("Subsystem should have installed");
1:3d090ca: 			}
1:3d090ca: 		}
1:3d090ca: 	}
1:3d090ca: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:3d090ca
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.subsystem.itests.defect;
1: 
1: import static org.junit.Assert.fail;
1: 
1: import org.apache.aries.subsystem.itests.SubsystemTest;
1: import org.apache.aries.subsystem.itests.util.BundleArchiveBuilder;
1: import org.apache.aries.subsystem.itests.util.SubsystemArchiveBuilder;
1: import org.junit.Test;
1: import org.osgi.service.subsystem.Subsystem;
1: import org.osgi.service.subsystem.SubsystemException;
1: 
1: public class Aries1338Test extends SubsystemTest {
1: 	@Test
1: 	public void test() throws Exception {
1: 		test("x;y;z;version=1", "x;version=1,y;version=1,z;version=1", false);
1: 	}
1: 	
1: 	@Test
1: 	public void testMissingExportPackageX() throws Exception {
1: 		test("x;y;z;version=1", "y;version=1,z;version=1", true);
1: 	}
1: 	
1: 	@Test
1: 	public void testMissingExportPackageY() throws Exception {
1: 		test("x;y;z;version=1", "x;version=1,z;version=1", true);
1: 	}
1: 	
1: 	@Test
1: 	public void testMissingExportPackageZ() throws Exception {
1: 		test("x;y;z;version=1", "x;version=1,y;version=1", true);
1: 	}
1: 	
1: 	@Test
1: 	public void testWrongVersionExportPackageX() throws Exception {
1: 		test("x;y;z;version=\"[1,2)\"", "x;version=0,y;version=1,z;version=1.1", true);
1: 	}
1: 	
1: 	@Test
1: 	public void testWrongVersionExportPackageY() throws Exception {
1: 		test("x;y;z;version=\"[1,2)\"", "x;version=1.9,y;version=2,z;version=1.1", true);
1: 	}
1: 	
1: 	@Test
1: 	public void testWrongVersionExportPackageZ() throws Exception {
1: 		test("x;y;z;version=\"[1,2)\"", "x;version=1.9,y;version=1.0.1,z", true);
1: 	}
1: 	
1: 	private void test(String importPackage, String exportPackage, boolean shouldFail) throws Exception {
1: 		Subsystem root = getRootSubsystem();
1: 		try {
1: 			Subsystem subsystem = installSubsystem(
1: 					root,
1: 					"subsystem",
1: 					new SubsystemArchiveBuilder()
1: 							.symbolicName("subsystem")
1: 							.bundle(
1: 									"a", 
1: 									new BundleArchiveBuilder()
1: 											.symbolicName("a")
1: 											.importPackage(importPackage)
1: 											.build())
1: 							.bundle(
1: 									"b", 
1: 									new BundleArchiveBuilder()
1: 											.symbolicName("b")
1: 											.exportPackage(exportPackage)
1: 											.build())
1: 							.build());
1: 			uninstallableSubsystems.add(subsystem);
1: 			if (shouldFail) {
1: 				fail("Subsystem should not have installed");
1: 			}
1: 		}
1: 		catch (SubsystemException e) {
1: 			e.printStackTrace();
1: 			if (!shouldFail) {
1: 				fail("Subsystem should have installed");
1: 			}
1: 		}
1: 	}
1: }
============================================================================