1:dd9325e: /**
1:dd9325e:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:dd9325e:  *  contributor license agreements.  See the NOTICE file distributed with
1:dd9325e:  *  this work for additional information regarding copyright ownership.
1:dd9325e:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:dd9325e:  *  (the "License"); you may not use this file except in compliance with
1:dd9325e:  *  the License.  You may obtain a copy of the License at
1:dd9325e:  *
1:dd9325e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:dd9325e:  *
1:dd9325e:  *  Unless required by applicable law or agreed to in writing, software
1:dd9325e:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:dd9325e:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:dd9325e:  *  See the License for the specific language governing permissions and
1:dd9325e:  *  limitations under the License.
1:dd9325e:  */
1:dd9325e: package org.apache.aries.blueprint.sample;
1:dd9325e: 
1:dd9325e: import java.util.List;
1:dd9325e: 
1:dd9325e: import org.osgi.framework.BundleContext;
1:dd9325e: import org.apache.aries.blueprint.annotation.Blueprint;
1:dd9325e: import org.apache.aries.blueprint.annotation.Bean;
1:dd9325e: import org.apache.aries.blueprint.annotation.Inject;
1:dd9325e: import org.apache.aries.blueprint.annotation.Element;
1:dd9325e: import org.apache.aries.blueprint.annotation.Element.ElementType;
1:dd9325e: 
1:dd9325e: @Blueprint(defaultActivation="eager", defaultTimeout=300, defaultAvailability="optional")
1:dd9325e: @Bean(id="bar")
1:dd9325e: public class Bar {
1:dd9325e:     
1:dd9325e:     @Inject(value="Hello FooBar")
1:dd9325e:     private String value;
1:dd9325e: 
1:dd9325e:     @Inject(ref="blueprintBundleContext")
1:dd9325e:     private BundleContext context;
1:dd9325e: 
1:dd9325e:     /*@Inject 
1:dd9325e:     @org.apache.aries.blueprint.annotation.List ({ 
1:dd9325e:         @Element(value="a list element"), 
1:dd9325e:         @Element(value="5", type=ElementType.INTEGER) 
1:dd9325e:     })*/
1:dd9325e:     private List list;
1:dd9325e: 
1:dd9325e:     public BundleContext getContext() {
1:dd9325e:         return context;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public void setContext(BundleContext ctx) {
1:dd9325e:         context = ctx;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public String getValue() {
1:dd9325e:         return value;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public void setValue(String s) {
1:dd9325e:         value = s;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public List getList() {
1:dd9325e:         return list;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public void setList(List l) {
1:dd9325e:         list = l;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e:     public String toString() {
1:dd9325e:         return hashCode() + ": " + value + " " + context + " " + list;
1:dd9325e:     }
1:dd9325e: 
1:dd9325e: }
============================================================================
author:Lin Sun
-------------------------------------------------------------------------------
commit:dd9325e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: package org.apache.aries.blueprint.sample;
1: 
1: import java.util.List;
1: 
1: import org.osgi.framework.BundleContext;
1: import org.apache.aries.blueprint.annotation.Blueprint;
1: import org.apache.aries.blueprint.annotation.Bean;
1: import org.apache.aries.blueprint.annotation.Inject;
1: import org.apache.aries.blueprint.annotation.Element;
1: import org.apache.aries.blueprint.annotation.Element.ElementType;
1: 
1: @Blueprint(defaultActivation="eager", defaultTimeout=300, defaultAvailability="optional")
1: @Bean(id="bar")
1: public class Bar {
1:     
1:     @Inject(value="Hello FooBar")
1:     private String value;
1: 
1:     @Inject(ref="blueprintBundleContext")
1:     private BundleContext context;
1: 
1:     /*@Inject 
1:     @org.apache.aries.blueprint.annotation.List ({ 
1:         @Element(value="a list element"), 
1:         @Element(value="5", type=ElementType.INTEGER) 
1:     })*/
1:     private List list;
1: 
1:     public BundleContext getContext() {
1:         return context;
1:     }
1: 
1:     public void setContext(BundleContext ctx) {
1:         context = ctx;
1:     }
1: 
1:     public String getValue() {
1:         return value;
1:     }
1: 
1:     public void setValue(String s) {
1:         value = s;
1:     }
1: 
1:     public List getList() {
1:         return list;
1:     }
1: 
1:     public void setList(List l) {
1:         list = l;
1:     }
1: 
1:     public String toString() {
1:         return hashCode() + ": " + value + " " + context + " " + list;
1:     }
1: 
1: }
============================================================================