1:71fecb0: /**
1:71fecb0:  * Licensed to the Apache Software Foundation (ASF) under one
1:71fecb0:  * or more contributor license agreements.  See the NOTICE file
1:71fecb0:  * distributed with this work for additional information
1:71fecb0:  * regarding copyright ownership.  The ASF licenses this file
1:71fecb0:  * to you under the Apache License, Version 2.0 (the
1:71fecb0:  * "License"); you may not use this file except in compliance
1:71fecb0:  * with the License.  You may obtain a copy of the License at
1:71fecb0:  * <p>
1:71fecb0:  * http://www.apache.org/licenses/LICENSE-2.0
1:71fecb0:  * <p>
1:71fecb0:  * Unless required by applicable law or agreed to in writing,
1:71fecb0:  * software distributed under the License is distributed on an
1:71fecb0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:71fecb0:  * KIND, either express or implied.  See the License for the
1:71fecb0:  * specific language governing permissions and limitations
1:71fecb0:  * under the License.
1:71fecb0:  */
1:0d2c0ec: package org.apache.aries.blueprint.plugin;
2:0d2c0ec: 
1:0d2c0ec: import org.apache.aries.blueprint.plugin.spi.Activation;
1:0d2c0ec: import org.apache.aries.blueprint.plugin.spi.BlueprintConfiguration;
1:0d2c0ec: 
1:0d2c0ec: import java.util.Arrays;
1:aaf182f: import java.util.HashMap;
1:0d2c0ec: import java.util.HashSet;
1:aaf182f: import java.util.Map;
1:0d2c0ec: import java.util.Set;
1:0d2c0ec: 
1:0d2c0ec: public class BlueprintConfigurationImpl implements BlueprintConfiguration {
1:119afa3:     public static final String NS_TX2 = "http://aries.apache.org/xmlns/transactions/v2.0.0";
1:64f241a:     public static final String NS_JPA2 = "http://aries.apache.org/xmlns/jpa/v2.0.0";
1:119afa3: 
1:0d2c0ec:     private final Set<String> namespaces;
1:0d2c0ec:     private final Activation defaultActivation;
1:aaf182f:     private final Map<String, String> customParameters;
1:0d2c0ec: 
1:aaf182f:     public BlueprintConfigurationImpl(Set<String> namespaces, Activation defaultActivation, Map<String, String> customParameters) {
1:0d2c0ec:         this.namespaces = namespaces != null ? namespaces : new HashSet<>(Arrays.asList(NS_TX2, NS_JPA2));
1:0d2c0ec:         this.defaultActivation = defaultActivation;
1:aaf182f:         this.customParameters =  customParameters == null ? new HashMap<String, String>() : customParameters;
1:0d2c0ec:     }
1:0d2c0ec: 
1:0d2c0ec:     @Override
1:0d2c0ec:     public Set<String> getNamespaces() {
1:0d2c0ec:         return namespaces;
1:0d2c0ec:     }
1:0d2c0ec: 
1:0d2c0ec:     @Override
1:0d2c0ec:     public Activation getDefaultActivation() {
1:0d2c0ec:         return defaultActivation;
1:0d2c0ec:     }
1:aaf182f: 
1:aaf182f:     @Override
1:aaf182f:     public Map<String, String> getCustomParameters() {
1:aaf182f:         return customParameters;
1:aaf182f:     }
1:0d2c0ec: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:71fecb0
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * <p>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p>
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
commit:aaf182f
/////////////////////////////////////////////////////////////////////////
1: import java.util.HashMap;
1: import java.util.Map;
/////////////////////////////////////////////////////////////////////////
1:     private final Map<String, String> customParameters;
1:     public BlueprintConfigurationImpl(Set<String> namespaces, Activation defaultActivation, Map<String, String> customParameters) {
1:         this.customParameters =  customParameters == null ? new HashMap<String, String>() : customParameters;
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public Map<String, String> getCustomParameters() {
1:         return customParameters;
1:     }
commit:64f241a
/////////////////////////////////////////////////////////////////////////
1:     public static final String NS_JPA2 = "http://aries.apache.org/xmlns/jpa/v2.0.0";
commit:119afa3
/////////////////////////////////////////////////////////////////////////
1:     public static final String NS_TX2 = "http://aries.apache.org/xmlns/transactions/v2.0.0";
1: 
commit:0d2c0ec
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.plugin;
1: 
1: import org.apache.aries.blueprint.plugin.spi.Activation;
1: import org.apache.aries.blueprint.plugin.spi.BlueprintConfiguration;
1: 
1: import java.util.Arrays;
1: import java.util.HashSet;
1: import java.util.Set;
1: 
0: import static org.apache.aries.blueprint.plugin.Generator.NS_JPA2;
0: import static org.apache.aries.blueprint.plugin.Generator.NS_TX2;
1: 
1: public class BlueprintConfigurationImpl implements BlueprintConfiguration {
1:     private final Set<String> namespaces;
1:     private final Activation defaultActivation;
1: 
0:     public BlueprintConfigurationImpl(Set<String> namespaces, Activation defaultActivation) {
1:         this.namespaces = namespaces != null ? namespaces : new HashSet<>(Arrays.asList(NS_TX2, NS_JPA2));
1:         this.defaultActivation = defaultActivation;
1:     }
1: 
1:     @Override
1:     public Set<String> getNamespaces() {
1:         return namespaces;
1:     }
1: 
1:     @Override
1:     public Activation getDefaultActivation() {
1:         return defaultActivation;
1:     }
1: }
============================================================================