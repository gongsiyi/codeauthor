1:868c96f: /**
1:868c96f:  * Licensed to the Apache Software Foundation (ASF) under one
1:868c96f:  * or more contributor license agreements.  See the NOTICE file
1:868c96f:  * distributed with this work for additional information
1:868c96f:  * regarding copyright ownership.  The ASF licenses this file
1:868c96f:  * to you under the Apache License, Version 2.0 (the
1:868c96f:  * "License"); you may not use this file except in compliance
1:868c96f:  * with the License.  You may obtain a copy of the License at
1:868c96f:  * <p>
1:868c96f:  * http://www.apache.org/licenses/LICENSE-2.0
1:868c96f:  * <p>
1:868c96f:  * Unless required by applicable law or agreed to in writing,
1:868c96f:  * software distributed under the License is distributed on an
1:868c96f:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:868c96f:  * KIND, either express or implied.  See the License for the
1:868c96f:  * specific language governing permissions and limitations
1:868c96f:  * under the License.
1:868c96f:  */
1:868c96f: package org.apache.aries.blueprint.plugin.spi;
2:868c96f: 
1:868c96f: import java.lang.annotation.Annotation;
1:868c96f: import java.lang.reflect.AnnotatedElement;
1:868c96f: 
1:fc7ae19: /**
1:fc7ae19:  * Annotation A allows for enriching blueprint XML or add new bean to context when injecting bean, e. g. for generating in bean which could be injected
1:fc7ae19:  */
1:fc7ae19: public interface CustomDependencyAnnotationHandler<A extends Annotation> extends AnnotationHandler<A> {
1:fc7ae19:     /**
1:fc7ae19:      * @param annotatedElement field or setter method
1:fc7ae19:      * @param name name of bean to inject (null if bean name is not provided)
1:fc7ae19:      * @param contextEnricher context enricher
1:fc7ae19:      * @return name of generated bean which should be injected or null
1:fc7ae19:      */
1:868c96f:     String handleDependencyAnnotation(AnnotatedElement annotatedElement, String name, ContextEnricher contextEnricher);
1:868c96f: 
1:fc7ae19:     /**
1:fc7ae19:      * @param clazz class of constructor parameter or setter parameter
1:fc7ae19:      * @param annotation instance of annotation A
1:fc7ae19:      * @param name name of bean to inject (null if bean name is not provided)
1:fc7ae19:      * @param contextEnricher context enricher
1:fc7ae19:      * @return name of generated bean which should be injected or null
1:fc7ae19:      */
1:868c96f:     String handleDependencyAnnotation(Class<?> clazz, A annotation, String name, ContextEnricher contextEnricher);
1:868c96f: }
============================================================================
author:Christian Schneider
-------------------------------------------------------------------------------
commit:808409a
author:Dominik Przybysz
-------------------------------------------------------------------------------
commit:fc7ae19
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Annotation A allows for enriching blueprint XML or add new bean to context when injecting bean, e. g. for generating in bean which could be injected
1:  */
1: public interface CustomDependencyAnnotationHandler<A extends Annotation> extends AnnotationHandler<A> {
1:     /**
1:      * @param annotatedElement field or setter method
1:      * @param name name of bean to inject (null if bean name is not provided)
1:      * @param contextEnricher context enricher
1:      * @return name of generated bean which should be injected or null
1:      */
1:     /**
1:      * @param clazz class of constructor parameter or setter parameter
1:      * @param annotation instance of annotation A
1:      * @param name name of bean to inject (null if bean name is not provided)
1:      * @param contextEnricher context enricher
1:      * @return name of generated bean which should be injected or null
1:      */
commit:b0360cc
commit:868c96f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * <p>
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * <p>
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.blueprint.plugin.spi;
1: 
1: import java.lang.annotation.Annotation;
1: import java.lang.reflect.AnnotatedElement;
1: 
0: public interface CustomDependencyAnnotationHandler<A extends Annotation> {
0:     Class<A> getAnnotation();
1: 
1:     String handleDependencyAnnotation(AnnotatedElement annotatedElement, String name, ContextEnricher contextEnricher);
1: 
1:     String handleDependencyAnnotation(Class<?> clazz, A annotation, String name, ContextEnricher contextEnricher);
1: }
============================================================================