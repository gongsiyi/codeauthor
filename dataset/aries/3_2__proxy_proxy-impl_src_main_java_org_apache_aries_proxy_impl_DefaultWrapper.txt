1:24455ce: /*
1:24455ce:  * Licensed to the Apache Software Foundation (ASF) under one
1:24455ce:  * or more contributor license agreements.  See the NOTICE file
1:24455ce:  * distributed with this work for additional information
1:24455ce:  * regarding copyright ownership.  The ASF licenses this file
1:24455ce:  * to you under the Apache License, Version 2.0 (the
1:24455ce:  * "License"); you may not use this file except in compliance
1:24455ce:  * with the License.  You may obtain a copy of the License at
1:24455ce:  *
1:24455ce:  *   http://www.apache.org/licenses/LICENSE-2.0
1:24455ce:  *
1:24455ce:  * Unless required by applicable law or agreed to in writing,
1:24455ce:  * software distributed under the License is distributed on an
1:24455ce:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:24455ce:  * KIND, either express or implied.  See the License for the
1:24455ce:  * specific language governing permissions and limitations
1:24455ce:  * under the License.
1:24455ce:  */
1:24455ce: package org.apache.aries.proxy.impl;
1:24455ce: 
1:24455ce: import java.lang.reflect.Method;
1:24455ce: 
1:96d4e06: import org.apache.aries.proxy.InvocationListener;
1:24455ce: 
1:96d4e06: public class DefaultWrapper implements InvocationListener {
1:96d4e06: 
1:24455ce: 
1:96d4e06:   public Object preInvoke(Object proxy, Method m, Object[] args)
1:96d4e06:       throws Throwable {
1:96d4e06:     return null;
1:96d4e06:   }
1:96d4e06: 
1:96d4e06:   public void postInvoke(Object token, Object proxy, Method m, Object returnValue)
1:96d4e06:       throws Throwable {
1:96d4e06:   }
1:96d4e06: 
1:96d4e06:   public void postInvokeExceptionalReturn(Object token, Object proxy, Method m,
1:96d4e06:       Throwable exception) throws Throwable {
1:24455ce:   }
1:24455ce: 
1:24455ce: }
============================================================================
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:96d4e06
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.proxy.InvocationListener;
1: public class DefaultWrapper implements InvocationListener {
1: 
1:   public Object preInvoke(Object proxy, Method m, Object[] args)
1:       throws Throwable {
1:     return null;
1:   }
1: 
1:   public void postInvoke(Object token, Object proxy, Method m, Object returnValue)
1:       throws Throwable {
1:   }
1: 
1:   public void postInvokeExceptionalReturn(Object token, Object proxy, Method m,
1:       Throwable exception) throws Throwable {
author:Alasdair Nottingham
-------------------------------------------------------------------------------
commit:24455ce
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.aries.proxy.impl;
1: 
0: import java.lang.reflect.InvocationHandler;
1: import java.lang.reflect.Method;
1: 
0: import org.apache.aries.proxy.InvocationHandlerWrapper;
1: 
0: public class DefaultWrapper implements InvocationHandlerWrapper {
1: 
0:   public Object invoke(Object proxy, Method m, Object[] args,
0:       InvocationHandler delegate) throws Throwable 
0:   {
0:     return delegate.invoke(proxy, m, args);
1:   }
1: 
1: }
author:Andrew Osborne
-------------------------------------------------------------------------------
commit:6a4e3c8
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: package org.apache.aries.blueprint.proxy;
0: 
0: public class ProxyClassInstantiationException extends UnableToProxyException
0: {
0:   /**
0:    * 
0:    */
0:   private static final long serialVersionUID = -2303296601108980837L;
0: 
0:   public ProxyClassInstantiationException(Class<?> clazz, Exception e)
0:   {
0:     super(clazz, e);
0:   }
0: 
0: }
============================================================================