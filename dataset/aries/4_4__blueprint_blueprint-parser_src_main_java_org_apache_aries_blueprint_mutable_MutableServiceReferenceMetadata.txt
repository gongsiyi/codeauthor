1:f13c6ac: /**
1:f13c6ac:  * Licensed to the Apache Software Foundation (ASF) under one
1:f13c6ac:  * or more contributor license agreements.  See the NOTICE file
1:f13c6ac:  * distributed with this work for additional information
1:f13c6ac:  * regarding copyright ownership.  The ASF licenses this file
1:f13c6ac:  * to you under the Apache License, Version 2.0 (the
1:f13c6ac:  * "License"); you may not use this file except in compliance
1:f13c6ac:  * with the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *   http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  * Unless required by applicable law or agreed to in writing,
1:f13c6ac:  * software distributed under the License is distributed on an
1:f13c6ac:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:f13c6ac:  * KIND, either express or implied.  See the License for the
1:f13c6ac:  * specific language governing permissions and limitations
1:f13c6ac:  * under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.mutable;
1:f13c6ac: 
1:6414875: import org.apache.aries.blueprint.ExtendedServiceReferenceMetadata;
1:f13c6ac: import org.osgi.service.blueprint.reflect.ReferenceListener;
1:f13c6ac: import org.osgi.service.blueprint.reflect.Target;
1:b13e703: import org.osgi.framework.BundleContext;
1:d46274e: import org.osgi.service.blueprint.reflect.ValueMetadata;
1:f13c6ac: 
1:f13c6ac: /**
1:f13c6ac:  * A mutable version of the <code>ServiceReferenceMetadata</code> that allows modifications.
1:f13c6ac:  *
1:76b662a:  * @version $Rev$, $Date$
1:f13c6ac:  */
1:f13c6ac: public interface MutableServiceReferenceMetadata extends ExtendedServiceReferenceMetadata, MutableComponentMetadata {
1:f13c6ac: 
1:f13c6ac:     void setAvailability(int availability);
1:f13c6ac: 
1:f13c6ac:     void setInterface(String interfaceName);
1:f13c6ac: 
1:f13c6ac:     void setComponentName(String componentName);
1:f13c6ac: 
1:f13c6ac:     void addServiceListener(ReferenceListener listener);
1:f13c6ac: 
1:f13c6ac:     ReferenceListener addServiceListener(Target listenerComponent,
1:f13c6ac:                                 String bindMethodName,
1:f13c6ac:                                 String unbindMethodName);
1:f13c6ac: 
1:f13c6ac:     void removeReferenceListener(ReferenceListener listener);
1:f13c6ac: 
1:f13c6ac:     void setProxyMethod(int proxyMethod);
1:f13c6ac: 
1:902e4f8:     void setFilter(String filter);
1:774ce31: 
1:774ce31:     void setRuntimeInterface(Class clazz);
1:b13e703:     
1:49d1fb2:     /**
1:49d1fb2:      * Used to set a {@link BundleContext} for this reference lookup. If this
1:49d1fb2:      * is set to null (or left unset) then the bundle context of the blueprint
1:49d1fb2:      * bundle will be used (normal behaviour)
1:49d1fb2:      * @param bc
1:49d1fb2:      */
1:b13e703:     void setBundleContext(BundleContext bc);
1:d46274e: 
1:d46274e:     void setExtendedFilter(ValueMetadata filter);
1:f13c6ac: }
============================================================================
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:d46274e
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.service.blueprint.reflect.ValueMetadata;
/////////////////////////////////////////////////////////////////////////
1: 
1:     void setExtendedFilter(ValueMetadata filter);
commit:774ce31
/////////////////////////////////////////////////////////////////////////
1: 
1:     void setRuntimeInterface(Class clazz);
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.geronimo.blueprint.mutable;
1: 
0: import org.apache.geronimo.blueprint.ExtendedServiceReferenceMetadata;
1: import org.osgi.service.blueprint.reflect.ReferenceListener;
1: import org.osgi.service.blueprint.reflect.Target;
1: 
1: /**
1:  * A mutable version of the <code>ServiceReferenceMetadata</code> that allows modifications.
1:  *
0:  * @author <a href="mailto:dev@geronimo.apache.org">Apache Geronimo Project</a>
0:  * @version $Rev: 766508 $, $Date: 2009-04-19 22:09:27 +0200 (Sun, 19 Apr 2009) $
1:  */
1: public interface MutableServiceReferenceMetadata extends ExtendedServiceReferenceMetadata, MutableComponentMetadata {
1: 
1:     void setAvailability(int availability);
1: 
1:     void setInterface(String interfaceName);
1: 
1:     void setComponentName(String componentName);
1: 
1:     void addServiceListener(ReferenceListener listener);
1: 
1:     ReferenceListener addServiceListener(Target listenerComponent,
1:                                 String bindMethodName,
1:                                 String unbindMethodName);
1: 
1:     void removeReferenceListener(ReferenceListener listener);
1: 
1:     void setProxyMethod(int proxyMethod);
1: 
1: }
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:49d1fb2
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Used to set a {@link BundleContext} for this reference lookup. If this
1:      * is set to null (or left unset) then the bundle context of the blueprint
1:      * bundle will be used (normal behaviour)
1:      * @param bc
1:      */
commit:b13e703
/////////////////////////////////////////////////////////////////////////
1: import org.osgi.framework.BundleContext;
/////////////////////////////////////////////////////////////////////////
1:     
1:     void setBundleContext(BundleContext bc);
author:Valentin Mahrwald
-------------------------------------------------------------------------------
commit:09a7647
commit:902e4f8
/////////////////////////////////////////////////////////////////////////
1:     void setFilter(String filter);
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:76b662a
/////////////////////////////////////////////////////////////////////////
1:  * @version $Rev$, $Date$
commit:de68801
/////////////////////////////////////////////////////////////////////////
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.mutable;
1: import org.apache.aries.blueprint.ExtendedServiceReferenceMetadata;
============================================================================