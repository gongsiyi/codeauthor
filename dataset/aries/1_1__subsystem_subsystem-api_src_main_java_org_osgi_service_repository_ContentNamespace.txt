1:7d296ee: /*
1:7d296ee:  * Copyright (c) OSGi Alliance (2011, 2012). All Rights Reserved.
1:7d296ee:  * 
1:7d296ee:  * Licensed under the Apache License, Version 2.0 (the "License");
1:7d296ee:  * you may not use this file except in compliance with the License.
1:7d296ee:  * You may obtain a copy of the License at
1:7d296ee:  *
1:7d296ee:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7d296ee:  *
1:7d296ee:  * Unless required by applicable law or agreed to in writing, software
1:7d296ee:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7d296ee:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7d296ee:  * See the License for the specific language governing permissions and
1:7d296ee:  * limitations under the License.
1:7d296ee:  */
1:7d296ee: 
1:7d296ee: package org.osgi.service.repository;
1:7d296ee: 
1:7d296ee: import org.osgi.resource.Namespace;
1:7d296ee: 
1:7d296ee: /**
1:7d296ee:  * Content Capability and Requirement Namespace.
1:7d296ee:  * 
1:7d296ee:  * <p>
1:7d296ee:  * This class defines the names for the attributes and directives for this
1:7d296ee:  * namespace. All unspecified capability attributes are of type {@code String}
1:7d296ee:  * and are used as arbitrary matching attributes for the capability. The values
1:7d296ee:  * associated with the specified directive and attribute keys are of type
1:7d296ee:  * {@code String}, unless otherwise indicated.
1:7d296ee:  * 
1:7d296ee:  * @Immutable
1:7d296ee:  * @version $Id$
1:7d296ee:  */
1:7d296ee: public final class ContentNamespace extends Namespace {
1:7d296ee: 
1:7d296ee: 	/**
1:7d296ee: 	 * Namespace name for content capabilities and requirements.
1:7d296ee: 	 * 
1:7d296ee: 	 * <p>
1:7d296ee: 	 * Also, the capability attribute used to specify the unique identifier of
1:7d296ee: 	 * the content. This identifier is the {@code SHA-256} hash of the content.
1:7d296ee: 	 */
1:7d296ee: 	public static final String	CONTENT_NAMESPACE			= "osgi.content";
1:7d296ee: 
1:7d296ee: 	/**
1:7d296ee: 	 * The capability attribute that contains the URL to the content.
1:7d296ee: 	 */
1:7d296ee: 	public static final String	CAPABILITY_URL_ATTRIBUTE	= "url";
1:7d296ee: 
1:7d296ee: 	/**
1:7d296ee: 	 * The capability attribute that contains the size, in bytes, of the
1:7d296ee: 	 * content. The value of this attribute must be of type {@code Long}.
1:7d296ee: 	 */
1:7d296ee: 	public static final String	CAPABILITY_SIZE_ATTRIBUTE	= "size";
1:7d296ee: 
1:7d296ee: 	/**
1:7d296ee: 	 * The capability attribute that defines the IANA MIME Type/Format for this
1:7d296ee: 	 * content.
1:7d296ee: 	 */
1:7d296ee: 	public static final String	CAPABILITY_MIME_ATTRIBUTE	= "mime";
1:7d296ee: 
1:7d296ee: 	private ContentNamespace() {
1:7d296ee: 		// empty
1:7d296ee: 	}
1:7d296ee: }
============================================================================
author:John Ross
-------------------------------------------------------------------------------
commit:7d296ee
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Copyright (c) OSGi Alliance (2011, 2012). All Rights Reserved.
1:  * 
1:  * Licensed under the Apache License, Version 2.0 (the "License");
1:  * you may not use this file except in compliance with the License.
1:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.osgi.service.repository;
1: 
1: import org.osgi.resource.Namespace;
1: 
1: /**
1:  * Content Capability and Requirement Namespace.
1:  * 
1:  * <p>
1:  * This class defines the names for the attributes and directives for this
1:  * namespace. All unspecified capability attributes are of type {@code String}
1:  * and are used as arbitrary matching attributes for the capability. The values
1:  * associated with the specified directive and attribute keys are of type
1:  * {@code String}, unless otherwise indicated.
1:  * 
1:  * @Immutable
1:  * @version $Id$
1:  */
1: public final class ContentNamespace extends Namespace {
1: 
1: 	/**
1: 	 * Namespace name for content capabilities and requirements.
1: 	 * 
1: 	 * <p>
1: 	 * Also, the capability attribute used to specify the unique identifier of
1: 	 * the content. This identifier is the {@code SHA-256} hash of the content.
1: 	 */
1: 	public static final String	CONTENT_NAMESPACE			= "osgi.content";
1: 
1: 	/**
1: 	 * The capability attribute that contains the URL to the content.
1: 	 */
1: 	public static final String	CAPABILITY_URL_ATTRIBUTE	= "url";
1: 
1: 	/**
1: 	 * The capability attribute that contains the size, in bytes, of the
1: 	 * content. The value of this attribute must be of type {@code Long}.
1: 	 */
1: 	public static final String	CAPABILITY_SIZE_ATTRIBUTE	= "size";
1: 
1: 	/**
1: 	 * The capability attribute that defines the IANA MIME Type/Format for this
1: 	 * content.
1: 	 */
1: 	public static final String	CAPABILITY_MIME_ATTRIBUTE	= "mime";
1: 
1: 	private ContentNamespace() {
1: 		// empty
1: 	}
1: }
commit:ec9e430
/////////////////////////////////////////////////////////////////////////
commit:aac6a2a
/////////////////////////////////////////////////////////////////////////
0:  * @version $Id: 24fa1339b403f5e6fb8b1f639bedc8917744713e $
/////////////////////////////////////////////////////////////////////////
0: 	public static final String	CONTENT_NAMESPACE			= "osgi.content";
0: 	 * The capability attribute that contains the URL to the content.
0: 	public static final String	CAPABILITY_URL_ATTRIBUTE	= "url";
0: 	 * The capability attribute that contains the size, in bytes, of the
0: 	 * content. The value of this attribute must be of type {@code Long}.
0: 	public static final String	CAPABILITY_SIZE_ATTRIBUTE	= "size";
0: 	public static final String	CAPABILITY_MIME_ATTRIBUTE	= "mime";
commit:8ee8aac
/////////////////////////////////////////////////////////////////////////
0: 
0: import org.osgi.resource.Namespace;
0:  * Content Capability and Requirement Namespace.
0:  * 
0:  * <p>
0:  * This class defines the names for the attributes and directives for this
0:  * namespace. All unspecified capability attributes are of type {@code String}
0:  * and are used as arbitrary matching attributes for the capability. The values
0:  * associated with the specified directive and attribute keys are of type
0:  * {@code String}, unless otherwise indicated.
0:  * 
0:  * TODO ### Not sure this is complete. Needs to by synced with 132.4.
0:  * 
0:  * @Immutable
0:  * @version $Id: 67140e8968223906b03ef68fbfff653020e564fb $
0: public final class ContentNamespace extends Namespace {
0: 
0: 	/**
0: 	 * Namespace name for content capabilities and requirements.
0: 	 * 
0: 	 * <p>
0: 	 * Also, the capability attribute used to specify the unique identifier of
0: 	 * the content. This identifier is the {@code SHA-256} hash of the content.
0: 	 */
0: 	public static final String	CONTENT_NAMESPACE					= "osgi.content";
0: 
0: 	/**
0: 	 * The mandatory capability attribute that contains the size, in bytes, of
0: 	 * the content. The value of this attribute must be of type {@code Long}.
0: 	 */
0: 	public final String			CAPABILITY_SIZE_ATTRIBUTE			= "size";
0: 
0: 	/**
0: 	 * The capability attribute that contains a human readable copyright notice.
0: 	 */
0: 	public final String			CAPABILITY_COPYRIGHT_ATTRIBUTE		= "copyright";
0: 
0: 	/**
0: 	 * The capability attribute that contains a human readable description.
0: 	 */
0: 	public final String			CAPABILITY_DESCRIPTION_ATTRIBUTE	= "description";
0: 
0: 	/**
0: 	 * The capability attribute that contains a reference to the resource
0: 	 * containing the documentation for the content.
0: 	 * 
0: 	 */
0: 	public final String			CAPABILITY_DOCUMENTATION_ATTRIBUTE	= "documentation";
0: 
0: 	/**
0: 	 * The capability attribute that contains the license name of the resource as 
0: 	 * defined in the Bundle-License header.
0: 	 */
0: 	public final String			CAPABILITY_LICENSE_ATTRIBUTE		= "license";
0: 
0: 	/**
0: 	 * The capability attribute that defines the IANA MIME Type/Format for this
0: 	 * content.
0: 	 * 
0: 	 */
0: 	public final String			CAPABILITY_MIME_ATTRIBUTE			= "mime";
0: 
0: 	/**
0: 	 * A Requirement Directive that specifies that this Requirement is a
0: 	 * relation to another Resource with the given content type.
0: 	 * 
0: 	 */
0: 	public final String			REQUIREMENT_RELATION_DIRECTIVE		= "relation";
0: 
0: 		// empty
commit:a1c6951
/////////////////////////////////////////////////////////////////////////
0:  * Copyright (c) OSGi Alliance (2011, 2012). All Rights Reserved.
/////////////////////////////////////////////////////////////////////////
0:  * locate content via the {@link Repository#findProviders(java.util.Collection)}
0:  * method.
commit:1c9c28b
/////////////////////////////////////////////////////////////////////////
0: public final class ContentNamespace {
0: 	private ContentNamespace() {
0: 		// non-instantiable
0: 	}
0: 	/**
0: 	 * Namespace of the content capability
0: 	 */
0: 	public final String		CAPABILITY					= "osgi.content";
0: 	/**
0: 	 * Checksum attribute of a resource
0: 	 */
0: 	public final String		CHECKSUM_ATTRIBUTE			= "checksum";
0: 	/**
0: 	 * The checksum algorithm used to calculate the {@link #CHECKSUM_ATTRIBUTE}
0: 	 * if not specified this is assumed to be SHA-256 - TODO need default?
0: 	 */
0: 	public final String		CHECKSUM_ALGO_ATTRIBUTE		= "checksumAlgo";
0: 	/**
0: 	 * A copyright statement for the resource
0: 	 */
0: 	public final String		COPYRIGHT_ATTRIBUTE			= "copyright";
0: 	/**
0: 	 * A human readable description of this resource
0: 	 */
0: 	public final String		DESCRIPTION_ATTRIBUTE		= "description";
0: 	/**
0: 	 * A URL where documentation for this resource can be accessed
0: 	 */
0: 	public final String		DOCUMENTATION_URL_ATTRIBUTE	= "documentation";
0: 	/**
0: 	 * Provides an optional machine readable form of license information. See
0: 	 * section 3.2.1.10 of the OSGi Core Specification for information on it's
0: 	 * usage.
0: 	 */
0: 	public final String		LICENSE_ATTRIBUTE			= "license";
0: 	/**
0: 	 * A URL where source control management for this resource is located
0: 	 */
0: 	public final String		SCM_URL_ATTRIBUTE			= "scm";
0: 	/**
0: 	 * The size of this resource in bytes.
0: 	 */
0: 	public final String		SIZE_ATTRIBUTE				= "size";
0: 	/**
0: 	 * A URL where source code for this resource is located
0: 	 */
0: 	public final String		SOURCE_URL_ATTRIBUTE		= "source";
0: 
0: 	/**
0: 	 * All attributes defined in this interface
0: 	 */
0: 	public final String[]	ATTRIBUTES					= {CHECKSUM_ATTRIBUTE,
0: 			CHECKSUM_ALGO_ATTRIBUTE, COPYRIGHT_ATTRIBUTE,
0: 			DESCRIPTION_ATTRIBUTE, DOCUMENTATION_URL_ATTRIBUTE,
0: 			LICENSE_ATTRIBUTE, SCM_URL_ATTRIBUTE, SIZE_ATTRIBUTE,
0: 			SOURCE_URL_ATTRIBUTE						};
commit:ead9c04
/////////////////////////////////////////////////////////////////////////
0: import org.osgi.framework.resource.Requirement;
0: 
0:  * locate content via the {@link Repository#findProviders(Requirement)} method.
commit:b1d7587
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Copyright (c) OSGi Alliance (2011). All Rights Reserved.
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.osgi.service.repository;
0: 
0: /**
0:  * Constants for use in the "osgi.content" namespace. This namespace is used to
0:  * locate content via the
0:  * {@link Repository#findProviders(org.osgi.framework.wiring.Requirement...)}
0:  * method.
0:  */
0: public interface ContentNamespace {
0:   /**
0:    * Namespace of the content capability
0:    */
0:   final String CAPABILITY = "osgi.content";
0: 
0:   /**
0:    * Checksum attribute of a resource
0:    */
0:   final String CHECKSUM_ATTRIBUTE = "checksum";
0: 
0:   /**
0:    * The checksum algorithm used to calculate the {@link #CHECKSUM_ATTRIBUTE} if
0:    * not specified this is assumed to be SHA-256 - TODO need default?
0:    */
0:   final String CHECKSUM_ALGO_ATTRIBUTE = "checksumAlgo";
0: 
0:   /**
0:    * A copyright statement for the resource
0:    */
0:   final String COPYRIGHT_ATTRIBUTE = "copyright";
0: 
0:   /**
0:    * A human readable description of this resource
0:    */
0:   final String DESCRIPTION_ATTRIBUTE = "description";
0: 
0:   /**
0:    * A URL where documentation for this resource can be accessed
0:    */
0:   final String DOCUMENTATION_URL_ATTRIBUTE = "documentation";
0: 
0:   /**
0:    * Provides an optional machine readable form of license information. See
0:    * section 3.2.1.10 of the OSGi Core Specification for information on it's
0:    * usage.
0:    */
0:   final String LICENSE_ATTRIBUTE = "license";
0: 
0:   /**
0:    * A URL where source control management for this resource is located
0:    */
0:   final String SCM_URL_ATTRIBUTE = "scm";
0: 
0:   /**
0:    * The size of this resource in bytes.
0:    */
0:   final String SIZE_ATTRIBUTE = "size";
0: 
0:   /**
0:    * A URL where source code for this resource is located
0:    */
0:   final String SOURCE_URL_ATTRIBUTE = "source";
0: 
0:   /**
0:    * All attributes defined in this interface
0:    */
0:   final String[] ATTRIBUTES = { CHECKSUM_ATTRIBUTE, CHECKSUM_ALGO_ATTRIBUTE,
0:       COPYRIGHT_ATTRIBUTE, DESCRIPTION_ATTRIBUTE, DOCUMENTATION_URL_ATTRIBUTE,
0:       LICENSE_ATTRIBUTE, SCM_URL_ATTRIBUTE, SIZE_ATTRIBUTE,
0:       SOURCE_URL_ATTRIBUTE };
0: }
============================================================================