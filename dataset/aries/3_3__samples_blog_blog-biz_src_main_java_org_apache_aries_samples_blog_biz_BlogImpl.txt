1:430e8f5: /**
1:430e8f5:  * Licensed to the Apache Software Foundation (ASF) under one
1:430e8f5:  * or more contributor license agreements.  See the NOTICE file
1:430e8f5:  * distributed with this work for additional information
1:430e8f5:  * regarding copyright ownership.  The ASF licenses this file
1:430e8f5:  * to you under the Apache License, Version 2.0 (the
1:430e8f5:  * "License"); you may not use this file except in compliance
1:430e8f5:  * with the License.  You may obtain a copy of the License at
1:430e8f5:  *
1:430e8f5:  *   http://www.apache.org/licenses/LICENSE-2.0
1:430e8f5:  *
1:430e8f5:  * Unless required by applicable law or agreed to in writing,
1:430e8f5:  * software distributed under the License is distributed on an
1:430e8f5:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:430e8f5:  * KIND, either express or implied.  See the License for the
1:430e8f5:  * specific language governing permissions and limitations
1:430e8f5:  * under the License.
1:430e8f5:  */
1:e0beeec: package org.apache.aries.samples.blog.biz;
9:430e8f5: 
1:bb9ffe7: import org.apache.aries.samples.blog.api.Blog;
1:430e8f5: 
1:430e8f5: 
1:430e8f5: /** Implementation of Blog */
1:430e8f5: public class BlogImpl implements Blog
5:430e8f5: {
1:430e8f5:   
1:430e8f5:   public String getBlogTitle()
1:430e8f5:   {
1:430e8f5:     return "Sample Blog";
6:430e8f5:   }
1:430e8f5: }
============================================================================
author:Joseph Alan Bohn
-------------------------------------------------------------------------------
commit:e0beeec
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.samples.blog.biz;
author:Zoe Slattery
-------------------------------------------------------------------------------
commit:afa98ec
commit:607acfe
commit:bb9ffe7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.aries.samples.blog.api.Blog;
author:Timothy James Ward
-------------------------------------------------------------------------------
commit:430e8f5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
0: package org.apache.aries.samples.blog;
1: 
0: import java.util.ArrayList;
0: import java.util.Arrays;
0: import java.util.List;
1: 
0: import org.apache.aries.samples.blog.api.*;
0: import org.apache.aries.samples.blog.persistence.api.Author;
0: import org.apache.aries.samples.blog.persistence.api.BlogEntry;
1: 
1: 
1: /** Implementation of Blog */
1: public class BlogImpl implements Blog
1: {
0:   private BlogPostManager postManager;
0:   private AuthorManager authorManager;
1:   
0:   public BlogImpl(AuthorManager aManager, BlogPostManager bManager)
1:   {
0:     postManager = bManager;
0:     authorManager = aManager;
1:   }
1: 
1:   public String getBlogTitle()
1:   {
1:     return "Sample Blog";
1:   }
1: 
0:   public int getNoOfPosts()
1:   {
0:     return postManager.getNoOfPosts();
1:   }
1:   
0:   public List<BlogPost> getPosts(int firstPostIndex, int noOfPosts)
1:   {
0:     List<BlogEntry> entries = postManager.getBlogEntries(firstPostIndex, noOfPosts);
0:     List<BlogPost> posts = new ArrayList<BlogPost>();
1:     
0:     for (BlogEntry entry : entries) {
0:       posts.add(new BlogPostImpl(entry, postManager));
1:     }
1:     
0:     return posts;
1:   }
1: 
0:   public void createPost(String email, String title, String text, String tags)
1:   {
0:     Author author = authorManager.getAuthor(email);
1:     
0:     postManager.createBlogPost(author, title, text, Arrays.asList(tags.split(",")));
1:   }
1: }
============================================================================