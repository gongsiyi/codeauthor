1:f13c6ac: /**
1:f13c6ac:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:f13c6ac:  *  contributor license agreements.  See the NOTICE file distributed with
1:f13c6ac:  *  this work for additional information regarding copyright ownership.
1:f13c6ac:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:f13c6ac:  *  (the "License"); you may not use this file except in compliance with
1:f13c6ac:  *  the License.  You may obtain a copy of the License at
1:f13c6ac:  *
1:f13c6ac:  *     http://www.apache.org/licenses/LICENSE-2.0
1:f13c6ac:  *
1:f13c6ac:  *  Unless required by applicable law or agreed to in writing, software
1:f13c6ac:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:f13c6ac:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f13c6ac:  *  See the License for the specific language governing permissions and
1:f13c6ac:  *  limitations under the License.
1:f13c6ac:  */
1:6414875: package org.apache.aries.blueprint.sample;
1:f13c6ac: 
1:f13c6ac: import java.io.Serializable;
1:f13c6ac: import java.util.Map;
1:f13c6ac: 
1:f13c6ac: public class FooRegistrationListener {
1:f13c6ac:         
1:69489a8:     private Map props;
1:69489a8:     
1:69489a8:     private Object lock = new Object();
1:69489a8:     
1:f13c6ac:     public void serviceRegistered(Serializable foo, Map props) {
1:f13c6ac:         System.out.println("Service registration notification: " + foo + " " + props);
1:69489a8:         synchronized (lock) {
1:69489a8:             this.props = props;
1:69489a8:         }
1:f13c6ac:     }
1:f13c6ac:     
1:f13c6ac:     public void serviceUnregistered(Foo foo, Map props) {
1:f13c6ac:         System.out.println("Service unregistration notification: " + foo + " " + props);
1:f13c6ac:     }
1:69489a8:     
1:69489a8:     public Map getProperties() {
1:69489a8:         synchronized (lock) {
1:69489a8:             return this.props;
1:69489a8:         }
1:69489a8:     }
1:f13c6ac: 
1:f13c6ac: }
============================================================================
author:Jarek Gawor
-------------------------------------------------------------------------------
commit:69489a8
/////////////////////////////////////////////////////////////////////////
1:     private Map props;
1:     
1:     private Object lock = new Object();
1:     
1:         synchronized (lock) {
1:             this.props = props;
1:         }
1:     
1:     public Map getProperties() {
1:         synchronized (lock) {
1:             return this.props;
1:         }
1:     }
commit:6414875
/////////////////////////////////////////////////////////////////////////
1: package org.apache.aries.blueprint.sample;
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:f13c6ac
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
0: package org.apache.geronimo.blueprint.sample;
1: 
1: import java.io.Serializable;
1: import java.util.Map;
1: 
1: public class FooRegistrationListener {
1:         
1:     public void serviceRegistered(Serializable foo, Map props) {
1:         System.out.println("Service registration notification: " + foo + " " + props);
1:     }
1:     
1:     public void serviceUnregistered(Foo foo, Map props) {
1:         System.out.println("Service unregistration notification: " + foo + " " + props);
1:     }
1: 
1: }
============================================================================