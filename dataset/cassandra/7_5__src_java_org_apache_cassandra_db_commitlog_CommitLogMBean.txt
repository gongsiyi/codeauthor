2:1025461: /*
2:1025461:  * Licensed to the Apache Software Foundation (ASF) under one
2:1025461:  * or more contributor license agreements.  See the NOTICE file
2:1025461:  * distributed with this work for additional information
2:1025461:  * regarding copyright ownership.  The ASF licenses this file
2:1025461:  * to you under the Apache License, Version 2.0 (the
2:1025461:  * "License"); you may not use this file except in compliance
2:1025461:  * with the License.  You may obtain a copy of the License at
3:1025461:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1025461:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
8:1025461:  */
2:1025461: package org.apache.cassandra.db.commitlog;
1:5923d32: 
1:5923d32: 
1:5923d32: import java.io.IOException;
1:5923d32: import java.util.List;
1:675a0f4: import java.util.Map;
10:1025461: 
2:1025461: public interface CommitLogMBean
2:1025461: {
1:5923d32:     /**
1:77c66bf:      *  Command to execute to archive a commitlog segment.  Blank to disabled.
1:77c66bf:      */
1:77c66bf:     public String getArchiveCommand();
1:77c66bf: 
1:77c66bf:     /**
1:77c66bf:      * Command to execute to make an archived commitlog live again
1:77c66bf:      */
1:77c66bf:     public String getRestoreCommand();
1:77c66bf: 
1:77c66bf:     /**
1:77c66bf:      * Directory to scan the recovery files in
1:77c66bf:      */
1:77c66bf:     public String getRestoreDirectories();
1:77c66bf: 
1:77c66bf:     /**
1:77c66bf:      * Restore mutations created up to and including this timestamp in GMT
1:77c66bf:      * Format: yyyy:MM:dd HH:mm:ss (2012:04:31 20:43:12)
1:77c66bf:      *
1:77c66bf:      * Recovery will continue through the segment when the first client-supplied
1:77c66bf:      * timestamp greater than this time is encountered, but only mutations less than
1:77c66bf:      * or equal to this timestamp will be applied.
1:77c66bf:      */
1:77c66bf:     public long getRestorePointInTime();
1:77c66bf: 
1:77c66bf:     /**
1:77c66bf:      * get precision of the timestamp used in the restore (MILLISECONDS, MICROSECONDS, ...)
1:77c66bf:      * to determine if passed the restore point in time.
1:77c66bf:      */
1:77c66bf:     public String getRestorePrecision();
1:77c66bf: 
1:77c66bf:     /**
1:5923d32:      * Recover a single file.
1:5923d32:      */
1:5923d32:     public void recover(String path) throws IOException;
1:5923d32: 
1:5923d32:     /**
1:5923d32:      * @return file names (not full paths) of active commit log segments (segments containing unflushed data)
1:5923d32:      */
1:5923d32:     public List<String> getActiveSegmentNames();
1:675a0f4: 
1:5923d32:     /**
1:5923d32:      * @return Files which are pending for archival attempt.  Does NOT include failed archive attempts.
1:5923d32:      */
1:5923d32:     public List<String> getArchivingSegmentNames();
1:675a0f4: 
1:675a0f4:     /**
1:675a0f4:      * @return The size of the mutations in all active commit log segments (uncompressed).
1:675a0f4:      */
1:675a0f4:     public long getActiveContentSize();
1:675a0f4: 
1:675a0f4:     /**
1:675a0f4:      * @return The space taken on disk by the commit log (compressed).
1:675a0f4:      */
1:675a0f4:     public long getActiveOnDiskSize();
1:675a0f4: 
1:675a0f4:     /**
1:675a0f4:      * @return A map between active log segments and the compression ratio achieved for each.
1:675a0f4:      */
1:675a0f4:     public Map<String, Double> getActiveSegmentCompressionRatios();
1:69cedbf: }
============================================================================
author:Jason Brown
-------------------------------------------------------------------------------
commit:675a0f4
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1:     /**
1:      * @return The size of the mutations in all active commit log segments (uncompressed).
1:      */
1:     public long getActiveContentSize();
1: 
1:     /**
1:      * @return The space taken on disk by the commit log (compressed).
1:      */
1:     public long getActiveOnDiskSize();
1: 
1:     /**
1:      * @return A map between active log segments and the compression ratio achieved for each.
1:      */
1:     public Map<String, Double> getActiveSegmentCompressionRatios();
author:Joshua McKenzie
-------------------------------------------------------------------------------
commit:c38ea0b
author:Chris Lohfink
-------------------------------------------------------------------------------
commit:77c66bf
/////////////////////////////////////////////////////////////////////////
1:      *  Command to execute to archive a commitlog segment.  Blank to disabled.
1:      */
1:     public String getArchiveCommand();
1: 
1:     /**
1:      * Command to execute to make an archived commitlog live again
1:      */
1:     public String getRestoreCommand();
1: 
1:     /**
1:      * Directory to scan the recovery files in
1:      */
1:     public String getRestoreDirectories();
1: 
1:     /**
1:      * Restore mutations created up to and including this timestamp in GMT
1:      * Format: yyyy:MM:dd HH:mm:ss (2012:04:31 20:43:12)
1:      *
1:      * Recovery will continue through the segment when the first client-supplied
1:      * timestamp greater than this time is encountered, but only mutations less than
1:      * or equal to this timestamp will be applied.
1:      */
1:     public long getRestorePointInTime();
1: 
1:     /**
1:      * get precision of the timestamp used in the restore (MILLISECONDS, MICROSECONDS, ...)
1:      * to determine if passed the restore point in time.
1:      */
1:     public String getRestorePrecision();
1: 
1:     /**
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:8896a70
/////////////////////////////////////////////////////////////////////////
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:69cedbf
/////////////////////////////////////////////////////////////////////////
0:      * @see org.apache.cassandra.metrics.CommitLogMetrics#completedTasks
0:     @Deprecated
0:      * @see org.apache.cassandra.metrics.CommitLogMetrics#pendingTasks
0:     @Deprecated
0:      * @see org.apache.cassandra.metrics.CommitLogMetrics#totalCommitLogSize
0:     @Deprecated
/////////////////////////////////////////////////////////////////////////
1: }
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:64305dd
commit:5923d32
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1: import java.util.List;
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Recover a single file.
1:      */
1:     public void recover(String path) throws IOException;
1: 
1:     /**
1:      * @return file names (not full paths) of active commit log segments (segments containing unflushed data)
1:      */
1:     public List<String> getActiveSegmentNames();
1:     
1:     /**
1:      * @return Files which are pending for archival attempt.  Does NOT include failed archive attempts.
1:      */
1:     public List<String> getArchivingSegmentNames();
commit:3de6720
/////////////////////////////////////////////////////////////////////////
0: }
commit:1025461
/////////////////////////////////////////////////////////////////////////
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
0: *    http://www.apache.org/licenses/LICENSE-2.0
1: *
0: * Unless required by applicable law or agreed to in writing,
0: * software distributed under the License is distributed on an
0: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0: * KIND, either express or implied.  See the License for the
0: * specific language governing permissions and limitations
0: * under the License.
1: */
1: package org.apache.cassandra.db.commitlog;
1: 
1: 
1: 
1: public interface CommitLogMBean
1: {
0:     /**
0:      * Get the number of completed tasks
1:      */
0:     public long getCompletedTasks();
1: 
0:     /**
0:      * Get the number of tasks waiting to be executed
1:      */
0:     public long getPendingTasks();
1: 
0:     /**
0:      * Get the current size used by all the commitlog segments.
1:      */
0:     public long getTotalCommitlogSize();
0: }
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
0: *    http://www.apache.org/licenses/LICENSE-2.0
1: *
0: * Unless required by applicable law or agreed to in writing,
0: * software distributed under the License is distributed on an
0: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0: * KIND, either express or implied.  See the License for the
0: * specific language governing permissions and limitations
0: * under the License.
1: */
1: package org.apache.cassandra.db.commitlog;
1: 
1: 
1: 
1: public interface CommitLogMBean
1: {
0:     /**
0:      * Get the number of completed tasks
1:      */
0:     public long getCompletedTasks();
1: 
0:     /**
0:      * Get the number of tasks waiting to be executed
1:      */
0:     public long getPendingTasks();
1: 
0:     /**
0:      * Get the current size used by all the commitlog segments.
1:      */
0:     public long getTotalCommitlogSize();
0: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
0:  */
============================================================================