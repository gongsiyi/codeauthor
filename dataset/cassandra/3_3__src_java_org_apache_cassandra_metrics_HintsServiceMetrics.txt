1:96d41f0: /*
1:96d41f0:  * Licensed to the Apache Software Foundation (ASF) under one
1:96d41f0:  * or more contributor license agreements.  See the NOTICE file
1:96d41f0:  * distributed with this work for additional information
1:96d41f0:  * regarding copyright ownership.  The ASF licenses this file
1:96d41f0:  * to you under the Apache License, Version 2.0 (the
1:96d41f0:  * "License"); you may not use this file except in compliance
1:96d41f0:  * with the License.  You may obtain a copy of the License at
1:96d41f0:  *
1:96d41f0:  *     http://www.apache.org/licenses/LICENSE-2.0
1:96d41f0:  *
1:96d41f0:  * Unless required by applicable law or agreed to in writing, software
1:96d41f0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:96d41f0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:96d41f0:  * See the License for the specific language governing permissions and
1:96d41f0:  * limitations under the License.
1:96d41f0:  */
1:96d41f0: package org.apache.cassandra.metrics;
1:96d41f0: 
1:0ac1079: import com.codahale.metrics.Meter;
1:0ac1079: 
1:0ac1079: import static org.apache.cassandra.metrics.CassandraMetricsRegistry.Metrics;
1:0ac1079: 
1:96d41f0: /**
1:79c5bc3:  * Metrics for {@link org.apache.cassandra.hints.HintsService}.
1:96d41f0:  */
1:96d41f0: public final class HintsServiceMetrics
1:96d41f0: {
1:0ac1079:     private static final MetricNameFactory factory = new DefaultNameFactory("HintsService");
1:0ac1079: 
1:0ac1079:     public static final Meter hintsSucceeded = Metrics.meter(factory.createMetricName("HintsSucceeded"));
1:0ac1079:     public static final Meter hintsFailed    = Metrics.meter(factory.createMetricName("HintsFailed"));
1:0ac1079:     public static final Meter hintsTimedOut  = Metrics.meter(factory.createMetricName("HintsTimedOut"));
1:96d41f0: }
============================================================================
author:Dikang Gu
-------------------------------------------------------------------------------
commit:0ac1079
/////////////////////////////////////////////////////////////////////////
1: import com.codahale.metrics.Meter;
1: 
1: import static org.apache.cassandra.metrics.CassandraMetricsRegistry.Metrics;
1: 
1:     private static final MetricNameFactory factory = new DefaultNameFactory("HintsService");
1: 
1:     public static final Meter hintsSucceeded = Metrics.meter(factory.createMetricName("HintsSucceeded"));
1:     public static final Meter hintsFailed    = Metrics.meter(factory.createMetricName("HintsFailed"));
1:     public static final Meter hintsTimedOut  = Metrics.meter(factory.createMetricName("HintsTimedOut"));
author:Dave Brosius
-------------------------------------------------------------------------------
commit:79c5bc3
/////////////////////////////////////////////////////////////////////////
1:  * Metrics for {@link org.apache.cassandra.hints.HintsService}.
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:96d41f0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.metrics;
1: 
1: /**
0:  * Metrics for {@link HintsService}.
1:  */
1: public final class HintsServiceMetrics
1: {
1: }
============================================================================