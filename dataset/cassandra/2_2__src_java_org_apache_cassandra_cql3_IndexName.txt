1:6a4144b: /*
1:6a4144b:  * Licensed to the Apache Software Foundation (ASF) under one
1:6a4144b:  * or more contributor license agreements.  See the NOTICE file
1:6a4144b:  * distributed with this work for additional information
1:6a4144b:  * regarding copyright ownership.  The ASF licenses this file
1:6a4144b:  * to you under the Apache License, Version 2.0 (the
1:6a4144b:  * "License"); you may not use this file except in compliance
1:6a4144b:  * with the License.  You may obtain a copy of the License at
1:6a4144b:  *
1:6a4144b:  *     http://www.apache.org/licenses/LICENSE-2.0
1:6a4144b:  *
1:6a4144b:  * Unless required by applicable law or agreed to in writing, software
1:6a4144b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6a4144b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6a4144b:  * See the License for the specific language governing permissions and
1:6a4144b:  * limitations under the License.
1:6a4144b:  */
1:6a4144b: package org.apache.cassandra.cql3;
5:6a4144b: 
1:68be72f: public final class IndexName extends KeyspaceElementName
4:6a4144b: {
1:6a4144b:     private String idxName;
1:6a4144b: 
1:6a4144b:     public void setIndex(String idx, boolean keepCase)
1:6a4144b:     {
1:68be72f:         idxName = toInternalName(idx, keepCase);
4:6a4144b:     }
1:6a4144b: 
1:6a4144b:     public String getIdx()
1:6a4144b:     {
1:6a4144b:         return idxName;
1:6a4144b:     }
1:6a4144b: 
1:6a4144b:     public CFName getCfName()
1:6a4144b:     {
1:6a4144b:         CFName cfName = new CFName();
1:6a4144b:         if (hasKeyspace())
1:68be72f:             cfName.setKeyspace(getKeyspace(), true);
1:6a4144b:     	return cfName;
1:6a4144b:     }
1:6a4144b: 
1:6a4144b:     @Override
1:6a4144b:     public String toString()
1:6a4144b:     {
1:68be72f:         return super.toString() + idxName;
1:6a4144b:     }
1:6a4144b: }
============================================================================
author:blerer
-------------------------------------------------------------------------------
commit:68be72f
/////////////////////////////////////////////////////////////////////////
1: public final class IndexName extends KeyspaceElementName
1:         idxName = toInternalName(idx, keepCase);
/////////////////////////////////////////////////////////////////////////
1:             cfName.setKeyspace(getKeyspace(), true);
1:         return super.toString() + idxName;
author:Tyler Hobbs
-------------------------------------------------------------------------------
commit:6a4144b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3;
1: 
0: import java.util.Locale;
1: 
0: public class IndexName 
1: {
0:     private String ksName;
1:     private String idxName;
1: 
0:     public void setKeyspace(String ks, boolean keepCase)
1:     {
0:         ksName = keepCase ? ks : ks.toLowerCase(Locale.US);
1:     }
1: 
1:     public void setIndex(String idx, boolean keepCase)
1:     {
0:         idxName = keepCase ? idx : idx.toLowerCase(Locale.US);
1:     }
1: 
0:     public boolean hasKeyspace()
1:     {
0:         return ksName != null;
1:     }
1: 
0:     public String getKeyspace()
1:     {
0:         return ksName;
1:     }
1: 
1:     public String getIdx()
1:     {
1:         return idxName;
1:     }
1: 
1:     public CFName getCfName()
1:     {
1:         CFName cfName = new CFName();
1:         if (hasKeyspace())
0:             cfName.setKeyspace(ksName, true);
1:     	return cfName;
1:     }
1: 
1:     @Override
1:     public String toString()
1:     {
0:         return (hasKeyspace() ? (ksName + ".") : "") + idxName;
1:     }
1: }
============================================================================