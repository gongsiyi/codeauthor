1:07cf56f: /*
1:621d1f9:  * Licensed to the Apache Software Foundation (ASF) under one
1:621d1f9:  * or more contributor license agreements.  See the NOTICE file
1:621d1f9:  * distributed with this work for additional information
1:621d1f9:  * regarding copyright ownership.  The ASF licenses this file
1:621d1f9:  * to you under the Apache License, Version 2.0 (the
1:621d1f9:  * "License"); you may not use this file except in compliance
1:621d1f9:  * with the License.  You may obtain a copy of the License at
1:621d1f9:  *
1:621d1f9:  *     http://www.apache.org/licenses/LICENSE-2.0
1:621d1f9:  *
1:621d1f9:  * Unless required by applicable law or agreed to in writing, software
1:621d1f9:  * distributed under the License is distributed on an "AS IS" BASIS,
1:621d1f9:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:621d1f9:  * See the License for the specific language governing permissions and
1:621d1f9:  * limitations under the License.
1:621d1f9:  */
1:0626be8: package org.apache.cassandra.index;
7:621d1f9: 
1:621d1f9: import org.apache.cassandra.db.compaction.CompactionInfo;
1:621d1f9: 
2:621d1f9: /**
1:bca27bd:  * Manages building an entire index from column family data. Runs on to compaction manager.
1:621d1f9:  */
1:440366e: public abstract class SecondaryIndexBuilder extends CompactionInfo.Holder
7:621d1f9: {
1:440366e:     public abstract void build();
7:621d1f9: }
============================================================================
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:440366e
/////////////////////////////////////////////////////////////////////////
1: public abstract class SecondaryIndexBuilder extends CompactionInfo.Holder
1:     public abstract void build();
commit:90170d1
/////////////////////////////////////////////////////////////////////////
0:         return new CompactionInfo(OperationType.INDEX_BUILD,
commit:4ec819e
commit:1d9b7f5
/////////////////////////////////////////////////////////////////////////
commit:621d1f9
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.cassandra.db.index;
1: 
0: import java.io.IOException;
0: import java.nio.ByteBuffer;
0: import java.util.SortedSet;
1: 
0: import org.apache.cassandra.db.ColumnFamilyStore;
0: import org.apache.cassandra.db.DecoratedKey;
0: import org.apache.cassandra.db.Table;
1: import org.apache.cassandra.db.compaction.CompactionInfo;
0: import org.apache.cassandra.db.compaction.CompactionType;
0: import org.apache.cassandra.io.sstable.ReducingKeyIterator;
1: 
1: /**
0:  * Manages building an entire index from column family data
0:  * Sent to compaction manager
1:  */
0: public class SecondaryIndexBuilder implements  CompactionInfo.Holder
1: {
1:     
0:     private final ColumnFamilyStore cfs;
0:     private final SortedSet<ByteBuffer> columns;
0:     private final ReducingKeyIterator iter;
1:     
0:     public SecondaryIndexBuilder(ColumnFamilyStore cfs, SortedSet<ByteBuffer> columns, ReducingKeyIterator iter)
1:     {
0:         this.cfs = cfs;
0:         this.columns = columns;
0:         this.iter = iter;
1:     }
1: 
0:     public CompactionInfo getCompactionInfo()
1:     {
0:         return new CompactionInfo(cfs.table.name,
0:                                   cfs.columnFamily,
0:                                   CompactionType.INDEX_BUILD,
0:                                   iter.getBytesRead(),
0:                                   iter.getTotalBytes());
1:     }
1: 
0:     public void build()
1:     {
0:         while (iter.hasNext())
1:         {
0:             DecoratedKey<?> key = iter.next();
0:             Table.indexRow(key, cfs, columns);
1:         }
1: 
0:         try
1:         {
0:             iter.close();
1:         }
0:         catch (IOException e)
1:         {
0:             throw new RuntimeException(e);
1:         }
1:     }
1: }
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:6094974
/////////////////////////////////////////////////////////////////////////
0:             iter.close();
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:0626be8
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.index;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.db.compaction.OperationType;
/////////////////////////////////////////////////////////////////////////
0:     private final Set<Index> indexers;
0:     public SecondaryIndexBuilder(ColumnFamilyStore cfs, Set<Index> indexers, ReducingKeyIterator iter)
0:         this.indexers = indexers;
/////////////////////////////////////////////////////////////////////////
0:                 Keyspace.indexPartition(key, cfs, indexers);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:a991b64
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.utils.FBUtilities;
/////////////////////////////////////////////////////////////////////////
0:         this.compactionId = UUIDGen.getTimeUUID();
/////////////////////////////////////////////////////////////////////////
0:             while (iter.hasNext())
0:             {
0:                 if (isStopRequested())
0:                     throw new CompactionInterruptedException(getCompactionInfo());
0:                 DecoratedKey key = iter.next();
0:                 Keyspace.indexPartition(key, cfs, idxNames);
0:             }
0:         finally
0:             try
0:             {
0:                 iter.close();
0:             }
0:             catch (IOException e)
0:             {
0:                 throw new RuntimeException(e);
0:             }
commit:80ea03f
/////////////////////////////////////////////////////////////////////////
0: import java.util.Set;
/////////////////////////////////////////////////////////////////////////
0:     private final Set<String> idxNames;
0:     public SecondaryIndexBuilder(ColumnFamilyStore cfs, Set<String> idxNames, ReducingKeyIterator iter)
0:         this.idxNames = idxNames;
/////////////////////////////////////////////////////////////////////////
0:             Table.indexRow(key, cfs, idxNames);
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
0: 
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
0: 
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
commit:ba0f2bc
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.db.compaction.UserInterruptedException;
0: public class SecondaryIndexBuilder extends CompactionInfo.Holder
/////////////////////////////////////////////////////////////////////////
0:             if (isStopped())
0:                 throw new UserInterruptedException(getCompactionInfo());
author:Lyuben Todorov
-------------------------------------------------------------------------------
commit:e194fe9
/////////////////////////////////////////////////////////////////////////
0: import java.util.UUID;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.utils.UUIDGen;
/////////////////////////////////////////////////////////////////////////
0:     private final UUID compactionId;
0:         compactionId = UUIDGen.getTimeUUID();
/////////////////////////////////////////////////////////////////////////
0:                                   iter.getTotalBytes(),
0:                                   compactionId);
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:0e96e58
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.db.Keyspace;
/////////////////////////////////////////////////////////////////////////
0:             Keyspace.indexRow(key, cfs, idxNames);
author:Dave Brosius
-------------------------------------------------------------------------------
commit:95f94a4
/////////////////////////////////////////////////////////////////////////
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:678f6ae
commit:6352edb
/////////////////////////////////////////////////////////////////////////
0:         return new CompactionInfo(cfs.metadata,
commit:c37fe54
/////////////////////////////////////////////////////////////////////////
0:             if (isStopRequested())
commit:bc783ba
commit:512d97f
/////////////////////////////////////////////////////////////////////////
0:             if (isStopRequested())
commit:5613f8f
commit:7e4ef1c
/////////////////////////////////////////////////////////////////////////
0:             DecoratedKey key = iter.next();
commit:508503d
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.db.compaction.CompactionInterruptedException;
/////////////////////////////////////////////////////////////////////////
0:                 throw new CompactionInterruptedException(getCompactionInfo());
commit:bca27bd
/////////////////////////////////////////////////////////////////////////
1:  * Manages building an entire index from column family data. Runs on to compaction manager.
commit:ceabffa
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.db.compaction.OperationType;
/////////////////////////////////////////////////////////////////////////
0:                                   OperationType.INDEX_BUILD,
commit:7ee366f
/////////////////////////////////////////////////////////////////////////
0:         return new CompactionInfo(this.hashCode(),
0:                                   cfs.table.name,
/////////////////////////////////////////////////////////////////////////
0: }
============================================================================