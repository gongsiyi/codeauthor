1:2e3727e: /*
1:2e3727e:  * Licensed to the Apache Software Foundation (ASF) under one
1:2e3727e:  * or more contributor license agreements.  See the NOTICE file
1:2e3727e:  * distributed with this work for additional information
1:2e3727e:  * regarding copyright ownership.  The ASF licenses this file
1:2e3727e:  * to you under the Apache License, Version 2.0 (the
1:2e3727e:  * "License"); you may not use this file except in compliance
1:2e3727e:  * with the License.  You may obtain a copy of the License at
1:2e3727e:  *
1:2e3727e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:2e3727e:  *
1:2e3727e:  * Unless required by applicable law or agreed to in writing, software
1:2e3727e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2e3727e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2e3727e:  * See the License for the specific language governing permissions and
1:2e3727e:  * limitations under the License.
1:2e3727e:  */
1:2e3727e: package org.apache.cassandra.cql3.statements;
1:2e3727e: 
1:2e3727e: public enum StatementType
1:2e3727e: {
1:2e3727e:     INSERT
1:2e3727e:     {
1:2e3727e:         @Override
1:2e3727e:         public boolean allowClusteringColumnSlices()
1:2e3727e:         {
1:2e3727e:             return false;
1:2e3727e:         }
1:2e3727e:     },
1:2e3727e:     UPDATE
1:2e3727e:     {
1:2e3727e: 
1:2e3727e:         @Override
1:2e3727e:         public boolean allowClusteringColumnSlices()
1:2e3727e:         {
1:2e3727e:             return false;
1:2e3727e:         }
1:2e3727e:     },
1:2e3727e:     DELETE
1:2e3727e:     {
1:2e3727e:     },
1:2e3727e:     SELECT
1:2e3727e:     {
1:2e3727e:         @Override
1:2e3727e:         public boolean allowPartitionKeyRanges()
1:2e3727e:         {
1:2e3727e:             return true;
1:2e3727e:         }
1:2e3727e: 
1:2e3727e:         @Override
1:2e3727e:         public boolean allowNonPrimaryKeyInWhereClause()
1:2e3727e:         {
1:2e3727e:             return true;
1:2e3727e:         }
1:2e3727e: 
1:2e3727e:         @Override
1:2e3727e:         public boolean allowUseOfSecondaryIndices()
1:2e3727e:         {
1:2e3727e:             return true;
1:2e3727e:         }
1:2e3727e:     };
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks if this type is an insert.
1:2e3727e:      * @return <code>true</code> if this type is an insert, <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean isInsert()
1:2e3727e:     {
1:2e3727e:         return this == INSERT;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks if this type is an update.
1:2e3727e:      * @return <code>true</code> if this type is an update, <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean isUpdate()
1:2e3727e:     {
1:2e3727e:         return this == UPDATE;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks if this type is a delete.
1:2e3727e:      * @return <code>true</code> if this type is a delete, <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean isDelete()
1:2e3727e:     {
1:2e3727e:         return this == DELETE;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks if this type is a select.
1:2e3727e:      * @return <code>true</code> if this type is a select, <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean isSelect()
1:2e3727e:     {
1:2e3727e:         return this == SELECT;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks this statement allow the where clause to contains missing partition key components or token relation.
1:2e3727e:      * @return <code>true</code> if this statement allow the where clause to contains missing partition key components
1:2e3727e:      * or token relation, <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean allowPartitionKeyRanges()
1:2e3727e:     {
1:2e3727e:         return false;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks this type of statement allow the where clause to contains clustering column slices.
1:2e3727e:      * @return <code>true</code> if this type of statement allow the where clause to contains clustering column slices,
1:2e3727e:      * <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean allowClusteringColumnSlices()
1:2e3727e:     {
1:2e3727e:         return true;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks if this type of statement allow non primary key in the where clause.
1:2e3727e:      * @return <code>true</code> if this type of statement allow non primary key in the where clause,
1:2e3727e:      * <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean allowNonPrimaryKeyInWhereClause()
1:2e3727e:     {
1:2e3727e:         return false;
1:2e3727e:     }
1:2e3727e: 
1:2e3727e:     /**
1:2e3727e:      * Checks if this type of statement allow the use of secondary indices.
1:2e3727e:      * @return <code>true</code> if this type of statement allow the use of secondary indices,
1:2e3727e:      * <code>false</code> otherwise.
1:2e3727e:      */
1:2e3727e:     public boolean allowUseOfSecondaryIndices()
1:2e3727e:     {
1:2e3727e:         return false;
1:2e3727e:     }
1:2e3727e: }
============================================================================
author:blerer
-------------------------------------------------------------------------------
commit:2e3727e
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3.statements;
1: 
1: public enum StatementType
1: {
1:     INSERT
1:     {
1:         @Override
1:         public boolean allowClusteringColumnSlices()
1:         {
1:             return false;
1:         }
1:     },
1:     UPDATE
1:     {
1: 
1:         @Override
1:         public boolean allowClusteringColumnSlices()
1:         {
1:             return false;
1:         }
1:     },
1:     DELETE
1:     {
1:     },
1:     SELECT
1:     {
1:         @Override
1:         public boolean allowPartitionKeyRanges()
1:         {
1:             return true;
1:         }
1: 
1:         @Override
1:         public boolean allowNonPrimaryKeyInWhereClause()
1:         {
1:             return true;
1:         }
1: 
1:         @Override
1:         public boolean allowUseOfSecondaryIndices()
1:         {
1:             return true;
1:         }
1:     };
1: 
1:     /**
1:      * Checks if this type is an insert.
1:      * @return <code>true</code> if this type is an insert, <code>false</code> otherwise.
1:      */
1:     public boolean isInsert()
1:     {
1:         return this == INSERT;
1:     }
1: 
1:     /**
1:      * Checks if this type is an update.
1:      * @return <code>true</code> if this type is an update, <code>false</code> otherwise.
1:      */
1:     public boolean isUpdate()
1:     {
1:         return this == UPDATE;
1:     }
1: 
1:     /**
1:      * Checks if this type is a delete.
1:      * @return <code>true</code> if this type is a delete, <code>false</code> otherwise.
1:      */
1:     public boolean isDelete()
1:     {
1:         return this == DELETE;
1:     }
1: 
1:     /**
1:      * Checks if this type is a select.
1:      * @return <code>true</code> if this type is a select, <code>false</code> otherwise.
1:      */
1:     public boolean isSelect()
1:     {
1:         return this == SELECT;
1:     }
1: 
1:     /**
1:      * Checks this statement allow the where clause to contains missing partition key components or token relation.
1:      * @return <code>true</code> if this statement allow the where clause to contains missing partition key components
1:      * or token relation, <code>false</code> otherwise.
1:      */
1:     public boolean allowPartitionKeyRanges()
1:     {
1:         return false;
1:     }
1: 
1:     /**
1:      * Checks this type of statement allow the where clause to contains clustering column slices.
1:      * @return <code>true</code> if this type of statement allow the where clause to contains clustering column slices,
1:      * <code>false</code> otherwise.
1:      */
1:     public boolean allowClusteringColumnSlices()
1:     {
1:         return true;
1:     }
1: 
1:     /**
1:      * Checks if this type of statement allow non primary key in the where clause.
1:      * @return <code>true</code> if this type of statement allow non primary key in the where clause,
1:      * <code>false</code> otherwise.
1:      */
1:     public boolean allowNonPrimaryKeyInWhereClause()
1:     {
1:         return false;
1:     }
1: 
1:     /**
1:      * Checks if this type of statement allow the use of secondary indices.
1:      * @return <code>true</code> if this type of statement allow the use of secondary indices,
1:      * <code>false</code> otherwise.
1:      */
1:     public boolean allowUseOfSecondaryIndices()
1:     {
1:         return false;
1:     }
1: }
============================================================================