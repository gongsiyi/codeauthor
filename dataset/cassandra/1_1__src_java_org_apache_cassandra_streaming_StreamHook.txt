1:4b27287: /*
1:4b27287:  * Licensed to the Apache Software Foundation (ASF) under one
1:4b27287:  * or more contributor license agreements.  See the NOTICE file
1:4b27287:  * distributed with this work for additional information
1:4b27287:  * regarding copyright ownership.  The ASF licenses this file
1:4b27287:  * to you under the Apache License, Version 2.0 (the
1:4b27287:  * "License"); you may not use this file except in compliance
1:4b27287:  * with the License.  You may obtain a copy of the License at
1:4b27287:  *
1:4b27287:  *     http://www.apache.org/licenses/LICENSE-2.0
1:4b27287:  *
1:4b27287:  * Unless required by applicable law or agreed to in writing, software
1:4b27287:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4b27287:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4b27287:  * See the License for the specific language governing permissions and
1:4b27287:  * limitations under the License.
1:4b27287:  */
1:4b27287: 
1:4b27287: package org.apache.cassandra.streaming;
1:4b27287: 
1:4b27287: import org.apache.cassandra.db.ColumnFamilyStore;
1:4b27287: import org.apache.cassandra.io.sstable.SSTableMultiWriter;
1:4b27287: import org.apache.cassandra.io.sstable.format.SSTableReader;
1:4b27287: import org.apache.cassandra.streaming.messages.OutgoingFileMessage;
1:4b27287: import org.apache.cassandra.utils.FBUtilities;
1:4b27287: 
1:4b27287: public interface StreamHook
1:4b27287: {
1:4b27287:     public static final StreamHook instance = createHook();
1:4b27287: 
1:4b27287:     public OutgoingFileMessage reportOutgoingFile(StreamSession session, SSTableReader sstable, OutgoingFileMessage message);
1:4b27287:     public void reportStreamFuture(StreamSession session, StreamResultFuture future);
1:4b27287:     public void reportIncomingFile(ColumnFamilyStore cfs, SSTableMultiWriter writer, StreamSession session, int sequenceNumber);
1:4b27287: 
1:4b27287:     static StreamHook createHook()
1:4b27287:     {
1:4b27287:         String className =  System.getProperty("cassandra.stream_hook");
1:4b27287:         if (className != null)
1:4b27287:         {
1:4b27287:             return FBUtilities.construct(className, StreamHook.class.getSimpleName());
1:4b27287:         }
1:4b27287:         else
1:4b27287:         {
1:4b27287:             return new StreamHook()
1:4b27287:             {
1:4b27287:                 public OutgoingFileMessage reportOutgoingFile(StreamSession session, SSTableReader sstable, OutgoingFileMessage message)
1:4b27287:                 {
1:4b27287:                     return message;
1:4b27287:                 }
1:4b27287: 
1:4b27287:                 public void reportStreamFuture(StreamSession session, StreamResultFuture future) {}
1:4b27287: 
1:4b27287:                 public void reportIncomingFile(ColumnFamilyStore cfs, SSTableMultiWriter writer, StreamSession session, int sequenceNumber) {}
1:4b27287:             };
1:4b27287:         }
1:4b27287:     }
1:4b27287: }
============================================================================
author:Blake Eggleston
-------------------------------------------------------------------------------
commit:4b27287
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.streaming;
1: 
1: import org.apache.cassandra.db.ColumnFamilyStore;
1: import org.apache.cassandra.io.sstable.SSTableMultiWriter;
1: import org.apache.cassandra.io.sstable.format.SSTableReader;
1: import org.apache.cassandra.streaming.messages.OutgoingFileMessage;
1: import org.apache.cassandra.utils.FBUtilities;
1: 
1: public interface StreamHook
1: {
1:     public static final StreamHook instance = createHook();
1: 
1:     public OutgoingFileMessage reportOutgoingFile(StreamSession session, SSTableReader sstable, OutgoingFileMessage message);
1:     public void reportStreamFuture(StreamSession session, StreamResultFuture future);
1:     public void reportIncomingFile(ColumnFamilyStore cfs, SSTableMultiWriter writer, StreamSession session, int sequenceNumber);
1: 
1:     static StreamHook createHook()
1:     {
1:         String className =  System.getProperty("cassandra.stream_hook");
1:         if (className != null)
1:         {
1:             return FBUtilities.construct(className, StreamHook.class.getSimpleName());
1:         }
1:         else
1:         {
1:             return new StreamHook()
1:             {
1:                 public OutgoingFileMessage reportOutgoingFile(StreamSession session, SSTableReader sstable, OutgoingFileMessage message)
1:                 {
1:                     return message;
1:                 }
1: 
1:                 public void reportStreamFuture(StreamSession session, StreamResultFuture future) {}
1: 
1:                 public void reportIncomingFile(ColumnFamilyStore cfs, SSTableMultiWriter writer, StreamSession session, int sequenceNumber) {}
1:             };
1:         }
1:     }
1: }
============================================================================