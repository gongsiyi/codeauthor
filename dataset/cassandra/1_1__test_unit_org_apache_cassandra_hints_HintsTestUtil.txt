1:96d41f0: /*
1:96d41f0:  * Licensed to the Apache Software Foundation (ASF) under one
1:96d41f0:  * or more contributor license agreements.  See the NOTICE file
1:96d41f0:  * distributed with this work for additional information
1:96d41f0:  * regarding copyright ownership.  The ASF licenses this file
1:96d41f0:  * to you under the Apache License, Version 2.0 (the
1:96d41f0:  * "License"); you may not use this file except in compliance
1:96d41f0:  * with the License.  You may obtain a copy of the License at
1:96d41f0:  *
1:96d41f0:  *     http://www.apache.org/licenses/LICENSE-2.0
1:96d41f0:  *
1:96d41f0:  * Unless required by applicable law or agreed to in writing, software
1:96d41f0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:96d41f0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:96d41f0:  * See the License for the specific language governing permissions and
1:96d41f0:  * limitations under the License.
1:96d41f0:  */
1:96d41f0: package org.apache.cassandra.hints;
1:96d41f0: 
1:96d41f0: import java.util.UUID;
1:96d41f0: 
1:96d41f0: import com.google.common.collect.Iterators;
1:96d41f0: 
1:96d41f0: import org.apache.cassandra.db.Mutation;
1:96d41f0: import org.apache.cassandra.db.partitions.AbstractBTreePartition;
1:96d41f0: import org.apache.cassandra.db.partitions.PartitionUpdate;
1:96d41f0: 
1:96d41f0: import static junit.framework.Assert.assertEquals;
1:96d41f0: import static junit.framework.Assert.assertTrue;
1:96d41f0: 
1:96d41f0: final class HintsTestUtil
1:96d41f0: {
1:96d41f0:     static void assertMutationsEqual(Mutation expected, Mutation actual)
1:96d41f0:     {
1:96d41f0:         assertEquals(expected.key(), actual.key());
1:96d41f0:         assertEquals(expected.getPartitionUpdates().size(), actual.getPartitionUpdates().size());
1:96d41f0: 
1:96d41f0:         for (UUID id : expected.getColumnFamilyIds())
1:96d41f0:             assertPartitionsEqual(expected.getPartitionUpdate(id), actual.getPartitionUpdate(id));
1:96d41f0:     }
1:96d41f0: 
1:96d41f0:     static void assertPartitionsEqual(AbstractBTreePartition expected, AbstractBTreePartition actual)
1:96d41f0:     {
1:96d41f0:         assertEquals(expected.partitionKey(), actual.partitionKey());
1:96d41f0:         assertEquals(expected.deletionInfo(), actual.deletionInfo());
1:96d41f0:         assertEquals(expected.columns(), actual.columns());
1:96d41f0:         assertTrue(Iterators.elementsEqual(expected.iterator(), actual.iterator()));
1:96d41f0:     }
1:96d41f0: 
1:96d41f0:     static void assertHintsEqual(Hint expected, Hint actual)
1:96d41f0:     {
1:96d41f0:         assertEquals(expected.mutation.getKeyspaceName(), actual.mutation.getKeyspaceName());
1:96d41f0:         assertEquals(expected.mutation.key(), actual.mutation.key());
1:96d41f0:         assertEquals(expected.mutation.getColumnFamilyIds(), actual.mutation.getColumnFamilyIds());
1:96d41f0:         for (PartitionUpdate partitionUpdate : expected.mutation.getPartitionUpdates())
1:96d41f0:             assertPartitionsEqual(partitionUpdate, actual.mutation.getPartitionUpdate(partitionUpdate.metadata().cfId));
1:96d41f0:         assertEquals(expected.creationTime, actual.creationTime);
1:96d41f0:         assertEquals(expected.gcgs, actual.gcgs);
1:96d41f0:     }
1:96d41f0: }
============================================================================
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:96d41f0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.hints;
1: 
1: import java.util.UUID;
1: 
1: import com.google.common.collect.Iterators;
1: 
1: import org.apache.cassandra.db.Mutation;
1: import org.apache.cassandra.db.partitions.AbstractBTreePartition;
1: import org.apache.cassandra.db.partitions.PartitionUpdate;
1: 
1: import static junit.framework.Assert.assertEquals;
1: import static junit.framework.Assert.assertTrue;
1: 
1: final class HintsTestUtil
1: {
1:     static void assertMutationsEqual(Mutation expected, Mutation actual)
1:     {
1:         assertEquals(expected.key(), actual.key());
1:         assertEquals(expected.getPartitionUpdates().size(), actual.getPartitionUpdates().size());
1: 
1:         for (UUID id : expected.getColumnFamilyIds())
1:             assertPartitionsEqual(expected.getPartitionUpdate(id), actual.getPartitionUpdate(id));
1:     }
1: 
1:     static void assertPartitionsEqual(AbstractBTreePartition expected, AbstractBTreePartition actual)
1:     {
1:         assertEquals(expected.partitionKey(), actual.partitionKey());
1:         assertEquals(expected.deletionInfo(), actual.deletionInfo());
1:         assertEquals(expected.columns(), actual.columns());
1:         assertTrue(Iterators.elementsEqual(expected.iterator(), actual.iterator()));
1:     }
1: 
1:     static void assertHintsEqual(Hint expected, Hint actual)
1:     {
1:         assertEquals(expected.mutation.getKeyspaceName(), actual.mutation.getKeyspaceName());
1:         assertEquals(expected.mutation.key(), actual.mutation.key());
1:         assertEquals(expected.mutation.getColumnFamilyIds(), actual.mutation.getColumnFamilyIds());
1:         for (PartitionUpdate partitionUpdate : expected.mutation.getPartitionUpdates())
1:             assertPartitionsEqual(partitionUpdate, actual.mutation.getPartitionUpdate(partitionUpdate.metadata().cfId));
1:         assertEquals(expected.creationTime, actual.creationTime);
1:         assertEquals(expected.gcgs, actual.gcgs);
1:     }
1: }
============================================================================