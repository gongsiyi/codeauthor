1:4adb981: /*
1:4adb981:  * Licensed to the Apache Software Foundation (ASF) under one
1:4adb981:  * or more contributor license agreements.  See the NOTICE file
1:4adb981:  * distributed with this work for additional information
1:4adb981:  * regarding copyright ownership.  The ASF licenses this file
1:4adb981:  * to you under the Apache License, Version 2.0 (the
1:4adb981:  * "License"); you may not use this file except in compliance
1:4adb981:  * with the License.  You may obtain a copy of the License at
1:4adb981:  *
1:4adb981:  *     http://www.apache.org/licenses/LICENSE-2.0
1:4adb981:  *
1:4adb981:  * Unless required by applicable law or agreed to in writing, software
1:4adb981:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4adb981:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4adb981:  * See the License for the specific language governing permissions and
1:4adb981:  * limitations under the License.
1:4adb981:  */
1:4adb981: package org.apache.cassandra.utils.progress;
1:4adb981: 
1:4adb981: /**
1:4adb981:  * Progress event
1:4adb981:  */
1:4adb981: public class ProgressEvent
1:4adb981: {
1:4adb981:     private final ProgressEventType type;
1:4adb981:     private final int progressCount;
1:4adb981:     private final int total;
1:4adb981:     private final String message;
1:4adb981: 
1:4adb981:     public static ProgressEvent createNotification(String message)
1:4adb981:     {
1:4adb981:         return new ProgressEvent(ProgressEventType.NOTIFICATION, 0, 0, message);
1:4adb981:     }
1:4adb981: 
1:4adb981:     public ProgressEvent(ProgressEventType type, int progressCount, int total)
1:4adb981:     {
1:4adb981:         this(type, progressCount, total, null);
1:4adb981:     }
1:4adb981: 
1:4adb981:     public ProgressEvent(ProgressEventType type, int progressCount, int total, String message)
1:4adb981:     {
1:4adb981:         this.type = type;
1:4adb981:         this.progressCount = progressCount;
1:4adb981:         this.total = total;
1:4adb981:         this.message = message;
1:4adb981:     }
1:4adb981: 
1:4adb981:     public ProgressEventType getType()
1:4adb981:     {
1:4adb981:         return type;
1:4adb981:     }
1:4adb981: 
1:4adb981:     public int getProgressCount()
1:4adb981:     {
1:4adb981:         return progressCount;
1:4adb981:     }
1:4adb981: 
1:4adb981:     public int getTotal()
1:4adb981:     {
1:4adb981:         return total;
1:4adb981:     }
1:4adb981: 
1:4adb981:     public double getProgressPercentage()
1:4adb981:     {
1:4adb981:         return total != 0 ? progressCount * 100 / (double) total : 0;
1:4adb981:     }
1:4adb981: 
1:4adb981:     /**
1:4adb981:      * @return Message attached to this event. Can be null.
1:4adb981:      */
1:4adb981:     public String getMessage()
1:4adb981:     {
1:4adb981:         return message;
1:4adb981:     }
1:4adb981: }
============================================================================
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:4adb981
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.utils.progress;
1: 
1: /**
1:  * Progress event
1:  */
1: public class ProgressEvent
1: {
1:     private final ProgressEventType type;
1:     private final int progressCount;
1:     private final int total;
1:     private final String message;
1: 
1:     public static ProgressEvent createNotification(String message)
1:     {
1:         return new ProgressEvent(ProgressEventType.NOTIFICATION, 0, 0, message);
1:     }
1: 
1:     public ProgressEvent(ProgressEventType type, int progressCount, int total)
1:     {
1:         this(type, progressCount, total, null);
1:     }
1: 
1:     public ProgressEvent(ProgressEventType type, int progressCount, int total, String message)
1:     {
1:         this.type = type;
1:         this.progressCount = progressCount;
1:         this.total = total;
1:         this.message = message;
1:     }
1: 
1:     public ProgressEventType getType()
1:     {
1:         return type;
1:     }
1: 
1:     public int getProgressCount()
1:     {
1:         return progressCount;
1:     }
1: 
1:     public int getTotal()
1:     {
1:         return total;
1:     }
1: 
1:     public double getProgressPercentage()
1:     {
1:         return total != 0 ? progressCount * 100 / (double) total : 0;
1:     }
1: 
1:     /**
1:      * @return Message attached to this event. Can be null.
1:      */
1:     public String getMessage()
1:     {
1:         return message;
1:     }
1: }
============================================================================