1:d63d07b: /*
1:d63d07b:  * Licensed to the Apache Software Foundation (ASF) under one
1:d63d07b:  * or more contributor license agreements.  See the NOTICE file
1:d63d07b:  * distributed with this work for additional information
1:d63d07b:  * regarding copyright ownership.  The ASF licenses this file
1:d63d07b:  * to you under the Apache License, Version 2.0 (the
1:d63d07b:  * "License"); you may not use this file except in compliance
1:d63d07b:  * with the License.  You may obtain a copy of the License at
1:d63d07b:  *
1:d63d07b:  *     http://www.apache.org/licenses/LICENSE-2.0
1:d63d07b:  *
1:d63d07b:  * Unless required by applicable law or agreed to in writing, software
1:d63d07b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d63d07b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d63d07b:  * See the License for the specific language governing permissions and
1:d63d07b:  * limitations under the License.
1:d63d07b:  */
1:d63d07b: package org.apache.cassandra.cql3;
1:d63d07b: 
1:d63d07b: import java.nio.ByteBuffer;
1:d63d07b: 
1:d63d07b: public class UTName
1:d63d07b: {
1:d63d07b:     private String ksName;
1:d63d07b:     private final ColumnIdentifier utName;
1:d63d07b: 
1:d63d07b:     public UTName(ColumnIdentifier ksName, ColumnIdentifier utName)
1:d63d07b:     {
1:d63d07b:         this.ksName = ksName == null ? null : ksName.toString();
1:d63d07b:         this.utName = utName;
1:d63d07b:     }
1:d63d07b: 
1:d63d07b:     public boolean hasKeyspace()
1:d63d07b:     {
1:d63d07b:         return ksName != null;
1:d63d07b:     }
1:d63d07b: 
1:d63d07b:     public void setKeyspace(String keyspace)
1:d63d07b:     {
1:d63d07b:         this.ksName = keyspace;
1:d63d07b:     }
1:d63d07b: 
1:d63d07b:     public String getKeyspace()
1:d63d07b:     {
1:d63d07b:         return ksName;
1:d63d07b:     }
1:d63d07b: 
1:d63d07b:     public ByteBuffer getUserTypeName()
1:d63d07b:     {
1:d63d07b:         return utName.bytes;
1:d63d07b:     }
1:d63d07b: 
1:2fe6de6:     public String getStringTypeName()
1:2fe6de6:     {
1:2fe6de6:         return utName.toString();
1:2fe6de6:     }
1:2fe6de6: 
1:d63d07b:     @Override
1:d63d07b:     public String toString()
1:d63d07b:     {
1:d63d07b:         return (hasKeyspace() ? (ksName + ".") : "") + utName;
1:d63d07b:     }
1:d63d07b: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:2fe6de6
/////////////////////////////////////////////////////////////////////////
1:     public String getStringTypeName()
1:     {
1:         return utName.toString();
1:     }
1: 
commit:d63d07b
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3;
1: 
1: import java.nio.ByteBuffer;
1: 
1: public class UTName
1: {
1:     private String ksName;
1:     private final ColumnIdentifier utName;
1: 
1:     public UTName(ColumnIdentifier ksName, ColumnIdentifier utName)
1:     {
1:         this.ksName = ksName == null ? null : ksName.toString();
1:         this.utName = utName;
1:     }
1: 
1:     public boolean hasKeyspace()
1:     {
1:         return ksName != null;
1:     }
1: 
1:     public void setKeyspace(String keyspace)
1:     {
1:         this.ksName = keyspace;
1:     }
1: 
1:     public String getKeyspace()
1:     {
1:         return ksName;
1:     }
1: 
1:     public ByteBuffer getUserTypeName()
1:     {
1:         return utName.bytes;
1:     }
1: 
1:     @Override
1:     public String toString()
1:     {
1:         return (hasKeyspace() ? (ksName + ".") : "") + utName;
1:     }
1: }
============================================================================