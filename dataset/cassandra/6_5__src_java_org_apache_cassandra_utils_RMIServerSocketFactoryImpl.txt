1:615bf37: /*
1:615bf37:  *
1:615bf37:  * Licensed to the Apache Software Foundation (ASF) under one
1:615bf37:  * or more contributor license agreements.  See the NOTICE file
1:615bf37:  * distributed with this work for additional information
1:615bf37:  * regarding copyright ownership.  The ASF licenses this file
1:615bf37:  * to you under the Apache License, Version 2.0 (the
1:615bf37:  * "License"); you may not use this file except in compliance
1:615bf37:  * with the License.  You may obtain a copy of the License at
1:615bf37:  *
1:615bf37:  *   http://www.apache.org/licenses/LICENSE-2.0
1:615bf37:  *
1:615bf37:  * Unless required by applicable law or agreed to in writing,
1:615bf37:  * software distributed under the License is distributed on an
1:615bf37:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:615bf37:  * KIND, either express or implied.  See the License for the
1:615bf37:  * specific language governing permissions and limitations
1:615bf37:  * under the License.
1:615bf37:  *
1:615bf37:  */
1:c041ea8: package org.apache.cassandra.utils;
2:c041ea8: 
1:c041ea8: import java.io.IOException;
1:3a244d2: import java.net.InetAddress;
1:3a244d2: import java.net.ServerSocket;
1:19245e5: import java.net.SocketException;
1:c041ea8: import java.rmi.server.RMIServerSocketFactory;
1:c041ea8: import javax.net.ServerSocketFactory;
1:c041ea8: 
1:c041ea8: public class RMIServerSocketFactoryImpl implements RMIServerSocketFactory
1:c041ea8: {
1:7b0c716:     // Address to bind server sockets too, may be null indicating all local interfaces are to be bound
1:7b0c716:     private final InetAddress bindAddress;
1:7b0c716: 
1:7b0c716:     public RMIServerSocketFactoryImpl(InetAddress bindAddress)
1:7b0c716:     {
1:7b0c716:         this.bindAddress = bindAddress;
1:7b0c716:     }
1:c041ea8: 
1:3a244d2:     public ServerSocket createServerSocket(final int pPort) throws IOException
1:3a244d2:     {
1:7b0c716:         ServerSocket socket = ServerSocketFactory.getDefault().createServerSocket(pPort, 0, bindAddress);
1:19245e5:         try
1:19245e5:         {
1:19245e5:             socket.setReuseAddress(true);
1:19245e5:             return socket;
1:19245e5:         }
1:19245e5:         catch (SocketException e)
1:19245e5:         {
1:19245e5:             socket.close();
1:19245e5:             throw e;
1:19245e5:         }
1:c041ea8:     }
1:c041ea8: 
1:c041ea8:     public boolean equals(Object obj)
1:c041ea8:     {
1:c041ea8:         if (obj == null)
1:c041ea8:         {
1:c041ea8:             return false;
1:c041ea8:         }
1:c041ea8:         if (obj == this)
1:c041ea8:         {
1:c041ea8:             return true;
1:c041ea8:         }
1:c041ea8: 
1:c041ea8:         return obj.getClass().equals(getClass());
1:c041ea8:     }
1:c041ea8: 
1:c041ea8:     public int hashCode()
1:c041ea8:     {
1:c041ea8:         return RMIServerSocketFactoryImpl.class.hashCode();
1:c041ea8:     }
1:c041ea8: }
1:7b0c716: 
============================================================================
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:02f48c8
author:arunkumar-m
-------------------------------------------------------------------------------
commit:19245e5
/////////////////////////////////////////////////////////////////////////
1: import java.net.SocketException;
/////////////////////////////////////////////////////////////////////////
1:         try
1:         {
1:             socket.setReuseAddress(true);
1:             return socket;
1:         }
1:         catch (SocketException e)
1:         {
1:             socket.close();
1:             throw e;
1:         }
author:Carl Yeksigian
-------------------------------------------------------------------------------
commit:693e52d
commit:05bacc7
commit:615bf37
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:7b0c716
/////////////////////////////////////////////////////////////////////////
1:     // Address to bind server sockets too, may be null indicating all local interfaces are to be bound
1:     private final InetAddress bindAddress;
1: 
1:     public RMIServerSocketFactoryImpl(InetAddress bindAddress)
1:     {
1:         this.bindAddress = bindAddress;
1:     }
1:         ServerSocket socket = ServerSocketFactory.getDefault().createServerSocket(pPort, 0, bindAddress);
/////////////////////////////////////////////////////////////////////////
1: 
author:Aleksandr Sorokoumov
-------------------------------------------------------------------------------
commit:3a244d2
/////////////////////////////////////////////////////////////////////////
1: import java.net.InetAddress;
1: import java.net.ServerSocket;
/////////////////////////////////////////////////////////////////////////
1:     public ServerSocket createServerSocket(final int pPort) throws IOException
1:     {
0:         ServerSocket socket = ServerSocketFactory.getDefault()
0:                                                  .createServerSocket(pPort, 0, InetAddress.getLoopbackAddress());
0:         socket.setReuseAddress(true);
0:         return socket;
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:c041ea8
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.utils;
1: 
1: import java.io.IOException;
0: import java.net.*;
1: import java.rmi.server.RMIServerSocketFactory;
1: import javax.net.ServerSocketFactory;
1: 
1: 
1: public class RMIServerSocketFactoryImpl implements RMIServerSocketFactory
1: {
1: 
0:     public ServerSocket createServerSocket(final int pPort) throws IOException  {
0:         return ServerSocketFactory.getDefault().createServerSocket(pPort, 0, InetAddress.getLoopbackAddress());
1:     }
1: 
1:     public boolean equals(Object obj)
1:     {
1:         if (obj == null)
1:         {
1:             return false;
1:         }
1:         if (obj == this)
1:         {
1:             return true;
1:         }
1: 
1:         return obj.getClass().equals(getClass());
1:     }
1: 
1:     public int hashCode()
1:     {
1:         return RMIServerSocketFactoryImpl.class.hashCode();
1:     }
1: }
============================================================================