1:7751588: /*
1:7751588:  * Licensed to the Apache Software Foundation (ASF) under one
1:7751588:  * or more contributor license agreements.  See the NOTICE file
1:7751588:  * distributed with this work for additional information
1:7751588:  * regarding copyright ownership.  The ASF licenses this file
1:7751588:  * to you under the Apache License, Version 2.0 (the
1:7751588:  * "License"); you may not use this file except in compliance
1:7751588:  * with the License.  You may obtain a copy of the License at
1:7751588:  *
1:7751588:  *     http://www.apache.org/licenses/LICENSE-2.0
1:7751588:  *
1:7751588:  * Unless required by applicable law or agreed to in writing, software
1:7751588:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7751588:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7751588:  * See the License for the specific language governing permissions and
1:7751588:  * limitations under the License.
1:7751588:  */
1:7751588: package org.apache.cassandra.utils;
1:7751588: 
1:7751588: import java.util.concurrent.TimeUnit;
1:7751588: 
1:7751588: /**
1:7751588:  * A freely adjustable clock that can be used for unit testing. See {@link Clock#instance} how to
1:7751588:  * enable this class.
1:7751588:  */
1:7751588: public class FreeRunningClock extends Clock
1:7751588: {
1:7751588:     private long nanoTime = 0;
1:7751588: 
1:7751588:     @Override
1:7751588:     public long nanoTime()
1:7751588:     {
1:7751588:         return nanoTime;
1:7751588:     }
1:7751588: 
1:7751588:     @Override
1:7751588:     public long currentTimeMillis()
1:7751588:     {
1:7751588:         return TimeUnit.NANOSECONDS.toMillis(nanoTime());
1:7751588:     }
1:7751588: 
1:7751588:     public void advance(long time, TimeUnit unit)
1:7751588:     {
1:7751588:         nanoTime += unit.toNanos(time);
1:7751588:     }
1:7751588: }
============================================================================
author:Stefan Podkowinski
-------------------------------------------------------------------------------
commit:7751588
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.utils;
1: 
1: import java.util.concurrent.TimeUnit;
1: 
1: /**
1:  * A freely adjustable clock that can be used for unit testing. See {@link Clock#instance} how to
1:  * enable this class.
1:  */
1: public class FreeRunningClock extends Clock
1: {
1:     private long nanoTime = 0;
1: 
1:     @Override
1:     public long nanoTime()
1:     {
1:         return nanoTime;
1:     }
1: 
1:     @Override
1:     public long currentTimeMillis()
1:     {
1:         return TimeUnit.NANOSECONDS.toMillis(nanoTime());
1:     }
1: 
1:     public void advance(long time, TimeUnit unit)
1:     {
1:         nanoTime += unit.toNanos(time);
1:     }
1: }
============================================================================