1:7536429: /*
1:7536429:  *
1:7536429:  * Licensed to the Apache Software Foundation (ASF) under one
1:7536429:  * or more contributor license agreements.  See the NOTICE file
1:7536429:  * distributed with this work for additional information
1:7536429:  * regarding copyright ownership.  The ASF licenses this file
1:7536429:  * to you under the Apache License, Version 2.0 (the
1:7536429:  * "License"); you may not use this file except in compliance
1:7536429:  * with the License.  You may obtain a copy of the License at
1:7536429:  *
1:7536429:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7536429:  *
1:7536429:  * Unless required by applicable law or agreed to in writing,
1:7536429:  * software distributed under the License is distributed on an
1:7536429:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:7536429:  * KIND, either express or implied.  See the License for the
1:7536429:  * specific language governing permissions and limitations
1:7536429:  * under the License.
1:7536429:  *
1:7536429:  */
1:7536429: package org.apache.cassandra.stress.generate.values;
2:7536429: 
1:7536429: 
1:6c579a0: import java.util.UUID;
1:6c579a0: 
1:7536429: import org.apache.cassandra.db.marshal.TimeUUIDType;
1:7536429: import org.apache.cassandra.utils.UUIDGen;
1:7536429: 
1:7536429: public class TimeUUIDs extends Generator<UUID>
1:7536429: {
1:7536429:     final Dates dateGen;
1:7536429:     final long clockSeqAndNode;
1:7536429: 
1:7536429:     public TimeUUIDs(String name, GeneratorConfig config)
1:7536429:     {
1:0580fb2:         super(TimeUUIDType.instance, config, name, UUID.class);
1:7536429:         dateGen = new Dates(name, config);
1:7536429:         clockSeqAndNode = config.salt;
1:7536429:     }
1:7536429: 
1:7536429:     public void setSeed(long seed)
1:7536429:     {
1:7536429:         dateGen.setSeed(seed);
1:7536429:     }
1:7536429: 
1:7536429:     @Override
1:7536429:     public UUID generate()
1:7536429:     {
1:01115f7:         return UUIDGen.getTimeUUID(dateGen.generate().getTime(), 0L, clockSeqAndNode);
1:7536429:     }
1:7536429: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:01115f7
/////////////////////////////////////////////////////////////////////////
1:         return UUIDGen.getTimeUUID(dateGen.generate().getTime(), 0L, clockSeqAndNode);
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:6c579a0
/////////////////////////////////////////////////////////////////////////
1: import java.util.UUID;
1: 
commit:0580fb2
/////////////////////////////////////////////////////////////////////////
1:         super(TimeUUIDType.instance, config, name, UUID.class);
commit:7536429
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
1: package org.apache.cassandra.stress.generate.values;
1: 
1: 
1: import org.apache.cassandra.db.marshal.TimeUUIDType;
1: import org.apache.cassandra.utils.UUIDGen;
1: 
0: import java.util.UUID;
1: 
1: public class TimeUUIDs extends Generator<UUID>
1: {
1:     final Dates dateGen;
1:     final long clockSeqAndNode;
1: 
1:     public TimeUUIDs(String name, GeneratorConfig config)
1:     {
0:         super(TimeUUIDType.instance, config, name);
1:         dateGen = new Dates(name, config);
1:         clockSeqAndNode = config.salt;
1:     }
1: 
1:     public void setSeed(long seed)
1:     {
1:         dateGen.setSeed(seed);
1:     }
1: 
1:     @Override
1:     public UUID generate()
1:     {
0:         return UUIDGen.getTimeUUID(dateGen.generate().getTime(), clockSeqAndNode);
1:     }
1: }
============================================================================