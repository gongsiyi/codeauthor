1:5a3eb1a: /*
1:5a3eb1a:  * Licensed to the Apache Software Foundation (ASF) under one
1:5a3eb1a:  * or more contributor license agreements.  See the NOTICE file
1:5a3eb1a:  * distributed with this work for additional information
1:5a3eb1a:  * regarding copyright ownership.  The ASF licenses this file
1:5a3eb1a:  * to you under the Apache License, Version 2.0 (the
1:5a3eb1a:  * "License"); you may not use this file except in compliance
1:5a3eb1a:  * with the License.  You may obtain a copy of the License at
1:5a3eb1a:  *
1:5a3eb1a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5a3eb1a:  *
1:5a3eb1a:  * Unless required by applicable law or agreed to in writing, software
1:5a3eb1a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5a3eb1a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5a3eb1a:  * See the License for the specific language governing permissions and
1:5a3eb1a:  * limitations under the License.
1:5a3eb1a:  */
1:5a3eb1a: package org.apache.cassandra.auth;
1:5a3eb1a: 
1:5a3eb1a: import com.google.common.base.Objects;
1:5a3eb1a: import com.google.common.collect.ComparisonChain;
1:5a3eb1a: 
1:5a3eb1a: /**
1:5a3eb1a:  *  Sets of instances of this class are returned by IAuthorizer.listPermissions() method for LIST PERMISSIONS query.
1:5a3eb1a:  *  None of the fields are nullable.
1:5a3eb1a:  */
1:5a3eb1a: public class PermissionDetails implements Comparable<PermissionDetails>
1:5a3eb1a: {
1:879b694:     public final String grantee;
1:5a3eb1a:     public final IResource resource;
1:5a3eb1a:     public final Permission permission;
1:5a3eb1a: 
1:879b694:     public PermissionDetails(String grantee, IResource resource, Permission permission)
1:5a3eb1a:     {
1:879b694:         this.grantee = grantee;
1:5a3eb1a:         this.resource = resource;
1:5a3eb1a:         this.permission = permission;
1:5a3eb1a:     }
1:5a3eb1a: 
1:5a3eb1a:     @Override
1:5a3eb1a:     public int compareTo(PermissionDetails other)
1:5a3eb1a:     {
1:5a3eb1a:         return ComparisonChain.start()
1:879b694:                               .compare(grantee, other.grantee)
1:5a3eb1a:                               .compare(resource.getName(), other.resource.getName())
1:5a3eb1a:                               .compare(permission, other.permission)
1:5a3eb1a:                               .result();
1:5a3eb1a:     }
1:5a3eb1a: 
1:5a3eb1a:     @Override
1:5a3eb1a:     public String toString()
1:5a3eb1a:     {
1:879b694:         return String.format("<PermissionDetails grantee:%s resource:%s permission:%s>",
1:879b694:                              grantee,
1:5a3eb1a:                              resource.getName(),
1:5a3eb1a:                              permission);
1:5a3eb1a:     }
1:5a3eb1a: 
1:5a3eb1a:     @Override
1:5a3eb1a:     public boolean equals(Object o)
1:5a3eb1a:     {
1:08878e9:         if (this == o)
1:08878e9:             return true;
1:08878e9: 
1:08878e9:         if (!(o instanceof PermissionDetails))
1:08878e9:             return false;
1:08878e9: 
1:08878e9:         PermissionDetails pd = (PermissionDetails) o;
1:879b694:         return Objects.equal(grantee, pd.grantee)
1:b248b1a:             && Objects.equal(resource, pd.resource)
1:b248b1a:             && Objects.equal(permission, pd.permission);
1:5a3eb1a:     }
1:5a3eb1a: 
1:5a3eb1a:     @Override
1:5a3eb1a:     public int hashCode()
1:5a3eb1a:     {
1:879b694:         return Objects.hashCode(grantee, resource, permission);
1:5a3eb1a:     }
1:5a3eb1a: }
============================================================================
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:879b694
/////////////////////////////////////////////////////////////////////////
1:     public final String grantee;
1:     public PermissionDetails(String grantee, IResource resource, Permission permission)
1:         this.grantee = grantee;
/////////////////////////////////////////////////////////////////////////
1:                               .compare(grantee, other.grantee)
/////////////////////////////////////////////////////////////////////////
1:         return String.format("<PermissionDetails grantee:%s resource:%s permission:%s>",
1:                              grantee,
/////////////////////////////////////////////////////////////////////////
1:         return Objects.equal(grantee, pd.grantee)
/////////////////////////////////////////////////////////////////////////
1:         return Objects.hashCode(grantee, resource, permission);
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:b248b1a
/////////////////////////////////////////////////////////////////////////
0:         return Objects.equal(username, pd.username)
1:             && Objects.equal(resource, pd.resource)
1:             && Objects.equal(permission, pd.permission);
commit:08878e9
/////////////////////////////////////////////////////////////////////////
1:         if (this == o)
1:             return true;
1: 
1:         if (!(o instanceof PermissionDetails))
1:             return false;
1: 
1:         PermissionDetails pd = (PermissionDetails) o;
0:         return Objects.equal(this.username, pd.username)
0:             && Objects.equal(this.resource, pd.resource)
0:             && Objects.equal(this.permission, pd.permission);
commit:5a3eb1a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.auth;
1: 
1: import com.google.common.base.Objects;
1: import com.google.common.collect.ComparisonChain;
1: 
1: /**
1:  *  Sets of instances of this class are returned by IAuthorizer.listPermissions() method for LIST PERMISSIONS query.
1:  *  None of the fields are nullable.
1:  */
1: public class PermissionDetails implements Comparable<PermissionDetails>
1: {
0:     public final String username;
1:     public final IResource resource;
1:     public final Permission permission;
1: 
0:     public PermissionDetails(String username, IResource resource, Permission permission)
1:     {
0:         this.username = username;
1:         this.resource = resource;
1:         this.permission = permission;
1:     }
1: 
1:     @Override
1:     public int compareTo(PermissionDetails other)
1:     {
1:         return ComparisonChain.start()
0:                               .compare(username, other.username)
1:                               .compare(resource.getName(), other.resource.getName())
1:                               .compare(permission, other.permission)
1:                               .result();
1:     }
1: 
1:     @Override
1:     public String toString()
1:     {
0:         return String.format("<PermissionDetails username:%s resource:%s permission:%s>",
0:                              username,
1:                              resource.getName(),
1:                              permission);
1:     }
1: 
1:     @Override
1:     public boolean equals(Object o)
1:     {
0:         return Objects.equal(this, o);
1:     }
1: 
1:     @Override
1:     public int hashCode()
1:     {
0:         return Objects.hashCode(username, resource, permission);
1:     }
1: }
============================================================================