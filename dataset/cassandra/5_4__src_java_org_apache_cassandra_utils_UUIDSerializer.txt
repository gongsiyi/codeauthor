1:978d7bb: /*
1:978d7bb:  * Licensed to the Apache Software Foundation (ASF) under one
1:978d7bb:  * or more contributor license agreements.  See the NOTICE file
1:978d7bb:  * distributed with this work for additional information
1:978d7bb:  * regarding copyright ownership.  The ASF licenses this file
1:978d7bb:  * to you under the Apache License, Version 2.0 (the
1:978d7bb:  * "License"); you may not use this file except in compliance
1:978d7bb:  * with the License.  You may obtain a copy of the License at
1:978d7bb:  *
1:978d7bb:  *     http://www.apache.org/licenses/LICENSE-2.0
1:978d7bb:  *
1:978d7bb:  * Unless required by applicable law or agreed to in writing, software
1:978d7bb:  * distributed under the License is distributed on an "AS IS" BASIS,
1:978d7bb:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:978d7bb:  * See the License for the specific language governing permissions and
1:978d7bb:  * limitations under the License.
1:978d7bb:  */
1:978d7bb: package org.apache.cassandra.utils;
2:978d7bb: 
1:978d7bb: import java.io.IOException;
1:978d7bb: import java.util.UUID;
1:978d7bb: 
1:978d7bb: import org.apache.cassandra.db.TypeSizes;
1:978d7bb: import org.apache.cassandra.io.IVersionedSerializer;
1:03f72ac: import org.apache.cassandra.io.util.DataInputPlus;
1:75508ec: import org.apache.cassandra.io.util.DataOutputPlus;
1:978d7bb: 
1:978d7bb: public class UUIDSerializer implements IVersionedSerializer<UUID>
2:978d7bb: {
1:978d7bb:     public static UUIDSerializer serializer = new UUIDSerializer();
1:978d7bb: 
1:75508ec:     public void serialize(UUID uuid, DataOutputPlus out, int version) throws IOException
1:978d7bb:     {
1:978d7bb:         out.writeLong(uuid.getMostSignificantBits());
1:978d7bb:         out.writeLong(uuid.getLeastSignificantBits());
3:978d7bb:     }
1:978d7bb: 
1:03f72ac:     public UUID deserialize(DataInputPlus in, int version) throws IOException
1:978d7bb:     {
1:978d7bb:         return new UUID(in.readLong(), in.readLong());
1:978d7bb:     }
1:978d7bb: 
1:978d7bb:     public long serializedSize(UUID uuid, int version)
1:978d7bb:     {
1:03f72ac:         return TypeSizes.sizeof(uuid.getMostSignificantBits()) + TypeSizes.sizeof(uuid.getLeastSignificantBits());
1:6249a3b:     }
1:978d7bb: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:6249a3b
/////////////////////////////////////////////////////////////////////////
1: }
author:Ariel Weisberg
-------------------------------------------------------------------------------
commit:03f72ac
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataInputPlus;
/////////////////////////////////////////////////////////////////////////
1:     public UUID deserialize(DataInputPlus in, int version) throws IOException
1:         return TypeSizes.sizeof(uuid.getMostSignificantBits()) + TypeSizes.sizeof(uuid.getLeastSignificantBits());
author:belliottsmith
-------------------------------------------------------------------------------
commit:75508ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataOutputPlus;
1:     public void serialize(UUID uuid, DataOutputPlus out, int version) throws IOException
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:8b0e186
/////////////////////////////////////////////////////////////////////////
author:Dave Brosius
-------------------------------------------------------------------------------
commit:978d7bb
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.utils;
1: 
0: import java.io.DataInput;
0: import java.io.DataOutput;
1: import java.io.IOException;
1: import java.util.UUID;
1: 
1: import org.apache.cassandra.db.TypeSizes;
1: import org.apache.cassandra.io.IVersionedSerializer;
1: 
1: public class UUIDSerializer implements IVersionedSerializer<UUID>
1: {
1:     public static UUIDSerializer serializer = new UUIDSerializer();
1: 
0:     private UUIDSerializer()
1:     {
1:     }
1: 
0:     public void serialize(UUID uuid, DataOutput out, int version) throws IOException
1:     {
1:         out.writeLong(uuid.getMostSignificantBits());
1:         out.writeLong(uuid.getLeastSignificantBits());
1:     }
1: 
0:     public UUID deserialize(DataInput in, int version) throws IOException
1:     {
1:         return new UUID(in.readLong(), in.readLong());
1:     }
1: 
1:     public long serializedSize(UUID uuid, int version)
1:     {
0:         return TypeSizes.NATIVE.sizeof(uuid.getMostSignificantBits()) + TypeSizes.NATIVE.sizeof(uuid.getLeastSignificantBits());
1:     }
1: }
============================================================================