1:1a70df0: /*
1:1a70df0:  * Licensed to the Apache Software Foundation (ASF) under one
1:1a70df0:  * or more contributor license agreements.  See the NOTICE file
1:1a70df0:  * distributed with this work for additional information
1:1a70df0:  * regarding copyright ownership.  The ASF licenses this file
1:1a70df0:  * to you under the Apache License, Version 2.0 (the
1:1a70df0:  * "License"); you may not use this file except in compliance
1:1a70df0:  * with the License.  You may obtain a copy of the License at
1:1a70df0:  *
1:1a70df0:  *     http://www.apache.org/licenses/LICENSE-2.0
1:1a70df0:  *
1:1a70df0:  * Unless required by applicable law or agreed to in writing, software
1:1a70df0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1a70df0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1a70df0:  * See the License for the specific language governing permissions and
1:1a70df0:  * limitations under the License.
1:1a70df0:  */
1:1a70df0: package org.apache.cassandra.transport.messages;
3:1a70df0: 
1:1a70df0: import org.apache.cassandra.transport.CBUtil;
1:1a70df0: import org.apache.cassandra.transport.Message;
1:cbf304e: import io.netty.buffer.ByteBuf;
1:e0adc16: import org.apache.cassandra.transport.ProtocolVersion;
1:1a70df0: 
1:4960355: import java.nio.ByteBuffer;
1:4960355: 
1:1a70df0: /**
1:1a70df0:  * Indicates to the client that authentication has succeeded.
1:1a70df0:  *
1:1a70df0:  * Optionally ships some final informations from the server (as mandated by
1:1a70df0:  * SASL).
1:1a70df0:  */
1:1a70df0: public class AuthSuccess extends Message.Response
2:1a70df0: {
1:1a70df0:     public static final Message.Codec<AuthSuccess> codec = new Message.Codec<AuthSuccess>()
1:1a70df0:     {
1:e0adc16:         public AuthSuccess decode(ByteBuf body, ProtocolVersion version)
1:1a70df0:         {
1:4960355:             ByteBuffer b = CBUtil.readValue(body);
1:62714a9:             byte[] token = null;
1:62714a9:             if (b != null)
1:62714a9:             {
1:62714a9:                 token = new byte[b.remaining()];
1:62714a9:                 b.get(token);
1:62714a9:             }
1:4960355:             return new AuthSuccess(token);
2:1a70df0:         }
1:1a70df0: 
1:e0adc16:         public void encode(AuthSuccess success, ByteBuf dest, ProtocolVersion version)
1:1a70df0:         {
1:f8be23a:             CBUtil.writeValue(success.token, dest);
1:f8be23a:         }
1:f8be23a: 
1:e0adc16:         public int encodedSize(AuthSuccess success, ProtocolVersion version)
1:f8be23a:         {
1:f8be23a:             return CBUtil.sizeOfValue(success.token);
1:1a70df0:         }
1:1a70df0:     };
1:1a70df0: 
1:1a70df0:     private byte[] token;
1:1a70df0: 
1:1a70df0:     public AuthSuccess(byte[] token)
1:1a70df0:     {
1:1a70df0:         super(Message.Type.AUTH_SUCCESS);
1:1a70df0:         this.token = token;
1:1a70df0:     }
1:1a70df0: 
1:1a70df0:     public byte[] getToken()
1:1a70df0:     {
1:1a70df0:         return token;
1:1a70df0:     }
1:1a70df0: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e0adc16
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.transport.ProtocolVersion;
/////////////////////////////////////////////////////////////////////////
1:         public AuthSuccess decode(ByteBuf body, ProtocolVersion version)
/////////////////////////////////////////////////////////////////////////
1:         public void encode(AuthSuccess success, ByteBuf dest, ProtocolVersion version)
1:         public int encodedSize(AuthSuccess success, ProtocolVersion version)
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:ca2f022
commit:62714a9
/////////////////////////////////////////////////////////////////////////
1:             byte[] token = null;
1:             if (b != null)
1:             {
1:                 token = new byte[b.remaining()];
1:                 b.get(token);
1:             }
author:belliottsmith
-------------------------------------------------------------------------------
commit:cbf304e
/////////////////////////////////////////////////////////////////////////
1: import io.netty.buffer.ByteBuf;
/////////////////////////////////////////////////////////////////////////
0:         public AuthSuccess decode(ByteBuf body, int version)
/////////////////////////////////////////////////////////////////////////
0:         public void encode(AuthSuccess success, ByteBuf dest, int version)
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:f8be23a
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         public void encode(AuthSuccess success, ChannelBuffer dest, int version)
1:             CBUtil.writeValue(success.token, dest);
1:         }
1: 
0:         public int encodedSize(AuthSuccess success, int version)
1:         {
1:             return CBUtil.sizeOfValue(success.token);
/////////////////////////////////////////////////////////////////////////
commit:5a18e37
/////////////////////////////////////////////////////////////////////////
0:     public ChannelBuffer encode(int version)
0:         return codec.encode(this, version);
commit:e48ff29
/////////////////////////////////////////////////////////////////////////
0:         public ChannelBuffer encode(AuthSuccess success, int version)
/////////////////////////////////////////////////////////////////////////
0:         return codec.encode(this, getVersion());
commit:4960355
/////////////////////////////////////////////////////////////////////////
1: import java.nio.ByteBuffer;
1: 
/////////////////////////////////////////////////////////////////////////
1:             ByteBuffer b = CBUtil.readValue(body);
0:             byte[] token = new byte[b.remaining()];
0:             b.get(token);
1:             return new AuthSuccess(token);
commit:1a70df0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.transport.messages;
1: 
1: import org.apache.cassandra.transport.CBUtil;
1: import org.apache.cassandra.transport.Message;
0: import org.jboss.netty.buffer.ChannelBuffer;
1: 
1: /**
1:  * Indicates to the client that authentication has succeeded.
1:  *
1:  * Optionally ships some final informations from the server (as mandated by
1:  * SASL).
1:  */
1: public class AuthSuccess extends Message.Response
1: {
1:     public static final Message.Codec<AuthSuccess> codec = new Message.Codec<AuthSuccess>()
1:     {
0:         @Override
0:         public AuthSuccess decode(ChannelBuffer body, int version)
1:         {
0:             return new AuthSuccess(CBUtil.readValue(body));
1:         }
1: 
0:         @Override
0:         public ChannelBuffer encode(AuthSuccess success)
1:         {
0:             return CBUtil.valueToCB(success.token);
1:         }
1:     };
1: 
1:     private byte[] token;
1: 
1:     public AuthSuccess(byte[] token)
1:     {
1:         super(Message.Type.AUTH_SUCCESS);
1:         this.token = token;
1:     }
1: 
0:     @Override
0:     public ChannelBuffer encode()
1:     {
0:         return codec.encode(this);
1:     }
1: 
1:     public byte[] getToken()
1:     {
1:         return token;
1:     }
1: }
1: 
============================================================================