1:9e85e85: /*
1:9e85e85:  * Licensed to the Apache Software Foundation (ASF) under one
1:9e85e85:  * or more contributor license agreements.  See the NOTICE file
1:9e85e85:  * distributed with this work for additional information
1:9e85e85:  * regarding copyright ownership.  The ASF licenses this file
1:9e85e85:  * to you under the Apache License, Version 2.0 (the
1:9e85e85:  * "License"); you may not use this file except in compliance
1:9e85e85:  * with the License.  You may obtain a copy of the License at
1:9e85e85:  *
1:9e85e85:  *    http://www.apache.org/licenses/LICENSE-2.0
1:9e85e85:  *
1:9e85e85:  * Unless required by applicable law or agreed to in writing,
1:9e85e85:  * software distributed under the License is distributed on an
1:9e85e85:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:9e85e85:  * KIND, either express or implied.  See the License for the
1:9e85e85:  * specific language governing permissions and limitations
1:9e85e85:  * under the License.
1:9e85e85:  */
1:9e85e85: package org.apache.cassandra.schema;
1:9e85e85: 
1:9e85e85: import org.apache.cassandra.cql3.CQLTester;
1:9e85e85: import org.apache.cassandra.exceptions.ConfigurationException;
1:9e85e85: import org.junit.Test;
1:9e85e85: 
1:9e85e85: import static org.junit.Assert.fail;
1:9e85e85: 
1:9e85e85: public class CreateTableValidationTest extends CQLTester
1:9e85e85: {
1:9e85e85:     private static final String KEYSPACE1 = "CreateTableValidationTest";
1:9e85e85: 
1:9e85e85:     @Test
1:9e85e85:     public void testInvalidBloomFilterFPRatio() throws Throwable
1:9e85e85:     {
1:9e85e85:         try
1:9e85e85:         {
1:9e85e85:             createTableMayThrow("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.0000001");
1:9e85e85:             fail("Expected an fp chance of 0.0000001 to be rejected");
1:9e85e85:         }
1:9e85e85:         catch (ConfigurationException exc) { }
1:9e85e85: 
1:9e85e85:         try
1:9e85e85:         {
1:9e85e85:             createTableMayThrow("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 1.1");
1:9e85e85:             fail("Expected an fp chance of 1.1 to be rejected");
1:9e85e85:         }
1:9e85e85:         catch (ConfigurationException exc) { }
1:9e85e85: 
1:9e85e85:         // sanity check
1:9e85e85:         createTable("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.1");
1:9e85e85:     }
1:9e85e85: }
============================================================================
author:Arindam Gupta
-------------------------------------------------------------------------------
commit:9e85e85
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  */
1: package org.apache.cassandra.schema;
1: 
1: import org.apache.cassandra.cql3.CQLTester;
1: import org.apache.cassandra.exceptions.ConfigurationException;
1: import org.junit.Test;
1: 
1: import static org.junit.Assert.fail;
1: 
1: public class CreateTableValidationTest extends CQLTester
1: {
1:     private static final String KEYSPACE1 = "CreateTableValidationTest";
1: 
1:     @Test
1:     public void testInvalidBloomFilterFPRatio() throws Throwable
1:     {
1:         try
1:         {
1:             createTableMayThrow("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.0000001");
1:             fail("Expected an fp chance of 0.0000001 to be rejected");
1:         }
1:         catch (ConfigurationException exc) { }
1: 
1:         try
1:         {
1:             createTableMayThrow("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 1.1");
1:             fail("Expected an fp chance of 1.1 to be rejected");
1:         }
1:         catch (ConfigurationException exc) { }
1: 
1:         // sanity check
1:         createTable("CREATE TABLE %s (a int PRIMARY KEY, b int) WITH bloom_filter_fp_chance = 0.1");
1:     }
1: }
============================================================================