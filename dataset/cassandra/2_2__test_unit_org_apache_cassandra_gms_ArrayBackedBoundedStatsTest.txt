1:615bf37: /*
1:615bf37:  *
1:615bf37:  * Licensed to the Apache Software Foundation (ASF) under one
1:615bf37:  * or more contributor license agreements.  See the NOTICE file
1:615bf37:  * distributed with this work for additional information
1:615bf37:  * regarding copyright ownership.  The ASF licenses this file
1:615bf37:  * to you under the Apache License, Version 2.0 (the
1:615bf37:  * "License"); you may not use this file except in compliance
1:615bf37:  * with the License.  You may obtain a copy of the License at
1:615bf37:  *
1:615bf37:  *   http://www.apache.org/licenses/LICENSE-2.0
1:615bf37:  *
1:615bf37:  * Unless required by applicable law or agreed to in writing,
1:615bf37:  * software distributed under the License is distributed on an
1:615bf37:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:615bf37:  * KIND, either express or implied.  See the License for the
1:615bf37:  * specific language governing permissions and limitations
1:615bf37:  * under the License.
1:615bf37:  *
1:615bf37:  */
1:ad8047a: package org.apache.cassandra.gms;
1:ad8047a: 
1:ad8047a: import java.util.Arrays;
1:ad8047a: 
1:ad8047a: import org.junit.Test;
1:ad8047a: 
1:ad8047a: import static org.junit.Assert.assertEquals;
1:ad8047a: import static org.junit.Assert.assertTrue;
1:ad8047a: 
1:ad8047a: public class ArrayBackedBoundedStatsTest {
1:ad8047a: 
1:ad8047a:     @Test
1:ad8047a:     public void test()
1:ad8047a:     {
1:ad8047a:         int size = 4;
1:ad8047a: 
1:ad8047a:         ArrayBackedBoundedStats bsd = new ArrayBackedBoundedStats(size);
1:ad8047a:         //check the values for an empty result
1:ad8047a:         assertEquals(0, bsd.mean(), 0.001d);
1:ad8047a: 
1:ad8047a:         bsd.add(1L); //this one falls out, over limit
1:ad8047a:         bsd.add(2L);
1:ad8047a:         bsd.add(3L);
1:ad8047a:         bsd.add(4L);
1:ad8047a:         bsd.add(5L);
1:ad8047a: 
1:ad8047a:         //verify that everything is in there
1:ad8047a:         long [] expected = new long[] {2,3,4,5};
1:ad8047a:         assertArrivalIntervals(bsd, expected);
1:ad8047a: 
1:ad8047a:         //check results
1:ad8047a:         assertEquals(3.5, bsd.mean(), 0.001d);
1:ad8047a:     }
1:ad8047a: 
1:ad8047a:     private void assertArrivalIntervals(ArrayBackedBoundedStats bsd, long [] expected)
1:ad8047a:     {
1:ad8047a:         Arrays.sort(expected);
1:ad8047a:         Arrays.sort(bsd.getArrivalIntervals());
1:ad8047a:         assertTrue(Arrays.equals(bsd.getArrivalIntervals(), expected));
1:ad8047a: 
1:ad8047a:     }
1:ad8047a: 
1:ad8047a:     @Test
1:ad8047a:     public void testMultipleRounds() throws Exception
1:ad8047a:     {
1:ad8047a:         int size = 5;
1:ad8047a:         ArrayBackedBoundedStats bsd = new ArrayBackedBoundedStats(size);
1:ad8047a: 
1:ad8047a:         for(long i=0; i <= 1000;i++)
1:ad8047a:         {
1:ad8047a:             bsd.add(i);
1:ad8047a:         }
1:ad8047a: 
1:ad8047a:         long [] expected = new long[] {1000,999,998,997, 996};
1:ad8047a:         assertArrivalIntervals(bsd, expected);
1:ad8047a:     }
1:ad8047a: }
============================================================================
author:Carl Yeksigian
-------------------------------------------------------------------------------
commit:615bf37
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
author:Jason Brown
-------------------------------------------------------------------------------
commit:ad8047a
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.gms;
1: 
1: import java.util.Arrays;
1: 
1: import org.junit.Test;
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.junit.Assert.assertTrue;
1: 
1: public class ArrayBackedBoundedStatsTest {
1: 
1:     @Test
1:     public void test()
1:     {
1:         int size = 4;
1: 
1:         ArrayBackedBoundedStats bsd = new ArrayBackedBoundedStats(size);
1:         //check the values for an empty result
1:         assertEquals(0, bsd.mean(), 0.001d);
1: 
1:         bsd.add(1L); //this one falls out, over limit
1:         bsd.add(2L);
1:         bsd.add(3L);
1:         bsd.add(4L);
1:         bsd.add(5L);
1: 
1:         //verify that everything is in there
1:         long [] expected = new long[] {2,3,4,5};
1:         assertArrivalIntervals(bsd, expected);
1: 
1:         //check results
1:         assertEquals(3.5, bsd.mean(), 0.001d);
1:     }
1: 
1:     private void assertArrivalIntervals(ArrayBackedBoundedStats bsd, long [] expected)
1:     {
1:         Arrays.sort(expected);
1:         Arrays.sort(bsd.getArrivalIntervals());
1:         assertTrue(Arrays.equals(bsd.getArrivalIntervals(), expected));
1: 
1:     }
1: 
1:     @Test
1:     public void testMultipleRounds() throws Exception
1:     {
1:         int size = 5;
1:         ArrayBackedBoundedStats bsd = new ArrayBackedBoundedStats(size);
1: 
1:         for(long i=0; i <= 1000;i++)
1:         {
1:             bsd.add(i);
1:         }
1: 
1:         long [] expected = new long[] {1000,999,998,997, 996};
1:         assertArrivalIntervals(bsd, expected);
1:     }
1: }
============================================================================