1:7536429: package org.apache.cassandra.stress.operations;
1:0bc9841: /*
1:89f275c:  *
1:0bc9841:  * Licensed to the Apache Software Foundation (ASF) under one
1:0bc9841:  * or more contributor license agreements.  See the NOTICE file
1:0bc9841:  * distributed with this work for additional information
1:0bc9841:  * regarding copyright ownership.  The ASF licenses this file
1:0bc9841:  * to you under the Apache License, Version 2.0 (the
1:0bc9841:  * "License"); you may not use this file except in compliance
1:0bc9841:  * with the License.  You may obtain a copy of the License at
1:89f275c:  *
1:0bc9841:  *   http://www.apache.org/licenses/LICENSE-2.0
1:89f275c:  *
1:0bc9841:  * Unless required by applicable law or agreed to in writing,
1:0bc9841:  * software distributed under the License is distributed on an
1:0bc9841:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:0bc9841:  * KIND, either express or implied.  See the License for the
1:0bc9841:  * specific language governing permissions and limitations
1:0bc9841:  * under the License.
1:89f275c:  *
1:0bc9841:  */
1:6bbfb55: 
3:7536429: 
1:7536429: import org.apache.commons.math3.distribution.EnumeratedDistribution;
1:7536429: 
1:7536429: import org.apache.cassandra.stress.Operation;
1:7536429: import org.apache.cassandra.stress.generate.Distribution;
1:6bbfb55: import org.apache.commons.math3.util.Pair;
1:7536429: 
1:7536429: public class SampledOpDistribution implements OpDistribution
1:6bbfb55: {
1:7536429: 
1:7536429:     final EnumeratedDistribution<Operation> operations;
1:7536429:     final Distribution clustering;
1:7536429:     private Operation cur;
1:7536429:     private long remaining;
1:7536429: 
1:7536429:     public SampledOpDistribution(EnumeratedDistribution<Operation> operations, Distribution clustering)
1:6bbfb55:     {
1:7536429:         this.operations = operations;
1:7536429:         this.clustering = clustering;
1:6bbfb55:     }
1:6bbfb55: 
1:7536429:     public Operation next()
1:6bbfb55:     {
1:7536429:         while (remaining == 0)
1:6bbfb55:         {
1:7536429:             remaining = clustering.next();
1:7536429:             cur = operations.sample();
1:6bbfb55:         }
1:7536429:         remaining--;
1:7536429:         return cur;
1:6bbfb55:     }
1:6bbfb55: }
============================================================================
author:nitsanw
-------------------------------------------------------------------------------
commit:e73633c
/////////////////////////////////////////////////////////////////////////
commit:89f275c
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
/////////////////////////////////////////////////////////////////////////
0:             op.getFirst().close();
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:6bbfb55
/////////////////////////////////////////////////////////////////////////
1: import org.apache.commons.math3.util.Pair;
/////////////////////////////////////////////////////////////////////////
1: 
0:     public void initTimers()
1:     {
0:         for (Pair<Operation, Double> op : operations.getPmf())
1:         {
0:             op.getFirst().timer.init();
1:         }
1:     }
1: 
0:     public void closeTimers()
1:     {
0:         for (Pair<Operation, Double> op : operations.getPmf())
1:         {
0:             op.getFirst().timer.close();
1:         }
1:     }
commit:6c579a0
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:7536429
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.stress.operations;
1: 
1: import org.apache.commons.math3.distribution.EnumeratedDistribution;
0: import org.apache.commons.math3.util.Pair;
1: 
1: import org.apache.cassandra.stress.Operation;
1: import org.apache.cassandra.stress.generate.Distribution;
1: 
1: public class SampledOpDistribution implements OpDistribution
0: {
1: 
1:     final EnumeratedDistribution<Operation> operations;
1:     final Distribution clustering;
1:     private Operation cur;
1:     private long remaining;
1: 
1:     public SampledOpDistribution(EnumeratedDistribution<Operation> operations, Distribution clustering)
0:     {
1:         this.operations = operations;
1:         this.clustering = clustering;
0:     }
1: 
0:     public int maxBatchSize()
0:     {
0:         int max = 1;
0:         for (Pair<Operation, Double> pair : operations.getPmf())
0:             max = Math.max(max, (int) pair.getFirst().partitionCount.maxValue());
0:         return max;
0:     }
1: 
1:     public Operation next()
0:     {
1:         while (remaining == 0)
0:         {
1:             remaining = clustering.next();
1:             cur = operations.sample();
0:         }
1:         remaining--;
1:         return cur;
0:     }
0: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:0bc9841
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
0:  * 
1:  */
0: 
============================================================================