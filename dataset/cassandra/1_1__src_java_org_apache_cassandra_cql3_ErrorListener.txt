1:8a2d8a1: /*
1:8a2d8a1:  * Licensed to the Apache Software Foundation (ASF) under one
1:8a2d8a1:  * or more contributor license agreements.  See the NOTICE file
1:8a2d8a1:  * distributed with this work for additional information
1:8a2d8a1:  * regarding copyright ownership.  The ASF licenses this file
1:8a2d8a1:  * to you under the Apache License, Version 2.0 (the
1:8a2d8a1:  * "License"); you may not use this file except in compliance
1:8a2d8a1:  * with the License.  You may obtain a copy of the License at
1:8a2d8a1:  *
1:8a2d8a1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:8a2d8a1:  *
1:8a2d8a1:  * Unless required by applicable law or agreed to in writing, software
1:8a2d8a1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8a2d8a1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8a2d8a1:  * See the License for the specific language governing permissions and
1:8a2d8a1:  * limitations under the License.
1:8a2d8a1:  */
1:8a2d8a1: package org.apache.cassandra.cql3;
1:8a2d8a1: 
1:8a2d8a1: import org.antlr.runtime.BaseRecognizer;
1:8a2d8a1: import org.antlr.runtime.RecognitionException;
1:8a2d8a1: 
1:8a2d8a1: /**
1:8a2d8a1:  * Listener used to collect the syntax errors emitted by the Lexer and Parser.
1:8a2d8a1:  */
1:8a2d8a1: public interface ErrorListener
1:8a2d8a1: {
1:8a2d8a1:     /**
1:8a2d8a1:      * Invoked when a syntax error occurs.
1:8a2d8a1:      *
1:8a2d8a1:      * @param recognizer the parser or lexer that emitted the error
1:8a2d8a1:      * @param tokenNames the token names
1:8a2d8a1:      * @param e the exception
1:8a2d8a1:      */
1:8a2d8a1:     void syntaxError(BaseRecognizer recognizer, String[] tokenNames, RecognitionException e);
1:8a2d8a1: 
1:8a2d8a1:     /**
1:8a2d8a1:      * Invoked when a syntax error with a specified message occurs.
1:8a2d8a1:      *
1:8a2d8a1:      * @param recognizer the parser or lexer that emitted the error
1:8a2d8a1:      * @param errorMsg the error message
1:8a2d8a1:      */
1:8a2d8a1:     void syntaxError(BaseRecognizer recognizer, String errorMsg);
1:8a2d8a1: }
============================================================================
author:blerer
-------------------------------------------------------------------------------
commit:8a2d8a1
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3;
1: 
1: import org.antlr.runtime.BaseRecognizer;
1: import org.antlr.runtime.RecognitionException;
1: 
1: /**
1:  * Listener used to collect the syntax errors emitted by the Lexer and Parser.
1:  */
1: public interface ErrorListener
1: {
1:     /**
1:      * Invoked when a syntax error occurs.
1:      *
1:      * @param recognizer the parser or lexer that emitted the error
1:      * @param tokenNames the token names
1:      * @param e the exception
1:      */
1:     void syntaxError(BaseRecognizer recognizer, String[] tokenNames, RecognitionException e);
1: 
1:     /**
1:      * Invoked when a syntax error with a specified message occurs.
1:      *
1:      * @param recognizer the parser or lexer that emitted the error
1:      * @param errorMsg the error message
1:      */
1:     void syntaxError(BaseRecognizer recognizer, String errorMsg);
1: }
============================================================================