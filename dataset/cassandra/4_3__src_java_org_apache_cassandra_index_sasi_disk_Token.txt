1:72790dc: /*
1:72790dc:  * Licensed to the Apache Software Foundation (ASF) under one
1:72790dc:  * or more contributor license agreements.  See the NOTICE file
1:72790dc:  * distributed with this work for additional information
1:72790dc:  * regarding copyright ownership.  The ASF licenses this file
1:72790dc:  * to you under the Apache License, Version 2.0 (the
1:72790dc:  * "License"); you may not use this file except in compliance
1:72790dc:  * with the License.  You may obtain a copy of the License at
1:72790dc:  *
1:72790dc:  *     http://www.apache.org/licenses/LICENSE-2.0
1:72790dc:  *
1:72790dc:  * Unless required by applicable law or agreed to in writing, software
1:72790dc:  * distributed under the License is distributed on an "AS IS" BASIS,
1:72790dc:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:72790dc:  * See the License for the specific language governing permissions and
1:72790dc:  * limitations under the License.
1:72790dc:  */
1:72790dc: package org.apache.cassandra.index.sasi.disk;
2:72790dc: 
1:72790dc: import com.google.common.primitives.Longs;
1:5c4d5c7: 
1:7d857b4: import org.apache.cassandra.index.sasi.utils.*;
1:5c4d5c7: 
1:7d857b4: public abstract class Token implements CombinedValue<Long>, Iterable<RowKey>
1:72790dc: {
1:72790dc:     protected final long token;
1:72790dc: 
1:72790dc:     public Token(long token)
1:72790dc:     {
1:72790dc:         this.token = token;
1:72790dc:     }
1:72790dc: 
1:72790dc:     public Long get()
1:72790dc:     {
1:72790dc:         return token;
1:72790dc:     }
1:5c4d5c7: 
1:7d857b4:     public abstract KeyOffsets getOffsets();
1:72790dc: 
1:72790dc:     public int compareTo(CombinedValue<Long> o)
1:72790dc:     {
1:72790dc:         return Longs.compare(token, ((Token) o).token);
1:72790dc:     }
1:72790dc: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:ea77d00
/////////////////////////////////////////////////////////////////////////
author:Alex Petrov
-------------------------------------------------------------------------------
commit:7d857b4
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.lang.builder.HashCodeBuilder;
1: import org.apache.cassandra.index.sasi.utils.*;
1: public abstract class Token implements CombinedValue<Long>, Iterable<RowKey>
/////////////////////////////////////////////////////////////////////////
1:     public abstract KeyOffsets getOffsets();
author:Jordan West
-------------------------------------------------------------------------------
commit:5c4d5c7
/////////////////////////////////////////////////////////////////////////
1: 
0: import com.carrotsearch.hppc.LongSet;
1: 
/////////////////////////////////////////////////////////////////////////
0:     public abstract LongSet getOffsets();
1: 
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:72790dc
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.index.sasi.disk;
1: 
1: import com.google.common.primitives.Longs;
0: import org.apache.cassandra.db.DecoratedKey;
0: import org.apache.cassandra.index.sasi.utils.CombinedValue;
1: 
0: public abstract class Token implements CombinedValue<Long>, Iterable<DecoratedKey>
1: {
1:     protected final long token;
1: 
1:     public Token(long token)
1:     {
1:         this.token = token;
1:     }
1: 
1:     public Long get()
1:     {
1:         return token;
1:     }
1: 
1:     public int compareTo(CombinedValue<Long> o)
1:     {
1:         return Longs.compare(token, ((Token) o).token);
1:     }
1: }
============================================================================