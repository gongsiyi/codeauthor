1:07cf56f: /*
1:2c4ac98:  * Licensed to the Apache Software Foundation (ASF) under one
1:2c4ac98:  * or more contributor license agreements.  See the NOTICE file
1:2c4ac98:  * distributed with this work for additional information
1:2c4ac98:  * regarding copyright ownership.  The ASF licenses this file
1:2c4ac98:  * to you under the Apache License, Version 2.0 (the
1:2c4ac98:  * "License"); you may not use this file except in compliance
1:2c4ac98:  * with the License.  You may obtain a copy of the License at
1:2c4ac98:  *
1:2c4ac98:  *     http://www.apache.org/licenses/LICENSE-2.0
1:2c4ac98:  *
1:2c4ac98:  * Unless required by applicable law or agreed to in writing, software
1:2c4ac98:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2c4ac98:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2c4ac98:  * See the License for the specific language governing permissions and
1:2c4ac98:  * limitations under the License.
2:2c4ac98:  */
1:2c4ac98: package org.apache.cassandra.streaming;
2:2c4ac98: 
1:5151169: import com.google.common.util.concurrent.FutureCallback;
1:2c4ac98: 
1:5151169: public interface StreamEventHandler extends FutureCallback<StreamState>
1:5151169: {
1:5151169:     /**
1:5151169:      * Callback for various streaming events.
1:5151169:      *
1:5151169:      * @see StreamEvent.Type
1:5151169:      * @param event Stream event.
1:5151169:      */
1:5151169:     void handleStreamEvent(StreamEvent event);
1:5151169: }
============================================================================
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:5151169
/////////////////////////////////////////////////////////////////////////
1: import com.google.common.util.concurrent.FutureCallback;
1: public interface StreamEventHandler extends FutureCallback<StreamState>
1: {
1:     /**
1:      * Callback for various streaming events.
1:      *
1:      * @see StreamEvent.Type
1:      * @param event Stream event.
1:      */
1:     void handleStreamEvent(StreamEvent event);
1: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
commit:2deee7a
/////////////////////////////////////////////////////////////////////////
0:     BULK_LOAD,
0:     REBUILD
commit:98eaa99
/////////////////////////////////////////////////////////////////////////
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:70c0ed8
author:Gary Dusbabek
-------------------------------------------------------------------------------
commit:75148e1
/////////////////////////////////////////////////////////////////////////
0:     // TODO: the only types of operation that are currently distinguised are AES and everything else.  There is no
0:     // sense in having the other types (yet).
author:Johan Oskarsson
-------------------------------------------------------------------------------
commit:2c4ac98
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.streaming;
1: 
0: /**
0:  * Streaming operation type.
1:  */
0: public enum OperationType
0: {
0:     AES,
0:     BOOTSTRAP,
0:     UNBOOTSTRAP,
0:     RESTORE_REPLICA_COUNT;
0: }
1: 
============================================================================