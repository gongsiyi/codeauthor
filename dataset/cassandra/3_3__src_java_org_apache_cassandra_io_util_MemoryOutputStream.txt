1:1adcd1c: /*
1:1adcd1c:  * Licensed to the Apache Software Foundation (ASF) under one
1:1adcd1c:  * or more contributor license agreements.  See the NOTICE file
1:1adcd1c:  * distributed with this work for additional information
1:1adcd1c:  * regarding copyright ownership.  The ASF licenses this file
1:1adcd1c:  * to you under the Apache License, Version 2.0 (the
1:1adcd1c:  * "License"); you may not use this file except in compliance
1:1adcd1c:  * with the License.  You may obtain a copy of the License at
1:07cdfd0:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
3:07cdfd0:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:1adcd1c:  */
1:07cf56f: package org.apache.cassandra.io.util;
1:2fd3268: 
1:6fa1eaa: import java.io.IOException;
1:80d3dec: import java.io.OutputStream;
1:2fd3268: 
1:80d3dec: /**
1:80d3dec:  * This class provides a way to stream the writes into the {@link Memory}
1:80d3dec:  */
1:80d3dec: public class MemoryOutputStream extends OutputStream
1:80d3dec: {
1:07cdfd0: 
1:80d3dec:     private final Memory mem;
1:80d3dec:     private int position = 0;
1:07cdfd0: 
1:80d3dec:     public MemoryOutputStream(Memory mem)
1:80d3dec:     {
1:80d3dec:         this.mem = mem;
1:80d3dec:     }
1:07cdfd0: 
1:80d3dec:     public void write(int b)
1:80d3dec:     {
1:6fa1eaa:         mem.setByte(position++, (byte) b);
1:80d3dec:     }
1:2fd3268: 
1:6fa1eaa:     @Override
1:6fa1eaa:     public void write(byte[] b, int off, int len) throws IOException
1:6fa1eaa:     {
1:6fa1eaa:         mem.setBytes(position, b, off, len);
1:6fa1eaa:         position += len;
1:6fa1eaa:     }
2:6fa1eaa: 
1:80d3dec:     public int position()
1:80d3dec:     {
1:6fa1eaa:         return position;
1:80d3dec:     }
1:80d3dec: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1: 
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1: 
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1: package org.apache.cassandra.io.util;
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:6fa1eaa
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
/////////////////////////////////////////////////////////////////////////
1:         mem.setByte(position++, (byte) b);
1: 
1:     @Override
1:     public void write(byte[] b, int off, int len) throws IOException
1:     {
1:         mem.setBytes(position, b, off, len);
1:         position += len;
1:     }
1: 
1:         return position;
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:1adcd1c
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  * 
1:  */
0: 
commit:80d3dec
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.io.util;
0: 
1: import java.io.OutputStream;
0: 
0: import com.sun.jna.Memory;
0: 
1: /**
1:  * This class provides a way to stream the writes into the {@link Memory}
1:  */
1: public class MemoryOutputStream extends OutputStream
1: {
0:     
1:     private final Memory mem;
1:     private int position = 0;
0:     
1:     public MemoryOutputStream(Memory mem)
1:     {
1:         this.mem = mem;
1:     }
0:     
0:     @Override
1:     public void write(int b)
1:     {
0:         mem.setByte(this.position, (byte)b);
0:         this.position++;
1:     }
0:     
1:     public int position()
1:     {
0:         return this.position;
1:     }
0:     
1: }
============================================================================