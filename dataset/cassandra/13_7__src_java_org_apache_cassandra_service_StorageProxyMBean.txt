1:88edbed: /*
1:88edbed:  * Licensed to the Apache Software Foundation (ASF) under one
1:88edbed:  * or more contributor license agreements.  See the NOTICE file
1:88edbed:  * distributed with this work for additional information
1:88edbed:  * regarding copyright ownership.  The ASF licenses this file
1:88edbed:  * to you under the Apache License, Version 2.0 (the
1:88edbed:  * "License"); you may not use this file except in compliance
1:88edbed:  * with the License.  You may obtain a copy of the License at
1:88edbed:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:88edbed:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:88edbed:  */
1:219293b: package org.apache.cassandra.service;
1:b2024a1: 
1:254d315: import java.util.List;
1:254d315: import java.util.Map;
1:500c62d: import java.util.Set;
1:254d315: 
1:219293b: public interface StorageProxyMBean
1:219293b: {
1:3893f24:     public long getTotalHints();
1:a34b761:     public boolean getHintedHandoffEnabled();
1:a34b761:     public void setHintedHandoffEnabled(boolean b);
1:e89d548:     public void enableHintsForDC(String dc);
1:e89d548:     public void disableHintsForDC(String dc);
1:e89d548:     public Set<String> getHintedHandoffDisabledDCs();
1:60b848b:     public int getMaxHintWindow();
1:60b848b:     public void setMaxHintWindow(int ms);
1:3893f24:     public int getMaxHintsInProgress();
1:3893f24:     public void setMaxHintsInProgress(int qs);
1:3893f24:     public int getHintsInProgress();
1:a34b761: 
1:eca0c48:     public Long getRpcTimeout();
1:eca0c48:     public void setRpcTimeout(Long timeoutInMillis);
1:e6610e4:     public Long getReadRpcTimeout();
1:e6610e4:     public void setReadRpcTimeout(Long timeoutInMillis);
1:e6610e4:     public Long getWriteRpcTimeout();
1:e6610e4:     public void setWriteRpcTimeout(Long timeoutInMillis);
1:714c423:     public Long getCounterWriteRpcTimeout();
1:714c423:     public void setCounterWriteRpcTimeout(Long timeoutInMillis);
1:8b0e186:     public Long getCasContentionTimeout();
1:8b0e186:     public void setCasContentionTimeout(Long timeoutInMillis);
1:e6610e4:     public Long getRangeRpcTimeout();
1:e6610e4:     public void setRangeRpcTimeout(Long timeoutInMillis);
1:e6610e4:     public Long getTruncateRpcTimeout();
1:e6610e4:     public void setTruncateRpcTimeout(Long timeoutInMillis);
1:979a022: 
1:e56d9ef:     public void setNativeTransportMaxConcurrentConnections(Long nativeTransportMaxConcurrentConnections);
1:e56d9ef:     public Long getNativeTransportMaxConcurrentConnections();
1:e56d9ef: 
1:edd1226:     public void reloadTriggerClasses();
1:979a022: 
1:4c0be33:     public long getReadRepairAttempted();
1:4c0be33:     public long getReadRepairRepairedBlocking();
1:4c0be33:     public long getReadRepairRepairedBackground();
1:254d315: 
1:254d315:     /** Returns each live node's schema version */
1:254d315:     public Map<String, List<String>> getSchemaVersions();
1:54cbdd7: 
1:54cbdd7:     public int getNumberOfTables();
1:219293b: }
============================================================================
author:Geoffrey Yu
-------------------------------------------------------------------------------
commit:54cbdd7
/////////////////////////////////////////////////////////////////////////
1: 
1:     public int getNumberOfTables();
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e89d548
/////////////////////////////////////////////////////////////////////////
1:     public void enableHintsForDC(String dc);
1:     public void disableHintsForDC(String dc);
1:     public Set<String> getHintedHandoffDisabledDCs();
author:Joshua McKenzie
-------------------------------------------------------------------------------
commit:ac75ce3
commit:b1c2536
author:Norman Maurer
-------------------------------------------------------------------------------
commit:e56d9ef
/////////////////////////////////////////////////////////////////////////
1:     public void setNativeTransportMaxConcurrentConnections(Long nativeTransportMaxConcurrentConnections);
1:     public Long getNativeTransportMaxConcurrentConnections();
1: 
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:8896a70
/////////////////////////////////////////////////////////////////////////
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:f628bd8
commit:500c62d
/////////////////////////////////////////////////////////////////////////
1: import java.util.Set;
/////////////////////////////////////////////////////////////////////////
0:     public Set<String> getHintedHandoffEnabledByDC();
0:     public void setHintedHandoffEnabledByDCList(String dcs);
commit:ee020c9
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:f64b31c
/////////////////////////////////////////////////////////////////////////
0: import java.util.Set;
/////////////////////////////////////////////////////////////////////////
0:     public Set<String> getHintedHandoffEnabledByDC();
0:     public void setHintedHandoffEnabledByDCList(String dcs);
commit:8d4b51d
commit:254d315
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1: import java.util.Map;
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     /** Returns each live node's schema version */
1:     public Map<String, List<String>> getSchemaVersions();
commit:8b0e186
/////////////////////////////////////////////////////////////////////////
1:     public Long getCasContentionTimeout();
1:     public void setCasContentionTimeout(Long timeoutInMillis);
commit:e6610e4
/////////////////////////////////////////////////////////////////////////
1:     public Long getReadRpcTimeout();
1:     public void setReadRpcTimeout(Long timeoutInMillis);
1:     public Long getWriteRpcTimeout();
1:     public void setWriteRpcTimeout(Long timeoutInMillis);
1:     public Long getRangeRpcTimeout();
1:     public void setRangeRpcTimeout(Long timeoutInMillis);
1:     public Long getTruncateRpcTimeout();
1:     public void setTruncateRpcTimeout(Long timeoutInMillis);
commit:3893f24
/////////////////////////////////////////////////////////////////////////
1:     public long getTotalHints();
1:     public int getMaxHintsInProgress();
1:     public void setMaxHintsInProgress(int qs);
1:     public int getHintsInProgress();
commit:f72f587
commit:b2024a1
/////////////////////////////////////////////////////////////////////////
0:     public long getCounterWriteOperations();
0:     public long getTotalCounterWriteLatencyMicros();
0:     public double getRecentCounterWriteLatencyMicros();
0:     public long[] getTotalCounterWriteLatencyHistogramMicros();
0:     public long[] getRecentCounterWriteLatencyHistogramMicros();
1: 
commit:d6f6285
/////////////////////////////////////////////////////////////////////////
0:     public long[] getTotalReadLatencyHistogramMicros();
0:     public long[] getRecentReadLatencyHistogramMicros();
0:     public long[] getTotalRangeLatencyHistogramMicros();
0:     public long[] getRecentRangeLatencyHistogramMicros();
0:     public long[] getTotalWriteLatencyHistogramMicros();
0:     public long[] getRecentWriteLatencyHistogramMicros();
commit:a34b761
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean getHintedHandoffEnabled();
1:     public void setHintedHandoffEnabled(boolean b);
commit:979a022
/////////////////////////////////////////////////////////////////////////
0:     public long getReadOperations();
0:     public long getTotalReadLatency();
0:     public double getRecentReadLatency();
1: 
0:     public long getRangeOperations();
0:     public long getTotalRangeLatency();
0:     public double getRecentRangeLatency();
1: 
0:     public long getWriteOperations();
0:     public long getTotalWriteLatency();
0:     public double getRecentWriteLatency();
commit:88edbed
/////////////////////////////////////////////////////////////////////////
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
0: *    http://www.apache.org/licenses/LICENSE-2.0
1: *
0: * Unless required by applicable law or agreed to in writing,
0: * software distributed under the License is distributed on an
0: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0: * KIND, either express or implied.  See the License for the
0: * specific language governing permissions and limitations
0: * under the License.
1: */
commit:219293b
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.service;
0: 
1: public interface StorageProxyMBean
1: {
0:     public double getReadLatency();
0:     public int getReadOperations();
0:     public double getRangeLatency();
0:     public int getRangeOperations();
0:     public double getWriteLatency();
0:     public int getWriteOperations();
1: }
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:714c423
/////////////////////////////////////////////////////////////////////////
1:     public Long getCounterWriteRpcTimeout();
1:     public void setCounterWriteRpcTimeout(Long timeoutInMillis);
commit:edd1226
/////////////////////////////////////////////////////////////////////////
1:     public void reloadTriggerClasses();
author:Brandon Williams
-------------------------------------------------------------------------------
commit:4c0be33
/////////////////////////////////////////////////////////////////////////
0: 
1:     public long getReadRepairAttempted();
1:     public long getReadRepairRepairedBlocking();
1:     public long getReadRepairRepairedBackground();
commit:a5c0484
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
commit:1c038f5
/////////////////////////////////////////////////////////////////////////
0:     
commit:b4b30cf
/////////////////////////////////////////////////////////////////////////
0: 
commit:6193fef
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.metrics.ReadRepairMetrics;
0: 
/////////////////////////////////////////////////////////////////////////
0:     
0:     public long getReadRepairAttempted();
0:     public long getReadRepairRepairedBlocking();
0:     public long getReadRepairRepairedBackground();
commit:e301c38
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.metrics.ReadRepairMetrics;
0: 
/////////////////////////////////////////////////////////////////////////
0:     
0:     public long getReadRepairAttempted();
0:     public long getReadRepairRepairedBlocking();
0:     public long getReadRepairRepairedBackground();
commit:eca0c48
/////////////////////////////////////////////////////////////////////////
0: 
1:     public Long getRpcTimeout();
1:     public void setRpcTimeout(Long timeoutInMillis);
commit:60b848b
/////////////////////////////////////////////////////////////////////////
1:     public int getMaxHintWindow();
1:     public void setMaxHintWindow(int ms);
author:Vijay Parthasarathy
-------------------------------------------------------------------------------
commit:72a6cff
/////////////////////////////////////////////////////////////////////////
0: 
0:     public void reloadTriggerClass();
author:Dave Brosius
-------------------------------------------------------------------------------
commit:9981316
/////////////////////////////////////////////////////////////////////////
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#lastOpCount
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#totalLatencyHistogram
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#recentLatencyHistogram
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#totalLatencyHistogram
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#recentLatencyHistogram
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:69cedbf
/////////////////////////////////////////////////////////////////////////
0:     /**
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#opCount
0:      */
0:     @Deprecated
0:     /**
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#totalLatency
0:      */
0:     @Deprecated
0:     /**
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#recentLatencyMicro
0:      */
0:     @Deprecated
0:     /**
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#totalLatencyHistogramMicro
0:      */
0:     @Deprecated
0:     /**
0:      * @see org.apache.cassandra.metrics.LatencyMetrics#recentLatencyHistogramMicro
0:      */
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
0:     @Deprecated
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
0:  */
commit:20cdc0f
/////////////////////////////////////////////////////////////////////////
author:Gary Dusbabek
-------------------------------------------------------------------------------
commit:6420863
/////////////////////////////////////////////////////////////////////////
0:     public long getTotalReadLatencyMicros();
0:     public double getRecentReadLatencyMicros();
0:     public long getTotalRangeLatencyMicros();
0:     public double getRecentRangeLatencyMicros();
0:     public long getTotalWriteLatencyMicros();
0:     public double getRecentWriteLatencyMicros();
============================================================================