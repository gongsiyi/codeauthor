1:440366e: /*
1:440366e:  * Licensed to the Apache Software Foundation (ASF) under one
1:440366e:  * or more contributor license agreements.  See the NOTICE file
1:440366e:  * distributed with this work for additional information
1:440366e:  * regarding copyright ownership.  The ASF licenses this file
1:440366e:  * to you under the Apache License, Version 2.0 (the
1:440366e:  * "License"); you may not use this file except in compliance
1:440366e:  * with the License.  You may obtain a copy of the License at
1:440366e:  *
1:440366e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:440366e:  *
1:440366e:  * Unless required by applicable law or agreed to in writing, software
1:440366e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:440366e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:440366e:  * See the License for the specific language governing permissions and
1:440366e:  * limitations under the License.
1:440366e:  */
1:440366e: package org.apache.cassandra.index.internal;
1:440366e: 
1:440366e: import java.util.Set;
1:440366e: import java.util.UUID;
1:440366e: 
1:440366e: import org.apache.cassandra.db.ColumnFamilyStore;
1:440366e: import org.apache.cassandra.db.DecoratedKey;
1:440366e: import org.apache.cassandra.db.Keyspace;
1:440366e: import org.apache.cassandra.db.compaction.CompactionInfo;
1:440366e: import org.apache.cassandra.db.compaction.CompactionInterruptedException;
1:440366e: import org.apache.cassandra.db.compaction.OperationType;
1:440366e: import org.apache.cassandra.index.Index;
1:440366e: import org.apache.cassandra.index.SecondaryIndexBuilder;
1:440366e: import org.apache.cassandra.io.sstable.ReducingKeyIterator;
1:440366e: import org.apache.cassandra.utils.UUIDGen;
1:440366e: 
1:440366e: /**
1:440366e:  * Manages building an entire index from column family data. Runs on to compaction manager.
1:440366e:  */
1:440366e: public class CollatedViewIndexBuilder extends SecondaryIndexBuilder
1:440366e: {
1:440366e:     private final ColumnFamilyStore cfs;
1:440366e:     private final Set<Index> indexers;
1:440366e:     private final ReducingKeyIterator iter;
1:440366e:     private final UUID compactionId;
1:440366e: 
1:440366e:     public CollatedViewIndexBuilder(ColumnFamilyStore cfs, Set<Index> indexers, ReducingKeyIterator iter)
1:440366e:     {
1:440366e:         this.cfs = cfs;
1:440366e:         this.indexers = indexers;
1:440366e:         this.iter = iter;
1:440366e:         this.compactionId = UUIDGen.getTimeUUID();
1:440366e:     }
1:440366e: 
1:440366e:     public CompactionInfo getCompactionInfo()
1:440366e:     {
1:440366e:         return new CompactionInfo(cfs.metadata,
1:440366e:                 OperationType.INDEX_BUILD,
1:440366e:                 iter.getBytesRead(),
1:440366e:                 iter.getTotalBytes(),
1:440366e:                 compactionId);
1:440366e:     }
1:440366e: 
1:440366e:     public void build()
1:440366e:     {
1:440366e:         try
1:440366e:         {
1:440366e:             while (iter.hasNext())
1:440366e:             {
1:440366e:                 if (isStopRequested())
1:440366e:                     throw new CompactionInterruptedException(getCompactionInfo());
1:440366e:                 DecoratedKey key = iter.next();
1:440366e:                 Keyspace.indexPartition(key, cfs, indexers);
1:440366e:             }
1:440366e:         }
1:440366e:         finally
1:440366e:         {
1:440366e:             iter.close();
1:440366e:         }
1:440366e:     }
1:440366e: }
============================================================================
author:Pavel Yaskevich
-------------------------------------------------------------------------------
commit:440366e
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.index.internal;
1: 
1: import java.util.Set;
1: import java.util.UUID;
1: 
1: import org.apache.cassandra.db.ColumnFamilyStore;
1: import org.apache.cassandra.db.DecoratedKey;
1: import org.apache.cassandra.db.Keyspace;
1: import org.apache.cassandra.db.compaction.CompactionInfo;
1: import org.apache.cassandra.db.compaction.CompactionInterruptedException;
1: import org.apache.cassandra.db.compaction.OperationType;
1: import org.apache.cassandra.index.Index;
1: import org.apache.cassandra.index.SecondaryIndexBuilder;
1: import org.apache.cassandra.io.sstable.ReducingKeyIterator;
1: import org.apache.cassandra.utils.UUIDGen;
1: 
1: /**
1:  * Manages building an entire index from column family data. Runs on to compaction manager.
1:  */
1: public class CollatedViewIndexBuilder extends SecondaryIndexBuilder
1: {
1:     private final ColumnFamilyStore cfs;
1:     private final Set<Index> indexers;
1:     private final ReducingKeyIterator iter;
1:     private final UUID compactionId;
1: 
1:     public CollatedViewIndexBuilder(ColumnFamilyStore cfs, Set<Index> indexers, ReducingKeyIterator iter)
1:     {
1:         this.cfs = cfs;
1:         this.indexers = indexers;
1:         this.iter = iter;
1:         this.compactionId = UUIDGen.getTimeUUID();
1:     }
1: 
1:     public CompactionInfo getCompactionInfo()
1:     {
1:         return new CompactionInfo(cfs.metadata,
1:                 OperationType.INDEX_BUILD,
1:                 iter.getBytesRead(),
1:                 iter.getTotalBytes(),
1:                 compactionId);
1:     }
1: 
1:     public void build()
1:     {
1:         try
1:         {
1:             while (iter.hasNext())
1:             {
1:                 if (isStopRequested())
1:                     throw new CompactionInterruptedException(getCompactionInfo());
1:                 DecoratedKey key = iter.next();
1:                 Keyspace.indexPartition(key, cfs, indexers);
1:             }
1:         }
1:         finally
1:         {
1:             iter.close();
1:         }
1:     }
1: }
============================================================================