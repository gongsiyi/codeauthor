1:2e1e98a: package org.apache.cassandra.stress.settings;
1:9f14856: /*
1:9f14856:  * 
1:9f14856:  * Licensed to the Apache Software Foundation (ASF) under one
1:9f14856:  * or more contributor license agreements.  See the NOTICE file
1:9f14856:  * distributed with this work for additional information
1:9f14856:  * regarding copyright ownership.  The ASF licenses this file
1:9f14856:  * to you under the Apache License, Version 2.0 (the
1:9f14856:  * "License"); you may not use this file except in compliance
1:9f14856:  * with the License.  You may obtain a copy of the License at
1:9f14856:  * 
1:9f14856:  *   http://www.apache.org/licenses/LICENSE-2.0
1:9f14856:  * 
1:9f14856:  * Unless required by applicable law or agreed to in writing,
1:9f14856:  * software distributed under the License is distributed on an
1:9f14856:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:9f14856:  * KIND, either express or implied.  See the License for the
1:9f14856:  * specific language governing permissions and limitations
1:9f14856:  * under the License.
1:9f14856:  * 
1:9f14856:  */
1:9f14856: 
1:2e1e98a: 
1:2e1e98a: import java.io.Serializable;
1:2e1e98a: import java.util.Arrays;
1:2e1e98a: import java.util.List;
1:2e1e98a: import java.util.Map;
1:938faa2: 
1:f42e235: import org.apache.cassandra.stress.util.ResultLogger;
1:2e1e98a: 
1:2e1e98a: public class SettingsPort implements Serializable
1:2e1e98a: {
1:2e1e98a: 
1:2e1e98a:     public final int nativePort;
1:2e1e98a:     public final int thriftPort;
1:0e652e7:     public final int jmxPort;
1:2e1e98a: 
1:2e1e98a:     public SettingsPort(PortOptions options)
1:2e1e98a:     {
1:2e1e98a:         nativePort = Integer.parseInt(options.nativePort.value());
1:2e1e98a:         thriftPort = Integer.parseInt(options.thriftPort.value());
1:0e652e7:         jmxPort = Integer.parseInt(options.jmxPort.value());
1:2e1e98a:     }
1:2e1e98a: 
1:2e1e98a:     // Option Declarations
1:2e1e98a: 
1:2e1e98a:     private static final class PortOptions extends GroupedOptions
1:2e1e98a:     {
1:2e1e98a:         final OptionSimple nativePort = new OptionSimple("native=", "[0-9]+", "9042", "Use this port for the Cassandra native protocol", false);
1:2e1e98a:         final OptionSimple thriftPort = new OptionSimple("thrift=", "[0-9]+", "9160", "Use this port for the thrift protocol", false);
1:0e652e7:         final OptionSimple jmxPort = new OptionSimple("jmx=", "[0-9]+", "7199", "Use this port for retrieving statistics over jmx", false);
1:2e1e98a: 
1:2e1e98a:         @Override
1:2e1e98a:         public List<? extends Option> options()
1:2e1e98a:         {
1:bb8cc62:             return Arrays.asList(nativePort, thriftPort, jmxPort);
1:2e1e98a:         }
1:2e1e98a:     }
1:2e1e98a: 
1:2e1e98a:     // CLI Utility Methods
1:f42e235:     public void printSettings(ResultLogger out)
1:938faa2:     {
1:938faa2:         out.printf("  Native Port: %d%n", nativePort);
1:938faa2:         out.printf("  Thrift Port: %d%n", thriftPort);
1:cbc7925:         out.printf("  JMX Port: %d%n", jmxPort);
1:938faa2:     }
1:938faa2: 
1:2e1e98a: 
1:2e1e98a:     public static SettingsPort get(Map<String, String[]> clArgs)
1:2e1e98a:     {
1:2e1e98a:         String[] params = clArgs.remove("-port");
1:2e1e98a:         if (params == null)
1:2e1e98a:         {
1:2e1e98a:             return new SettingsPort(new PortOptions());
1:2e1e98a:         }
1:2e1e98a:         PortOptions options = GroupedOptions.select(params, new PortOptions());
1:2e1e98a:         if (options == null)
1:2e1e98a:         {
1:2e1e98a:             printHelp();
1:2e1e98a:             System.out.println("Invalid -port options provided, see output for valid options");
1:2e1e98a:             System.exit(1);
1:2e1e98a:         }
1:2e1e98a:         return new SettingsPort(options);
1:2e1e98a:     }
1:2e1e98a: 
1:2e1e98a:     public static void printHelp()
1:2e1e98a:     {
1:2e1e98a:         GroupedOptions.printOptions(System.out, "-port", new PortOptions());
1:2e1e98a:     }
1:2e1e98a: 
1:2e1e98a:     public static Runnable helpPrinter()
1:2e1e98a:     {
1:2e1e98a:         return new Runnable()
1:2e1e98a:         {
1:2e1e98a:             @Override
1:2e1e98a:             public void run()
1:2e1e98a:             {
1:2e1e98a:                 printHelp();
1:2e1e98a:             }
1:2e1e98a:         };
1:2e1e98a:     }
1:2e1e98a: }
1:2e1e98a: 
============================================================================
author:Guy Bolton King
-------------------------------------------------------------------------------
commit:cbc7925
/////////////////////////////////////////////////////////////////////////
1:         out.printf("  JMX Port: %d%n", jmxPort);
author:Christopher Batey
-------------------------------------------------------------------------------
commit:f42e235
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.stress.util.ResultLogger;
/////////////////////////////////////////////////////////////////////////
1:     public void printSettings(ResultLogger out)
author:Ben Slater
-------------------------------------------------------------------------------
commit:938faa2
/////////////////////////////////////////////////////////////////////////
0: import org.apache.cassandra.stress.util.MultiPrintStream;
1: 
/////////////////////////////////////////////////////////////////////////
0:     public void printSettings(MultiPrintStream out)
1:     {
1:         out.printf("  Native Port: %d%n", nativePort);
1:         out.printf("  Thrift Port: %d%n", thriftPort);
0:         out.printf("  JMX Port: %d%n", nativePort);
1:     }
1: 
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:bb8cc62
/////////////////////////////////////////////////////////////////////////
1:             return Arrays.asList(nativePort, thriftPort, jmxPort);
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:0e652e7
/////////////////////////////////////////////////////////////////////////
1:     public final int jmxPort;
1:         jmxPort = Integer.parseInt(options.jmxPort.value());
/////////////////////////////////////////////////////////////////////////
1:         final OptionSimple jmxPort = new OptionSimple("jmx=", "[0-9]+", "7199", "Use this port for retrieving statistics over jmx", false);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:9f14856
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  * 
1:  */
1: 
author:belliottsmith
-------------------------------------------------------------------------------
commit:2e1e98a
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.stress.settings;
1: 
1: import java.io.Serializable;
1: import java.util.Arrays;
1: import java.util.List;
1: import java.util.Map;
1: 
1: public class SettingsPort implements Serializable
1: {
1: 
1:     public final int nativePort;
1:     public final int thriftPort;
1: 
1:     public SettingsPort(PortOptions options)
1:     {
1:         nativePort = Integer.parseInt(options.nativePort.value());
1:         thriftPort = Integer.parseInt(options.thriftPort.value());
1:     }
1: 
1:     // Option Declarations
1: 
1:     private static final class PortOptions extends GroupedOptions
1:     {
1:         final OptionSimple nativePort = new OptionSimple("native=", "[0-9]+", "9042", "Use this port for the Cassandra native protocol", false);
1:         final OptionSimple thriftPort = new OptionSimple("thrift=", "[0-9]+", "9160", "Use this port for the thrift protocol", false);
1: 
1:         @Override
1:         public List<? extends Option> options()
1:         {
0:             return Arrays.asList(nativePort, thriftPort);
1:         }
1:     }
1: 
1:     // CLI Utility Methods
1: 
1:     public static SettingsPort get(Map<String, String[]> clArgs)
1:     {
1:         String[] params = clArgs.remove("-port");
1:         if (params == null)
1:         {
1:             return new SettingsPort(new PortOptions());
1:         }
1:         PortOptions options = GroupedOptions.select(params, new PortOptions());
1:         if (options == null)
1:         {
1:             printHelp();
1:             System.out.println("Invalid -port options provided, see output for valid options");
1:             System.exit(1);
1:         }
1:         return new SettingsPort(options);
1:     }
1: 
1:     public static void printHelp()
1:     {
1:         GroupedOptions.printOptions(System.out, "-port", new PortOptions());
1:     }
1: 
1:     public static Runnable helpPrinter()
1:     {
1:         return new Runnable()
1:         {
1:             @Override
1:             public void run()
1:             {
1:                 printHelp();
1:             }
1:         };
1:     }
1: }
1: 
============================================================================