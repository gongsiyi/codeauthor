1:ba2cead: /*
1:ba2cead:  * Licensed to the Apache Software Foundation (ASF) under one
1:ba2cead:  * or more contributor license agreements.  See the NOTICE file
1:ba2cead:  * distributed with this work for additional information
1:ba2cead:  * regarding copyright ownership.  The ASF licenses this file
1:ba2cead:  * to you under the Apache License, Version 2.0 (the
1:ba2cead:  * "License"); you may not use this file except in compliance
1:ba2cead:  * with the License.  You may obtain a copy of the License at
1:07cdfd0:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
3:07cdfd0:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:ba2cead:  */
1:07cf56f: package org.apache.cassandra.streaming;
1:ba2cead: 
1:ba2cead: import org.slf4j.Logger;
1:ba2cead: import org.slf4j.LoggerFactory;
1:ba2cead: 
1:ba2cead: import org.apache.cassandra.net.IVerbHandler;
1:5d46a01: import org.apache.cassandra.net.MessageIn;
1:5a6f0b8: import org.apache.cassandra.net.MessageOut;
1:ba2cead: import org.apache.cassandra.net.MessagingService;
1:ba2cead: import org.apache.cassandra.service.StorageService;
1:ba2cead: 
1:ba2cead: public class ReplicationFinishedVerbHandler implements IVerbHandler
1:ba2cead: {
1:5a6e2b0:     private static final Logger logger = LoggerFactory.getLogger(ReplicationFinishedVerbHandler.class);
1:ba2cead: 
1:1936648:     public void doVerb(MessageIn msg, int id)
1:ba2cead:     {
1:a06be23:         StorageService.instance.confirmReplication(msg.from);
1:021ec71:         MessageOut response = new MessageOut(MessagingService.Verb.INTERNAL_RESPONSE);
1:ba2cead:         if (logger.isDebugEnabled())
1:db9bc69:             logger.debug("Replying to {}@{}", id, msg.from);
1:a06be23:         MessagingService.instance().sendReply(response, id, msg.from);
1:ba2cead:     }
1:ba2cead: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:db9bc69
/////////////////////////////////////////////////////////////////////////
1:             logger.debug("Replying to {}@{}", id, msg.from);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:1936648
/////////////////////////////////////////////////////////////////////////
1:     public void doVerb(MessageIn msg, int id)
commit:a06be23
/////////////////////////////////////////////////////////////////////////
1:         StorageService.instance.confirmReplication(msg.from);
0:             logger.debug("Replying to " + id + "@" + msg.from);
1:         MessagingService.instance().sendReply(response, id, msg.from);
commit:021ec71
/////////////////////////////////////////////////////////////////////////
1:         MessageOut response = new MessageOut(MessagingService.Verb.INTERNAL_RESPONSE);
commit:5d46a01
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.net.MessageIn;
/////////////////////////////////////////////////////////////////////////
0:     public void doVerb(MessageIn msg, String id)
commit:5a6f0b8
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.net.MessageOut;
/////////////////////////////////////////////////////////////////////////
0:         MessageOut response = new MessageOut(StorageService.Verb.INTERNAL_RESPONSE);
commit:c5ee059
/////////////////////////////////////////////////////////////////////////
0:     public void doVerb(Message msg, String id)
0:             logger.debug("Replying to " + id + "@" + msg.getFrom());
0:         MessagingService.instance().sendReply(response, id, msg.getFrom());
commit:37ec7d3
/////////////////////////////////////////////////////////////////////////
0:         MessagingService.instance().sendOneWay(response, msg.getFrom());
commit:ef25537
/////////////////////////////////////////////////////////////////////////
commit:365f20b
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.lang.ArrayUtils;
/////////////////////////////////////////////////////////////////////////
0:         Message response = msg.getInternalReply(ArrayUtils.EMPTY_BYTE_ARRAY);
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:  *
commit:5a6e2b0
/////////////////////////////////////////////////////////////////////////
1:     private static final Logger logger = LoggerFactory.getLogger(ReplicationFinishedVerbHandler.class);
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1: package org.apache.cassandra.streaming;
author:Gary Dusbabek
-------------------------------------------------------------------------------
commit:6ab2b23
/////////////////////////////////////////////////////////////////////////
0:         Message response = msg.getInternalReply(ArrayUtils.EMPTY_BYTE_ARRAY, msg.getVersion());
commit:ba2cead
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.streaming;
1: /*
0:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
0:  * 
0:  *   http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  * 
1:  */
1: 
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: import org.apache.cassandra.net.IVerbHandler;
0: import org.apache.cassandra.net.Message;
1: import org.apache.cassandra.net.MessagingService;
1: import org.apache.cassandra.service.StorageService;
0: import org.apache.cassandra.utils.FBUtilities;
1: 
1: public class ReplicationFinishedVerbHandler implements IVerbHandler
1: {
0:     private static Logger logger = LoggerFactory.getLogger(ReplicationFinishedVerbHandler.class);
1: 
0:     public void doVerb(Message msg)
1:     {
0:         StorageService.instance.confirmReplication(msg.getFrom());
0:         Message response = msg.getReply(FBUtilities.getLocalAddress(), new byte[]{});
1:         if (logger.isDebugEnabled())
0:             logger.debug("Replying to " + msg.getMessageId() + "@" + msg.getFrom());
0:         MessagingService.instance.sendOneWay(response, msg.getFrom());
1:     }
1: }
============================================================================