1:c059a56: /*
1:c059a56:  * Licensed to the Apache Software Foundation (ASF) under one
1:c059a56:  * or more contributor license agreements.  See the NOTICE file
1:c059a56:  * distributed with this work for additional information
1:c059a56:  * regarding copyright ownership.  The ASF licenses this file
1:c059a56:  * to you under the Apache License, Version 2.0 (the
1:c059a56:  * "License"); you may not use this file except in compliance
1:c059a56:  * with the License.  You may obtain a copy of the License at
1:c059a56:  *
1:c059a56:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c059a56:  *
1:c059a56:  * Unless required by applicable law or agreed to in writing, software
1:c059a56:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c059a56:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c059a56:  * See the License for the specific language governing permissions and
1:c059a56:  * limitations under the License.
1:c059a56:  */
1:c059a56: package org.apache.cassandra.exceptions;
1:c059a56: 
1:39df31a: import java.net.InetAddress;
1:39df31a: import java.util.Map;
1:39df31a: 
1:c059a56: import org.apache.cassandra.db.ConsistencyLevel;
1:c059a56: import org.apache.cassandra.db.WriteType;
1:c059a56: 
1:c059a56: public class WriteFailureException extends RequestFailureException
1:c059a56: {
1:c059a56:     public final WriteType writeType;
1:c059a56: 
1:39df31a:     public WriteFailureException(ConsistencyLevel consistency, int received, int blockFor, WriteType writeType, Map<InetAddress, RequestFailureReason> failureReasonByEndpoint)
1:c059a56:     {
1:39df31a:         super(ExceptionCode.WRITE_FAILURE, consistency, received, blockFor, failureReasonByEndpoint);
1:c059a56:         this.writeType = writeType;
1:c059a56:     }
1:c059a56: }
============================================================================
author:Geoffrey Yu
-------------------------------------------------------------------------------
commit:39df31a
/////////////////////////////////////////////////////////////////////////
1: import java.net.InetAddress;
1: import java.util.Map;
1: 
/////////////////////////////////////////////////////////////////////////
1:     public WriteFailureException(ConsistencyLevel consistency, int received, int blockFor, WriteType writeType, Map<InetAddress, RequestFailureReason> failureReasonByEndpoint)
1:         super(ExceptionCode.WRITE_FAILURE, consistency, received, blockFor, failureReasonByEndpoint);
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:c059a56
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.exceptions;
1: 
1: import org.apache.cassandra.db.ConsistencyLevel;
1: import org.apache.cassandra.db.WriteType;
1: 
1: public class WriteFailureException extends RequestFailureException
1: {
1:     public final WriteType writeType;
1: 
0:     public WriteFailureException(ConsistencyLevel consistency, int received, int failures, int blockFor, WriteType writeType)
1:     {
0:         super(ExceptionCode.WRITE_FAILURE, consistency, received, failures, blockFor);
1:         this.writeType = writeType;
1:     }
1: }
============================================================================