1:5790b4a: /*
1:5790b4a:  * Licensed to the Apache Software Foundation (ASF) under one
1:5790b4a:  * or more contributor license agreements.  See the NOTICE file
1:5790b4a:  * distributed with this work for additional information
1:5790b4a:  * regarding copyright ownership.  The ASF licenses this file
1:5790b4a:  * to you under the Apache License, Version 2.0 (the
1:5790b4a:  * "License"); you may not use this file except in compliance
1:5790b4a:  * with the License.  You may obtain a copy of the License at
1:5790b4a:  *
1:5790b4a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5790b4a:  *
1:5790b4a:  * Unless required by applicable law or agreed to in writing, software
1:5790b4a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5790b4a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5790b4a:  * See the License for the specific language governing permissions and
1:5790b4a:  * limitations under the License.
1:5790b4a:  */
1:5790b4a: 
1:5790b4a: package org.apache.cassandra.cql3.functions;
1:5790b4a: 
1:5790b4a: import java.util.Set;
1:5790b4a: 
1:5790b4a: /**
1:5790b4a:  * Used by {@link ThreadAwareSecurityManager} to determine whether access-control checks needs to be performed.
1:5790b4a:  */
1:5790b4a: public final class SecurityThreadGroup extends ThreadGroup
1:5790b4a: {
1:5790b4a:     private final Set<String> allowedPackages;
1:3ae01dd:     private final ThreadInitializer threadInitializer;
1:5790b4a: 
1:3ae01dd:     public SecurityThreadGroup(String name, Set<String> allowedPackages, ThreadInitializer threadInitializer)
1:5790b4a:     {
1:5790b4a:         super(name);
1:5790b4a:         this.allowedPackages = allowedPackages;
1:3ae01dd:         this.threadInitializer = threadInitializer;
1:5790b4a:     }
1:5790b4a: 
1:3ae01dd:     public void initializeThread()
1:5790b4a:     {
1:3ae01dd:         threadInitializer.initializeThread();
1:3ae01dd:     }
1:3ae01dd: 
1:3ae01dd:     public boolean isPackageAllowed(String pkg)
1:3ae01dd:     {
1:3ae01dd:         return allowedPackages == null || allowedPackages.contains(pkg);
1:3ae01dd:     }
1:3ae01dd: 
1:3ae01dd:     @FunctionalInterface
1:3ae01dd:     interface ThreadInitializer
1:3ae01dd:     {
1:3ae01dd:         void initializeThread();
1:5790b4a:     }
1:5790b4a: }
============================================================================
author:Robert Stupp
-------------------------------------------------------------------------------
commit:3ae01dd
/////////////////////////////////////////////////////////////////////////
1:     private final ThreadInitializer threadInitializer;
1:     public SecurityThreadGroup(String name, Set<String> allowedPackages, ThreadInitializer threadInitializer)
1:         this.threadInitializer = threadInitializer;
1:     public void initializeThread()
1:         threadInitializer.initializeThread();
1:     }
1: 
1:     public boolean isPackageAllowed(String pkg)
1:     {
1:         return allowedPackages == null || allowedPackages.contains(pkg);
1:     }
1: 
1:     @FunctionalInterface
1:     interface ThreadInitializer
1:     {
1:         void initializeThread();
commit:5790b4a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.cql3.functions;
1: 
1: import java.util.Set;
1: 
1: /**
1:  * Used by {@link ThreadAwareSecurityManager} to determine whether access-control checks needs to be performed.
1:  */
1: public final class SecurityThreadGroup extends ThreadGroup
1: {
1:     private final Set<String> allowedPackages;
1: 
0:     public SecurityThreadGroup(String name, Set<String> allowedPackages)
1:     {
1:         super(name);
1:         this.allowedPackages = allowedPackages;
1:     }
1: 
0:     public Set<String> getAllowedPackages()
1:     {
0:         return allowedPackages;
1:     }
1: }
============================================================================