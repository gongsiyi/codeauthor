1:debb15e: /*
1:debb15e:  * Licensed to the Apache Software Foundation (ASF) under one
1:debb15e:  * or more contributor license agreements.  See the NOTICE file
1:debb15e:  * distributed with this work for additional information
1:debb15e:  * regarding copyright ownership.  The ASF licenses this file
1:debb15e:  * to you under the Apache License, Version 2.0 (the
1:debb15e:  * "License"); you may not use this file except in compliance
1:debb15e:  * with the License.  You may obtain a copy of the License at
1:debb15e:  *
1:debb15e:  *     http://www.apache.org/licenses/LICENSE-2.0
1:debb15e:  *
1:debb15e:  * Unless required by applicable law or agreed to in writing, software
1:debb15e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:debb15e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:debb15e:  * See the License for the specific language governing permissions and
1:debb15e:  * limitations under the License.
1:debb15e:  */
1:debb15e: package org.apache.cassandra.io;
1:debb15e: 
1:debb15e: import java.io.File;
1:debb15e: import java.io.IOError;
1:debb15e: 
1:debb15e: public abstract class FSError extends IOError
1:debb15e: {
1:debb15e:     public final File path;
1:debb15e: 
1:debb15e:     public FSError(Throwable cause, File path)
1:debb15e:     {
1:debb15e:         super(cause);
1:debb15e:         this.path = path;
1:debb15e:     }
1:debb15e: 
1:debb15e:     /**
1:debb15e:      * Unwraps the Throwable cause chain looking for an FSError instance
1:debb15e:      * @param top the top-level Throwable to unwrap
1:debb15e:      * @return FSError if found any, null otherwise
1:debb15e:      */
1:debb15e:     public static FSError findNested(Throwable top)
1:debb15e:     {
1:debb15e:         for (Throwable t = top; t != null; t = t.getCause())
1:debb15e:         {
1:debb15e:             if (t instanceof FSError)
1:debb15e:                 return (FSError) t;
1:debb15e:         }
1:debb15e: 
1:debb15e:         return null;
1:debb15e:     }
1:debb15e: }
============================================================================
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:debb15e
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.io;
1: 
1: import java.io.File;
1: import java.io.IOError;
1: 
1: public abstract class FSError extends IOError
1: {
1:     public final File path;
1: 
1:     public FSError(Throwable cause, File path)
1:     {
1:         super(cause);
1:         this.path = path;
1:     }
1: 
1:     /**
1:      * Unwraps the Throwable cause chain looking for an FSError instance
1:      * @param top the top-level Throwable to unwrap
1:      * @return FSError if found any, null otherwise
1:      */
1:     public static FSError findNested(Throwable top)
1:     {
1:         for (Throwable t = top; t != null; t = t.getCause())
1:         {
1:             if (t instanceof FSError)
1:                 return (FSError) t;
1:         }
1: 
1:         return null;
1:     }
1: }
============================================================================