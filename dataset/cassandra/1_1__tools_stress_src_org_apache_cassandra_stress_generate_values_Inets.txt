1:7536429: /*
1:7536429:  *
1:7536429:  * Licensed to the Apache Software Foundation (ASF) under one
1:7536429:  * or more contributor license agreements.  See the NOTICE file
1:7536429:  * distributed with this work for additional information
1:7536429:  * regarding copyright ownership.  The ASF licenses this file
1:7536429:  * to you under the Apache License, Version 2.0 (the
1:7536429:  * "License"); you may not use this file except in compliance
1:7536429:  * with the License.  You may obtain a copy of the License at
1:7536429:  *
1:7536429:  *   http://www.apache.org/licenses/LICENSE-2.0
1:7536429:  *
1:7536429:  * Unless required by applicable law or agreed to in writing,
1:7536429:  * software distributed under the License is distributed on an
1:7536429:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:7536429:  * KIND, either express or implied.  See the License for the
1:7536429:  * specific language governing permissions and limitations
1:7536429:  * under the License.
1:7536429:  *
1:7536429:  */
1:7536429: package org.apache.cassandra.stress.generate.values;
1:7536429: 
1:7536429: import java.net.InetAddress;
1:7536429: import java.net.UnknownHostException;
1:7536429: 
1:7536429: import org.apache.cassandra.db.marshal.InetAddressType;
1:7536429: 
1:7536429: 
1:7536429: public class Inets extends Generator<InetAddress>
1:7536429: {
1:7536429:     final byte[] buf;
1:7536429:     public Inets(String name, GeneratorConfig config)
1:7536429:     {
1:0580fb2:         super(InetAddressType.instance, config, name, InetAddress.class);
1:7536429:         buf = new byte[4];
1:7536429:     }
1:7536429: 
1:7536429:     @Override
1:7536429:     public InetAddress generate()
1:7536429:     {
1:7536429:         int val = (int) identityDistribution.next();
1:7536429: 
1:7536429:         buf[0] = (byte)(val >>> 24);
1:7536429:         buf[1] = (byte)(val >>> 16);
1:7536429:         buf[2] = (byte)(val >>> 8);
1:7536429:         buf[3] = (byte)val;
1:7536429: 
1:7536429:         try
1:7536429:         {
1:7536429:             return InetAddress.getByAddress(buf);
1:7536429:         }
1:7536429:         catch (UnknownHostException e)
1:7536429:         {
1:7536429:             throw new RuntimeException(e);
1:7536429:         }
1:7536429:     }
1:7536429: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:0580fb2
/////////////////////////////////////////////////////////////////////////
1:         super(InetAddressType.instance, config, name, InetAddress.class);
commit:7536429
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  *
1:  */
1: package org.apache.cassandra.stress.generate.values;
1: 
1: import java.net.InetAddress;
1: import java.net.UnknownHostException;
1: 
1: import org.apache.cassandra.db.marshal.InetAddressType;
1: 
1: 
1: public class Inets extends Generator<InetAddress>
1: {
1:     final byte[] buf;
1:     public Inets(String name, GeneratorConfig config)
1:     {
0:         super(InetAddressType.instance, config, name);
1:         buf = new byte[4];
1:     }
1: 
1:     @Override
1:     public InetAddress generate()
1:     {
1:         int val = (int) identityDistribution.next();
1: 
1:         buf[0] = (byte)(val >>> 24);
1:         buf[1] = (byte)(val >>> 16);
1:         buf[2] = (byte)(val >>> 8);
1:         buf[3] = (byte)val;
1: 
1:         try
1:         {
1:             return InetAddress.getByAddress(buf);
1:         }
1:         catch (UnknownHostException e)
1:         {
1:             throw new RuntimeException(e);
1:         }
1:     }
1: }
============================================================================