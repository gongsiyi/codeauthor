1:4adb981: /*
1:4adb981:  * Licensed to the Apache Software Foundation (ASF) under one
1:4adb981:  * or more contributor license agreements.  See the NOTICE file
1:4adb981:  * distributed with this work for additional information
1:4adb981:  * regarding copyright ownership.  The ASF licenses this file
1:4adb981:  * to you under the Apache License, Version 2.0 (the
1:4adb981:  * "License"); you may not use this file except in compliance
1:4adb981:  * with the License.  You may obtain a copy of the License at
1:4adb981:  *
1:4adb981:  *     http://www.apache.org/licenses/LICENSE-2.0
1:4adb981:  *
1:4adb981:  * Unless required by applicable law or agreed to in writing, software
1:4adb981:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4adb981:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4adb981:  * See the License for the specific language governing permissions and
1:4adb981:  * limitations under the License.
1:4adb981:  */
1:4adb981: package org.apache.cassandra.utils.progress.jmx;
1:4adb981: 
1:4adb981: import java.util.HashMap;
1:4adb981: import java.util.Map;
1:4adb981: import java.util.concurrent.atomic.AtomicLong;
1:4adb981: import javax.management.Notification;
1:4adb981: import javax.management.NotificationBroadcasterSupport;
1:4adb981: 
1:4adb981: import org.apache.cassandra.utils.progress.ProgressEvent;
1:4adb981: import org.apache.cassandra.utils.progress.ProgressListener;
1:4adb981: 
1:4adb981: /**
1:4adb981:  * ProgressListener that translates ProgressEvent to JMX Notification message.
1:4adb981:  */
1:4adb981: public class JMXProgressSupport implements ProgressListener
1:4adb981: {
1:4adb981:     private final AtomicLong notificationSerialNumber = new AtomicLong();
1:4adb981: 
1:4adb981:     private final NotificationBroadcasterSupport broadcaster;
1:4adb981: 
1:4adb981:     public JMXProgressSupport(NotificationBroadcasterSupport broadcaster)
1:4adb981:     {
1:4adb981:         this.broadcaster = broadcaster;
1:4adb981:     }
1:4adb981: 
1:4adb981:     @Override
1:4adb981:     public void progress(String tag, ProgressEvent event)
1:4adb981:     {
1:4adb981:         Notification notification = new Notification("progress",
1:4adb981:                                                      tag,
1:4adb981:                                                      notificationSerialNumber.getAndIncrement(),
1:4adb981:                                                      System.currentTimeMillis(),
1:4adb981:                                                      event.getMessage());
1:4adb981:         Map<String, Integer> userData = new HashMap<>();
1:4adb981:         userData.put("type", event.getType().ordinal());
1:4adb981:         userData.put("progressCount", event.getProgressCount());
1:4adb981:         userData.put("total", event.getTotal());
1:4adb981:         notification.setUserData(userData);
1:4adb981:         broadcaster.sendNotification(notification);
1:4adb981:     }
1:4adb981: }
============================================================================
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:4adb981
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.utils.progress.jmx;
1: 
1: import java.util.HashMap;
1: import java.util.Map;
1: import java.util.concurrent.atomic.AtomicLong;
1: import javax.management.Notification;
1: import javax.management.NotificationBroadcasterSupport;
1: 
1: import org.apache.cassandra.utils.progress.ProgressEvent;
1: import org.apache.cassandra.utils.progress.ProgressListener;
1: 
1: /**
1:  * ProgressListener that translates ProgressEvent to JMX Notification message.
1:  */
1: public class JMXProgressSupport implements ProgressListener
1: {
1:     private final AtomicLong notificationSerialNumber = new AtomicLong();
1: 
1:     private final NotificationBroadcasterSupport broadcaster;
1: 
1:     public JMXProgressSupport(NotificationBroadcasterSupport broadcaster)
1:     {
1:         this.broadcaster = broadcaster;
1:     }
1: 
1:     @Override
1:     public void progress(String tag, ProgressEvent event)
1:     {
1:         Notification notification = new Notification("progress",
1:                                                      tag,
1:                                                      notificationSerialNumber.getAndIncrement(),
1:                                                      System.currentTimeMillis(),
1:                                                      event.getMessage());
1:         Map<String, Integer> userData = new HashMap<>();
1:         userData.put("type", event.getType().ordinal());
1:         userData.put("progressCount", event.getProgressCount());
1:         userData.put("total", event.getTotal());
1:         notification.setUserData(userData);
1:         broadcaster.sendNotification(notification);
1:     }
1: }
============================================================================