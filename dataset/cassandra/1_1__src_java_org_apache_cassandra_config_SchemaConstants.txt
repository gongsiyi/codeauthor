1:9797511: /*
1:9797511:  * Licensed to the Apache Software Foundation (ASF) under one
1:9797511:  * or more contributor license agreements.  See the NOTICE file
1:9797511:  * distributed with this work for additional information
1:9797511:  * regarding copyright ownership.  The ASF licenses this file
1:9797511:  * to you under the Apache License, Version 2.0 (the
1:9797511:  * "License"); you may not use this file except in compliance
1:9797511:  * with the License.  You may obtain a copy of the License at
1:9797511:  *
1:9797511:  *     http://www.apache.org/licenses/LICENSE-2.0
1:9797511:  *
1:9797511:  * Unless required by applicable law or agreed to in writing, software
1:9797511:  * distributed under the License is distributed on an "AS IS" BASIS,
1:9797511:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:9797511:  * See the License for the specific language governing permissions and
1:9797511:  * limitations under the License.
1:9797511:  */
1:9797511: 
1:9797511: package org.apache.cassandra.config;
1:9797511: 
1:9797511: import java.security.MessageDigest;
1:9797511: import java.security.NoSuchAlgorithmException;
1:9797511: import java.util.Set;
1:9797511: import java.util.UUID;
1:9797511: 
1:9797511: import com.google.common.collect.ImmutableSet;
1:9797511: 
1:9797511: public final class SchemaConstants
1:9797511: {
1:9797511:     public static final String SYSTEM_KEYSPACE_NAME = "system";
1:9797511:     public static final String SCHEMA_KEYSPACE_NAME = "system_schema";
1:9797511: 
1:9797511:     public static final String TRACE_KEYSPACE_NAME = "system_traces";
1:9797511:     public static final String AUTH_KEYSPACE_NAME = "system_auth";
1:9797511:     public static final String DISTRIBUTED_KEYSPACE_NAME = "system_distributed";
1:9797511: 
1:9797511:     /* system keyspace names (the ones with LocalStrategy replication strategy) */
1:9797511:     public static final Set<String> SYSTEM_KEYSPACE_NAMES = ImmutableSet.of(SYSTEM_KEYSPACE_NAME, SCHEMA_KEYSPACE_NAME);
1:9797511: 
1:9797511:     /* replicate system keyspace names (the ones with a "true" replication strategy) */
1:9797511:     public static final Set<String> REPLICATED_SYSTEM_KEYSPACE_NAMES = ImmutableSet.of(TRACE_KEYSPACE_NAME,
1:9797511:                                                                                        AUTH_KEYSPACE_NAME,
1:9797511:                                                                                        DISTRIBUTED_KEYSPACE_NAME);
1:9797511:     /**
1:9797511:      * longest permissible KS or CF name.  Our main concern is that filename not be more than 255 characters;
1:9797511:      * the filename will contain both the KS and CF names. Since non-schema-name components only take up
1:9797511:      * ~64 characters, we could allow longer names than this, but on Windows, the entire path should be not greater than
1:9797511:      * 255 characters, so a lower limit here helps avoid problems.  See CASSANDRA-4110.
1:9797511:      */
1:9797511:     public static final int NAME_LENGTH = 48;
1:9797511: 
1:9797511:     // 59adb24e-f3cd-3e02-97f0-5b395827453f
1:9797511:     public static final UUID emptyVersion;
1:9797511: 
1:9797511:     static
1:9797511:     {
1:9797511:         try
1:9797511:         {
1:9797511:             emptyVersion = UUID.nameUUIDFromBytes(MessageDigest.getInstance("MD5").digest());
1:9797511:         }
1:9797511:         catch (NoSuchAlgorithmException e)
1:9797511:         {
1:9797511:             throw new AssertionError();
1:9797511:         }
1:9797511:     }
1:9797511: 
1:9797511:     /**
1:9797511:      * @return whether or not the keyspace is a really system one (w/ LocalStrategy, unmodifiable, hardcoded)
1:9797511:      */
1:9797511:     public static boolean isSystemKeyspace(String keyspaceName)
1:9797511:     {
1:9797511:         return SYSTEM_KEYSPACE_NAMES.contains(keyspaceName.toLowerCase());
1:9797511:     }
1:9797511: }
============================================================================
author:Robert Stupp
-------------------------------------------------------------------------------
commit:9797511
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.config;
1: 
1: import java.security.MessageDigest;
1: import java.security.NoSuchAlgorithmException;
1: import java.util.Set;
1: import java.util.UUID;
1: 
1: import com.google.common.collect.ImmutableSet;
1: 
1: public final class SchemaConstants
1: {
1:     public static final String SYSTEM_KEYSPACE_NAME = "system";
1:     public static final String SCHEMA_KEYSPACE_NAME = "system_schema";
1: 
1:     public static final String TRACE_KEYSPACE_NAME = "system_traces";
1:     public static final String AUTH_KEYSPACE_NAME = "system_auth";
1:     public static final String DISTRIBUTED_KEYSPACE_NAME = "system_distributed";
1: 
1:     /* system keyspace names (the ones with LocalStrategy replication strategy) */
1:     public static final Set<String> SYSTEM_KEYSPACE_NAMES = ImmutableSet.of(SYSTEM_KEYSPACE_NAME, SCHEMA_KEYSPACE_NAME);
1: 
1:     /* replicate system keyspace names (the ones with a "true" replication strategy) */
1:     public static final Set<String> REPLICATED_SYSTEM_KEYSPACE_NAMES = ImmutableSet.of(TRACE_KEYSPACE_NAME,
1:                                                                                        AUTH_KEYSPACE_NAME,
1:                                                                                        DISTRIBUTED_KEYSPACE_NAME);
1:     /**
1:      * longest permissible KS or CF name.  Our main concern is that filename not be more than 255 characters;
1:      * the filename will contain both the KS and CF names. Since non-schema-name components only take up
1:      * ~64 characters, we could allow longer names than this, but on Windows, the entire path should be not greater than
1:      * 255 characters, so a lower limit here helps avoid problems.  See CASSANDRA-4110.
1:      */
1:     public static final int NAME_LENGTH = 48;
1: 
1:     // 59adb24e-f3cd-3e02-97f0-5b395827453f
1:     public static final UUID emptyVersion;
1: 
1:     static
1:     {
1:         try
1:         {
1:             emptyVersion = UUID.nameUUIDFromBytes(MessageDigest.getInstance("MD5").digest());
1:         }
1:         catch (NoSuchAlgorithmException e)
1:         {
1:             throw new AssertionError();
1:         }
1:     }
1: 
1:     /**
1:      * @return whether or not the keyspace is a really system one (w/ LocalStrategy, unmodifiable, hardcoded)
1:      */
1:     public static boolean isSystemKeyspace(String keyspaceName)
1:     {
1:         return SYSTEM_KEYSPACE_NAMES.contains(keyspaceName.toLowerCase());
1:     }
1: }
============================================================================