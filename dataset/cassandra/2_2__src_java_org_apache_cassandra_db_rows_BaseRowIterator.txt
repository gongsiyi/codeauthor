1:6094974: /*
1:6094974: * Licensed to the Apache Software Foundation (ASF) under one
1:6094974: * or more contributor license agreements.  See the NOTICE file
1:6094974: * distributed with this work for additional information
1:6094974: * regarding copyright ownership.  The ASF licenses this file
1:6094974: * to you under the Apache License, Version 2.0 (the
1:6094974: * "License"); you may not use this file except in compliance
1:6094974: * with the License.  You may obtain a copy of the License at
1:6094974: *
1:6094974: *    http://www.apache.org/licenses/LICENSE-2.0
1:6094974: *
1:6094974: * Unless required by applicable law or agreed to in writing,
1:6094974: * software distributed under the License is distributed on an
1:6094974: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:6094974: * KIND, either express or implied.  See the License for the
1:6094974: * specific language governing permissions and limitations
1:6094974: * under the License.
1:6094974: */
1:6094974: package org.apache.cassandra.db.rows;
1:6094974: 
1:6094974: import org.apache.cassandra.config.CFMetaData;
1:6094974: import org.apache.cassandra.db.DecoratedKey;
1:6094974: import org.apache.cassandra.db.PartitionColumns;
1:6094974: import org.apache.cassandra.utils.CloseableIterator;
1:6094974: 
1:6094974: /**
1:6094974:  * A common interface for Row and Unfiltered, that permits sharing of the (majority) common
1:6094974:  * methods and functionality
1:6094974:  */
1:6094974: public interface BaseRowIterator<U extends Unfiltered> extends CloseableIterator<U>
1:6094974: {
1:6094974:     /**
1:6094974:      * The metadata for the table this iterator on.
1:6094974:      */
1:6094974:     public CFMetaData metadata();
1:6094974: 
1:6094974:     /**
1:6094974:      * Whether or not the rows returned by this iterator are in reversed
1:6094974:      * clustering order.
1:6094974:      */
1:6094974:     public boolean isReverseOrder();
1:6094974: 
1:6094974:     /**
1:6094974:      * A subset of the columns for the (static and regular) rows returned by this iterator.
1:6094974:      * Every row returned by this iterator must guarantee that it has only those columns.
1:6094974:      */
1:6094974:     public PartitionColumns columns();
1:6094974: 
1:6094974:     /**
1:6094974:      * The partition key of the partition this in an iterator over.
1:6094974:      */
1:6094974:     public DecoratedKey partitionKey();
1:6094974: 
1:6094974:     /**
1:6094974:      * The static part corresponding to this partition (this can be an empty
1:979e559:      * row but cannot be {@code null}).
1:6094974:      */
1:6094974:     public Row staticRow();
1:6094974: 
1:6094974:     /**
1:6094974:      * Returns whether the provided iterator has no data.
1:6094974:      */
1:6094974:     public boolean isEmpty();
1:6094974: }
============================================================================
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:979e559
/////////////////////////////////////////////////////////////////////////
1:      * row but cannot be {@code null}).
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:6094974
/////////////////////////////////////////////////////////////////////////
1: /*
1: * Licensed to the Apache Software Foundation (ASF) under one
1: * or more contributor license agreements.  See the NOTICE file
1: * distributed with this work for additional information
1: * regarding copyright ownership.  The ASF licenses this file
1: * to you under the Apache License, Version 2.0 (the
1: * "License"); you may not use this file except in compliance
1: * with the License.  You may obtain a copy of the License at
1: *
1: *    http://www.apache.org/licenses/LICENSE-2.0
1: *
1: * Unless required by applicable law or agreed to in writing,
1: * software distributed under the License is distributed on an
1: * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1: * KIND, either express or implied.  See the License for the
1: * specific language governing permissions and limitations
1: * under the License.
1: */
1: package org.apache.cassandra.db.rows;
1: 
1: import org.apache.cassandra.config.CFMetaData;
1: import org.apache.cassandra.db.DecoratedKey;
1: import org.apache.cassandra.db.PartitionColumns;
1: import org.apache.cassandra.utils.CloseableIterator;
1: 
1: /**
1:  * A common interface for Row and Unfiltered, that permits sharing of the (majority) common
1:  * methods and functionality
1:  */
1: public interface BaseRowIterator<U extends Unfiltered> extends CloseableIterator<U>
1: {
1:     /**
1:      * The metadata for the table this iterator on.
1:      */
1:     public CFMetaData metadata();
1: 
1:     /**
1:      * Whether or not the rows returned by this iterator are in reversed
1:      * clustering order.
1:      */
1:     public boolean isReverseOrder();
1: 
1:     /**
1:      * A subset of the columns for the (static and regular) rows returned by this iterator.
1:      * Every row returned by this iterator must guarantee that it has only those columns.
1:      */
1:     public PartitionColumns columns();
1: 
1:     /**
1:      * The partition key of the partition this in an iterator over.
1:      */
1:     public DecoratedKey partitionKey();
1: 
1:     /**
1:      * The static part corresponding to this partition (this can be an empty
0:      * row).
1:      */
1:     public Row staticRow();
1: 
1:     /**
1:      * Returns whether the provided iterator has no data.
1:      */
1:     public boolean isEmpty();
1: }
============================================================================