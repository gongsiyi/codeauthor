1:7536429: package org.apache.cassandra.stress.generate;
1:9f14856: /*
1:9f14856:  * 
1:9f14856:  * Licensed to the Apache Software Foundation (ASF) under one
1:9f14856:  * or more contributor license agreements.  See the NOTICE file
1:9f14856:  * distributed with this work for additional information
1:9f14856:  * regarding copyright ownership.  The ASF licenses this file
1:9f14856:  * to you under the Apache License, Version 2.0 (the
1:9f14856:  * "License"); you may not use this file except in compliance
1:9f14856:  * with the License.  You may obtain a copy of the License at
1:9f14856:  * 
1:9f14856:  *   http://www.apache.org/licenses/LICENSE-2.0
1:9f14856:  * 
1:9f14856:  * Unless required by applicable law or agreed to in writing,
1:9f14856:  * software distributed under the License is distributed on an
1:9f14856:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:9f14856:  * KIND, either express or implied.  See the License for the
1:9f14856:  * specific language governing permissions and limitations
1:9f14856:  * under the License.
1:9f14856:  * 
1:9f14856:  */
1:9f14856: 
1:2e1e98a: 
1:7536429: import java.io.Serializable;
1:7536429: 
1:7536429: public abstract class Distribution implements Serializable
1:2e1e98a: {
1:2e1e98a: 
1:2e1e98a:     public abstract long next();
1:7536429:     public abstract double nextDouble();
1:2e1e98a:     public abstract long inverseCumProb(double cumProb);
1:7536429:     public abstract void setSeed(long seed);
1:2e1e98a: 
1:2e1e98a:     public long maxValue()
1:2e1e98a:     {
1:2e1e98a:         return inverseCumProb(1d);
2:2e1e98a:     }
1:2e1e98a: 
1:2e1e98a:     public long minValue()
1:2e1e98a:     {
1:2e1e98a:         return inverseCumProb(0d);
1:9f14856:     }
1:2e1e98a: 
1:7536429:     // approximation of the average; slightly costly to calculate, so should not be invoked frequently
1:7536429:     public long average()
1:7536429:     {
1:7536429:         double sum = 0;
1:7536429:         int count = 0;
1:7536429:         for (float d = 0 ; d <= 1.0d ; d += 0.02d)
1:7536429:         {
1:7536429:             sum += inverseCumProb(d);
1:7536429:             count += 1;
1:7536429:         }
1:7536429:         return (long) (sum / count);
1:7536429:     }
1:7536429: 
1:2e1e98a: }
============================================================================
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:7536429
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.stress.generate;
/////////////////////////////////////////////////////////////////////////
1: import java.io.Serializable;
1: 
1: public abstract class Distribution implements Serializable
1:     public abstract double nextDouble();
1:     public abstract void setSeed(long seed);
/////////////////////////////////////////////////////////////////////////
1:     // approximation of the average; slightly costly to calculate, so should not be invoked frequently
1:     public long average()
1:     {
1:         double sum = 0;
1:         int count = 0;
1:         for (float d = 0 ; d <= 1.0d ; d += 0.02d)
1:         {
1:             sum += inverseCumProb(d);
1:             count += 1;
1:         }
1:         return (long) (sum / count);
1:     }
1: 
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:9f14856
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  * 
1:  */
1: 
/////////////////////////////////////////////////////////////////////////
1: }
author:belliottsmith
-------------------------------------------------------------------------------
commit:2e1e98a
/////////////////////////////////////////////////////////////////////////
0: package org.apache.cassandra.stress.generatedata;
1: 
0: public abstract class Distribution
1: {
1: 
1:     public abstract long next();
1:     public abstract long inverseCumProb(double cumProb);
1: 
1:     public long maxValue()
1:     {
1:         return inverseCumProb(1d);
1:     }
1: 
1:     public long minValue()
1:     {
1:         return inverseCumProb(0d);
1:     }
1: 
1: }
============================================================================