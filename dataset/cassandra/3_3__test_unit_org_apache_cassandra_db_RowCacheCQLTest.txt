1:0947fb8: /*
1:0947fb8:  * Licensed to the Apache Software Foundation (ASF) under one
1:0947fb8:  * or more contributor license agreements.  See the NOTICE file
1:0947fb8:  * distributed with this work for additional information
1:0947fb8:  * regarding copyright ownership.  The ASF licenses this file
1:0947fb8:  * to you under the Apache License, Version 2.0 (the
1:0947fb8:  * "License"); you may not use this file except in compliance
1:0947fb8:  * with the License.  You may obtain a copy of the License at
1:0947fb8:  *
1:0947fb8:  *     http://www.apache.org/licenses/LICENSE-2.0
1:0947fb8:  *
1:0947fb8:  * Unless required by applicable law or agreed to in writing, software
1:0947fb8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0947fb8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0947fb8:  * See the License for the specific language governing permissions and
1:0947fb8:  * limitations under the License.
1:0947fb8:  */
1:0947fb8: package org.apache.cassandra.db;
1:0947fb8: 
1:0947fb8: import org.junit.Test;
1:0947fb8: 
1:0947fb8: import org.apache.cassandra.cql3.CQLTester;
1:0947fb8: import org.apache.cassandra.cql3.UntypedResultSet;
1:0947fb8: import org.apache.cassandra.service.CacheService;
1:0947fb8: import static org.junit.Assert.assertEquals;
1:0947fb8: 
1:0947fb8: public class RowCacheCQLTest extends CQLTester
1:0947fb8: {
1:0947fb8:     @Test
1:0947fb8:     public void test7636() throws Throwable
1:0947fb8:     {
1:0947fb8:         CacheService.instance.setRowCacheCapacityInMB(1);
1:b31845c:         createTable("CREATE TABLE %s (p1 bigint, c1 int, v int, PRIMARY KEY (p1, c1)) WITH caching = { 'keys': 'NONE', 'rows_per_partition': 'ALL' }");
1:a991b64:         execute("INSERT INTO %s (p1, c1, v) VALUES (?, ?, ?)", 123L, 10, 12);
1:a991b64:         assertEmpty(execute("SELECT * FROM %s WHERE p1 = ? and c1 > ?", 123L, 1000));
1:a991b64:         UntypedResultSet res = execute("SELECT * FROM %s WHERE p1 = ? and c1 > ?", 123L, 0);
1:0947fb8:         assertEquals(1, res.size());
1:a991b64:         assertEmpty(execute("SELECT * FROM %s WHERE p1 = ? and c1 > ?", 123L, 1000));
1:0947fb8:     }
1:0947fb8: }
============================================================================
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:b31845c
/////////////////////////////////////////////////////////////////////////
1:         createTable("CREATE TABLE %s (p1 bigint, c1 int, v int, PRIMARY KEY (p1, c1)) WITH caching = { 'keys': 'NONE', 'rows_per_partition': 'ALL' }");
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:a991b64
/////////////////////////////////////////////////////////////////////////
0:         createTable("CREATE TABLE %s (p1 bigint, c1 int, v int, PRIMARY KEY (p1, c1)) WITH caching = '{\"keys\":\"NONE\", \"rows_per_partition\":\"ALL\"}'");
1:         execute("INSERT INTO %s (p1, c1, v) VALUES (?, ?, ?)", 123L, 10, 12);
1:         assertEmpty(execute("SELECT * FROM %s WHERE p1 = ? and c1 > ?", 123L, 1000));
1:         UntypedResultSet res = execute("SELECT * FROM %s WHERE p1 = ? and c1 > ?", 123L, 0);
1:         assertEmpty(execute("SELECT * FROM %s WHERE p1 = ? and c1 > ?", 123L, 1000));
author:Brandon Williams
-------------------------------------------------------------------------------
commit:0947fb8
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.db;
1: 
1: import org.junit.Test;
1: 
1: import org.apache.cassandra.cql3.CQLTester;
1: import org.apache.cassandra.cql3.UntypedResultSet;
1: import org.apache.cassandra.service.CacheService;
1: import static org.junit.Assert.assertEquals;
1: 
1: public class RowCacheCQLTest extends CQLTester
1: {
1:     @Test
1:     public void test7636() throws Throwable
1:     {
1:         CacheService.instance.setRowCacheCapacityInMB(1);
0:         createTable("CREATE TABLE %s (p1 bigint, c1 int, PRIMARY KEY (p1, c1)) WITH caching = '{\"keys\":\"NONE\", \"rows_per_partition\":\"ALL\"}'");
0:         execute("INSERT INTO %s (p1, c1) VALUES (123, 10)");
0:         assertEmpty(execute("SELECT * FROM %s WHERE p1=123 and c1 > 1000"));
0:         UntypedResultSet res = execute("SELECT * FROM %s WHERE p1=123 and c1 > 0");
1:         assertEquals(1, res.size());
0:         assertEmpty(execute("SELECT * FROM %s WHERE p1=123 and c1 > 1000"));
1:     }
1: }
============================================================================