1:84eeb28: /*
1:84eeb28:  * Licensed to the Apache Software Foundation (ASF) under one
1:84eeb28:  * or more contributor license agreements.  See the NOTICE file
1:84eeb28:  * distributed with this work for additional information
1:84eeb28:  * regarding copyright ownership.  The ASF licenses this file
1:84eeb28:  * to you under the Apache License, Version 2.0 (the
1:84eeb28:  * "License"); you may not use this file except in compliance
1:84eeb28:  * with the License.  You may obtain a copy of the License at
3:84eeb28:  *
1:07cf56f:  *     http://www.apache.org/licenses/LICENSE-2.0
1:84eeb28:  *
1:07cf56f:  * Unless required by applicable law or agreed to in writing, software
1:07cf56f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:07cf56f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:07cf56f:  * See the License for the specific language governing permissions and
1:07cf56f:  * limitations under the License.
1:84eeb28:  */
1:84eeb28: package org.apache.cassandra.io;
2:84eeb28: 
1:84eeb28: import java.io.IOException;
1:84eeb28: 
1:03f72ac: import org.apache.cassandra.io.util.DataInputPlus;
1:75508ec: import org.apache.cassandra.io.util.DataOutputPlus;
1:75508ec: 
1:84eeb28: public interface IVersionedSerializer<T>
1:84eeb28: {
1:84eeb28:     /**
1:84eeb28:      * Serialize the specified type into the specified DataOutputStream instance.
1:75508ec:      *
1:84eeb28:      * @param t type that needs to be serialized
1:587cb58:      * @param out DataOutput into which serialization needs to happen.
1:587cb58:      * @param version protocol version
1:f44110c:      * @throws java.io.IOException if serialization fails
1:84eeb28:      */
1:75508ec:     public void serialize(T t, DataOutputPlus out, int version) throws IOException;
1:84eeb28: 
1:84eeb28:     /**
1:84eeb28:      * Deserialize into the specified DataInputStream instance.
1:587cb58:      * @param in DataInput from which deserialization needs to happen.
1:587cb58:      * @param version protocol version
1:84eeb28:      * @return the type that was deserialized
1:f44110c:      * @throws IOException if deserialization fails
1:84eeb28:      */
1:03f72ac:     public T deserialize(DataInputPlus in, int version) throws IOException;
1:84eeb28: 
1:587cb58:     /**
1:587cb58:      * Calculate serialized size of object without actually serializing.
1:587cb58:      * @param t object to calculate serialized size
1:587cb58:      * @param version protocol version
1:587cb58:      * @return serialized size of object t
1:587cb58:      */
1:84eeb28:     public long serializedSize(T t, int version);
1:84eeb28: }
============================================================================
author:Ariel Weisberg
-------------------------------------------------------------------------------
commit:03f72ac
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataInputPlus;
/////////////////////////////////////////////////////////////////////////
1:     public T deserialize(DataInputPlus in, int version) throws IOException;
author:Dave Brosius
-------------------------------------------------------------------------------
commit:f44110c
/////////////////////////////////////////////////////////////////////////
1:      * @throws java.io.IOException if serialization fails
/////////////////////////////////////////////////////////////////////////
1:      * @throws IOException if deserialization fails
author:belliottsmith
-------------------------------------------------------------------------------
commit:75508ec
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.io.util.DataOutputPlus;
1: 
1:      *
1:     public void serialize(T t, DataOutputPlus out, int version) throws IOException;
author:Yuki Morishita
-------------------------------------------------------------------------------
commit:587cb58
/////////////////////////////////////////////////////////////////////////
1:      * @param out DataOutput into which serialization needs to happen.
1:      * @param version protocol version
1:      * @param in DataInput from which deserialization needs to happen.
1:      * @param version protocol version
0:      * @throws IOException
1:     /**
1:      * Calculate serialized size of object without actually serializing.
1:      * @param t object to calculate serialized size
1:      * @param version protocol version
1:      * @return serialized size of object t
1:      */
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:5a6f0b8
/////////////////////////////////////////////////////////////////////////
0:     public void serialize(T t, DataOutput out, int version) throws IOException;
/////////////////////////////////////////////////////////////////////////
0:     public T deserialize(DataInput in, int version) throws IOException;
commit:84eeb28
/////////////////////////////////////////////////////////////////////////
1: package org.apache.cassandra.io;
1: /*
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * 
0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * 
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  * 
1:  */
1: 
1: 
0: import java.io.DataInput;
0: import java.io.DataOutput;
1: import java.io.IOException;
1: 
1: public interface IVersionedSerializer<T>
1: {
1:     /**
1:      * Serialize the specified type into the specified DataOutputStream instance.
1:      * @param t type that needs to be serialized
0:      * @param dos DataOutput into which serialization needs to happen.
0:      * @throws java.io.IOException
1:      */
0:     public void serialize(T t, DataOutput dos, int version) throws IOException;
1: 
1:     /**
1:      * Deserialize into the specified DataInputStream instance.
0:      * @param dis DataInput from which deserialization needs to happen.
0:      * @throws IOException
1:      * @return the type that was deserialized
1:      */
0:     public T deserialize(DataInput dis, int version) throws IOException;
1: 
1:     public long serializedSize(T t, int version);
1: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
0:  *
/////////////////////////////////////////////////////////////////////////
0:  *
0:  *
0:  *
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
0: package org.apache.cassandra.io;
============================================================================