1:5420b7a: /*
1:5420b7a:  * Licensed to the Apache Software Foundation (ASF) under one
1:5420b7a:  * or more contributor license agreements.  See the NOTICE file
1:5420b7a:  * distributed with this work for additional information
1:5420b7a:  * regarding copyright ownership.  The ASF licenses this file
1:5420b7a:  * to you under the Apache License, Version 2.0 (the
1:5420b7a:  * "License"); you may not use this file except in compliance
1:5420b7a:  * with the License.  You may obtain a copy of the License at
1:5420b7a:  *
1:5420b7a:  *     http://www.apache.org/licenses/LICENSE-2.0
1:5420b7a:  *
1:5420b7a:  * Unless required by applicable law or agreed to in writing, software
1:5420b7a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5420b7a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5420b7a:  * See the License for the specific language governing permissions and
1:5420b7a:  * limitations under the License.
1:5420b7a:  */
1:5420b7a: package org.apache.cassandra.metrics;
2:5420b7a: 
1:5420b7a: class ThreadPoolMetricNameFactory implements MetricNameFactory
1:5420b7a: {
1:5420b7a:     private final String type;
1:5420b7a:     private final String path;
1:5420b7a:     private final String poolName;
1:5420b7a: 
1:5420b7a:     ThreadPoolMetricNameFactory(String type, String path, String poolName)
1:5420b7a:     {
1:5420b7a:         this.type = type;
1:5420b7a:         this.path = path;
1:5420b7a:         this.poolName = poolName;
1:5420b7a:     }
1:5420b7a: 
1:8896a70:     public CassandraMetricsRegistry.MetricName createMetricName(String metricName)
1:5420b7a:     {
1:5420b7a:         String groupName = ThreadPoolMetrics.class.getPackage().getName();
1:5420b7a:         StringBuilder mbeanName = new StringBuilder();
1:5420b7a:         mbeanName.append(groupName).append(":");
1:5420b7a:         mbeanName.append("type=").append(type);
1:5420b7a:         mbeanName.append(",path=").append(path);
1:5420b7a:         mbeanName.append(",scope=").append(poolName);
1:5420b7a:         mbeanName.append(",name=").append(metricName);
1:5420b7a: 
1:8896a70:         return new CassandraMetricsRegistry.MetricName(groupName, type, metricName, path + "." + poolName, mbeanName.toString());
1:5420b7a:     }
1:5420b7a: }
============================================================================
author:T Jake Luciani
-------------------------------------------------------------------------------
commit:8896a70
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public CassandraMetricsRegistry.MetricName createMetricName(String metricName)
/////////////////////////////////////////////////////////////////////////
1:         return new CassandraMetricsRegistry.MetricName(groupName, type, metricName, path + "." + poolName, mbeanName.toString());
author:belliottsmith
-------------------------------------------------------------------------------
commit:5420b7a
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.metrics;
1: 
0: import com.yammer.metrics.core.MetricName;
1: 
1: class ThreadPoolMetricNameFactory implements MetricNameFactory
1: {
1:     private final String type;
1:     private final String path;
1:     private final String poolName;
1: 
1:     ThreadPoolMetricNameFactory(String type, String path, String poolName)
1:     {
1:         this.type = type;
1:         this.path = path;
1:         this.poolName = poolName;
1:     }
1: 
0:     public MetricName createMetricName(String metricName)
1:     {
1:         String groupName = ThreadPoolMetrics.class.getPackage().getName();
1:         StringBuilder mbeanName = new StringBuilder();
1:         mbeanName.append(groupName).append(":");
1:         mbeanName.append("type=").append(type);
1:         mbeanName.append(",path=").append(path);
1:         mbeanName.append(",scope=").append(poolName);
1:         mbeanName.append(",name=").append(metricName);
1: 
0:         return new MetricName(groupName, type, metricName, path + "." + poolName, mbeanName.toString());
1:     }
1: }
============================================================================