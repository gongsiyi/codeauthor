1:96d41f0: /*
1:96d41f0:  * 
1:96d41f0:  * Licensed to the Apache Software Foundation (ASF) under one
1:96d41f0:  * or more contributor license agreements.  See the NOTICE file
1:96d41f0:  * distributed with this work for additional information
1:96d41f0:  * regarding copyright ownership.  The ASF licenses this file
1:96d41f0:  * to you under the Apache License, Version 2.0 (the
1:96d41f0:  * "License"); you may not use this file except in compliance
1:96d41f0:  * with the License.  You may obtain a copy of the License at
1:96d41f0:  * 
1:96d41f0:  *   http://www.apache.org/licenses/LICENSE-2.0
1:96d41f0:  * 
1:96d41f0:  * Unless required by applicable law or agreed to in writing,
1:96d41f0:  * software distributed under the License is distributed on an
1:96d41f0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:96d41f0:  * KIND, either express or implied.  See the License for the
1:96d41f0:  * specific language governing permissions and limitations
1:96d41f0:  * under the License.
1:96d41f0:  * 
1:96d41f0:  */
1:96d41f0: package org.apache.cassandra.metrics;
1:96d41f0: 
1:96d41f0: import java.net.InetAddress;
1:96d41f0: import java.util.Map;
1:96d41f0: import java.util.UUID;
1:96d41f0: 
1:9797511: import org.junit.BeforeClass;
1:96d41f0: import org.junit.Test;
1:96d41f0: 
1:96d41f0: import com.google.common.collect.Iterators;
1:96d41f0: 
1:96d41f0: import org.apache.cassandra.config.DatabaseDescriptor;
1:96d41f0: import org.apache.cassandra.cql3.UntypedResultSet;
1:96d41f0: import org.apache.cassandra.db.SystemKeyspace;
1:96d41f0: import org.apache.cassandra.db.marshal.Int32Type;
1:96d41f0: import org.apache.cassandra.db.marshal.UUIDType;
1:96d41f0: import org.apache.cassandra.hints.HintsService;
1:96d41f0: 
1:96d41f0: import static org.junit.Assert.assertEquals;
1:96d41f0: import static org.apache.cassandra.cql3.QueryProcessor.executeInternal;
1:96d41f0: 
1:96d41f0: public class HintedHandOffMetricsTest
1:96d41f0: {
1:9797511:     @BeforeClass
1:9797511:     public static void initDD()
1:9797511:     {
1:9797511:         DatabaseDescriptor.daemonInitialization();
1:9797511:     }
1:9797511: 
1:96d41f0:     @Test
1:96d41f0:     public void testHintsMetrics() throws Exception
1:96d41f0:     {
1:96d41f0:         DatabaseDescriptor.getHintsDirectory().mkdirs();
1:96d41f0: 
1:96d41f0:         for (int i = 0; i < 99; i++)
1:96d41f0:             HintsService.instance.metrics.incrPastWindow(InetAddress.getLocalHost());
1:96d41f0:         HintsService.instance.metrics.log();
1:96d41f0: 
1:96d41f0:         UntypedResultSet rows = executeInternal("SELECT hints_dropped FROM system." + SystemKeyspace.PEER_EVENTS);
1:96d41f0:         Map<UUID, Integer> returned = rows.one().getMap("hints_dropped", UUIDType.instance, Int32Type.instance);
1:96d41f0:         assertEquals(Iterators.getLast(returned.values().iterator()).intValue(), 99);
1:96d41f0:     }
1:96d41f0: }
============================================================================
author:Robert Stupp
-------------------------------------------------------------------------------
commit:9797511
/////////////////////////////////////////////////////////////////////////
1: import org.junit.BeforeClass;
/////////////////////////////////////////////////////////////////////////
1:     @BeforeClass
1:     public static void initDD()
1:     {
1:         DatabaseDescriptor.daemonInitialization();
1:     }
1: 
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:96d41f0
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * 
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  * 
1:  *   http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing,
1:  * software distributed under the License is distributed on an
1:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
1:  * KIND, either express or implied.  See the License for the
1:  * specific language governing permissions and limitations
1:  * under the License.
1:  * 
1:  */
1: package org.apache.cassandra.metrics;
1: 
1: import java.net.InetAddress;
1: import java.util.Map;
1: import java.util.UUID;
1: 
1: import org.junit.Test;
1: 
1: import com.google.common.collect.Iterators;
1: 
1: import org.apache.cassandra.config.DatabaseDescriptor;
1: import org.apache.cassandra.cql3.UntypedResultSet;
1: import org.apache.cassandra.db.SystemKeyspace;
1: import org.apache.cassandra.db.marshal.Int32Type;
1: import org.apache.cassandra.db.marshal.UUIDType;
1: import org.apache.cassandra.hints.HintsService;
1: 
1: import static org.junit.Assert.assertEquals;
1: import static org.apache.cassandra.cql3.QueryProcessor.executeInternal;
1: 
1: public class HintedHandOffMetricsTest
1: {
1:     @Test
1:     public void testHintsMetrics() throws Exception
1:     {
1:         DatabaseDescriptor.getHintsDirectory().mkdirs();
1: 
1:         for (int i = 0; i < 99; i++)
1:             HintsService.instance.metrics.incrPastWindow(InetAddress.getLocalHost());
1:         HintsService.instance.metrics.log();
1: 
1:         UntypedResultSet rows = executeInternal("SELECT hints_dropped FROM system." + SystemKeyspace.PEER_EVENTS);
1:         Map<UUID, Integer> returned = rows.one().getMap("hints_dropped", UUIDType.instance, Int32Type.instance);
1:         assertEquals(Iterators.getLast(returned.values().iterator()).intValue(), 99);
1:     }
1: }
============================================================================