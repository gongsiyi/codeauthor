1:6d3a3ee: /*
1:6d3a3ee:  * Licensed to the Apache Software Foundation (ASF) under one
1:6d3a3ee:  * or more contributor license agreements.  See the NOTICE file
1:6d3a3ee:  * distributed with this work for additional information
1:6d3a3ee:  * regarding copyright ownership.  The ASF licenses this file
1:6d3a3ee:  * to you under the Apache License, Version 2.0 (the
1:6d3a3ee:  * "License"); you may not use this file except in compliance
1:6d3a3ee:  * with the License.  You may obtain a copy of the License at
1:6d3a3ee:  *
1:6d3a3ee:  *     http://www.apache.org/licenses/LICENSE-2.0
1:6d3a3ee:  *
1:6d3a3ee:  * Unless required by applicable law or agreed to in writing, software
1:6d3a3ee:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6d3a3ee:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6d3a3ee:  * See the License for the specific language governing permissions and
1:6d3a3ee:  * limitations under the License.
2:6d3a3ee:  */
1:6d3a3ee: package org.apache.cassandra.transport;
1:904137c: 
1:3a2faf9: import org.apache.cassandra.exceptions.ExceptionCode;
1:3a2faf9: import org.apache.cassandra.exceptions.TransportException;
2:3a2faf9: 
1:904137c: /**
1:3a2faf9:  * Exceptions thrown when a client didn't respect the protocol.
1:904137c:  */
1:3a2faf9: public class ProtocolException extends RuntimeException implements TransportException
1:6d3a3ee: {
1:e0adc16:     private final ProtocolVersion forcedProtocolVersion;
1:3a2faf9: 
1:6d3a3ee:     public ProtocolException(String msg)
1:6d3a3ee:     {
1:904137c:         this(msg, null);
1:904137c:     }
1:904137c: 
1:e0adc16:     public ProtocolException(String msg, ProtocolVersion forcedProtocolVersion)
1:904137c:     {
1:6d3a3ee:         super(msg);
1:e0adc16:         this.forcedProtocolVersion = forcedProtocolVersion;
1:6d3a3ee:     }
1:d9322a1: 
1:3a2faf9:     public ExceptionCode code()
1:3a2faf9:     {
1:3a2faf9:         return ExceptionCode.PROTOCOL_ERROR;
1:904137c:     }
1:904137c: 
1:e0adc16:     public ProtocolVersion getForcedProtocolVersion()
1:904137c:     {
1:e0adc16:         return forcedProtocolVersion;
1:3a2faf9:     }
1:6d3a3ee: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e0adc16
/////////////////////////////////////////////////////////////////////////
1:     private final ProtocolVersion forcedProtocolVersion;
1:     public ProtocolException(String msg, ProtocolVersion forcedProtocolVersion)
1:         this.forcedProtocolVersion = forcedProtocolVersion;
/////////////////////////////////////////////////////////////////////////
1:     public ProtocolVersion getForcedProtocolVersion()
1:         return forcedProtocolVersion;
author:Alex Petrov
-------------------------------------------------------------------------------
commit:d9322a1
/////////////////////////////////////////////////////////////////////////
0:         assert attemptedLowProtocolVersion == null || attemptedLowProtocolVersion < Server.MIN_SUPPORTED_VERSION;
1: 
author:Tyler Hobbs
-------------------------------------------------------------------------------
commit:904137c
/////////////////////////////////////////////////////////////////////////
0:     private final Integer attemptedLowProtocolVersion;
1: 
1:         this(msg, null);
1:     }
1: 
0:     public ProtocolException(String msg, Integer attemptedLowProtocolVersion)
1:     {
0:         this.attemptedLowProtocolVersion = attemptedLowProtocolVersion;
1: 
1:     /**
0:      * If the ProtocolException is due to a connection being made with a protocol version that is lower
0:      * than Server.MIN_SUPPORTED_VERSION, this will return that unsupported protocol version.  Otherwise,
0:      * null is returned.
1:      */
0:     public Integer getAttemptedLowProtocolVersion()
1:     {
0:         return attemptedLowProtocolVersion;
1:     }
author:Dave Brosius
-------------------------------------------------------------------------------
commit:95f94a4
/////////////////////////////////////////////////////////////////////////
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:3a2faf9
/////////////////////////////////////////////////////////////////////////
0: import java.nio.ByteBuffer;
1: 
1: import org.apache.cassandra.exceptions.ExceptionCode;
1: import org.apache.cassandra.exceptions.TransportException;
1: 
1:  * Exceptions thrown when a client didn't respect the protocol.
1: public class ProtocolException extends RuntimeException implements TransportException
1: 
1:     public ExceptionCode code()
1:     {
1:         return ExceptionCode.PROTOCOL_ERROR;
1:     }
commit:6d3a3ee
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.transport;
0: 
0: /**
0:  * Exceptions thrown when a client didn't not respect the protocol.
1:  */
0: public class ProtocolException extends RuntimeException
1: {
1:     public ProtocolException(String msg)
1:     {
1:         super(msg);
1:     }
1: }
============================================================================