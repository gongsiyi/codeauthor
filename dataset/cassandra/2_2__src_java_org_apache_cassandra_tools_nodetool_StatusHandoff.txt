1:c5a8190: /*
1:c5a8190:  * Licensed to the Apache Software Foundation (ASF) under one
1:c5a8190:  * or more contributor license agreements.  See the NOTICE file
1:c5a8190:  * distributed with this work for additional information
1:c5a8190:  * regarding copyright ownership.  The ASF licenses this file
1:c5a8190:  * to you under the Apache License, Version 2.0 (the
1:c5a8190:  * "License"); you may not use this file except in compliance
1:c5a8190:  * with the License.  You may obtain a copy of the License at
1:c5a8190:  *
1:c5a8190:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c5a8190:  *
1:c5a8190:  * Unless required by applicable law or agreed to in writing, software
1:c5a8190:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c5a8190:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c5a8190:  * See the License for the specific language governing permissions and
1:c5a8190:  * limitations under the License.
1:c5a8190:  */
1:c5a8190: package org.apache.cassandra.tools.nodetool;
1:c5a8190: 
1:c5a8190: import io.airlift.command.Command;
1:c5a8190: 
1:c5a8190: import org.apache.cassandra.tools.NodeProbe;
1:c5a8190: import org.apache.cassandra.tools.NodeTool.NodeToolCmd;
1:c5a8190: 
1:c5a8190: @Command(name = "statushandoff", description = "Status of storing future hints on the current node")
1:c5a8190: public class StatusHandoff extends NodeToolCmd
1:c5a8190: {
1:c5a8190:     @Override
1:c5a8190:     public void execute(NodeProbe probe)
1:c5a8190:     {
1:e89d548:         System.out.println(String.format("Hinted handoff is %s",
1:c5a8190:                 probe.isHandoffEnabled()
1:c5a8190:                 ? "running"
1:e89d548:                 : "not running"));
1:e89d548: 
1:e89d548:         for (String dc : probe.getHintedHandoffDisabledDCs())
1:e89d548:             System.out.println(String.format("Data center %s is disabled", dc));
1:c5a8190:     }
1:c5a8190: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e89d548
/////////////////////////////////////////////////////////////////////////
1:         System.out.println(String.format("Hinted handoff is %s",
1:                 : "not running"));
1: 
1:         for (String dc : probe.getHintedHandoffDisabledDCs())
1:             System.out.println(String.format("Data center %s is disabled", dc));
author:Dave Brosius
-------------------------------------------------------------------------------
commit:c5a8190
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.tools.nodetool;
1: 
1: import io.airlift.command.Command;
1: 
1: import org.apache.cassandra.tools.NodeProbe;
1: import org.apache.cassandra.tools.NodeTool.NodeToolCmd;
1: 
1: @Command(name = "statushandoff", description = "Status of storing future hints on the current node")
1: public class StatusHandoff extends NodeToolCmd
1: {
1:     @Override
1:     public void execute(NodeProbe probe)
1:     {
0:         System.out.println(
1:                 probe.isHandoffEnabled()
1:                 ? "running"
0:                 : "not running");
1:     }
1: }
============================================================================