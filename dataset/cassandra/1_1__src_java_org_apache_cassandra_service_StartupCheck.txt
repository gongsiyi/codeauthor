1:194bad2: /*
1:194bad2:  * Licensed to the Apache Software Foundation (ASF) under one
1:194bad2:  * or more contributor license agreements.  See the NOTICE file
1:194bad2:  * distributed with this work for additional information
1:194bad2:  * regarding copyright ownership.  The ASF licenses this file
1:194bad2:  * to you under the Apache License, Version 2.0 (the
1:194bad2:  * "License"); you may not use this file except in compliance
1:194bad2:  * with the License.  You may obtain a copy of the License at
1:194bad2:  *
1:194bad2:  *     http://www.apache.org/licenses/LICENSE-2.0
1:194bad2:  *
1:194bad2:  * Unless required by applicable law or agreed to in writing, software
1:194bad2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:194bad2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:194bad2:  * See the License for the specific language governing permissions and
1:194bad2:  * limitations under the License.
1:194bad2:  */
1:194bad2: package org.apache.cassandra.service;
1:194bad2: 
1:194bad2: import org.apache.cassandra.exceptions.StartupException;
1:194bad2: 
1:194bad2: /**
1:194bad2:  * A test to determine if the system is in a valid state to start up.
1:194bad2:  * Some implementations may not actually halt startup, but provide
1:194bad2:  * information or advice on tuning and non-fatal environmental issues (e.g. like
1:194bad2:  * checking for and warning about suboptimal JVM settings).
1:194bad2:  * Other checks may indicate that they system is not in a correct state to be started.
1:194bad2:  * Examples include inability to load JNA when the cassandra.boot_without_jna option
1:194bad2:  * is not set, missing or unaccessible data directories, unreadable sstables and
1:194bad2:  * misconfiguration of cluster_name in cassandra.yaml.
1:194bad2:  *
1:194bad2:  * The StartupChecks class manages a collection of these tests, which it executes
1:194bad2:  * right at the beginning of the server settup process.
1:194bad2:  */
1:194bad2: public interface StartupCheck
1:194bad2: {
1:194bad2:     /**
1:194bad2:      * Run some test to determine whether the system is safe to be started
1:194bad2:      * In the case where a test determines it is not safe to proceed, the
1:194bad2:      * test should log a message regarding the reason for the failure and
1:194bad2:      * ideally the steps required to remedy the problem.
1:194bad2:      *
1:194bad2:      * @throws org.apache.cassandra.exceptions.StartupException if the test determines
1:194bad2:      * that the environement or system is not in a safe state to startup
1:194bad2:      */
1:194bad2:     void execute() throws StartupException;
1:194bad2: }
============================================================================
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:194bad2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.service;
1: 
1: import org.apache.cassandra.exceptions.StartupException;
1: 
1: /**
1:  * A test to determine if the system is in a valid state to start up.
1:  * Some implementations may not actually halt startup, but provide
1:  * information or advice on tuning and non-fatal environmental issues (e.g. like
1:  * checking for and warning about suboptimal JVM settings).
1:  * Other checks may indicate that they system is not in a correct state to be started.
1:  * Examples include inability to load JNA when the cassandra.boot_without_jna option
1:  * is not set, missing or unaccessible data directories, unreadable sstables and
1:  * misconfiguration of cluster_name in cassandra.yaml.
1:  *
1:  * The StartupChecks class manages a collection of these tests, which it executes
1:  * right at the beginning of the server settup process.
1:  */
1: public interface StartupCheck
1: {
1:     /**
1:      * Run some test to determine whether the system is safe to be started
1:      * In the case where a test determines it is not safe to proceed, the
1:      * test should log a message regarding the reason for the failure and
1:      * ideally the steps required to remedy the problem.
1:      *
1:      * @throws org.apache.cassandra.exceptions.StartupException if the test determines
1:      * that the environement or system is not in a safe state to startup
1:      */
1:     void execute() throws StartupException;
1: }
============================================================================