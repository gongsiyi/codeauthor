1:32c15c2: /*
1:32c15c2:  * Licensed to the Apache Software Foundation (ASF) under one
1:32c15c2:  * or more contributor license agreements.  See the NOTICE file
1:32c15c2:  * distributed with this work for additional information
1:32c15c2:  * regarding copyright ownership.  The ASF licenses this file
1:32c15c2:  * to you under the Apache License, Version 2.0 (the
1:32c15c2:  * "License"); you may not use this file except in compliance
1:32c15c2:  * with the License.  You may obtain a copy of the License at
1:32c15c2:  *
1:32c15c2:  *     http://www.apache.org/licenses/LICENSE-2.0
1:32c15c2:  *
1:32c15c2:  * Unless required by applicable law or agreed to in writing, software
1:32c15c2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:32c15c2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:32c15c2:  * See the License for the specific language governing permissions and
1:32c15c2:  * limitations under the License.
1:32c15c2:  */
1:32c15c2: package org.apache.cassandra.cql3.functions;
2:32c15c2: 
1:32c15c2: import java.nio.ByteBuffer;
1:3566843: import java.util.*;
1:32c15c2: 
1:32c15c2: import org.apache.cassandra.db.marshal.UUIDType;
1:32c15c2: import org.apache.cassandra.serializers.UUIDSerializer;
1:e0adc16: import org.apache.cassandra.transport.ProtocolVersion;
1:32c15c2: 
1:32c15c2: public abstract class UuidFcts
2:32c15c2: {
1:3566843:     public static Collection<Function> all()
1:3566843:     {
1:3566843:         return Collections.singleton(uuidFct);
1:3566843:     }
1:3566843: 
1:0cad81a:     public static final Function uuidFct = new NativeScalarFunction("uuid", UUIDType.instance)
1:32c15c2:     {
1:e0adc16:         public ByteBuffer execute(ProtocolVersion protocolVersion, List<ByteBuffer> parameters)
1:32c15c2:         {
1:32c15c2:             return UUIDSerializer.instance.serialize(UUID.randomUUID());
2:32c15c2:         }
1:32c15c2:     };
1:32c15c2: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e0adc16
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.transport.ProtocolVersion;
/////////////////////////////////////////////////////////////////////////
1:         public ByteBuffer execute(ProtocolVersion protocolVersion, List<ByteBuffer> parameters)
author:Aleksey Yeschenko
-------------------------------------------------------------------------------
commit:3566843
/////////////////////////////////////////////////////////////////////////
1: import java.util.*;
1:     public static Collection<Function> all()
1:     {
1:         return Collections.singleton(uuidFct);
1:     }
1: 
author:Carl Yeksigian
-------------------------------------------------------------------------------
commit:b2abcb7
/////////////////////////////////////////////////////////////////////////
commit:32c15c2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3.functions;
1: 
1: import java.nio.ByteBuffer;
0: import java.util.List;
0: import java.util.UUID;
1: 
1: import org.apache.cassandra.db.marshal.UUIDType;
1: import org.apache.cassandra.serializers.UUIDSerializer;
1: 
1: public abstract class UuidFcts
1: {
0:     public static final Function uuidFct = new AbstractFunction("uuid", UUIDType.instance)
1:     {
0:         public ByteBuffer execute(List<ByteBuffer> parameters)
1:         {
1:             return UUIDSerializer.instance.serialize(UUID.randomUUID());
1:         }
1: 
0:         @Override
0:         public boolean isPure()
1:         {
0:             return false;
1:         }
1:     };
1: }
author:Robert Stupp
-------------------------------------------------------------------------------
commit:794d68b
/////////////////////////////////////////////////////////////////////////
0:         public ByteBuffer execute(int protocolVersion, List<ByteBuffer> parameters)
author:Benjamin Lerer
-------------------------------------------------------------------------------
commit:0cad81a
/////////////////////////////////////////////////////////////////////////
1:     public static final Function uuidFct = new NativeScalarFunction("uuid", UUIDType.instance)
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:44fa12e
/////////////////////////////////////////////////////////////////////////
0:     public static final Function uuidFct = new NativeFunction("uuid", UUIDType.instance)
============================================================================