1:c5a8190: /*
1:c5a8190:  * Licensed to the Apache Software Foundation (ASF) under one
1:c5a8190:  * or more contributor license agreements.  See the NOTICE file
1:c5a8190:  * distributed with this work for additional information
1:c5a8190:  * regarding copyright ownership.  The ASF licenses this file
1:c5a8190:  * to you under the Apache License, Version 2.0 (the
1:c5a8190:  * "License"); you may not use this file except in compliance
1:c5a8190:  * with the License.  You may obtain a copy of the License at
1:c5a8190:  *
1:c5a8190:  *     http://www.apache.org/licenses/LICENSE-2.0
1:c5a8190:  *
1:c5a8190:  * Unless required by applicable law or agreed to in writing, software
1:c5a8190:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c5a8190:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c5a8190:  * See the License for the specific language governing permissions and
1:c5a8190:  * limitations under the License.
1:c5a8190:  */
1:c5a8190: package org.apache.cassandra.tools.nodetool;
1:c5a8190: 
1:c5a8190: import static org.apache.commons.lang3.StringUtils.EMPTY;
1:c5a8190: import io.airlift.command.Arguments;
1:c5a8190: import io.airlift.command.Command;
1:c5a8190: 
1:c5a8190: import org.apache.cassandra.tools.NodeProbe;
1:c5a8190: import org.apache.cassandra.tools.NodeTool.NodeToolCmd;
1:c5a8190: 
1:c5a8190: @Command(name = "removenode", description = "Show status of current node removal, force completion of pending removal or remove provided ID")
1:c5a8190: public class RemoveNode extends NodeToolCmd
1:c5a8190: {
1:c5a8190:     @Arguments(title = "remove_operation", usage = "<status>|<force>|<ID>", description = "Show status of current node removal, force completion of pending removal, or remove provided ID", required = true)
1:c5a8190:     private String removeOperation = EMPTY;
1:c5a8190: 
1:c5a8190:     @Override
1:c5a8190:     public void execute(NodeProbe probe)
1:c5a8190:     {
1:c5a8190:         switch (removeOperation)
1:c5a8190:         {
1:c5a8190:             case "status":
1:c5a8190:                 System.out.println("RemovalStatus: " + probe.getRemovalStatus());
1:c5a8190:                 break;
1:c5a8190:             case "force":
1:c5a8190:                 System.out.println("RemovalStatus: " + probe.getRemovalStatus());
1:c5a8190:                 probe.forceRemoveCompletion();
1:c5a8190:                 break;
1:c5a8190:             default:
1:c5a8190:                 probe.removeNode(removeOperation);
1:c5a8190:                 break;
1:c5a8190:         }
1:c5a8190:     }
1:c5a8190: }
============================================================================
author:Dave Brosius
-------------------------------------------------------------------------------
commit:c5a8190
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.tools.nodetool;
1: 
1: import static org.apache.commons.lang3.StringUtils.EMPTY;
1: import io.airlift.command.Arguments;
1: import io.airlift.command.Command;
1: 
1: import org.apache.cassandra.tools.NodeProbe;
1: import org.apache.cassandra.tools.NodeTool.NodeToolCmd;
1: 
1: @Command(name = "removenode", description = "Show status of current node removal, force completion of pending removal or remove provided ID")
1: public class RemoveNode extends NodeToolCmd
1: {
1:     @Arguments(title = "remove_operation", usage = "<status>|<force>|<ID>", description = "Show status of current node removal, force completion of pending removal, or remove provided ID", required = true)
1:     private String removeOperation = EMPTY;
1: 
1:     @Override
1:     public void execute(NodeProbe probe)
1:     {
1:         switch (removeOperation)
1:         {
1:             case "status":
1:                 System.out.println("RemovalStatus: " + probe.getRemovalStatus());
1:                 break;
1:             case "force":
1:                 System.out.println("RemovalStatus: " + probe.getRemovalStatus());
1:                 probe.forceRemoveCompletion();
1:                 break;
1:             default:
1:                 probe.removeNode(removeOperation);
1:                 break;
1:         }
1:     }
1: }
============================================================================