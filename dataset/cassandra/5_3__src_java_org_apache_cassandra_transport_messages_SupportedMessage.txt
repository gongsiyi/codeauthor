1:6d3a3ee: /*
1:6d3a3ee:  * Licensed to the Apache Software Foundation (ASF) under one
1:6d3a3ee:  * or more contributor license agreements.  See the NOTICE file
1:6d3a3ee:  * distributed with this work for additional information
1:6d3a3ee:  * regarding copyright ownership.  The ASF licenses this file
1:6d3a3ee:  * to you under the Apache License, Version 2.0 (the
1:6d3a3ee:  * "License"); you may not use this file except in compliance
1:6d3a3ee:  * with the License.  You may obtain a copy of the License at
1:6d3a3ee:  *
1:6d3a3ee:  *     http://www.apache.org/licenses/LICENSE-2.0
1:6d3a3ee:  *
1:6d3a3ee:  * Unless required by applicable law or agreed to in writing, software
1:6d3a3ee:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6d3a3ee:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6d3a3ee:  * See the License for the specific language governing permissions and
1:6d3a3ee:  * limitations under the License.
1:6d3a3ee:  */
1:6d3a3ee: package org.apache.cassandra.transport.messages;
3:6d3a3ee: 
1:6d3a3ee: import java.util.List;
1:f171179: import java.util.Map;
1:6d3a3ee: 
1:cbf304e: import io.netty.buffer.ByteBuf;
1:6d3a3ee: 
1:6d3a3ee: import org.apache.cassandra.transport.CBUtil;
1:6d3a3ee: import org.apache.cassandra.transport.Message;
1:e0adc16: import org.apache.cassandra.transport.ProtocolVersion;
1:6d3a3ee: 
1:6d3a3ee: /**
1:6d3a3ee:  * Message to indicate that the server is ready to receive requests.
1:6d3a3ee:  */
1:6d3a3ee: public class SupportedMessage extends Message.Response
3:6d3a3ee: {
1:6d3a3ee:     public static final Message.Codec<SupportedMessage> codec = new Message.Codec<SupportedMessage>()
1:6d3a3ee:     {
1:e0adc16:         public SupportedMessage decode(ByteBuf body, ProtocolVersion version)
1:6d3a3ee:         {
1:f171179:             return new SupportedMessage(CBUtil.readStringToStringListMap(body));
3:6d3a3ee:         }
1:6d3a3ee: 
1:e0adc16:         public void encode(SupportedMessage msg, ByteBuf dest, ProtocolVersion version)
1:6d3a3ee:         {
1:f8be23a:             CBUtil.writeStringToStringListMap(msg.supported, dest);
1:f8be23a:         }
1:f8be23a: 
1:e0adc16:         public int encodedSize(SupportedMessage msg, ProtocolVersion version)
1:f8be23a:         {
1:f8be23a:             return CBUtil.sizeOfStringToStringListMap(msg.supported);
1:6d3a3ee:         }
1:6d3a3ee:     };
1:6d3a3ee: 
1:f171179:     public final Map<String, List<String>> supported;
1:6d3a3ee: 
1:f171179:     public SupportedMessage(Map<String, List<String>> supported)
1:6d3a3ee:     {
1:6d3a3ee:         super(Message.Type.SUPPORTED);
1:f171179:         this.supported = supported;
1:6d3a3ee:     }
1:6d3a3ee: 
1:6d3a3ee:     @Override
1:6d3a3ee:     public String toString()
1:6d3a3ee:     {
1:f171179:         return "SUPPORTED " + supported;
1:6d3a3ee:     }
1:6d3a3ee: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:e0adc16
/////////////////////////////////////////////////////////////////////////
1: import org.apache.cassandra.transport.ProtocolVersion;
/////////////////////////////////////////////////////////////////////////
1:         public SupportedMessage decode(ByteBuf body, ProtocolVersion version)
1:         public void encode(SupportedMessage msg, ByteBuf dest, ProtocolVersion version)
1:         public int encodedSize(SupportedMessage msg, ProtocolVersion version)
author:belliottsmith
-------------------------------------------------------------------------------
commit:cbf304e
/////////////////////////////////////////////////////////////////////////
1: import io.netty.buffer.ByteBuf;
/////////////////////////////////////////////////////////////////////////
0:         public SupportedMessage decode(ByteBuf body, int version)
0:         public void encode(SupportedMessage msg, ByteBuf dest, int version)
author:Dave Brosius
-------------------------------------------------------------------------------
commit:02fb218
/////////////////////////////////////////////////////////////////////////
commit:95f94a4
/////////////////////////////////////////////////////////////////////////
commit:f650d3e
/////////////////////////////////////////////////////////////////////////
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:f8be23a
/////////////////////////////////////////////////////////////////////////
0:         public void encode(SupportedMessage msg, ChannelBuffer dest, int version)
1:             CBUtil.writeStringToStringListMap(msg.supported, dest);
1:         }
1: 
0:         public int encodedSize(SupportedMessage msg, int version)
1:         {
1:             return CBUtil.sizeOfStringToStringListMap(msg.supported);
/////////////////////////////////////////////////////////////////////////
commit:5a18e37
/////////////////////////////////////////////////////////////////////////
0:     public ChannelBuffer encode(int version)
0:         return codec.encode(this, version);
commit:e48ff29
/////////////////////////////////////////////////////////////////////////
0:         public ChannelBuffer encode(SupportedMessage msg, int version)
/////////////////////////////////////////////////////////////////////////
0:         return codec.encode(this, getVersion());
commit:f171179
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
/////////////////////////////////////////////////////////////////////////
1:             return new SupportedMessage(CBUtil.readStringToStringListMap(body));
0:             CBUtil.writeStringToStringListMap(cb, msg.supported);
1:     public final Map<String, List<String>> supported;
1:     public SupportedMessage(Map<String, List<String>> supported)
1:         this.supported = supported;
/////////////////////////////////////////////////////////////////////////
1:         return "SUPPORTED " + supported;
commit:6d3a3ee
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.transport.messages;
1: 
0: import java.util.ArrayList;
1: import java.util.List;
1: 
0: import org.jboss.netty.buffer.ChannelBuffer;
0: import org.jboss.netty.buffer.ChannelBuffers;
1: 
1: import org.apache.cassandra.transport.CBUtil;
1: import org.apache.cassandra.transport.Message;
0: import org.apache.cassandra.utils.SemanticVersion;
1: 
1: /**
1:  * Message to indicate that the server is ready to receive requests.
1:  */
1: public class SupportedMessage extends Message.Response
1: {
1:     public static final Message.Codec<SupportedMessage> codec = new Message.Codec<SupportedMessage>()
1:     {
0:         public SupportedMessage decode(ChannelBuffer body)
1:         {
0:             List<String> versions = CBUtil.readStringList(body);
0:             List<String> compressions = CBUtil.readStringList(body);
0:             return new SupportedMessage(versions, compressions);
1:         }
1: 
0:         public ChannelBuffer encode(SupportedMessage msg)
1:         {
0:             ChannelBuffer cb = ChannelBuffers.dynamicBuffer();
0:             CBUtil.writeStringList(cb, msg.cqlVersions);
0:             CBUtil.writeStringList(cb, msg.compressions);
0:             return cb;
1:         }
1:     };
1: 
0:     public final List<String> cqlVersions;
0:     public final List<String> compressions;
1: 
0:     public SupportedMessage()
1:     {
0:         this(new ArrayList<String>(), new ArrayList<String>());
1:     }
1: 
0:     private SupportedMessage(List<String> cqlVersions, List<String> compressions)
1:     {
1:         super(Message.Type.SUPPORTED);
0:         this.cqlVersions = cqlVersions;
0:         this.compressions = compressions;
1:     }
1: 
0:     public ChannelBuffer encode()
1:     {
0:         return codec.encode(this);
1:     }
1: 
1:     @Override
1:     public String toString()
1:     {
0:         return "SUPPORTED versions=" + cqlVersions + " compressions=" + compressions;
1:     }
1: }
author:Marcus Eriksson
-------------------------------------------------------------------------------
commit:bf2ee04
/////////////////////////////////////////////////////////////////////////
0:         public SupportedMessage decode(ChannelBuffer body, int version)
============================================================================