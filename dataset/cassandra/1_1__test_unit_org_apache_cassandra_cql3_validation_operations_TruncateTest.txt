1:4e3555c: /*
1:4e3555c:  * Licensed to the Apache Software Foundation (ASF) under one
1:4e3555c:  * or more contributor license agreements.  See the NOTICE file
1:4e3555c:  * distributed with this work for additional information
1:4e3555c:  * regarding copyright ownership.  The ASF licenses this file
1:4e3555c:  * to you under the Apache License, Version 2.0 (the
1:4e3555c:  * "License"); you may not use this file except in compliance
1:4e3555c:  * with the License.  You may obtain a copy of the License at
1:4e3555c:  *
1:4e3555c:  *     http://www.apache.org/licenses/LICENSE-2.0
1:4e3555c:  *
1:4e3555c:  * Unless required by applicable law or agreed to in writing, software
1:4e3555c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4e3555c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4e3555c:  * See the License for the specific language governing permissions and
1:4e3555c:  * limitations under the License.
1:4e3555c:  */
1:4e3555c: package org.apache.cassandra.cql3.validation.operations;
1:4e3555c: 
1:4e3555c: import org.junit.Test;
1:4e3555c: 
1:4e3555c: import org.apache.cassandra.cql3.CQLTester;
1:4e3555c: 
1:4e3555c: public class TruncateTest extends CQLTester
1:4e3555c: {
1:4e3555c:     @Test
1:4e3555c:     public void testTruncate() throws Throwable
1:4e3555c:     {
1:4e3555c:         for (String table : new String[] { "", "TABLE" })
1:4e3555c:         {
1:4e3555c:             createTable("CREATE TABLE %s (a int, b int, c int, PRIMARY KEY(a, b))");
1:4e3555c: 
1:4e3555c:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 0, 0, 0);
1:4e3555c:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 0, 1, 1);
1:4e3555c: 
1:4e3555c:             flush();
1:4e3555c: 
1:4e3555c:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 1, 0, 2);
1:4e3555c:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 1, 1, 3);
1:4e3555c: 
1:4e3555c:             assertRows(execute("SELECT * FROM %s"), row(1, 0, 2), row(1, 1, 3), row(0, 0, 0), row(0, 1, 1));
1:4e3555c: 
1:4e3555c:             execute("TRUNCATE " + table + " %s");
1:4e3555c: 
1:4e3555c:             assertEmpty(execute("SELECT * FROM %s"));
1:4e3555c:         }
1:4e3555c:     }
1:4e3555c: }
============================================================================
author:blerer
-------------------------------------------------------------------------------
commit:4e3555c
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.cql3.validation.operations;
1: 
1: import org.junit.Test;
1: 
1: import org.apache.cassandra.cql3.CQLTester;
1: 
1: public class TruncateTest extends CQLTester
1: {
1:     @Test
1:     public void testTruncate() throws Throwable
1:     {
1:         for (String table : new String[] { "", "TABLE" })
1:         {
1:             createTable("CREATE TABLE %s (a int, b int, c int, PRIMARY KEY(a, b))");
1: 
1:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 0, 0, 0);
1:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 0, 1, 1);
1: 
1:             flush();
1: 
1:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 1, 0, 2);
1:             execute("INSERT INTO %s (a, b, c) VALUES (?, ?, ?)", 1, 1, 3);
1: 
1:             assertRows(execute("SELECT * FROM %s"), row(1, 0, 2), row(1, 1, 3), row(0, 0, 0), row(0, 1, 1));
1: 
1:             execute("TRUNCATE " + table + " %s");
1: 
1:             assertEmpty(execute("SELECT * FROM %s"));
1:         }
1:     }
1: }
============================================================================