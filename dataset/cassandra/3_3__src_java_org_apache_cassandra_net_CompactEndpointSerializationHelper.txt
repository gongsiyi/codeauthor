1:07cf56f: /*
1:2e1b1a5:  * Licensed to the Apache Software Foundation (ASF) under one
1:2e1b1a5:  * or more contributor license agreements.  See the NOTICE file
1:2e1b1a5:  * distributed with this work for additional information
1:2e1b1a5:  * regarding copyright ownership.  The ASF licenses this file
1:2e1b1a5:  * to you under the Apache License, Version 2.0 (the
1:2e1b1a5:  * "License"); you may not use this file except in compliance
1:2e1b1a5:  * with the License.  You may obtain a copy of the License at
1:2e1b1a5:  *
1:2e1b1a5:  *     http://www.apache.org/licenses/LICENSE-2.0
1:2e1b1a5:  *
1:2e1b1a5:  * Unless required by applicable law or agreed to in writing, software
1:2e1b1a5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2e1b1a5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2e1b1a5:  * See the License for the specific language governing permissions and
1:2e1b1a5:  * limitations under the License.
1:2e1b1a5:  */
1:2e1b1a5: package org.apache.cassandra.net;
1:2e1b1a5: 
1:84eeb28: import java.io.*;
1:c715b6d: import java.net.Inet4Address;
1:c715b6d: import java.net.Inet6Address;
1:2e1b1a5: import java.net.InetAddress;
1:2e1b1a5: 
1:2e1b1a5: public class CompactEndpointSerializationHelper
1:2e1b1a5: {
1:60d9c7f:     public static void serialize(InetAddress endpoint, DataOutput out) throws IOException
1:2e1b1a5:     {
1:2e1b1a5:         byte[] buf = endpoint.getAddress();
1:60d9c7f:         out.writeByte(buf.length);
1:60d9c7f:         out.write(buf);
1:2e1b1a5:     }
1:2e1b1a5: 
1:60d9c7f:     public static InetAddress deserialize(DataInput in) throws IOException
1:2e1b1a5:     {
1:60d9c7f:         byte[] bytes = new byte[in.readByte()];
1:60d9c7f:         in.readFully(bytes, 0, bytes.length);
1:2e1b1a5:         return InetAddress.getByAddress(bytes);
1:2e1b1a5:     }
1:2e1b1a5: 
1:c715b6d:     public static int serializedSize(InetAddress from)
1:07cdfd0:     {
1:c715b6d:         if (from instanceof Inet4Address)
1:c715b6d:             return 1 + 4;
1:c715b6d:         assert from instanceof Inet6Address;
1:c715b6d:         return 1 + 16;
1:2e1b1a5:     }
1:c715b6d: }
============================================================================
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:60d9c7f
/////////////////////////////////////////////////////////////////////////
1:     public static void serialize(InetAddress endpoint, DataOutput out) throws IOException
1:         out.writeByte(buf.length);
1:         out.write(buf);
1:     public static InetAddress deserialize(DataInput in) throws IOException
1:         byte[] bytes = new byte[in.readByte()];
1:         in.readFully(bytes, 0, bytes.length);
commit:84eeb28
/////////////////////////////////////////////////////////////////////////
1: import java.io.*;
0:     public static void serialize(InetAddress endpoint, DataOutput dos) throws IOException
0:     public static InetAddress deserialize(DataInput dis) throws IOException
commit:e98eb1c
/////////////////////////////////////////////////////////////////////////
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
0: import java.io.IOException;
commit:2e1b1a5
/////////////////////////////////////////////////////////////////////////
0: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.cassandra.net;
1: 
0: import java.io.*;
1: import java.net.InetAddress;
1: 
1: public class CompactEndpointSerializationHelper
1: {
0:     public static void serialize(InetAddress endpoint, DataOutputStream dos) throws IOException
1:     {
1:         byte[] buf = endpoint.getAddress();
0:         dos.writeByte(buf.length);
0:         dos.write(buf);
1:     }
1:     
0:     public static InetAddress deserialize(DataInputStream dis) throws IOException
1:     {     
0:         byte[] bytes = new byte[dis.readByte()];
0:         dis.readFully(bytes, 0, bytes.length);
1:         return InetAddress.getByAddress(bytes);
1:     }
1: }
author:Sylvain Lebresne
-------------------------------------------------------------------------------
commit:07cdfd0
/////////////////////////////////////////////////////////////////////////
0: 
1:     {
commit:2fd3268
/////////////////////////////////////////////////////////////////////////
0: 
0:     {
commit:07cf56f
/////////////////////////////////////////////////////////////////////////
1: /*
/////////////////////////////////////////////////////////////////////////
author:Brandon Williams
-------------------------------------------------------------------------------
commit:c715b6d
/////////////////////////////////////////////////////////////////////////
1: import java.net.Inet4Address;
1: import java.net.Inet6Address;
/////////////////////////////////////////////////////////////////////////
0: 
1:     public static int serializedSize(InetAddress from)
0:     {
1:         if (from instanceof Inet4Address)
1:             return 1 + 4;
1:         assert from instanceof Inet6Address;
1:         return 1 + 16;
1:     }
============================================================================