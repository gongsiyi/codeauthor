1:22e18f5: /*
1:22e18f5:  * Licensed to the Apache Software Foundation (ASF) under one
1:22e18f5:  * or more contributor license agreements.  See the NOTICE file
1:22e18f5:  * distributed with this work for additional information
1:22e18f5:  * regarding copyright ownership.  The ASF licenses this file
1:22e18f5:  * to you under the Apache License, Version 2.0 (the
1:22e18f5:  * "License"); you may not use this file except in compliance
1:22e18f5:  * with the License.  You may obtain a copy of the License at
1:22e18f5:  *
1:22e18f5:  *     http://www.apache.org/licenses/LICENSE-2.0
1:22e18f5:  *
1:22e18f5:  * Unless required by applicable law or agreed to in writing, software
1:22e18f5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:22e18f5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:22e18f5:  * See the License for the specific language governing permissions and
1:22e18f5:  * limitations under the License.
1:22e18f5:  */
1:22e18f5: package org.apache.cassandra.db.commitlog;
1:22e18f5: 
1:22e18f5: import org.apache.cassandra.config.DatabaseDescriptor;
1:22e18f5: 
1:22e18f5: class BatchCommitLogService extends AbstractCommitLogService
1:22e18f5: {
1:22e18f5:     public BatchCommitLogService(CommitLog commitLog)
1:22e18f5:     {
1:22e18f5:         super(commitLog, "COMMIT-LOG-WRITER", (int) DatabaseDescriptor.getCommitLogSyncBatchWindow());
1:22e18f5:     }
1:22e18f5: 
1:22e18f5:     protected void maybeWaitForSync(CommitLogSegment.Allocation alloc)
1:22e18f5:     {
1:22e18f5:         // wait until record has been safely persisted to disk
1:22e18f5:         pending.incrementAndGet();
1:e8907c1:         requestExtraSync();
1:44f8254:         alloc.awaitDiskSync(commitLog.metrics.waitingOnCommit);
1:22e18f5:         pending.decrementAndGet();
1:22e18f5:     }
1:22e18f5: }
============================================================================
author:Branimir Lambov
-------------------------------------------------------------------------------
commit:e8907c1
/////////////////////////////////////////////////////////////////////////
1:         requestExtraSync();
author:Benedict Elliott Smith
-------------------------------------------------------------------------------
commit:6fd41ab
commit:98a08eb
/////////////////////////////////////////////////////////////////////////
0:         haveWork.release();
author:blambov
-------------------------------------------------------------------------------
commit:44f8254
/////////////////////////////////////////////////////////////////////////
1:         alloc.awaitDiskSync(commitLog.metrics.waitingOnCommit);
author:Jonathan Ellis
-------------------------------------------------------------------------------
commit:22e18f5
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.db.commitlog;
1: 
1: import org.apache.cassandra.config.DatabaseDescriptor;
1: 
1: class BatchCommitLogService extends AbstractCommitLogService
1: {
1:     public BatchCommitLogService(CommitLog commitLog)
1:     {
1:         super(commitLog, "COMMIT-LOG-WRITER", (int) DatabaseDescriptor.getCommitLogSyncBatchWindow());
1:     }
1: 
1:     protected void maybeWaitForSync(CommitLogSegment.Allocation alloc)
1:     {
1:         // wait until record has been safely persisted to disk
1:         pending.incrementAndGet();
0:         alloc.awaitDiskSync();
1:         pending.decrementAndGet();
1:     }
1: }
============================================================================