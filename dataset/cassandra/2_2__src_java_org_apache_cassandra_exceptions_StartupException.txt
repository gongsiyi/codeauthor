1:194bad2: /*
1:194bad2:  * Licensed to the Apache Software Foundation (ASF) under one
1:194bad2:  * or more contributor license agreements.  See the NOTICE file
1:194bad2:  * distributed with this work for additional information
1:194bad2:  * regarding copyright ownership.  The ASF licenses this file
1:194bad2:  * to you under the Apache License, Version 2.0 (the
1:194bad2:  * "License"); you may not use this file except in compliance
1:194bad2:  * with the License.  You may obtain a copy of the License at
1:194bad2:  *
1:194bad2:  *     http://www.apache.org/licenses/LICENSE-2.0
1:194bad2:  *
1:194bad2:  * Unless required by applicable law or agreed to in writing, software
1:194bad2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:194bad2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:194bad2:  * See the License for the specific language governing permissions and
1:194bad2:  * limitations under the License.
1:194bad2:  */
1:194bad2: package org.apache.cassandra.exceptions;
1:194bad2: 
1:194bad2: /**
1:194bad2:  * An exception thrown during system startup, indicating the environment or system
1:194bad2:  * is not in a valid state to startup.
1:194bad2:  */
1:194bad2: public class StartupException extends Exception
1:194bad2: {
1:11910c6:     public final static int ERR_WRONG_MACHINE_STATE = 1;
1:11910c6:     public final static int ERR_WRONG_DISK_STATE = 3;
1:11910c6:     public final static int ERR_WRONG_CONFIG = 100;
1:11910c6: 
1:194bad2:     public final int returnCode;
1:194bad2: 
1:194bad2:     public StartupException(int returnCode, String message)
1:194bad2:     {
1:194bad2:         super(message);
1:194bad2:         this.returnCode = returnCode;
1:194bad2:     }
1:194bad2: 
1:194bad2:     public StartupException(int returnCode, String message, Throwable cause)
1:194bad2:     {
1:194bad2:         super(message, cause);
1:194bad2:         this.returnCode = returnCode;
1:194bad2:     }
1:194bad2: }
============================================================================
author:Stefania Alborghetti
-------------------------------------------------------------------------------
commit:11910c6
/////////////////////////////////////////////////////////////////////////
1:     public final static int ERR_WRONG_MACHINE_STATE = 1;
1:     public final static int ERR_WRONG_DISK_STATE = 3;
1:     public final static int ERR_WRONG_CONFIG = 100;
1: 
author:Sam Tunnicliffe
-------------------------------------------------------------------------------
commit:194bad2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one
1:  * or more contributor license agreements.  See the NOTICE file
1:  * distributed with this work for additional information
1:  * regarding copyright ownership.  The ASF licenses this file
1:  * to you under the Apache License, Version 2.0 (the
1:  * "License"); you may not use this file except in compliance
1:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *     http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.cassandra.exceptions;
1: 
1: /**
1:  * An exception thrown during system startup, indicating the environment or system
1:  * is not in a valid state to startup.
1:  */
1: public class StartupException extends Exception
1: {
1:     public final int returnCode;
1: 
1:     public StartupException(int returnCode, String message)
1:     {
1:         super(message);
1:         this.returnCode = returnCode;
1:     }
1: 
1:     public StartupException(int returnCode, String message, Throwable cause)
1:     {
1:         super(message, cause);
1:         this.returnCode = returnCode;
1:     }
1: }
============================================================================