1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: 
1:cd6a4ff: package org.apache.carbondata.hadoop.test.util;
1:cd6a4ff: 
1:956833e: import org.apache.carbondata.core.metadata.datatype.DataTypes;
1:ce09aaa: import org.apache.carbondata.core.scan.expression.ColumnExpression;
1:ce09aaa: import org.apache.carbondata.core.scan.expression.Expression;
1:ce09aaa: import org.apache.carbondata.core.scan.expression.LiteralExpression;
1:ce09aaa: import org.apache.carbondata.core.scan.expression.conditional.EqualToExpression;
1:2018048: import org.apache.carbondata.core.util.ObjectSerializationUtil;
1:cd6a4ff: 
1:cd6a4ff: import junit.framework.TestCase;
1:cd6a4ff: import org.junit.Assert;
1:cd6a4ff: import org.junit.Before;
1:cd6a4ff: import org.junit.Test;
1:cd6a4ff: 
1:cd6a4ff: public class ObjectSerializationUtilTest extends TestCase {
1:cd6a4ff: 
1:cd6a4ff:   @Before public void setUp() throws Exception {
1:cd6a4ff: 
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   @Test public void testConvertObjectToString() throws Exception {
1:956833e:     Expression expression = new EqualToExpression(new ColumnExpression("c1", DataTypes.STRING),
1:956833e:         new LiteralExpression("a", DataTypes.STRING));
1:cd6a4ff:     String string = ObjectSerializationUtil.convertObjectToString(expression);
1:cd6a4ff:     Assert.assertTrue(string != null);
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff:   @Test public void testConvertStringToObject() throws Exception {
1:956833e:     Expression expression = new EqualToExpression(new ColumnExpression("c1", DataTypes.STRING),
1:956833e:         new LiteralExpression("a", DataTypes.STRING));
1:cd6a4ff:     String string = ObjectSerializationUtil.convertObjectToString(expression);
1:cd6a4ff:     Assert.assertTrue(string != null);
1:cd6a4ff:     Object object = ObjectSerializationUtil.convertStringToObject(string);
1:cd6a4ff:     Assert.assertTrue(object != null);
1:cd6a4ff:     Assert.assertTrue(object instanceof Expression);
1:cd6a4ff:   }
1:cd6a4ff: }
============================================================================
author:akashrn5
-------------------------------------------------------------------------------
commit:2018048
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.util.ObjectSerializationUtil;
author:xubo245
-------------------------------------------------------------------------------
commit:e2a2d99
/////////////////////////////////////////////////////////////////////////
author:Jacky Li
-------------------------------------------------------------------------------
commit:956833e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.datatype.DataTypes;
/////////////////////////////////////////////////////////////////////////
1:     Expression expression = new EqualToExpression(new ColumnExpression("c1", DataTypes.STRING),
1:         new LiteralExpression("a", DataTypes.STRING));
1:     Expression expression = new EqualToExpression(new ColumnExpression("c1", DataTypes.STRING),
1:         new LiteralExpression("a", DataTypes.STRING));
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:jackylk
-------------------------------------------------------------------------------
commit:ce09aaa
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.metadata.datatype.DataType;
1: import org.apache.carbondata.core.scan.expression.ColumnExpression;
1: import org.apache.carbondata.core.scan.expression.Expression;
1: import org.apache.carbondata.core.scan.expression.LiteralExpression;
1: import org.apache.carbondata.core.scan.expression.conditional.EqualToExpression;
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: 
1: package org.apache.carbondata.hadoop.test.util;
1: 
0: import org.apache.carbondata.core.carbon.metadata.datatype.DataType;
0: import org.apache.carbondata.hadoop.util.ObjectSerializationUtil;
0: import org.apache.carbondata.scan.expression.ColumnExpression;
0: import org.apache.carbondata.scan.expression.Expression;
0: import org.apache.carbondata.scan.expression.LiteralExpression;
0: import org.apache.carbondata.scan.expression.conditional.EqualToExpression;
1: 
1: import junit.framework.TestCase;
1: import org.junit.Assert;
1: import org.junit.Before;
1: import org.junit.Test;
1: 
1: public class ObjectSerializationUtilTest extends TestCase {
1: 
1:   @Before public void setUp() throws Exception {
1: 
1:   }
1: 
1:   @Test public void testConvertObjectToString() throws Exception {
0:     Expression expression = new EqualToExpression(new ColumnExpression("c1", DataType.STRING),
0:         new LiteralExpression("a", DataType.STRING));
1:     String string = ObjectSerializationUtil.convertObjectToString(expression);
1:     Assert.assertTrue(string != null);
1:   }
1: 
1:   @Test public void testConvertStringToObject() throws Exception {
0:     Expression expression = new EqualToExpression(new ColumnExpression("c1", DataType.STRING),
0:         new LiteralExpression("a", DataType.STRING));
1:     String string = ObjectSerializationUtil.convertObjectToString(expression);
1:     Assert.assertTrue(string != null);
1:     Object object = ObjectSerializationUtil.convertStringToObject(string);
1:     Assert.assertTrue(object != null);
1:     Assert.assertTrue(object instanceof Expression);
1:   }
1: }
============================================================================