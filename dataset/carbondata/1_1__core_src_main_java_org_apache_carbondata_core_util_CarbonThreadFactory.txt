1:a734add: /*
1:a734add:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a734add:  * contributor license agreements.  See the NOTICE file distributed with
1:a734add:  * this work for additional information regarding copyright ownership.
1:a734add:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a734add:  * (the "License"); you may not use this file except in compliance with
1:a734add:  * the License.  You may obtain a copy of the License at
1:a734add:  *
1:a734add:  *    http://www.apache.org/licenses/LICENSE-2.0
1:a734add:  *
1:a734add:  * Unless required by applicable law or agreed to in writing, software
1:a734add:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a734add:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a734add:  * See the License for the specific language governing permissions and
1:a734add:  * limitations under the License.
1:a734add:  */
1:a734add: package org.apache.carbondata.core.util;
1:a734add: 
1:a734add: import java.util.concurrent.Executors;
1:a734add: import java.util.concurrent.ThreadFactory;
1:a734add: 
1:a734add: /**
1:a734add:  * Carbon thread factory class
1:a734add:  */
1:a734add: public class CarbonThreadFactory implements ThreadFactory {
1:a734add: 
1:a734add:   /**
1:a734add:    * default thread factory
1:a734add:    */
1:a734add:   private ThreadFactory defaultFactory;
1:a734add: 
1:a734add:   /**
1:a734add:    * pool name
1:a734add:    */
1:a734add:   private String name;
1:a734add: 
1:a734add:   public CarbonThreadFactory(String name) {
1:a734add:     this.defaultFactory = Executors.defaultThreadFactory();
1:a734add:     this.name = name;
1:a734add:   }
1:a734add: 
1:a734add:   @Override public Thread newThread(Runnable r) {
1:a734add:     final Thread thread = defaultFactory.newThread(r);
1:a734add:     thread.setName(name);
1:a734add:     return thread;
1:a734add:   }
1:a734add: }
============================================================================
author:kumarvishal
-------------------------------------------------------------------------------
commit:a734add
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.util;
1: 
1: import java.util.concurrent.Executors;
1: import java.util.concurrent.ThreadFactory;
1: 
1: /**
1:  * Carbon thread factory class
1:  */
1: public class CarbonThreadFactory implements ThreadFactory {
1: 
1:   /**
1:    * default thread factory
1:    */
1:   private ThreadFactory defaultFactory;
1: 
1:   /**
1:    * pool name
1:    */
1:   private String name;
1: 
1:   public CarbonThreadFactory(String name) {
1:     this.defaultFactory = Executors.defaultThreadFactory();
1:     this.name = name;
1:   }
1: 
1:   @Override public Thread newThread(Runnable r) {
1:     final Thread thread = defaultFactory.newThread(r);
1:     thread.setName(name);
1:     return thread;
1:   }
1: }
============================================================================