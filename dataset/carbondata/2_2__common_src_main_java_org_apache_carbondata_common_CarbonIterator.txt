1:cd6a4ff: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: 
1:cd6a4ff: package org.apache.carbondata.common;
1:cd6a4ff: 
1:cd6a4ff: import java.util.Iterator;
1:cd6a4ff: 
1:cd6a4ff: /**
1:cd6a4ff:  * CarbonIterator adds default implement for remove. This is required for Java 7.
1:cd6a4ff:  * @param <E>
1:cd6a4ff:  */
1:cd6a4ff: public abstract class CarbonIterator<E> implements Iterator<E> {
1:cd6a4ff: 
1:cd6a4ff:   @Override public abstract boolean hasNext();
1:cd6a4ff: 
1:cd6a4ff:   @Override public abstract E next();
1:cd6a4ff: 
1:cd6a4ff:   @Override public void remove() {
1:cd6a4ff:     throw new UnsupportedOperationException("remove");
1:cd6a4ff:   }
1:cd6a4ff: 
1:63434fa:   /**
1:63434fa:    * Initialize the iterator
1:63434fa:    */
1:63434fa:   public void initialize() {
1:63434fa:     // sub classes can overwrite to provide initialize logic to this method
1:63434fa:   }
1:63434fa: 
1:63434fa:   /**
1:63434fa:    * Close the resources
1:63434fa:    */
1:63434fa:   public void close() {
1:63434fa:     // sub classes can overwrite to provide close logic to this method
1:63434fa:   }
1:63434fa: 
1:cd6a4ff: }
============================================================================
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
commit:41347d8
/////////////////////////////////////////////////////////////////////////
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
author:ravipesala
-------------------------------------------------------------------------------
commit:63434fa
/////////////////////////////////////////////////////////////////////////
1:   /**
1:    * Initialize the iterator
1:    */
1:   public void initialize() {
1:     // sub classes can overwrite to provide initialize logic to this method
1:   }
1: 
1:   /**
1:    * Close the resources
1:    */
1:   public void close() {
1:     // sub classes can overwrite to provide close logic to this method
1:   }
1: 
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: 
1: package org.apache.carbondata.common;
1: 
1: import java.util.Iterator;
1: 
1: /**
1:  * CarbonIterator adds default implement for remove. This is required for Java 7.
1:  * @param <E>
1:  */
1: public abstract class CarbonIterator<E> implements Iterator<E> {
1: 
1:   @Override public abstract boolean hasNext();
1: 
1:   @Override public abstract E next();
1: 
1:   @Override public void remove() {
1:     throw new UnsupportedOperationException("remove");
1:   }
1: 
1: }
commit:63434fa
/////////////////////////////////////////////////////////////////////////
0:   /**
0:    * Initialize the iterator
0:    */
0:   public void initialize() {
0:     // sub classes can overwrite to provide initialize logic to this method
0:   }
0: 
0:   /**
0:    * Close the resources
0:    */
0:   public void close() {
0:     // sub classes can overwrite to provide close logic to this method
0:   }
0: 
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
0:  *
0:  *    http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
0:  */
0: 
0: package org.apache.carbondata.common;
0: 
0: import java.util.Iterator;
0: 
0: /**
0:  * CarbonIterator adds default implement for remove. This is required for Java 7.
0:  * @param <E>
0:  */
0: public abstract class CarbonIterator<E> implements Iterator<E> {
0: 
0:   @Override public abstract boolean hasNext();
0: 
0:   @Override public abstract E next();
0: 
0:   @Override public void remove() {
0:     throw new UnsupportedOperationException("remove");
0:   }
0: 
0: }
============================================================================