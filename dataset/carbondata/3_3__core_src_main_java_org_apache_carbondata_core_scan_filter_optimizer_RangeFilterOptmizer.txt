1:c2e4eb2: /*
1:c2e4eb2:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:c2e4eb2:  * contributor license agreements.  See the NOTICE file distributed with
1:c2e4eb2:  * this work for additional information regarding copyright ownership.
1:c2e4eb2:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:c2e4eb2:  * (the "License"); you may not use this file except in compliance with
1:c2e4eb2:  * the License.  You may obtain a copy of the License at
1:c2e4eb2:  *
1:c2e4eb2:  *    http://www.apache.org/licenses/LICENSE-2.0
1:c2e4eb2:  *
1:c2e4eb2:  * Unless required by applicable law or agreed to in writing, software
1:c2e4eb2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c2e4eb2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c2e4eb2:  * See the License for the specific language governing permissions and
1:c2e4eb2:  * limitations under the License.
1:c2e4eb2:  */
1:c2e4eb2: 
1:c2e4eb2: package org.apache.carbondata.core.scan.filter.optimizer;
1:c2e4eb2: 
1:c2e4eb2: import org.apache.carbondata.core.scan.expression.Expression;
1:c2e4eb2: import org.apache.carbondata.core.scan.expression.RangeExpressionEvaluator;
1:f911403: import org.apache.carbondata.core.scan.filter.intf.FilterOptimizer;
1:c2e4eb2: 
1:f911403: public class RangeFilterOptmizer implements FilterOptimizer {
1:c2e4eb2: 
1:c2e4eb2:   RangeExpressionEvaluator rangeExpEvaluator;
1:c2e4eb2: 
1:daa6465:   public RangeFilterOptmizer(Expression filterExpression) {
1:c2e4eb2:     this.rangeExpEvaluator = new RangeExpressionEvaluator(filterExpression);
1:c2e4eb2: 
1:c2e4eb2:   }
1:c2e4eb2: 
1:c2e4eb2:   @Override public Expression optimizeFilter() {
1:c2e4eb2:     // Check if Range Filter can be applied.
1:c2e4eb2:     // rangeExpEvaluator.rangeExpressionEvaluatorGraphBased(null, null);
1:c2e4eb2:     rangeExpEvaluator.rangeExpressionEvaluatorMapBased();
1:c2e4eb2:     return this.rangeExpEvaluator.getExpr();
1:c2e4eb2:   }
1:c2e4eb2: }
============================================================================
author:sraghunandan
-------------------------------------------------------------------------------
commit:f911403
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.scan.filter.intf.FilterOptimizer;
1: public class RangeFilterOptmizer implements FilterOptimizer {
commit:500654e
/////////////////////////////////////////////////////////////////////////
0:     super(filterExpression);
author:Jacky Li
-------------------------------------------------------------------------------
commit:daa6465
/////////////////////////////////////////////////////////////////////////
1:   public RangeFilterOptmizer(Expression filterExpression) {
author:sounakr
-------------------------------------------------------------------------------
commit:c2e4eb2
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.scan.filter.optimizer;
1: 
1: import org.apache.carbondata.core.scan.expression.Expression;
1: import org.apache.carbondata.core.scan.expression.RangeExpressionEvaluator;
0: import org.apache.carbondata.core.scan.filter.intf.FilterOptimizer;
0: import org.apache.carbondata.core.scan.filter.intf.FilterOptimizerImpl;
1: 
0: public class RangeFilterOptmizer extends FilterOptimizerImpl {
1: 
1:   RangeExpressionEvaluator rangeExpEvaluator;
1: 
0:   public RangeFilterOptmizer(FilterOptimizer filterOptimizer, Expression filterExpression) {
0:     super(filterOptimizer, filterExpression);
1:     this.rangeExpEvaluator = new RangeExpressionEvaluator(filterExpression);
1: 
1:   }
1: 
1:   @Override public Expression optimizeFilter() {
1:     // Check if Range Filter can be applied.
1:     // rangeExpEvaluator.rangeExpressionEvaluatorGraphBased(null, null);
1:     rangeExpEvaluator.rangeExpressionEvaluatorMapBased();
1:     return this.rangeExpEvaluator.getExpr();
1:   }
1: }
============================================================================