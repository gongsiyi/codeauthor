1:98df130: /*
1:98df130:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:98df130:  * contributor license agreements.  See the NOTICE file distributed with
1:98df130:  * this work for additional information regarding copyright ownership.
1:98df130:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:98df130:  * (the "License"); you may not use this file except in compliance with
1:98df130:  * the License.  You may obtain a copy of the License at
1:98df130:  *
1:98df130:  *    http://www.apache.org/licenses/LICENSE-2.0
1:98df130:  *
1:98df130:  * Unless required by applicable law or agreed to in writing, software
1:98df130:  * distributed under the License is distributed on an "AS IS" BASIS,
1:98df130:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:98df130:  * See the License for the specific language governing permissions and
1:98df130:  * limitations under the License.
1:98df130:  */
1:98df130: 
1:98df130: package org.apache.carbondata.core.datastore.page.statistics;
1:98df130: 
1:98df130: import org.apache.carbondata.core.datastore.page.ColumnPage;
1:98df130: 
1:98df130: /**
1:98df130:  * Calculate the statistics for a column page and blocklet
1:98df130:  */
1:98df130: public interface StatisticsCollector {
1:98df130: 
1:98df130:   /**
1:98df130:    * name will be stored in Header
1:98df130:    */
1:98df130:   String getName();
1:98df130: 
1:98df130:   void startPage(int pageID);
1:98df130: 
1:98df130:   void endPage(int pageID);
1:98df130: 
1:98df130:   void startBlocklet(int blockletID);
1:98df130: 
1:98df130:   void endBlocklet(int blockletID);
1:98df130: 
1:98df130:   void startBlock(int blocklID);
1:98df130: 
1:98df130:   void endBlock(int blockID);
1:98df130: 
1:98df130:   /**
1:98df130:    * Update the stats for the input batch
1:98df130:    */
1:98df130:   void update(ColumnPage batch);
1:98df130: 
1:98df130:   /**
1:98df130:    * Ouput will be written to DataChunk2 (page header)
1:98df130:    */
1:98df130:   byte[] getPageStatistisc();
1:98df130: 
1:98df130:   /**
1:98df130:    * Output will be written to DataChunk3 (blocklet header)
1:98df130:    */
1:98df130:   byte[] getBlockletStatistics();
1:98df130: 
1:98df130:   /**
1:98df130:    * Output will be written to Footer
1:98df130:    */
1:98df130:   byte[] getBlockStatistics();
1:98df130: }
1:98df130: 
1:98df130: 
1:98df130: 
============================================================================
author:jackylk
-------------------------------------------------------------------------------
commit:98df130
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.datastore.page.statistics;
1: 
1: import org.apache.carbondata.core.datastore.page.ColumnPage;
1: 
1: /**
1:  * Calculate the statistics for a column page and blocklet
1:  */
1: public interface StatisticsCollector {
1: 
1:   /**
1:    * name will be stored in Header
1:    */
1:   String getName();
1: 
1:   void startPage(int pageID);
1: 
1:   void endPage(int pageID);
1: 
1:   void startBlocklet(int blockletID);
1: 
1:   void endBlocklet(int blockletID);
1: 
1:   void startBlock(int blocklID);
1: 
1:   void endBlock(int blockID);
1: 
1:   /**
1:    * Update the stats for the input batch
1:    */
1:   void update(ColumnPage batch);
1: 
1:   /**
1:    * Ouput will be written to DataChunk2 (page header)
1:    */
1:   byte[] getPageStatistisc();
1: 
1:   /**
1:    * Output will be written to DataChunk3 (blocklet header)
1:    */
1:   byte[] getBlockletStatistics();
1: 
1:   /**
1:    * Output will be written to Footer
1:    */
1:   byte[] getBlockStatistics();
1: }
1: 
1: 
1: 
============================================================================