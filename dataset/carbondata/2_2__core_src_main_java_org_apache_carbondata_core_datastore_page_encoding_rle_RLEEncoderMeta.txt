1:e6a4f64: /*
1:e6a4f64:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e6a4f64:  * contributor license agreements.  See the NOTICE file distributed with
1:e6a4f64:  * this work for additional information regarding copyright ownership.
1:e6a4f64:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e6a4f64:  * (the "License"); you may not use this file except in compliance with
1:e6a4f64:  * the License.  You may obtain a copy of the License at
1:e6a4f64:  *
1:e6a4f64:  *    http://www.apache.org/licenses/LICENSE-2.0
1:e6a4f64:  *
1:e6a4f64:  * Unless required by applicable law or agreed to in writing, software
1:e6a4f64:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e6a4f64:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e6a4f64:  * See the License for the specific language governing permissions and
1:e6a4f64:  * limitations under the License.
1:e6a4f64:  */
1:e6a4f64: 
1:e6a4f64: package org.apache.carbondata.core.datastore.page.encoding.rle;
1:e6a4f64: 
1:e6a4f64: import java.io.DataInput;
1:e6a4f64: import java.io.DataOutput;
1:e6a4f64: import java.io.IOException;
1:e6a4f64: 
1:8c1ddbf: import org.apache.carbondata.core.datastore.TableSpec;
1:e6a4f64: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageEncoderMeta;
1:e6a4f64: import org.apache.carbondata.core.datastore.page.statistics.SimpleStatsResult;
1:e6a4f64: import org.apache.carbondata.core.metadata.datatype.DataType;
1:e6a4f64: import org.apache.carbondata.core.metadata.schema.table.Writable;
1:e6a4f64: 
1:e6a4f64: /**
1:e6a4f64:  * Metadata class for RLECodec
1:e6a4f64:  */
1:e6a4f64: public class RLEEncoderMeta extends ColumnPageEncoderMeta implements Writable {
1:e6a4f64: 
1:e6a4f64:   private int pageSize;
1:e6a4f64: 
1:e6a4f64:   public RLEEncoderMeta() {
1:e6a4f64: 
1:e6a4f64:   }
1:e6a4f64: 
1:8c1ddbf:   public RLEEncoderMeta(TableSpec.ColumnSpec columnSpec, DataType dataType, int pageSize,
1:8f08c4a:       SimpleStatsResult stats, String compressorName) {
1:8f08c4a:     super(columnSpec, dataType, stats, compressorName);
1:e6a4f64:     this.pageSize = pageSize;
1:e6a4f64:   }
1:e6a4f64: 
1:e6a4f64:   public int getPageSize() {
1:e6a4f64:     return pageSize;
1:e6a4f64:   }
1:e6a4f64: 
1:e6a4f64:   @Override
1:e6a4f64:   public void write(DataOutput out) throws IOException {
1:e6a4f64:     super.write(out);
1:e6a4f64:     out.writeInt(pageSize);
1:e6a4f64:   }
1:e6a4f64: 
1:e6a4f64:   @Override
1:e6a4f64:   public void readFields(DataInput in) throws IOException {
1:e6a4f64:     super.readFields(in);
1:e6a4f64:     pageSize = in.readInt();
1:e6a4f64:   }
1:e6a4f64: }
============================================================================
author:xuchuanyin
-------------------------------------------------------------------------------
commit:8f08c4a
/////////////////////////////////////////////////////////////////////////
1:       SimpleStatsResult stats, String compressorName) {
1:     super(columnSpec, dataType, stats, compressorName);
author:Jacky Li
-------------------------------------------------------------------------------
commit:8c1ddbf
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.datastore.TableSpec;
/////////////////////////////////////////////////////////////////////////
1:   public RLEEncoderMeta(TableSpec.ColumnSpec columnSpec, DataType dataType, int pageSize,
0:       SimpleStatsResult stats) {
0:     super(columnSpec, dataType, stats, "");
commit:e6a4f64
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.datastore.page.encoding.rle;
1: 
1: import java.io.DataInput;
1: import java.io.DataOutput;
1: import java.io.IOException;
1: 
1: import org.apache.carbondata.core.datastore.page.encoding.ColumnPageEncoderMeta;
1: import org.apache.carbondata.core.datastore.page.statistics.SimpleStatsResult;
1: import org.apache.carbondata.core.metadata.datatype.DataType;
1: import org.apache.carbondata.core.metadata.schema.table.Writable;
1: 
1: /**
1:  * Metadata class for RLECodec
1:  */
1: public class RLEEncoderMeta extends ColumnPageEncoderMeta implements Writable {
1: 
1:   private int pageSize;
1: 
1:   public RLEEncoderMeta() {
1: 
1:   }
1: 
0:   public RLEEncoderMeta(DataType dataType, int pageSize, SimpleStatsResult stats) {
0:     super(dataType, stats);
1:     this.pageSize = pageSize;
1:   }
1: 
1:   public int getPageSize() {
1:     return pageSize;
1:   }
1: 
1:   @Override
1:   public void write(DataOutput out) throws IOException {
1:     super.write(out);
1:     out.writeInt(pageSize);
1:   }
1: 
1:   @Override
1:   public void readFields(DataInput in) throws IOException {
1:     super.readFields(in);
1:     pageSize = in.readInt();
1:   }
1: }
============================================================================