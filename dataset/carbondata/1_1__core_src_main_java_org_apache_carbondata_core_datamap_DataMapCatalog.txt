1:05086e5: /*
1:05086e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:05086e5:  * contributor license agreements.  See the NOTICE file distributed with
1:05086e5:  * this work for additional information regarding copyright ownership.
1:05086e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:05086e5:  * (the "License"); you may not use this file except in compliance with
1:05086e5:  * the License.  You may obtain a copy of the License at
1:05086e5:  *
1:05086e5:  *    http://www.apache.org/licenses/LICENSE-2.0
1:05086e5:  *
1:05086e5:  * Unless required by applicable law or agreed to in writing, software
1:05086e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:05086e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:05086e5:  * See the License for the specific language governing permissions and
1:05086e5:  * limitations under the License.
1:05086e5:  */
1:05086e5: 
1:05086e5: package org.apache.carbondata.core.datamap;
1:05086e5: 
1:05086e5: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
1:05086e5: 
1:05086e5: /**
1:05086e5:  * This is the interface for inmemory catalog registry for datamap.
1:05086e5:  * @since 1.4.0
1:05086e5:  */
1:05086e5: public interface DataMapCatalog<T> {
1:05086e5: 
1:05086e5:   /**
1:05086e5:    * Register schema to the catalog.
1:05086e5:    * @param dataMapSchema
1:05086e5:    */
1:05086e5:   void registerSchema(DataMapSchema dataMapSchema);
1:05086e5: 
1:05086e5:   /**
1:05086e5:    * Unregister schema from catalog.
1:05086e5:    * @param dataMapName
1:05086e5:    */
1:05086e5:   void unregisterSchema(String dataMapName);
1:05086e5: 
1:05086e5:   /**
1:b65bf9b:    * List all registered valid schema catalogs
1:05086e5:    * @return
1:05086e5:    */
1:b65bf9b:   T[] listAllValidSchema();
1:05086e5: 
1:05086e5:   /**
1:05086e5:    * It reloads/removes all registered schema catalogs
1:05086e5:    */
1:05086e5:   void refresh();
1:05086e5: 
1:05086e5: }
============================================================================
author:ravipesala
-------------------------------------------------------------------------------
commit:b65bf9b
/////////////////////////////////////////////////////////////////////////
1:    * List all registered valid schema catalogs
1:   T[] listAllValidSchema();
commit:05086e5
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.datamap;
1: 
1: import org.apache.carbondata.core.metadata.schema.table.DataMapSchema;
1: 
1: /**
1:  * This is the interface for inmemory catalog registry for datamap.
1:  * @since 1.4.0
1:  */
1: public interface DataMapCatalog<T> {
1: 
1:   /**
1:    * Register schema to the catalog.
1:    * @param dataMapSchema
1:    */
1:   void registerSchema(DataMapSchema dataMapSchema);
1: 
1:   /**
1:    * Unregister schema from catalog.
1:    * @param dataMapName
1:    */
1:   void unregisterSchema(String dataMapName);
1: 
1:   /**
0:    * List all registered schema catalogs
1:    * @return
1:    */
0:   T[] listAllSchema();
1: 
1:   /**
1:    * It reloads/removes all registered schema catalogs
1:    */
1:   void refresh();
1: 
1: }
============================================================================