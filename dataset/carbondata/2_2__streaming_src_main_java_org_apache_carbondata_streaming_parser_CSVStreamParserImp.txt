1:d7393da: /*
1:d7393da:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d7393da:  * contributor license agreements.  See the NOTICE file distributed with
1:d7393da:  * this work for additional information regarding copyright ownership.
1:d7393da:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d7393da:  * (the "License"); you may not use this file except in compliance with
1:d7393da:  * the License.  You may obtain a copy of the License at
1:d7393da:  *
1:d7393da:  *    http://www.apache.org/licenses/LICENSE-2.0
1:d7393da:  *
1:d7393da:  * Unless required by applicable law or agreed to in writing, software
1:d7393da:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d7393da:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d7393da:  * See the License for the specific language governing permissions and
1:d7393da:  * limitations under the License.
1:d7393da:  */
1:d7393da: 
1:d7393da: package org.apache.carbondata.streaming.parser;
1:d7393da: 
1:d7393da: import org.apache.carbondata.processing.loading.csvinput.CSVInputFormat;
1:d7393da: 
1:d7393da: import com.univocity.parsers.csv.CsvParser;
1:d7393da: import com.univocity.parsers.csv.CsvParserSettings;
1:d7393da: import org.apache.hadoop.conf.Configuration;
1:d7393da: import org.apache.spark.sql.catalyst.InternalRow;
1:648c3d3: import org.apache.spark.sql.types.StructType;
1:d7393da: 
1:d7393da: /**
1:d7393da:  * CSV Stream Parser, it is also the default parser.
1:d7393da:  */
1:d7393da: public class CSVStreamParserImp implements CarbonStreamParser {
1:d7393da: 
1:d7393da:   private CsvParser csvParser;
1:d7393da: 
1:648c3d3:   @Override public void initialize(Configuration configuration, StructType structType) {
1:d7393da:     CsvParserSettings settings = CSVInputFormat.extractCsvParserSettings(configuration);
1:d7393da:     csvParser = new CsvParser(settings);
1:d7393da:   }
1:d7393da: 
1:d7393da:   @Override public Object[] parserRow(InternalRow row) {
1:d7393da:     return csvParser.parseLine(row.getString(0));
1:d7393da:   }
1:d7393da: 
1:d7393da:   @Override public void close() {
1:d7393da:   }
1:d7393da: }
============================================================================
author:Zhang Zhichao
-------------------------------------------------------------------------------
commit:648c3d3
/////////////////////////////////////////////////////////////////////////
1: import org.apache.spark.sql.types.StructType;
/////////////////////////////////////////////////////////////////////////
1:   @Override public void initialize(Configuration configuration, StructType structType) {
author:QiangCai
-------------------------------------------------------------------------------
commit:d7393da
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.streaming.parser;
1: 
1: import org.apache.carbondata.processing.loading.csvinput.CSVInputFormat;
1: 
1: import com.univocity.parsers.csv.CsvParser;
1: import com.univocity.parsers.csv.CsvParserSettings;
1: import org.apache.hadoop.conf.Configuration;
1: import org.apache.spark.sql.catalyst.InternalRow;
1: 
1: /**
1:  * CSV Stream Parser, it is also the default parser.
1:  */
1: public class CSVStreamParserImp implements CarbonStreamParser {
1: 
1:   private CsvParser csvParser;
1: 
0:   @Override public void initialize(Configuration configuration) {
1:     CsvParserSettings settings = CSVInputFormat.extractCsvParserSettings(configuration);
1:     csvParser = new CsvParser(settings);
1:   }
1: 
1:   @Override public Object[] parserRow(InternalRow row) {
1:     return csvParser.parseLine(row.getString(0));
1:   }
1: 
1:   @Override public void close() {
1:   }
1: }
============================================================================