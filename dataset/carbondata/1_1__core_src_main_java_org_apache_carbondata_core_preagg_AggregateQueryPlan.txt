1:e4f2843: /*
1:e4f2843:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:e4f2843:  * contributor license agreements.  See the NOTICE file distributed with
1:e4f2843:  * this work for additional information regarding copyright ownership.
1:e4f2843:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:e4f2843:  * (the "License"); you may not use this file except in compliance with
1:e4f2843:  * the License.  You may obtain a copy of the License at
1:e4f2843:  *
1:e4f2843:  *    http://www.apache.org/licenses/LICENSE-2.0
1:e4f2843:  *
1:e4f2843:  * Unless required by applicable law or agreed to in writing, software
1:e4f2843:  * distributed under the License is distributed on an "AS IS" BASIS,
1:e4f2843:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:e4f2843:  * See the License for the specific language governing permissions and
1:e4f2843:  * limitations under the License.
2:e4f2843:  */
1:e4f2843: package org.apache.carbondata.core.preagg;
3:e4f2843: 
1:e4f2843: import java.util.List;
1:e4f2843: 
2:e4f2843: /**
1:e4f2843:  * class to maintain the query plan to select the data map tables
1:e4f2843:  */
1:c70e73f: public class AggregateQueryPlan {
1:e4f2843: 
1:e4f2843:   /**
1:e4f2843:    * List of projection columns
1:e4f2843:    */
1:e4f2843:   private List<QueryColumn> projectionColumn;
1:e4f2843: 
1:e4f2843:   /**
1:e4f2843:    * list of filter columns
1:e4f2843:    */
1:e4f2843:   private List<QueryColumn> filterColumns;
1:e4f2843: 
1:c70e73f:   public AggregateQueryPlan(List<QueryColumn> projectionColumn, List<QueryColumn> filterColumns) {
1:e4f2843:     this.projectionColumn = projectionColumn;
1:e4f2843:     this.filterColumns = filterColumns;
2:e4f2843:   }
1:e4f2843: 
1:e4f2843:   public List<QueryColumn> getProjectionColumn() {
1:e4f2843:     return projectionColumn;
1:e4f2843:   }
1:e4f2843: 
1:e4f2843:   public List<QueryColumn> getFilterColumns() {
1:e4f2843:     return filterColumns;
1:e4f2843:   }
1:e4f2843: }
============================================================================
author:kumarvishal
-------------------------------------------------------------------------------
commit:c70e73f
/////////////////////////////////////////////////////////////////////////
1: public class AggregateQueryPlan {
/////////////////////////////////////////////////////////////////////////
1:   public AggregateQueryPlan(List<QueryColumn> projectionColumn, List<QueryColumn> filterColumns) {
/////////////////////////////////////////////////////////////////////////
commit:e4f2843
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.carbondata.core.preagg;
1: 
1: import java.util.List;
1: 
1: /**
1:  * class to maintain the query plan to select the data map tables
1:  */
0: public class QueryPlan {
1: 
1:   /**
1:    * List of projection columns
1:    */
1:   private List<QueryColumn> projectionColumn;
1: 
1:   /**
0:    * list of aggregation columns
1:    */
0:   private List<QueryColumn> aggregationColumns;
1: 
1:   /**
1:    * list of filter columns
1:    */
1:   private List<QueryColumn> filterColumns;
1: 
0:   public QueryPlan(List<QueryColumn> projectionColumn, List<QueryColumn> aggregationColumns,
0:       List<QueryColumn> filterColumns) {
1:     this.projectionColumn = projectionColumn;
0:     this.aggregationColumns = aggregationColumns;
1:     this.filterColumns = filterColumns;
1:   }
1: 
1:   public List<QueryColumn> getProjectionColumn() {
1:     return projectionColumn;
1:   }
1: 
0:   public List<QueryColumn> getAggregationColumns() {
0:     return aggregationColumns;
1:   }
1: 
1:   public List<QueryColumn> getFilterColumns() {
1:     return filterColumns;
1:   }
1: }
============================================================================