1:f1a6c7c: /*
1:f1a6c7c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f1a6c7c:  * contributor license agreements.  See the NOTICE file distributed with
1:f1a6c7c:  * this work for additional information regarding copyright ownership.
1:f1a6c7c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f1a6c7c:  * (the "License"); you may not use this file except in compliance with
1:f1a6c7c:  * the License.  You may obtain a copy of the License at
1:f1a6c7c:  *
1:f1a6c7c:  *    http://www.apache.org/licenses/LICENSE-2.0
1:f1a6c7c:  *
1:f1a6c7c:  * Unless required by applicable law or agreed to in writing, software
1:f1a6c7c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f1a6c7c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f1a6c7c:  * See the License for the specific language governing permissions and
1:f1a6c7c:  * limitations under the License.
1:f1a6c7c:  */
1:f1a6c7c: 
1:f1a6c7c: package org.apache.carbondata.core.statusmanager;
1:f1a6c7c: 
1:f1a6c7c: import java.io.Serializable;
1:f1a6c7c: 
1:f1a6c7c: public class SegmentRefreshInfo implements Serializable {
1:f1a6c7c: 
1:f1a6c7c:   private Long segmentUpdatedTimestamp;
1:f1a6c7c:   private Integer countOfFileInSegment;
1:f1a6c7c: 
1:f1a6c7c:   public SegmentRefreshInfo(Long segmentUpdatedTimestamp, Integer countOfFileInSegment) {
1:f1a6c7c:     this.segmentUpdatedTimestamp = segmentUpdatedTimestamp;
1:f1a6c7c:     this.countOfFileInSegment = countOfFileInSegment;
1:f1a6c7c:   }
1:f1a6c7c: 
1:f1a6c7c:   public Long getSegmentUpdatedTimestamp() {
1:f1a6c7c:     return segmentUpdatedTimestamp;
1:f1a6c7c:   }
1:f1a6c7c: 
1:f1a6c7c:   public void setSegmentUpdatedTimestamp(Long segmentUpdatedTimestamp) {
1:f1a6c7c:     this.segmentUpdatedTimestamp = segmentUpdatedTimestamp;
1:f1a6c7c:   }
1:f1a6c7c: 
1:f1a6c7c:   public Integer getCountOfFileInSegment() {
1:f1a6c7c:     return countOfFileInSegment;
1:f1a6c7c:   }
1:f1a6c7c: 
1:f1a6c7c:   public void setCountOfFileInSegment(Integer countOfFileInSegment) {
1:f1a6c7c:     this.countOfFileInSegment = countOfFileInSegment;
1:f1a6c7c:   }
1:f1a6c7c: 
1:f1a6c7c:   public boolean compare(Object o) {
1:f1a6c7c:     if (!(o instanceof SegmentRefreshInfo)) return false;
1:f1a6c7c: 
1:f1a6c7c:     SegmentRefreshInfo that = (SegmentRefreshInfo) o;
1:f1a6c7c: 
1:f1a6c7c:     if (segmentUpdatedTimestamp > that.segmentUpdatedTimestamp || !countOfFileInSegment
1:f1a6c7c:         .equals(that.countOfFileInSegment)) {
1:f1a6c7c:       return true;
1:f1a6c7c:     }
1:f1a6c7c:     return false;
1:f1a6c7c:   }
1:f1a6c7c: 
1:f1a6c7c:   @Override public int hashCode() {
1:f1a6c7c:     int result = segmentUpdatedTimestamp.hashCode();
1:f1a6c7c:     result = 31 * result + countOfFileInSegment.hashCode();
1:f1a6c7c:     return result;
1:f1a6c7c:   }
1:f1a6c7c: }
============================================================================
author:rahulforallp
-------------------------------------------------------------------------------
commit:f1a6c7c
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.statusmanager;
1: 
1: import java.io.Serializable;
1: 
1: public class SegmentRefreshInfo implements Serializable {
1: 
1:   private Long segmentUpdatedTimestamp;
1:   private Integer countOfFileInSegment;
1: 
1:   public SegmentRefreshInfo(Long segmentUpdatedTimestamp, Integer countOfFileInSegment) {
1:     this.segmentUpdatedTimestamp = segmentUpdatedTimestamp;
1:     this.countOfFileInSegment = countOfFileInSegment;
1:   }
1: 
1:   public Long getSegmentUpdatedTimestamp() {
1:     return segmentUpdatedTimestamp;
1:   }
1: 
1:   public void setSegmentUpdatedTimestamp(Long segmentUpdatedTimestamp) {
1:     this.segmentUpdatedTimestamp = segmentUpdatedTimestamp;
1:   }
1: 
1:   public Integer getCountOfFileInSegment() {
1:     return countOfFileInSegment;
1:   }
1: 
1:   public void setCountOfFileInSegment(Integer countOfFileInSegment) {
1:     this.countOfFileInSegment = countOfFileInSegment;
1:   }
1: 
1:   public boolean compare(Object o) {
1:     if (!(o instanceof SegmentRefreshInfo)) return false;
1: 
1:     SegmentRefreshInfo that = (SegmentRefreshInfo) o;
1: 
1:     if (segmentUpdatedTimestamp > that.segmentUpdatedTimestamp || !countOfFileInSegment
1:         .equals(that.countOfFileInSegment)) {
1:       return true;
1:     }
1:     return false;
1:   }
1: 
1:   @Override public int hashCode() {
1:     int result = segmentUpdatedTimestamp.hashCode();
1:     result = 31 * result + countOfFileInSegment.hashCode();
1:     return result;
1:   }
1: }
============================================================================