1:21a72bf: /*
1:21a72bf:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:21a72bf:  * contributor license agreements.  See the NOTICE file distributed with
1:21a72bf:  * this work for additional information regarding copyright ownership.
1:21a72bf:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:21a72bf:  * (the "License"); you may not use this file except in compliance with
1:21a72bf:  * the License.  You may obtain a copy of the License at
1:21a72bf:  *
1:21a72bf:  *    http://www.apache.org/licenses/LICENSE-2.0
1:21a72bf:  *
1:21a72bf:  * Unless required by applicable law or agreed to in writing, software
1:21a72bf:  * distributed under the License is distributed on an "AS IS" BASIS,
1:21a72bf:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:21a72bf:  * See the License for the specific language governing permissions and
1:21a72bf:  * limitations under the License.
1:21a72bf:  */
1:21a72bf: 
1:21a72bf: package org.apache.carbondata.streaming.index;
1:21a72bf: 
1:21a72bf: import java.io.Serializable;
1:21a72bf: 
1:21a72bf: import org.apache.carbondata.common.annotations.InterfaceAudience;
1:21a72bf: import org.apache.carbondata.core.metadata.blocklet.index.BlockletMinMaxIndex;
1:21a72bf: import org.apache.carbondata.core.metadata.datatype.DataType;
1:21a72bf: 
1:21a72bf: @InterfaceAudience.Internal
1:21a72bf: public class StreamFileIndex implements Serializable {
1:21a72bf: 
1:21a72bf:   /**
1:21a72bf:    * the name of file, it doesn't contain the whole path.
1:21a72bf:    */
1:21a72bf:   private String fileName;
1:21a72bf: 
1:21a72bf:   private BlockletMinMaxIndex minMaxIndex;
1:21a72bf: 
1:21a72bf:   private long rowCount;
1:21a72bf: 
1:21a72bf:   private DataType[] msrDataTypes;
1:21a72bf: 
1:21a72bf:   public StreamFileIndex(String fileName, BlockletMinMaxIndex minMaxIndex, long rowCount) {
1:21a72bf:     this.fileName = fileName;
1:21a72bf:     this.minMaxIndex = minMaxIndex;
1:21a72bf:     this.rowCount = rowCount;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public String getFileName() {
1:21a72bf:     return fileName;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public void setFileName(String fileName) {
1:21a72bf:     this.fileName = fileName;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public BlockletMinMaxIndex getMinMaxIndex() {
1:21a72bf:     return minMaxIndex;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public void setMinMaxIndex(BlockletMinMaxIndex minMaxIndex) {
1:21a72bf:     this.minMaxIndex = minMaxIndex;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public long getRowCount() {
1:21a72bf:     return rowCount;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public void setRowCount(long rowCount) {
1:21a72bf:     this.rowCount = rowCount;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public DataType[] getMsrDataTypes() {
1:21a72bf:     return msrDataTypes;
1:21a72bf:   }
1:21a72bf: 
1:21a72bf:   public void setMsrDataTypes(DataType[] msrDataTypes) {
1:21a72bf:     this.msrDataTypes = msrDataTypes;
1:21a72bf:   }
1:21a72bf: }
============================================================================
author:QiangCai
-------------------------------------------------------------------------------
commit:21a72bf
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.streaming.index;
1: 
1: import java.io.Serializable;
1: 
1: import org.apache.carbondata.common.annotations.InterfaceAudience;
1: import org.apache.carbondata.core.metadata.blocklet.index.BlockletMinMaxIndex;
1: import org.apache.carbondata.core.metadata.datatype.DataType;
1: 
1: @InterfaceAudience.Internal
1: public class StreamFileIndex implements Serializable {
1: 
1:   /**
1:    * the name of file, it doesn't contain the whole path.
1:    */
1:   private String fileName;
1: 
1:   private BlockletMinMaxIndex minMaxIndex;
1: 
1:   private long rowCount;
1: 
1:   private DataType[] msrDataTypes;
1: 
1:   public StreamFileIndex(String fileName, BlockletMinMaxIndex minMaxIndex, long rowCount) {
1:     this.fileName = fileName;
1:     this.minMaxIndex = minMaxIndex;
1:     this.rowCount = rowCount;
1:   }
1: 
1:   public String getFileName() {
1:     return fileName;
1:   }
1: 
1:   public void setFileName(String fileName) {
1:     this.fileName = fileName;
1:   }
1: 
1:   public BlockletMinMaxIndex getMinMaxIndex() {
1:     return minMaxIndex;
1:   }
1: 
1:   public void setMinMaxIndex(BlockletMinMaxIndex minMaxIndex) {
1:     this.minMaxIndex = minMaxIndex;
1:   }
1: 
1:   public long getRowCount() {
1:     return rowCount;
1:   }
1: 
1:   public void setRowCount(long rowCount) {
1:     this.rowCount = rowCount;
1:   }
1: 
1:   public DataType[] getMsrDataTypes() {
1:     return msrDataTypes;
1:   }
1: 
1:   public void setMsrDataTypes(DataType[] msrDataTypes) {
1:     this.msrDataTypes = msrDataTypes;
1:   }
1: }
============================================================================