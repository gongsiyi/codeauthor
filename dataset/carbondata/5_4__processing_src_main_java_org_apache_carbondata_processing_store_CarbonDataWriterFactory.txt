1:d54dc64: /*
1:41347d8:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:41347d8:  * contributor license agreements.  See the NOTICE file distributed with
1:41347d8:  * this work for additional information regarding copyright ownership.
1:41347d8:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:41347d8:  * (the "License"); you may not use this file except in compliance with
1:41347d8:  * the License.  You may obtain a copy of the License at
1:d54dc64:  *
1:d54dc64:  *    http://www.apache.org/licenses/LICENSE-2.0
1:d54dc64:  *
1:41347d8:  * Unless required by applicable law or agreed to in writing, software
1:41347d8:  * distributed under the License is distributed on an "AS IS" BASIS,
1:41347d8:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:41347d8:  * See the License for the specific language governing permissions and
1:41347d8:  * limitations under the License.
1:d54dc64:  */
1:0ef3fb8: 
1:d54dc64: package org.apache.carbondata.processing.store;
1:d54dc64: 
1:ce09aaa: import org.apache.carbondata.core.metadata.ColumnarFormatVersion;
1:d54dc64: import org.apache.carbondata.processing.store.writer.CarbonFactDataWriter;
1:2cf1104: import org.apache.carbondata.processing.store.writer.v3.CarbonFactDataWriterImplV3;
1:d54dc64: 
1:d54dc64: /**
1:d54dc64:  * Factory class to get the writer instance
1:d54dc64:  */
1:349c59c: class CarbonDataWriterFactory {
1:d54dc64: 
1:d54dc64:   /**
1:d54dc64:    * static instance
1:d54dc64:    */
1:d54dc64:   private static final CarbonDataWriterFactory CARBON_DATA_WRITER_FACTORY =
1:d54dc64:       new CarbonDataWriterFactory();
1:d54dc64: 
1:d54dc64:   /**
1:d54dc64:    * private constructor
1:d54dc64:    */
1:d54dc64:   private CarbonDataWriterFactory() {
1:d54dc64:     // TODO Auto-generated constructor stub
1:d54dc64:   }
1:d54dc64: 
1:d54dc64:   /**
1:d54dc64:    * Below method will be used to get the instance of factory class
1:d54dc64:    *
1:d54dc64:    * @return fact class instance
1:d54dc64:    */
1:d54dc64:   public static CarbonDataWriterFactory getInstance() {
1:d54dc64:     return CARBON_DATA_WRITER_FACTORY;
1:d54dc64:   }
1:d54dc64: 
1:d54dc64:   /**
1:d54dc64:    * Below method will be used to get the writer instance based on version
1:d54dc64:    *
1:d54dc64:    * @param version            writer version
1:d54dc64:    * @param carbonDataWriterVo writer vo object
1:d54dc64:    * @return writer instance
1:d54dc64:    */
1:349c59c:   public CarbonFactDataWriter getFactDataWriter(final ColumnarFormatVersion version,
1:c9e5842:       final CarbonFactDataHandlerModel model) {
1:d54dc64:     switch (version) {
1:0ef3fb8:       case V1:
1:2cf1104:       case V2:
1:e6a4f64:         throw new UnsupportedOperationException("V1 and V2 CarbonData Writer is not supported");
1:2cf1104:       case V3:
1:c9e5842:         return new CarbonFactDataWriterImplV3(model);
1:2cf1104:       default:
1:c9e5842:         return new CarbonFactDataWriterImplV3(model);
1:d54dc64:     }
1:d54dc64:   }
1:d54dc64: 
1:d54dc64: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:c9e5842
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:       final CarbonFactDataHandlerModel model) {
1:         return new CarbonFactDataWriterImplV3(model);
1:         return new CarbonFactDataWriterImplV3(model);
commit:349c59c
/////////////////////////////////////////////////////////////////////////
1: class CarbonDataWriterFactory {
/////////////////////////////////////////////////////////////////////////
1:   public CarbonFactDataWriter getFactDataWriter(final ColumnarFormatVersion version,
commit:e6a4f64
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         throw new UnsupportedOperationException("V1 and V2 CarbonData Writer is not supported");
author:kumarvishal
-------------------------------------------------------------------------------
commit:2cf1104
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.processing.store.writer.v3.CarbonFactDataWriterImplV3;
/////////////////////////////////////////////////////////////////////////
1:       case V2:
1:       case V3:
0:         return new CarbonFactDataWriterImplV3(carbonDataWriterVo);
1:       default:
0:         return new CarbonFactDataWriterImplV3(carbonDataWriterVo);
commit:d54dc64
/////////////////////////////////////////////////////////////////////////
1: /*
0:  * Licensed to the Apache Software Foundation (ASF) under one
0:  * or more contributor license agreements.  See the NOTICE file
0:  * distributed with this work for additional information
0:  * regarding copyright ownership.  The ASF licenses this file
0:  * to you under the Apache License, Version 2.0 (the
0:  * "License"); you may not use this file except in compliance
0:  * with the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
0:  * Unless required by applicable law or agreed to in writing,
0:  * software distributed under the License is distributed on an
0:  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
0:  * KIND, either express or implied.  See the License for the
0:  * specific language governing permissions and limitations
0:  * under the License.
1:  */
1: package org.apache.carbondata.processing.store;
1: 
0: import org.apache.carbondata.processing.store.writer.CarbonDataWriterVo;
1: import org.apache.carbondata.processing.store.writer.CarbonFactDataWriter;
0: import org.apache.carbondata.processing.store.writer.CarbonFactDataWriterImpl2;
0: import org.apache.carbondata.processing.store.writer.CarbonFactDataWriterImplForIntIndexAndAggBlock;
1: 
1: /**
1:  * Factory class to get the writer instance
1:  */
0: public class CarbonDataWriterFactory {
1: 
1:   /**
1:    * static instance
1:    */
1:   private static final CarbonDataWriterFactory CARBON_DATA_WRITER_FACTORY =
1:       new CarbonDataWriterFactory();
1: 
1:   /**
1:    * private constructor
1:    */
1:   private CarbonDataWriterFactory() {
1:     // TODO Auto-generated constructor stub
1:   }
1: 
1:   /**
1:    * Below method will be used to get the instance of factory class
1:    *
1:    * @return fact class instance
1:    */
1:   public static CarbonDataWriterFactory getInstance() {
1:     return CARBON_DATA_WRITER_FACTORY;
1:   }
1: 
1:   /**
1:    * Below method will be used to get the writer instance based on version
1:    *
1:    * @param version            writer version
1:    * @param carbonDataWriterVo writer vo object
1:    * @return writer instance
1:    */
0:   public CarbonFactDataWriter<?> getFactDataWriter(final short version,
0:       final CarbonDataWriterVo carbonDataWriterVo) {
1:     switch (version) {
0:       case 2:
0:         return new CarbonFactDataWriterImpl2(carbonDataWriterVo);
0:       default:
0:         return new CarbonFactDataWriterImplForIntIndexAndAggBlock(carbonDataWriterVo);
1:     }
1:   }
1: 
1: }
author:QiangCai
-------------------------------------------------------------------------------
commit:41347d8
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
author:jackylk
-------------------------------------------------------------------------------
commit:ce09aaa
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.metadata.ColumnarFormatVersion;
commit:0ef3fb8
/////////////////////////////////////////////////////////////////////////
1: 
0: import org.apache.carbondata.core.carbon.ColumnarFormatVersion;
0: import org.apache.carbondata.processing.store.writer.v1.CarbonFactDataWriterImplV1;
0: import org.apache.carbondata.processing.store.writer.v2.CarbonFactDataWriterImplV2;
/////////////////////////////////////////////////////////////////////////
0:   public CarbonFactDataWriter<?> getFactDataWriter(final ColumnarFormatVersion version,
0:       case V2:
0:         return new CarbonFactDataWriterImplV2(carbonDataWriterVo);
1:       case V1:
0:         return new CarbonFactDataWriterImplV1(carbonDataWriterVo);
0:         throw new IllegalArgumentException("invalid format version: " + version);
author:sandy
-------------------------------------------------------------------------------
commit:c3a462c
/////////////////////////////////////////////////////////////////////////
0:         return new CarbonFactDataWriterImplV2(carbonDataWriterVo);
============================================================================