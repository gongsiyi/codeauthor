1:b13ead9: /*
1:b13ead9:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b13ead9:  * contributor license agreements.  See the NOTICE file distributed with
1:b13ead9:  * this work for additional information regarding copyright ownership.
1:b13ead9:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b13ead9:  * (the "License"); you may not use this file except in compliance with
1:b13ead9:  * the License.  You may obtain a copy of the License at
1:b13ead9:  *
1:b13ead9:  *    http://www.apache.org/licenses/LICENSE-2.0
1:b13ead9:  *
1:b13ead9:  * Unless required by applicable law or agreed to in writing, software
1:b13ead9:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b13ead9:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b13ead9:  * See the License for the specific language governing permissions and
1:b13ead9:  * limitations under the License.
1:b13ead9:  */
1:349c59c: package org.apache.carbondata.processing.loading.row;
1:b13ead9: 
1:dc83b2a: import org.apache.carbondata.core.datastore.row.CarbonRow;
1:349c59c: import org.apache.carbondata.processing.loading.sort.unsafe.merger.UnsafeSingleThreadFinalSortFilesMerger;
1:b13ead9: 
1:b13ead9: /**
1:b13ead9:  * Batch of sorted rows which are ready to be processed by
1:b13ead9:  */
1:b13ead9: public class CarbonSortBatch extends CarbonRowBatch {
1:b13ead9: 
1:b13ead9:   private UnsafeSingleThreadFinalSortFilesMerger iterator;
1:b13ead9: 
1:b13ead9:   public CarbonSortBatch(UnsafeSingleThreadFinalSortFilesMerger iterator) {
1:b13ead9:     super(0);
1:b13ead9:     this.iterator = iterator;
1:b13ead9:   }
1:b13ead9: 
1:b13ead9:   @Override public boolean hasNext() {
1:b13ead9:     return iterator.hasNext();
1:b13ead9:   }
1:b13ead9: 
1:b13ead9:   @Override public CarbonRow next() {
1:b13ead9:     return new CarbonRow(iterator.next());
1:b13ead9:   }
1:b13ead9: 
1:b13ead9:   @Override public void close() {
1:b13ead9:     iterator.close();
1:b13ead9:   }
1:b13ead9: }
============================================================================
author:Jacky Li
-------------------------------------------------------------------------------
commit:349c59c
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.processing.loading.row;
1: import org.apache.carbondata.processing.loading.sort.unsafe.merger.UnsafeSingleThreadFinalSortFilesMerger;
author:jackylk
-------------------------------------------------------------------------------
commit:dc83b2a
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.datastore.row.CarbonRow;
author:ravipesala
-------------------------------------------------------------------------------
commit:b13ead9
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.carbondata.processing.newflow.row;
1: 
0: import org.apache.carbondata.processing.newflow.sort.unsafe.merger.UnsafeSingleThreadFinalSortFilesMerger;
1: 
1: /**
1:  * Batch of sorted rows which are ready to be processed by
1:  */
1: public class CarbonSortBatch extends CarbonRowBatch {
1: 
1:   private UnsafeSingleThreadFinalSortFilesMerger iterator;
1: 
1:   public CarbonSortBatch(UnsafeSingleThreadFinalSortFilesMerger iterator) {
1:     super(0);
1:     this.iterator = iterator;
1:   }
1: 
1:   @Override public boolean hasNext() {
1:     return iterator.hasNext();
1:   }
1: 
1:   @Override public CarbonRow next() {
1:     return new CarbonRow(iterator.next());
1:   }
1: 
1:   @Override public void close() {
1:     iterator.close();
1:   }
1: }
============================================================================