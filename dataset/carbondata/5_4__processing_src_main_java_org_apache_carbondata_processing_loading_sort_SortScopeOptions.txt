1:3807b2f: /*
1:3807b2f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3807b2f:  * contributor license agreements.  See the NOTICE file distributed with
1:3807b2f:  * this work for additional information regarding copyright ownership.
1:3807b2f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3807b2f:  * (the "License"); you may not use this file except in compliance with
1:3807b2f:  * the License.  You may obtain a copy of the License at
1:3807b2f:  *
1:3807b2f:  *    http://www.apache.org/licenses/LICENSE-2.0
1:3807b2f:  *
1:3807b2f:  * Unless required by applicable law or agreed to in writing, software
1:3807b2f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3807b2f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3807b2f:  * See the License for the specific language governing permissions and
1:3807b2f:  * limitations under the License.
1:3807b2f:  */
2:3807b2f: 
1:349c59c: package org.apache.carbondata.processing.loading.sort;
1:3807b2f: 
1:3807b2f: import org.apache.carbondata.core.constants.CarbonCommonConstants;
1:3807b2f: 
1:3807b2f: /**
1:3807b2f:  * Sort scope options
1:3807b2f:  */
1:3807b2f: public class SortScopeOptions {
1:3807b2f: 
1:3807b2f:   public static SortScope getSortScope(String sortScope) {
2:3807b2f:     if (sortScope == null) {
1:3807b2f:       sortScope = CarbonCommonConstants.LOAD_SORT_SCOPE_DEFAULT;
4:3807b2f:     }
2:3807b2f:     switch (sortScope.toUpperCase()) {
2:3807b2f:       case "BATCH_SORT":
1:3807b2f:         return SortScope.BATCH_SORT;
2:3807b2f:       case "LOCAL_SORT":
1:3807b2f:         return SortScope.LOCAL_SORT;
1:82741c1:       case "GLOBAL_SORT":
1:82741c1:         return SortScope.GLOBAL_SORT;
2:3807b2f:       case "NO_SORT":
1:3807b2f:         return SortScope.NO_SORT;
2:3807b2f:       default:
1:3807b2f:         return SortScope.LOCAL_SORT;
1:3807b2f:     }
1:3807b2f:   }
1:3807b2f: 
1:3807b2f:   public enum SortScope {
1:f911403:     NO_SORT, BATCH_SORT, LOCAL_SORT, GLOBAL_SORT
1:3807b2f:   }
1:3807b2f: }
1:3807b2f: 
============================================================================
author:sraghunandan
-------------------------------------------------------------------------------
commit:f911403
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     NO_SORT, BATCH_SORT, LOCAL_SORT, GLOBAL_SORT
author:Jacky Li
-------------------------------------------------------------------------------
commit:349c59c
/////////////////////////////////////////////////////////////////////////
1: package org.apache.carbondata.processing.loading.sort;
author:mohammadshahidkhan
-------------------------------------------------------------------------------
commit:39644b5
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.util.CarbonUtil;
/////////////////////////////////////////////////////////////////////////
0:     return CarbonUtil.isValidSortOption(sortScope);
author:Yadong Qi
-------------------------------------------------------------------------------
commit:82741c1
/////////////////////////////////////////////////////////////////////////
1:       case "GLOBAL_SORT":
1:         return SortScope.GLOBAL_SORT;
/////////////////////////////////////////////////////////////////////////
0:       case "GLOBAL_SORT":
0:         return true;
/////////////////////////////////////////////////////////////////////////
0:     NO_SORT, BATCH_SORT, LOCAL_SORT, GLOBAL_SORT;
author:ravipesala
-------------------------------------------------------------------------------
commit:3807b2f
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
0: package org.apache.carbondata.processing.newflow.sort;
1: 
1: import org.apache.carbondata.core.constants.CarbonCommonConstants;
1: 
1: /**
1:  * Sort scope options
1:  */
1: public class SortScopeOptions {
1: 
1:   public static SortScope getSortScope(String sortScope) {
1:     if (sortScope == null) {
1:       sortScope = CarbonCommonConstants.LOAD_SORT_SCOPE_DEFAULT;
1:     }
1:     switch (sortScope.toUpperCase()) {
1:       case "BATCH_SORT":
1:         return SortScope.BATCH_SORT;
1:       case "LOCAL_SORT":
1:         return SortScope.LOCAL_SORT;
1:       case "NO_SORT":
1:         return SortScope.NO_SORT;
1:       default:
1:         return SortScope.LOCAL_SORT;
1:     }
1:   }
1: 
0:   public static boolean isValidSortOption(String sortScope) {
1:     if (sortScope == null) {
0:       return false;
1:     }
1:     switch (sortScope.toUpperCase()) {
1:       case "BATCH_SORT":
0:         return true;
1:       case "LOCAL_SORT":
0:         return true;
1:       case "NO_SORT":
0:         return true;
1:       default:
0:         return false;
1:     }
1:   }
1: 
1:   public enum SortScope {
0:     NO_SORT, BATCH_SORT, LOCAL_SORT;
1:   }
1: }
1: 
============================================================================