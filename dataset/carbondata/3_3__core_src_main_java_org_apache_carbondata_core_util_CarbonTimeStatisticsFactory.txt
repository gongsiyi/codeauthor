1:cd6a4ff: /*
1:cd6a4ff:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:cd6a4ff:  * contributor license agreements.  See the NOTICE file distributed with
1:cd6a4ff:  * this work for additional information regarding copyright ownership.
1:cd6a4ff:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:cd6a4ff:  * (the "License"); you may not use this file except in compliance with
1:cd6a4ff:  * the License.  You may obtain a copy of the License at
1:cd6a4ff:  *
1:cd6a4ff:  *    http://www.apache.org/licenses/LICENSE-2.0
1:cd6a4ff:  *
1:cd6a4ff:  * Unless required by applicable law or agreed to in writing, software
1:cd6a4ff:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cd6a4ff:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cd6a4ff:  * See the License for the specific language governing permissions and
1:cd6a4ff:  * limitations under the License.
1:cd6a4ff:  */
1:cd6a4ff: 
1:cd6a4ff: package org.apache.carbondata.core.util;
1:cd6a4ff: 
1:cd6a4ff: import org.apache.carbondata.core.constants.CarbonCommonConstants;
1:ce09aaa: import org.apache.carbondata.core.stats.DriverQueryStatisticsRecorderDummy;
1:ce09aaa: import org.apache.carbondata.core.stats.DriverQueryStatisticsRecorderImpl;
1:ce09aaa: import org.apache.carbondata.core.stats.QueryStatisticsRecorder;
1:ce09aaa: import org.apache.carbondata.core.stats.QueryStatisticsRecorderDummy;
1:ce09aaa: import org.apache.carbondata.core.stats.QueryStatisticsRecorderImpl;
1:cd6a4ff: 
1:cd6a4ff: public class CarbonTimeStatisticsFactory {
1:395f4a6:   private static String loadStatisticsInstanceType;
1:395f4a6:   private static LoadStatistics loadStatisticsInstance;
1:395f4a6:   private static String driverRecorderType;
1:395f4a6:   private static QueryStatisticsRecorder driverRecorder;
1:cd6a4ff: 
1:cd6a4ff:   static {
1:cd6a4ff:     CarbonTimeStatisticsFactory.updateTimeStatisticsUtilStatus();
1:395f4a6:     loadStatisticsInstance = genLoadStatisticsInstance();
1:395f4a6:     driverRecorder = genDriverRecorder();
2:cd6a4ff:   }
1:12be50b: 
1:cd6a4ff:   private static void updateTimeStatisticsUtilStatus() {
1:395f4a6:     loadStatisticsInstanceType = CarbonProperties.getInstance()
1:cd6a4ff:         .getProperty(CarbonCommonConstants.ENABLE_DATA_LOADING_STATISTICS,
1:cd6a4ff:             CarbonCommonConstants.ENABLE_DATA_LOADING_STATISTICS_DEFAULT);
1:395f4a6:     driverRecorderType = CarbonProperties.getInstance()
1:395f4a6:             .getProperty(CarbonCommonConstants.ENABLE_QUERY_STATISTICS,
1:395f4a6:                     CarbonCommonConstants.ENABLE_QUERY_STATISTICS_DEFAULT);
1:12be50b:   }
1:12be50b: 
1:cd6a4ff:   private static LoadStatistics genLoadStatisticsInstance() {
1:395f4a6:     if (loadStatisticsInstanceType.equalsIgnoreCase("true")) {
1:395f4a6:       return CarbonLoadStatisticsImpl.getInstance();
1:395f4a6:     } else {
1:395f4a6:       return CarbonLoadStatisticsDummy.getInstance();
1:12be50b:     }
1:12be50b:   }
1:cd6a4ff: 
1:cd6a4ff:   public static LoadStatistics getLoadStatisticsInstance() {
1:395f4a6:     return loadStatisticsInstance;
1:cd6a4ff:   }
1:cd6a4ff: 
1:395f4a6:   private static QueryStatisticsRecorder genDriverRecorder() {
1:395f4a6:     if (driverRecorderType.equalsIgnoreCase("true")) {
1:395f4a6:       return DriverQueryStatisticsRecorderImpl.getInstance();
1:395f4a6:     } else {
1:395f4a6:       return DriverQueryStatisticsRecorderDummy.getInstance();
1:395f4a6:     }
1:cd6a4ff:   }
1:cd6a4ff: 
1:395f4a6:   public static QueryStatisticsRecorder createDriverRecorder() {
1:395f4a6:     return driverRecorder;
1:395f4a6:   }
1:395f4a6: 
1:395f4a6:   public static QueryStatisticsRecorder createExecutorRecorder(String queryId) {
1:395f4a6:     String queryStatisticsRecorderType = CarbonProperties.getInstance()
1:395f4a6:             .getProperty(CarbonCommonConstants.ENABLE_QUERY_STATISTICS,
1:395f4a6:                     CarbonCommonConstants.ENABLE_QUERY_STATISTICS_DEFAULT);
1:395f4a6:     if (queryStatisticsRecorderType.equalsIgnoreCase("true")) {
1:395f4a6:       return new QueryStatisticsRecorderImpl(queryId);
1:395f4a6:     } else {
1:eaadc88:       return new QueryStatisticsRecorderDummy();
1:395f4a6:     }
1:cd6a4ff:   }
1:cd6a4ff: 
1:cd6a4ff: }
============================================================================
author:jackylk
-------------------------------------------------------------------------------
commit:ce09aaa
/////////////////////////////////////////////////////////////////////////
1: import org.apache.carbondata.core.stats.DriverQueryStatisticsRecorderDummy;
1: import org.apache.carbondata.core.stats.DriverQueryStatisticsRecorderImpl;
1: import org.apache.carbondata.core.stats.QueryStatisticsRecorder;
1: import org.apache.carbondata.core.stats.QueryStatisticsRecorderDummy;
1: import org.apache.carbondata.core.stats.QueryStatisticsRecorderImpl;
commit:eaadc88
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.carbon.querystatistics.DriverQueryStatisticsRecorderDummy;
0: import org.apache.carbondata.core.carbon.querystatistics.DriverQueryStatisticsRecorderImpl;
0: import org.apache.carbondata.core.carbon.querystatistics.QueryStatisticsRecorder;
0: import org.apache.carbondata.core.carbon.querystatistics.QueryStatisticsRecorderDummy;
0: import org.apache.carbondata.core.carbon.querystatistics.QueryStatisticsRecorderImpl;
/////////////////////////////////////////////////////////////////////////
1:       return new QueryStatisticsRecorderDummy();
author:foryou2030
-------------------------------------------------------------------------------
commit:395f4a6
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.carbon.querystatistics.*;
1:   private static String loadStatisticsInstanceType;
1:   private static LoadStatistics loadStatisticsInstance;
1:   private static String driverRecorderType;
1:   private static QueryStatisticsRecorder driverRecorder;
1:     loadStatisticsInstance = genLoadStatisticsInstance();
1:     driverRecorder = genDriverRecorder();
1:     loadStatisticsInstanceType = CarbonProperties.getInstance()
1:     driverRecorderType = CarbonProperties.getInstance()
1:             .getProperty(CarbonCommonConstants.ENABLE_QUERY_STATISTICS,
1:                     CarbonCommonConstants.ENABLE_QUERY_STATISTICS_DEFAULT);
1:     if (loadStatisticsInstanceType.equalsIgnoreCase("true")) {
1:       return CarbonLoadStatisticsImpl.getInstance();
1:     } else {
1:       return CarbonLoadStatisticsDummy.getInstance();
1:     return loadStatisticsInstance;
1:   private static QueryStatisticsRecorder genDriverRecorder() {
1:     if (driverRecorderType.equalsIgnoreCase("true")) {
1:       return DriverQueryStatisticsRecorderImpl.getInstance();
1:     } else {
1:       return DriverQueryStatisticsRecorderDummy.getInstance();
1:     }
1:   public static QueryStatisticsRecorder createDriverRecorder() {
1:     return driverRecorder;
1:   }
1: 
1:   public static QueryStatisticsRecorder createExecutorRecorder(String queryId) {
1:     String queryStatisticsRecorderType = CarbonProperties.getInstance()
1:             .getProperty(CarbonCommonConstants.ENABLE_QUERY_STATISTICS,
1:                     CarbonCommonConstants.ENABLE_QUERY_STATISTICS_DEFAULT);
1:     if (queryStatisticsRecorderType.equalsIgnoreCase("true")) {
1:       return new QueryStatisticsRecorderImpl(queryId);
1:     } else {
0:       return new QueryStatisticsRecorderDummy(queryId);
1:     }
commit:12be50b
/////////////////////////////////////////////////////////////////////////
0: import org.apache.carbondata.core.carbon.querystatistics.DriverQueryStatisticsRecorder;
0:   private static DriverQueryStatisticsRecorder QueryStatisticsRecorderInstance;
0:     QueryStatisticsRecorderInstance = genQueryStatisticsRecorderInstance();
/////////////////////////////////////////////////////////////////////////
0:   private static DriverQueryStatisticsRecorder genQueryStatisticsRecorderInstance() {
0:     return DriverQueryStatisticsRecorder.getInstance();
1:   }
1: 
0:   public static DriverQueryStatisticsRecorder getQueryStatisticsRecorderInstance() {
0:     return QueryStatisticsRecorderInstance;
1:   }
1: 
1: }
author:ravipesala
-------------------------------------------------------------------------------
commit:cd6a4ff
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.util;
1: 
1: import org.apache.carbondata.core.constants.CarbonCommonConstants;
1: 
1: public class CarbonTimeStatisticsFactory {
0:   private static String LoadStatisticsInstanceType;
0:   private static LoadStatistics LoadStatisticsInstance;
1: 
1:   static {
1:     CarbonTimeStatisticsFactory.updateTimeStatisticsUtilStatus();
0:     LoadStatisticsInstance = genLoadStatisticsInstance();
1:   }
1: 
1:   private static void updateTimeStatisticsUtilStatus() {
0:     LoadStatisticsInstanceType = CarbonProperties.getInstance()
1:         .getProperty(CarbonCommonConstants.ENABLE_DATA_LOADING_STATISTICS,
1:             CarbonCommonConstants.ENABLE_DATA_LOADING_STATISTICS_DEFAULT);
1:   }
1: 
1:   private static LoadStatistics genLoadStatisticsInstance() {
0:     switch (LoadStatisticsInstanceType.toLowerCase()) {
0:       case "false":
0:         return CarbonLoadStatisticsDummy.getInstance();
0:       case "true":
0:         return CarbonLoadStatisticsImpl.getInstance();
0:       default:
0:         return CarbonLoadStatisticsDummy.getInstance();
1:     }
1:   }
1: 
1:   public static LoadStatistics getLoadStatisticsInstance() {
0:     return LoadStatisticsInstance;
1:   }
1: 
1: }
============================================================================