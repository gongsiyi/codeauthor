1:181c280: /*
1:181c280:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:181c280:  * contributor license agreements.  See the NOTICE file distributed with
1:181c280:  * this work for additional information regarding copyright ownership.
1:181c280:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:181c280:  * (the "License"); you may not use this file except in compliance with
1:181c280:  * the License.  You may obtain a copy of the License at
1:181c280:  *
1:181c280:  *    http://www.apache.org/licenses/LICENSE-2.0
1:181c280:  *
1:181c280:  * Unless required by applicable law or agreed to in writing, software
1:181c280:  * distributed under the License is distributed on an "AS IS" BASIS,
1:181c280:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:181c280:  * See the License for the specific language governing permissions and
1:181c280:  * limitations under the License.
1:181c280:  */
1:181c280: 
1:181c280: package org.apache.carbondata.core.metadata.schema.datamap;
1:181c280: 
1:181c280: /**
1:181c280:  * type for create datamap
1:181c280:  * The syntax of datamap creation is as follows.
1:181c280:  * CREATE DATAMAP IF NOT EXISTS dataMapName ON TABLE tableName USING 'DataMapProvider'
1:181c280:  * DMPROPERTIES('KEY'='VALUE') AS SELECT COUNT(COL1) FROM tableName
1:181c280:  *
1:181c280:  * Please refer {{org.apache.spark.sql.parser.CarbonSpark2SqlParser}}
1:181c280:  */
1:181c280: 
1:181c280: public enum Granularity {
1:181c280:   YEAR("year_granularity"),
1:181c280:   MONTH("month_granularity"),
1:181c280:   DAY("day_granularity"),
1:181c280:   HOUR("hour_granularity"),
1:181c280:   MINUTE("minute_granularity"),
1:181c280:   SECOND("second_granularity");
1:181c280:   private String name;
1:181c280: 
1:181c280:   Granularity(String name) {
1:181c280:     this.name = name;
1:181c280:   }
1:181c280: 
1:181c280:   public String getName() {
1:181c280:     return name;
1:181c280:   }
1:181c280: 
1:181c280: }
============================================================================
author:xubo245
-------------------------------------------------------------------------------
commit:181c280
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *    http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.carbondata.core.metadata.schema.datamap;
1: 
1: /**
1:  * type for create datamap
1:  * The syntax of datamap creation is as follows.
1:  * CREATE DATAMAP IF NOT EXISTS dataMapName ON TABLE tableName USING 'DataMapProvider'
1:  * DMPROPERTIES('KEY'='VALUE') AS SELECT COUNT(COL1) FROM tableName
1:  *
1:  * Please refer {{org.apache.spark.sql.parser.CarbonSpark2SqlParser}}
1:  */
1: 
1: public enum Granularity {
1:   YEAR("year_granularity"),
1:   MONTH("month_granularity"),
1:   DAY("day_granularity"),
1:   HOUR("hour_granularity"),
1:   MINUTE("minute_granularity"),
1:   SECOND("second_granularity");
1:   private String name;
1: 
1:   Granularity(String name) {
1:     this.name = name;
1:   }
1: 
1:   public String getName() {
1:     return name;
1:   }
1: 
1: }
============================================================================