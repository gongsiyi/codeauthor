1:f4de9a6: /**
1:f4de9a6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f4de9a6:  * contributor license agreements.  See the NOTICE file distributed with
1:f4de9a6:  * this work for additional information regarding copyright ownership.
1:f4de9a6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f4de9a6:  * (the "License"); you may not use this file except in compliance with
1:f4de9a6:  * the License.  You may obtain a copy of the License at
1:f4de9a6:  *
1:f4de9a6:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f4de9a6:  *
1:f4de9a6:  * Unless required by applicable law or agreed to in writing, software
1:f4de9a6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f4de9a6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f4de9a6:  * See the License for the specific language governing permissions and
1:f4de9a6:  * limitations under the License.
1:f4de9a6:  */
1:f4de9a6: package org.apache.activemq.transport.wss;
2:f4de9a6: 
1:3f82625: import org.apache.activemq.transport.SecureSocketConnectorFactory;
1:f4de9a6: import org.apache.activemq.transport.ws.WSTransportTest;
1:f4de9a6: import org.eclipse.jetty.server.Connector;
1:bc2e2d9: import org.eclipse.jetty.server.Server;
1:f44c3d2: import org.eclipse.jetty.server.ServerConnector;
1:f40532a: import org.eclipse.jetty.util.ssl.SslContextFactory;
1:f40532a: import org.junit.Test;
1:f4de9a6: 
1:f4de9a6: public class WSSTransportTest extends WSTransportTest {
1:f4de9a6:     @Override
1:3f82625:     protected Connector createJettyConnector(Server server) throws Exception {
1:3f82625:         SecureSocketConnectorFactory sscf = new SecureSocketConnectorFactory();
1:3f82625:         sscf.setKeyStore("src/test/resources/server.keystore");
1:3f82625:         sscf.setKeyStorePassword("password");
1:3f82625:         sscf.setTrustStore("src/test/resources/client.keystore");
1:3f82625:         sscf.setTrustStorePassword("password");
1:f44c3d2: 
1:f44c3d2:         ServerConnector c = (ServerConnector) sscf.createConnector(server);
1:f44c3d2:         c.setPort(getProxyPort());
1:3f82625:         return c;
1:f4de9a6:     }
1:3f82625: 
1:f4de9a6:     @Override
1:f4de9a6:     protected String getWSConnectorURI() {
1:f40532a:         return "wss://localhost:" + port;
1:f40532a:     }
1:f40532a: 
1:f40532a:     @Override
1:f40532a:     @Test(timeout=10000)
1:f40532a:     public void testGet() throws Exception {
1:f40532a:         SslContextFactory factory = new SslContextFactory();
1:f40532a:         factory.setSslContext(broker.getSslContext().getSSLContext());
1:f40532a: 
1:f40532a:         testGet("https://127.0.0.1:" + port, factory);
1:f4de9a6:     }
1:f4de9a6: 
1:f4de9a6:     @Override
1:f4de9a6:     protected String getTestURI() {
1:f40532a:         int proxyPort = getProxyPort();
1:f40532a:         return "https://localhost:" + proxyPort + "/websocket.html#wss://localhost:" + port;
1:f4de9a6:     }
1:f4de9a6: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:f40532a
/////////////////////////////////////////////////////////////////////////
1: import org.eclipse.jetty.util.ssl.SslContextFactory;
1: import org.junit.Test;
/////////////////////////////////////////////////////////////////////////
1:         return "wss://localhost:" + port;
1:     }
1: 
1:     @Override
1:     @Test(timeout=10000)
1:     public void testGet() throws Exception {
1:         SslContextFactory factory = new SslContextFactory();
1:         factory.setSslContext(broker.getSslContext().getSSLContext());
1: 
1:         testGet("https://127.0.0.1:" + port, factory);
1:         int proxyPort = getProxyPort();
1:         return "https://localhost:" + proxyPort + "/websocket.html#wss://localhost:" + port;
commit:f44c3d2
/////////////////////////////////////////////////////////////////////////
1: import org.eclipse.jetty.server.ServerConnector;
/////////////////////////////////////////////////////////////////////////
1: 
1:         ServerConnector c = (ServerConnector) sscf.createConnector(server);
1:         c.setPort(getProxyPort());
author:Daniel Kulp
-------------------------------------------------------------------------------
commit:3f82625
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.SecureSocketConnectorFactory;
1:     protected Connector createJettyConnector(Server server) throws Exception {
1:         SecureSocketConnectorFactory sscf = new SecureSocketConnectorFactory();
1:         sscf.setKeyStore("src/test/resources/server.keystore");
1:         sscf.setKeyStorePassword("password");
1:         sscf.setTrustStore("src/test/resources/client.keystore");
1:         sscf.setTrustStorePassword("password");
1:         
0:         Connector c = sscf.createConnector(server);
0:         c.getClass().getMethod("setPort", Integer.TYPE).invoke(c, getProxyPort());
1:         return c;
commit:bc2e2d9
/////////////////////////////////////////////////////////////////////////
1: import org.eclipse.jetty.server.Server;
0:     protected Connector createJettyConnector(Server server) {
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:4bf5d0f
/////////////////////////////////////////////////////////////////////////
0:         sslConnector.setPort(getProxyPort());
/////////////////////////////////////////////////////////////////////////
0:         int port = getProxyPort();
0:         return "https://localhost:" + port + "/websocket.html#wss://localhost:61623";
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:f4de9a6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.wss;
1: 
1: import org.apache.activemq.transport.ws.WSTransportTest;
1: import org.eclipse.jetty.server.Connector;
0: import org.eclipse.jetty.server.ssl.SslSocketConnector;
0: import org.eclipse.jetty.util.ssl.SslContextFactory;
1: 
1: public class WSSTransportTest extends WSTransportTest {
1:     @Override
0:     protected Connector createJettyConnector() {
0:         SslSocketConnector sslConnector = new SslSocketConnector();
0:         SslContextFactory contextFactory = sslConnector.getSslContextFactory();
0:         contextFactory.setKeyStorePath("src/test/resources/server.keystore");
0:         contextFactory.setKeyStorePassword("password");
0:         contextFactory.setTrustStore("src/test/resources/client.keystore");
0:         contextFactory.setTrustStorePassword("password");
0:         sslConnector.setPort(8080);
0:         return sslConnector;
1:     }
1: 
1:     @Override
1:     protected String getWSConnectorURI() {
0:         return "wss://localhost:61623";
1:     }
1: 
1:     @Override
1:     protected String getTestURI() {
0:         return "https://localhost:8080/websocket.html#wss://localhost:61623";
1:     }
1: }
============================================================================