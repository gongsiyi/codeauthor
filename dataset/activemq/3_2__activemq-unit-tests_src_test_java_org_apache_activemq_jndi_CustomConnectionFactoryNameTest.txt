1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.jndi;
3:d29ca2a: 
1:d29ca2a: import javax.naming.NamingException;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.ActiveMQConnectionFactory;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Test case for AMQ-141
1:c7d559f:  *
1:b0c2a40:  *
1:d29ca2a:  */
1:d29ca2a: public class CustomConnectionFactoryNameTest extends ActiveMQInitialContextFactoryTest {
1:c7d559f: 
1:c7d559f:     @Override
1:d29ca2a:     public void testConnectionFactoriesArePresent() throws NamingException {
1:d29ca2a:         super.testConnectionFactoriesArePresent();
1:d29ca2a:         assertConnectionFactoryPresent("jms/Connection");
1:d29ca2a:         assertConnectionFactoryPresent("jms/DURABLE_SUB_CONNECTION_FACTORY");
1:d29ca2a:     }
1:c7d559f: 
1:d29ca2a:     public void testConnectionFactoriesAreConfigured() throws NamingException {
1:d29ca2a:         super.testConnectionFactoriesArePresent();
1:d29ca2a:         ActiveMQConnectionFactory factory1 = (ActiveMQConnectionFactory) context.lookup("jms/Connection");
1:d29ca2a:         assertNull(factory1.getClientID());
1:d29ca2a:         ActiveMQConnectionFactory factory2 = (ActiveMQConnectionFactory) context.lookup("jms/DURABLE_SUB_CONNECTION_FACTORY");
1:d29ca2a:         assertEquals("testclient", factory2.getClientID());
1:d29ca2a:     }
1:d29ca2a: 
1:c7d559f:     @Override
1:d29ca2a:     protected String getConnectionFactoryLookupName() {
1:d29ca2a:         return "myConnectionFactory";
1:d29ca2a:     }
1:d29ca2a: 
1:c7d559f:     @Override
1:d29ca2a:     protected void configureEnvironment() {
1:d29ca2a:         super.configureEnvironment();
1:d29ca2a:         environment.put("connectionFactoryNames", " myConnectionFactory, jms/Connection, jms/DURABLE_SUB_CONNECTION_FACTORY");
1:d29ca2a:         environment.put("connection.jms/DURABLE_SUB_CONNECTION_FACTORY.clientID", "testclient");
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:c7d559f
/////////////////////////////////////////////////////////////////////////
1:  *
1: 
1:     @Override
1: 
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.jndi;
1: 
1: import javax.naming.NamingException;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: 
1: /**
1:  * Test case for AMQ-141
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class CustomConnectionFactoryNameTest extends ActiveMQInitialContextFactoryTest {
1:     
1:     public void testConnectionFactoriesArePresent() throws NamingException {
1:         super.testConnectionFactoriesArePresent();
1:         assertConnectionFactoryPresent("jms/Connection");
1:         assertConnectionFactoryPresent("jms/DURABLE_SUB_CONNECTION_FACTORY");
1:     }
1:     
1:     public void testConnectionFactoriesAreConfigured() throws NamingException {
1:         super.testConnectionFactoriesArePresent();
1:         ActiveMQConnectionFactory factory1 = (ActiveMQConnectionFactory) context.lookup("jms/Connection");
1:         assertNull(factory1.getClientID());
1:         ActiveMQConnectionFactory factory2 = (ActiveMQConnectionFactory) context.lookup("jms/DURABLE_SUB_CONNECTION_FACTORY");
1:         assertEquals("testclient", factory2.getClientID());
1:     }
1: 
1:     protected String getConnectionFactoryLookupName() {
1:         return "myConnectionFactory";
1:     }
1: 
1:     protected void configureEnvironment() {
1:         super.configureEnvironment();
1:         environment.put("connectionFactoryNames", " myConnectionFactory, jms/Connection, jms/DURABLE_SUB_CONNECTION_FACTORY");
1:         environment.put("connection.jms/DURABLE_SUB_CONNECTION_FACTORY.clientID", "testclient");
1:     }
1: }
============================================================================