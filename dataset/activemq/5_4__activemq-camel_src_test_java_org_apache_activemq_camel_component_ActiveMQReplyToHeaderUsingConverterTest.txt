1:5f96839: /**
1:5f96839:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:5f96839:  * contributor license agreements.  See the NOTICE file distributed with
1:5f96839:  * this work for additional information regarding copyright ownership.
1:5f96839:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:5f96839:  * (the "License"); you may not use this file except in compliance with
1:5f96839:  * the License.  You may obtain a copy of the License at
1:5f96839:  *
1:5f96839:  *      http://www.apache.org/licenses/LICENSE-2.0
1:5f96839:  *
1:5f96839:  * Unless required by applicable law or agreed to in writing, software
1:5f96839:  * distributed under the License is distributed on an "AS IS" BASIS,
1:5f96839:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:5f96839:  * See the License for the specific language governing permissions and
1:5f96839:  * limitations under the License.
1:5f96839:  */
1:5f96839: package org.apache.activemq.camel.component;
1:5f96839: 
1:5f96839: import java.util.Date;
1:5f96839: import java.util.HashMap;
1:5f96839: import java.util.List;
1:5f96839: import java.util.Map;
1:5f96839: 
1:5f96839: import javax.jms.Destination;
1:5f96839: 
1:5f96839: import static org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent;
1:0b6cd58: import org.apache.activemq.camel.converter.ActiveMQConverter;
1:5f96839: import org.apache.camel.CamelContext;
1:5f96839: import org.apache.camel.Exchange;
1:5f96839: import org.apache.camel.Message;
1:5f96839: import org.apache.camel.builder.RouteBuilder;
1:5f96839: import org.apache.camel.component.mock.AssertionClause;
1:5f96839: import org.apache.camel.component.mock.MockEndpoint;
1:5e6f8a1: import org.apache.camel.test.junit4.CamelTestSupport;
1:5e6f8a1: import org.junit.Test;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:5f96839: 
1:5f96839: /**
1:0bbc0ac:  * 
1:5f96839:  */
1:5e6f8a1: public class ActiveMQReplyToHeaderUsingConverterTest extends CamelTestSupport {
1:8bf987b:     private static final transient Logger LOG = LoggerFactory.getLogger(ActiveMQReplyToHeaderUsingConverterTest.class);
1:5f96839:     protected Object expectedBody = "<time>" + new Date() + "</time>";
1:5f96839:     protected String replyQueueName = "queue://test.my.reply.queue";
1:5f96839:     protected String correlationID = "ABC-123";
1:5f96839:     protected String groupID = "GROUP-XYZ";
1:5f96839:     protected String messageType = getClass().getName();
1:0b6cd58:     protected boolean useReplyToHeader = false;
1:5f96839: 
1:5e6f8a1:     @Test
1:5f96839:     public void testSendingAMessageFromCamelSetsCustomJmsHeaders() throws Exception {
1:5f96839:         MockEndpoint resultEndpoint = resolveMandatoryEndpoint("mock:result", MockEndpoint.class);
1:5f96839: 
1:5f96839:         resultEndpoint.expectedBodiesReceived(expectedBody);
1:5f96839:         AssertionClause firstMessage = resultEndpoint.message(0);
1:5f96839:         firstMessage.header("cheese").isEqualTo(123);
1:5f96839:         firstMessage.header("JMSCorrelationID").isEqualTo(correlationID);
1:0b6cd58:         if (useReplyToHeader) {
1:5f96839:             firstMessage.header("JMSReplyTo").isEqualTo(ActiveMQConverter.toDestination(replyQueueName));
1:0b6cd58:         }
1:5f96839:         firstMessage.header("JMSType").isEqualTo(messageType);
1:5f96839:         firstMessage.header("JMSXGroupID").isEqualTo(groupID);
1:5f96839: 
1:5f96839:         Map<String, Object> headers = new HashMap<String, Object>();
1:5f96839:         headers.put("cheese", 123);
1:0b6cd58:         if (useReplyToHeader) {
1:5f96839:             headers.put("JMSReplyTo", replyQueueName);
1:8bf987b:         }
1:5f96839:         headers.put("JMSCorrelationID", correlationID);
1:5f96839:         headers.put("JMSType", messageType);
1:5f96839:         headers.put("JMSXGroupID", groupID);
1:5f96839:         template.sendBodyAndHeaders("activemq:test.a", expectedBody, headers);
1:5f96839: 
1:5f96839:         resultEndpoint.assertIsSatisfied();
1:5f96839: 
1:5f96839:         List<Exchange> list = resultEndpoint.getReceivedExchanges();
1:5f96839:         Exchange exchange = list.get(0);
1:5f96839:         Message in = exchange.getIn();
1:5f96839:         Object replyTo = in.getHeader("JMSReplyTo");
1:5f96839:         LOG.info("Reply to is: " + replyTo);
1:0b6cd58:         if (useReplyToHeader) {
1:5f96839:             Destination destination = assertIsInstanceOf(Destination.class, replyTo);
1:5f96839:             assertEquals("ReplyTo", replyQueueName, destination.toString());
1:0b6cd58:         }
1:5f96839: 
1:5f96839:         assertMessageHeader(in, "cheese", 123);
1:5f96839:         assertMessageHeader(in, "JMSCorrelationID", correlationID);
1:5f96839:         assertMessageHeader(in, "JMSType", messageType);
1:5f96839:         assertMessageHeader(in, "JMSXGroupID", groupID);
1:5f96839:     }
1:5f96839: 
1:5f96839:     protected CamelContext createCamelContext() throws Exception {
1:5f96839:         CamelContext camelContext = super.createCamelContext();
1:5f96839: 
1:5f96839:         // START SNIPPET: example
1:5f96839:         camelContext.addComponent("activemq", activeMQComponent("vm://localhost?broker.persistent=false"));
1:5f96839:         // END SNIPPET: example
1:5f96839: 
1:5f96839:         return camelContext;
1:5f96839:     }
1:5f96839: 
1:5f96839:     protected RouteBuilder createRouteBuilder() throws Exception {
1:5f96839:         return new RouteBuilder() {
1:5f96839:             public void configure() throws Exception {
1:d2e9236:                 from("activemq:test.a").to("activemq:test.b?preserveMessageQos=true");
1:5f96839: 
1:5f96839:                 from("activemq:test.b").to("mock:result");
1:5f96839:             }
1:5f96839:         };
1:5f96839:     }
1:5f96839: }
============================================================================
author:Willem Ning Jiang
-------------------------------------------------------------------------------
commit:5e6f8a1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.camel.test.junit4.CamelTestSupport;
1: import org.junit.Test;
1: public class ActiveMQReplyToHeaderUsingConverterTest extends CamelTestSupport {
/////////////////////////////////////////////////////////////////////////
1:     @Test
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:5f96839
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.camel.component;
1: 
0: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.camel.CamelContext;
0: import org.apache.camel.ContextTestSupport;
1: import org.apache.camel.Exchange;
1: import org.apache.camel.Message;
1: import org.apache.camel.builder.RouteBuilder;
1: import static org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent;
1: import org.apache.camel.component.mock.AssertionClause;
1: import org.apache.camel.component.mock.MockEndpoint;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
1: import javax.jms.Destination;
1: import java.util.Date;
1: import java.util.HashMap;
1: import java.util.List;
1: import java.util.Map;
1: 
1: /**
0:  * @version $Revision$
1:  */
0: public class ActiveMQReplyToHeaderUsingConverterTest extends ContextTestSupport {
0:     private static final transient Log LOG = LogFactory.getLog(ActiveMQReplyToHeaderUsingConverterTest.class);
1: 
1:     protected Object expectedBody = "<time>" + new Date() + "</time>";
1:     protected String replyQueueName = "queue://test.my.reply.queue";
1:     protected String correlationID = "ABC-123";
1:     protected String groupID = "GROUP-XYZ";
1:     protected String messageType = getClass().getName();
1: 
1:     public void testSendingAMessageFromCamelSetsCustomJmsHeaders() throws Exception {
1:         MockEndpoint resultEndpoint = resolveMandatoryEndpoint("mock:result", MockEndpoint.class);
1: 
1:         resultEndpoint.expectedBodiesReceived(expectedBody);
1:         AssertionClause firstMessage = resultEndpoint.message(0);
1:         firstMessage.header("cheese").isEqualTo(123);
1:         firstMessage.header("JMSCorrelationID").isEqualTo(correlationID);
1:         firstMessage.header("JMSReplyTo").isEqualTo(ActiveMQConverter.toDestination(replyQueueName));
1:         firstMessage.header("JMSType").isEqualTo(messageType);
1:         firstMessage.header("JMSXGroupID").isEqualTo(groupID);
1: 
1:         Map<String, Object> headers = new HashMap<String, Object>();
1:         headers.put("cheese", 123);
1:         headers.put("JMSReplyTo", replyQueueName);
1:         headers.put("JMSCorrelationID", correlationID);
1:         headers.put("JMSType", messageType);
1:         headers.put("JMSXGroupID", groupID);
1:         template.sendBodyAndHeaders("activemq:test.a", expectedBody, headers);
1: 
1:         resultEndpoint.assertIsSatisfied();
1: 
1:         List<Exchange> list = resultEndpoint.getReceivedExchanges();
1:         Exchange exchange = list.get(0);
1:         Message in = exchange.getIn();
1:         Object replyTo = in.getHeader("JMSReplyTo");
1:         LOG.info("Reply to is: " + replyTo);
1:         Destination destination = assertIsInstanceOf(Destination.class, replyTo);
1:         assertEquals("ReplyTo", replyQueueName, destination.toString());
1: 
1:         assertMessageHeader(in, "cheese", 123);
1:         assertMessageHeader(in, "JMSCorrelationID", correlationID);
1:         assertMessageHeader(in, "JMSType", messageType);
1:         assertMessageHeader(in, "JMSXGroupID", groupID);
1:     }
1: 
1:     protected CamelContext createCamelContext() throws Exception {
1:         CamelContext camelContext = super.createCamelContext();
1: 
1:         // START SNIPPET: example
1:         camelContext.addComponent("activemq", activeMQComponent("vm://localhost?broker.persistent=false"));
1:         // END SNIPPET: example
1: 
1:         return camelContext;
1:     }
1: 
1:     protected RouteBuilder createRouteBuilder() throws Exception {
1:         return new RouteBuilder() {
1:             public void configure() throws Exception {
0:                 from("activemq:test.a").to("activemq:test.b");
1: 
1:                 from("activemq:test.b").to("mock:result");
1:             }
1:         };
1:     }
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final transient Logger LOG = LoggerFactory.getLogger(ActiveMQReplyToHeaderUsingConverterTest.class);
/////////////////////////////////////////////////////////////////////////
1: }
commit:d2e9236
/////////////////////////////////////////////////////////////////////////
1:                 from("activemq:test.a").to("activemq:test.b?preserveMessageQos=true");
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:702e2a0
author:James Strachan
-------------------------------------------------------------------------------
commit:0b6cd58
/////////////////////////////////////////////////////////////////////////
0: import java.util.Date;
0: import java.util.HashMap;
0: import java.util.List;
0: import java.util.Map;
0: 
0: import javax.jms.Destination;
0: 
0: import static org.apache.activemq.camel.component.ActiveMQComponent.activeMQComponent;
1: import org.apache.activemq.camel.converter.ActiveMQConverter;
1:     protected boolean useReplyToHeader = false;
/////////////////////////////////////////////////////////////////////////
1:         if (useReplyToHeader) {
0:             firstMessage.header("JMSReplyTo").isEqualTo(ActiveMQConverter.toDestination(replyQueueName));
1:         }
1:         if (useReplyToHeader) {
0:             headers.put("JMSReplyTo", replyQueueName);
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (useReplyToHeader) {
0:             Destination destination = assertIsInstanceOf(Destination.class, replyTo);
0:             assertEquals("ReplyTo", replyQueueName, destination.toString());
0:         }
commit:810375a
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.camel.converter.ActiveMQConverter;
============================================================================