1:ab28b31: /**
1:ab28b31:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:ab28b31:  * contributor license agreements.  See the NOTICE file distributed with
1:ab28b31:  * this work for additional information regarding copyright ownership.
1:ab28b31:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:ab28b31:  * (the "License"); you may not use this file except in compliance with
1:ab28b31:  * the License.  You may obtain a copy of the License at
1:ab28b31:  *
1:ab28b31:  *      http://www.apache.org/licenses/LICENSE-2.0
1:ab28b31:  *
1:ab28b31:  * Unless required by applicable law or agreed to in writing, software
1:ab28b31:  * distributed under the License is distributed on an "AS IS" BASIS,
1:ab28b31:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:ab28b31:  * See the License for the specific language governing permissions and
1:ab28b31:  * limitations under the License.
1:ab28b31:  */
1:af159dd: package org.apache.activemq.blob;
1:af159dd: 
1:af159dd: import java.net.MalformedURLException;
1:af159dd: import java.net.URL;
1:af159dd: 
1:af159dd: import javax.jms.JMSException;
1:af159dd: 
1:af159dd: import org.apache.activemq.command.ActiveMQBlobMessage;
1:af159dd: 
1:af159dd: public class DefaultStrategy {
1:af159dd:     
1:af159dd:     protected BlobTransferPolicy transferPolicy;
1:af159dd: 
1:af159dd:     public DefaultStrategy(BlobTransferPolicy transferPolicy) {
1:af159dd:         this.transferPolicy = transferPolicy;
1:af159dd:     }
1:af159dd: 
1:af159dd:     protected boolean isSuccessfulCode(int responseCode) {
1:af159dd:         return responseCode >= 200 && responseCode < 300; // 2xx => successful
1:af159dd:     }
1:af159dd: 
1:af159dd:     protected URL createMessageURL(ActiveMQBlobMessage message) throws JMSException, MalformedURLException {
1:af159dd:         return new URL(transferPolicy.getUploadUrl() + message.getMessageId().toString());
1:af159dd:     }
1:af159dd:     
1:af159dd: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:ab28b31
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:af159dd
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.blob;
1: 
1: import java.net.MalformedURLException;
1: import java.net.URL;
1: 
1: import javax.jms.JMSException;
1: 
1: import org.apache.activemq.command.ActiveMQBlobMessage;
1: 
1: public class DefaultStrategy {
1:     
1:     protected BlobTransferPolicy transferPolicy;
1: 
1:     public DefaultStrategy(BlobTransferPolicy transferPolicy) {
1:         this.transferPolicy = transferPolicy;
1:     }
1: 
1:     protected boolean isSuccessfulCode(int responseCode) {
1:         return responseCode >= 200 && responseCode < 300; // 2xx => successful
1:     }
1: 
1:     protected URL createMessageURL(ActiveMQBlobMessage message) throws JMSException, MalformedURLException {
1:         return new URL(transferPolicy.getUploadUrl() + message.getMessageId().toString());
1:     }
1:     
1: }
============================================================================