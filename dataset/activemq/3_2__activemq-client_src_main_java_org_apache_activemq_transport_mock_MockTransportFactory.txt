1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.transport.mock;
4:d29ca2a: 
1:d29ca2a: import java.io.IOException;
1:d29ca2a: import java.net.URI;
1:d29ca2a: import java.net.URISyntaxException;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.transport.MutexTransport;
1:d29ca2a: import org.apache.activemq.transport.ResponseCorrelator;
1:d29ca2a: import org.apache.activemq.transport.Transport;
1:d29ca2a: import org.apache.activemq.transport.TransportFactory;
1:d29ca2a: import org.apache.activemq.transport.TransportServer;
1:d29ca2a: import org.apache.activemq.util.IntrospectionSupport;
1:d29ca2a: import org.apache.activemq.util.URISupport;
1:d29ca2a: import org.apache.activemq.util.URISupport.CompositeData;
1:d29ca2a: 
1:d29ca2a: public class MockTransportFactory extends TransportFactory {
1:d29ca2a: 
1:d8c0ff1:     @Override
1:d29ca2a:     public Transport doConnect(URI location) throws URISyntaxException, Exception {
1:d29ca2a:         Transport transport = createTransport(URISupport.parseComposite(location));
1:f812e34:         transport = new MutexTransport(transport);
1:d29ca2a:         transport = new ResponseCorrelator(transport);
1:d29ca2a:         return transport;
1:d29ca2a:     }
1:f812e34: 
1:d8c0ff1:     @Override
1:d29ca2a:     public Transport doCompositeConnect(URI location) throws URISyntaxException, Exception {
1:d29ca2a:         return createTransport(URISupport.parseComposite(location));
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     /**
1:d29ca2a:      * @param location
1:d8c0ff1:      * @return a new Transport instance.
1:f812e34:      * @throws Exception
1:d29ca2a:      */
1:d29ca2a:     public Transport createTransport(CompositeData compositData) throws Exception {
1:f812e34:         MockTransport transport = new MockTransport(TransportFactory.compositeConnect(compositData.getComponents()[0]));
1:d29ca2a:         IntrospectionSupport.setProperties(transport, compositData.getParameters());
1:d29ca2a:         return transport;
1:d29ca2a:     }
1:d29ca2a: 
1:d8c0ff1:     @Override
1:5d99c99:     public TransportServer doBind(URI location) throws IOException {
1:d29ca2a:         throw new IOException("This protocol does not support being bound.");
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Timothy Bish
-------------------------------------------------------------------------------
commit:d8c0ff1
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:      * @return a new Transport instance.
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:5d99c99
/////////////////////////////////////////////////////////////////////////
1:     public TransportServer doBind(URI location) throws IOException {
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1:         transport = new MutexTransport(transport);
1: 
1: 
0:      * @return
1:      * @throws Exception
1:         MockTransport transport = new MockTransport(TransportFactory.compositeConnect(compositData.getComponents()[0]));
0:     public TransportServer doBind(String brokerId, URI location) throws IOException {
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.mock;
1: 
1: import java.io.IOException;
1: import java.net.URI;
1: import java.net.URISyntaxException;
1: 
1: import org.apache.activemq.transport.MutexTransport;
1: import org.apache.activemq.transport.ResponseCorrelator;
1: import org.apache.activemq.transport.Transport;
1: import org.apache.activemq.transport.TransportFactory;
1: import org.apache.activemq.transport.TransportServer;
1: import org.apache.activemq.util.IntrospectionSupport;
1: import org.apache.activemq.util.URISupport;
1: import org.apache.activemq.util.URISupport.CompositeData;
1: 
1: public class MockTransportFactory extends TransportFactory {
1: 
1:     public Transport doConnect(URI location) throws URISyntaxException, Exception {
1:         Transport transport = createTransport(URISupport.parseComposite(location));
0:         transport =  new MutexTransport(transport);
1:         transport = new ResponseCorrelator(transport);
1:         return transport;
1:     }
1:     
1:     public Transport doCompositeConnect(URI location) throws URISyntaxException, Exception {
1:         return createTransport(URISupport.parseComposite(location));
1:     }
1:     
1:     /**
1:      * @param location
0:      * @return 
0:      * @throws Exception 
1:      */
1:     public Transport createTransport(CompositeData compositData) throws Exception {
0:         MockTransport transport = new MockTransport( TransportFactory.compositeConnect(compositData.getComponents()[0]) );
1:         IntrospectionSupport.setProperties(transport, compositData.getParameters());
1:         return transport;
1:     }
1: 
0:     public TransportServer doBind(String brokerId,URI location) throws IOException {
1:         throw new IOException("This protocol does not support being bound.");
1:     }
1: 
1: }
============================================================================