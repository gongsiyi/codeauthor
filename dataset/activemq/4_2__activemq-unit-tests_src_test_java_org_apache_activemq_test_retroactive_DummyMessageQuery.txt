1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.test.retroactive;
2:d29ca2a: 
1:93dc39b: import javax.jms.MessageListener;
1:93dc39b: 
1:d29ca2a: import org.apache.activemq.broker.region.policy.MessageQuery;
1:d29ca2a: import org.apache.activemq.command.ActiveMQDestination;
1:d29ca2a: import org.apache.activemq.command.ActiveMQTextMessage;
1:d29ca2a: import org.apache.activemq.command.Message;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:d29ca2a: 
1:d29ca2a: /**
1:0bbc0ac:  *
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public class DummyMessageQuery implements MessageQuery {
1:93dc39b:     
1:ecf89a6:     public static final int MESSAGE_COUNT = 10;
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(DummyMessageQuery.class);
1:d29ca2a: 
1:d29ca2a:     
1:d29ca2a:     public void execute(ActiveMQDestination destination, MessageListener listener) throws Exception {
1:fc00993:         LOG.info("Initial query is creating: " + MESSAGE_COUNT + " messages");
1:fc00993:         for (int i = 0; i < MESSAGE_COUNT; i++) {
1:d29ca2a:             ActiveMQTextMessage message = new ActiveMQTextMessage();
1:d29ca2a:             message.setText("Initial message: " + i + " loaded from query");
1:d29ca2a:             listener.onMessage(message);
1:d29ca2a:         }
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public boolean validateUpdate(Message message) {
1:d29ca2a:         return true;
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:ecf89a6
/////////////////////////////////////////////////////////////////////////
1:     public static final int MESSAGE_COUNT = 10;
commit:fc00993
/////////////////////////////////////////////////////////////////////////
0:     private static final Log LOG = LogFactory.getLog(DummyMessageQuery.class);
0:     public static final int MESSAGE_COUNT = 10;
1:         LOG.info("Initial query is creating: " + MESSAGE_COUNT + " messages");
1:         for (int i = 0; i < MESSAGE_COUNT; i++) {
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:93dc39b
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.MessageListener;
1: 
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1:     
0:     protected static final Log log = LogFactory.getLog(DummyMessageQuery.class);
0:         log.info("Initial query is creating: " + messageCount + " messages");
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.test.retroactive;
1: 
1: import org.apache.activemq.broker.region.policy.MessageQuery;
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.ActiveMQTextMessage;
1: import org.apache.activemq.command.Message;
1: 
0: import javax.jms.MessageListener;
1: 
1: /**
1:  *
0:  * @version $Revision$
1:  */
1: public class DummyMessageQuery implements MessageQuery {
1: 
0:     public static int messageCount = 10;
1:     
1:     public void execute(ActiveMQDestination destination, MessageListener listener) throws Exception {
0:         System.out.println("Initial query is creating: " + messageCount + " messages");
0:         for (int i = 0; i < messageCount; i++) {
1:             ActiveMQTextMessage message = new ActiveMQTextMessage();
1:             message.setText("Initial message: " + i + " loaded from query");
1:             listener.onMessage(message);
1:         }
1:     }
1: 
1:     public boolean validateUpdate(Message message) {
1:         return true;
1:     }
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static final Logger LOG = LoggerFactory.getLogger(DummyMessageQuery.class);
author:Robert Davies
-------------------------------------------------------------------------------
commit:d36c0d4
/////////////////////////////////////////////////////////////////////////
0:     public static final int messageCount = 10;
============================================================================