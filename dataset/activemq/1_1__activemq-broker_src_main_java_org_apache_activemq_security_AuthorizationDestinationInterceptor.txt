1:a38a7c0: /**
1:a38a7c0:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a38a7c0:  * contributor license agreements.  See the NOTICE file distributed with
1:a38a7c0:  * this work for additional information regarding copyright ownership.
1:a38a7c0:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a38a7c0:  * (the "License"); you may not use this file except in compliance with
1:a38a7c0:  * the License.  You may obtain a copy of the License at
1:a38a7c0:  *
1:a38a7c0:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a38a7c0:  *
1:a38a7c0:  * Unless required by applicable law or agreed to in writing, software
1:a38a7c0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a38a7c0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a38a7c0:  * See the License for the specific language governing permissions and
1:a38a7c0:  * limitations under the License.
1:a38a7c0:  */
1:a38a7c0: package org.apache.activemq.security;
1:a38a7c0: 
1:a38a7c0: import org.apache.activemq.broker.Broker;
1:a38a7c0: import org.apache.activemq.broker.ConnectionContext;
1:a38a7c0: import org.apache.activemq.broker.region.Destination;
1:a38a7c0: import org.apache.activemq.broker.region.DestinationInterceptor;
1:a38a7c0: import org.apache.activemq.command.ActiveMQDestination;
1:a38a7c0: 
1:a38a7c0: /**
1:a38a7c0:  * Adds AuthorizationDestinationFilter on intercept()
1:a38a7c0:  */
1:a38a7c0: public class AuthorizationDestinationInterceptor implements DestinationInterceptor {
1:a38a7c0: 
1:a38a7c0:     private final AuthorizationBroker broker;
1:a38a7c0: 
1:a38a7c0:     public AuthorizationDestinationInterceptor(AuthorizationBroker broker) {
1:a38a7c0:         this.broker = broker;
1:a38a7c0:     }
1:a38a7c0: 
1:a38a7c0:     @Override
1:a38a7c0:     public Destination intercept(Destination destination) {
1:a38a7c0:         return new AuthorizationDestinationFilter(destination, broker);
1:a38a7c0:     }
1:a38a7c0: 
1:a38a7c0:     @Override
1:a38a7c0:     public void remove(Destination destination) {
1:a38a7c0:         // do nothing
1:a38a7c0:     }
1:a38a7c0: 
1:a38a7c0:     @Override
1:a38a7c0:     public void create(Broker broker, ConnectionContext context, ActiveMQDestination destination) throws Exception {
1:a38a7c0:         // do nothing
1:a38a7c0:     }
1:a38a7c0: 
1:a38a7c0: }
============================================================================
author:Dhiraj Bokde
-------------------------------------------------------------------------------
commit:a38a7c0
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.security;
1: 
1: import org.apache.activemq.broker.Broker;
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.broker.region.Destination;
1: import org.apache.activemq.broker.region.DestinationInterceptor;
1: import org.apache.activemq.command.ActiveMQDestination;
1: 
1: /**
1:  * Adds AuthorizationDestinationFilter on intercept()
1:  */
1: public class AuthorizationDestinationInterceptor implements DestinationInterceptor {
1: 
1:     private final AuthorizationBroker broker;
1: 
1:     public AuthorizationDestinationInterceptor(AuthorizationBroker broker) {
1:         this.broker = broker;
1:     }
1: 
1:     @Override
1:     public Destination intercept(Destination destination) {
1:         return new AuthorizationDestinationFilter(destination, broker);
1:     }
1: 
1:     @Override
1:     public void remove(Destination destination) {
1:         // do nothing
1:     }
1: 
1:     @Override
1:     public void create(Broker broker, ConnectionContext context, ActiveMQDestination destination) throws Exception {
1:         // do nothing
1:     }
1: 
1: }
============================================================================