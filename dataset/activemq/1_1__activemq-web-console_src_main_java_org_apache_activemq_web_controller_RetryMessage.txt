1:478d28f: /**
1:478d28f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:478d28f:  * contributor license agreements.  See the NOTICE file distributed with
1:478d28f:  * this work for additional information regarding copyright ownership.
1:478d28f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:478d28f:  * (the "License"); you may not use this file except in compliance with
1:478d28f:  * the License.  You may obtain a copy of the License at
1:478d28f:  *
1:478d28f:  *      http://www.apache.org/licenses/LICENSE-2.0
1:478d28f:  *
1:478d28f:  * Unless required by applicable law or agreed to in writing, software
1:478d28f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:478d28f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:478d28f:  * See the License for the specific language governing permissions and
1:478d28f:  * limitations under the License.
1:478d28f:  */
1:478d28f: package org.apache.activemq.web.controller;
1:478d28f: 
1:478d28f: import org.apache.activemq.broker.jmx.QueueViewMBean;
1:478d28f: import org.apache.activemq.web.BrokerFacade;
1:478d28f: import org.apache.activemq.web.DestinationFacade;
1:478d28f: import org.slf4j.Logger;
1:478d28f: import org.slf4j.LoggerFactory;
1:478d28f: import org.springframework.web.servlet.ModelAndView;
1:478d28f: import org.springframework.web.servlet.mvc.Controller;
1:478d28f: 
1:478d28f: import javax.servlet.http.HttpServletRequest;
1:478d28f: import javax.servlet.http.HttpServletResponse;
1:478d28f: 
1:478d28f: /**
1:478d28f:  * Retry a message on a queue.
1:478d28f:  */
1:478d28f: public class RetryMessage extends DestinationFacade implements Controller {
1:478d28f:     private String messageId;
1:478d28f:     private static final Logger log = LoggerFactory.getLogger(MoveMessage.class);
1:478d28f: 
1:478d28f:     public RetryMessage(BrokerFacade brokerFacade) {
1:478d28f:         super(brokerFacade);
1:478d28f:     }
1:478d28f: 
1:478d28f:     public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
1:478d28f:         if (messageId != null) {
1:478d28f:             QueueViewMBean queueView = getQueueView();
1:478d28f:             if (queueView != null) {
1:478d28f:                 log.info("Retrying message " + getJMSDestination() + "(" + messageId + ")");
1:478d28f:                 queueView.retryMessage(messageId);
1:478d28f:             } else {
1:478d28f:                 log.warn("No queue named: " + getPhysicalDestinationName());
1:478d28f:             }
1:478d28f:         }
1:478d28f:         return redirectToDestinationView();
1:478d28f:     }
1:478d28f: 
1:478d28f:     public String getMessageId() {
1:478d28f:         return messageId;
1:478d28f:     }
1:478d28f: 
1:478d28f:     public void setMessageId(String messageId) {
1:478d28f:         this.messageId = messageId;
1:478d28f:     }
1:478d28f: 
1:478d28f: }
============================================================================
author:Petter Nordlander
-------------------------------------------------------------------------------
commit:478d28f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.web.controller;
1: 
1: import org.apache.activemq.broker.jmx.QueueViewMBean;
1: import org.apache.activemq.web.BrokerFacade;
1: import org.apache.activemq.web.DestinationFacade;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: import org.springframework.web.servlet.ModelAndView;
1: import org.springframework.web.servlet.mvc.Controller;
1: 
1: import javax.servlet.http.HttpServletRequest;
1: import javax.servlet.http.HttpServletResponse;
1: 
1: /**
1:  * Retry a message on a queue.
1:  */
1: public class RetryMessage extends DestinationFacade implements Controller {
1:     private String messageId;
1:     private static final Logger log = LoggerFactory.getLogger(MoveMessage.class);
1: 
1:     public RetryMessage(BrokerFacade brokerFacade) {
1:         super(brokerFacade);
1:     }
1: 
1:     public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
1:         if (messageId != null) {
1:             QueueViewMBean queueView = getQueueView();
1:             if (queueView != null) {
1:                 log.info("Retrying message " + getJMSDestination() + "(" + messageId + ")");
1:                 queueView.retryMessage(messageId);
1:             } else {
1:                 log.warn("No queue named: " + getPhysicalDestinationName());
1:             }
1:         }
1:         return redirectToDestinationView();
1:     }
1: 
1:     public String getMessageId() {
1:         return messageId;
1:     }
1: 
1:     public void setMessageId(String messageId) {
1:         this.messageId = messageId;
1:     }
1: 
1: }
============================================================================