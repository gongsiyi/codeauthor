1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.subject;
1:f9451e5: 
1:f9451e5: import org.apache.activemq.broker.ConnectionContext;
1:f9451e5: import org.apache.activemq.command.ConnectionInfo;
1:f9451e5: import org.apache.activemq.security.SecurityContext;
1:f9451e5: import org.apache.shiro.env.DefaultEnvironment;
1:f9451e5: import org.apache.shiro.subject.Subject;
1:f9451e5: import org.junit.Test;
1:f9451e5: 
1:f9451e5: import java.security.Principal;
1:f9451e5: import java.util.Set;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public class ConnectionSubjectResolverTest {
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalArgumentException.class)
1:f9451e5:     public void testNullConstructorArg() {
1:f9451e5:         new ConnectionSubjectResolver((ConnectionContext)null);
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalArgumentException.class)
1:f9451e5:     public void testNullSecurityContext() {
1:f9451e5:         SubjectConnectionReference reference =
1:f9451e5:                 new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:f9451e5:                         new DefaultEnvironment(), new SubjectAdapter());
1:f9451e5: 
1:f9451e5:         new ConnectionSubjectResolver(reference);
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalArgumentException.class)
1:f9451e5:     public void testNonSubjectSecurityContext() {
1:f9451e5:         SubjectConnectionReference reference =
1:f9451e5:                 new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:f9451e5:                         new DefaultEnvironment(), new SubjectAdapter());
1:f9451e5:         reference.getConnectionContext().setSecurityContext(new SecurityContext("") {
1:f9451e5:             @Override
1:f9451e5:             public Set<Principal> getPrincipals() {
1:f9451e5:                 return null;
1:f9451e5:             }
1:f9451e5:         });
1:f9451e5: 
1:f9451e5:         new ConnectionSubjectResolver(reference);
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalStateException.class)
1:f9451e5:     public void testNullSubject() {
1:f9451e5: 
1:f9451e5:         SubjectConnectionReference reference =
1:f9451e5:                 new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:f9451e5:                         new DefaultEnvironment(), new SubjectAdapter());
1:f9451e5:         reference.getConnectionContext().setSecurityContext(new SubjectSecurityContext(reference) {
1:f9451e5:             @Override
1:f9451e5:             public Subject getSubject() {
1:f9451e5:                 return null;
1:f9451e5:             }
1:f9451e5:         });
1:f9451e5: 
1:f9451e5:         ConnectionSubjectResolver resolver = new ConnectionSubjectResolver(reference);
1:f9451e5:         resolver.getSubject();
1:f9451e5:     }
1:f9451e5: 
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.subject;
1: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.ConnectionInfo;
1: import org.apache.activemq.security.SecurityContext;
1: import org.apache.shiro.env.DefaultEnvironment;
1: import org.apache.shiro.subject.Subject;
1: import org.junit.Test;
1: 
1: import java.security.Principal;
1: import java.util.Set;
1: 
1: /**
1:  * @since 5.10.0
1:  */
1: public class ConnectionSubjectResolverTest {
1: 
1:     @Test(expected = IllegalArgumentException.class)
1:     public void testNullConstructorArg() {
1:         new ConnectionSubjectResolver((ConnectionContext)null);
1:     }
1: 
1:     @Test(expected = IllegalArgumentException.class)
1:     public void testNullSecurityContext() {
1:         SubjectConnectionReference reference =
1:                 new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:                         new DefaultEnvironment(), new SubjectAdapter());
1: 
1:         new ConnectionSubjectResolver(reference);
1:     }
1: 
1:     @Test(expected = IllegalArgumentException.class)
1:     public void testNonSubjectSecurityContext() {
1:         SubjectConnectionReference reference =
1:                 new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:                         new DefaultEnvironment(), new SubjectAdapter());
1:         reference.getConnectionContext().setSecurityContext(new SecurityContext("") {
1:             @Override
1:             public Set<Principal> getPrincipals() {
1:                 return null;
1:             }
1:         });
1: 
1:         new ConnectionSubjectResolver(reference);
1:     }
1: 
1:     @Test(expected = IllegalStateException.class)
1:     public void testNullSubject() {
1: 
1:         SubjectConnectionReference reference =
1:                 new SubjectConnectionReference(new ConnectionContext(), new ConnectionInfo(),
1:                         new DefaultEnvironment(), new SubjectAdapter());
1:         reference.getConnectionContext().setSecurityContext(new SubjectSecurityContext(reference) {
1:             @Override
1:             public Subject getSubject() {
1:                 return null;
1:             }
1:         });
1: 
1:         ConnectionSubjectResolver resolver = new ConnectionSubjectResolver(reference);
1:         resolver.getSubject();
1:     }
1: 
1: }
============================================================================