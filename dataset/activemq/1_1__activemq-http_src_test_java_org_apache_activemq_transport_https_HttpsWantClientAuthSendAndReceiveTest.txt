1:571d452: /**
1:571d452:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:571d452:  * contributor license agreements.  See the NOTICE file distributed with
1:571d452:  * this work for additional information regarding copyright ownership.
1:571d452:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:571d452:  * (the "License"); you may not use this file except in compliance with
1:571d452:  * the License.  You may obtain a copy of the License at
1:571d452:  *
1:571d452:  * http://www.apache.org/licenses/LICENSE-2.0
1:571d452:  *
1:571d452:  * Unless required by applicable law or agreed to in writing, software
1:571d452:  * distributed under the License is distributed on an "AS IS" BASIS,
1:571d452:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:571d452:  * See the License for the specific language governing permissions and
1:571d452:  * limitations under the License.
1:571d452:  */
1:571d452: package org.apache.activemq.transport.https;
1:571d452: 
1:571d452: import org.apache.activemq.ActiveMQConnectionFactory;
1:571d452: import org.apache.activemq.JmsTopicSendReceiveTest;
1:571d452: import org.apache.activemq.broker.BrokerFactory;
1:571d452: import org.apache.activemq.broker.BrokerService;
1:571d452: 
1:571d452: /**
1:571d452:  * @author <a href="http://www.christianposta.com/blog">Christian Posta</a>
1:571d452:  */
1:571d452: public class HttpsWantClientAuthSendAndReceiveTest extends JmsTopicSendReceiveTest {
1:571d452: 
1:571d452:     public static final String KEYSTORE_TYPE = "jks";
1:571d452:     public static final String PASSWORD = "password";
1:571d452:     public static final String TRUST_KEYSTORE = "src/test/resources/client.keystore";
1:571d452:     public static final String KEYSTORE = "src/test/resources/server.keystore";
1:571d452: 
1:571d452: 
1:571d452:     private BrokerService broker;
1:571d452: 
1:571d452: 
1:571d452: 
1:571d452:     // set up broker with https first...
1:571d452:     @Override
1:571d452:     protected void setUp() throws Exception {
1:571d452:         broker = BrokerFactory.createBroker("xbean:activemq-https-want-client-auth.xml");
1:571d452:         broker.setPersistent(false);
1:571d452:         broker.start();
1:571d452:         broker.waitUntilStarted();
1:571d452: 
1:571d452:         // these are used for the client side... for the server side, the SSL context
1:571d452:         // will be configured through the <sslContext> spring beans
1:571d452:         System.setProperty("javax.net.ssl.trustStore", TRUST_KEYSTORE);
1:571d452:         System.setProperty("javax.net.ssl.trustStorePassword", PASSWORD);
1:571d452:         System.setProperty("javax.net.ssl.trustStoreType", KEYSTORE_TYPE);
1:571d452: //        System.setProperty("javax.net.ssl.keyStore", KEYSTORE);
1:571d452: //        System.setProperty("javax.net.ssl.keyStorePassword", PASSWORD);
1:571d452: //        System.setProperty("javax.net.ssl.keyStoreType", KEYSTORE_TYPE);
1:571d452:         super.setUp();
1:571d452:     }
1:571d452: 
1:571d452:     @Override
1:571d452:     protected void tearDown() throws Exception {
1:571d452:         super.tearDown();
1:571d452:         if (broker != null) {
1:571d452:             broker.stop();
1:571d452:         }
1:571d452:     }
1:571d452: 
1:571d452:     @Override
1:571d452:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:571d452:         return new ActiveMQConnectionFactory("https://localhost:8161");
1:571d452:     }
1:571d452: }
============================================================================
author:Christian Posta
-------------------------------------------------------------------------------
commit:571d452
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.https;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.JmsTopicSendReceiveTest;
1: import org.apache.activemq.broker.BrokerFactory;
1: import org.apache.activemq.broker.BrokerService;
1: 
1: /**
1:  * @author <a href="http://www.christianposta.com/blog">Christian Posta</a>
1:  */
1: public class HttpsWantClientAuthSendAndReceiveTest extends JmsTopicSendReceiveTest {
1: 
1:     public static final String KEYSTORE_TYPE = "jks";
1:     public static final String PASSWORD = "password";
1:     public static final String TRUST_KEYSTORE = "src/test/resources/client.keystore";
1:     public static final String KEYSTORE = "src/test/resources/server.keystore";
1: 
1: 
1:     private BrokerService broker;
1: 
1: 
1: 
1:     // set up broker with https first...
1:     @Override
1:     protected void setUp() throws Exception {
1:         broker = BrokerFactory.createBroker("xbean:activemq-https-want-client-auth.xml");
1:         broker.setPersistent(false);
1:         broker.start();
1:         broker.waitUntilStarted();
1: 
1:         // these are used for the client side... for the server side, the SSL context
1:         // will be configured through the <sslContext> spring beans
1:         System.setProperty("javax.net.ssl.trustStore", TRUST_KEYSTORE);
1:         System.setProperty("javax.net.ssl.trustStorePassword", PASSWORD);
1:         System.setProperty("javax.net.ssl.trustStoreType", KEYSTORE_TYPE);
1: //        System.setProperty("javax.net.ssl.keyStore", KEYSTORE);
1: //        System.setProperty("javax.net.ssl.keyStorePassword", PASSWORD);
1: //        System.setProperty("javax.net.ssl.keyStoreType", KEYSTORE_TYPE);
1:         super.setUp();
1:     }
1: 
1:     @Override
1:     protected void tearDown() throws Exception {
1:         super.tearDown();
1:         if (broker != null) {
1:             broker.stop();
1:         }
1:     }
1: 
1:     @Override
1:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:         return new ActiveMQConnectionFactory("https://localhost:8161");
1:     }
1: }
============================================================================