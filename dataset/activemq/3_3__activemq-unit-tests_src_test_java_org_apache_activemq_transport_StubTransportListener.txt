1:c2fc820: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:c2fc820:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0bbc0ac:  *
1:c2fc820:  * Unless required by applicable law or agreed to in writing, software
1:c2fc820:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c2fc820:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c2fc820:  * See the License for the specific language governing permissions and
1:c2fc820:  * limitations under the License.
1:c2fc820:  */
1:c2fc820: package org.apache.activemq.transport;
3:c2fc820: 
1:74a7a8b: import java.io.IOException;
1:86cbdfd: import java.util.Queue;
1:86cbdfd: import java.util.concurrent.ConcurrentLinkedQueue;
1:c2fc820: 
1:c2fc820: /**
1:4743a20:  *
1:4743a20:  *
1:c2fc820:  */
1:c2fc820: public class StubTransportListener implements TransportListener {
1:c2fc820: 
1:4743a20:     private final Queue<Object> commands = new ConcurrentLinkedQueue<Object>();
1:4743a20:     private final Queue<Object> exceptions = new ConcurrentLinkedQueue<Object>();
1:c2fc820: 
1:4743a20:     public Queue<Object> getCommands() {
1:c2fc820:         return commands;
1:c2fc820:     }
1:c2fc820: 
1:4743a20:     public Queue<Object> getExceptions() {
1:c2fc820:         return exceptions;
1:c2fc820:     }
1:c2fc820: 
1:4743a20:     @Override
1:9ca56a0:     public void onCommand(Object command) {
1:c2fc820:         commands.add(command);
1:c2fc820:     }
1:c2fc820: 
1:4743a20:     @Override
1:c2fc820:     public void onException(IOException error) {
1:c2fc820:         exceptions.add(error);
1:c2fc820:     }
1:c2fc820: 
1:4743a20:     @Override
1:c2fc820:     public void transportInterupted() {
1:c2fc820:     }
1:c2fc820: 
1:4743a20:     @Override
1:c2fc820:     public void transportResumed() {
1:c2fc820:     }
1:c2fc820: 
1:c2fc820: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:4743a20
/////////////////////////////////////////////////////////////////////////
1:  *
1:  *
1:     private final Queue<Object> commands = new ConcurrentLinkedQueue<Object>();
1:     private final Queue<Object> exceptions = new ConcurrentLinkedQueue<Object>();
1:     public Queue<Object> getCommands() {
1:     public Queue<Object> getExceptions() {
1:     @Override
1:     @Override
1:     @Override
1:     @Override
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: import java.util.Queue;
1: import java.util.concurrent.ConcurrentLinkedQueue;
commit:9ca56a0
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public void onCommand(Object command) {
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:c2fc820
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport;
1: 
0: import edu.emory.mathcs.backport.java.util.Queue;
0: import edu.emory.mathcs.backport.java.util.concurrent.ConcurrentLinkedQueue;
1: 
0: import org.apache.activemq.command.Command;
1: 
0: import java.io.IOException;
1: 
1: /**
1:  * 
0:  * @version $Revision$
1:  */
1: public class StubTransportListener implements TransportListener {
1: 
0:     private Queue commands = new ConcurrentLinkedQueue();
0:     private Queue exceptions = new ConcurrentLinkedQueue();
1: 
0:     public Queue getCommands() {
1:         return commands;
1:     }
1: 
0:     public Queue getExceptions() {
1:         return exceptions;
1:     }
1: 
0:     public void onCommand(Command command) {
1:         commands.add(command);
1:     }
1: 
1:     public void onException(IOException error) {
1:         exceptions.add(error);
1:     }
1: 
1:     public void transportInterupted() {
1:     }
1: 
1:     public void transportResumed() {
1:     }
1: 
1: }
============================================================================