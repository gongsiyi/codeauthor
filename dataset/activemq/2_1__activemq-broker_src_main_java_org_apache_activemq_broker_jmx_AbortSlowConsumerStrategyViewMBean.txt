1:383d12e: /**
1:383d12e:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:383d12e:  * contributor license agreements.  See the NOTICE file distributed with
1:383d12e:  * this work for additional information regarding copyright ownership.
1:383d12e:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:383d12e:  * (the "License"); you may not use this file except in compliance with
1:383d12e:  * the License.  You may obtain a copy of the License at
1:383d12e:  *
1:383d12e:  *      http://www.apache.org/licenses/LICENSE-2.0
1:383d12e:  *
1:383d12e:  * Unless required by applicable law or agreed to in writing, software
1:383d12e:  * distributed under the License is distributed on an "AS IS" BASIS,
1:383d12e:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:383d12e:  * See the License for the specific language governing permissions and
1:383d12e:  * limitations under the License.
1:383d12e:  */
1:383d12e: package org.apache.activemq.broker.jmx;
1:383d12e: 
1:383d12e: import javax.management.ObjectName;
1:383d12e: import javax.management.openmbean.OpenDataException;
1:383d12e: import javax.management.openmbean.TabularData;
1:383d12e: 
1:383d12e: public interface AbortSlowConsumerStrategyViewMBean {
1:383d12e:     
1:383d12e:     @MBeanInfo("returns the current max slow count, -1 disables")
1:383d12e:     long getMaxSlowCount();
1:383d12e: 
1:383d12e:     @MBeanInfo("sets the count after which a slow consumer will be aborted, -1 disables")
1:383d12e:     void setMaxSlowCount(long maxSlowCount);
1:383d12e:     
1:383d12e:     @MBeanInfo("returns the current max slow (milliseconds) duration")
1:383d12e:     long getMaxSlowDuration();
1:383d12e: 
1:383d12e:     @MBeanInfo("sets the duration (milliseconds) after which a continually slow consumer will be aborted")
1:383d12e:     void setMaxSlowDuration(long maxSlowDuration);
1:383d12e: 
1:383d12e:     @MBeanInfo("returns the check period at which a sweep of consumers is done to determine continued slowness")
1:383d12e:     public long getCheckPeriod();
1:383d12e:     
1:383d12e:     @MBeanInfo("returns the current list of slow consumers, Not HTML friendly")
1:383d12e:     TabularData getSlowConsumers() throws OpenDataException;
1:383d12e:     
1:383d12e:     @MBeanInfo("aborts the slow consumer gracefully by sending a shutdown control message to just that consumer")
1:383d12e:     void abortConsumer(ObjectName consumerToAbort);
1:383d12e:     
1:383d12e:     @MBeanInfo("aborts the slow consumer forcefully by shutting down it's connection, note: all other users of the connection will be affected")
1:383d12e:     void abortConnection(ObjectName consumerToAbort);
1:383d12e: 
1:383d12e:     @MBeanInfo("aborts the slow consumer gracefully by sending a shutdown control message to just that consumer")
1:383d12e:     void abortConsumer(String objectNameOfConsumerToAbort);
1:383d12e:     
1:383d12e:     @MBeanInfo("aborts the slow consumer forcefully by shutting down it's connection, note: all other users of the connection will be affected")
1:383d12e:     void abortConnection(String objectNameOfConsumerToAbort);
1:383d12e: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Gary Tully
-------------------------------------------------------------------------------
commit:383d12e
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import javax.management.ObjectName;
1: import javax.management.openmbean.OpenDataException;
1: import javax.management.openmbean.TabularData;
1: 
1: public interface AbortSlowConsumerStrategyViewMBean {
1:     
1:     @MBeanInfo("returns the current max slow count, -1 disables")
1:     long getMaxSlowCount();
1: 
1:     @MBeanInfo("sets the count after which a slow consumer will be aborted, -1 disables")
1:     void setMaxSlowCount(long maxSlowCount);
1:     
1:     @MBeanInfo("returns the current max slow (milliseconds) duration")
1:     long getMaxSlowDuration();
1: 
1:     @MBeanInfo("sets the duration (milliseconds) after which a continually slow consumer will be aborted")
1:     void setMaxSlowDuration(long maxSlowDuration);
1: 
1:     @MBeanInfo("returns the check period at which a sweep of consumers is done to determine continued slowness")
1:     public long getCheckPeriod();
1:     
1:     @MBeanInfo("returns the current list of slow consumers, Not HTML friendly")
1:     TabularData getSlowConsumers() throws OpenDataException;
1:     
1:     @MBeanInfo("aborts the slow consumer gracefully by sending a shutdown control message to just that consumer")
1:     void abortConsumer(ObjectName consumerToAbort);
1:     
1:     @MBeanInfo("aborts the slow consumer forcefully by shutting down it's connection, note: all other users of the connection will be affected")
1:     void abortConnection(ObjectName consumerToAbort);
1: 
1:     @MBeanInfo("aborts the slow consumer gracefully by sending a shutdown control message to just that consumer")
1:     void abortConsumer(String objectNameOfConsumerToAbort);
1:     
1:     @MBeanInfo("aborts the slow consumer forcefully by shutting down it's connection, note: all other users of the connection will be affected")
1:     void abortConnection(String objectNameOfConsumerToAbort);
1: }
============================================================================