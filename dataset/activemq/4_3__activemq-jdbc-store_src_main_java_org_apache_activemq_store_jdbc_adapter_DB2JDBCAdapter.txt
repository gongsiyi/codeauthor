1:014c62b: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:014c62b:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:014c62b:  *
1:014c62b:  * Unless required by applicable law or agreed to in writing, software
1:014c62b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:014c62b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:014c62b:  * See the License for the specific language governing permissions and
1:014c62b:  * limitations under the License.
1:014c62b:  */
1:014c62b: package org.apache.activemq.store.jdbc.adapter;
1:014c62b: 
1:014c62b: import java.sql.Blob;
1:014c62b: import java.sql.ResultSet;
1:014c62b: import java.sql.SQLException;
1:014c62b: 
1:74a7a8b: import org.apache.activemq.store.jdbc.Statements;
1:74a7a8b: 
1:014c62b: /**
1:b0c2a40:  * 
1:014c62b:  * @org.apache.xbean.XBean element="db2JDBCAdapter"
1:014c62b:  */
1:014c62b: public class DB2JDBCAdapter extends DefaultJDBCAdapter {
1:014c62b: 
1:adc45e8:     @Override
1:dccd381:     public void setStatements(Statements statements) {
1:dccd381:         String lockCreateStatement = "LOCK TABLE " + statements.getFullLockTableName() + " IN EXCLUSIVE MODE";
1:dccd381:         statements.setLockCreateStatement(lockCreateStatement);
4:dccd381: 
1:dccd381:         super.setStatements(statements);
1:014c62b:     }
1:014c62b: 
1:adc45e8:     @Override
1:014c62b:     protected byte[] getBinaryData(ResultSet rs, int index) throws SQLException {
1:014c62b:         // Get as a BLOB
1:014c62b:         Blob aBlob = rs.getBlob(index);
1:014c62b:         return aBlob.getBytes(1, (int) aBlob.length());
1:014c62b:     }
1:014c62b: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.store.jdbc.Statements;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:014c62b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.jdbc.adapter;
1: 
1: import java.sql.Blob;
1: import java.sql.ResultSet;
1: import java.sql.SQLException;
1: 
1: /**
1:  *
1:  * @org.apache.xbean.XBean element="db2JDBCAdapter"
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class DB2JDBCAdapter extends DefaultJDBCAdapter {
1: 
0:     public DB2JDBCAdapter() {
0:         batchStatments=false;
1:     }
1:     
1:     protected byte[] getBinaryData(ResultSet rs, int index) throws SQLException {
1:         // Get as a BLOB
1:         Blob aBlob = rs.getBlob(index);
1:         return aBlob.getBytes(1, (int) aBlob.length());
1:     }
1: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:adc45e8
/////////////////////////////////////////////////////////////////////////
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:52f48db
/////////////////////////////////////////////////////////////////////////
author:James Strachan
-------------------------------------------------------------------------------
commit:dccd381
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.store.jdbc.Statements;
1: 
0:  * @org.apache.xbean.XBean element="db2JDBCAdapter"
0:         batchStatments = false;
1: 
1:     public void setStatements(Statements statements) {
1:         String lockCreateStatement = "LOCK TABLE " + statements.getFullLockTableName() + " IN EXCLUSIVE MODE";
1:         statements.setLockCreateStatement(lockCreateStatement);
1: 
1:         super.setStatements(statements);
0:     }
1: 
============================================================================