1:6707ac6: /*
1:6707ac6:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:6707ac6:  *  contributor license agreements.  See the NOTICE file distributed with
1:6707ac6:  *  this work for additional information regarding copyright ownership.
1:6707ac6:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:6707ac6:  *  (the "License"); you may not use this file except in compliance with
1:6707ac6:  *  the License.  You may obtain a copy of the License at
1:6707ac6:  *
1:6707ac6:  *  http://www.apache.org/licenses/LICENSE-2.0
1:6707ac6:  *
1:6707ac6:  *  Unless required by applicable law or agreed to in writing, software
1:6707ac6:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:6707ac6:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6707ac6:  *  See the License for the specific language governing permissions and
1:6707ac6:  *  limitations under the License.
1:6707ac6:  */
1:6707ac6: public class TransactionsDemo {
1:6707ac6: 
1:6707ac6: 	public static void main(String[] args) {
1:6707ac6: 		String url = "tcp://localhost:61616";
1:6707ac6: 		String user = null;
1:6707ac6: 		String password = null;
1:6707ac6: 		
1:6707ac6: 		if (args.length >= 1) {
1:6707ac6: 			url = args[0];
1:6707ac6: 		}
1:6707ac6: 		
1:6707ac6: 		if (args.length >= 2) {
1:6707ac6: 			user = args[1];
1:6707ac6: 		}
1:6707ac6: 
1:6707ac6: 		if (args.length >= 3) {
1:6707ac6: 			password = args[2];
1:6707ac6: 		}
1:6707ac6: 		
1:6707ac6: 		Retailer r = new Retailer(url, user, password);
1:6707ac6: 		Vendor v = new Vendor(url, user, password);
1:6707ac6: 		Supplier s1 = new Supplier("HardDrive", "StorageOrderQueue", url, user, password);
1:6707ac6: 		Supplier s2 = new Supplier("Monitor", "MonitorOrderQueue", url, user, password);
1:6707ac6: 		
1:6707ac6: 		new Thread(r, "Retailer").start();
1:6707ac6: 		new Thread(v, "Vendor").start();
1:6707ac6: 		new Thread(s1, "Supplier 1").start();
1:6707ac6: 		new Thread(s2, "Supplier 2").start();
1:6707ac6: 	}
1:6707ac6: 
1:6707ac6: }
============================================================================
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:2ecf41d
author:Robert Davies
-------------------------------------------------------------------------------
commit:6707ac6
/////////////////////////////////////////////////////////////////////////
1: /*
1:  *  Licensed to the Apache Software Foundation (ASF) under one or more
1:  *  contributor license agreements.  See the NOTICE file distributed with
1:  *  this work for additional information regarding copyright ownership.
1:  *  The ASF licenses this file to You under the Apache License, Version 2.0
1:  *  (the "License"); you may not use this file except in compliance with
1:  *  the License.  You may obtain a copy of the License at
1:  *
1:  *  http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  *  Unless required by applicable law or agreed to in writing, software
1:  *  distributed under the License is distributed on an "AS IS" BASIS,
1:  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  *  See the License for the specific language governing permissions and
1:  *  limitations under the License.
1:  */
1: public class TransactionsDemo {
1: 
1: 	public static void main(String[] args) {
1: 		String url = "tcp://localhost:61616";
1: 		String user = null;
1: 		String password = null;
1: 		
1: 		if (args.length >= 1) {
1: 			url = args[0];
1: 		}
1: 		
1: 		if (args.length >= 2) {
1: 			user = args[1];
1: 		}
1: 
1: 		if (args.length >= 3) {
1: 			password = args[2];
1: 		}
1: 		
1: 		Retailer r = new Retailer(url, user, password);
1: 		Vendor v = new Vendor(url, user, password);
1: 		Supplier s1 = new Supplier("HardDrive", "StorageOrderQueue", url, user, password);
1: 		Supplier s2 = new Supplier("Monitor", "MonitorOrderQueue", url, user, password);
1: 		
1: 		new Thread(r, "Retailer").start();
1: 		new Thread(v, "Vendor").start();
1: 		new Thread(s1, "Supplier 1").start();
1: 		new Thread(s2, "Supplier 2").start();
1: 	}
1: 
1: }
============================================================================