1:008b3e5: /**
1:008b3e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:008b3e5:  * contributor license agreements.  See the NOTICE file distributed with
1:008b3e5:  * this work for additional information regarding copyright ownership.
1:008b3e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:008b3e5:  * (the "License"); you may not use this file except in compliance with
1:008b3e5:  * the License.  You may obtain a copy of the License at
1:008b3e5:  *
1:008b3e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:008b3e5:  *
1:008b3e5:  * Unless required by applicable law or agreed to in writing, software
1:008b3e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:008b3e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:008b3e5:  * See the License for the specific language governing permissions and
1:008b3e5:  * limitations under the License.
1:008b3e5:  */
1:008b3e5: 
1:008b3e5: package org.apache.activemq.security;
1:008b3e5: 
1:008b3e5: import junit.framework.Test;
1:008b3e5: import org.apache.activemq.broker.BrokerService;
1:008b3e5: import org.apache.activemq.command.ActiveMQQueue;
1:008b3e5: import org.apache.activemq.command.ActiveMQTopic;
1:008b3e5: 
1:008b3e5: public class SimpleAuthenticationPluginSeparatorTest extends SimpleAuthenticationPluginTest {
1:008b3e5: 
1:008b3e5:     public static Test suite() {
1:008b3e5:         return suite(SimpleAuthenticationPluginSeparatorTest.class);
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     public static void main(String[] args) {
1:008b3e5:         junit.textui.TestRunner.run(suite());
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     @Override
1:008b3e5:     protected BrokerService createBroker() throws Exception {
1:008b3e5:         return createBroker("org/apache/activemq/security/simple-auth-separator.xml");
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestUserReceiveFails() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"user"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST"), new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("GUEST/BAR")});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestInvalidAuthentication() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"user"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestUserReceiveSucceeds() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"user"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("USERS/FOO"), new ActiveMQTopic("USERS/FOO")});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestGuestReceiveSucceeds() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"guest"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("GUEST/BAR")});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestGuestReceiveFails() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"guest"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST"), new ActiveMQQueue("USERS/FOO"), new ActiveMQTopic("USERS/FOO") });
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestUserSendSucceeds() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"user"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("USERS/FOO"), new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("USERS/FOO"),
1:008b3e5:                                                           new ActiveMQTopic("GUEST/BAR")});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestUserSendFails() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"user"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST")});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestGuestSendFails() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"guest"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST"), new ActiveMQQueue("USERS/FOO"), new ActiveMQTopic("USERS/FOO")});
1:008b3e5:     }
1:008b3e5: 
1:008b3e5:     /**
1:008b3e5:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:008b3e5:      */
1:008b3e5:     public void initCombosForTestGuestSendSucceeds() {
1:008b3e5:         addCombinationValues("userName", new Object[] {"guest"});
1:008b3e5:         addCombinationValues("password", new Object[] {"password"});
1:008b3e5:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("GUEST/BAR")});
1:008b3e5:     }
1:008b3e5: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:008b3e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.security;
1: 
1: import junit.framework.Test;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.activemq.command.ActiveMQTopic;
1: 
1: public class SimpleAuthenticationPluginSeparatorTest extends SimpleAuthenticationPluginTest {
1: 
1:     public static Test suite() {
1:         return suite(SimpleAuthenticationPluginSeparatorTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
1: 
1:     @Override
1:     protected BrokerService createBroker() throws Exception {
1:         return createBroker("org/apache/activemq/security/simple-auth-separator.xml");
1:     }
1: 
1:     /**
1:      * @see {@link CombinationTestSupport}
1:      */
1:     public void initCombosForTestUserReceiveFails() {
1:         addCombinationValues("userName", new Object[] {"user"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST"), new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("GUEST/BAR")});
1:     }
1: 
1:     /**
1:      * @see {@link CombinationTestSupport}
1:      */
1:     public void initCombosForTestInvalidAuthentication() {
1:         addCombinationValues("userName", new Object[] {"user"});
1:         addCombinationValues("password", new Object[] {"password"});
1:     }
1: 
1:     /**
1:      * @see {@link CombinationTestSupport}
1:      */
1:     public void initCombosForTestUserReceiveSucceeds() {
1:         addCombinationValues("userName", new Object[] {"user"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("USERS/FOO"), new ActiveMQTopic("USERS/FOO")});
1:     }
1: 
1:     /**
1:      * @see {@link CombinationTestSupport}
1:      */
1:     public void initCombosForTestGuestReceiveSucceeds() {
1:         addCombinationValues("userName", new Object[] {"guest"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("GUEST/BAR")});
1:     }
1: 
1:     /**
1:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:      */
1:     public void initCombosForTestGuestReceiveFails() {
1:         addCombinationValues("userName", new Object[] {"guest"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST"), new ActiveMQQueue("USERS/FOO"), new ActiveMQTopic("USERS/FOO") });
1:     }
1: 
1:     /**
1:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:      */
1:     public void initCombosForTestUserSendSucceeds() {
1:         addCombinationValues("userName", new Object[] {"user"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("USERS/FOO"), new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("USERS/FOO"),
1:                                                           new ActiveMQTopic("GUEST/BAR")});
1:     }
1: 
1:     /**
1:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:      */
1:     public void initCombosForTestUserSendFails() {
1:         addCombinationValues("userName", new Object[] {"user"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST")});
1:     }
1: 
1:     /**
1:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:      */
1:     public void initCombosForTestGuestSendFails() {
1:         addCombinationValues("userName", new Object[] {"guest"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("TEST"), new ActiveMQTopic("TEST"), new ActiveMQQueue("USERS/FOO"), new ActiveMQTopic("USERS/FOO")});
1:     }
1: 
1:     /**
1:      * @see {@link org.apache.activemq.CombinationTestSupport}
1:      */
1:     public void initCombosForTestGuestSendSucceeds() {
1:         addCombinationValues("userName", new Object[] {"guest"});
1:         addCombinationValues("password", new Object[] {"password"});
1:         addCombinationValues("destination", new Object[] {new ActiveMQQueue("GUEST/BAR"), new ActiveMQTopic("GUEST/BAR")});
1:     }
1: }
============================================================================