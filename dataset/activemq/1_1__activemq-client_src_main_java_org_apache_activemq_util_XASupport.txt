1:8e7556f: /**
1:8e7556f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8e7556f:  * contributor license agreements.  See the NOTICE file distributed with
1:8e7556f:  * this work for additional information regarding copyright ownership.
1:8e7556f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8e7556f:  * (the "License"); you may not use this file except in compliance with
1:8e7556f:  * the License.  You may obtain a copy of the License at
1:8e7556f:  *
1:8e7556f:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8e7556f:  *
1:8e7556f:  * Unless required by applicable law or agreed to in writing, software
1:8e7556f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8e7556f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8e7556f:  * See the License for the specific language governing permissions and
1:8e7556f:  * limitations under the License.
1:8e7556f:  */
1:8e7556f: package org.apache.activemq.util;
1:8e7556f: 
1:8e7556f: import static javax.transaction.xa.XAResource.TMENDRSCAN;
1:8e7556f: import static javax.transaction.xa.XAResource.TMFAIL;
1:8e7556f: import static javax.transaction.xa.XAResource.TMJOIN;
1:8e7556f: import static javax.transaction.xa.XAResource.TMNOFLAGS;
1:8e7556f: import static javax.transaction.xa.XAResource.TMONEPHASE;
1:8e7556f: import static javax.transaction.xa.XAResource.TMRESUME;
1:8e7556f: import static javax.transaction.xa.XAResource.TMSTARTRSCAN;
1:8e7556f: import static javax.transaction.xa.XAResource.TMSUCCESS;
1:8e7556f: import static javax.transaction.xa.XAResource.TMSUSPEND;
1:8e7556f: 
1:8e7556f: public class XASupport {
1:8e7556f: 
1:8e7556f:     public static String toString(int flags) {
1:8e7556f:         if (flags == TMNOFLAGS) {
1:8e7556f:             return "TMNOFLAGS";
1:8e7556f:         }
1:8e7556f: 
1:8e7556f:         StringBuilder result = new StringBuilder();
1:8e7556f:         if (hasFlag(flags, TMENDRSCAN)) {
1:8e7556f:             add(result, "TMENDRSCAN");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMFAIL)) {
1:8e7556f:             add(result, "TMFAIL");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMJOIN)) {
1:8e7556f:             add(result, "TMJOIN");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMONEPHASE)) {
1:8e7556f:             add(result, "TMONEPHASE");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMRESUME)) {
1:8e7556f:             add(result, "TMRESUME");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMSTARTRSCAN)) {
1:8e7556f:             add(result, "TMSTARTRSCAN");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMSUCCESS)) {
1:8e7556f:             add(result, "TMSUCCESS");
1:8e7556f:         }
1:8e7556f:         if (hasFlag(flags, TMSUSPEND)) {
1:8e7556f:             add(result, "TMSUSPEND");
1:8e7556f:         }
1:8e7556f: 
1:8e7556f:         int nonStandardFlags = flags
1:8e7556f:                 & ~TMENDRSCAN
1:8e7556f:                 & ~TMFAIL
1:8e7556f:                 & ~TMJOIN
1:8e7556f:                 & ~TMONEPHASE
1:8e7556f:                 & ~TMRESUME
1:8e7556f:                 & ~TMSTARTRSCAN
1:8e7556f:                 & ~TMSUCCESS
1:8e7556f:                 & ~TMSUSPEND;
1:8e7556f: 
1:8e7556f:         if (nonStandardFlags != 0) {
1:8e7556f:             add(result, String.format("0x%08x", nonStandardFlags));
1:8e7556f:         }
1:8e7556f: 
1:8e7556f:         return result.toString();
1:8e7556f:     }
1:8e7556f: 
1:8e7556f:     private static boolean hasFlag(int flags, int flag) {
1:8e7556f:         return (flags & flag) == flag;
1:8e7556f:     }
1:8e7556f: 
1:8e7556f:     private static void add(StringBuilder result, String string) {
1:8e7556f:         if (result.length() > 0) {
1:8e7556f:             result.append(" | ");
1:8e7556f:         }
1:8e7556f:         result.append(string);
1:8e7556f:     }
1:8e7556f: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:8e7556f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
1: import static javax.transaction.xa.XAResource.TMENDRSCAN;
1: import static javax.transaction.xa.XAResource.TMFAIL;
1: import static javax.transaction.xa.XAResource.TMJOIN;
1: import static javax.transaction.xa.XAResource.TMNOFLAGS;
1: import static javax.transaction.xa.XAResource.TMONEPHASE;
1: import static javax.transaction.xa.XAResource.TMRESUME;
1: import static javax.transaction.xa.XAResource.TMSTARTRSCAN;
1: import static javax.transaction.xa.XAResource.TMSUCCESS;
1: import static javax.transaction.xa.XAResource.TMSUSPEND;
1: 
1: public class XASupport {
1: 
1:     public static String toString(int flags) {
1:         if (flags == TMNOFLAGS) {
1:             return "TMNOFLAGS";
1:         }
1: 
1:         StringBuilder result = new StringBuilder();
1:         if (hasFlag(flags, TMENDRSCAN)) {
1:             add(result, "TMENDRSCAN");
1:         }
1:         if (hasFlag(flags, TMFAIL)) {
1:             add(result, "TMFAIL");
1:         }
1:         if (hasFlag(flags, TMJOIN)) {
1:             add(result, "TMJOIN");
1:         }
1:         if (hasFlag(flags, TMONEPHASE)) {
1:             add(result, "TMONEPHASE");
1:         }
1:         if (hasFlag(flags, TMRESUME)) {
1:             add(result, "TMRESUME");
1:         }
1:         if (hasFlag(flags, TMSTARTRSCAN)) {
1:             add(result, "TMSTARTRSCAN");
1:         }
1:         if (hasFlag(flags, TMSUCCESS)) {
1:             add(result, "TMSUCCESS");
1:         }
1:         if (hasFlag(flags, TMSUSPEND)) {
1:             add(result, "TMSUSPEND");
1:         }
1: 
1:         int nonStandardFlags = flags
1:                 & ~TMENDRSCAN
1:                 & ~TMFAIL
1:                 & ~TMJOIN
1:                 & ~TMONEPHASE
1:                 & ~TMRESUME
1:                 & ~TMSTARTRSCAN
1:                 & ~TMSUCCESS
1:                 & ~TMSUSPEND;
1: 
1:         if (nonStandardFlags != 0) {
1:             add(result, String.format("0x%08x", nonStandardFlags));
1:         }
1: 
1:         return result.toString();
1:     }
1: 
1:     private static boolean hasFlag(int flags, int flag) {
1:         return (flags & flag) == flag;
1:     }
1: 
1:     private static void add(StringBuilder result, String string) {
1:         if (result.length() > 0) {
1:             result.append(" | ");
1:         }
1:         result.append(string);
1:     }
1: }
============================================================================