1:8f4ebbb: /**
1:8f4ebbb:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8f4ebbb:  * contributor license agreements.  See the NOTICE file distributed with
1:8f4ebbb:  * this work for additional information regarding copyright ownership.
1:8f4ebbb:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8f4ebbb:  * (the "License"); you may not use this file except in compliance with
1:8f4ebbb:  * the License.  You may obtain a copy of the License at
1:8f4ebbb:  *
1:8f4ebbb:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8f4ebbb:  *
1:8f4ebbb:  * Unless required by applicable law or agreed to in writing, software
1:8f4ebbb:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8f4ebbb:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8f4ebbb:  * See the License for the specific language governing permissions and
1:8f4ebbb:  * limitations under the License.
1:8f4ebbb:  */
1:8f4ebbb: package org.apache.activemq.broker.view;
1:8f4ebbb: 
1:8f4ebbb: import java.util.HashMap;
1:8f4ebbb: import java.util.Map;
1:8f4ebbb: 
1:8f4ebbb: import org.apache.activemq.broker.BrokerRegistry;
1:8f4ebbb: import org.apache.activemq.broker.BrokerService;
1:8f4ebbb: 
1:8f4ebbb: public class MessageBrokerViewRegistry {
1:8f4ebbb: 
1:8f4ebbb:     private static final MessageBrokerViewRegistry INSTANCE = new MessageBrokerViewRegistry();
1:8f4ebbb: 
1:8f4ebbb:     private final Object mutex = new Object();
1:8f4ebbb:     private final Map<String, MessageBrokerView> brokerViews = new HashMap<String, MessageBrokerView>();
1:8f4ebbb: 
1:8f4ebbb:     public static MessageBrokerViewRegistry getInstance() {
1:8f4ebbb:         return INSTANCE;
1:8f4ebbb:     }
1:8f4ebbb: 
1:8f4ebbb:     /**
1:8f4ebbb:      * @param brokerName
1:8f4ebbb:      * @return the BrokerService
1:8f4ebbb:      */
1:8f4ebbb:     public MessageBrokerView lookup(String brokerName) {
1:8f4ebbb:         MessageBrokerView result = null;
1:8f4ebbb:         synchronized (mutex) {
1:8f4ebbb:             result = brokerViews.get(brokerName);
1:8f4ebbb:             if (result==null){
1:8f4ebbb:                 BrokerService brokerService = BrokerRegistry.getInstance().lookup(brokerName);
1:8f4ebbb:                 if (brokerService != null){
1:8f4ebbb:                     result = new MessageBrokerView(brokerService);
1:8f4ebbb:                     brokerViews.put(brokerName,result);
1:8f4ebbb:                 }
1:8f4ebbb:             }
1:8f4ebbb: 
1:8f4ebbb:         }
1:8f4ebbb:         return result;
1:8f4ebbb:     }
1:8f4ebbb: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:e1bbde7
/////////////////////////////////////////////////////////////////////////
author:Robert Davies
-------------------------------------------------------------------------------
commit:8f4ebbb
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.view;
1: 
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import org.apache.activemq.broker.BrokerRegistry;
1: import org.apache.activemq.broker.BrokerService;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
1: 
1: public class MessageBrokerViewRegistry {
1: 
0:     private static final Logger LOG = LoggerFactory.getLogger(BrokerRegistry.class);
1:     private static final MessageBrokerViewRegistry INSTANCE = new MessageBrokerViewRegistry();
1: 
1:     private final Object mutex = new Object();
1:     private final Map<String, MessageBrokerView> brokerViews = new HashMap<String, MessageBrokerView>();
1: 
1:     public static MessageBrokerViewRegistry getInstance() {
1:         return INSTANCE;
1:     }
1: 
1:     /**
1:      * @param brokerName
1:      * @return the BrokerService
1:      */
1:     public MessageBrokerView lookup(String brokerName) {
1:         MessageBrokerView result = null;
1:         synchronized (mutex) {
1:             result = brokerViews.get(brokerName);
1:             if (result==null){
1:                 BrokerService brokerService = BrokerRegistry.getInstance().lookup(brokerName);
1:                 if (brokerService != null){
1:                     result = new MessageBrokerView(brokerService);
1:                     brokerViews.put(brokerName,result);
1:                 }
1:             }
1: 
1:         }
1:         return result;
1:     }
1: }
============================================================================