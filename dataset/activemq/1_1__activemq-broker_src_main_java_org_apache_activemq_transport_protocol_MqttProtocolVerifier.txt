1:04ee70a: /**
1:04ee70a:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:04ee70a:  * contributor license agreements.  See the NOTICE file distributed with
1:04ee70a:  * this work for additional information regarding copyright ownership.
1:04ee70a:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:04ee70a:  * (the "License"); you may not use this file except in compliance with
1:04ee70a:  * the License.  You may obtain a copy of the License at
1:04ee70a:  *
1:04ee70a:  *      http://www.apache.org/licenses/LICENSE-2.0
1:04ee70a:  *
1:04ee70a:  * Unless required by applicable law or agreed to in writing, software
1:04ee70a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:04ee70a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:04ee70a:  * See the License for the specific language governing permissions and
1:04ee70a:  * limitations under the License.
2:04ee70a:  */
1:e14aca8: package org.apache.activemq.transport.protocol;
4:04ee70a: 
1:808a4c5: import java.nio.ByteBuffer;
1:808a4c5: 
1:04ee70a: /**
1:04ee70a:  *
1:04ee70a:  *
1:04ee70a:  */
1:04ee70a: public class MqttProtocolVerifier implements ProtocolVerifier {
1:04ee70a: 
1:04ee70a:     @Override
1:04ee70a:     public boolean isProtocol(byte[] value) {
1:808a4c5:        ByteBuffer buf = ByteBuffer.wrap(value);
1:04ee70a: 
1:808a4c5:        if (!(buf.get() == 16 && validateRemainingLength(buf) && buf.get() == (byte) 0)) {
1:808a4c5:            return false;
1:808a4c5:        }
1:808a4c5:        byte b = buf.get() ;
1:808a4c5:        return ((b == 4 || b == 6) && (buf.get() == 77));
1:04ee70a:     }
1:04ee70a: 
1:808a4c5:     private boolean validateRemainingLength(ByteBuffer buffer) {
1:808a4c5:        byte msb = (byte) 0b10000000;
1:808a4c5:        for (byte i = 0; i < 4; i++) {
1:808a4c5:           if ((buffer.get() & msb) != msb) {
1:808a4c5:              return true;
1:808a4c5:           }
1:808a4c5:        }
1:808a4c5:        return false;
1:808a4c5:     }
1:04ee70a: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:808a4c5
/////////////////////////////////////////////////////////////////////////
1: import java.nio.ByteBuffer;
1: 
1:        ByteBuffer buf = ByteBuffer.wrap(value);
1:        if (!(buf.get() == 16 && validateRemainingLength(buf) && buf.get() == (byte) 0)) {
1:            return false;
1:        }
1:        byte b = buf.get() ;
1:        return ((b == 4 || b == 6) && (buf.get() == 77));
1:     private boolean validateRemainingLength(ByteBuffer buffer) {
1:        byte msb = (byte) 0b10000000;
1:        for (byte i = 0; i < 4; i++) {
1:           if ((buffer.get() & msb) != msb) {
1:              return true;
1:           }
1:        }
1:        return false;
1:     }
commit:e14aca8
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport.protocol;
commit:04ee70a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.activemq.broker.transport.protocol;
1: 
1: /**
1:  *
1:  *
1:  */
1: public class MqttProtocolVerifier implements ProtocolVerifier {
1: 
0:     /* (non-Javadoc)
0:      * @see org.apache.activemq.broker.transport.protocol.ProtocolVerifier#isProtocol(byte[])
1:      */
1:     @Override
1:     public boolean isProtocol(byte[] value) {
0:         boolean mqtt311 = value[4] == 77 && // M
0:                 value[5] == 81 && // Q
0:                 value[6] == 84 && // T
0:                 value[7] == 84;   // T
1: 
0:         boolean mqtt31  = value[4] == 77  && // M
0:                         value[5] == 81  && // Q
0:                         value[6] == 73  && // I
0:                         value[7] == 115;   // s
1: 
0:         return mqtt311 || mqtt31;
1:     }
1: 
1: 
1: 
1: }
============================================================================