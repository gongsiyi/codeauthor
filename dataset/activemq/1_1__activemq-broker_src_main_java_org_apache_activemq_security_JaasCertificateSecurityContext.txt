1:6bae959: /**
1:6bae959:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6bae959:  * contributor license agreements.  See the NOTICE file distributed with
1:6bae959:  * this work for additional information regarding copyright ownership.
1:6bae959:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6bae959:  * (the "License"); you may not use this file except in compliance with
1:6bae959:  * the License.  You may obtain a copy of the License at
2:6bae959:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6bae959:  *
1:6bae959:  * Unless required by applicable law or agreed to in writing, software
1:6bae959:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6bae959:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6bae959:  * See the License for the specific language governing permissions and
1:6bae959:  * limitations under the License.
1:6bae959:  */
1:6bae959: 
1:6bae959: package org.apache.activemq.security;
1:6bae959: 
1:933eb2f: import java.security.Principal;
1:6bae959: import java.security.cert.X509Certificate;
1:6bae959: import java.util.Set;
1:6bae959: 
1:6bae959: import javax.security.auth.Subject;
1:6bae959: 
1:6bae959: /**
1:6bae959:  * Extends the SecurityContext to provide a username which is the
1:6bae959:  * Distinguished Name from the certificate.
1:6bae959:  *
1:6bae959:  */
1:6bae959: public class JaasCertificateSecurityContext extends SecurityContext {
1:6bae959: 
1:6bae959:     private Subject subject;
1:6bae959:     private X509Certificate[] certs;
1:6bae959:   
1:6bae959:     public JaasCertificateSecurityContext(String userName, Subject subject, X509Certificate[] certs) {
1:6bae959:         super(userName);
1:6bae959:         this.subject = subject;
1:6bae959:         this.certs = certs;
1:6bae959:     }
1:6bae959: 
1:933eb2f:     public Set<Principal> getPrincipals() {
1:6bae959:         return subject.getPrincipals();
1:6bae959:     }
1:6bae959:   
1:6bae959:     public String getUserName() {
1:6bae959:         if (certs != null && certs.length > 0) {
1:6bae959:             return certs[0].getSubjectDN().getName();
1:6bae959:         }
1:6bae959:         return super.getUserName();
1:6bae959:     }
1:6bae959: 
1:6bae959: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1: import java.security.Principal;
/////////////////////////////////////////////////////////////////////////
1:     public Set<Principal> getPrincipals() {
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:6bae959
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.security;
1: 
1: import java.security.cert.X509Certificate;
1: import java.util.Set;
1: 
1: import javax.security.auth.Subject;
1: 
1: /**
1:  * Extends the SecurityContext to provide a username which is the
1:  * Distinguished Name from the certificate.
1:  *
1:  */
1: public class JaasCertificateSecurityContext extends SecurityContext {
1: 
1:     private Subject subject;
1:     private X509Certificate[] certs;
1:   
1:     public JaasCertificateSecurityContext(String userName, Subject subject, X509Certificate[] certs) {
1:         super(userName);
1:         this.subject = subject;
1:         this.certs = certs;
1:     }
1: 
0:     public Set getPrincipals() {
1:         return subject.getPrincipals();
1:     }
1:   
1:     public String getUserName() {
1:         if (certs != null && certs.length > 0) {
1:             return certs[0].getSubjectDN().getName();
1:         }
1:         return super.getUserName();
1:     }
1: 
1: }
============================================================================