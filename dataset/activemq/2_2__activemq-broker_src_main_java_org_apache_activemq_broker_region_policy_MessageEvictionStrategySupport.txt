1:cc6fec6: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:cc6fec6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cc6fec6:  *
1:cc6fec6:  * Unless required by applicable law or agreed to in writing, software
1:cc6fec6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cc6fec6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cc6fec6:  * See the License for the specific language governing permissions and
1:cc6fec6:  * limitations under the License.
1:cc6fec6:  */
1:cc6fec6: package org.apache.activemq.broker.region.policy;
1:cc6fec6: 
1:cc6fec6: /**
1:cc6fec6:  * A useful base class for implementation inheritence.
1:0bbc0ac:  * 
1:cc6fec6:  * 
1:cc6fec6:  */
1:cc6fec6: public abstract class MessageEvictionStrategySupport implements MessageEvictionStrategy {
1:cc6fec6: 
1:cc6fec6:     private int evictExpiredMessagesHighWatermark = 1000;
1:cc6fec6: 
1:cc6fec6:     public int getEvictExpiredMessagesHighWatermark() {
1:cc6fec6:         return evictExpiredMessagesHighWatermark;
1:cc6fec6:     }
1:cc6fec6: 
1:cc6fec6:     /**
1:cc6fec6:      * Sets the high water mark on which we will eagerly evict expired messages from RAM
1:cc6fec6:      */
1:cc6fec6:     public void setEvictExpiredMessagesHighWatermark(int evictExpiredMessagesHighWaterMark) {
1:cc6fec6:         this.evictExpiredMessagesHighWatermark = evictExpiredMessagesHighWaterMark;
1:cc6fec6:     }
1:cc6fec6:     
1:cc6fec6:     
1:cc6fec6: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:cc6fec6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.policy;
1: 
1: /**
1:  * A useful base class for implementation inheritence.
1:  * 
0:  * @version $Revision$
1:  */
1: public abstract class MessageEvictionStrategySupport implements MessageEvictionStrategy {
1: 
1:     private int evictExpiredMessagesHighWatermark = 1000;
1: 
1:     public int getEvictExpiredMessagesHighWatermark() {
1:         return evictExpiredMessagesHighWatermark;
1:     }
1: 
1:     /**
1:      * Sets the high water mark on which we will eagerly evict expired messages from RAM
1:      */
1:     public void setEvictExpiredMessagesHighWatermark(int evictExpiredMessagesHighWaterMark) {
1:         this.evictExpiredMessagesHighWatermark = evictExpiredMessagesHighWaterMark;
1:     }
1:     
1:     
1: }
============================================================================