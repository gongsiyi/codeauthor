1:bec711c: /**
1:bec711c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:bec711c:  * contributor license agreements.  See the NOTICE file distributed with
1:bec711c:  * this work for additional information regarding copyright ownership.
1:bec711c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:bec711c:  * (the "License"); you may not use this file except in compliance with
1:bec711c:  * the License.  You may obtain a copy of the License at
1:bec711c:  *
1:bec711c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:bec711c:  *
1:bec711c:  * Unless required by applicable law or agreed to in writing, software
1:bec711c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:bec711c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bec711c:  * See the License for the specific language governing permissions and
1:bec711c:  * limitations under the License.
1:bec711c:  */
1:bec711c: package org.apache.activemq.broker.policy;
5:bec711c: 
1:a0835c2: import java.util.ArrayList;
1:a0835c2: import java.util.List;
1:a0835c2: 
1:a0835c2: import javax.jms.ExceptionListener;
1:a0835c2: import javax.jms.JMSException;
1:a0835c2: 
1:bec711c: import org.apache.activemq.JmsMultipleClientsTestSupport;
1:bec711c: import org.apache.activemq.broker.BrokerService;
1:bec711c: import org.apache.activemq.broker.region.policy.AbortSlowConsumerStrategy;
1:bec711c: import org.apache.activemq.broker.region.policy.PolicyEntry;
1:bec711c: import org.apache.activemq.broker.region.policy.PolicyMap;
1:bec711c: import org.junit.Before;
1:bec711c: 
1:bec711c: public class AbortSlowConsumerBase extends JmsMultipleClientsTestSupport implements ExceptionListener {
1:bec711c: 
1:bec711c:     protected AbortSlowConsumerStrategy underTest;
1:bec711c:     protected boolean abortConnection = false;
1:bec711c:     protected long checkPeriod = 2 * 1000;
1:bec711c:     protected long maxSlowDuration = 5 * 1000;
1:bec711c:     protected final List<Throwable> exceptions = new ArrayList<Throwable>();
1:bec711c: 
1:bec711c:     @Override
1:bec711c:     @Before
1:bec711c:     public void setUp() throws Exception {
1:bec711c:         exceptions.clear();
1:bec711c:         topic = true;
1:bec711c:         underTest = createSlowConsumerStrategy();
1:bec711c:         super.setUp();
1:bec711c:         createDestination();
1:bec711c:     }
1:bec711c: 
1:bec711c:     protected AbortSlowConsumerStrategy createSlowConsumerStrategy() {
1:bec711c:         return new AbortSlowConsumerStrategy();
1:bec711c:     }
1:bec711c: 
1:bec711c:     @Override
1:bec711c:     protected BrokerService createBroker() throws Exception {
1:bec711c:         BrokerService broker = super.createBroker();
1:bec711c:         PolicyEntry policy = new PolicyEntry();
1:bec711c:         underTest.setAbortConnection(abortConnection);
1:bec711c:         underTest.setCheckPeriod(checkPeriod);
1:bec711c:         underTest.setMaxSlowDuration(maxSlowDuration);
1:bec711c: 
1:bec711c:         policy.setSlowConsumerStrategy(underTest);
1:bec711c:         policy.setQueuePrefetch(10);
1:bec711c:         policy.setTopicPrefetch(10);
1:bec711c:         PolicyMap pMap = new PolicyMap();
1:bec711c:         pMap.setDefaultEntry(policy);
1:bec711c:         broker.setDestinationPolicy(pMap);
1:bec711c:         return broker;
1:bec711c:     }
1:bec711c: 
1:bec711c:     @Override
1:bec711c:     public void onException(JMSException exception) {
1:bec711c:         exceptions.add(exception);
1:bec711c:         exception.printStackTrace();
1:bec711c:     }
1:bec711c: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:a0835c2
/////////////////////////////////////////////////////////////////////////
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: import javax.jms.ExceptionListener;
1: import javax.jms.JMSException;
1: 
/////////////////////////////////////////////////////////////////////////
author:Kevin Earls
-------------------------------------------------------------------------------
commit:bec711c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.policy;
1: 
0: import junit.framework.Test;
1: import org.apache.activemq.JmsMultipleClientsTestSupport;
1: import org.apache.activemq.broker.BrokerService;
0: import org.apache.activemq.broker.jmx.AbortSlowConsumerStrategyViewMBean;
0: import org.apache.activemq.broker.jmx.DestinationViewMBean;
1: import org.apache.activemq.broker.region.policy.AbortSlowConsumerStrategy;
1: import org.apache.activemq.broker.region.policy.PolicyEntry;
1: import org.apache.activemq.broker.region.policy.PolicyMap;
0: import org.apache.activemq.command.ActiveMQDestination;
0: import org.apache.activemq.util.MessageIdList;
1: import org.junit.Before;
0: import org.slf4j.Logger;
0: import org.slf4j.LoggerFactory;
1: 
0: import javax.jms.Connection;
0: import javax.jms.ExceptionListener;
0: import javax.jms.JMSException;
0: import javax.jms.MessageConsumer;
0: import javax.jms.Session;
0: import javax.management.InstanceNotFoundException;
0: import javax.management.ObjectName;
0: import javax.management.openmbean.CompositeData;
0: import javax.management.openmbean.TabularData;
0: import java.lang.reflect.UndeclaredThrowableException;
0: import java.util.ArrayList;
0: import java.util.List;
0: import java.util.Map.Entry;
0: import java.util.concurrent.TimeUnit;
1: 
1: 
1: public class AbortSlowConsumerBase extends JmsMultipleClientsTestSupport implements ExceptionListener {
1: 
0:     private static final Logger LOG = LoggerFactory.getLogger(AbortSlowConsumerBase.class);
1: 
1:     protected AbortSlowConsumerStrategy underTest;
1:     protected boolean abortConnection = false;
1:     protected long checkPeriod = 2 * 1000;
1:     protected long maxSlowDuration = 5 * 1000;
1:     protected final List<Throwable> exceptions = new ArrayList<Throwable>();
1: 
1:     @Override
1:     @Before
1:     public void setUp() throws Exception {
1:         exceptions.clear();
1:         topic = true;
1:         underTest = createSlowConsumerStrategy();
1:         super.setUp();
1:         createDestination();
1:     }
1: 
1:     protected AbortSlowConsumerStrategy createSlowConsumerStrategy() {
1:         return new AbortSlowConsumerStrategy();
1:     }
1: 
1:     @Override
1:     protected BrokerService createBroker() throws Exception {
1:         BrokerService broker = super.createBroker();
1:         PolicyEntry policy = new PolicyEntry();
1:         underTest.setAbortConnection(abortConnection);
1:         underTest.setCheckPeriod(checkPeriod);
1:         underTest.setMaxSlowDuration(maxSlowDuration);
1: 
1:         policy.setSlowConsumerStrategy(underTest);
1:         policy.setQueuePrefetch(10);
1:         policy.setTopicPrefetch(10);
1:         PolicyMap pMap = new PolicyMap();
1:         pMap.setDefaultEntry(policy);
1:         broker.setDestinationPolicy(pMap);
1:         return broker;
1:     }
1: 
1:     @Override
1:     public void onException(JMSException exception) {
1:         exceptions.add(exception);
1:         exception.printStackTrace();
1:     }
1: 
1: }
============================================================================