1:7092b19: /**
1:7092b19:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7092b19:  * contributor license agreements.  See the NOTICE file distributed with
1:7092b19:  * this work for additional information regarding copyright ownership.
1:7092b19:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7092b19:  * (the "License"); you may not use this file except in compliance with
1:7092b19:  * the License.  You may obtain a copy of the License at
1:7092b19:  *
1:7092b19:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7092b19:  *
1:7092b19:  * Unless required by applicable law or agreed to in writing, software
1:7092b19:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7092b19:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7092b19:  * See the License for the specific language governing permissions and
1:7092b19:  * limitations under the License.
1:7092b19:  */
1:7092b19: package org.apache.activemq.broker.jmx;
1:7092b19: 
1:7092b19: public interface ProducerViewMBean {
1:7092b19: 
1:7092b19:     /**
1:7092b19:      * @return the clientId of the Connection the Producer is on
1:7092b19:      */
1:7092b19:     @MBeanInfo("JMS Client id of the Connection the Producer is on.")
1:7092b19:     String getClientId();
1:7092b19: 
1:7092b19:     /**
1:7092b19:      * @return the id of the Connection the Producer is on
1:7092b19:      */
1:7092b19:     @MBeanInfo("ID of the Connection the Producer is on.")
1:7092b19:     String getConnectionId();
1:7092b19: 
1:7092b19:     /**
1:7092b19:      * @return the id of the Session the Producer is on
1:7092b19:      */
1:7092b19:     @MBeanInfo("ID of the Session the Producer is on.")
1:7092b19:     long getSessionId();
1:7092b19: 
1:7092b19:     /**
1:6d48b4b:      * @return the id of Producer.
1:6d48b4b:      */
1:6d48b4b:     @MBeanInfo("ID of the Producer.")
1:6d48b4b:     String getProducerId();
1:6d48b4b: 
1:6d48b4b:     /**
1:7092b19:      * @return the destination name
1:7092b19:      */
1:7092b19:     @MBeanInfo("The name of the destionation the Producer is on.")
1:7092b19:     String getDestinationName();
1:7092b19: 
1:7092b19:     /**
1:7092b19:      * @return true if the destination is a Queue
1:7092b19:      */
1:7092b19:     @MBeanInfo("Producer is on a Queue")
1:7092b19:     boolean isDestinationQueue();
1:7092b19: 
1:7092b19:     /**
1:7092b19:      * @return true of the destination is a Topic
1:7092b19:      */
1:7092b19:     @MBeanInfo("Producer is on a Topic")
1:7092b19:     boolean isDestinationTopic();
1:7092b19: 
1:7092b19:     /**
1:7092b19:      * @return true if the destination is temporary
1:7092b19:      */
1:7092b19:     @MBeanInfo("Producer is on a temporary Queue/Topic")
1:7092b19:     boolean isDestinationTemporary();
1:7092b19: 
1:7092b19:     /**
1:5e05df1:      * @return the windows size configured for the producer
1:7092b19:      */
1:7092b19:     @MBeanInfo("Configured Window Size for the Producer")
1:7092b19:     int getProducerWindowSize();
1:7092b19: 
1:7092b19:     /**
1:c2ad0c3:      * @deprecated This value is no longer used for producers.
1:5e05df1:      * @return if the Producer is configured for Async dispatch
1:7092b19:      */
1:c2ad0c3:     @Deprecated
1:7092b19:     @MBeanInfo("Is the producer configured for Async Dispatch")
1:7092b19:     boolean isDispatchAsync();
1:f5dcc9d: 
1:f5dcc9d:     /**
1:f5dcc9d:      * Returns the User Name used to authorize creation of this Producer.
1:f5dcc9d:      * This value can be null if display of user name information is disabled.
1:f5dcc9d:      *
1:f5dcc9d:      * @return the name of the user that created this Producer
1:f5dcc9d:      */
1:f5dcc9d:     @MBeanInfo("User Name used to authorize creation of this Producer")
1:f5dcc9d:     String getUserName();
1:0736953: 
1:0736953:     @MBeanInfo("is the producer blocked for Flow Control")
1:0736953:     boolean isProducerBlocked();
1:0736953: 
1:0736953:     @MBeanInfo("total time (ms) Producer Blocked For Flow Control")
1:0736953:     long getTotalTimeBlocked();
1:0736953: 
1:0736953:     @MBeanInfo("percentage of sends Producer Blocked for Flow Control")
1:0736953:     int getPercentageBlocked();
1:0736953: 
1:07ec890:     @MBeanInfo("reset flow control state")
1:0736953:     void resetFlowControlStats();
1:07ec890: 
1:07ec890:     @MBeanInfo("Resets statistics.")
1:07ec890:     void resetStatistics();
1:07ec890: 
1:6683eb6:     @MBeanInfo("Messages dispatched by Producer")
1:07ec890:     long getSentCount();
1:07ec890: 
1:7092b19: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:c2ad0c3
/////////////////////////////////////////////////////////////////////////
1:      * @deprecated This value is no longer used for producers.
1:     @Deprecated
commit:5e05df1
/////////////////////////////////////////////////////////////////////////
1:      * @return the windows size configured for the producer
1:      * @return if the Producer is configured for Async dispatch
author:rajdavies
-------------------------------------------------------------------------------
commit:6683eb6
/////////////////////////////////////////////////////////////////////////
1:     @MBeanInfo("Messages dispatched by Producer")
author:Rob Davies
-------------------------------------------------------------------------------
commit:07ec890
/////////////////////////////////////////////////////////////////////////
1:     @MBeanInfo("reset flow control state")
1: 
1:     @MBeanInfo("Resets statistics.")
1:     void resetStatistics();
1: 
0:     @MBeanInfo("Messages consumed")
1:     long getSentCount();
1: 
author:Robert Davies
-------------------------------------------------------------------------------
commit:0736953
/////////////////////////////////////////////////////////////////////////
1: 
1:     @MBeanInfo("is the producer blocked for Flow Control")
1:     boolean isProducerBlocked();
1: 
1:     @MBeanInfo("total time (ms) Producer Blocked For Flow Control")
1:     long getTotalTimeBlocked();
1: 
1:     @MBeanInfo("percentage of sends Producer Blocked for Flow Control")
1:     int getPercentageBlocked();
1: 
0:     @MBeanInfo("reset flow control stata")
1:     void resetFlowControlStats();
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:f5dcc9d
/////////////////////////////////////////////////////////////////////////
1: 
1:     /**
1:      * Returns the User Name used to authorize creation of this Producer.
1:      * This value can be null if display of user name information is disabled.
1:      *
1:      * @return the name of the user that created this Producer
1:      */
1:     @MBeanInfo("User Name used to authorize creation of this Producer")
1:     String getUserName();
commit:6d48b4b
/////////////////////////////////////////////////////////////////////////
1:      * @return the id of Producer.
1:      */
1:     @MBeanInfo("ID of the Producer.")
1:     String getProducerId();
1: 
1:     /**
commit:7092b19
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: public interface ProducerViewMBean {
1: 
1:     /**
1:      * @return the clientId of the Connection the Producer is on
1:      */
1:     @MBeanInfo("JMS Client id of the Connection the Producer is on.")
1:     String getClientId();
1: 
1:     /**
1:      * @return the id of the Connection the Producer is on
1:      */
1:     @MBeanInfo("ID of the Connection the Producer is on.")
1:     String getConnectionId();
1: 
1:     /**
1:      * @return the id of the Session the Producer is on
1:      */
1:     @MBeanInfo("ID of the Session the Producer is on.")
1:     long getSessionId();
1: 
1:     /**
1:      * @return the destination name
1:      */
1:     @MBeanInfo("The name of the destionation the Producer is on.")
1:     String getDestinationName();
1: 
1:     /**
1:      * @return true if the destination is a Queue
1:      */
1:     @MBeanInfo("Producer is on a Queue")
1:     boolean isDestinationQueue();
1: 
1:     /**
1:      * @return true of the destination is a Topic
1:      */
1:     @MBeanInfo("Producer is on a Topic")
1:     boolean isDestinationTopic();
1: 
1:     /**
1:      * @return true if the destination is temporary
1:      */
1:     @MBeanInfo("Producer is on a temporary Queue/Topic")
1:     boolean isDestinationTemporary();
1: 
1:     /**
0:      * @returns the windows size configured for the producer
1:      */
1:     @MBeanInfo("Configured Window Size for the Producer")
1:     int getProducerWindowSize();
1: 
1:     /**
0:      * @returns if the Producer is configured for Async dispatch
1:      */
1:     @MBeanInfo("Is the producer configured for Async Dispatch")
1:     boolean isDispatchAsync();
1: }
============================================================================