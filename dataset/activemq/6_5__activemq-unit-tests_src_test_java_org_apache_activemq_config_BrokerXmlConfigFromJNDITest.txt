1:a677c21: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:0bbc0ac:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
4:a677c21:  *
1:a677c21:  * Unless required by applicable law or agreed to in writing, software
1:a677c21:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a677c21:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a677c21:  * See the License for the specific language governing permissions and
1:a677c21:  * limitations under the License.
1:a677c21:  */
1:a677c21: package org.apache.activemq.config;
7:a677c21: 
1:a677c21: import java.io.File;
1:a677c21: import java.util.Hashtable;
1:a677c21: 
1:74a7a8b: import javax.naming.Context;
1:74a7a8b: import javax.naming.InitialContext;
1:74a7a8b: 
1:74a7a8b: import org.apache.activemq.ActiveMQConnectionFactory;
1:74a7a8b: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1:74a7a8b: 
1:a677c21: /**
1:c7d559f:  *
1:a677c21:  */
1:a677c21: public class BrokerXmlConfigFromJNDITest extends JmsTopicSendReceiveWithTwoConnectionsTest {
1:c7d559f:     @Override
1:a677c21:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
1:02fe43b:         assertBaseDirectoryContainsSpaces();
1:a677c21: 
1:a677c21:         // we could put these properties into a jndi.properties
1:a677c21:         // on the classpath instead
1:c7d559f:         Hashtable<String, String> properties = new Hashtable<String, String>();
1:a677c21:         properties.put("java.naming.factory.initial", "org.apache.activemq.jndi.ActiveMQInitialContextFactory");
1:a677c21: 
1:a677c21:         // configure the embedded broker using an XML config file
1:a677c21:         // which is either a URL or a resource on the classpath
1:beaca8a:         File f = new File(System.getProperty("basedir", "."), "/src/test/resources/activemq.xml");
1:beaca8a:         properties.put(Context.PROVIDER_URL, "vm://localhost?brokerConfig=xbean:" + f.toURI());
1:a677c21: 
1:a677c21:         InitialContext context = new InitialContext(properties);
1:a677c21:         ActiveMQConnectionFactory connectionFactory = (ActiveMQConnectionFactory) context.lookup("ConnectionFactory");
1:a677c21: 
1:a677c21:         // END SNIPPET: example
1:a677c21:         return connectionFactory;
1:a677c21:     }
1:a677c21: 
1:a677c21: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:c7d559f
/////////////////////////////////////////////////////////////////////////
1:  *
1:     @Override
1:         Hashtable<String, String> properties = new Hashtable<String, String>();
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import javax.naming.Context;
1: import javax.naming.InitialContext;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:e80e052
/////////////////////////////////////////////////////////////////////////
0: //        System.err.print(System.getProperties());
commit:5a58837
/////////////////////////////////////////////////////////////////////////
0:         properties.put(Context.PROVIDER_URL, "vm://localhost?brokerConfig=xbean:file:"+f+"/src/test/resources/activemq.xml");
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Robert Davies
-------------------------------------------------------------------------------
commit:02fe43b
/////////////////////////////////////////////////////////////////////////
1:         assertBaseDirectoryContainsSpaces();
/////////////////////////////////////////////////////////////////////////
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:beaca8a
/////////////////////////////////////////////////////////////////////////
1:         File f = new File(System.getProperty("basedir", "."), "/src/test/resources/activemq.xml");
1:         properties.put(Context.PROVIDER_URL, "vm://localhost?brokerConfig=xbean:" + f.toURI());
author:James Strachan
-------------------------------------------------------------------------------
commit:a677c21
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.config;
1: 
0: import org.apache.activemq.ActiveMQConnectionFactory;
0: import org.apache.activemq.test.JmsTopicSendReceiveWithTwoConnectionsTest;
1: 
0: import javax.naming.InitialContext;
0: import javax.naming.Context;
1: 
1: import java.io.File;
1: import java.util.Hashtable;
1: 
1: /**
0:  * @version $Revision$
1:  */
1: public class BrokerXmlConfigFromJNDITest extends JmsTopicSendReceiveWithTwoConnectionsTest {
1:     protected ActiveMQConnectionFactory createConnectionFactory() throws Exception {
0:         // START SNIPPET: example
1: 
1:         
0:         System.err.print(System.getProperties());
1:         
1:         // we could put these properties into a jndi.properties
1:         // on the classpath instead
0:         Hashtable properties = new Hashtable();
1:         properties.put("java.naming.factory.initial", "org.apache.activemq.jndi.ActiveMQInitialContextFactory");
1: 
1:         // configure the embedded broker using an XML config file
1:         // which is either a URL or a resource on the classpath
1:         
0:         File f = new File(System.getProperty("basedir", "."));
0:         f = new File(f, "src/sample-conf/default.xml");
1:         
0:         properties.put("brokerXmlConfig", "file:"+f.getPath());
0:         properties.put(Context.PROVIDER_URL, "vm://localhost");
1: 
1:         InitialContext context = new InitialContext(properties);
1:         ActiveMQConnectionFactory connectionFactory = (ActiveMQConnectionFactory) context.lookup("ConnectionFactory");
1: 
1:         // END SNIPPET: example
1:         return connectionFactory;
1:     }
1: 
1: }
============================================================================