1:a88906f: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:a88906f:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a88906f:  *
1:a88906f:  * Unless required by applicable law or agreed to in writing, software
1:a88906f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a88906f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a88906f:  * See the License for the specific language governing permissions and
1:a88906f:  * limitations under the License.
1:a88906f:  */
1:a88906f: package org.apache.activemq.maven;
2:a88906f: 
1:540dd5c: import java.util.ArrayList;
1:540dd5c: import java.util.HashSet;
1:540dd5c: import java.util.Iterator;
1:540dd5c: import java.util.List;
1:540dd5c: import java.util.Properties;
1:540dd5c: import java.util.Set;
1:540dd5c: 
1:a88906f: import org.apache.activemq.tool.JmsProducerSystem;
1:a88906f: import org.apache.maven.plugin.AbstractMojo;
1:a88906f: import org.apache.maven.plugin.MojoExecutionException;
1:a88906f: 
1:a88906f: /**
1:a88906f:  * Goal which touches a timestamp file.
1:540dd5c:  * 
1:a88906f:  * @goal producer
1:a88906f:  * @phase process
1:a88906f:  */
1:a88906f: public class ProducerMojo extends AbstractMojo {
1:a88906f: 
1:a88906f:     private String[] validPrefix = {
1:540dd5c:         "sysTest.", "factory.", "producer.", "tpSampler.", "cpuSampler."
1:a88906f:     };
1:a88906f: 
1:a88906f:     public void execute() throws MojoExecutionException {
1:a88906f:         JmsProducerSystem.main(createArgument());
1:a88906f:     }
1:a88906f: 
1:a88906f:     protected String[] createArgument() {
1:a88906f:         List args = new ArrayList();
1:a88906f:         Properties sysProps = System.getProperties();
1:a88906f:         Set keys = new HashSet(sysProps.keySet());
1:a88906f: 
1:540dd5c:         for (Iterator i = keys.iterator(); i.hasNext();) {
1:a88906f:             String key = (String)i.next();
1:a88906f:             if (isRecognizedProperty(key)) {
1:a88906f:                 args.add(key + "=" + sysProps.remove(key));
1:a88906f:             }
1:a88906f:         }
1:a88906f:         return (String[])args.toArray(new String[0]);
1:a88906f:     }
1:a88906f: 
1:a88906f:     protected boolean isRecognizedProperty(String key) {
1:540dd5c:         for (int j = 0; j < validPrefix.length; j++) {
1:a88906f:             if (key.startsWith(validPrefix[j])) {
1:a88906f:                 return true;
1:a88906f:             }
1:a88906f:         }
1:a88906f:         return false;
1:a88906f:     }
1:a88906f: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:87e878b
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import java.util.ArrayList;
1: import java.util.HashSet;
1: import java.util.Iterator;
1: import java.util.List;
1: import java.util.Properties;
1: import java.util.Set;
1: 
1:  * 
1:         "sysTest.", "factory.", "producer.", "tpSampler.", "cpuSampler."
/////////////////////////////////////////////////////////////////////////
1:         for (Iterator i = keys.iterator(); i.hasNext();) {
/////////////////////////////////////////////////////////////////////////
1:         for (int j = 0; j < validPrefix.length; j++) {
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:a88906f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.maven;
1: 
1: import org.apache.activemq.tool.JmsProducerSystem;
1: import org.apache.maven.plugin.AbstractMojo;
1: import org.apache.maven.plugin.MojoExecutionException;
1: 
0: import java.util.List;
0: import java.util.ArrayList;
0: import java.util.Properties;
0: import java.util.Iterator;
0: import java.util.Set;
0: import java.util.HashSet;
1: 
1: /**
1:  * Goal which touches a timestamp file.
1:  *
1:  * @goal producer
1:  * @phase process
1:  */
1: public class ProducerMojo extends AbstractMojo {
1: 
1:     private String[] validPrefix = {
0:         "sysTest.",
0:         "factory.",
0:         "producer.",
0:         "tpSampler.",
0:         "cpuSampler."
1:     };
1: 
1:     public void execute() throws MojoExecutionException {
1:         JmsProducerSystem.main(createArgument());
1:     }
1: 
1:     protected String[] createArgument() {
1:         List args = new ArrayList();
1:         Properties sysProps = System.getProperties();
1:         Set keys = new HashSet(sysProps.keySet());
1: 
0:         for (Iterator i=keys.iterator(); i.hasNext();) {
1:             String key = (String)i.next();
1:             if (isRecognizedProperty(key)) {
1:                 args.add(key + "=" + sysProps.remove(key));
1:             }
1:         }
1:         return (String[])args.toArray(new String[0]);
1:     }
1: 
1:     protected boolean isRecognizedProperty(String key) {
0:         for (int j=0; j<validPrefix.length; j++) {
1:             if (key.startsWith(validPrefix[j])) {
1:                 return true;
1:             }
1:         }
1:         return false;
1:     }
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:dd55c21
commit:1ff39db
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${sampler.interval}" default-value="1000"
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${consumer.destName}" default-value="topic://TEST.PERFORMANCE.FOO.BAR"
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${producer.sendCount}" default-value="1000000"
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${sysTest.numClients}" default-value="1"
0:      * @parameter expression="${sysTest.totalDests}" default-value="1"
/////////////////////////////////////////////////////////////////////////
0:         String[] options = {
0:             "sampler.duration=" + duration,   
0:             "sampler.interval=" + interval,     
0:             "sampler.rampUpTime=" + rampUpTime,   
0:             "sampler.rampDownTime=" + rampDownTime, 
0:     
0:             "producer.spiClass=" + spiClass,
0:             "producer.sessTransacted=" + sessTransacted,
0:             "producer.sessAckMode=" + sessAckMode,
0:             "producer.destName=" + destName,
0:             "producer.destCount=" + destCount,
0:             "producer.destComposite=" + destComposite,
0:     
0:             "producer.messageSize="+messageSize,
0:             "producer.sendCount="+sendCount,    
0:             "producer.sendDuration="+duration, 
0:             "producer.sendType="+sendType,
0:     
0:             "factory.brokerUrl="+brokerUrl,
0:             "factory.asyncSend="+asyncSend,
0:     
0:             "sysTest.numClients=" + numClients,
0:             "sysTest.totalDests=" + totalDests,
0:             "sysTest.destDistro=" + destDistro,
0:             "sysTest.reportDirectory=" + reportDirectory 
0:         };
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:f1c6e4c
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  * http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.maven;
0: import org.apache.activemq.tool.JmsProducerSystem;
0: import org.apache.maven.plugin.AbstractMojo;
0: import org.apache.maven.plugin.MojoExecutionException;
0: 
0: import java.util.List;
0: import java.util.ArrayList;
0: import java.util.Properties;
0: import java.util.Iterator;
0: import java.util.Set;
0: import java.util.HashSet;
/////////////////////////////////////////////////////////////////////////
0: public class ProducerMojo extends AbstractMojo {
0:     private String[] validPrefix = {
0:         "sysTest.",
0:         "factory.",
0:         "producer.",
0:         "tpSampler.",
0:         "cpuSampler."
0:     };
0:     public void execute() throws MojoExecutionException {
0:     protected String[] createArgument() {
0:         List args = new ArrayList();
0:         Properties sysProps = System.getProperties();
0:         Set keys = new HashSet(sysProps.keySet());
0:         for (Iterator i=keys.iterator(); i.hasNext();) {
0:             String key = (String)i.next();
0:             if (isRecognizedProperty(key)) {
0:                 args.add(key + "=" + sysProps.remove(key));
0:             }
0:         }
0:         return (String[])args.toArray(new String[0]);
0:     }
0:     protected boolean isRecognizedProperty(String key) {
0:         for (int j=0; j<validPrefix.length; j++) {
0:             if (key.startsWith(validPrefix[j])) {
0:                 return true;
0:             }
0:         }
0:         return false;
commit:2fa8814
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${producer.deliveryMode}" default-value="nonpersistent"
0:      * @required
0:      */
0:     private String deliveryMode;
0: 
0:     /**
/////////////////////////////////////////////////////////////////////////
0: 
0:             "producer.deliveryMode="+deliveryMode,
commit:21e0837
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${producer.destName}" default-value="topic://TEST.PERFORMANCE.FOO.BAR"
commit:51eed37
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${producer.spiClass}" default-value="org.apache.activemq.tool.spi.ActiveMQPojoSPI"
0:      * @parameter expression="${producer.sessTransacted}" default-value="false"
0:      * @parameter expression="${producer.sessAckMode}" default-value="autoAck"
0:      * @parameter expression="${producer.destName}" default-value="topic://FOO.BAR.TEST"
0:      * @parameter expression="${producer.destCount}" default-value="1"
0:      * @parameter expression="${producer.destComposite}" default-value="false"
0:      * @parameter expression="${producer.messageSize}" default-value="1024"
0:      * @parameter expression="${producer.sendCount}" default-value="1000"
0:      * @parameter expression="${producer.sendDuration}" default-value="60000"
0:      * @parameter expression="${producer.sendType}" default-value="time"
/////////////////////////////////////////////////////////////////////////
0:         options[4] = "producer.spiClass=" + spiClass;
0:         options[5] = "producer.sessTransacted=" + sessTransacted;
0:         options[6] = "producer.sessAckMode=" + sessAckMode;
0:         options[7] = "producer.destName=" + destName;
0:         options[8] = "producer.destCount=" + destCount;
0:         options[9] = "producer.destComposite=" + destComposite;
0:         options[10] = "producer.messageSize="+messageSize;
0:         options[11] = "producer.sendCount="+sendCount;     // 1000 messages
0:         options[12] = "producer.sendDuration="+duration; // use sampler.duration.
0:         options[13] = "producer.sendType="+sendType;
author:Frederick G. Oconer
-------------------------------------------------------------------------------
commit:d6c2de6
/////////////////////////////////////////////////////////////////////////
0:     /**
0:      * @parameter expression="${sysTest.reportType}" default-value="xml"
0:      * @required
0:      */
0:     private String reportType;
0: 
/////////////////////////////////////////////////////////////////////////
0:             "sysTest.reportDirectory=" + reportDirectory,
0:             "sysTest.reportType=" + reportType
commit:edfe3df
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${client.messageSize}" default-value="1024"
0:      * @parameter expression="${client.sendCount}" default-value="1000"
0:      * @parameter expression="${client.sendDuration}" default-value="60000"
0:      * @parameter expression="${client.sendType}" default-value="time"
/////////////////////////////////////////////////////////////////////////
0:         options[10] = "client.messageSize="+messageSize;
0:         options[11] = "client.sendCount="+sendCount;     // 1000 messages
0:         options[12] = "client.sendDuration="+duration; // use sampler.duration.
0:         options[13] = "client.sendType="+sendType;
commit:4fb36fe
/////////////////////////////////////////////////////////////////////////
0:     /*
0: 
0:     */
/////////////////////////////////////////////////////////////////////////
0:         options[0] = "sampler.duration=" + duration;     // 1 min
0:         options[1] = "sampler.interval=" + interval;      // 5 secs
0:         options[2] = "sampler.rampUpTime=" + rampUpTime;   // 10 secs
0:         options[3] = "sampler.rampDownTime=" + rampDownTime; // 10 secs
0:         options[4] = "client.spiClass=" + spiClass;
0:         options[5] = "client.sessTransacted=" + sessTransacted;
0:         options[6] = "client.sessAckMode=" + sessAckMode;
0:         options[7] = "client.destName=" + destName;
0:         options[8] = "client.destCount=" + destCount;
0:         options[9] = "client.destComposite=" + destComposite;
0:         options[10] = "producer.messageSize="+messageSize;
0:         options[11] = "producer.sendCount="+sendCount;     // 1000 messages
0:         options[12] = "producer.sendDuration="+duration; // use sampler.duration.
0:         options[13] = "producer.sendType="+sendType;
0:         options[14] = "factory.brokerUrl="+brokerUrl;
0:         options[15] = "factory.asyncSend="+asyncSend;
0:         options[16] = "sysTest.numClients=" + numClients;
0:         options[17] = "sysTest.totalDests=" + totalDests;
0:         options[18] = "sysTest.destDistro=" + destDistro;
0:         options[19] = "sysTest.reportDirectory=" + reportDirectory;
commit:11a2950
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${sampler.duration}" default-value="60000"
/////////////////////////////////////////////////////////////////////////
0: 
0:         String[] options = new String[20];
/////////////////////////////////////////////////////////////////////////
0:         options[16] = "-DsysTest.numClients=" + numClients;
0:         options[17] = "-DsysTest.totalDests=" + totalDests;
0:         options[18] = "-DsysTest.destDistro=" + destDistro;
0:         options[19] = "-DsysTest.reportDirectory=" + reportDirectory;
commit:264f0a3
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.tool.JmsProducerSystem;
/////////////////////////////////////////////////////////////////////////
0:      * @parameter expression="${sampler.durable}" default-value="60000"
0:     private String duration;
0: 
0:      * @parameter expression="${sampler.interval}" default-value="5000"
0:     private String interval;
0: 
0:      * @parameter expression="${sampler.rampUpTime}" default-value="10000"
0:     private String rampUpTime;
0: 
0:      * @parameter expression="${sampler.rampDownTime}" default-value="10000"
0:     private String rampDownTime;
0: 
0:      * @parameter expression="${client.spiClass}" default-value="org.apache.activemq.tool.spi.ActiveMQPojoSPI"
0:     private String spiClass;
0: 
0:      * @parameter expression="${client.sessTransacted}" default-value="false"
0:      * @required
0:      */
0:     private String sessTransacted;
0: 
0:     /**
0:      * @parameter expression="${client.sessAckMode}" default-value="autoAck"
0:      * @required
0:      */
0:     private String sessAckMode;
0: 
0:     /**
0:      * @parameter expression="${client.destName}" default-value="topic://FOO.BAR.TEST"
0:      * @required
0:      */
0:     private String destName;
0: 
0:     /**
0:      * @parameter expression="${client.destCount}" default-value="1"
0:      * @required
0:      */
0:     private String destCount;
0: 
0:     /**
0:      * @parameter expression="${client.destComposite}" default-value="false"
0:      * @required
0:      */
0:     private String destComposite;
0: 
0:     /**
0:      * @parameter expression="${producer.messageSize}" default-value="1024"
0:     /**
0:      * @parameter expression="${producer.sendCount}" default-value="1000"
0:      * @required
0:      */
0:     private String sendCount;
0: 
0:     /**
0:      * @parameter expression="${producer.sendDuration}" default-value="60000"
0:      * @required
0:      */
0:     private String sendDuration;
0: 
0:     /**
0:      * @parameter expression="${producer.sendType}" default-value="time"
0:      * @required
0:      */
0:     private String sendType;
0: 
0:     /**
0:      * @parameter expression="${factory.brokerUrl}" default-value="tcp://localhost:61616"
0:      * @required
0:      */
0:     private String brokerUrl;
0: 
0:     /**
0:      * @parameter expression="${factory.asyncSend}" default-value="true"
0:      * @required
0:      */
0:     private String asyncSend;
0: 
0:     /**
0:      * @parameter expression="${sysTest.numClients}" default-value="5"
0:      * @required
0:      */
0:     private String numClients;
0: 
0:     /**
0:      * @parameter expression="${sysTest.totalDests}" default-value="5"
0:      * @required
0:      */
0:     private String totalDests;
0: 
0:     /**
0:      * @parameter expression="${sysTest.destDistro}" default-value="all"
0:      * @required
0:      */
0:     private String destDistro;
0: 
0:     /**
0:      * @parameter expression="${sysTest.reportDirectory}" default-value="${project.build.directory}/test-perf"
0:      * @required
0:      */
0:     private String reportDirectory;
0: 
0: 
0:         JmsProducerSystem.main(createArgument());
0:     }
0: 
0:     public String[] createArgument() {
0:         String[] options = new String[25];
0:         options[0] = "-Dsampler.duration=" + duration;     // 1 min
0:         options[1] = "-Dsampler.interval=" + interval;      // 5 secs
0:         options[2] = "-Dsampler.rampUpTime=" + rampUpTime;   // 10 secs
0:         options[3] = "-Dsampler.rampDownTime=" + rampDownTime; // 10 secs
0: 
0:         options[4] = "-Dclient.spiClass=" + spiClass;
0:         options[5] = "-Dclient.sessTransacted=" + sessTransacted;
0:         options[6] = "-Dclient.sessAckMode=" + sessAckMode;
0:         options[7] = "-Dclient.destName=" + destName;
0:         options[8] = "-Dclient.destCount=" + destCount;
0:         options[9] = "-Dclient.destComposite=" + destComposite;
0: 
0:         options[10] = "-Dproducer.messageSize="+messageSize;
0:         options[11] = "-Dproducer.sendCount="+sendCount;     // 1000 messages
0:         options[12] = "-Dproducer.sendDuration="+sendDuration; // 1 min
0:         options[13] = "-Dproducer.sendType="+sendType;
0: 
0:         options[14] = "-Dfactory.brokerUrl="+brokerUrl;
0:         options[15] = "-Dfactory.asyncSend="+asyncSend;
0: 
0:         options[21] = "-DsysTest.numClients=" + numClients;
0:         options[22] = "-DsysTest.totalDests=" + totalDests;
0:         options[23] = "-DsysTest.destDistro=" + destDistro;
0:         options[24] = "-DsysTest.reportDirectory=" + reportDirectory;
0: 
0:         return options;
commit:d2db87c
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.tool.JmsProducerClient;
0: import javax.jms.JMSException;
0: 
/////////////////////////////////////////////////////////////////////////
0:         String[] args = {url, topic, subject, durable, messageCount, messageSize};
0:         try {
0:             JmsProducerClient.main(args);
0:         } catch (JMSException e) {
0:             throw new MojoExecutionException("Error executing Producer: " + e.getMessage());
0:         }
commit:2139881
commit:faba216
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.maven;
0: 
0: import org.apache.activemq.tool.ConsumerTool;
0: import org.apache.activemq.tool.ProducerTool;
0: import org.apache.maven.plugin.AbstractMojo;
0: import org.apache.maven.plugin.MojoExecutionException;
0: 
0: /*
0:  * Copyright 2001-2005 The Apache Software Foundation.
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: 
0: 
0: /**
0:  * Goal which touches a timestamp file.
0:  *
0:  * @goal producer
0:  * @phase process
0:  */
0: public class ProducerMojo
0:         extends AbstractMojo {
0: 
0:     /**
0:      * @parameter expression="${url}" default-value="tcp://localhost:61616"
0:      * @required
0:      */
0:     private String url;
0:     /**
0:      * @parameter expression="${topic}" default-value="true"
0:      * @required
0:      */
0:     private String topic;
0:     /**
0:      * @parameter expression="${subject}" default-value="FOO.BAR"
0:      * @required
0:      */
0:     private String subject;
0:     /**
0:      * @parameter expression="${durable}" default-value="false"
0:      * @required
0:      */
0:     private String durable;
0:     /**
0:      * @parameter expression="${messageCount}" default-value="10"
0:      * @required
0:      */
0:     private String messageCount;
0:     /**
0:      * @parameter expression="${messageSize}" default-value="255"
0:      * @required
0:      */
0:     private String messageSize;
0: 
0:     public void execute()
0:             throws MojoExecutionException {
0: 
0:         String[] args = {url,topic,subject,durable,messageCount,messageSize};
0:         ProducerTool.main(args);
0:     }
0: }
============================================================================