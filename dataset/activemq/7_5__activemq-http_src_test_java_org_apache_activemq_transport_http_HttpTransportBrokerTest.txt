1:40a7d3b: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:40a7d3b:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:40a7d3b:  *
1:40a7d3b:  * Unless required by applicable law or agreed to in writing, software
1:40a7d3b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:40a7d3b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:40a7d3b:  * See the License for the specific language governing permissions and
1:40a7d3b:  * limitations under the License.
1:5be5a62:  */
1:8abcfd1: package org.apache.activemq.transport.http;
1:09bae42: 
1:09bae42: import java.net.URI;
1:87cc36a: 
1:40a7d3b: import junit.framework.Test;
1:40a7d3b: import junit.textui.TestRunner;
1:09bae42: import org.apache.activemq.broker.BrokerFactory;
1:09bae42: import org.apache.activemq.broker.BrokerService;
1:540dd5c: import org.apache.activemq.transport.TransportBrokerTestSupport;
1:87cc36a: 
1:40a7d3b: public class HttpTransportBrokerTest extends TransportBrokerTestSupport {
1:09bae42: 
1:40a7d3b:     protected String getBindLocation() {
1:40a7d3b:         return "http://localhost:8081";
1:87cc36a:     }
1:87cc36a: 
1:40a7d3b:     protected void setUp() throws Exception {
1:fc00993:         maxWait = 2000;
1:40a7d3b:         super.setUp();
1:a21226c:         WaitForJettyListener.waitForJettySocketToAccept(getBindLocation());
1:87cc36a:     }
1:87cc36a: 
1:87cc36a:     protected BrokerService createBroker() throws Exception {
1:09bae42: 		BrokerService broker = BrokerFactory.createBroker(new URI("broker:()/localhost?persistent=false&useJmx=false"));
1:09bae42: 		connector = broker.addConnector(getBindLocation());
1:09bae42: 		return broker;
1:09bae42: 	}
1:09bae42: 
1:09bae42: 	protected void tearDown() throws Exception {
1:7e6e788:         super.tearDown();
1:7e6e788:         // Give the jetty server enough time to shutdown before starting another one
1:87cc36a:         Thread.sleep(100);
1:7e6e788:     }
1:7e6e788: 
1:40a7d3b:     public static Test suite() {
1:40a7d3b:         return suite(HttpTransportBrokerTest.class);
3:40a7d3b:     }
7:40a7d3b: 
1:40a7d3b:     public static void main(String[] args) {
1:40a7d3b:         TestRunner.run(suite());
1:40a7d3b:     }
1:40a7d3b: 
1:40a7d3b: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.TransportBrokerTestSupport;
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:         maxWait = 2000;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:5be5a62
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
/////////////////////////////////////////////////////////////////////////
1:  */
commit:8abcfd1
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.transport.http;
0: import org.apache.activemq.transport.TransportBrokerTestSupport;
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:3b4aadc
/////////////////////////////////////////////////////////////////////////
author:Gary Tully
-------------------------------------------------------------------------------
commit:a21226c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         WaitForJettyListener.waitForJettySocketToAccept(getBindLocation());
commit:87cc36a
/////////////////////////////////////////////////////////////////////////
0: import java.net.Socket;
0: import java.net.URL;
1: 
0: import javax.net.SocketFactory;
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.util.Wait;
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
0:     private static final Log LOG = LogFactory.getLog(HttpTransportBrokerTest.class);
/////////////////////////////////////////////////////////////////////////
0:         waitForJettySocketToAccept(getBindLocation());
0: 	private void waitForJettySocketToAccept(String bindLocation) throws Exception {
0:         final URL url = new URL(bindLocation);
0:         assertTrue("Jetty endpoint is available", Wait.waitFor(new Wait.Condition() {
1: 
0:             public boolean isSatisified() throws Exception {
0:                 boolean canConnect = false;
0:                 try {
0:                     Socket socket = SocketFactory.getDefault().createSocket(url.getHost(), url.getPort());
0:                     socket.close();
0:                     canConnect = true;
0:                 } catch (Exception e) {
0:                     LOG.warn("verify jettty available, failed to connect to " + url + e);
1:                 }
0:                 return canConnect;
0:             }}, 60 * 1000));
1:         
1:     }
1: 
1:     protected BrokerService createBroker() throws Exception {
/////////////////////////////////////////////////////////////////////////
1:         Thread.sleep(100);
commit:fb7d8d8
/////////////////////////////////////////////////////////////////////////
0:         Thread.sleep(1000);
0:         Thread.yield();
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:09bae42
/////////////////////////////////////////////////////////////////////////
1: import java.net.URI;
1: 
1: 
1: import org.apache.activemq.broker.BrokerFactory;
1: import org.apache.activemq.broker.BrokerService;
/////////////////////////////////////////////////////////////////////////
0:         Thread.sleep(500);
1:     
0: 	protected BrokerService createBroker() throws Exception {
1: 		BrokerService broker = BrokerFactory.createBroker(new URI("broker:()/localhost?persistent=false&useJmx=false"));
1: 		connector = broker.addConnector(getBindLocation());
1: 		return broker;
1: 	}
1: 	protected void tearDown() throws Exception {
0:         Thread.sleep(500);
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:7e6e788
/////////////////////////////////////////////////////////////////////////
0:     protected void tearDown() throws Exception {
1:         super.tearDown();
1:         // Give the jetty server enough time to shutdown before starting another one
0:         Thread.sleep(300);
1:     }
1: 
author:James Strachan
-------------------------------------------------------------------------------
commit:40a7d3b
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * <a href="http://activemq.org">ActiveMQ: The Open Source Message Fabric</a>
1:  *
0:  * Copyright 2005 (C) LogicBlaze, Inc. http://www.logicblaze.com
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  *
0:  **/
0: package org.activemq.transport.http;
1: 
0: import org.activemq.transport.TransportBrokerTestSupport;
1: 
1: import junit.framework.Test;
1: import junit.textui.TestRunner;
1: 
1: public class HttpTransportBrokerTest extends TransportBrokerTestSupport {
1: 
1:     protected String getBindLocation() {
1:         return "http://localhost:8081";
1:     }
1: 
1:     protected void setUp() throws Exception {
0:         MAX_WAIT = 2000;
1:         super.setUp();
1:     }
1: 
1:     public static Test suite() {
1:         return suite(HttpTransportBrokerTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         TestRunner.run(suite());
1:     }
1: 
1: }
============================================================================