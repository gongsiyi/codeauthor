1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro;
1:f9451e5: 
1:f9451e5: import org.apache.activemq.broker.ConnectionContext;
1:f9451e5: import org.apache.activemq.command.ConnectionInfo;
1:f9451e5: import org.apache.shiro.env.Environment;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * A reference (handle) to a client's {@link ConnectionContext} and {@link ConnectionInfo} as well as the Shiro
1:f9451e5:  * {@link Environment}.
1:f9451e5:  * <p/>
1:f9451e5:  * This implementation primarily exists as a <a href="http://sourcemaking.com/refactoring/introduce-parameter-object">
1:f9451e5:  * Parameter Object Design Pattern</a> implementation to eliminate long parameter lists, but provides additional
1:f9451e5:  * benefits, such as immutability and non-null guarantees, and possibility for future data without forcing method
1:f9451e5:  * signature changes.
1:f9451e5:  *
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public class ConnectionReference {
1:f9451e5: 
1:f9451e5:     private final ConnectionContext connectionContext;
1:f9451e5:     private final ConnectionInfo connectionInfo;
1:f9451e5:     private final Environment environment;
1:f9451e5: 
1:f9451e5:     public ConnectionReference(ConnectionContext connCtx, ConnectionInfo connInfo, Environment environment) {
1:f9451e5:         if (connCtx == null) {
1:f9451e5:             throw new IllegalArgumentException("ConnectionContext argument cannot be null.");
1:f9451e5:         }
1:f9451e5:         if (connInfo == null) {
1:f9451e5:             throw new IllegalArgumentException("ConnectionInfo argument cannot be null.");
1:f9451e5:         }
1:f9451e5:         if (environment == null) {
1:f9451e5:             throw new IllegalArgumentException("Environment argument cannot be null.");
1:f9451e5:         }
1:f9451e5:         this.connectionContext = connCtx;
1:f9451e5:         this.connectionInfo = connInfo;
1:f9451e5:         this.environment = environment;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public ConnectionContext getConnectionContext() {
1:f9451e5:         return connectionContext;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public ConnectionInfo getConnectionInfo() {
1:f9451e5:         return connectionInfo;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public Environment getEnvironment() {
1:f9451e5:         return environment;
1:f9451e5:     }
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro;
1: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.ConnectionInfo;
1: import org.apache.shiro.env.Environment;
1: 
1: /**
1:  * A reference (handle) to a client's {@link ConnectionContext} and {@link ConnectionInfo} as well as the Shiro
1:  * {@link Environment}.
1:  * <p/>
1:  * This implementation primarily exists as a <a href="http://sourcemaking.com/refactoring/introduce-parameter-object">
1:  * Parameter Object Design Pattern</a> implementation to eliminate long parameter lists, but provides additional
1:  * benefits, such as immutability and non-null guarantees, and possibility for future data without forcing method
1:  * signature changes.
1:  *
1:  * @since 5.10.0
1:  */
1: public class ConnectionReference {
1: 
1:     private final ConnectionContext connectionContext;
1:     private final ConnectionInfo connectionInfo;
1:     private final Environment environment;
1: 
1:     public ConnectionReference(ConnectionContext connCtx, ConnectionInfo connInfo, Environment environment) {
1:         if (connCtx == null) {
1:             throw new IllegalArgumentException("ConnectionContext argument cannot be null.");
1:         }
1:         if (connInfo == null) {
1:             throw new IllegalArgumentException("ConnectionInfo argument cannot be null.");
1:         }
1:         if (environment == null) {
1:             throw new IllegalArgumentException("Environment argument cannot be null.");
1:         }
1:         this.connectionContext = connCtx;
1:         this.connectionInfo = connInfo;
1:         this.environment = environment;
1:     }
1: 
1:     public ConnectionContext getConnectionContext() {
1:         return connectionContext;
1:     }
1: 
1:     public ConnectionInfo getConnectionInfo() {
1:         return connectionInfo;
1:     }
1: 
1:     public Environment getEnvironment() {
1:         return environment;
1:     }
1: }
============================================================================