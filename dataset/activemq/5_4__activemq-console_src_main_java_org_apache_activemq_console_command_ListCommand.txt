1:a107823: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a107823:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a107823:  *
1:a107823:  * Unless required by applicable law or agreed to in writing, software
1:a107823:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a107823:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a107823:  * See the License for the specific language governing permissions and
1:a107823:  * limitations under the License.
1:a107823:  */
1:a107823: package org.apache.activemq.console.command;
2:a107823: 
1:5f1adbe: import java.util.HashSet;
1:5f1adbe: import java.util.List;
1:5f1adbe: import java.util.Set;
1:5f1adbe: 
1:a107823: import org.apache.activemq.console.util.JmxMBeansUtil;
1:a107823: 
1:a107823: public class ListCommand extends AbstractJmxCommand {
1:a107823: 
1:5f1adbe:     protected String[] helpFile = new String[] {
1:5f1adbe:         "Task Usage: Main list [list-options]",
1:5f1adbe:         "Description:  Lists all available broker in the specified JMX context.",
1:5f1adbe:         "",
1:5f1adbe:         "List Options:",
1:0dec0b6:         "    --jmxurl <url>             Set the JMX URL to connect to.",
1:87eba29:         "    --pid <pid>                Set the pid to connect to (only on Sun JVM).",            
1:0dec0b6:         "    --jmxuser <user>           Set the JMX user used for authenticating.",
1:0dec0b6:         "    --jmxpassword <password>   Set the JMX password used for authenticating.",
1:0dec0b6:         "    --jmxlocal                 Use the local JMX server instead of a remote one.",
1:0dec0b6:         "    --version                  Display the version information.",
1:0dec0b6:         "    -h,-?,--help               Display the stop broker help information.",
1:5f1adbe:         ""
1:5f1adbe:     };
1:5f1adbe: 
1:60646c9:     @Override
1:60646c9:     public String getName() {
1:60646c9:         return "list";
1:60646c9:     }
1:60646c9: 
1:60646c9:     @Override
1:60646c9:     public String getOneLineDescription() {
1:60646c9:         return "Lists all available brokers in the specified JMX context";
1:60646c9:     }
1:60646c9: 
1:a107823:     /**
1:a107823:      * List all running brokers registered in the specified JMX context
1:a107823:      * @param tokens - command arguments
1:a107823:      * @throws Exception
1:a107823:      */
1:a107823:     protected void runTask(List tokens) throws Exception {
1:73f9131:         Set<String> propsView = new HashSet<String>();
1:73f9131:         propsView.add("brokerName");
1:73f9131:         context.printMBean(JmxMBeansUtil.filterMBeansView(JmxMBeansUtil.getAllBrokers(createJmxConnection()), propsView));
2:a107823:     }
1:a107823:     
1:a107823:     /**
1:a107823:      * Print the help messages for the browse command
1:a107823:      */
1:a107823:     protected void printHelp() {
1:54eb93e:         context.printHelp(helpFile);
1:a107823:     }
1:a107823: 
1:a107823: }
============================================================================
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:73f9131
/////////////////////////////////////////////////////////////////////////
1:         Set<String> propsView = new HashSet<String>();
1:         propsView.add("brokerName");
1:         context.printMBean(JmxMBeansUtil.filterMBeansView(JmxMBeansUtil.getAllBrokers(createJmxConnection()), propsView));
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:881c1b7
/////////////////////////////////////////////////////////////////////////
0:             propsView.add("brokerName");
commit:87eba29
/////////////////////////////////////////////////////////////////////////
1:         "    --pid <pid>                Set the pid to connect to (only on Sun JVM).",            
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:60646c9
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public String getName() {
1:         return "list";
1:     }
1: 
1:     @Override
1:     public String getOneLineDescription() {
1:         return "Lists all available brokers in the specified JMX context";
1:     }
1: 
commit:54eb93e
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:             context.printMBean(JmxMBeansUtil.filterMBeansView(JmxMBeansUtil.getAllBrokers(useJmxServiceUrl()), propsView));
0:             context.printException(new RuntimeException("Failed to execute list task. Reason: " + e));
/////////////////////////////////////////////////////////////////////////
1:         context.printHelp(helpFile);
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: import java.util.HashSet;
1: import java.util.List;
1: import java.util.Set;
1: 
1:     protected String[] helpFile = new String[] {
1:         "Task Usage: Main list [list-options]",
1:         "Description:  Lists all available broker in the specified JMX context.",
1:         "",
1:         "List Options:",
0:         "    --jmxurl <url>      Set the JMX URL to connect to.",
0:         "    --version           Display the version information.",
0:         "    -h,-?,--help        Display the stop broker help information.",
1:         ""
1:     };
1: 
/////////////////////////////////////////////////////////////////////////
0:             Set<String> propsView = new HashSet<String>();
/////////////////////////////////////////////////////////////////////////
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:a107823
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.console.command;
1: 
0: import org.apache.activemq.console.formatter.GlobalWriter;
1: import org.apache.activemq.console.util.JmxMBeansUtil;
1: 
0: import java.util.List;
0: import java.util.Set;
0: import java.util.HashSet;
1: 
1: public class ListCommand extends AbstractJmxCommand {
1: 
1:     /**
1:      * List all running brokers registered in the specified JMX context
1:      * @param tokens - command arguments
1:      * @throws Exception
1:      */
1:     protected void runTask(List tokens) throws Exception {
0:         try {
0:             Set propsView = new HashSet();
0:             propsView.add("BrokerName");
0:             GlobalWriter.printMBean(JmxMBeansUtil.filterMBeansView(JmxMBeansUtil.getAllBrokers(useJmxServiceUrl()), propsView));
0:         } catch (Exception e) {
0:             GlobalWriter.printException(new RuntimeException("Failed to execute list task. Reason: " + e));
0:             throw new Exception(e);
1:         }
1:     }
1:     
1:     /**
1:      * Print the help messages for the browse command
1:      */
1:     protected void printHelp() {
0:         GlobalWriter.printHelp(helpFile);
1:     }
1: 
0:     protected String[] helpFile = new String[] {
0:         "Task Usage: Main list [list-options]",
0:         "Description:  Lists all available broker in the specified JMX context.",
0:         "",
0:         "List Options:",
0:         "    --jmxurl <url>      Set the JMX URL to connect to.",
0:         "    --version           Display the version information.",
0:         "    -h,-?,--help        Display the stop broker help information.",
0:         ""
0:     };
1: }
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:0dec0b6
/////////////////////////////////////////////////////////////////////////
1:         "    --jmxurl <url>             Set the JMX URL to connect to.",
1:         "    --jmxuser <user>           Set the JMX user used for authenticating.",
1:         "    --jmxpassword <password>   Set the JMX password used for authenticating.",
1:         "    --jmxlocal                 Use the local JMX server instead of a remote one.",
1:         "    --version                  Display the version information.",
1:         "    -h,-?,--help               Display the stop broker help information.",
/////////////////////////////////////////////////////////////////////////
0:             context.printMBean(JmxMBeansUtil.filterMBeansView(JmxMBeansUtil.getAllBrokers(createJmxConnection()), propsView));
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:7fa8660
/////////////////////////////////////////////////////////////////////////
0: package org.apache.activemq.console.command;
0: import org.apache.activemq.console.formatter.GlobalWriter;
0: import org.apache.activemq.console.util.JmxMBeansUtil;
commit:4b8822f
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.broker.console.command;
0: 
0: import org.apache.activemq.broker.console.formatter.GlobalWriter;
0: import org.apache.activemq.broker.console.JmxMBeansUtil;
0: 
0: import java.util.List;
0: import java.util.Set;
0: import java.util.HashSet;
0: 
0: public class ListCommand extends AbstractJmxCommand {
0: 
0:     /**
0:      * List all running brokers registered in the specified JMX context
0:      * @param tokens - command arguments
0:      * @throws Exception
0:      */
0:     protected void runTask(List tokens) throws Exception {
0:         try {
0:             Set propsView = new HashSet();
0:             propsView.add("BrokerName");
0:             GlobalWriter.printMBean(JmxMBeansUtil.filterMBeansView(JmxMBeansUtil.getAllBrokers(useJmxServiceUrl()), propsView));
0:         } catch (Exception e) {
0:             GlobalWriter.printException(new RuntimeException("Failed to execute list task. Reason: " + e));
0:             throw new Exception(e);
0:         }
0:     }
0:     
0:     /**
0:      * Print the help messages for the browse command
0:      */
0:     protected void printHelp() {
0:         GlobalWriter.printHelp(helpFile);
0:     }
0: 
0:     protected String[] helpFile = new String[] {
0:         "Task Usage: Main list [list-options]",
0:         "Description:  Lists all available broker in the specified JMX context.",
0:         "",
0:         "List Options:",
0:         "    --jmxurl <url>      Set the JMX URL to connect to.",
0:         "    --version           Display the version information.",
0:         "    -h,-?,--help        Display the stop broker help information.",
0:         ""
0:     };
0: }
============================================================================