1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.transport;
1:d29ca2a: 
1:d29ca2a: import java.net.URI;
1:ee4c8ee: import java.util.Map;
1:d29ca2a: 
1:f812e34: import org.apache.activemq.util.ServiceSupport;
1:f812e34: 
1:d29ca2a: /**
1:d29ca2a:  * A useful base class for implementations of {@link TransportServer}
1:b0c2a40:  * 
1:d29ca2a:  * 
1:d29ca2a:  */
1:11be076: public abstract class TransportServerSupport extends ServiceSupport implements TransportServer {
1:d29ca2a: 
1:68c8c64:     private URI connectURI;
1:f812e34:     private URI bindLocation;
1:d29ca2a:     private TransportAcceptListener acceptListener;
1:ee4c8ee:     protected Map<String, Object> transportOptions;
1:4183e6e:     protected boolean allowLinkStealing;
1:d29ca2a: 
1:d29ca2a:     public TransportServerSupport() {
3:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public TransportServerSupport(URI location) {
1:68c8c64:         this.connectURI = location;
1:68c8c64:         this.bindLocation = location;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @return Returns the acceptListener.
1:d29ca2a:      */
1:d29ca2a:     public TransportAcceptListener getAcceptListener() {
1:d29ca2a:         return acceptListener;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Registers an accept listener
1:d29ca2a:      * 
1:d29ca2a:      * @param acceptListener
1:d29ca2a:      */
1:d29ca2a:     public void setAcceptListener(TransportAcceptListener acceptListener) {
1:d29ca2a:         this.acceptListener = acceptListener;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @return Returns the location.
1:d29ca2a:      */
1:68c8c64:     public URI getConnectURI() {
1:68c8c64:         return connectURI;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:f812e34:      * @param location The location to set.
1:d29ca2a:      */
1:68c8c64:     public void setConnectURI(URI location) {
1:68c8c64:         this.connectURI = location;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     protected void onAcceptError(Exception e) {
1:d29ca2a:         if (acceptListener != null) {
1:d29ca2a:             acceptListener.onAcceptError(e);
1:68c8c64:         }
1:d29ca2a:     }
1:68c8c64: 
1:f812e34:     public URI getBindLocation() {
1:f812e34:         return bindLocation;
1:f812e34:     }
1:68c8c64: 
1:f812e34:     public void setBindLocation(URI bindLocation) {
1:f812e34:         this.bindLocation = bindLocation;
1:f812e34:     }
1:d29ca2a: 
1:ee4c8ee:     public void setTransportOption(Map<String, Object> transportOptions) {
1:ee4c8ee:         this.transportOptions = transportOptions;
1:68c8c64:     }
1:cb895f0: 
1:4183e6e:     @Override
1:4183e6e:     public boolean isAllowLinkStealing() {
1:4183e6e:         return allowLinkStealing;
1:4183e6e:     }
1:4183e6e: 
1:4183e6e:     public void setAllowLinkStealing(boolean allowLinkStealing) {
1:4183e6e:         this.allowLinkStealing = allowLinkStealing;
1:4183e6e:     }
1:cb895f0: 
1:d29ca2a: }
============================================================================
author:Rob Davies
-------------------------------------------------------------------------------
commit:4183e6e
/////////////////////////////////////////////////////////////////////////
1:     protected boolean allowLinkStealing;
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public boolean isAllowLinkStealing() {
1:         return allowLinkStealing;
1:     }
1: 
1:     public void setAllowLinkStealing(boolean allowLinkStealing) {
1:         this.allowLinkStealing = allowLinkStealing;
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.ServiceSupport;
1: 
/////////////////////////////////////////////////////////////////////////
1:     private URI bindLocation;
/////////////////////////////////////////////////////////////////////////
1:      * @param location The location to set.
/////////////////////////////////////////////////////////////////////////
1:     public URI getBindLocation() {
1:         return bindLocation;
1:     }
1:     public void setBindLocation(URI bindLocation) {
1:         this.bindLocation = bindLocation;
1:     }
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:68c8c64
/////////////////////////////////////////////////////////////////////////
1:     private URI connectURI;
0: 	private URI bindLocation;
1:         this.connectURI = location;
1:         this.bindLocation = location;
/////////////////////////////////////////////////////////////////////////
1:     public URI getConnectURI() {
1:         return connectURI;
1:     public void setConnectURI(URI location) {
1:         this.connectURI = location;
/////////////////////////////////////////////////////////////////////////
1: 
0: 	public URI getBindLocation() {
0: 		return bindLocation;
1: 	}
1: 
0: 	public void setBindLocation(URI bindLocation) {
0: 		this.bindLocation = bindLocation;
1: 	}
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport;
1: 
1: import java.net.URI;
1: 
1: /**
1:  * A useful base class for implementations of {@link TransportServer}
1:  * 
0:  * @version $Revision: 1.1 $
1:  */
0: public abstract class TransportServerSupport implements TransportServer {
1: 
0:     private URI location;
1:     private TransportAcceptListener acceptListener;
1: 
1:     public TransportServerSupport() {
1:     }
1: 
1:     public TransportServerSupport(URI location) {
0:         this.location = location;
1:     }
1: 
0:     public URI getConnectURI() {
0:         return location;
1:     }
1: 
1:     /**
1:      * @return Returns the acceptListener.
1:      */
1:     public TransportAcceptListener getAcceptListener() {
1:         return acceptListener;
1:     }
1: 
1:     /**
1:      * Registers an accept listener
1:      * 
1:      * @param acceptListener
1:      */
1:     public void setAcceptListener(TransportAcceptListener acceptListener) {
1:         this.acceptListener = acceptListener;
1:     }
1: 
1:     /**
1:      * @return Returns the location.
1:      */
0:     public URI getLocation() {
0:         return location;
1:     }
1: 
1:     /**
0:      * @param location
0:      *            The location to set.
1:      */
0:     public void setLocation(URI location) {
0:         this.location = location;
1:     }
1: 
1:     protected void onAcceptError(Exception e) {
1:         if (acceptListener != null) {
1:             acceptListener.onAcceptError(e);
1:         }
1:     }
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:cb895f0
/////////////////////////////////////////////////////////////////////////
1: 
1: 
author:Gary Tully
-------------------------------------------------------------------------------
commit:ee4c8ee
/////////////////////////////////////////////////////////////////////////
1: import java.util.Map;
/////////////////////////////////////////////////////////////////////////
1:     protected Map<String, Object> transportOptions;
/////////////////////////////////////////////////////////////////////////
0: 
1:     public void setTransportOption(Map<String, Object> transportOptions) {
1:         this.transportOptions = transportOptions;
0:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:11be076
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.util.ServiceSupport;
0: 
/////////////////////////////////////////////////////////////////////////
1: public abstract class TransportServerSupport extends ServiceSupport implements TransportServer {
============================================================================