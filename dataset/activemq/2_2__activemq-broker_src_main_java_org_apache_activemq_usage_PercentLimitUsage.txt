1:4cddd2c: /**
1:4cddd2c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4cddd2c:  * contributor license agreements.  See the NOTICE file distributed with
1:4cddd2c:  * this work for additional information regarding copyright ownership.
1:4cddd2c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4cddd2c:  * (the "License"); you may not use this file except in compliance with
1:4cddd2c:  * the License.  You may obtain a copy of the License at
1:4cddd2c:  *
1:4cddd2c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4cddd2c:  *
1:4cddd2c:  * Unless required by applicable law or agreed to in writing, software
1:4cddd2c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4cddd2c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4cddd2c:  * See the License for the specific language governing permissions and
1:4cddd2c:  * limitations under the License.
1:4cddd2c:  */
1:4cddd2c: package org.apache.activemq.usage;
1:4cddd2c: 
1:4cddd2c: 
1:8a28c06: import org.apache.activemq.util.StoreUtil;
1:8a28c06: 
1:8a28c06: import java.io.File;
1:8a28c06: 
1:4cddd2c: public abstract class PercentLimitUsage <T extends Usage> extends Usage<T> {
1:4cddd2c: 
1:4cddd2c:     protected int percentLimit = 0;
1:8a28c06:     protected long total = 0;
1:4cddd2c: 
1:4cddd2c:     /**
1:4cddd2c:      * @param parent
1:4cddd2c:      * @param name
1:4cddd2c:      * @param portion
1:4cddd2c:      */
1:4cddd2c:     public PercentLimitUsage(T parent, String name, float portion) {
1:4cddd2c:         super(parent, name, portion);
1:4cddd2c:     }
1:4cddd2c: 
1:4cddd2c:     public void setPercentLimit(int percentLimit) {
1:4cddd2c:         usageLock.writeLock().lock();
1:4cddd2c:         try {
1:4cddd2c:             this.percentLimit = percentLimit;
1:4cddd2c:             updateLimitBasedOnPercent();
1:4cddd2c:         } finally {
1:4cddd2c:             usageLock.writeLock().unlock();
1:4cddd2c:         }
1:4cddd2c:     }
1:4cddd2c: 
1:4cddd2c:     public int getPercentLimit() {
1:4cddd2c:         usageLock.readLock().lock();
1:4cddd2c:         try {
1:4cddd2c:             return percentLimit;
1:4cddd2c:         } finally {
1:4cddd2c:             usageLock.readLock().unlock();
1:4cddd2c:         }
1:4cddd2c:     }
1:4cddd2c: 
1:0ae90c0:     /**
1:0ae90c0:      * Sets the total available space in bytes. When non zero, the filesystem totalAvailableSpace is ignored.
1:0ae90c0:      * When set using Xbean, values of the form "20 Mb", "1024kb", and "1g" can be used
1:0ae90c0:      *
1:0ae90c0:      * @org.apache.xbean.Property propertyEditor="org.apache.activemq.util.MemoryPropertyEditor"
1:0ae90c0:      */
1:8a28c06:     public void setTotal(long max) {
1:8a28c06:         this.total = max;
1:8a28c06:     }
1:8a28c06: 
1:8a28c06:     public long getTotal() {
1:8a28c06:         return total;
1:8a28c06:     }
1:8a28c06: 
1:8a28c06: 
1:8a28c06:     protected void percentLimitFromFile(File directory) {
1:8a28c06:         if (percentLimit > 0) {
1:8a28c06:             if (total > 0) {
1:8a28c06:                 this.setLimit(total * percentLimit / 100);
1:8a28c06:             } else if (directory != null) {
1:8a28c06:                 File dir = StoreUtil.findParentDirectory(directory);
1:8a28c06:                 if (dir != null) {
1:8a28c06:                     this.setLimit(dir.getTotalSpace() * percentLimit / 100);
1:8a28c06:                 }
1:8a28c06:             }
1:8a28c06:         }
1:8a28c06:     }
1:8a28c06: 
1:4cddd2c:     protected abstract void updateLimitBasedOnPercent();
1:4cddd2c: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:0ae90c0
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Sets the total available space in bytes. When non zero, the filesystem totalAvailableSpace is ignored.
1:      * When set using Xbean, values of the form "20 Mb", "1024kb", and "1g" can be used
1:      *
1:      * @org.apache.xbean.Property propertyEditor="org.apache.activemq.util.MemoryPropertyEditor"
1:      */
commit:8a28c06
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.StoreUtil;
1: 
1: import java.io.File;
1: 
1:     protected long total = 0;
/////////////////////////////////////////////////////////////////////////
1:     public void setTotal(long max) {
1:         this.total = max;
1:     }
1: 
1:     public long getTotal() {
1:         return total;
1:     }
1: 
1: 
1:     protected void percentLimitFromFile(File directory) {
1:         if (percentLimit > 0) {
1:             if (total > 0) {
1:                 this.setLimit(total * percentLimit / 100);
1:             } else if (directory != null) {
1:                 File dir = StoreUtil.findParentDirectory(directory);
1:                 if (dir != null) {
1:                     this.setLimit(dir.getTotalSpace() * percentLimit / 100);
1:                 }
1:             }
1:         }
1:     }
1: 
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:4cddd2c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usage;
1: 
1: 
1: public abstract class PercentLimitUsage <T extends Usage> extends Usage<T> {
1: 
1:     protected int percentLimit = 0;
1: 
1:     /**
1:      * @param parent
1:      * @param name
1:      * @param portion
1:      */
1:     public PercentLimitUsage(T parent, String name, float portion) {
1:         super(parent, name, portion);
1:     }
1: 
1:     public void setPercentLimit(int percentLimit) {
1:         usageLock.writeLock().lock();
1:         try {
1:             this.percentLimit = percentLimit;
1:             updateLimitBasedOnPercent();
1:         } finally {
1:             usageLock.writeLock().unlock();
1:         }
1:     }
1: 
1:     public int getPercentLimit() {
1:         usageLock.readLock().lock();
1:         try {
1:             return percentLimit;
1:         } finally {
1:             usageLock.readLock().unlock();
1:         }
1:     }
1: 
1:     protected abstract void updateLimitBasedOnPercent();
1: }
============================================================================