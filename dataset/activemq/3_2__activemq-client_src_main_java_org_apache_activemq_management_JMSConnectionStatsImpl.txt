1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.management;
1:d29ca2a: 
1:74a7a8b: import java.util.List;
1:74a7a8b: 
1:d29ca2a: import org.apache.activemq.ActiveMQSession;
1:d29ca2a: import org.apache.activemq.util.IndentPrinter;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Statistics for a JMS connection
1:b0c2a40:  * 
1:74a7a8b:  * 
1:d29ca2a:  */
1:d29ca2a: public class JMSConnectionStatsImpl extends StatsImpl {
1:d29ca2a:     private List sessions;
1:d29ca2a:     private boolean transactional;
1:d29ca2a: 
1:d29ca2a:     public JMSConnectionStatsImpl(List sessions, boolean transactional) {
1:d29ca2a:         this.sessions = sessions;
1:d29ca2a:         this.transactional = transactional;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public JMSSessionStatsImpl[] getSessions() {
1:d29ca2a:         // lets make a snapshot before we process them
1:d29ca2a:         Object[] sessionArray = sessions.toArray();
1:d29ca2a:         int size = sessionArray.length;
1:d29ca2a:         JMSSessionStatsImpl[] answer = new JMSSessionStatsImpl[size];
1:d29ca2a:         for (int i = 0; i < size; i++) {
1:74a7a8b:             ActiveMQSession session = (ActiveMQSession)sessionArray[i];
1:d29ca2a:             answer[i] = session.getSessionStats();
1:d29ca2a:         }
1:d29ca2a:         return answer;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void reset() {
1:d29ca2a:         super.reset();
1:d29ca2a:         JMSSessionStatsImpl[] stats = getSessions();
1:933eb2f:         int size = stats.length;
1:933eb2f:         for (int i = 0; i < size; i++) {
1:d29ca2a:             stats[i].reset();
1:d29ca2a:         }
1:d29ca2a:     }
1:74a7a8b: 
1:526cb5b:     /**
1:526cb5b:      * @param enabled the enabled to set
1:526cb5b:      */
1:74a7a8b:     public void setEnabled(boolean enabled) {
1:526cb5b:         super.setEnabled(enabled);
1:526cb5b:         JMSSessionStatsImpl[] stats = getSessions();
1:933eb2f:         int size = stats.length;
1:933eb2f:         for (int i = 0; i < size; i++) {
1:526cb5b:             stats[i].setEnabled(enabled);
1:74a7a8b:         }
1:d29ca2a: 
2:526cb5b:     }
1:d29ca2a: 
1:d29ca2a:     public boolean isTransactional() {
1:d29ca2a:         return transactional;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String toString() {
1:d29ca2a:         StringBuffer buffer = new StringBuffer("connection{ ");
1:d29ca2a:         JMSSessionStatsImpl[] array = getSessions();
1:d29ca2a:         for (int i = 0; i < array.length; i++) {
1:d29ca2a:             if (i > 0) {
1:d29ca2a:                 buffer.append(", ");
1:d29ca2a:             }
1:d29ca2a:             buffer.append(Integer.toString(i));
1:d29ca2a:             buffer.append(" = ");
1:d29ca2a:             buffer.append(array[i]);
1:d29ca2a:         }
1:d29ca2a:         buffer.append(" }");
1:d29ca2a:         return buffer.toString();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void dump(IndentPrinter out) {
1:d29ca2a:         out.printIndent();
1:d29ca2a:         out.println("connection {");
1:d29ca2a:         out.incrementIndent();
1:d29ca2a:         JMSSessionStatsImpl[] array = getSessions();
1:d29ca2a:         for (int i = 0; i < array.length; i++) {
1:74a7a8b:             JMSSessionStatsImpl sessionStat = (JMSSessionStatsImpl)array[i];
1:d29ca2a:             out.printIndent();
1:d29ca2a:             out.println("session {");
1:d29ca2a:             out.incrementIndent();
1:d29ca2a:             sessionStat.dump(out);
1:d29ca2a:             out.decrementIndent();
1:d29ca2a:             out.printIndent();
1:d29ca2a:             out.println("}");
1:d29ca2a:         }
1:d29ca2a:         out.decrementIndent();
1:d29ca2a:         out.printIndent();
1:d29ca2a:         out.println("}");
1:d29ca2a:         out.flush();
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:         int size = stats.length;
1:         for (int i = 0; i < size; i++) {
/////////////////////////////////////////////////////////////////////////
1:         int size = stats.length;
1:         for (int i = 0; i < size; i++) {
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.util.List;
1: 
1:  * 
/////////////////////////////////////////////////////////////////////////
1:             ActiveMQSession session = (ActiveMQSession)sessionArray[i];
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void setEnabled(boolean enabled) {
1:     }
/////////////////////////////////////////////////////////////////////////
1:             JMSSessionStatsImpl sessionStat = (JMSSessionStatsImpl)array[i];
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.management;
1: 
1: import org.apache.activemq.ActiveMQSession;
1: import org.apache.activemq.util.IndentPrinter;
1: 
0: import java.util.List;
1: /**
1:  * Statistics for a JMS connection
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class JMSConnectionStatsImpl extends StatsImpl {
1:     private List sessions;
1:     private boolean transactional;
1: 
1:     public JMSConnectionStatsImpl(List sessions, boolean transactional) {
1:         this.sessions = sessions;
1:         this.transactional = transactional;
1:     }
1: 
1:     public JMSSessionStatsImpl[] getSessions() {
1:         // lets make a snapshot before we process them
1:         Object[] sessionArray = sessions.toArray();
1:         int size = sessionArray.length;
1:         JMSSessionStatsImpl[] answer = new JMSSessionStatsImpl[size];
1:         for (int i = 0; i < size; i++) {
0:             ActiveMQSession session = (ActiveMQSession) sessionArray[i];
1:             answer[i] = session.getSessionStats();
1:         }
1:         return answer;
1:     }
1: 
1:     public void reset() {
1:         super.reset();
1:         JMSSessionStatsImpl[] stats = getSessions();
0:         for (int i = 0, size = stats.length; i < size; i++) {
1:             stats[i].reset();
1:         }
1:     }
1: 
1: 
1:     public boolean isTransactional() {
1:         return transactional;
1:     }
1: 
1:     public String toString() {
1:         StringBuffer buffer = new StringBuffer("connection{ ");
1:         JMSSessionStatsImpl[] array = getSessions();
1:         for (int i = 0; i < array.length; i++) {
1:             if (i > 0) {
1:                 buffer.append(", ");
1:             }
1:             buffer.append(Integer.toString(i));
1:             buffer.append(" = ");
1:             buffer.append(array[i]);
1:         }
1:         buffer.append(" }");
1:         return buffer.toString();
1:     }
1: 
1:     public void dump(IndentPrinter out) {
1:         out.printIndent();
1:         out.println("connection {");
1:         out.incrementIndent();
1:         JMSSessionStatsImpl[] array = getSessions();
1:         for (int i = 0; i < array.length; i++) {
0:             JMSSessionStatsImpl sessionStat = (JMSSessionStatsImpl) array[i];
1:             out.printIndent();
1:             out.println("session {");
1:             out.incrementIndent();
1:             sessionStat.dump(out);
1:             out.decrementIndent();
1:             out.printIndent();
1:             out.println("}");
1:         }
1:         out.decrementIndent();
1:         out.printIndent();
1:         out.println("}");
1:         out.flush();
1:     }
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:526cb5b
/////////////////////////////////////////////////////////////////////////
0:     
1:     /**
1:      * @param enabled the enabled to set
1:      */
0:     public void setEnabled(boolean enabled){
1:         super.setEnabled(enabled);
1:         JMSSessionStatsImpl[] stats = getSessions();
0:         for (int i = 0, size = stats.length; i < size; i++) {
1:             stats[i].setEnabled(enabled);
1:         }
0:         
1:     }
============================================================================