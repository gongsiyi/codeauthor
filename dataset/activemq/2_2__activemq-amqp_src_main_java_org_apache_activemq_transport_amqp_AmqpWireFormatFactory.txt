1:cdd5150: /**
1:cdd5150:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:cdd5150:  * contributor license agreements.  See the NOTICE file distributed with
1:cdd5150:  * this work for additional information regarding copyright ownership.
1:cdd5150:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:cdd5150:  * (the "License"); you may not use this file except in compliance with
1:cdd5150:  * the License.  You may obtain a copy of the License at
1:cdd5150:  *
1:cdd5150:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cdd5150:  *
1:cdd5150:  * Unless required by applicable law or agreed to in writing, software
1:cdd5150:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cdd5150:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cdd5150:  * See the License for the specific language governing permissions and
1:cdd5150:  * limitations under the License.
1:cdd5150:  */
1:cdd5150: package org.apache.activemq.transport.amqp;
1:cdd5150: 
1:f37b005: import org.apache.activemq.transport.amqp.message.InboundTransformer;
1:cdd5150: import org.apache.activemq.wireformat.WireFormat;
1:cdd5150: import org.apache.activemq.wireformat.WireFormatFactory;
1:cdd5150: 
1:cdd5150: /**
1:3306467:  * Creates the default AMQP WireFormat object used to configure the protocol support.
1:cdd5150:  */
1:cdd5150: public class AmqpWireFormatFactory implements WireFormatFactory {
1:f2653e6: 
1:f37b005:     private long maxFrameSize = AmqpWireFormat.DEFAULT_MAX_FRAME_SIZE;
1:2e2d5dd:     private int maxAmqpFrameSize = AmqpWireFormat.DEFAULT_ANQP_FRAME_SIZE;
1:f37b005:     private int idelTimeout = AmqpWireFormat.DEFAULT_IDLE_TIMEOUT;
1:f37b005:     private int producerCredit = AmqpWireFormat.DEFAULT_PRODUCER_CREDIT;
1:f37b005:     private String transformer = InboundTransformer.TRANSFORMER_NATIVE;
1:c49db02:     private boolean allowNonSaslConnections = AmqpWireFormat.DEFAULT_ALLOW_NON_SASL_CONNECTIONS;
1:f37b005: 
1:f2653e6:     @Override
1:cdd5150:     public WireFormat createWireFormat() {
1:f37b005:         AmqpWireFormat wireFormat = new AmqpWireFormat();
1:f37b005: 
1:f37b005:         wireFormat.setMaxFrameSize(getMaxFrameSize());
1:f37b005:         wireFormat.setMaxAmqpFrameSize(getMaxAmqpFrameSize());
1:f37b005:         wireFormat.setIdleTimeout(getIdelTimeout());
1:f37b005:         wireFormat.setProducerCredit(getProducerCredit());
1:f37b005:         wireFormat.setTransformer(getTransformer());
1:c49db02:         wireFormat.setAllowNonSaslConnections(isAllowNonSaslConnections());
1:f37b005: 
1:f37b005:         return wireFormat;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public int getMaxAmqpFrameSize() {
1:f37b005:         return maxAmqpFrameSize;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public void setMaxAmqpFrameSize(int maxAmqpFrameSize) {
1:f37b005:         this.maxAmqpFrameSize = maxAmqpFrameSize;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public long getMaxFrameSize() {
1:f37b005:         return maxFrameSize;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public void setMaxFrameSize(long maxFrameSize) {
1:f37b005:         this.maxFrameSize = maxFrameSize;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public int getIdelTimeout() {
1:f37b005:         return idelTimeout;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public void setIdelTimeout(int idelTimeout) {
1:f37b005:         this.idelTimeout = idelTimeout;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public int getProducerCredit() {
1:f37b005:         return producerCredit;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public void setProducerCredit(int producerCredit) {
1:f37b005:         this.producerCredit = producerCredit;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public String getTransformer() {
1:f37b005:         return transformer;
1:f37b005:     }
1:f37b005: 
1:f37b005:     public void setTransformer(String transformer) {
1:f37b005:         this.transformer = transformer;
1:cdd5150:     }
1:c49db02: 
1:c49db02:     public boolean isAllowNonSaslConnections() {
1:c49db02:         return allowNonSaslConnections;
1:c49db02:     }
1:c49db02: 
1:c49db02:     public void setAllowNonSaslConnections(boolean allowNonSaslConnections) {
1:c49db02:         this.allowNonSaslConnections = allowNonSaslConnections;
1:c49db02:     }
1:cdd5150: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:2e2d5dd
/////////////////////////////////////////////////////////////////////////
1:     private int maxAmqpFrameSize = AmqpWireFormat.DEFAULT_ANQP_FRAME_SIZE;
commit:c49db02
/////////////////////////////////////////////////////////////////////////
1:     private boolean allowNonSaslConnections = AmqpWireFormat.DEFAULT_ALLOW_NON_SASL_CONNECTIONS;
/////////////////////////////////////////////////////////////////////////
1:         wireFormat.setAllowNonSaslConnections(isAllowNonSaslConnections());
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean isAllowNonSaslConnections() {
1:         return allowNonSaslConnections;
1:     }
1: 
1:     public void setAllowNonSaslConnections(boolean allowNonSaslConnections) {
1:         this.allowNonSaslConnections = allowNonSaslConnections;
1:     }
commit:f37b005
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.amqp.message.InboundTransformer;
/////////////////////////////////////////////////////////////////////////
1:     private long maxFrameSize = AmqpWireFormat.DEFAULT_MAX_FRAME_SIZE;
0:     private int maxAmqpFrameSize = AmqpWireFormat.NO_AMQP_MAX_FRAME_SIZE;
1:     private int idelTimeout = AmqpWireFormat.DEFAULT_IDLE_TIMEOUT;
1:     private int producerCredit = AmqpWireFormat.DEFAULT_PRODUCER_CREDIT;
1:     private String transformer = InboundTransformer.TRANSFORMER_NATIVE;
1: 
1:         AmqpWireFormat wireFormat = new AmqpWireFormat();
1: 
1:         wireFormat.setMaxFrameSize(getMaxFrameSize());
1:         wireFormat.setMaxAmqpFrameSize(getMaxAmqpFrameSize());
1:         wireFormat.setIdleTimeout(getIdelTimeout());
1:         wireFormat.setProducerCredit(getProducerCredit());
1:         wireFormat.setTransformer(getTransformer());
1: 
1:         return wireFormat;
1:     }
1: 
1:     public int getMaxAmqpFrameSize() {
1:         return maxAmqpFrameSize;
1:     }
1: 
1:     public void setMaxAmqpFrameSize(int maxAmqpFrameSize) {
1:         this.maxAmqpFrameSize = maxAmqpFrameSize;
1:     }
1: 
1:     public long getMaxFrameSize() {
1:         return maxFrameSize;
1:     }
1: 
1:     public void setMaxFrameSize(long maxFrameSize) {
1:         this.maxFrameSize = maxFrameSize;
1:     }
1: 
1:     public int getIdelTimeout() {
1:         return idelTimeout;
1:     }
1: 
1:     public void setIdelTimeout(int idelTimeout) {
1:         this.idelTimeout = idelTimeout;
1:     }
1: 
1:     public int getProducerCredit() {
1:         return producerCredit;
1:     }
1: 
1:     public void setProducerCredit(int producerCredit) {
1:         this.producerCredit = producerCredit;
1:     }
1: 
1:     public String getTransformer() {
1:         return transformer;
1:     }
1: 
1:     public void setTransformer(String transformer) {
1:         this.transformer = transformer;
commit:3306467
/////////////////////////////////////////////////////////////////////////
1:  * Creates the default AMQP WireFormat object used to configure the protocol support.
commit:f2653e6
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:cdd5150
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp;
1: 
1: import org.apache.activemq.wireformat.WireFormat;
1: import org.apache.activemq.wireformat.WireFormatFactory;
1: 
1: /**
0:  * Creates WireFormat objects that marshalls the <a href="http://stomp.codehaus.org/">Stomp</a> protocol.
1:  */
1: public class AmqpWireFormatFactory implements WireFormatFactory {
1:     public WireFormat createWireFormat() {
0:         return new AmqpWireFormat();
1:     }
1: }
============================================================================