1:72b8572: /**
1:72b8572:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:72b8572:  * contributor license agreements.  See the NOTICE file distributed with
1:72b8572:  * this work for additional information regarding copyright ownership.
1:72b8572:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:72b8572:  * (the "License"); you may not use this file except in compliance with
1:72b8572:  * the License.  You may obtain a copy of the License at
1:72b8572:  *
1:72b8572:  *      http://www.apache.org/licenses/LICENSE-2.0
1:72b8572:  *
1:72b8572:  * Unless required by applicable law or agreed to in writing, software
1:72b8572:  * distributed under the License is distributed on an "AS IS" BASIS,
1:72b8572:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:72b8572:  * See the License for the specific language governing permissions and
1:72b8572:  * limitations under the License.
1:72b8572:  */
1:72b8572: package org.apache.activemq.spring;
1:72b8572: 
1:72b8572: import org.apache.activemq.command.ActiveMQTextMessage;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:72b8572: 
1:72b8572: import javax.jms.JMSException;
1:72b8572: import javax.jms.Message;
1:72b8572: import javax.jms.MessageListener;
1:72b8572: import java.util.ArrayList;
1:72b8572: import java.util.List;
1:72b8572: 
1:72b8572: public class Listener implements MessageListener {
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger(Listener.class);
1:72b8572: 
1:72b8572: 	List<Message> messages = new ArrayList<Message>();
1:72b8572: 	long lastReceived = 0L;
1:72b8572: 
1:72b8572: 
1:72b8572: 	public void onMessage(Message message)  {
1:72b8572: 
1:72b8572:         try {
1:0d47fea:             LOG.info("LISTENER received " + message.getJMSDestination() + " " + ((ActiveMQTextMessage)message).getText());
1:72b8572:             lastReceived = System.currentTimeMillis();
1:72b8572:             synchronized (messages) {
1:72b8572:                 messages.add(message);
1:72b8572:             }
1:72b8572:         } catch (JMSException e) {
1:72b8572:             e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
1:72b8572:         }
1:72b8572: 
1:72b8572:     }
1:72b8572: 
1:72b8572: }
============================================================================
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static final Logger LOG = LoggerFactory.getLogger(Listener.class);
commit:0d47fea
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
/////////////////////////////////////////////////////////////////////////
0:     private static final Log LOG = LogFactory.getLog(Listener.class);
/////////////////////////////////////////////////////////////////////////
1:             LOG.info("LISTENER received " + message.getJMSDestination() + " " + ((ActiveMQTextMessage)message).getText());
commit:72b8572
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.spring;
1: 
1: import org.apache.activemq.command.ActiveMQTextMessage;
1: 
1: import javax.jms.JMSException;
1: import javax.jms.Message;
1: import javax.jms.MessageListener;
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: public class Listener implements MessageListener {
1: 
1: 	List<Message> messages = new ArrayList<Message>();
1: 	long lastReceived = 0L;
1: 
1: 
1: 	public void onMessage(Message message)  {
1: 
1:         try {
0:             System.out.println("LISTENER received " + message.getJMSDestination() + " " + ((ActiveMQTextMessage)message).getText());
1:             lastReceived = System.currentTimeMillis();
1:             synchronized (messages) {
1:                 messages.add(message);
1:             }
1:         } catch (JMSException e) {
1:             e.printStackTrace();  //To change body of catch statement use File | Settings | File Templates.
1:         }
1: 
1:     }
1: 
1: }
============================================================================