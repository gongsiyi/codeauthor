1:332c35c: /**
1:332c35c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:332c35c:  * contributor license agreements.  See the NOTICE file distributed with
1:332c35c:  * this work for additional information regarding copyright ownership.
1:332c35c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:332c35c:  * (the "License"); you may not use this file except in compliance with
1:332c35c:  * the License.  You may obtain a copy of the License at
1:332c35c:  *
1:332c35c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:332c35c:  *
1:332c35c:  * Unless required by applicable law or agreed to in writing, software
1:332c35c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:332c35c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:332c35c:  * See the License for the specific language governing permissions and
1:332c35c:  * limitations under the License.
1:332c35c:  */
1:332c35c: package org.apache.activemq.network;
1:332c35c: 
1:332c35c: import junit.framework.TestCase;
1:332c35c: import org.apache.activemq.advisory.AdvisorySupport;
1:332c35c: import org.apache.activemq.command.ActiveMQDestination;
1:332c35c: import org.apache.activemq.command.ActiveMQQueue;
1:332c35c: import org.apache.activemq.command.ActiveMQTempQueue;
1:332c35c: import org.apache.activemq.command.ActiveMQTopic;
1:332c35c: 
1:332c35c: import java.util.ArrayList;
1:332c35c: import java.util.List;
1:332c35c: 
1:332c35c: public class NetworkDestinationFilterTest extends TestCase {
1:332c35c: 
1:332c35c:     public void testFilter() throws Exception {
1:332c35c:         NetworkBridgeConfiguration config = new NetworkBridgeConfiguration();
1:332c35c:         assertEquals(AdvisorySupport.CONSUMER_ADVISORY_TOPIC_PREFIX + ">", config.getDestinationFilter());
1:332c35c:         List<ActiveMQDestination> dests = new ArrayList<ActiveMQDestination>();
1:332c35c:         config.setDynamicallyIncludedDestinations(dests);
1:332c35c:         assertEquals(AdvisorySupport.CONSUMER_ADVISORY_TOPIC_PREFIX + ">", config.getDestinationFilter());
1:332c35c:         dests.add(new ActiveMQQueue("TEST.>"));
1:332c35c:         dests.add(new ActiveMQTopic("TEST.>"));
1:332c35c:         dests.add(new ActiveMQTempQueue("TEST.>"));
1:332c35c:         String prefix = AdvisorySupport.CONSUMER_ADVISORY_TOPIC_PREFIX;
1:332c35c:         assertEquals(prefix + "Queue.TEST.>," + prefix + "Topic.TEST.>", config.getDestinationFilter());
1:332c35c:     }
1:332c35c: 
1:332c35c: 
1:332c35c: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:332c35c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.network;
1: 
1: import junit.framework.TestCase;
1: import org.apache.activemq.advisory.AdvisorySupport;
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.activemq.command.ActiveMQTempQueue;
1: import org.apache.activemq.command.ActiveMQTopic;
1: 
1: import java.util.ArrayList;
1: import java.util.List;
1: 
1: public class NetworkDestinationFilterTest extends TestCase {
1: 
1:     public void testFilter() throws Exception {
1:         NetworkBridgeConfiguration config = new NetworkBridgeConfiguration();
1:         assertEquals(AdvisorySupport.CONSUMER_ADVISORY_TOPIC_PREFIX + ">", config.getDestinationFilter());
1:         List<ActiveMQDestination> dests = new ArrayList<ActiveMQDestination>();
1:         config.setDynamicallyIncludedDestinations(dests);
1:         assertEquals(AdvisorySupport.CONSUMER_ADVISORY_TOPIC_PREFIX + ">", config.getDestinationFilter());
1:         dests.add(new ActiveMQQueue("TEST.>"));
1:         dests.add(new ActiveMQTopic("TEST.>"));
1:         dests.add(new ActiveMQTempQueue("TEST.>"));
1:         String prefix = AdvisorySupport.CONSUMER_ADVISORY_TOPIC_PREFIX;
1:         assertEquals(prefix + "Queue.TEST.>," + prefix + "Topic.TEST.>", config.getDestinationFilter());
1:     }
1: 
1: 
1: }
============================================================================