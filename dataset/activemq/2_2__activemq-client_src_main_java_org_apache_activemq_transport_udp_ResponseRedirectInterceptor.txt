1:7f883f6: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:7f883f6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
9:f3ef1a9:  *
2:f3ef1a9:  * Unless required by applicable law or agreed to in writing, software
2:f3ef1a9:  * distributed under the License is distributed on an "AS IS" BASIS,
2:f3ef1a9:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
2:f3ef1a9:  * See the License for the specific language governing permissions and
2:f3ef1a9:  * limitations under the License.
1:f3ef1a9:  */
1:f3ef1a9: package org.apache.activemq.transport.udp;
3:f3ef1a9: 
1:f3ef1a9: import org.apache.activemq.command.Command;
1:f3ef1a9: import org.apache.activemq.command.Endpoint;
1:f3ef1a9: import org.apache.activemq.transport.Transport;
1:f3ef1a9: import org.apache.activemq.transport.TransportFilter;
1:f3ef1a9: 
2:f3ef1a9: /**
1:b0c2a40:  * 
1:f3ef1a9:  */
1:f3ef1a9: public class ResponseRedirectInterceptor extends TransportFilter {
1:f3ef1a9:     private final UdpTransport transport;
1:f3ef1a9: 
1:f3ef1a9:     public ResponseRedirectInterceptor(Transport next, UdpTransport transport) {
1:f3ef1a9:         super(next);
1:f3ef1a9:         this.transport = transport;
2:f3ef1a9:     }
1:f3ef1a9: 
1:9ca56a0:     public void onCommand(Object o) {
1:fc00993:         final Command command = (Command)o;
1:f3ef1a9:         // redirect to the endpoint that the last response came from
1:f3ef1a9:         Endpoint from = command.getFrom();
1:f3ef1a9:         transport.setTargetEndpoint(from);
1:fc00993: 
1:f3ef1a9:         super.onCommand(command);
1:86cbdfd:     }
1:f3ef1a9: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         final Command command = (Command)o;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:9ca56a0
/////////////////////////////////////////////////////////////////////////
1:     public void onCommand(Object o) {
0:     	final Command command = (Command) o;
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
/////////////////////////////////////////////////////////////////////////
0:  * http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:f3ef1a9
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Copyright 2005-2006 The Apache Software Foundation.
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: /**
1:  * 
0:  * Copyright 2005 LogicBlaze, Inc. http://www.logicblaze.com
1:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
1:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS, 
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
1:  * See the License for the specific language governing permissions and 
1:  * limitations under the License. 
1:  * 
0:  **/
1: 
1: package org.apache.activemq.transport.udp;
1: 
1: import org.apache.activemq.command.Command;
1: import org.apache.activemq.command.Endpoint;
1: import org.apache.activemq.transport.Transport;
1: import org.apache.activemq.transport.TransportFilter;
1: 
1: /**
1:  *
0:  * @version $Revision: $
1:  */
1: public class ResponseRedirectInterceptor extends TransportFilter {
1:     private final UdpTransport transport;
1: 
1:     public ResponseRedirectInterceptor(Transport next, UdpTransport transport) {
1:         super(next);
1:         this.transport = transport;
1:     }
1: 
0:     public void onCommand(Command command) {
1:         // redirect to the endpoint that the last response came from
1:         Endpoint from = command.getFrom();
1:         transport.setTargetEndpoint(from);
1:     
1:         super.onCommand(command);
1:     }
1: }
============================================================================