1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.authz;
1:f9451e5: 
1:f9451e5: import org.apache.activemq.broker.ConnectionContext;
1:f9451e5: import org.apache.activemq.command.ActiveMQDestination;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * A {@code DestinationAction} represents behavior being taken on a particular {@link ActiveMQDestination}, such as
1:f9451e5:  * creation, removal, and reading messages from it or writing messages to it.  The exact behavior being taken on the
1:f9451e5:  * specific {@link #getDestination() destination} is represented as a {@link #getVerb() verb} property, which is one of
1:f9451e5:  * the following string tokens:
1:f9451e5:  * <table>
1:f9451e5:  * <tr>
1:f9451e5:  * <th>Verb</th>
1:f9451e5:  * <th>Description</th>
1:f9451e5:  * </tr>
1:f9451e5:  * <tr>
1:f9451e5:  * <td>{@code create}</td>
1:f9451e5:  * <td>Create a specific destination.</td>
1:f9451e5:  * </tr>
1:f9451e5:  * <tr>
1:f9451e5:  * <td>{@code remove}</td>
1:f9451e5:  * <td>Remove a specific destination.</td>
1:f9451e5:  * </tr>
1:f9451e5:  * <tr>
1:f9451e5:  * <td>{@code read}</td>
1:f9451e5:  * <td>Read (consume) messages from a specific destination.</td>
1:f9451e5:  * </tr>
1:f9451e5:  * <tr>
1:f9451e5:  * <td>{@code write}</td>
1:f9451e5:  * <td>Write messages to a specific destination.</td>
1:f9451e5:  * </tr>
1:f9451e5:  * </table>
1:f9451e5:  *
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public class DestinationAction implements Action {
1:f9451e5: 
1:f9451e5:     private final ConnectionContext connectionContext;
1:f9451e5:     private final ActiveMQDestination destination;
1:f9451e5:     private final String verb;
1:f9451e5: 
1:f9451e5:     public DestinationAction(ConnectionContext connectionContext, ActiveMQDestination destination, String verb) {
1:f9451e5:         if (connectionContext == null) {
1:f9451e5:             throw new IllegalArgumentException("ConnectionContext argument cannot be null.");
1:f9451e5:         }
1:f9451e5:         if (destination == null) {
1:f9451e5:             throw new IllegalArgumentException("ActiveMQDestination argument cannot be null.");
1:f9451e5:         }
1:f9451e5:         if (verb == null) {
1:f9451e5:             throw new IllegalArgumentException("verb argument cannot be null.");
1:f9451e5:         }
1:f9451e5: 
1:f9451e5:         this.connectionContext = connectionContext;
1:f9451e5:         this.destination = destination;
1:f9451e5:         this.verb = verb;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public ConnectionContext getConnectionContext() {
1:f9451e5:         return connectionContext;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public ActiveMQDestination getDestination() {
1:f9451e5:         return destination;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public String getVerb() {
1:f9451e5:         return verb;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Override
1:f9451e5:     public String toString() {
1:f9451e5:         return this.verb + " destination: " + destination;
1:f9451e5:     }
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.authz;
1: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.ActiveMQDestination;
1: 
1: /**
1:  * A {@code DestinationAction} represents behavior being taken on a particular {@link ActiveMQDestination}, such as
1:  * creation, removal, and reading messages from it or writing messages to it.  The exact behavior being taken on the
1:  * specific {@link #getDestination() destination} is represented as a {@link #getVerb() verb} property, which is one of
1:  * the following string tokens:
1:  * <table>
1:  * <tr>
1:  * <th>Verb</th>
1:  * <th>Description</th>
1:  * </tr>
1:  * <tr>
1:  * <td>{@code create}</td>
1:  * <td>Create a specific destination.</td>
1:  * </tr>
1:  * <tr>
1:  * <td>{@code remove}</td>
1:  * <td>Remove a specific destination.</td>
1:  * </tr>
1:  * <tr>
1:  * <td>{@code read}</td>
1:  * <td>Read (consume) messages from a specific destination.</td>
1:  * </tr>
1:  * <tr>
1:  * <td>{@code write}</td>
1:  * <td>Write messages to a specific destination.</td>
1:  * </tr>
1:  * </table>
1:  *
1:  * @since 5.10.0
1:  */
1: public class DestinationAction implements Action {
1: 
1:     private final ConnectionContext connectionContext;
1:     private final ActiveMQDestination destination;
1:     private final String verb;
1: 
1:     public DestinationAction(ConnectionContext connectionContext, ActiveMQDestination destination, String verb) {
1:         if (connectionContext == null) {
1:             throw new IllegalArgumentException("ConnectionContext argument cannot be null.");
1:         }
1:         if (destination == null) {
1:             throw new IllegalArgumentException("ActiveMQDestination argument cannot be null.");
1:         }
1:         if (verb == null) {
1:             throw new IllegalArgumentException("verb argument cannot be null.");
1:         }
1: 
1:         this.connectionContext = connectionContext;
1:         this.destination = destination;
1:         this.verb = verb;
1:     }
1: 
1:     public ConnectionContext getConnectionContext() {
1:         return connectionContext;
1:     }
1: 
1:     public ActiveMQDestination getDestination() {
1:         return destination;
1:     }
1: 
1:     public String getVerb() {
1:         return verb;
1:     }
1: 
1:     @Override
1:     public String toString() {
1:         return this.verb + " destination: " + destination;
1:     }
1: }
============================================================================