1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.management;
1:d29ca2a: 
1:d29ca2a: import javax.management.j2ee.statistics.Statistic;
1:230a86c: 
1:d29ca2a: /**
1:d29ca2a:  * Base class for a Statistic implementation
1:b0c2a40:  * 
1:230a86c:  * 
1:d29ca2a:  */
1:d29ca2a: public class StatisticImpl implements Statistic, Resettable {
1:933eb2f: 
1:933eb2f:     protected boolean enabled;
1:933eb2f: 
1:d29ca2a:     private String name;
1:d29ca2a:     private String unit;
1:d29ca2a:     private String description;
1:d29ca2a:     private long startTime;
1:d29ca2a:     private long lastSampleTime;
1:3c68051:     private boolean doReset = true;
1:d29ca2a: 
1:d29ca2a:     public StatisticImpl(String name, String unit, String description) {
1:d29ca2a:         this.name = name;
1:d29ca2a:         this.unit = unit;
1:d29ca2a:         this.description = description;
1:3c68051:         this.startTime = System.currentTimeMillis();
1:3c68051:         this.lastSampleTime = this.startTime;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public synchronized void reset() {
1:3c68051:         if(isDoReset()) {
1:3c68051:             this.startTime = System.currentTimeMillis();
1:3c68051:             this.lastSampleTime = this.startTime;
1:d29ca2a:         }
1:3c68051:     }
1:d29ca2a: 
1:d29ca2a:     protected synchronized void updateSampleTime() {
1:3c68051:         this.lastSampleTime = System.currentTimeMillis();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public synchronized String toString() {
1:d29ca2a:         StringBuffer buffer = new StringBuffer();
1:d29ca2a:         buffer.append(name);
1:d29ca2a:         buffer.append("{");
1:d29ca2a:         appendFieldDescription(buffer);
1:d29ca2a:         buffer.append(" }");
1:d29ca2a:         return buffer.toString();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String getName() {
1:3c68051:         return this.name;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String getUnit() {
1:3c68051:         return this.unit;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String getDescription() {
1:3c68051:         return this.description;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public synchronized long getStartTime() {
1:3c68051:         return this.startTime;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public synchronized long getLastSampleTime() {
1:3c68051:         return this.lastSampleTime;
1:d29ca2a:     }
1:230a86c: 
1:526cb5b:     /**
1:526cb5b:      * @return the enabled
1:526cb5b:      */
1:230a86c:     public boolean isEnabled() {
1:526cb5b:         return this.enabled;
1:526cb5b:     }
1:d29ca2a: 
1:526cb5b:     /**
1:526cb5b:      * @param enabled the enabled to set
1:526cb5b:      */
1:230a86c:     public void setEnabled(boolean enabled) {
1:230a86c:         this.enabled = enabled;
1:526cb5b:     }
1:3c68051:     
1:3c68051:     /**
1:3c68051:      * @return the doReset
1:3c68051:      */
1:3c68051:     public boolean isDoReset() {
1:3c68051:         return this.doReset;
1:3c68051:     }
1:3c68051: 
1:3c68051:     /**
1:3c68051:      * @param doReset the doReset to set
1:3c68051:      */
1:3c68051:     public void setDoReset(boolean doReset) {
1:3c68051:         this.doReset = doReset;
1:3c68051:     }
1:3c68051: 
2:526cb5b: 
1:d29ca2a:     protected synchronized void appendFieldDescription(StringBuffer buffer) {
1:d29ca2a:         buffer.append(" unit: ");
1:3c68051:         buffer.append(this.unit);
1:d29ca2a:         buffer.append(" startTime: ");
1:230a86c:         // buffer.append(new Date(startTime));
1:3c68051:         buffer.append(this.startTime);
1:d29ca2a:         buffer.append(" lastSampleTime: ");
1:230a86c:         // buffer.append(new Date(lastSampleTime));
1:3c68051:         buffer.append(this.lastSampleTime);
1:d29ca2a:         buffer.append(" description: ");
1:3c68051:         buffer.append(this.description);
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1: 
1:     protected boolean enabled;
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: 
1:  * 
/////////////////////////////////////////////////////////////////////////
0:     protected boolean enabled;
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean isEnabled() {
1:     public void setEnabled(boolean enabled) {
1:         this.enabled = enabled;
1:         // buffer.append(new Date(startTime));
1:         // buffer.append(new Date(lastSampleTime));
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.management;
1: 
1: import javax.management.j2ee.statistics.Statistic;
1: /**
1:  * Base class for a Statistic implementation
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class StatisticImpl implements Statistic, Resettable {
1:     private String name;
1:     private String unit;
1:     private String description;
1:     private long startTime;
1:     private long lastSampleTime;
1: 
1:     public StatisticImpl(String name, String unit, String description) {
1:         this.name = name;
1:         this.unit = unit;
1:         this.description = description;
0:         startTime = System.currentTimeMillis();
0:         lastSampleTime = startTime;
1:     }
1: 
1:     public synchronized void reset() {
0:         startTime = System.currentTimeMillis();
0:         lastSampleTime = startTime;
1:     }
1: 
1:     protected synchronized void updateSampleTime() {
0:         lastSampleTime = System.currentTimeMillis();
1:     }
1: 
1:     public synchronized String toString() {
1:         StringBuffer buffer = new StringBuffer();
1:         buffer.append(name);
1:         buffer.append("{");
1:         appendFieldDescription(buffer);
1:         buffer.append(" }");
1:         return buffer.toString();
1:     }
1: 
1:     public String getName() {
0:         return name;
1:     }
1: 
1:     public String getUnit() {
0:         return unit;
1:     }
1: 
1:     public String getDescription() {
0:         return description;
1:     }
1: 
1:     public synchronized long getStartTime() {
0:         return startTime;
1:     }
1: 
1:     public synchronized long getLastSampleTime() {
0:         return lastSampleTime;
1:     }
1: 
1:     protected synchronized void appendFieldDescription(StringBuffer buffer) {
1:         buffer.append(" unit: ");
0:         buffer.append(unit);
1:         buffer.append(" startTime: ");
0:         //buffer.append(new Date(startTime));
0:         buffer.append(startTime);
1:         buffer.append(" lastSampleTime: ");
0:         //buffer.append(new Date(lastSampleTime));
0:         buffer.append(lastSampleTime);
1:         buffer.append(" description: ");
0:         buffer.append(description);
1:     }
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:3c68051
/////////////////////////////////////////////////////////////////////////
1:     private boolean doReset = true;
1:         this.startTime = System.currentTimeMillis();
1:         this.lastSampleTime = this.startTime;
1:         if(isDoReset()) {
1:             this.startTime = System.currentTimeMillis();
1:             this.lastSampleTime = this.startTime;
1:         }
1:         this.lastSampleTime = System.currentTimeMillis();
/////////////////////////////////////////////////////////////////////////
1:         return this.name;
1:         return this.unit;
1:         return this.description;
1:         return this.startTime;
1:         return this.lastSampleTime;
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * @return the doReset
1:      */
1:     public boolean isDoReset() {
1:         return this.doReset;
1:     }
1: 
1:     /**
1:      * @param doReset the doReset to set
1:      */
1:     public void setDoReset(boolean doReset) {
1:         this.doReset = doReset;
1:     }
1: 
1:         buffer.append(this.unit);
1:         buffer.append(this.startTime);
1:         buffer.append(this.lastSampleTime);
1:         buffer.append(this.description);
commit:f5b1b83
/////////////////////////////////////////////////////////////////////////
0:     protected boolean enabled= false;
commit:526cb5b
/////////////////////////////////////////////////////////////////////////
0:     protected boolean enabled= true;
/////////////////////////////////////////////////////////////////////////
1:     
1:     /**
1:      * @return the enabled
1:      */
0:     public boolean isEnabled(){
1:         return this.enabled;
1:     }
1: 
1:     /**
1:      * @param enabled the enabled to set
1:      */
0:     public void setEnabled(boolean enabled){
0:         this.enabled=enabled;
1:     }
/////////////////////////////////////////////////////////////////////////
0: 
0:     
0:    
============================================================================