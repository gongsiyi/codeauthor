1:f44c3d2: /**
1:f44c3d2:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f44c3d2:  * contributor license agreements.  See the NOTICE file distributed with
1:f44c3d2:  * this work for additional information regarding copyright ownership.
1:f44c3d2:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f44c3d2:  * (the "License"); you may not use this file except in compliance with
1:f44c3d2:  * the License.  You may obtain a copy of the License at
1:f44c3d2:  *
1:f44c3d2:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f44c3d2:  *
1:f44c3d2:  * Unless required by applicable law or agreed to in writing, software
1:f44c3d2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f44c3d2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f44c3d2:  * See the License for the specific language governing permissions and
1:f44c3d2:  * limitations under the License.
1:f44c3d2:  */
1:f44c3d2: package org.apache.activemq.web.config;
1:f44c3d2: 
1:f44c3d2: import org.eclipse.jetty.server.Handler;
1:f44c3d2: import org.eclipse.jetty.server.Server;
1:f44c3d2: import org.eclipse.jetty.server.handler.HandlerCollection;
1:f44c3d2: import org.eclipse.jetty.webapp.Configuration;
1:f44c3d2: import org.eclipse.jetty.webapp.WebAppContext;
1:f44c3d2: 
1:f44c3d2: /**
1:f44c3d2:  *
1:f44c3d2:  *
1:f44c3d2:  */
1:f44c3d2: public class JspConfigurer {
1:f44c3d2: 
1:f44c3d2:     public static void configureJetty(Server server, HandlerCollection collection) {
1:f44c3d2:         Configuration.ClassList classlist = Configuration.ClassList
1:f44c3d2:                 .setServerDefault( server );
1:f44c3d2:         classlist.addBefore(
1:f44c3d2:                 "org.eclipse.jetty.webapp.JettyWebXmlConfiguration",
1:f44c3d2:                 "org.eclipse.jetty.annotations.AnnotationConfiguration" );
1:f44c3d2: 
1:f44c3d2:         // Set the ContainerIncludeJarPattern so that jetty examines these
1:f44c3d2:         // container-path jars for tlds, web-fragments etc.
1:f44c3d2:         // If you omit the jar that contains the jstl .tlds, the jsp engine will
1:f44c3d2:         // scan for them instead.
1:f44c3d2:         for (Handler handler: collection.getHandlers()) {
1:f44c3d2:             if (handler instanceof WebAppContext){
1:f44c3d2:                 ((WebAppContext) handler).setAttribute(
1:f44c3d2:                     "org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern",
1:f44c3d2:                     ".*/[^/]*servlet-api-[^/]*\\.jar$|.*/javax.servlet.jsp.jstl-.*\\.jar$|.*/[^/]*taglibs.*\\.jar$" );
1:f44c3d2:             }
1:f44c3d2:         }
1:f44c3d2:     }
1:f44c3d2: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:f44c3d2
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.web.config;
1: 
1: import org.eclipse.jetty.server.Handler;
1: import org.eclipse.jetty.server.Server;
1: import org.eclipse.jetty.server.handler.HandlerCollection;
1: import org.eclipse.jetty.webapp.Configuration;
1: import org.eclipse.jetty.webapp.WebAppContext;
1: 
1: /**
1:  *
1:  *
1:  */
1: public class JspConfigurer {
1: 
1:     public static void configureJetty(Server server, HandlerCollection collection) {
1:         Configuration.ClassList classlist = Configuration.ClassList
1:                 .setServerDefault( server );
1:         classlist.addBefore(
1:                 "org.eclipse.jetty.webapp.JettyWebXmlConfiguration",
1:                 "org.eclipse.jetty.annotations.AnnotationConfiguration" );
1: 
1:         // Set the ContainerIncludeJarPattern so that jetty examines these
1:         // container-path jars for tlds, web-fragments etc.
1:         // If you omit the jar that contains the jstl .tlds, the jsp engine will
1:         // scan for them instead.
1:         for (Handler handler: collection.getHandlers()) {
1:             if (handler instanceof WebAppContext){
1:                 ((WebAppContext) handler).setAttribute(
1:                     "org.eclipse.jetty.server.webapp.ContainerIncludeJarPattern",
1:                     ".*/[^/]*servlet-api-[^/]*\\.jar$|.*/javax.servlet.jsp.jstl-.*\\.jar$|.*/[^/]*taglibs.*\\.jar$" );
1:             }
1:         }
1:     }
1: }
============================================================================