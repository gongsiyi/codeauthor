1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.management;
1:d29ca2a: 
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * A range statistic implementation
1:b0c2a40:  *
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public class RangeStatisticImpl extends StatisticImpl {
1:d29ca2a:     private long highWaterMark;
1:d29ca2a:     private long lowWaterMark;
1:d29ca2a:     private long current;
1:d29ca2a: 
1:d29ca2a:     public RangeStatisticImpl(String name, String unit, String description) {
1:d29ca2a:         super(name, unit, description);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void reset() {
1:3c68051:         if (isDoReset()) {
1:d29ca2a:             super.reset();
1:d29ca2a:             current = 0;
1:d29ca2a:             lowWaterMark = 0;
1:d29ca2a:             highWaterMark = 0;
1:d29ca2a:         }
1:3c68051:     }
1:d29ca2a: 
1:d29ca2a:     public long getHighWaterMark() {
1:d29ca2a:         return highWaterMark;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public long getLowWaterMark() {
1:d29ca2a:         return lowWaterMark;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public long getCurrent() {
1:d29ca2a:         return current;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setCurrent(long current) {
1:d29ca2a:         this.current = current;
1:d29ca2a:         if (current > highWaterMark) {
1:d29ca2a:             highWaterMark = current;
1:d29ca2a:         }
1:d29ca2a:         if (current < lowWaterMark || lowWaterMark == 0) {
1:d29ca2a:             lowWaterMark = current;
1:d29ca2a:         }
1:d29ca2a:         updateSampleTime();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     protected void appendFieldDescription(StringBuffer buffer) {
1:d29ca2a:         buffer.append(" current: ");
1:d29ca2a:         buffer.append(Long.toString(current));
1:d29ca2a:         buffer.append(" lowWaterMark: ");
1:d29ca2a:         buffer.append(Long.toString(lowWaterMark));
1:d29ca2a:         buffer.append(" highWaterMark: ");
1:d29ca2a:         buffer.append(Long.toString(highWaterMark));
1:d29ca2a:         super.appendFieldDescription(buffer);
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.management;
1: 
1: 
1: /**
1:  * A range statistic implementation
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class RangeStatisticImpl extends StatisticImpl {
1:     private long highWaterMark;
1:     private long lowWaterMark;
1:     private long current;
1: 
1:     public RangeStatisticImpl(String name, String unit, String description) {
1:         super(name, unit, description);
1:     }
1: 
1:     public void reset() {
1:         super.reset();
1:         current = 0;
1:         lowWaterMark = 0;
1:         highWaterMark = 0;
1:     }
1: 
1:     public long getHighWaterMark() {
1:         return highWaterMark;
1:     }
1: 
1:     public long getLowWaterMark() {
1:         return lowWaterMark;
1:     }
1: 
1:     public long getCurrent() {
1:         return current;
1:     }
1: 
1:     public void setCurrent(long current) {
1:         this.current = current;
1:         if (current > highWaterMark) {
1:             highWaterMark = current;
1:         }
1:         if (current < lowWaterMark || lowWaterMark == 0) {
1:             lowWaterMark = current;
1:         }
1:         updateSampleTime();
1:     }
1: 
1:     protected void appendFieldDescription(StringBuffer buffer) {
1:         buffer.append(" current: ");
1:         buffer.append(Long.toString(current));
1:         buffer.append(" lowWaterMark: ");
1:         buffer.append(Long.toString(lowWaterMark));
1:         buffer.append(" highWaterMark: ");
1:         buffer.append(Long.toString(highWaterMark));
1:         super.appendFieldDescription(buffer);
1:     }
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:3c68051
/////////////////////////////////////////////////////////////////////////
1:         if (isDoReset()) {
0:             super.reset();
0:             current = 0;
0:             lowWaterMark = 0;
0:             highWaterMark = 0;
1:         }
============================================================================