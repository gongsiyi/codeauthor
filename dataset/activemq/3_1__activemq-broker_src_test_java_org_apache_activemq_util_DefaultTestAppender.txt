1:8bab1c1: /**
1:8bab1c1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8bab1c1:  * contributor license agreements.  See the NOTICE file distributed with
1:8bab1c1:  * this work for additional information regarding copyright ownership.
1:8bab1c1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8bab1c1:  * (the "License"); you may not use this file except in compliance with
1:8bab1c1:  * the License.  You may obtain a copy of the License at
1:8bab1c1:  *
1:8bab1c1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8bab1c1:  *
1:8bab1c1:  * Unless required by applicable law or agreed to in writing, software
1:8bab1c1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8bab1c1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8bab1c1:  * See the License for the specific language governing permissions and
1:8bab1c1:  * limitations under the License.
1:8bab1c1:  */
1:8bab1c1: 
1:8bab1c1: package org.apache.activemq.util;
1:8bab1c1: 
1:8bab1c1: import org.apache.log4j.Appender;
1:8bab1c1: import org.apache.log4j.Layout;
1:8bab1c1: import org.apache.log4j.spi.ErrorHandler;
1:8bab1c1: import org.apache.log4j.spi.Filter;
1:8bab1c1: 
1:8bab1c1: public abstract class DefaultTestAppender implements Appender {
1:8bab1c1:     
1:8bab1c1:     String name = this.getClass().getSimpleName();
1:8bab1c1:     
1:8bab1c1:     @Override
1:8bab1c1:     public void addFilter(Filter newFilter) {
1:8bab1c1: 
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public Filter getFilter() {
1:8bab1c1:         return null;
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public void clearFilters() {
1:8bab1c1: 
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public void close() {
1:8bab1c1: 
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public String getName() {
1:8bab1c1:         return name;
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public void setErrorHandler(ErrorHandler errorHandler) {
1:8bab1c1: 
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public ErrorHandler getErrorHandler() {
1:8bab1c1:         return null;
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public void setLayout(Layout layout) {
1:8bab1c1: 
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public Layout getLayout() {
1:8bab1c1:         return null;
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public void setName(String name) {
1:8bab1c1:         this.name = name;
1:8bab1c1:     }
1:8bab1c1: 
1:8bab1c1:     @Override
1:8bab1c1:     public boolean requiresLayout() {
1:8bab1c1:         return false;
1:8bab1c1:     }
1:8bab1c1: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:f548aaf
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:8bab1c1
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.util;
1: 
1: import org.apache.log4j.Appender;
1: import org.apache.log4j.Layout;
1: import org.apache.log4j.spi.ErrorHandler;
1: import org.apache.log4j.spi.Filter;
1: 
1: public abstract class DefaultTestAppender implements Appender {
1:     
1:     String name = this.getClass().getSimpleName();
1:     
1:     @Override
1:     public void addFilter(Filter newFilter) {
1: 
1:     }
1: 
1:     @Override
1:     public Filter getFilter() {
1:         return null;
1:     }
1: 
1:     @Override
1:     public void clearFilters() {
1: 
1:     }
1: 
1:     @Override
1:     public void close() {
1: 
1:     }
1: 
1:     @Override
1:     public String getName() {
1:         return name;
1:     }
1: 
1:     @Override
1:     public void setErrorHandler(ErrorHandler errorHandler) {
1: 
1:     }
1: 
1:     @Override
1:     public ErrorHandler getErrorHandler() {
1:         return null;
1:     }
1: 
1:     @Override
1:     public void setLayout(Layout layout) {
1: 
1:     }
1: 
1:     @Override
1:     public Layout getLayout() {
1:         return null;
1:     }
1: 
1:     @Override
1:     public void setName(String name) {
1:         this.name = name;
1:     }
1: 
1:     @Override
1:     public boolean requiresLayout() {
1:         return false;
1:     }
1: }
============================================================================