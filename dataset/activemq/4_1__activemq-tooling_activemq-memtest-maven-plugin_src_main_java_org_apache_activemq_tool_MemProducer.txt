1:a88906f: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a88906f:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a88906f:  *
1:a88906f:  * Unless required by applicable law or agreed to in writing, software
1:a88906f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a88906f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a88906f:  * See the License for the specific language governing permissions and
1:a88906f:  * limitations under the License.
1:a88906f:  */
1:a88906f: package org.apache.activemq.tool;
1:a88906f: 
1:a88906f: import javax.jms.Connection;
1:a88906f: import javax.jms.ConnectionFactory;
1:a88906f: import javax.jms.DeliveryMode;
1:a88906f: import javax.jms.Destination;
1:a88906f: import javax.jms.JMSException;
1:a88906f: import javax.jms.Message;
1:a88906f: import javax.jms.MessageProducer;
1:a88906f: import javax.jms.Session;
1:a88906f: 
1:a88906f: /**
1:b0c2a40:  * 
1:a88906f:  */
1:a88906f: public class MemProducer {
1:a88906f:     protected Connection connection;
1:a88906f:     protected MessageProducer producer;
1:a88906f: 
1:a88906f:     public MemProducer(ConnectionFactory fac, Destination dest) throws JMSException {
1:a88906f:         connection = fac.createConnection();
1:a88906f:         Session s = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:a88906f:         producer = s.createProducer(dest);
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void setDeliveryMode(int mode) throws JMSException {
1:a88906f:         producer.setDeliveryMode(mode);
1:86cbdfd:     }
1:a88906f: 
1:a88906f:     public void start() throws JMSException {
1:a88906f:         connection.start();
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void stop() throws JMSException {
1:a88906f:         connection.stop();
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void shutDown() throws JMSException {
1:a88906f:         connection.close();
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void sendMessage(Message msg) throws JMSException {
1:a88906f:         sendMessage(msg, null, 0);
1:a88906f:     }
1:a88906f: 
1:a88906f:     /*
1:a88906f:     *   allow producer to attach message counter on its header. This will be used to verify message order
1:a88906f:     *
1:a88906f:     */
1:a88906f:     public void sendMessage(Message msg, String headerName, long headerValue) throws JMSException {
1:a88906f:         if (headerName != null) {
1:a88906f:             msg.setLongProperty(headerName, headerValue);
1:a88906f:         }
1:a88906f: 
1:a88906f:         producer.send(msg);
1:a88906f: 
1:a88906f:     }
1:a88906f: 
1:a88906f: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:87e878b
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:a88906f
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.tool;
1: 
1: import javax.jms.Connection;
1: import javax.jms.ConnectionFactory;
1: import javax.jms.DeliveryMode;
1: import javax.jms.Destination;
1: import javax.jms.JMSException;
1: import javax.jms.Message;
1: import javax.jms.MessageProducer;
1: import javax.jms.Session;
1: 
1: /**
0:  * @version $Revision: 1.3 $
1:  */
1: public class MemProducer {
1:     protected Connection connection;
1:     protected MessageProducer producer;
1: 
1:     public MemProducer(ConnectionFactory fac, Destination dest) throws JMSException {
1:         connection = fac.createConnection();
1:         Session s = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:         producer = s.createProducer(dest);
1:     }
1: 
1:     public void setDeliveryMode(int mode) throws JMSException {
1:         producer.setDeliveryMode(mode);
1:     }
1: 
1:     public void start() throws JMSException {
1:         connection.start();
1:     }
1: 
1:     public void stop() throws JMSException {
1:         connection.stop();
1:     }
1: 
1:     public void shutDown() throws JMSException {
1:         connection.close();
1:     }
1: 
1:     public void sendMessage(Message msg) throws JMSException {
1:         sendMessage(msg, null, 0);
1:     }
1: 
1:     /*
1:     *   allow producer to attach message counter on its header. This will be used to verify message order
1:     *
1:     */
1:     public void sendMessage(Message msg, String headerName, long headerValue) throws JMSException {
1:         if (headerName != null) {
1:             msg.setLongProperty(headerName, headerValue);
1:         }
1: 
1:         producer.send(msg);
1: 
1:     }
1: 
author:James Strachan
-------------------------------------------------------------------------------
commit:dd55c21
author:Jonas B. Lim
-------------------------------------------------------------------------------
commit:2054392
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.tool;
0: 
0: import javax.jms.Connection;
0: import javax.jms.ConnectionFactory;
0: import javax.jms.DeliveryMode;
0: import javax.jms.Destination;
0: import javax.jms.JMSException;
0: import javax.jms.Message;
0: import javax.jms.MessageProducer;
0: import javax.jms.Session;
0: 
0: /**
0:  * @version $Revision: 1.3 $
0:  */
0: public class MemProducer {
0:     protected Connection connection;
0:     protected MessageProducer producer;
0: 
0:     public MemProducer(ConnectionFactory fac, Destination dest) throws JMSException {
0:         connection = fac.createConnection();
0:         Session s = connection.createSession(false, Session.AUTO_ACKNOWLEDGE);
0:         producer = s.createProducer(dest);
0:     }
0: 
0:     public void setDeliveryMode(int mode) throws JMSException {
0:         producer.setDeliveryMode(mode);
0:     }
0: 
0:     public void start() throws JMSException {
0:         connection.start();
0:     }
0: 
0:     public void stop() throws JMSException {
0:         connection.stop();
0:     }
0: 
0:     public void shutDown() throws JMSException {
0:         connection.close();
0:     }
0: 
0:     public void sendMessage(Message msg) throws JMSException {
0:         sendMessage(msg, null, 0);
0:     }
0: 
0:     /*
0:     *   allow producer to attach message counter on its header. This will be used to verify message order
0:     *
0:     */
0:     public void sendMessage(Message msg, String headerName, long headerValue) throws JMSException {
0:         if (headerName != null) {
0:             msg.setLongProperty(headerName, headerValue);
0:         }
0: 
0:         producer.send(msg);
0: 
0:     }
0: 
0: }
============================================================================