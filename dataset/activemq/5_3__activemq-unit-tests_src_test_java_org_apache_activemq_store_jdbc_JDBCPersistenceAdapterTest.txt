2:bfed2c0: /**
1:bfed2c0:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:bfed2c0:  * contributor license agreements.  See the NOTICE file distributed with
1:bfed2c0:  * this work for additional information regarding copyright ownership.
1:bfed2c0:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:bfed2c0:  * (the "License"); you may not use this file except in compliance with
1:bfed2c0:  * the License.  You may obtain a copy of the License at
2:bfed2c0:  *
1:bfed2c0:  *      http://www.apache.org/licenses/LICENSE-2.0
1:bfed2c0:  *
1:bfed2c0:  * Unless required by applicable law or agreed to in writing, software
1:bfed2c0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:bfed2c0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bfed2c0:  * See the License for the specific language governing permissions and
1:bfed2c0:  * limitations under the License.
2:bfed2c0:  */
1:bfed2c0: package org.apache.activemq.store.jdbc;
3:bfed2c0: 
1:bfed2c0: import java.io.IOException;
1:bfed2c0: 
1:bfed2c0: import junit.framework.AssertionFailedError;
1:bfed2c0: 
1:bfed2c0: import org.apache.activemq.store.PersistenceAdapter;
1:bfed2c0: import org.apache.activemq.store.PersistenceAdapterTestSupport;
1:bfed2c0: 
1:bfed2c0: public class JDBCPersistenceAdapterTest extends PersistenceAdapterTestSupport {
1:bfed2c0:     
1:bfed2c0:     protected PersistenceAdapter createPersistenceAdapter(boolean delete) throws IOException {
1:bfed2c0:         JDBCPersistenceAdapter jdbc = new JDBCPersistenceAdapter();
1:a6a6a70:         
1:a6a6a70:         // explicitly enable audit as it is now off by default
1:a6a6a70:         // due to org.apache.activemq.broker.ProducerBrokerExchange.canDispatch(Message)
1:a6a6a70:         jdbc.setEnableAudit(true);
1:a6a6a70:         
1:24a7626:         brokerService.setSchedulerSupport(false);
1:24a7626:         brokerService.setPersistenceAdapter(jdbc);
1:bfed2c0:         if( delete ) {
1:bfed2c0:             jdbc.deleteAllMessages();
4:bfed2c0:         }
1:bfed2c0:         return jdbc;
1:c3801c4:     }
1:c3801c4:     
1:c3801c4:     public void testAuditOff() throws Exception {
1:6cde618:         pa.stop();
1:6cde618:         pa = createPersistenceAdapter(true);
1:6cde618:         ((JDBCPersistenceAdapter)pa).setEnableAudit(false);
1:6cde618:         pa.start();
1:c3801c4:     	boolean failed = true;
1:c3801c4:     	try {
1:c3801c4:     		testStoreCanHandleDupMessages();
1:c3801c4:     		failed = false;
1:c3801c4:     	} catch (AssertionFailedError e) {
1:c3801c4:     	}
1:c3801c4:     	
1:c3801c4:     	if (!failed) {
1:c3801c4:     		fail("Should have failed with audit turned off");
1:a6a6a70:     	}
1:c3801c4:     }   
1:bfed2c0: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:165959e
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:a6a6a70
/////////////////////////////////////////////////////////////////////////
1:         
1:         // explicitly enable audit as it is now off by default
1:         // due to org.apache.activemq.broker.ProducerBrokerExchange.canDispatch(Message)
1:         jdbc.setEnableAudit(true);
1:         
/////////////////////////////////////////////////////////////////////////
1:     }   
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:24a7626
/////////////////////////////////////////////////////////////////////////
1:         brokerService.setSchedulerSupport(false);
1:         brokerService.setPersistenceAdapter(jdbc);
0:         jdbc.setBrokerService(brokerService);
commit:6cde618
/////////////////////////////////////////////////////////////////////////
1:         pa.stop();
1:         pa = createPersistenceAdapter(true);
1:         ((JDBCPersistenceAdapter)pa).setEnableAudit(false);
1:         pa.start();
commit:c3801c4
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public void testAuditOff() throws Exception {
0:     	((JDBCPersistenceAdapter)pa).setEnableAudit(false);
1:     	boolean failed = true;
1:     	try {
1:     		testStoreCanHandleDupMessages();
1:     		failed = false;
1:     	} catch (AssertionFailedError e) {
1:     	}
1:     	
1:     	if (!failed) {
1:     		fail("Should have failed with audit turned off");
1:     	}
1:     }
1:     
commit:d49b6e5
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.broker.ConnectionContext;
0: import org.apache.activemq.command.ActiveMQQueue;
0: import org.apache.activemq.command.ActiveMQTextMessage;
0: import org.apache.activemq.command.MessageId;
0: import org.apache.activemq.store.MessageStore;
/////////////////////////////////////////////////////////////////////////
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:bfed2c0
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.jdbc;
1: 
1: import java.io.IOException;
1: 
1: import junit.framework.AssertionFailedError;
1: 
1: import org.apache.activemq.store.PersistenceAdapter;
1: import org.apache.activemq.store.PersistenceAdapterTestSupport;
0: import org.apache.derby.jdbc.EmbeddedDataSource;
1: 
1: /**
1:  * 
0:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:  */
1: public class JDBCPersistenceAdapterTest extends PersistenceAdapterTestSupport {
1:     
1:     protected PersistenceAdapter createPersistenceAdapter(boolean delete) throws IOException {
1:         JDBCPersistenceAdapter jdbc = new JDBCPersistenceAdapter();
0:         EmbeddedDataSource dataSource = new EmbeddedDataSource();
0:         dataSource.setDatabaseName("derbyDb");
0:         dataSource.setCreateDatabase("create");
0:         jdbc.setDataSource(dataSource);
1:         if( delete ) {
1:             jdbc.deleteAllMessages();
1:         }
1:         return jdbc;
1:     }
1:     
0:     @Override
0:     public void testStoreCanHandleDupMessages() throws Exception {
0:         try {
0:             super.testStoreCanHandleDupMessages();
0:             fail("We expect this test to fail as it would be too expensive to add additional " +
0:                  "unique constraints in the JDBC implementation to detect the duplicate messages.");
0:         } catch (AssertionFailedError expected) {
1:         }
1:     }
1:     
1: }
============================================================================