1:f680f3a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
6:f680f3a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f680f3a:  *
1:f680f3a:  * Unless required by applicable law or agreed to in writing, software
1:f680f3a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f680f3a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f680f3a:  * See the License for the specific language governing permissions and
1:f680f3a:  * limitations under the License.
1:f680f3a:  */
1:f680f3a: package org.apache.activemq.openwire.v1;
9:f680f3a: 
1:4842547: import java.io.DataOutputStream;
1:4842547: import java.util.HashMap;
1:4842547: import java.util.Map;
1:4842547: 
1:74a7a8b: import org.apache.activemq.command.BrokerId;
1:74a7a8b: import org.apache.activemq.command.Message;
1:4842547: import org.apache.activemq.util.ByteArrayOutputStream;
1:4842547: import org.apache.activemq.util.MarshallingSupport;
1:f680f3a: 
1:f680f3a: /**
1:230a86c:  * Test case for the OpenWire marshalling for Message NOTE!: This file is auto
1:230a86c:  * generated - do not modify! if you need to make a change, please see the
1:230a86c:  * modify the groovy scripts in the under src/gram/script and then use maven
1:230a86c:  * openwire:generate to regenerate this file.
1:0bbc0ac:  * 
1:230a86c:  * 
1:f680f3a:  */
1:f680f3a: public abstract class MessageTestSupport extends BaseCommandTestSupport {
1:f680f3a: 
1:f680f3a:     protected void populateObject(Object object) throws Exception {
1:230a86c:         super.populateObject(object);
1:230a86c:         Message info = (Message)object;
1:f680f3a:         info.setProducerId(createProducerId("ProducerId:1"));
1:f680f3a:         info.setDestination(createActiveMQDestination("Destination:2"));
1:f680f3a:         info.setTransactionId(createTransactionId("TransactionId:3"));
1:f680f3a:         info.setOriginalDestination(createActiveMQDestination("OriginalDestination:4"));
1:f680f3a:         info.setMessageId(createMessageId("MessageId:5"));
1:f680f3a:         info.setOriginalTransactionId(createTransactionId("OriginalTransactionId:6"));
1:f680f3a:         info.setGroupID("GroupID:7");
1:f680f3a:         info.setGroupSequence(1);
1:f680f3a:         info.setCorrelationId("CorrelationId:8");
1:f680f3a:         info.setPersistent(true);
1:f680f3a:         info.setExpiration(1);
1:230a86c:         info.setPriority((byte)1);
1:f680f3a:         info.setReplyTo(createActiveMQDestination("ReplyTo:9"));
1:f680f3a:         info.setTimestamp(2);
1:f680f3a:         info.setType("Type:10");
1:230a86c: 
1:230a86c:         {
1:4842547:             ByteArrayOutputStream baos = new ByteArrayOutputStream();
1:4842547:             DataOutputStream dataOut = new DataOutputStream(baos);
1:4842547:             MarshallingSupport.writeUTF8(dataOut, "Content:11");
1:4842547:             dataOut.close();
1:4842547:             info.setContent(baos.toByteSequence());
1:230a86c:         }
1:230a86c: 
1:230a86c:         {
1:4842547:         	Map map = new HashMap();
1:4842547:         	map.put("MarshalledProperties", 12);
1:4842547:             ByteArrayOutputStream baos = new ByteArrayOutputStream();
1:4842547:             DataOutputStream os = new DataOutputStream(baos);
1:4842547:             MarshallingSupport.marshalPrimitiveMap(map, os);
1:4842547:             os.close();
1:4842547:             info.setMarshalledProperties(baos.toByteSequence());
1:230a86c:         }
1:230a86c: 
1:f680f3a:         info.setDataStructure(createDataStructure("DataStructure:13"));
1:f680f3a:         info.setTargetConsumerId(createConsumerId("TargetConsumerId:14"));
1:f680f3a:         info.setCompressed(false);
1:f680f3a:         info.setRedeliveryCounter(2);
1:230a86c: 
1:230a86c:         {
1:230a86c:             BrokerId value[] = new BrokerId[2];
1:230a86c:             for (int i = 0; i < 2; i++) {
1:230a86c:                 value[i] = createBrokerId("BrokerPath:15");
6:f680f3a:             }
1:230a86c:             info.setBrokerPath(value);
1:230a86c:         }
1:f680f3a:         info.setArrival(3);
1:f680f3a:         info.setUserID("UserID:16");
1:f680f3a:         info.setRecievedByDFBridge(true);
1:f680f3a: 
1:230a86c:     }
1:230a86c: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
/////////////////////////////////////////////////////////////////////////
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.BrokerId;
1: import org.apache.activemq.command.Message;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1:  * Test case for the OpenWire marshalling for Message NOTE!: This file is auto
1:  * generated - do not modify! if you need to make a change, please see the
1:  * modify the groovy scripts in the under src/gram/script and then use maven
1:  * openwire:generate to regenerate this file.
1:  * 
1:         super.populateObject(object);
1:         Message info = (Message)object;
/////////////////////////////////////////////////////////////////////////
1:         info.setPriority((byte)1);
1: 
1:         {
0:             byte data[] = "Content:11".getBytes();
0:             info.setContent(new org.apache.activemq.util.ByteSequence(data, 0, data.length));
1:         }
1: 
1:         {
0:             byte data[] = "MarshalledProperties:12".getBytes();
0:             info.setMarshalledProperties(new org.apache.activemq.util.ByteSequence(data, 0, data.length));
1:         }
1: 
1: 
1:         {
1:             BrokerId value[] = new BrokerId[2];
1:             for (int i = 0; i < 2; i++) {
1:                 value[i] = createBrokerId("BrokerPath:15");
1:             info.setBrokerPath(value);
1:         }
1:     }
1: }
commit:88acb0e
/////////////////////////////////////////////////////////////////////////
0:         		info.setContent(new org.apache.activemq.util.ByteSequence(data,0,data.length));
0:         		info.setMarshalledProperties(new org.apache.activemq.util.ByteSequence(data,0,data.length));
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:f451ad0
/////////////////////////////////////////////////////////////////////////
0:         		info.setContent(new org.apache.activeio.packet.ByteSequence(data,0,data.length));
0:         		info.setMarshalledProperties(new org.apache.activeio.packet.ByteSequence(data,0,data.length));
commit:6583ef1
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:4842547
/////////////////////////////////////////////////////////////////////////
1: import java.io.DataOutputStream;
0: import java.io.OutputStream;
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import org.apache.activemq.util.ByteArrayOutputStream;
1: import org.apache.activemq.util.MarshallingSupport;
/////////////////////////////////////////////////////////////////////////
1:             ByteArrayOutputStream baos = new ByteArrayOutputStream();
1:             DataOutputStream dataOut = new DataOutputStream(baos);
1:             MarshallingSupport.writeUTF8(dataOut, "Content:11");
1:             dataOut.close();
1:             info.setContent(baos.toByteSequence());
1:         	Map map = new HashMap();
1:         	map.put("MarshalledProperties", 12);
1:             ByteArrayOutputStream baos = new ByteArrayOutputStream();
1:             DataOutputStream os = new DataOutputStream(baos);
1:             MarshallingSupport.marshalPrimitiveMap(map, os);
1:             os.close();
1:             info.setMarshalledProperties(baos.toByteSequence());
author:James Strachan
-------------------------------------------------------------------------------
commit:f3ef1a9
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
commit:15550b8
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:fd2fa9d
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
commit:8704338
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:2cd1437
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:5ece545
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
commit:6ce83ac
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:f680f3a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.openwire.v1;
1: 
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
0: import java.io.IOException;
1: 
0: import org.apache.activemq.openwire.*;
0: import org.apache.activemq.command.*;
1: 
1: 
1: /**
0:  * Test case for the OpenWire marshalling for Message
1:  *
1:  *
0:  * NOTE!: This file is auto generated - do not modify!
0:  *        if you need to make a change, please see the modify the groovy scripts in the
0:  *        under src/gram/script and then use maven openwire:generate to regenerate 
0:  *        this file.
1:  *
0:  * @version $Revision$
1:  */
1: public abstract class MessageTestSupport extends BaseCommandTestSupport {
1: 
1:     
1:     protected void populateObject(Object object) throws Exception {
0:     		super.populateObject(object);
0:     		Message info = (Message) object;
1:         info.setProducerId(createProducerId("ProducerId:1"));
1:         info.setDestination(createActiveMQDestination("Destination:2"));
1:         info.setTransactionId(createTransactionId("TransactionId:3"));
1:         info.setOriginalDestination(createActiveMQDestination("OriginalDestination:4"));
1:         info.setMessageId(createMessageId("MessageId:5"));
1:         info.setOriginalTransactionId(createTransactionId("OriginalTransactionId:6"));
1:         info.setGroupID("GroupID:7");
1:         info.setGroupSequence(1);
1:         info.setCorrelationId("CorrelationId:8");
1:         info.setPersistent(true);
1:         info.setExpiration(1);
0:         info.setPriority((byte) 1);
1:         info.setReplyTo(createActiveMQDestination("ReplyTo:9"));
1:         info.setTimestamp(2);
1:         info.setType("Type:10");
1:         
0:     		{
0:         		byte data[] = "Content:11".getBytes();
0:         		info.setContent(new org.activeio.ByteSequence(data,0,data.length));
1:     		}
1:     		
1:         
0:     		{
0:         		byte data[] = "MarshalledProperties:12".getBytes();
0:         		info.setMarshalledProperties(new org.activeio.ByteSequence(data,0,data.length));
1:     		}
1:     		
1:         info.setDataStructure(createDataStructure("DataStructure:13"));
1:         info.setTargetConsumerId(createConsumerId("TargetConsumerId:14"));
1:         info.setCompressed(false);
1:         info.setRedeliveryCounter(2);
1:         
0:     		    {
0: 	            BrokerId value[] = new BrokerId[2];
0: 	            for( int i=0; i < 2; i++ ) {
0: 	                value[i] = createBrokerId("BrokerPath:15");
1: 	            }
0: 	            info.setBrokerPath(value);
1:             }
1:         info.setArrival(3);
1:         info.setUserID("UserID:16");
1:         info.setRecievedByDFBridge(true);
1: 
1:             }
1:         }
============================================================================