1:456a2ba: /**
1:456a2ba:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:456a2ba:  * contributor license agreements.  See the NOTICE file distributed with
1:456a2ba:  * this work for additional information regarding copyright ownership.
1:456a2ba:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:456a2ba:  * (the "License"); you may not use this file except in compliance with
1:456a2ba:  * the License.  You may obtain a copy of the License at
1:456a2ba:  *
1:456a2ba:  *      http://www.apache.org/licenses/LICENSE-2.0
1:456a2ba:  *
1:456a2ba:  * Unless required by applicable law or agreed to in writing, software
1:456a2ba:  * distributed under the License is distributed on an "AS IS" BASIS,
1:456a2ba:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:456a2ba:  * See the License for the specific language governing permissions and
1:456a2ba:  * limitations under the License.
1:456a2ba:  */
1:1aab71b: package org.apache.activemq.store.kahadb.disk.util;
1:456a2ba: 
1:456a2ba: import java.util.HashMap;
1:456a2ba: import java.util.Timer;
1:456a2ba: import java.util.TimerTask;
1:456a2ba: 
1:456a2ba: /**
1:0bbc0ac:  *
1:456a2ba:  */
1:456a2ba: public final class Scheduler {
1:456a2ba: 
1:456a2ba: 
1:456a2ba: 
1:ca90cc7:     public static final Timer CLOCK_DAEMON = new Timer("KahaDB Scheduler", true);
1:456a2ba:     private static final HashMap<Runnable, TimerTask> TIMER_TASKS = new HashMap<Runnable, TimerTask>();
1:456a2ba: 
1:456a2ba:     private Scheduler() {
1:456a2ba:     }
1:456a2ba: 
1:456a2ba:     public static synchronized void executePeriodically(final Runnable task, long period) {
1:456a2ba:         TimerTask timerTask = new SchedulerTimerTask(task);
1:ca90cc7:         CLOCK_DAEMON.schedule(timerTask, period, period);
1:456a2ba:         TIMER_TASKS.put(task, timerTask);
1:456a2ba:     }
1:456a2ba: 
1:456a2ba:     public static synchronized void cancel(Runnable task) {
1:456a2ba:         TimerTask ticket = TIMER_TASKS.remove(task);
1:456a2ba:         if (ticket != null) {
1:456a2ba:             ticket.cancel();
1:456a2ba:             CLOCK_DAEMON.purge();//remove cancelled TimerTasks
1:456a2ba:         }
1:456a2ba:     }
1:456a2ba: 
1:456a2ba:     public static void executeAfterDelay(final Runnable task, long redeliveryDelay) {
1:456a2ba:         TimerTask timerTask = new SchedulerTimerTask(task);
1:456a2ba:         CLOCK_DAEMON.schedule(timerTask, redeliveryDelay);
1:456a2ba:     }
1:456a2ba: 
1:456a2ba:     public static void shutdown() {
1:456a2ba:         CLOCK_DAEMON.cancel();
1:456a2ba:     }
1:456a2ba: 
1:456a2ba: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:1aab71b
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.store.kahadb.disk.util;
commit:715010a
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:456a2ba
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
0: package org.apache.kahadb.util;
1: 
1: import java.util.HashMap;
1: import java.util.Timer;
1: import java.util.TimerTask;
1: 
1: /**
0:  * @version $Revision$
1:  */
1: public final class Scheduler {
1: 
1:     
1: 
0: 	public static final Timer CLOCK_DAEMON = new Timer("ActiveMQ Scheduler", true);
1:     private static final HashMap<Runnable, TimerTask> TIMER_TASKS = new HashMap<Runnable, TimerTask>();
1: 
1:     private Scheduler() {
1:     }
1: 
1:     public static synchronized void executePeriodically(final Runnable task, long period) {
1:     	TimerTask timerTask = new SchedulerTimerTask(task);
0:         CLOCK_DAEMON.scheduleAtFixedRate(timerTask, period, period);
1:         TIMER_TASKS.put(task, timerTask);
1:     }
1: 
1:     public static synchronized void cancel(Runnable task) {
1:     	TimerTask ticket = TIMER_TASKS.remove(task);
1:         if (ticket != null) {
1:             ticket.cancel();
1:             CLOCK_DAEMON.purge();//remove cancelled TimerTasks
1:         }
1:     }
1: 
1:     public static void executeAfterDelay(final Runnable task, long redeliveryDelay) {
1:     	TimerTask timerTask = new SchedulerTimerTask(task);
1:         CLOCK_DAEMON.schedule(timerTask, redeliveryDelay);
1:     }
1:     
1:     public static void shutdown() {
1:         CLOCK_DAEMON.cancel();
1:     }
1: 
1: }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ca90cc7
/////////////////////////////////////////////////////////////////////////
0:  *
0: 
1:     public static final Timer CLOCK_DAEMON = new Timer("KahaDB Scheduler", true);
0:         TimerTask timerTask = new SchedulerTimerTask(task);
1:         CLOCK_DAEMON.schedule(timerTask, period, period);
0:         TimerTask ticket = TIMER_TASKS.remove(task);
/////////////////////////////////////////////////////////////////////////
0:         TimerTask timerTask = new SchedulerTimerTask(task);
0: 
author:Robert Davies
-------------------------------------------------------------------------------
commit:54a00fe
/////////////////////////////////////////////////////////////////////////
0: 	public static final Timer CLOCK_DAEMON = new Timer("KahaDB Scheduler", true);
============================================================================