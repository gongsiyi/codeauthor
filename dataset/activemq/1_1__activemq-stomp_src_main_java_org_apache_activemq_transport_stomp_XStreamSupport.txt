1:a7e2a44: /**
1:a7e2a44:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a7e2a44:  * contributor license agreements.  See the NOTICE file distributed with
1:a7e2a44:  * this work for additional information regarding copyright ownership.
1:a7e2a44:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a7e2a44:  * (the "License"); you may not use this file except in compliance with
1:a7e2a44:  * the License.  You may obtain a copy of the License at
1:a7e2a44:  *
1:a7e2a44:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a7e2a44:  *
1:a7e2a44:  * Unless required by applicable law or agreed to in writing, software
1:a7e2a44:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a7e2a44:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a7e2a44:  * See the License for the specific language governing permissions and
1:a7e2a44:  * limitations under the License.
1:a7e2a44:  */
1:a7e2a44: package org.apache.activemq.transport.stomp;
1:a7e2a44: 
1:a7e2a44: import com.thoughtworks.xstream.XStream;
1:a7e2a44: import com.thoughtworks.xstream.security.AnyTypePermission;
1:a7e2a44: import com.thoughtworks.xstream.security.NoTypePermission;
1:a7e2a44: import com.thoughtworks.xstream.security.PrimitiveTypePermission;
1:a7e2a44: import org.apache.activemq.util.ClassLoadingAwareObjectInputStream;
1:a7e2a44: 
1:a7e2a44: import java.util.Collection;
1:a7e2a44: import java.util.Map;
1:a7e2a44: 
1:a7e2a44: public class XStreamSupport {
1:a7e2a44: 
1:a7e2a44:     public static XStream createXStream() {
1:a7e2a44:         XStream stream = new XStream();
1:a7e2a44:         stream.addPermission(NoTypePermission.NONE);
1:a7e2a44:         stream.addPermission(PrimitiveTypePermission.PRIMITIVES);
1:a7e2a44:         stream.allowTypeHierarchy(Collection.class);
1:a7e2a44:         stream.allowTypeHierarchy(Map.class);
1:a7e2a44:         stream.allowTypes(new Class[]{String.class});
1:a7e2a44:         if (ClassLoadingAwareObjectInputStream.isAllAllowed()) {
1:a7e2a44:             stream.addPermission(AnyTypePermission.ANY);
1:a7e2a44:         } else {
1:e100638:             for (String packageName : ClassLoadingAwareObjectInputStream.serializablePackages) {
1:a7e2a44:                 stream.allowTypesByWildcard(new String[]{packageName + ".**"});
1:a7e2a44:             }
1:a7e2a44:         }
1:a7e2a44:         return stream;
1:a7e2a44:     }
1:a7e2a44: 
1:a7e2a44: }
============================================================================
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:e100638
/////////////////////////////////////////////////////////////////////////
1:             for (String packageName : ClassLoadingAwareObjectInputStream.serializablePackages) {
commit:a7e2a44
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.stomp;
1: 
1: import com.thoughtworks.xstream.XStream;
1: import com.thoughtworks.xstream.security.AnyTypePermission;
1: import com.thoughtworks.xstream.security.NoTypePermission;
1: import com.thoughtworks.xstream.security.PrimitiveTypePermission;
1: import org.apache.activemq.util.ClassLoadingAwareObjectInputStream;
1: 
1: import java.util.Collection;
1: import java.util.Map;
1: 
1: public class XStreamSupport {
1: 
1:     public static XStream createXStream() {
1:         XStream stream = new XStream();
1:         stream.addPermission(NoTypePermission.NONE);
1:         stream.addPermission(PrimitiveTypePermission.PRIMITIVES);
1:         stream.allowTypeHierarchy(Collection.class);
1:         stream.allowTypeHierarchy(Map.class);
1:         stream.allowTypes(new Class[]{String.class});
1:         if (ClassLoadingAwareObjectInputStream.isAllAllowed()) {
1:             stream.addPermission(AnyTypePermission.ANY);
1:         } else {
0:             for (String packageName : ClassLoadingAwareObjectInputStream.getSerialziablePackages()) {
1:                 stream.allowTypesByWildcard(new String[]{packageName + ".**"});
1:             }
1:         }
1:         return stream;
1:     }
1: 
1: }
============================================================================