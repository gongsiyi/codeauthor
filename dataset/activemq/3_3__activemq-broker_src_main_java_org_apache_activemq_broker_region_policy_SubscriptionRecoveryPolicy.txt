1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.broker.region.policy;
1:d29ca2a: 
1:2748ae1: 
1:d29ca2a: import org.apache.activemq.Service;
1:1a5ad28: import org.apache.activemq.broker.Broker;
1:d29ca2a: import org.apache.activemq.broker.ConnectionContext;
1:d29ca2a: import org.apache.activemq.broker.region.MessageReference;
1:a110604: import org.apache.activemq.broker.region.SubscriptionRecovery;
1:d29ca2a: import org.apache.activemq.broker.region.Topic;
1:2748ae1: import org.apache.activemq.command.ActiveMQDestination;
1:2748ae1: import org.apache.activemq.command.Message;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Abstraction to allow different recovery policies to be plugged
1:d29ca2a:  * into the region implementations.  This is used by a topic to retroactively recover
1:d29ca2a:  * messages that the subscription missed.
1:b0c2a40:  * 
1:d29ca2a:  * 
1:d29ca2a:  */
1:d29ca2a: public interface SubscriptionRecoveryPolicy extends Service {
1:d29ca2a:     
1:d29ca2a:     /**
1:d29ca2a:      * A message was sent to the destination.
1:d29ca2a:      * 
1:d29ca2a:      * @param context
1:e1bbde7:      * @param message
1:2748ae1:      * @return true if successful
1:7f5213b:      * @throws Exception
1:d29ca2a:      */
1:7f5213b:     boolean add(ConnectionContext context, MessageReference message) throws Exception;
1:d29ca2a:     
1:d29ca2a:     /**
1:d29ca2a:      * Let a subscription recover message held by the policy.
1:d29ca2a:      * 
1:d29ca2a:      * @param context
1:d29ca2a:      * @param topic
1:e1bbde7:      * @param sub
1:7f5213b:      * @throws Exception
1:d29ca2a:      */
1:a110604:     void recover(ConnectionContext context, Topic topic, SubscriptionRecovery sub) throws Exception;
1:d29ca2a:     
1:2748ae1:     
1:2748ae1:     /**
1:2748ae1:      * @param dest 
1:2748ae1:      * @return messages
1:7f5213b:      * @throws Exception 
1:2748ae1:      */
1:7f5213b:     Message[] browse(ActiveMQDestination dest) throws Exception;
1:2748ae1: 
1:c1a0cd6:     /**
1:c1a0cd6:      * Used to copy the policy object.
1:a110604:      * @return the copy
1:c1a0cd6:      */
1:c1a0cd6:     SubscriptionRecoveryPolicy copy();
1:1a5ad28:     
1:1a5ad28:     void setBroker(Broker broker);
1:d29ca2a: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:e1bbde7
/////////////////////////////////////////////////////////////////////////
1:      * @param message
/////////////////////////////////////////////////////////////////////////
1:      * @param sub
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:c1a0cd6
/////////////////////////////////////////////////////////////////////////
1:     /**
1:      * Used to copy the policy object.
1:      */
1:     SubscriptionRecoveryPolicy copy();
commit:7f5213b
/////////////////////////////////////////////////////////////////////////
1:      * @throws Exception
1:     boolean add(ConnectionContext context, MessageReference message) throws Exception;
/////////////////////////////////////////////////////////////////////////
1:      * @throws Exception
0:     void recover(ConnectionContext context, Topic topic, Subscription sub) throws Exception;
1:      * @throws Exception 
1:     Message[] browse(ActiveMQDestination dest) throws Exception;
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.policy;
1: 
1: import org.apache.activemq.Service;
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.broker.region.MessageReference;
0: import org.apache.activemq.broker.region.Subscription;
1: import org.apache.activemq.broker.region.Topic;
1: 
1: /**
1:  * Abstraction to allow different recovery policies to be plugged
1:  * into the region implementations.  This is used by a topic to retroactively recover
1:  * messages that the subscription missed.
1:  * 
0:  * @version $Revision$
1:  */
1: public interface SubscriptionRecoveryPolicy extends Service {
1:     
1:     /**
1:      * A message was sent to the destination.
1:      * 
1:      * @param context
0:      * @param node
0:      * @return TODO
0:      * @throws Throwable
1:      */
0:     boolean add(ConnectionContext context, MessageReference message) throws Throwable;
1:     
1:     /**
1:      * Let a subscription recover message held by the policy.
1:      * 
1:      * @param context
0:      * @param topic TODO
1:      * @param topic 
0:      * @param node
0:      * @throws Throwable
1:      */
0:     void recover(ConnectionContext context, Topic topic, Subscription sub) throws Throwable;
1: 
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:1a5ad28
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.Broker;
/////////////////////////////////////////////////////////////////////////
1:     
1:     void setBroker(Broker broker);
commit:a110604
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.region.SubscriptionRecovery;
/////////////////////////////////////////////////////////////////////////
1:     void recover(ConnectionContext context, Topic topic, SubscriptionRecovery sub) throws Exception;
/////////////////////////////////////////////////////////////////////////
1:      * @return the copy
commit:2748ae1
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.Message;
/////////////////////////////////////////////////////////////////////////
0:      * @param message 
1:      * @return true if successful
/////////////////////////////////////////////////////////////////////////
0:      * @param topic
0:      * @param sub 
1:     
1:     
1:     /**
1:      * @param dest 
1:      * @return messages
0:      * @throws Throwable 
1:      */
0:     Message[] browse(ActiveMQDestination dest) throws Throwable;
============================================================================