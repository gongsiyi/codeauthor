1:40a7d3b: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:40a7d3b:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:40a7d3b:  *
1:40a7d3b:  * Unless required by applicable law or agreed to in writing, software
1:40a7d3b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:40a7d3b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:40a7d3b:  * See the License for the specific language governing permissions and
1:40a7d3b:  * limitations under the License.
1:92a698f:  */
1:148f3bd: 
1:148f3bd: import java.util.Arrays;
1:148f3bd: import java.util.HashSet;
1:148f3bd: 
1:40a7d3b: import javax.jms.MessageListener;
1:148f3bd: 
1:40a7d3b: /**
1:40a7d3b:  * A simple tool for producing and consuming messages
1:b0c2a40:  * 
1:540dd5c:  * 
1:40a7d3b:  */
1:40a7d3b: public class ProducerAndConsumerTool extends ConsumerTool implements MessageListener {
1:148f3bd: 
1:40a7d3b:     public static void main(String[] args) {
1:148f3bd: 
1:540dd5c:         ConsumerTool consumerTool = new ConsumerTool();
1:540dd5c:         String[] unknown = CommandLineSupport.setOptions(consumerTool, args);
1:540dd5c:         HashSet<String> set1 = new HashSet<String>(Arrays.asList(unknown));
1:540dd5c: 
1:540dd5c:         ProducerTool producerTool = new ProducerTool();
1:540dd5c:         unknown = CommandLineSupport.setOptions(producerTool, args);
1:540dd5c:         HashSet<String> set2 = new HashSet<String>(Arrays.asList(unknown));
1:540dd5c: 
1:540dd5c:         set1.retainAll(set2);
1:540dd5c:         if (set1.size() > 0) {
1:540dd5c:             System.out.println("Unknown options: " + set1);
1:540dd5c:             System.exit(-1);
1:540dd5c:         }
1:540dd5c: 
1:540dd5c:         consumerTool.run();
1:540dd5c:         producerTool.run();
1:540dd5c: 
1:86cbdfd:     }
1:148f3bd: 
1:148f3bd: }
============================================================================
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:2ecf41d
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1:  * 
1:         ConsumerTool consumerTool = new ConsumerTool();
1:         String[] unknown = CommandLineSupport.setOptions(consumerTool, args);
1:         HashSet<String> set1 = new HashSet<String>(Arrays.asList(unknown));
1: 
1:         ProducerTool producerTool = new ProducerTool();
1:         unknown = CommandLineSupport.setOptions(producerTool, args);
1:         HashSet<String> set2 = new HashSet<String>(Arrays.asList(unknown));
1: 
1:         set1.retainAll(set2);
1:         if (set1.size() > 0) {
1:             System.out.println("Unknown options: " + set1);
1:             System.exit(-1);
1:         }
1: 
1:         consumerTool.run();
1:         producerTool.run();
1: 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:148f3bd
/////////////////////////////////////////////////////////////////////////
1: import java.util.Arrays;
1: import java.util.HashSet;
1: 
/////////////////////////////////////////////////////////////////////////
1:     	
0: 		ConsumerTool consumerTool = new ConsumerTool();
0: 		String[] unknonwn = CommnadLineSupport.setOptions(consumerTool, args);
0: 		HashSet set1 = new HashSet(Arrays.asList(unknonwn));
1:     	
0: 		ProducerTool producerTool = new ProducerTool();
0:     	unknonwn = CommnadLineSupport.setOptions(producerTool, args);
0: 		HashSet set2 = new HashSet(Arrays.asList(unknonwn));
1: 
0: 		set1.retainAll(set2);
0: 		if( set1.size() > 0 ) {
0:     		System.out.println("Unknown options: "+set1);
0: 			System.exit(-1);
1:     	}
1:     	
0: 		consumerTool.run();
0:     	producerTool.run();
1: 		
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:0ef421d
/////////////////////////////////////////////////////////////////////////
0: 	ConsumerTool consumerTool = new ConsumerTool();
0: 	String[] unknown = CommandLineSupport.setOptions(consumerTool, args);
0: 	HashSet set1 = new HashSet(Arrays.asList(unknown));
0: 	ProducerTool producerTool = new ProducerTool();
0:         unknown = CommandLineSupport.setOptions(producerTool, args);
0: 	HashSet set2 = new HashSet(Arrays.asList(unknown));
0: 	set1.retainAll(set2);
0: 	if( set1.size() > 0 ) {
0:     	    System.out.println("Unknown options: "+set1);
0: 	    System.exit(-1);
0: 	consumerTool.run();
author:Jonas B. Lim
-------------------------------------------------------------------------------
commit:92a698f
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2004 The Apache Software Foundation
/////////////////////////////////////////////////////////////////////////
1:  */
author:James Strachan
-------------------------------------------------------------------------------
commit:40a7d3b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 Protique Ltd
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  *
0:  **/
0: 
0: import javax.jms.Connection;
0: import javax.jms.JMSException;
0: import javax.jms.Message;
0: import javax.jms.MessageConsumer;
1: import javax.jms.MessageListener;
0: import javax.jms.Session;
0: import javax.jms.TextMessage;
0: import javax.jms.Topic;
0: import java.io.IOException;
0: 
1: /**
1:  * A simple tool for producing and consuming messages
1:  *
0:  * @version $Revision: 1.1.1.1 $
1:  */
1: public class ProducerAndConsumerTool extends ConsumerTool implements MessageListener {
0: 
1:     public static void main(String[] args) {
0:         ProducerAndConsumerTool tool = new ProducerAndConsumerTool();
0:         if (args.length > 0) {
0:             tool.url = args[0];
0:         }
0:         else {
0:             tool.url = "vm://localhost";
0:         }
0:         if (args.length > 1) {
0:             tool.topic = args[1].equalsIgnoreCase("true");
0:         }
0:         if (args.length > 2) {
0:             tool.subject = args[2];
0:         }
0:         if (args.length > 3) {
0:             tool.durable = args[3].equalsIgnoreCase("true");
0:         }
0:         if (args.length > 4) {
0:             tool.maxiumMessages = Integer.parseInt(args[4]);
0:         }
0:         if (args.length > 5) {
0:             tool.clientID = args[5];
0:         }
0:         tool.run();
0:     }
0: 
0:     public void run() {
0:         super.run();
0: 
0:         // now lets publish some messages
0:         ProducerTool tool = new ProducerTool();
0:         tool.url = this.url;
0:         tool.topic = this.topic;
0:         tool.subject = this.subject;
0:         tool.durable = this.durable;
0:         tool.clientID = this.clientID;
0: 
0:         tool.run();
0:     }
0: 
0: 
0: }
============================================================================