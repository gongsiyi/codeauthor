1:3582300: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:3582300:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:3582300:  *
1:3582300:  * Unless required by applicable law or agreed to in writing, software
1:3582300:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3582300:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3582300:  * See the License for the specific language governing permissions and
1:3582300:  * limitations under the License.
1:3582300:  */
1:3582300: package org.apache.activemq.advisory;
1:3582300: 
1:74a7a8b: import java.util.EventObject;
1:3582300: 
1:3582300: import javax.jms.Destination;
1:3582300: 
1:74a7a8b: import org.apache.activemq.command.ProducerId;
1:3582300: 
1:3582300: /**
1:3582300:  * An event when the number of producers on a given destination changes.
1:0bbc0ac:  * 
1:3582300:  * 
1:3582300:  */
1:3582300: public abstract class ProducerEvent extends EventObject {
1:3582300:     private static final long serialVersionUID = 2442156576867593780L;
1:3582300:     private final Destination destination;
1:3582300:     private final ProducerId producerId;
1:3582300:     private final int producerCount;
1:3582300: 
1:3582300:     public ProducerEvent(ProducerEventSource source, Destination destination, ProducerId producerId, int producerCount) {
1:3582300:         super(source);
1:3582300:         this.destination = destination;
1:3582300:         this.producerId = producerId;
1:3582300:         this.producerCount = producerCount;
1:3582300:     }
1:3582300: 
1:3582300:     public ProducerEventSource getAdvisor() {
1:3582300:         return (ProducerEventSource) getSource();
1:3582300:     }
1:3582300: 
1:3582300:     public Destination getDestination() {
1:3582300:         return destination;
1:3582300:     }
1:3582300: 
1:3582300:     /**
1:3582300:      * Returns the current number of producers active at the time this advisory was sent.
1:3582300:      * 
1:3582300:      */
1:3582300:     public int getProducerCount() {
1:3582300:         return producerCount;
1:3582300:     }
1:3582300: 
1:3582300:     public ProducerId getProducerId() {
1:3582300:         return producerId;
1:3582300:     }
1:3582300: 
1:3582300:     public abstract boolean isStarted();
1:3582300: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import java.util.EventObject;
1: import org.apache.activemq.command.ProducerId;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Robert Davies
-------------------------------------------------------------------------------
commit:3582300
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.advisory;
1: 
0: import org.apache.activemq.command.ProducerId;
1: 
1: import javax.jms.Destination;
1: 
0: import java.util.EventObject;
1: 
1: /**
1:  * An event when the number of producers on a given destination changes.
1:  * 
0:  * @version $Revision: 359679 $
1:  */
1: public abstract class ProducerEvent extends EventObject {
1:     private static final long serialVersionUID = 2442156576867593780L;
1:     private final Destination destination;
1:     private final ProducerId producerId;
1:     private final int producerCount;
1: 
1:     public ProducerEvent(ProducerEventSource source, Destination destination, ProducerId producerId, int producerCount) {
1:         super(source);
1:         this.destination = destination;
1:         this.producerId = producerId;
1:         this.producerCount = producerCount;
1:     }
1: 
1:     public ProducerEventSource getAdvisor() {
1:         return (ProducerEventSource) getSource();
1:     }
1: 
1:     public Destination getDestination() {
1:         return destination;
1:     }
1: 
1:     /**
1:      * Returns the current number of producers active at the time this advisory was sent.
1:      * 
1:      */
1:     public int getProducerCount() {
1:         return producerCount;
1:     }
1: 
1:     public ProducerId getProducerId() {
1:         return producerId;
1:     }
1: 
1:     public abstract boolean isStarted();
1: }
============================================================================