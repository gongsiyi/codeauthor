1:a677c21: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a677c21:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a677c21:  *
1:a677c21:  * Unless required by applicable law or agreed to in writing, software
1:a677c21:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a677c21:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a677c21:  * See the License for the specific language governing permissions and
1:a677c21:  * limitations under the License.
1:a677c21:  */
1:a677c21: package org.apache.activemq.usecases;
1:a677c21: 
1:2a87ad5: import org.apache.activemq.broker.BrokerService;
1:2a87ad5: import org.apache.activemq.network.DemandForwardingBridgeSupport;
1:2a87ad5: import org.apache.activemq.util.Wait;
1:2a87ad5: import org.slf4j.Logger;
1:2a87ad5: import org.slf4j.LoggerFactory;
1:a677c21: 
1:a677c21: /**
1:b0c2a40:  * 
1:a677c21:  */
1:a677c21: public class TwoBrokerQueueSendReceiveTest  extends TwoBrokerTopicSendReceiveTest {
1:a677c21: 
1:2a87ad5:     private static final Logger LOG = LoggerFactory.getLogger(TwoBrokerQueueSendReceiveTest.class);
1:a677c21: 
1:a677c21:     protected void setUp() throws Exception {
1:a677c21:         topic = false;
1:a677c21:         super.setUp();
1:a677c21:     }
1:a677c21: 
1:2a87ad5:     public void testReceiveOnXConsumersNoLeak() throws Exception {
1:2a87ad5:         consumer.close();
1:2a87ad5:         sendMessages();
1:2a87ad5:         for (int i=0; i<data.length; i++) {
1:2a87ad5:             consumer = createConsumer();
1:2a87ad5:             onMessage(consumer.receive(10000));
1:2a87ad5:             consumer.close();
1:2a87ad5:         }
1:9f0a673:         waitForMessagesToBeDelivered();
1:9f0a673:         assertEquals("Got all messages", data.length, messages.size());
1:2a87ad5: 
1:2a87ad5:         BrokerService broker = (BrokerService) brokers.get("receiver");
1:2a87ad5:         final DemandForwardingBridgeSupport bridge = (DemandForwardingBridgeSupport) broker.getNetworkConnectors().get(0).activeBridges().toArray()[0];
1:2a87ad5:         assertTrue("No extra, size:" + bridge.getLocalSubscriptionMap().size(), Wait.waitFor(new Wait.Condition() {
1:2a87ad5:             @Override
1:2a87ad5:             public boolean isSatisified() throws Exception {
1:2a87ad5:                 LOG.info("local subs map size = " + bridge.getLocalSubscriptionMap().size());
1:c57ac81:                 return 0 == bridge.getLocalSubscriptionMap().size();
1:2a87ad5:             }
1:2a87ad5:         }));
1:2a87ad5: 
1:2a87ad5:     }
1:a677c21:     
1:a677c21: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:c57ac81
/////////////////////////////////////////////////////////////////////////
1:                 return 0 == bridge.getLocalSubscriptionMap().size();
commit:9f0a673
/////////////////////////////////////////////////////////////////////////
1:         waitForMessagesToBeDelivered();
1:         assertEquals("Got all messages", data.length, messages.size());
commit:2a87ad5
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.network.DemandForwardingBridgeSupport;
1: import org.apache.activemq.util.Wait;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1:     private static final Logger LOG = LoggerFactory.getLogger(TwoBrokerQueueSendReceiveTest.class);
1:     public void testReceiveOnXConsumersNoLeak() throws Exception {
1:         consumer.close();
1:         sendMessages();
1:         for (int i=0; i<data.length; i++) {
1:             consumer = createConsumer();
1:             onMessage(consumer.receive(10000));
1:             consumer.close();
1:         }
0:         this.assertMessagesAreReceived();
1: 
1:         BrokerService broker = (BrokerService) brokers.get("receiver");
1:         final DemandForwardingBridgeSupport bridge = (DemandForwardingBridgeSupport) broker.getNetworkConnectors().get(0).activeBridges().toArray()[0];
1:         assertTrue("No extra, size:" + bridge.getLocalSubscriptionMap().size(), Wait.waitFor(new Wait.Condition() {
1:             @Override
1:             public boolean isSatisified() throws Exception {
1:                 LOG.info("local subs map size = " + bridge.getLocalSubscriptionMap().size());
0:                 return 1 == bridge.getLocalSubscriptionMap().size();
1:             }
1:         }));
1: 
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:a677c21
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usecases;
1: 
0: import org.apache.activemq.ActiveMQConnectionFactory;
1: 
1: /**
0:  * @version $Revision: 1.1.1.1 $
1:  */
1: public class TwoBrokerQueueSendReceiveTest  extends TwoBrokerTopicSendReceiveTest {
1: 
0:     protected ActiveMQConnectionFactory sendFactory;
0:     protected ActiveMQConnectionFactory receiveFactory;
1: 
1:     protected void setUp() throws Exception {
1:         topic = false;
1:         super.setUp();
1:     }
1: 
1:     
1: }
============================================================================