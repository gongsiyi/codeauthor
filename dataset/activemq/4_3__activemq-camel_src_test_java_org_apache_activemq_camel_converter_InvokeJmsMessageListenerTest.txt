1:bcbaeeb: /**
1:bcbaeeb:  *
1:bcbaeeb:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:bcbaeeb:  * contributor license agreements.  See the NOTICE file distributed with
1:bcbaeeb:  * this work for additional information regarding copyright ownership.
1:bcbaeeb:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:bcbaeeb:  * (the "License"); you may not use this file except in compliance with
1:bcbaeeb:  * the License.  You may obtain a copy of the License at
1:bcbaeeb:  *
1:bcbaeeb:  * http://www.apache.org/licenses/LICENSE-2.0
1:bcbaeeb:  *
1:bcbaeeb:  * Unless required by applicable law or agreed to in writing, software
1:bcbaeeb:  * distributed under the License is distributed on an "AS IS" BASIS,
1:bcbaeeb:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:bcbaeeb:  * See the License for the specific language governing permissions and
1:bcbaeeb:  * limitations under the License.
1:bcbaeeb:  */
1:bcbaeeb: package org.apache.activemq.camel.converter;
1:bcbaeeb: 
1:bcbaeeb: import javax.jms.MessageListener;
1:bcbaeeb: import javax.jms.Message;
1:bcbaeeb: import javax.jms.TextMessage;
1:bcbaeeb: 
1:bcbaeeb: import org.apache.camel.builder.RouteBuilder;
1:5e6f8a1: import org.apache.camel.test.junit4.CamelTestSupport;
1:5e6f8a1: import org.junit.Test;
1:bcbaeeb: 
1:bcbaeeb: /**
1:b0c2a40:  * 
1:bcbaeeb:  */
1:5e6f8a1: public class InvokeJmsMessageListenerTest extends CamelTestSupport {
1:bcbaeeb:     protected MyMessageListener messageListener = new MyMessageListener();
1:bcbaeeb:     private String expectedBody = "<hello>world!</hello>";
1:bcbaeeb: 
1:5e6f8a1:     @Test
1:bcbaeeb:     public void testCamelInvokesMessageListener() throws Exception {
1:bcbaeeb:         template.sendBody("direct:start", expectedBody);
1:bcbaeeb: 
1:bcbaeeb:         Message message = messageListener.message;
1:bcbaeeb:         assertNotNull("Should have invoked the message listener!", message);
1:bcbaeeb:         TextMessage textMessage = assertIsInstanceOf(TextMessage.class, message);
1:bcbaeeb:         assertEquals("body", expectedBody, textMessage.getText());
1:bcbaeeb:     }
1:bcbaeeb: 
1:bcbaeeb:     @Override
1:bcbaeeb:     protected RouteBuilder createRouteBuilder() throws Exception {
1:bcbaeeb:         return new RouteBuilder() {
1:bcbaeeb:             public void configure() throws Exception {
1:bcbaeeb:                 from("direct:start").bean(messageListener);
1:bcbaeeb:             }
1:bcbaeeb:         };
1:bcbaeeb:     }
1:bcbaeeb: 
1:bcbaeeb:     protected static class MyMessageListener implements MessageListener {
1:bcbaeeb:         public Message message;
1:bcbaeeb: 
1:bcbaeeb:         public void onMessage(Message message) {
1:bcbaeeb:             this.message = message;
1:bcbaeeb:         }
1:bcbaeeb:     }
1:bcbaeeb: }
============================================================================
author:Willem Ning Jiang
-------------------------------------------------------------------------------
commit:5e6f8a1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.camel.test.junit4.CamelTestSupport;
1: import org.junit.Test;
1: public class InvokeJmsMessageListenerTest extends CamelTestSupport {
1:     @Test
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:702e2a0
author:James Strachan
-------------------------------------------------------------------------------
commit:bcbaeeb
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.camel.converter;
1: 
1: import javax.jms.MessageListener;
1: import javax.jms.Message;
1: import javax.jms.TextMessage;
1: 
0: import org.apache.camel.ContextTestSupport;
1: import org.apache.camel.builder.RouteBuilder;
1: 
1: /**
0:  * @version $Revision: 1.1 $
1:  */
0: public class InvokeJmsMessageListenerTest extends ContextTestSupport {
1:     protected MyMessageListener messageListener = new MyMessageListener();
1:     private String expectedBody = "<hello>world!</hello>";
1: 
1:     public void testCamelInvokesMessageListener() throws Exception {
1:         template.sendBody("direct:start", expectedBody);
1: 
1:         Message message = messageListener.message;
1:         assertNotNull("Should have invoked the message listener!", message);
1:         TextMessage textMessage = assertIsInstanceOf(TextMessage.class, message);
1:         assertEquals("body", expectedBody, textMessage.getText());
1:     }
1: 
1:     @Override
1:     protected RouteBuilder createRouteBuilder() throws Exception {
1:         return new RouteBuilder() {
1:             public void configure() throws Exception {
1:                 from("direct:start").bean(messageListener);
1:             }
1:         };
1:     }
1: 
1:     protected static class MyMessageListener implements MessageListener {
1:         public Message message;
1: 
1:         public void onMessage(Message message) {
1:             this.message = message;
1:         }
1:     }
1: }
============================================================================