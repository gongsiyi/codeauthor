1:7c63788: /**
1:7c63788:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7c63788:  * contributor license agreements.  See the NOTICE file distributed with
1:7c63788:  * this work for additional information regarding copyright ownership.
1:7c63788:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7c63788:  * (the "License"); you may not use this file except in compliance with
1:7c63788:  * the License.  You may obtain a copy of the License at
2:7c63788:  *
1:7c63788:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7c63788:  *
1:7c63788:  * Unless required by applicable law or agreed to in writing, software
1:7c63788:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7c63788:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7c63788:  * See the License for the specific language governing permissions and
1:7c63788:  * limitations under the License.
1:7c63788:  */
1:7c63788: package org.apache.activemq.partition.dto;
1:7c63788: 
1:4da588d: import com.fasterxml.jackson.annotation.JsonProperty;
1:7c63788: 
1:7c63788: import java.io.IOException;
1:7c63788: import java.util.Collection;
1:7c63788: import java.util.HashSet;
1:7c63788: 
1:7c63788: /**
1:7c63788:  * Represents a partition target.  This identifies the brokers that
1:7c63788:  * a partition lives on.
1:7c63788:  */
1:7c63788: public class Target {
1:7c63788: 
1:7c63788:     @JsonProperty("ids")
1:7c63788:     public HashSet<String> ids = new HashSet<String>();
1:7c63788: 
1:7c63788:     public Target() {
1:7c63788:         ids = new HashSet<String>();
1:7c63788:     }
1:7c63788: 
1:7c63788:     public Target(String ...ids) {
1:bdb24ee:         this.ids.addAll(java.util.Arrays.asList(ids));
1:7c63788:     }
1:7c63788: 
1:7c63788:     @Override
1:7c63788:     public String toString() {
1:7c63788:         try {
1:7c63788:             return Partitioning.TO_STRING_MAPPER.writeValueAsString(this);
1:7c63788:         } catch (IOException e) {
1:7c63788:             return super.toString();
1:7c63788:         }
1:7c63788:     }
1:7c63788: 
1:7c63788:     public HashSet<String> getIds() {
1:7c63788:         return ids;
1:7c63788:     }
1:7c63788: 
1:7c63788:     public void setIds(Collection<String> ids) {
1:7c63788:         this.ids = new HashSet<String>(ids);
1:7c63788:     }
1:7c63788: 
1:7c63788: }
============================================================================
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:4da588d
/////////////////////////////////////////////////////////////////////////
1: import com.fasterxml.jackson.annotation.JsonProperty;
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:bdb24ee
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         this.ids.addAll(java.util.Arrays.asList(ids));
commit:21edf2b
/////////////////////////////////////////////////////////////////////////
commit:7c63788
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.partition.dto;
1: 
0: import org.codehaus.jackson.annotate.JsonProperty;
0: import scala.actors.threadpool.Arrays;
1: 
1: import java.io.IOException;
1: import java.util.Collection;
1: import java.util.HashSet;
1: 
1: /**
1:  * Represents a partition target.  This identifies the brokers that
1:  * a partition lives on.
1:  *
0:  * @org.apache.xbean.XBean element="target"
1:  */
1: public class Target {
1: 
1:     @JsonProperty("ids")
1:     public HashSet<String> ids = new HashSet<String>();
1: 
1:     public Target() {
1:         ids = new HashSet<String>();
1:     }
1: 
1:     public Target(String ...ids) {
0:         this.ids.addAll(Arrays.asList(ids));
1:     }
1: 
1:     @Override
1:     public String toString() {
1:         try {
1:             return Partitioning.TO_STRING_MAPPER.writeValueAsString(this);
1:         } catch (IOException e) {
1:             return super.toString();
1:         }
1:     }
1: 
1:     public HashSet<String> getIds() {
1:         return ids;
1:     }
1: 
1:     public void setIds(Collection<String> ids) {
1:         this.ids = new HashSet<String>(ids);
1:     }
1: 
1: }
============================================================================