17:d7355e7: /**
1:540dd5c:  *
1:aa87faa:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:aa87faa:  * contributor license agreements.  See the NOTICE file distributed with
1:aa87faa:  * this work for additional information regarding copyright ownership.
1:aa87faa:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:aa87faa:  * (the "License"); you may not use this file except in compliance with
1:aa87faa:  * the License.  You may obtain a copy of the License at
13:d7355e7:  *
1:aa87faa:  * http://www.apache.org/licenses/LICENSE-2.0
1:d7355e7:  *
1:aa87faa:  * Unless required by applicable law or agreed to in writing, software
1:aa87faa:  * distributed under the License is distributed on an "AS IS" BASIS,
1:aa87faa:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:aa87faa:  * See the License for the specific language governing permissions and
1:aa87faa:  * limitations under the License.
1:aa87faa:  */
1:d7355e7: package org.apache.activemq.ra;
7:d7355e7: 
1:d7355e7: import org.apache.activemq.RedeliveryPolicy;
1:540dd5c: 
1:aa87faa: import javax.resource.spi.ResourceAdapter;
1:aa87faa: import javax.resource.spi.ActivationSpec;
1:aa87faa: import java.util.List;
1:aa87faa: 
1:540dd5c: /**
1:b0c2a40:  * 
17:d7355e7:  */
1:540dd5c: public interface MessageActivationSpec extends ActivationSpec {
1:aa87faa:     boolean isValidUseRAManagedTransaction(List<String> errorMessages);
1:540dd5c: 
1:aa87faa:     boolean isValidNoLocal(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidMessageSelector(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidMaxSessions(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidMaxMessagesPerSessions(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidMaxMessagesPerBatch(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidEnableBatch(List<String> errorMessages);
1:aa87faa: 
1:d7355e7:     /**
1:aa87faa:      * @see javax.resource.spi.ResourceAdapterAssociation#getResourceAdapter()
1:d7355e7:      */
1:aa87faa:     ResourceAdapter getResourceAdapter();
1:d7355e7: 
1:d7355e7:     /**
1:aa87faa:      * @return Returns the destinationType.
1:d7355e7:      */
1:540dd5c:     String getDestinationType();
1:d7355e7: 
1:d7355e7:     String getPassword();
1:d7355e7: 
1:d7355e7:     String getUserName();
1:d7355e7: 
1:d7355e7:     /**
1:aa87faa:      * @return Returns the messageSelector.
1:540dd5c:      */
1:d7355e7:     String getMessageSelector();
1:d7355e7: 
1:d7355e7:     /**
1:aa87faa:      * @return Returns the noLocal.
1:d7355e7:      */
1:aa87faa:     String getNoLocal();
1:d7355e7: 
1:aa87faa:     String getAcknowledgeMode();
1:d7355e7: 
1:aa87faa:     String getClientId();
1:d7355e7: 
1:540dd5c:     String getDestination();
1:d7355e7: 
1:aa87faa:     String getSubscriptionDurability();
1:d7355e7: 
1:540dd5c:     String getSubscriptionName();
1:aa87faa: 
1:aa87faa:     boolean isValidSubscriptionName(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidClientId(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isDurableSubscription();
1:aa87faa: 
1:aa87faa:     boolean isValidSubscriptionDurability(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidAcknowledgeMode(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidDestinationType(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isValidDestination(List<String> errorMessages);
1:aa87faa: 
1:aa87faa:     boolean isEmpty(String value);
1:aa87faa: 
1:d7355e7:     int getAcknowledgeModeForSession();
1:d7355e7: 
1:d7355e7:     String getMaxMessagesPerSessions();
1:d7355e7: 
1:aa87faa:     String getMaxSessions();
1:aa87faa: 
1:aa87faa:     String getUseRAManagedTransaction();
1:aa87faa: 
1:aa87faa:     int getMaxMessagesPerSessionsIntValue();
1:aa87faa: 
1:540dd5c:     int getMaxSessionsIntValue();
1:aa87faa: 
1:d7355e7:     boolean isUseRAManagedTransactionEnabled();
1:d7355e7: 
1:aa87faa:     boolean getNoLocalBooleanValue();
1:aa87faa: 
1:d7355e7:     String getEnableBatch();
1:d7355e7: 
1:d7355e7:     boolean getEnableBatchBooleanValue();
1:d7355e7: 
1:d7355e7:     int getMaxMessagesPerBatchIntValue();
1:d7355e7: 
1:d7355e7:     String getMaxMessagesPerBatch();
1:aa87faa: 
1:9cc9873:     double getBackOffMultiplier();
1:8fba621:     
1:8fba621:     long getMaximumRedeliveryDelay();
1:aa87faa: 
1:aa87faa:     long getInitialRedeliveryDelay();
1:aa87faa: 
1:aa87faa:     int getMaximumRedeliveries();
1:aa87faa: 
1:aa87faa:     boolean isUseExponentialBackOff();
1:aa87faa: 
1:aa87faa:     RedeliveryPolicy redeliveryPolicy();
1:aa87faa: 
1:aa87faa:     RedeliveryPolicy lazyCreateRedeliveryPolicy();
1:7bc7178: 
1:7bc7178:     boolean isUseJndi();
1:7bc7178: 
1:9becfc0:     String getTrustStore();
1:9becfc0: 
1:9becfc0:     String getTrustStorePassword();
1:9becfc0: 
1:9becfc0:     String getKeyStore();
1:9becfc0: 
1:9becfc0:     String getKeyStorePassword();
1:9becfc0: 
1:9becfc0:     String getKeyStoreKeyPassword();
1:9becfc0: 
1:d7355e7: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Andy Taylor
-------------------------------------------------------------------------------
commit:9becfc0
/////////////////////////////////////////////////////////////////////////
1:     String getTrustStore();
1: 
1:     String getTrustStorePassword();
1: 
1:     String getKeyStore();
1: 
1:     String getKeyStorePassword();
1: 
1:     String getKeyStoreKeyPassword();
1: 
author:Christian Posta
-------------------------------------------------------------------------------
commit:7bc7178
/////////////////////////////////////////////////////////////////////////
1: 
1:     boolean isUseJndi();
1: 
author:Gary Tully
-------------------------------------------------------------------------------
commit:8fba621
/////////////////////////////////////////////////////////////////////////
1:     
1:     long getMaximumRedeliveryDelay();
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: public interface MessageActivationSpec extends ActivationSpec {
1: 
/////////////////////////////////////////////////////////////////////////
1:     String getSubscriptionName();
/////////////////////////////////////////////////////////////////////////
1:     String getDestinationType();
1:     String getDestination();
1:      */
1:     int getMaxSessionsIntValue();
1: 
1:     /**
1:      *
author:Robert Davies
-------------------------------------------------------------------------------
commit:9cc9873
/////////////////////////////////////////////////////////////////////////
1:     double getBackOffMultiplier();
author:James Strachan
-------------------------------------------------------------------------------
commit:aa87faa
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: import javax.resource.spi.ResourceAdapter;
1: import javax.resource.spi.ActivationSpec;
1: import java.util.List;
1: 
0:  * @version $Revision: 1.1 $
1:     boolean isValidUseRAManagedTransaction(List<String> errorMessages);
1: 
1:     boolean isValidNoLocal(List<String> errorMessages);
1: 
1:     boolean isValidMessageSelector(List<String> errorMessages);
1: 
1:     boolean isValidMaxSessions(List<String> errorMessages);
1: 
1:     boolean isValidMaxMessagesPerSessions(List<String> errorMessages);
1: 
1:     boolean isValidMaxMessagesPerBatch(List<String> errorMessages);
1: 
1:     boolean isValidEnableBatch(List<String> errorMessages);
1:      * @see javax.resource.spi.ResourceAdapterAssociation#getResourceAdapter()
1:     ResourceAdapter getResourceAdapter();
1:      * @return Returns the destinationType.
0:     String getDestinationType();
1:      * @return Returns the messageSelector.
1:      * @return Returns the noLocal.
1:     String getNoLocal();
1:     String getAcknowledgeMode();
1:     String getClientId();
1:     String getSubscriptionDurability();
0:     String getSubscriptionName();
1: 
1:     boolean isValidSubscriptionName(List<String> errorMessages);
1: 
1:     boolean isValidClientId(List<String> errorMessages);
1: 
1:     boolean isDurableSubscription();
1: 
1:     boolean isValidSubscriptionDurability(List<String> errorMessages);
1: 
1:     boolean isValidAcknowledgeMode(List<String> errorMessages);
1: 
1:     boolean isValidDestinationType(List<String> errorMessages);
1: 
1:     boolean isValidDestination(List<String> errorMessages);
1: 
1:     boolean isEmpty(String value);
1: 
1:     String getMaxSessions();
1: 
1:     String getUseRAManagedTransaction();
1: 
1:     int getMaxMessagesPerSessionsIntValue();
1: 
0:     int getMaxSessionsIntValue();
1: 
1:     boolean getNoLocalBooleanValue();
1: 
1: 
0:     short getBackOffMultiplier();
1: 
1:     long getInitialRedeliveryDelay();
1: 
1:     int getMaximumRedeliveries();
1: 
1:     boolean isUseExponentialBackOff();
1: 
1:     RedeliveryPolicy redeliveryPolicy();
1: 
1:     RedeliveryPolicy lazyCreateRedeliveryPolicy();
commit:d7355e7
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * $Header$
1:  *
0:  * Broker Office ESPECIAL (Release) - org.apache.activemq.ra
1:  *
0:  * Copyright (C) 2005-2007 Norvax, Inc.
0:  * All Rights Reserved
1:  *
0:  * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Norvax, Inc.; the contents
0:  * of this file may not be disclosed to third parties, copied or duplicated
0:  * in any form, in whole or in part, without the prior written permission of
0:  * Norvax, Inc. The copyright notice above does not evidence any actual or
0:  * intended publication of such source code.
1:  * 
0:  * Permission is hereby granted solely to the licensee for use of this source
0:  * code in its unaltered state. This source code may not be modified by
0:  * licensee except under direction of Norvax, Inc. Neither may this source
0:  * code be given under any circumstances to non-licensees in any form,
0:  * including source or binary. Modification of this source constitutes breach
0:  * of contract, which voids any potential pending support responsibilities by
0:  * Norvax, Inc. Divulging the exact or paraphrased contents of this source
0:  * code to unlicensed parties either directly or indirectly constitutes
0:  * violation of federal and international copyright and trade secret laws, and
0:  * will be duly prosecuted to the fullest extent permitted under law.
1:  * 
0:  * This software is provided by Norvax, Inc. ``as is'' and any express or
0:  * implied warranties, including, but not limited to, the implied warranties
0:  * of merchantability and fitness for a particular purpose are disclaimed. In
0:  * no event shall the regents or contributors be liable for any direct,
0:  * indirect, incidental, special, exemplary, or consequential damages
0:  * (including, but not limited to, procurement of substitute goods or
0:  * services; loss of use, data, or profits; or business interruption) however
0:  * caused and on any theory of liability, whether in contract, strict
0:  * liability, or tort (including negligence or otherwise) arising in any way
0:  * out of the use of this software, even if advised of the possibility of such
0:  * damage.
1:  * 
0:  **/
1: 
1: package org.apache.activemq.ra;
1: 
0: import javax.resource.spi.ActivationSpec;
1: 
1: import org.apache.activemq.RedeliveryPolicy;
1: 
1: /**
0:  * Description: Description goes here.
1:  * 
0:  * @author <a href="mailto:cstach@norvax.com">Christopher G. Stach II</a>
0:  * @version $Revision$ $Date$
0:  * @since 0.1
1:  */
0: public interface MessageActivationSpec
0:         extends ActivationSpec
0: {
1: 
1:     /**
1:      */
0:     String getClientId();
1:     
1:     /**
1:      */
0:     boolean isDurableSubscription();
1: 
1:     /**
1:      */
1:     String getPassword();
1: 
1:     /**
1:      */
1:     String getUserName();
1: 
1:     /**
1:      */
0:     RedeliveryPolicy redeliveryPolicy();
1: 
1:     /**
1:      */
0:     String getSubscriptionName(); 
1: 
1:     /**
1:      */
1:     String getMessageSelector();
1: 
1:     /**
1:      */
0:     int getMaxMessagesPerSessionsIntValue();
1: 
1:     /**
1:      */
0:     boolean getNoLocalBooleanValue();
1: 
1:     /**
1:      */
0: 	String getDestinationType();
1: 
1:     /**
1:      */
0: 	String getDestination();
1: 
1: 	/**
1: 	 */
0: 	int getMaxSessionsIntValue();
1: 
1:     /**
1:     *
1:      */
1:     int getAcknowledgeModeForSession();
1: 
1:     /**
1:      *
1:      */
1:     String getMaxMessagesPerSessions();
1: 
1:     /**
1:      *
1:      */
1:     boolean isUseRAManagedTransactionEnabled();
1: 
1:     /**
1:      *
1:      */
1:     String getEnableBatch();
1: 
1:     /**
1:      *
1:      */
1:     boolean getEnableBatchBooleanValue();
1: 
1:     /**
1:      *
1:      */
1:     int getMaxMessagesPerBatchIntValue();
1: 
1:     /**
1:      *
1:      */
1:     String getMaxMessagesPerBatch();
1: }
============================================================================