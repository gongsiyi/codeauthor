1:fc519e1: /**
1:fc519e1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:fc519e1:  * contributor license agreements.  See the NOTICE file distributed with
1:fc519e1:  * this work for additional information regarding copyright ownership.
1:fc519e1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:fc519e1:  * (the "License"); you may not use this file except in compliance with
1:fc519e1:  * the License.  You may obtain a copy of the License at
1:fc519e1:  *
1:fc519e1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:fc519e1:  *
1:fc519e1:  * Unless required by applicable law or agreed to in writing, software
1:fc519e1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:fc519e1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:fc519e1:  * See the License for the specific language governing permissions and
1:fc519e1:  * limitations under the License.
1:fc519e1:  */
1:7c9fec6: package org.apache.activemq.security;
1:7c9fec6: 
1:7c9fec6: import org.springframework.beans.factory.DisposableBean;
1:7c9fec6: import org.springframework.beans.factory.InitializingBean;
1:7c9fec6: 
1:7c9fec6: /**
1:7c9fec6:  * A {@link DefaultAuthorizationMap} implementation which uses LDAP to initialize and update authorization
1:7c9fec6:  * policy.
1:7c9fec6:  *
1:7c9fec6:  * @org.apache.xbean.XBean
1:7c9fec6:  *
1:7c9fec6:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:7c9fec6:  */
1:7c9fec6: public class CachedLDAPAuthorizationMap extends SimpleCachedLDAPAuthorizationMap implements InitializingBean, DisposableBean {
1:7c9fec6: 
1:7c9fec6:     @Override
1:7c9fec6:     public void afterPropertiesSet() throws Exception {
1:7c9fec6:         super.afterPropertiesSet();
1:7c9fec6:     }
1:7c9fec6: 
1:7c9fec6:     @Override
1:7c9fec6:     public void destroy() throws Exception {
1:7c9fec6:         super.destroy();
1:7c9fec6:     }
1:7c9fec6: 
1:7c9fec6: }
============================================================================
author:Gary Tully
-------------------------------------------------------------------------------
commit:fc519e1
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:7c9fec6
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.security;
1: 
1: import org.springframework.beans.factory.DisposableBean;
1: import org.springframework.beans.factory.InitializingBean;
1: 
1: /**
1:  * A {@link DefaultAuthorizationMap} implementation which uses LDAP to initialize and update authorization
1:  * policy.
1:  *
1:  * @org.apache.xbean.XBean
1:  *
1:  * @author <a href="http://hiramchirino.com">Hiram Chirino</a>
1:  */
1: public class CachedLDAPAuthorizationMap extends SimpleCachedLDAPAuthorizationMap implements InitializingBean, DisposableBean {
1: 
1:     @Override
1:     public void afterPropertiesSet() throws Exception {
1:         super.afterPropertiesSet();
1:     }
1: 
1:     @Override
1:     public void destroy() throws Exception {
1:         super.destroy();
1:     }
1: 
1: }
============================================================================