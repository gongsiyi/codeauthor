1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.management;
2:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * Statistics for a JCA connection pool
1:b0c2a40:  * 
1:230a86c:  * 
1:d29ca2a:  */
1:d29ca2a: public class JCAConnectionPoolStatsImpl extends JCAConnectionStatsImpl {
1:d29ca2a:     private CountStatisticImpl closeCount;
1:d29ca2a:     private CountStatisticImpl createCount;
1:d29ca2a:     private BoundedRangeStatisticImpl freePoolSize;
1:d29ca2a:     private BoundedRangeStatisticImpl poolSize;
1:d29ca2a:     private RangeStatisticImpl waitingThreadCount;
1:d29ca2a: 
1:230a86c:     public JCAConnectionPoolStatsImpl(String connectionFactory, String managedConnectionFactory, TimeStatisticImpl waitTime, TimeStatisticImpl useTime,
1:230a86c:                                       CountStatisticImpl closeCount, CountStatisticImpl createCount, BoundedRangeStatisticImpl freePoolSize, BoundedRangeStatisticImpl poolSize,
1:230a86c:                                       RangeStatisticImpl waitingThreadCount) {
1:d29ca2a:         super(connectionFactory, managedConnectionFactory, waitTime, useTime);
1:d29ca2a:         this.closeCount = closeCount;
1:d29ca2a:         this.createCount = createCount;
1:d29ca2a:         this.freePoolSize = freePoolSize;
1:d29ca2a:         this.poolSize = poolSize;
1:d29ca2a:         this.waitingThreadCount = waitingThreadCount;
1:d29ca2a: 
1:d29ca2a:         // lets add named stats
1:d29ca2a:         addStatistic("freePoolSize", freePoolSize);
1:d29ca2a:         addStatistic("poolSize", poolSize);
1:d29ca2a:         addStatistic("waitingThreadCount", waitingThreadCount);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public CountStatisticImpl getCloseCount() {
1:d29ca2a:         return closeCount;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public CountStatisticImpl getCreateCount() {
1:d29ca2a:         return createCount;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public BoundedRangeStatisticImpl getFreePoolSize() {
1:d29ca2a:         return freePoolSize;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public BoundedRangeStatisticImpl getPoolSize() {
1:d29ca2a:         return poolSize;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public RangeStatisticImpl getWaitingThreadCount() {
1:d29ca2a:         return waitingThreadCount;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1:  * 
/////////////////////////////////////////////////////////////////////////
1:     public JCAConnectionPoolStatsImpl(String connectionFactory, String managedConnectionFactory, TimeStatisticImpl waitTime, TimeStatisticImpl useTime,
1:                                       CountStatisticImpl closeCount, CountStatisticImpl createCount, BoundedRangeStatisticImpl freePoolSize, BoundedRangeStatisticImpl poolSize,
1:                                       RangeStatisticImpl waitingThreadCount) {
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.management;
1: 
1: 
1: /**
1:  * Statistics for a JCA connection pool
1:  *
0:  * @version $Revision: 1.2 $
1:  */
1: public class JCAConnectionPoolStatsImpl extends JCAConnectionStatsImpl {
1:     private CountStatisticImpl closeCount;
1:     private CountStatisticImpl createCount;
1:     private BoundedRangeStatisticImpl freePoolSize;
1:     private BoundedRangeStatisticImpl poolSize;
1:     private RangeStatisticImpl waitingThreadCount;
1: 
0:     public JCAConnectionPoolStatsImpl(String connectionFactory, String managedConnectionFactory, TimeStatisticImpl waitTime, TimeStatisticImpl useTime, CountStatisticImpl closeCount, CountStatisticImpl createCount, BoundedRangeStatisticImpl freePoolSize, BoundedRangeStatisticImpl poolSize, RangeStatisticImpl waitingThreadCount) {
1:         super(connectionFactory, managedConnectionFactory, waitTime, useTime);
1:         this.closeCount = closeCount;
1:         this.createCount = createCount;
1:         this.freePoolSize = freePoolSize;
1:         this.poolSize = poolSize;
1:         this.waitingThreadCount = waitingThreadCount;
1: 
1:         // lets add named stats
1:         addStatistic("freePoolSize", freePoolSize);
1:         addStatistic("poolSize", poolSize);
1:         addStatistic("waitingThreadCount", waitingThreadCount);
1:     }
1: 
1:     public CountStatisticImpl getCloseCount() {
1:         return closeCount;
1:     }
1: 
1:     public CountStatisticImpl getCreateCount() {
1:         return createCount;
1:     }
1: 
1:     public BoundedRangeStatisticImpl getFreePoolSize() {
1:         return freePoolSize;
1:     }
1: 
1:     public BoundedRangeStatisticImpl getPoolSize() {
1:         return poolSize;
1:     }
1: 
1:     public RangeStatisticImpl getWaitingThreadCount() {
1:         return waitingThreadCount;
1:     }
1: 
1: }
============================================================================