1:8012f28: /**
1:8012f28:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8012f28:  * contributor license agreements.  See the NOTICE file distributed with
1:8012f28:  * this work for additional information regarding copyright ownership.
1:8012f28:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8012f28:  * (the "License"); you may not use this file except in compliance with
1:8012f28:  * the License.  You may obtain a copy of the License at
1:8012f28:  *
1:8012f28:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8012f28:  *
1:8012f28:  * Unless required by applicable law or agreed to in writing, software
1:8012f28:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8012f28:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8012f28:  * See the License for the specific language governing permissions and
1:8012f28:  * limitations under the License.
1:8012f28:  */
1:8012f28: package org.apache.activemq.broker.region.policy;
1:8012f28: 
1:8012f28: import java.util.ArrayList;
1:8012f28: import java.util.Collections;
1:8012f28: import java.util.Comparator;
1:8012f28: import java.util.List;
1:8012f28: import org.apache.activemq.broker.region.MessageReference;
1:8012f28: import org.apache.activemq.broker.region.Subscription;
1:8012f28: import org.apache.activemq.filter.MessageEvaluationContext;
1:8012f28: 
1:8012f28: /**
1:8012f28:  * Priority dispatch policy that sends a message to every subscription that
1:8012f28:  * matches the message in consumer priority order.
1:8012f28:  * 
1:8012f28:  * @org.apache.xbean.XBean
1:8012f28:  * 
1:8012f28:  */
1:8012f28: public class PriorityDispatchPolicy extends SimpleDispatchPolicy {
1:8012f28: 
1:8012f28:     private final Comparator<? super Subscription> orderedCompare = new Comparator<Subscription>() {
1:8012f28:         @Override
1:8012f28:         public int compare(Subscription o1, Subscription o2) {
1:8012f28:             // We want the list sorted in descending order
1:8012f28:             return o2.getConsumerInfo().getPriority() - o1.getConsumerInfo().getPriority();
1:8012f28:         }
1:8012f28:     };
1:8012f28: 
1:8012f28:     public boolean dispatch(MessageReference node, MessageEvaluationContext msgContext, List<Subscription> consumers)
1:8012f28:             throws Exception {
1:8012f28:         ArrayList<Subscription> ordered = new ArrayList<Subscription>(consumers);
1:8012f28:         Collections.sort(ordered, orderedCompare);
1:8012f28: 
1:8012f28:         StringBuffer stringBuffer = new StringBuffer();
1:8012f28:         for (Subscription sub: ordered) {
1:8012f28:             stringBuffer.append(sub.getConsumerInfo().getPriority());
1:8012f28:             stringBuffer.append(',');
1:8012f28:         }
1:8012f28:         //System.err.println("Priority:" + stringBuffer.toString() + ", msg: " + node.getMessage());
1:8012f28:         return super.dispatch(node, msgContext, ordered);
1:8012f28:     }
1:8012f28: 
1:8012f28: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Gary Tully
-------------------------------------------------------------------------------
commit:8012f28
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.region.policy;
1: 
1: import java.util.ArrayList;
1: import java.util.Collections;
1: import java.util.Comparator;
1: import java.util.List;
1: import org.apache.activemq.broker.region.MessageReference;
1: import org.apache.activemq.broker.region.Subscription;
1: import org.apache.activemq.filter.MessageEvaluationContext;
1: 
1: /**
1:  * Priority dispatch policy that sends a message to every subscription that
1:  * matches the message in consumer priority order.
1:  * 
1:  * @org.apache.xbean.XBean
1:  * 
1:  */
1: public class PriorityDispatchPolicy extends SimpleDispatchPolicy {
1: 
1:     private final Comparator<? super Subscription> orderedCompare = new Comparator<Subscription>() {
1:         @Override
1:         public int compare(Subscription o1, Subscription o2) {
1:             // We want the list sorted in descending order
1:             return o2.getConsumerInfo().getPriority() - o1.getConsumerInfo().getPriority();
1:         }
1:     };
1: 
1:     public boolean dispatch(MessageReference node, MessageEvaluationContext msgContext, List<Subscription> consumers)
1:             throws Exception {
1:         ArrayList<Subscription> ordered = new ArrayList<Subscription>(consumers);
1:         Collections.sort(ordered, orderedCompare);
1: 
1:         StringBuffer stringBuffer = new StringBuffer();
1:         for (Subscription sub: ordered) {
1:             stringBuffer.append(sub.getConsumerInfo().getPriority());
1:             stringBuffer.append(',');
1:         }
1:         //System.err.println("Priority:" + stringBuffer.toString() + ", msg: " + node.getMessage());
1:         return super.dispatch(node, msgContext, ordered);
1:     }
1: 
1: }
============================================================================