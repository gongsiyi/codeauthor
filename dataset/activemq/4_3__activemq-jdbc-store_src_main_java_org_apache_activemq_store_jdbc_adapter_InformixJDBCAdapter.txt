1:a107823: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
1:7f883f6:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:a107823:  * Unless required by applicable law or agreed to in writing, software
1:7f883f6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7f883f6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7f883f6:  * See the License for the specific language governing permissions and
1:7f883f6:  * limitations under the License.
1:7f883f6:  */
1:a107823: package org.apache.activemq.store.jdbc.adapter;
1:a107823: 
1:a107823: import org.apache.activemq.store.jdbc.Statements;
1:a107823: 
1:a107823: /**
1:a107823:  * JDBC Adapter for Informix database.
1:a107823:  * Because Informix database restricts length of composite primary keys, length of 
1:a107823:  * <i>container name</i> field and <i>subscription id</i> field must be reduced to 150 characters.
1:a107823:  * Therefore be sure not to use longer names for container name and subscription id than 150 characters.
6:a107823:  *  
1:a107823:  * @org.apache.xbean.XBean element="informixJDBCAdapter"
1:a107823:  */
1:a107823: public class InformixJDBCAdapter extends BlobJDBCAdapter {
1:a107823: 
1:adc45e8:     @Override
1:a107823:     public void setStatements(Statements statements) {
1:a107823:         statements.setContainerNameDataType("VARCHAR(150)");
1:a107823:         statements.setStringIdDataType("VARCHAR(150)");
1:a107823:         statements.setLongDataType("INT8");
1:78e7221:         statements.setSequenceDataType("INT8");
1:a107823:         statements.setBinaryDataType("BYTE");
1:a107823:         super.setStatements(statements);
1:a107823:     }
1:a107823: 
1:a107823: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:c5cf038
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:a107823
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * 
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
1:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  * 
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
1:  * 
0:  **/
1: package org.apache.activemq.store.jdbc.adapter;
1: 
1: import org.apache.activemq.store.jdbc.Statements;
1: 
1: /**
1:  * JDBC Adapter for Informix database.
1:  * Because Informix database restricts length of composite primary keys, length of 
1:  * <i>container name</i> field and <i>subscription id</i> field must be reduced to 150 characters.
1:  * Therefore be sure not to use longer names for container name and subscription id than 150 characters.
1:  *  
1:  * @org.apache.xbean.XBean element="informixJDBCAdapter"
1:  */
1: public class InformixJDBCAdapter extends BlobJDBCAdapter {
1: 
1:     public void setStatements(Statements statements) {
1:         statements.setContainerNameDataType("VARCHAR(150)");
1:         statements.setStringIdDataType("VARCHAR(150)");
1:         statements.setLongDataType("INT8");
1:         statements.setBinaryDataType("BYTE");
1:         super.setStatements(statements);
1:     }
1: 
1: }
commit:4843dd4
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.store.jdbc.Statements;
0:  * <i>container name</i> field and <i>subscription id</i> field must be reduced to 150 characters.
0:  * Therefore be sure not to use longer names for container name and subscription id than 150 characters.
0:  *  
0:  * @org.apache.xbean.XBean element="informixJDBCAdapter"
0:     public void setStatements(Statements statements) {
0:         statements.setContainerNameDataType("VARCHAR(150)");
0:         statements.setStringIdDataType("VARCHAR(150)");
0:         statements.setLongDataType("INT8");
0:         statements.setBinaryDataType("BYTE");
0:         super.setStatements(statements);
0:     }
0: 
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * 
0:  * Copyright 2005 Pawel Tucholski
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
0:  * 
0:  **/
0: package org.apache.activemq.store.jdbc.adapter;
0: 
0: import org.apache.activemq.store.jdbc.StatementProvider;
0: 
0: /**
0:  * JDBC Adapter for Informix database.
0:  * Because Informix database restricts length of composite primary keys, length of 
0:  * <i>container name</i> field and <i>subscription id</i> field must be reducted to 150 characters.
0:  * Therefore be sure not to use longer names for container name and subscription id than 150 characters. 
0:  */
0: public class InformixJDBCAdapter extends BlobJDBCAdapter {
0: 
0:     public static StatementProvider createStatementProvider() {
0:         DefaultStatementProvider answer = new DefaultStatementProvider();
0:         answer.setContainerNameDataType("VARCHAR(150)");
0:         answer.setStringIdDataType("VARCHAR(150)");
0:         answer.setLongDataType("INT8");
0:         answer.setBinaryDataType("BYTE");
0:         return answer;
0:     }	
0: 	
0: 	public InformixJDBCAdapter() {
0: 		this(createStatementProvider());
0: 	}
0: 	
0: 	public InformixJDBCAdapter(StatementProvider provider) {
0: 		super(provider);
0: 	}
0: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:adc45e8
/////////////////////////////////////////////////////////////////////////
1:     @Override
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:78e7221
/////////////////////////////////////////////////////////////////////////
1:         statements.setSequenceDataType("INT8");
============================================================================