1:fc00993: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
2:2a076d0:  *
1:2a076d0:  *      http://www.apache.org/licenses/LICENSE-2.0
1:2a076d0:  *
1:2a076d0:  * Unless required by applicable law or agreed to in writing, software
1:2a076d0:  * distributed under the License is distributed on an "AS IS" BASIS,
1:2a076d0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:2a076d0:  * See the License for the specific language governing permissions and
1:2a076d0:  * limitations under the License.
1:2a076d0:  */
1:2a076d0: package org.apache.activemq.transport.reliable;
2:2a076d0: 
1:2a076d0: import java.io.IOException;
1:2a076d0: import java.net.SocketAddress;
1:2a076d0: import java.net.URI;
1:2a076d0: import java.net.UnknownHostException;
1:2a076d0: 
1:74a7a8b: import org.apache.activemq.openwire.OpenWireFormat;
1:74a7a8b: import org.apache.activemq.transport.udp.CommandChannel;
1:74a7a8b: import org.apache.activemq.transport.udp.UdpTransport;
1:74a7a8b: 
1:2a076d0: /**
1:2a076d0:  * An unreliable UDP transport that will randomly discard packets to simulate a
1:2a076d0:  * bad network (or UDP buffers being flooded).
1:b0c2a40:  * 
1:2a076d0:  * 
1:2a076d0:  */
1:2a076d0: public class UnreliableUdpTransport extends UdpTransport {
1:2a076d0: 
1:2a076d0:     private DropCommandStrategy dropCommandStrategy;
1:2a076d0: 
1:2a076d0:     public UnreliableUdpTransport(OpenWireFormat wireFormat, int port) throws UnknownHostException, IOException {
1:2a076d0:         super(wireFormat, port);
1:2a076d0:     }
1:2a076d0: 
1:2a076d0:     public UnreliableUdpTransport(OpenWireFormat wireFormat, SocketAddress socketAddress) throws IOException {
1:2a076d0:         super(wireFormat, socketAddress);
1:2a076d0:     }
1:2a076d0: 
1:2a076d0:     public UnreliableUdpTransport(OpenWireFormat wireFormat, URI remoteLocation) throws UnknownHostException,
1:2a076d0:             IOException {
1:2a076d0:         super(wireFormat, remoteLocation);
1:2a076d0:     }
1:2a076d0: 
1:2a076d0:     public UnreliableUdpTransport(OpenWireFormat wireFormat) throws IOException {
1:2a076d0:         super(wireFormat);
1:2a076d0:     }
1:2a076d0: 
1:2a076d0:     public DropCommandStrategy getDropCommandStrategy() {
1:2a076d0:         return dropCommandStrategy;
1:2a076d0:     }
1:2a076d0: 
1:2a076d0:     public void setDropCommandStrategy(DropCommandStrategy dropCommandStrategy) {
1:2a076d0:         this.dropCommandStrategy = dropCommandStrategy;
1:2a076d0:     }
1:2a076d0: 
1:2a076d0:     protected CommandChannel createCommandDatagramChannel() {
1:2a076d0:         return new UnreliableCommandDatagramChannel(this, getWireFormat(), getDatagramSize(), getTargetAddress(),
1:2a076d0:                 createDatagramHeaderMarshaller(), getReplayBuffer(), getChannel(), getBufferPool(), dropCommandStrategy);
1:2a076d0:     }
1:2a076d0: 
1:2a076d0: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: /**
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.openwire.OpenWireFormat;
1: import org.apache.activemq.transport.udp.CommandChannel;
1: import org.apache.activemq.transport.udp.UdpTransport;
1: 
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:2a076d0
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Copyright 2005-2006 The Apache Software Foundation.
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.reliable;
1: 
0: import org.apache.activemq.openwire.OpenWireFormat;
0: import org.apache.activemq.transport.udp.CommandChannel;
0: import org.apache.activemq.transport.udp.CommandDatagramChannel;
0: import org.apache.activemq.transport.udp.UdpTransport;
1: 
1: import java.io.IOException;
1: import java.net.SocketAddress;
1: import java.net.URI;
1: import java.net.UnknownHostException;
1: 
1: /**
1:  * An unreliable UDP transport that will randomly discard packets to simulate a
1:  * bad network (or UDP buffers being flooded).
1:  * 
0:  * @version $Revision: $
1:  */
1: public class UnreliableUdpTransport extends UdpTransport {
1: 
1:     private DropCommandStrategy dropCommandStrategy;
1: 
1:     public UnreliableUdpTransport(OpenWireFormat wireFormat, int port) throws UnknownHostException, IOException {
1:         super(wireFormat, port);
1:     }
1: 
1:     public UnreliableUdpTransport(OpenWireFormat wireFormat, SocketAddress socketAddress) throws IOException {
1:         super(wireFormat, socketAddress);
1:     }
1: 
1:     public UnreliableUdpTransport(OpenWireFormat wireFormat, URI remoteLocation) throws UnknownHostException,
1:             IOException {
1:         super(wireFormat, remoteLocation);
1:     }
1: 
1:     public UnreliableUdpTransport(OpenWireFormat wireFormat) throws IOException {
1:         super(wireFormat);
1:     }
1: 
1:     public DropCommandStrategy getDropCommandStrategy() {
1:         return dropCommandStrategy;
1:     }
1: 
1:     public void setDropCommandStrategy(DropCommandStrategy dropCommandStrategy) {
1:         this.dropCommandStrategy = dropCommandStrategy;
1:     }
1: 
1:     protected CommandChannel createCommandDatagramChannel() {
1:         return new UnreliableCommandDatagramChannel(this, getWireFormat(), getDatagramSize(), getTargetAddress(),
1:                 createDatagramHeaderMarshaller(), getReplayBuffer(), getChannel(), getBufferPool(), dropCommandStrategy);
1:     }
1: 
1: }
============================================================================