1:82a5839: /*
1:82a5839:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:82a5839:  * contributor license agreements.  See the NOTICE file distributed with
1:82a5839:  * this work for additional information regarding copyright ownership.
1:82a5839:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:82a5839:  * (the "License"); you may not use this file except in compliance with
1:82a5839:  * the License.  You may obtain a copy of the License at
1:82a5839:  *
1:82a5839:  *      http://www.apache.org/licenses/LICENSE-2.0
1:82a5839:  *
1:82a5839:  * Unless required by applicable law or agreed to in writing, software
1:82a5839:  * distributed under the License is distributed on an "AS IS" BASIS,
1:82a5839:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:82a5839:  * See the License for the specific language governing permissions and
1:82a5839:  * limitations under the License.
1:82a5839:  */
1:82a5839: package org.apache.activemq.transport.amqp.client.util;
1:82a5839: 
1:82a5839: import java.io.IOException;
1:82a5839: 
1:82a5839: /**
1:82a5839:  * Used to make throwing IOException instances easier.
1:82a5839:  */
1:82a5839: public class IOExceptionSupport {
1:82a5839: 
1:82a5839:     /**
1:82a5839:      * Checks the given cause to determine if it's already an IOException type and
1:82a5839:      * if not creates a new IOException to wrap it.
1:82a5839:      *
1:82a5839:      * @param cause
1:82a5839:      *        The initiating exception that should be cast or wrapped.
1:82a5839:      *
1:82a5839:      * @return an IOException instance.
1:82a5839:      */
1:82a5839:     public static IOException create(Throwable cause) {
1:82a5839:         if (cause instanceof IOException) {
1:82a5839:             return (IOException) cause;
1:82a5839:         }
1:82a5839: 
1:82a5839:         String message = cause.getMessage();
1:82a5839:         if (message == null || message.length() == 0) {
1:82a5839:             message = cause.toString();
1:82a5839:         }
1:82a5839: 
1:82a5839:         return new IOException(message, cause);
1:82a5839:     }
1:82a5839: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:82a5839
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp.client.util;
1: 
1: import java.io.IOException;
1: 
1: /**
1:  * Used to make throwing IOException instances easier.
1:  */
1: public class IOExceptionSupport {
1: 
1:     /**
1:      * Checks the given cause to determine if it's already an IOException type and
1:      * if not creates a new IOException to wrap it.
1:      *
1:      * @param cause
1:      *        The initiating exception that should be cast or wrapped.
1:      *
1:      * @return an IOException instance.
1:      */
1:     public static IOException create(Throwable cause) {
1:         if (cause instanceof IOException) {
1:             return (IOException) cause;
1:         }
1: 
1:         String message = cause.getMessage();
1:         if (message == null || message.length() == 0) {
1:             message = cause.toString();
1:         }
1: 
1:         return new IOException(message, cause);
1:     }
1: }
============================================================================