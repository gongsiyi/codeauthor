1:8a8fcb6: /**
1:8a8fcb6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:8a8fcb6:  * contributor license agreements.  See the NOTICE file distributed with
1:8a8fcb6:  * this work for additional information regarding copyright ownership.
1:8a8fcb6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:8a8fcb6:  * (the "License"); you may not use this file except in compliance with
1:8a8fcb6:  * the License.  You may obtain a copy of the License at
1:8a8fcb6:  *
1:8a8fcb6:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8a8fcb6:  *
1:8a8fcb6:  * Unless required by applicable law or agreed to in writing, software
1:8a8fcb6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8a8fcb6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8a8fcb6:  * See the License for the specific language governing permissions and
1:8a8fcb6:  * limitations under the License.
1:8a8fcb6:  */
1:8a8fcb6: package org.apache.activemq.store.jdbc;
1:8a8fcb6: 
1:8a8fcb6: import junit.framework.TestCase;
1:8a8fcb6: import org.apache.activemq.broker.BrokerFactory;
1:8a8fcb6: import org.apache.activemq.broker.BrokerService;
1:8a8fcb6: import org.apache.activemq.store.PersistenceAdapter;
1:8a8fcb6: 
1:8a8fcb6: public class JDBCLockTablePrefixTest extends TestCase {
1:8a8fcb6: 
1:8a8fcb6:     public void testLockTable() throws Exception {
1:8a8fcb6:         BrokerService broker = BrokerFactory.createBroker("xbean:org/apache/activemq/store/jdbc/JDBCLockTablePrefix.xml");
1:8a8fcb6:         broker.waitUntilStarted();
1:8a8fcb6: 
1:8a8fcb6:         PersistenceAdapter pa = broker.getPersistenceAdapter();
1:8a8fcb6:         assertNotNull(pa);
1:8a8fcb6: 
1:8a8fcb6:         JDBCPersistenceAdapter jpa = (JDBCPersistenceAdapter) pa;
1:8a8fcb6:         assertEquals("TTT_", jpa.getStatements().getTablePrefix());
1:8a8fcb6:         assertEquals("AMQ_MSGS2", jpa.getStatements().getMessageTableName());
1:8a8fcb6:         assertEquals("AMQ_LOCK2", jpa.getStatements().getLockTableName());
1:8a8fcb6: 
1:8a8fcb6:         broker.stop();
1:8a8fcb6:         broker.waitUntilStopped();
1:8a8fcb6:     }
1:8a8fcb6: 
1:8a8fcb6: }
============================================================================
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:8a8fcb6
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.jdbc;
1: 
1: import junit.framework.TestCase;
1: import org.apache.activemq.broker.BrokerFactory;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.store.PersistenceAdapter;
1: 
1: public class JDBCLockTablePrefixTest extends TestCase {
1: 
1:     public void testLockTable() throws Exception {
1:         BrokerService broker = BrokerFactory.createBroker("xbean:org/apache/activemq/store/jdbc/JDBCLockTablePrefix.xml");
1:         broker.waitUntilStarted();
1: 
1:         PersistenceAdapter pa = broker.getPersistenceAdapter();
1:         assertNotNull(pa);
1: 
1:         JDBCPersistenceAdapter jpa = (JDBCPersistenceAdapter) pa;
1:         assertEquals("TTT_", jpa.getStatements().getTablePrefix());
1:         assertEquals("AMQ_MSGS2", jpa.getStatements().getMessageTableName());
1:         assertEquals("AMQ_LOCK2", jpa.getStatements().getLockTableName());
1: 
1:         broker.stop();
1:         broker.waitUntilStopped();
1:     }
1: 
1: }
============================================================================