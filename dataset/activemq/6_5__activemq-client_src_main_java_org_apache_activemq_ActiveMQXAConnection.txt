2:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
2:d29ca2a:  */
1:d29ca2a: package org.apache.activemq;
1:d29ca2a: 
1:d29ca2a: import javax.jms.JMSException;
1:d29ca2a: import javax.jms.Session;
1:d29ca2a: import javax.jms.XAConnection;
1:d29ca2a: import javax.jms.XAQueueConnection;
1:d29ca2a: import javax.jms.XAQueueSession;
1:d29ca2a: import javax.jms.XASession;
1:d29ca2a: import javax.jms.XATopicConnection;
1:d29ca2a: import javax.jms.XATopicSession;
1:d29ca2a: 
1:d29ca2a: import org.apache.activemq.management.JMSStatsImpl;
1:d29ca2a: import org.apache.activemq.transport.Transport;
1:7339c6e: import org.apache.activemq.util.IdGenerator;
1:d29ca2a: 
1:d29ca2a: /**
1:d29ca2a:  * The XAConnection interface extends the capability of Connection by providing
1:d29ca2a:  * an XASession (optional).
1:d29ca2a:  * <p/>
1:d29ca2a:  * The XAConnection interface is optional. JMS providers are not required to
1:d29ca2a:  * support this interface. This interface is for use by JMS providers to
1:d29ca2a:  * support transactional environments. Client programs are strongly encouraged
1:d29ca2a:  * to use the transactional support  available in their environment, rather
1:d29ca2a:  * than use these XA  interfaces directly.
1:b0c2a40:  *
1:d29ca2a:  * 
1:d29ca2a:  * @see javax.jms.Connection
1:d29ca2a:  * @see javax.jms.ConnectionFactory
1:d29ca2a:  * @see javax.jms.QueueConnection
1:d29ca2a:  * @see javax.jms.TopicConnection
1:d29ca2a:  * @see javax.jms.TopicConnectionFactory
1:d29ca2a:  * @see javax.jms.QueueConnection
1:d29ca2a:  * @see javax.jms.QueueConnectionFactory
1:d29ca2a:  */
1:d29ca2a: public class ActiveMQXAConnection extends ActiveMQConnection implements XATopicConnection, XAQueueConnection, XAConnection {
1:d29ca2a: 
1:b66559e:     private int xaAckMode;
1:b66559e: 
1:b9045db:     protected ActiveMQXAConnection(Transport transport, IdGenerator clientIdGenerator,
1:b9045db:                                    IdGenerator connectionIdGenerator, JMSStatsImpl factoryStats) throws Exception {
1:b9045db:         super(transport, clientIdGenerator, connectionIdGenerator, factoryStats);
2:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public XASession createXASession() throws JMSException {
1:d29ca2a:         return (XASession) createSession(true, Session.SESSION_TRANSACTED);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public XATopicSession createXATopicSession() throws JMSException {
1:d29ca2a:         return (XATopicSession) createSession(true, Session.SESSION_TRANSACTED);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public XAQueueSession createXAQueueSession() throws JMSException {
1:d29ca2a:         return (XAQueueSession) createSession(true, Session.SESSION_TRANSACTED);
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public Session createSession(boolean transacted, int acknowledgeMode) throws JMSException {
1:36a2bdc:         checkClosedOrFailed();
1:d29ca2a:         ensureConnectionInfoSent();
1:b66559e:         return new ActiveMQXASession(this, getNextSessionId(), getAckMode(), isDispatchAsync());
1:b66559e:     }
1:b66559e: 
1:b66559e:     private int getAckMode() {
1:b66559e:         return xaAckMode > 0 ? xaAckMode : Session.SESSION_TRANSACTED;
1:b66559e:     }
1:b66559e: 
1:b66559e:     public void setXaAckMode(int xaAckMode) {
1:b66559e:         this.xaAckMode = xaAckMode;
1:b66559e:     }
1:b66559e: 
1:b66559e:     public int getXaAckMode() {
1:b66559e:         return xaAckMode;
1:86cbdfd:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:gtully
-------------------------------------------------------------------------------
commit:b66559e
/////////////////////////////////////////////////////////////////////////
1:     private int xaAckMode;
1: 
/////////////////////////////////////////////////////////////////////////
1:         return new ActiveMQXASession(this, getNextSessionId(), getAckMode(), isDispatchAsync());
1:     }
1: 
1:     private int getAckMode() {
1:         return xaAckMode > 0 ? xaAckMode : Session.SESSION_TRANSACTED;
1:     }
1: 
1:     public void setXaAckMode(int xaAckMode) {
1:         this.xaAckMode = xaAckMode;
1:     }
1: 
1:     public int getXaAckMode() {
1:         return xaAckMode;
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:90e21b4
/////////////////////////////////////////////////////////////////////////
0:     protected ActiveMQXAConnection(Transport transport, JMSStatsImpl factoryStats) throws Exception {
0:         super(transport, factoryStats);
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq;
1: 
1: import javax.jms.JMSException;
1: import javax.jms.Session;
1: import javax.jms.XAConnection;
1: import javax.jms.XAQueueConnection;
1: import javax.jms.XAQueueSession;
1: import javax.jms.XASession;
1: import javax.jms.XATopicConnection;
1: import javax.jms.XATopicSession;
1: 
1: import org.apache.activemq.management.JMSStatsImpl;
1: import org.apache.activemq.transport.Transport;
1: 
1: /**
1:  * The XAConnection interface extends the capability of Connection by providing
1:  * an XASession (optional).
1:  * <p/>
1:  * The XAConnection interface is optional. JMS providers are not required to
1:  * support this interface. This interface is for use by JMS providers to
1:  * support transactional environments. Client programs are strongly encouraged
1:  * to use the transactional support  available in their environment, rather
1:  * than use these XA  interfaces directly.
1:  *
0:  * @version $Revision: 1.6 $
1:  * @see javax.jms.Connection
1:  * @see javax.jms.ConnectionFactory
1:  * @see javax.jms.QueueConnection
1:  * @see javax.jms.TopicConnection
1:  * @see javax.jms.TopicConnectionFactory
1:  * @see javax.jms.QueueConnection
1:  * @see javax.jms.QueueConnectionFactory
1:  */
1: public class ActiveMQXAConnection extends ActiveMQConnection implements XATopicConnection, XAQueueConnection, XAConnection {
1: 
1:     /**
0:      * @param transport
0:      * @param theUserName
0:      * @param thePassword
0:      * @param factoryStats
0:      * @throws Exception 
1:      */
0:     public ActiveMQXAConnection(Transport transport, String theUserName, String thePassword, JMSStatsImpl factoryStats) throws Exception {
0:         super(transport, theUserName, thePassword, factoryStats);
1:     }
1: 
1:     public XASession createXASession() throws JMSException {
1:         return (XASession) createSession(true, Session.SESSION_TRANSACTED);
1:     }
1: 
1:     public XATopicSession createXATopicSession() throws JMSException {
1:         return (XATopicSession) createSession(true, Session.SESSION_TRANSACTED);
1:     }
1: 
1:     public XAQueueSession createXAQueueSession() throws JMSException {
1:         return (XAQueueSession) createSession(true, Session.SESSION_TRANSACTED);
1:     }
1: 
1:     public Session createSession(boolean transacted, int acknowledgeMode) throws JMSException {
0:         checkClosed();
1:         ensureConnectionInfoSent();
0:         return new ActiveMQXASession(this, getNextSessionId(), Session.SESSION_TRANSACTED, asyncDispatch);
1:     }
1: }
author:Gary Tully
-------------------------------------------------------------------------------
commit:b9045db
/////////////////////////////////////////////////////////////////////////
1:     protected ActiveMQXAConnection(Transport transport, IdGenerator clientIdGenerator,
1:                                    IdGenerator connectionIdGenerator, JMSStatsImpl factoryStats) throws Exception {
1:         super(transport, clientIdGenerator, connectionIdGenerator, factoryStats);
author:Robert Davies
-------------------------------------------------------------------------------
commit:62fb85e
/////////////////////////////////////////////////////////////////////////
0:         return new ActiveMQXASession(this, getNextSessionId(), Session.SESSION_TRANSACTED, isDispatchAsync());
commit:36a2bdc
/////////////////////////////////////////////////////////////////////////
1:         checkClosedOrFailed();
author:James Strachan
-------------------------------------------------------------------------------
commit:7339c6e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.util.IdGenerator;
/////////////////////////////////////////////////////////////////////////
0:     protected ActiveMQXAConnection(Transport transport, IdGenerator clientIdGenerator, JMSStatsImpl factoryStats) throws Exception {
0:         super(transport, clientIdGenerator, factoryStats);
commit:480433b
/////////////////////////////////////////////////////////////////////////
0:         return new ActiveMQXASession(this, getNextSessionId(), Session.SESSION_TRANSACTED, dispatchAsync);
============================================================================