1:cdd5150: /**
1:cdd5150:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:cdd5150:  * contributor license agreements.  See the NOTICE file distributed with
1:cdd5150:  * this work for additional information regarding copyright ownership.
1:cdd5150:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:cdd5150:  * (the "License"); you may not use this file except in compliance with
1:cdd5150:  * the License.  You may obtain a copy of the License at
1:cdd5150:  *
1:cdd5150:  *      http://www.apache.org/licenses/LICENSE-2.0
1:cdd5150:  *
1:cdd5150:  * Unless required by applicable law or agreed to in writing, software
1:cdd5150:  * distributed under the License is distributed on an "AS IS" BASIS,
1:cdd5150:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:cdd5150:  * See the License for the specific language governing permissions and
1:cdd5150:  * limitations under the License.
1:cdd5150:  */
1:cdd5150: package org.apache.activemq.transport.amqp;
2:cdd5150: 
1:cdd5150: import java.io.IOException;
1:cdd5150: import java.security.cert.X509Certificate;
1:cdd5150: 
1:f2653e6: import org.apache.activemq.command.Command;
1:f2653e6: 
1:cdd5150: /**
1:cdd5150:  * Basic interface that mediates between protocol converter and transport
1:cdd5150:  */
1:cdd5150: public interface AmqpTransport {
1:cdd5150: 
1:cdd5150:     public void sendToActiveMQ(Command command);
1:cdd5150: 
1:0dfa5f4:     public void sendToActiveMQ(IOException command);
1:0dfa5f4: 
1:dc4ceb4:     public void sendToAmqp(Object command) throws IOException;
1:cdd5150: 
1:cdd5150:     public X509Certificate[] getPeerCertificates();
1:cdd5150: 
1:cdd5150:     public void onException(IOException error);
1:cdd5150: 
1:cdd5150:     public AmqpWireFormat getWireFormat();
1:cdd5150: 
1:cdd5150:     public void stop() throws Exception;
1:cdd5150: 
1:b8a6e5a:     public String getTransformer();
1:7a0c1f8: 
1:7a0c1f8:     public String getRemoteAddress();
1:7a0c1f8: 
1:8c5c33b:     public boolean isTrace();
1:f2653e6: 
1:3306467:     public AmqpProtocolConverter getProtocolConverter();
1:8d5b9a5: 
1:3306467:     public void setProtocolConverter(AmqpProtocolConverter protocolConverter);
1:8c5c33b: 
1:8b36701:     public void setInactivityMonitor(AmqpInactivityMonitor monitor);
1:8b36701: 
1:8b36701:     public AmqpInactivityMonitor getInactivityMonitor();
1:3306467: 
1:4b4cf7c:     public boolean isUseInactivityMonitor();
1:4b4cf7c: 
1:4b4cf7c:     public long keepAlive();
1:4b4cf7c: 
1:cdd5150: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:4b4cf7c
/////////////////////////////////////////////////////////////////////////
1:     public boolean isUseInactivityMonitor();
1: 
1:     public long keepAlive();
1: 
commit:3306467
/////////////////////////////////////////////////////////////////////////
1:     public AmqpProtocolConverter getProtocolConverter();
1:     public void setProtocolConverter(AmqpProtocolConverter protocolConverter);
1: 
commit:8b36701
/////////////////////////////////////////////////////////////////////////
1:     public void setInactivityMonitor(AmqpInactivityMonitor monitor);
1: 
1:     public AmqpInactivityMonitor getInactivityMonitor();
commit:f2653e6
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.Command;
1: 
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:8d5b9a5
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:     public IAmqpProtocolConverter getProtocolConverter();
0:     public void setProtocolConverter(IAmqpProtocolConverter protocolConverter);
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0dfa5f4
/////////////////////////////////////////////////////////////////////////
1:     public void sendToActiveMQ(IOException command);
1: 
commit:8c5c33b
/////////////////////////////////////////////////////////////////////////
1:     public boolean isTrace();
1: 
commit:7a0c1f8
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String getRemoteAddress();
1: 
commit:dc4ceb4
/////////////////////////////////////////////////////////////////////////
1:     public void sendToAmqp(Object command) throws IOException;
commit:cdd5150
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp;
1: 
0: import org.apache.activemq.command.Command;
0: import org.fusesource.hawtbuf.Buffer;
1: 
1: import java.io.IOException;
1: import java.security.cert.X509Certificate;
1: 
1: /**
1:  * Basic interface that mediates between protocol converter and transport
1:  */
1: public interface AmqpTransport {
1: 
1:     public void sendToActiveMQ(Command command);
1: 
0:     public void sendToAmqp(Buffer command) throws IOException;
1: 
1:     public X509Certificate[] getPeerCertificates();
1: 
1:     public void onException(IOException error);
1: 
0: //    public AmqpInactivityMonitor getInactivityMonitor();
1: 
1:     public AmqpWireFormat getWireFormat();
1: 
1:     public void stop() throws Exception;
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:b8a6e5a
/////////////////////////////////////////////////////////////////////////
0: 
1:     public String getTransformer();
============================================================================