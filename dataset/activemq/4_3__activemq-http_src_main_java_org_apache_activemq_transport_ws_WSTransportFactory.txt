1:0771df3: /**
1:0771df3:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:0771df3:  * contributor license agreements.  See the NOTICE file distributed with
1:0771df3:  * this work for additional information regarding copyright ownership.
1:0771df3:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:0771df3:  * (the "License"); you may not use this file except in compliance with
1:0771df3:  * the License.  You may obtain a copy of the License at
3:0771df3:  *
1:0771df3:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0771df3:  *
1:0771df3:  * Unless required by applicable law or agreed to in writing, software
1:0771df3:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0771df3:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0771df3:  * See the License for the specific language governing permissions and
1:0771df3:  * limitations under the License.
1:0771df3:  */
3:0771df3: 
1:0771df3: package org.apache.activemq.transport.ws;
1:0771df3: 
1:0771df3: import java.io.IOException;
1:0771df3: import java.net.URI;
1:da138e3: import java.net.URISyntaxException;
1:da138e3: import java.util.HashMap;
1:da138e3: import java.util.Map;
1:0771df3: 
1:31c55f7: import org.apache.activemq.broker.BrokerService;
1:31c55f7: import org.apache.activemq.broker.BrokerServiceAware;
1:0771df3: import org.apache.activemq.transport.TransportFactory;
1:0771df3: import org.apache.activemq.transport.TransportServer;
1:da138e3: import org.apache.activemq.util.IOExceptionSupport;
1:da138e3: import org.apache.activemq.util.IntrospectionSupport;
1:da138e3: import org.apache.activemq.util.URISupport;
1:3aec42d: 
1:0771df3: /**
1:0771df3:  * Factory for WebSocket (ws) transport
1:0771df3:  */
1:31c55f7: public class WSTransportFactory extends TransportFactory implements BrokerServiceAware {
1:31c55f7: 
1:31c55f7:     private BrokerService brokerService;
1:0771df3: 
1:3aec42d:     @Override
1:0771df3:     public TransportServer doBind(URI location) throws IOException {
1:da138e3:         try {
1:da138e3:             Map<String, String> options = new HashMap<String, String>(URISupport.parseParameters(location));
1:da138e3:             WSTransportServer result = new WSTransportServer(location);
1:473b328:             Map<String, Object> httpOptions = IntrospectionSupport.extractProperties(options, "http.");
1:9b0316b:             Map<String, Object> transportOptions = IntrospectionSupport.extractProperties(options, "");
1:3aec42d:             IntrospectionSupport.setProperties(result, transportOptions);
1:31c55f7:             result.setBrokerService(brokerService);
1:da138e3:             result.setTransportOption(transportOptions);
1:473b328:             result.setHttpOptions(httpOptions);
1:da138e3:             return result;
1:da138e3:         } catch (URISyntaxException e) {
1:da138e3:             throw IOExceptionSupport.create(e);
1:da138e3:         }
1:0771df3:     }
1:31c55f7: 
1:31c55f7:     @Override
1:31c55f7:     public void setBrokerService(BrokerService brokerService) {
1:31c55f7:         this.brokerService = brokerService;
1:31c55f7:     }
1:0771df3: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:31c55f7
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.broker.BrokerServiceAware;
/////////////////////////////////////////////////////////////////////////
1: public class WSTransportFactory extends TransportFactory implements BrokerServiceAware {
1: 
1:     private BrokerService brokerService;
/////////////////////////////////////////////////////////////////////////
1:             result.setBrokerService(brokerService);
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public void setBrokerService(BrokerService brokerService) {
1:         this.brokerService = brokerService;
1:     }
commit:3aec42d
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:             IntrospectionSupport.setProperties(result, transportOptions);
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:473b328
/////////////////////////////////////////////////////////////////////////
1:             Map<String, Object> httpOptions = IntrospectionSupport.extractProperties(options, "http.");
1:             result.setHttpOptions(httpOptions);
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a1ad8c
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:9b0316b
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:             Map<String, Object> transportOptions = IntrospectionSupport.extractProperties(options, "");
commit:da138e3
/////////////////////////////////////////////////////////////////////////
1: import java.net.URISyntaxException;
1: import java.util.HashMap;
1: import java.util.Map;
1: import org.apache.activemq.util.IOExceptionSupport;
1: import org.apache.activemq.util.IntrospectionSupport;
1: import org.apache.activemq.util.URISupport;
/////////////////////////////////////////////////////////////////////////
1:         try {
1:             Map<String, String> options = new HashMap<String, String>(URISupport.parseParameters(location));
1:             WSTransportServer result = new WSTransportServer(location);
0:             Map<String, Object> transportOptions = IntrospectionSupport.extractProperties(options, "transport.");
1:             result.setTransportOption(transportOptions);
1:             return result;
1:         } catch (URISyntaxException e) {
1:             throw IOExceptionSupport.create(e);
1:         }
commit:0771df3
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.transport.ws;
1: 
1: import java.io.IOException;
1: import java.net.URI;
1: 
1: import org.apache.activemq.transport.TransportFactory;
1: import org.apache.activemq.transport.TransportServer;
1: 
1: /**
1:  * 
1:  * Factory for WebSocket (ws) transport
1:  *
1:  */
0: public class WSTransportFactory extends TransportFactory {
1: 
1:     public TransportServer doBind(URI location) throws IOException {
0:         return new WSTransportServer(location);
1:     }
1: 
1: }
============================================================================