1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.authz;
1:f9451e5: 
1:f9451e5: import org.apache.shiro.authz.Permission;
1:f9451e5: import org.apache.shiro.authz.permission.WildcardPermission;
1:f9451e5: import org.apache.shiro.authz.permission.WildcardPermissionResolver;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * {@link WildcardPermissionResolver} that can create case-sensitive (or case-insensitive)
1:f9451e5:  * {@link WildcardPermission} instances as expected for ActiveMQ.
1:f9451e5:  *
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public class ActiveMQPermissionResolver extends WildcardPermissionResolver {
1:f9451e5: 
1:f9451e5:     private boolean caseSensitive;
1:f9451e5: 
1:f9451e5:     public ActiveMQPermissionResolver() {
1:f9451e5:         caseSensitive = true;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public boolean isCaseSensitive() {
1:f9451e5:         return caseSensitive;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     public void setCaseSensitive(boolean caseSensitive) {
1:f9451e5:         this.caseSensitive = caseSensitive;
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     /**
1:f9451e5:      * Creates a new {@link WildcardPermission} instance, with case-sensitivity determined by the
1:f9451e5:      * {@link #isCaseSensitive() caseSensitive} setting.
1:f9451e5:      *
1:f9451e5:      * @param permissionString the wildcard permission-formatted string.
1:f9451e5:      * @return a new {@link WildcardPermission} instance, with case-sensitivity determined by the
1:f9451e5:      *         {@link #isCaseSensitive() caseSensitive} setting.
1:f9451e5:      */
1:f9451e5:     @Override
1:f9451e5:     public Permission resolvePermission(String permissionString) {
1:f9451e5:         return new ActiveMQWildcardPermission(permissionString, isCaseSensitive());
1:f9451e5:     }
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.authz;
1: 
1: import org.apache.shiro.authz.Permission;
1: import org.apache.shiro.authz.permission.WildcardPermission;
1: import org.apache.shiro.authz.permission.WildcardPermissionResolver;
1: 
1: /**
1:  * {@link WildcardPermissionResolver} that can create case-sensitive (or case-insensitive)
1:  * {@link WildcardPermission} instances as expected for ActiveMQ.
1:  *
1:  * @since 5.10.0
1:  */
1: public class ActiveMQPermissionResolver extends WildcardPermissionResolver {
1: 
1:     private boolean caseSensitive;
1: 
1:     public ActiveMQPermissionResolver() {
1:         caseSensitive = true;
1:     }
1: 
1:     public boolean isCaseSensitive() {
1:         return caseSensitive;
1:     }
1: 
1:     public void setCaseSensitive(boolean caseSensitive) {
1:         this.caseSensitive = caseSensitive;
1:     }
1: 
1:     /**
1:      * Creates a new {@link WildcardPermission} instance, with case-sensitivity determined by the
1:      * {@link #isCaseSensitive() caseSensitive} setting.
1:      *
1:      * @param permissionString the wildcard permission-formatted string.
1:      * @return a new {@link WildcardPermission} instance, with case-sensitivity determined by the
1:      *         {@link #isCaseSensitive() caseSensitive} setting.
1:      */
1:     @Override
1:     public Permission resolvePermission(String permissionString) {
1:         return new ActiveMQWildcardPermission(permissionString, isCaseSensitive());
1:     }
1: }
============================================================================