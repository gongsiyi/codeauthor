1:0918fba: /**
1:0918fba:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:0918fba:  * contributor license agreements.  See the NOTICE file distributed with
1:0918fba:  * this work for additional information regarding copyright ownership.
1:0918fba:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:0918fba:  * (the "License"); you may not use this file except in compliance with
1:0918fba:  * the License.  You may obtain a copy of the License at
3:0918fba:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0918fba:  *
1:0918fba:  * Unless required by applicable law or agreed to in writing, software
1:0918fba:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0918fba:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0918fba:  * See the License for the specific language governing permissions and
1:0918fba:  * limitations under the License.
1:0918fba:  */
1:0918fba: package org.apache.activemq.web.controller;
3:0918fba: 
1:540dd5c: import javax.servlet.http.HttpServletRequest;
1:540dd5c: import javax.servlet.http.HttpServletResponse;
1:540dd5c: 
1:8a5e197: import org.apache.activemq.web.BrokerFacade;
1:0918fba: import org.apache.activemq.web.DestinationFacade;
1:0918fba: import org.springframework.web.servlet.ModelAndView;
1:0918fba: import org.springframework.web.servlet.mvc.Controller;
1:0918fba: 
1:0918fba: /**
1:0bbc0ac:  * 
1:0918fba:  */
1:0918fba: public class PurgeDestination extends DestinationFacade implements Controller {
1:0918fba: 
1:8a5e197:     public PurgeDestination(BrokerFacade brokerFacade) {
1:8a5e197:         super(brokerFacade);
3:0918fba:     }
1:0918fba: 
1:0918fba:     public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
1:0918fba:         purgeDestination();
1:0918fba:         return redirectToBrowseView();
1:0918fba:     }
1:0918fba: 
1:0918fba:     public void purgeDestination() throws Exception {
1:0918fba:         if (isQueue()) {
1:8a5e197:             getBrokerFacade().purgeQueue(createDestination());
1:540dd5c:         } else {
1:0918fba:             throw new UnsupportedOperationException("Purge supported for queues only. Receieved JMSDestinationType=" + getJMSDestinationType());
1:0918fba:         }
1:0918fba:     }
1:0918fba: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1: import javax.servlet.http.HttpServletRequest;
1: import javax.servlet.http.HttpServletResponse;
1: 
/////////////////////////////////////////////////////////////////////////
1:         } else {
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
author:James Strachan
-------------------------------------------------------------------------------
commit:8a5e197
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.web.BrokerFacade;
/////////////////////////////////////////////////////////////////////////
1:     public PurgeDestination(BrokerFacade brokerFacade) {
1:         super(brokerFacade);
/////////////////////////////////////////////////////////////////////////
1:             getBrokerFacade().purgeQueue(createDestination());
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:0918fba
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.web.controller;
1: 
0: import org.apache.activemq.broker.BrokerService;
0: import org.apache.activemq.broker.region.Queue;
1: import org.apache.activemq.web.DestinationFacade;
1: import org.springframework.web.servlet.ModelAndView;
1: import org.springframework.web.servlet.mvc.Controller;
1: 
0: import javax.servlet.http.HttpServletRequest;
0: import javax.servlet.http.HttpServletResponse;
0: import java.util.Set;
0: import java.util.Iterator;
1: 
1: /**
1:  *
0:  * @version $Revision$
1:  */
1: public class PurgeDestination extends DestinationFacade implements Controller {
1: 
0:     public PurgeDestination(BrokerService brokerService) {
0:         super(brokerService);
1:     }
1: 
1:     public ModelAndView handleRequest(HttpServletRequest request, HttpServletResponse response) throws Exception {
1:         purgeDestination();
1:         return redirectToBrowseView();
1:     }
1: 
1:     public void purgeDestination() throws Exception {
1:         if (isQueue()) {
0:             Set destinations = getManagedBroker().getQueueRegion().getDestinations(createDestination());
0:             for (Iterator i=destinations.iterator(); i.hasNext();) {
0:                 Queue regionQueue = (Queue)i.next();
0:                 regionQueue.purge();
1:             }
1:         }
0:         else {
1:             throw new UnsupportedOperationException("Purge supported for queues only. Receieved JMSDestinationType=" + getJMSDestinationType());
1:         }
1:     }
1: }
1: 
============================================================================