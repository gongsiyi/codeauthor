1:0a5ce71: /**
1:0a5ce71:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:0a5ce71:  * contributor license agreements.  See the NOTICE file distributed with
1:0a5ce71:  * this work for additional information regarding copyright ownership.
1:0a5ce71:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:0a5ce71:  * (the "License"); you may not use this file except in compliance with
1:0a5ce71:  * the License.  You may obtain a copy of the License at
1:0a5ce71:  *
1:0a5ce71:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0a5ce71:  *
1:0a5ce71:  * Unless required by applicable law or agreed to in writing, software
1:0a5ce71:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0a5ce71:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0a5ce71:  * See the License for the specific language governing permissions and
1:0a5ce71:  * limitations under the License.
1:0a5ce71:  */
1:0a5ce71: package org.apache.activemq.store.jdbc;
4:0a5ce71: 
1:4743a20: import static org.junit.Assert.assertEquals;
1:4743a20: 
1:0a5ce71: import org.apache.activemq.broker.AbstractLocker;
1:0a5ce71: import org.junit.Test;
1:0a5ce71: 
1:aac50fc: public class DatabaseLockerConfigTest {
1:0a5ce71: 
1:0a5ce71:     @Test
1:0a5ce71:     public void testSleepConfig() throws Exception {
1:aac50fc:         LeaseDatabaseLocker underTest = new LeaseDatabaseLocker();
1:0a5ce71:         underTest.setLockAcquireSleepInterval(50);
1:0a5ce71:         underTest.configure(null);
1:0a5ce71:         assertEquals("configured sleep value retained", 50, underTest.getLockAcquireSleepInterval());
2:0a5ce71:     }
1:0a5ce71: 
1:0a5ce71:     @Test
1:0a5ce71:     public void testDefaultSleepConfig() throws Exception {
1:aac50fc:         LeaseDatabaseLocker underTest = new LeaseDatabaseLocker();
1:aac50fc:         underTest.configure(null);
1:aac50fc:         assertEquals("configured sleep value retained", AbstractLocker.DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL, underTest.getLockAcquireSleepInterval());
1:aac50fc:     }
1:aac50fc: 
1:aac50fc:         @Test
1:aac50fc:     public void testSleepConfigOrig() throws Exception {
1:aac50fc:         DefaultDatabaseLocker underTest = new DefaultDatabaseLocker();
1:aac50fc:         underTest.setLockAcquireSleepInterval(50);
1:aac50fc:         underTest.configure(null);
1:aac50fc:         assertEquals("configured sleep value retained", 50, underTest.getLockAcquireSleepInterval());
1:aac50fc:     }
1:aac50fc: 
1:aac50fc:     @Test
1:aac50fc:     public void testDefaultSleepConfigOrig() throws Exception {
1:aac50fc:         DefaultDatabaseLocker underTest = new DefaultDatabaseLocker();
1:0a5ce71:         underTest.configure(null);
1:0a5ce71:         assertEquals("configured sleep value retained", AbstractLocker.DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL, underTest.getLockAcquireSleepInterval());
1:0a5ce71:     }
1:0a5ce71: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:4743a20
/////////////////////////////////////////////////////////////////////////
1: import static org.junit.Assert.assertEquals;
1: 
commit:ef24cc9
author:Gary Tully
-------------------------------------------------------------------------------
commit:aac50fc
/////////////////////////////////////////////////////////////////////////
1: public class DatabaseLockerConfigTest {
1:         LeaseDatabaseLocker underTest = new LeaseDatabaseLocker();
/////////////////////////////////////////////////////////////////////////
1:         LeaseDatabaseLocker underTest = new LeaseDatabaseLocker();
1:         underTest.configure(null);
1:         assertEquals("configured sleep value retained", AbstractLocker.DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL, underTest.getLockAcquireSleepInterval());
1:     }
1: 
1:         @Test
1:     public void testSleepConfigOrig() throws Exception {
1:         DefaultDatabaseLocker underTest = new DefaultDatabaseLocker();
1:         underTest.setLockAcquireSleepInterval(50);
1:         underTest.configure(null);
1:         assertEquals("configured sleep value retained", 50, underTest.getLockAcquireSleepInterval());
1:     }
1: 
1:     @Test
1:     public void testDefaultSleepConfigOrig() throws Exception {
1:         DefaultDatabaseLocker underTest = new DefaultDatabaseLocker();
commit:0a5ce71
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.store.jdbc;
1: 
1: import org.apache.activemq.broker.AbstractLocker;
0: import org.junit.Before;
1: import org.junit.Test;
1: 
0: import static junit.framework.Assert.assertEquals;
1: 
0: public class LeaseDatabaseLockerConfigTest {
1: 
0:     LeaseDatabaseLocker underTest;
1: 
0:     @Before
0:     public void setUpStore() throws Exception {
0:         underTest = new LeaseDatabaseLocker();
1:     }
1: 
1:     @Test
1:     public void testSleepConfig() throws Exception {
1:         underTest.setLockAcquireSleepInterval(50);
1:         underTest.configure(null);
1:         assertEquals("configured sleep value retained", 50, underTest.getLockAcquireSleepInterval());
1:     }
1: 
1:     @Test
1:     public void testDefaultSleepConfig() throws Exception {
1:         underTest.configure(null);
1:         assertEquals("configured sleep value retained", AbstractLocker.DEFAULT_LOCK_ACQUIRE_SLEEP_INTERVAL, underTest.getLockAcquireSleepInterval());
1:     }
1: }
============================================================================