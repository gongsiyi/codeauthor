1:516c9db: /**
1:516c9db:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:516c9db:  * contributor license agreements.  See the NOTICE file distributed with
1:516c9db:  * this work for additional information regarding copyright ownership.
1:516c9db:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:516c9db:  * (the "License"); you may not use this file except in compliance with
1:516c9db:  * the License.  You may obtain a copy of the License at
1:516c9db:  *
1:516c9db:  *      http://www.apache.org/licenses/LICENSE-2.0
1:516c9db:  *
1:516c9db:  * Unless required by applicable law or agreed to in writing, software
1:516c9db:  * distributed under the License is distributed on an "AS IS" BASIS,
1:516c9db:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:516c9db:  * See the License for the specific language governing permissions and
1:516c9db:  * limitations under the License.
1:516c9db:  */
1:516c9db: package org.apache.activemq;
1:516c9db: 
1:516c9db: import java.io.File;
1:516c9db: 
1:516c9db: import org.apache.activemq.broker.BrokerService;
1:516c9db: import org.apache.activemq.store.kahadb.KahaDBStore;
1:516c9db: 
1:516c9db: public class IDERunner {
1:516c9db: 
1:516c9db:     private static final boolean TRANSPORT_TRACE = true;
1:516c9db: 
1:516c9db:     public static void main(String[]args) throws Exception {
1:516c9db:         BrokerService brokerService = new BrokerService();
1:516c9db: 
1:516c9db:         brokerService.addConnector(
1:516c9db:             "ws://0.0.0.0:61614?trace=" + TRANSPORT_TRACE);
1:516c9db: 
1:516c9db:         KahaDBStore store = new KahaDBStore();
1:516c9db:         store.setDirectory(new File("target/activemq-data/kahadb"));
1:516c9db: 
1:516c9db:         brokerService.setStoreOpenWireVersion(10);
1:516c9db:         brokerService.setPersistenceAdapter(store);
1:516c9db:         brokerService.setUseJmx(false);
1:516c9db:         brokerService.deleteAllMessages();
1:516c9db: 
1:516c9db:         brokerService.start();
1:516c9db:         brokerService.waitUntilStopped();
1:516c9db:     }
1:516c9db: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:516c9db
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq;
1: 
1: import java.io.File;
1: 
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.store.kahadb.KahaDBStore;
1: 
1: public class IDERunner {
1: 
1:     private static final boolean TRANSPORT_TRACE = true;
1: 
1:     public static void main(String[]args) throws Exception {
1:         BrokerService brokerService = new BrokerService();
1: 
1:         brokerService.addConnector(
1:             "ws://0.0.0.0:61614?trace=" + TRANSPORT_TRACE);
1: 
1:         KahaDBStore store = new KahaDBStore();
1:         store.setDirectory(new File("target/activemq-data/kahadb"));
1: 
1:         brokerService.setStoreOpenWireVersion(10);
1:         brokerService.setPersistenceAdapter(store);
1:         brokerService.setUseJmx(false);
1:         brokerService.deleteAllMessages();
1: 
1:         brokerService.start();
1:         brokerService.waitUntilStopped();
1:     }
1: }
============================================================================