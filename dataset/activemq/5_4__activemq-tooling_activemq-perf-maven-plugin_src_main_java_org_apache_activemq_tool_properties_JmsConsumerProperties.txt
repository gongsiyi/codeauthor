1:a88906f: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
2:7f883f6:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:a88906f:  * Unless required by applicable law or agreed to in writing, software
1:a88906f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a88906f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a88906f:  * See the License for the specific language governing permissions and
1:a88906f:  * limitations under the License.
1:a88906f:  */
1:a88906f: package org.apache.activemq.tool.properties;
1:a88906f: 
1:a88906f: public class JmsConsumerProperties extends JmsClientProperties {
1:a88906f:     public static final String TIME_BASED_RECEIVING = "time"; // Receive messages on a time-based interval
1:a88906f:     public static final String COUNT_BASED_RECEIVING = "count"; // Receive a specific count of messages
1:a88906f: 
1:540dd5c:     protected boolean durable; // Consumer is a durable subscriber
1:d1ff5ab:     protected boolean unsubscribe = true; // If true, unsubscribe a durable subscriber after it finishes running
1:a88906f:     protected boolean asyncRecv = true;  // If true, use onMessage() to receive messages, else use receive()
1:a88906f: 
1:a88906f:     protected long recvCount    = 1000000;       // Receive a million messages by default
1:a88906f:     protected long recvDuration = 5 * 60 * 1000; // Receive for 5 mins by default
1:576230b:     protected long recvDelay = 0; // delay in milliseconds for processing received msg 
1:a88906f:     protected String recvType   = TIME_BASED_RECEIVING;
1:a072126:     protected String messageSelector = null;
1:a072126:     
1:a88906f:     public boolean isDurable() {
1:a88906f:         return durable;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void setDurable(boolean durable) {
1:a88906f:         this.durable = durable;
1:a88906f:     }
1:a88906f: 
1:d1ff5ab:     public boolean isUnsubscribe() {
1:d1ff5ab:         return unsubscribe;
1:d1ff5ab:     }
1:a88906f: 
1:d1ff5ab:     public void setUnsubscribe(boolean unsubscribe) {
1:d1ff5ab:         this.unsubscribe = unsubscribe;
1:d1ff5ab:     }
2:d1ff5ab: 
1:a88906f:     public boolean isAsyncRecv() {
1:a88906f:         return asyncRecv;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void setAsyncRecv(boolean asyncRecv) {
1:a88906f:         this.asyncRecv = asyncRecv;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public long getRecvCount() {
1:a88906f:         return recvCount;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void setRecvCount(long recvCount) {
1:a88906f:         this.recvCount = recvCount;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public long getRecvDuration() {
1:a88906f:         return recvDuration;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void setRecvDuration(long recvDuration) {
1:a88906f:         this.recvDuration = recvDuration;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public String getRecvType() {
1:a88906f:         return recvType;
1:a88906f:     }
1:a88906f: 
1:a88906f:     public void setRecvType(String recvType) {
1:a88906f:         this.recvType = recvType;
1:a88906f:     }
1:576230b:     
1:576230b:     public void setRecvDelay(long delay) {
1:576230b:     	this.recvDelay = delay;
1:576230b:     }
1:576230b:     
1:576230b:     public long getRecvDelay() {
1:576230b:     	return this.recvDelay;
1:576230b:     }
1:a072126:     
1:a072126:     public String getMessageSelector() {
1:a072126:     	return this.messageSelector;
1:a072126:     }
1:a072126:     
1:a072126:     public void setMessageSelector(String selector) {
1:a072126:     	if (selector != null )
1:a072126:     		this.messageSelector = new String(selector);
1:a072126:     }
1:a88906f: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:87e878b
commit:576230b
/////////////////////////////////////////////////////////////////////////
1:     protected long recvDelay = 0; // delay in milliseconds for processing received msg 
/////////////////////////////////////////////////////////////////////////
1:     
1:     public void setRecvDelay(long delay) {
1:     	this.recvDelay = delay;
1:     }
1:     
1:     public long getRecvDelay() {
1:     	return this.recvDelay;
1:     }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:a072126
/////////////////////////////////////////////////////////////////////////
1:     protected String messageSelector = null;
1:     
/////////////////////////////////////////////////////////////////////////
1:     
1:     public String getMessageSelector() {
1:     	return this.messageSelector;
1:     }
1:     
1:     public void setMessageSelector(String selector) {
1:     	if (selector != null )
1:     		this.messageSelector = new String(selector);
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1:     protected boolean durable; // Consumer is a durable subscriber
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
commit:a88906f
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  * <p/>
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  * <p/>
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * <p/>
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.tool.properties;
1: 
1: public class JmsConsumerProperties extends JmsClientProperties {
1:     public static final String TIME_BASED_RECEIVING = "time"; // Receive messages on a time-based interval
1:     public static final String COUNT_BASED_RECEIVING = "count"; // Receive a specific count of messages
1: 
0:     protected boolean durable   = false; // Consumer is a durable subscriber
1:     protected boolean asyncRecv = true;  // If true, use onMessage() to receive messages, else use receive()
1: 
1:     protected long recvCount    = 1000000;       // Receive a million messages by default
1:     protected long recvDuration = 5 * 60 * 1000; // Receive for 5 mins by default
1:     protected String recvType   = TIME_BASED_RECEIVING;
1: 
1:     public boolean isDurable() {
1:         return durable;
1:     }
1: 
1:     public void setDurable(boolean durable) {
1:         this.durable = durable;
1:     }
1: 
1:     public boolean isAsyncRecv() {
1:         return asyncRecv;
1:     }
1: 
1:     public void setAsyncRecv(boolean asyncRecv) {
1:         this.asyncRecv = asyncRecv;
1:     }
1: 
1:     public long getRecvCount() {
1:         return recvCount;
1:     }
1: 
1:     public void setRecvCount(long recvCount) {
1:         this.recvCount = recvCount;
1:     }
1: 
1:     public long getRecvDuration() {
1:         return recvDuration;
1:     }
1: 
1:     public void setRecvDuration(long recvDuration) {
1:         this.recvDuration = recvDuration;
1:     }
1: 
1:     public String getRecvType() {
1:         return recvType;
1:     }
1: 
1:     public void setRecvType(String recvType) {
1:         this.recvType = recvType;
1:     }
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:dd55c21
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:d1ff5ab
/////////////////////////////////////////////////////////////////////////
1:     protected boolean unsubscribe = true; // If true, unsubscribe a durable subscriber after it finishes running
/////////////////////////////////////////////////////////////////////////
1:     public boolean isUnsubscribe() {
1:         return unsubscribe;
1:     }
1: 
1:     public void setUnsubscribe(boolean unsubscribe) {
1:         this.unsubscribe = unsubscribe;
1:     }
1: 
commit:f1c6e4c
/////////////////////////////////////////////////////////////////////////
0: /**
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  * <p/>
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  * <p/>
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * <p/>
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.tool.properties;
0: 
0: public class JmsConsumerProperties extends JmsClientProperties {
0:     public static final String TIME_BASED_RECEIVING = "time"; // Receive messages on a time-based interval
0:     public static final String COUNT_BASED_RECEIVING = "count"; // Receive a specific count of messages
0: 
0:     protected boolean durable   = false; // Consumer is a durable subscriber
0:     protected boolean asyncRecv = true;  // If true, use onMessage() to receive messages, else use receive()
0: 
0:     protected long recvCount    = 1000000;       // Receive a million messages by default
0:     protected long recvDuration = 5 * 60 * 1000; // Receive for 5 mins by default
0:     protected String recvType   = TIME_BASED_RECEIVING;
0: 
0:     public boolean isDurable() {
0:         return durable;
0:     }
0: 
0:     public void setDurable(boolean durable) {
0:         this.durable = durable;
0:     }
0: 
0:     public boolean isAsyncRecv() {
0:         return asyncRecv;
0:     }
0: 
0:     public void setAsyncRecv(boolean asyncRecv) {
0:         this.asyncRecv = asyncRecv;
0:     }
0: 
0:     public long getRecvCount() {
0:         return recvCount;
0:     }
0: 
0:     public void setRecvCount(long recvCount) {
0:         this.recvCount = recvCount;
0:     }
0: 
0:     public long getRecvDuration() {
0:         return recvDuration;
0:     }
0: 
0:     public void setRecvDuration(long recvDuration) {
0:         this.recvDuration = recvDuration;
0:     }
0: 
0:     public String getRecvType() {
0:         return recvType;
0:     }
0: 
0:     public void setRecvType(String recvType) {
0:         this.recvType = recvType;
0:     }
0: }
============================================================================