1:1595378: /**
1:1595378:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1595378:  * contributor license agreements.  See the NOTICE file distributed with
1:1595378:  * this work for additional information regarding copyright ownership.
1:1595378:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1595378:  * (the "License"); you may not use this file except in compliance with
1:1595378:  * the License.  You may obtain a copy of the License at
1:1595378:  *
1:1595378:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1595378:  *
1:1595378:  * Unless required by applicable law or agreed to in writing, software
1:1595378:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1595378:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1595378:  * See the License for the specific language governing permissions and
1:1595378:  * limitations under the License.
1:1595378:  */
1:1595378: package org.apache.activemq.broker;
1:1595378: 
1:1595378: import java.util.LinkedList;
1:1595378: import java.util.List;
1:58aca86: 
1:1595378: import junit.framework.Test;
1:1595378: import org.apache.activemq.command.ActiveMQDestination;
1:1595378: import org.apache.activemq.command.ActiveMQQueue;
1:1595378: import org.apache.activemq.store.kahadb.FilteredKahaDBPersistenceAdapter;
1:1595378: import org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter;
1:1595378: import org.apache.activemq.store.kahadb.MultiKahaDBPersistenceAdapter;
1:1595378: 
1:1595378: public class mKahaDBXARecoveryBrokerTest extends XARecoveryBrokerTest {
1:1595378: 
1:1595378:     @Override
1:1595378:     protected void configureBroker(BrokerService broker) throws Exception {
1:1595378:         super.configureBroker(broker);
1:1595378: 
1:1595378:         MultiKahaDBPersistenceAdapter mKahaDB = new MultiKahaDBPersistenceAdapter();
1:1595378:         List adapters = new LinkedList<FilteredKahaDBPersistenceAdapter>();
1:1595378:         FilteredKahaDBPersistenceAdapter defaultEntry = new FilteredKahaDBPersistenceAdapter();
1:1595378:         defaultEntry.setPersistenceAdapter(new KahaDBPersistenceAdapter());
1:1595378:         adapters.add(defaultEntry);
1:1595378: 
1:1595378:         FilteredKahaDBPersistenceAdapter special = new FilteredKahaDBPersistenceAdapter();
1:1595378:         special.setDestination(new ActiveMQQueue("special"));
1:1595378:         special.setPersistenceAdapter(new KahaDBPersistenceAdapter());
1:1595378:         adapters.add(special);
1:1595378: 
1:1595378:         mKahaDB.setFilteredPersistenceAdapters(adapters);
1:1595378:         broker.setPersistenceAdapter(mKahaDB);
1:1595378:     }
1:1595378: 
1:1595378:     public static Test suite() {
1:1595378:         return suite(mKahaDBXARecoveryBrokerTest.class);
1:1595378:     }
1:1595378: 
1:1595378:     public static void main(String[] args) {
1:1595378:         junit.textui.TestRunner.run(suite());
1:1595378:     }
1:1595378: 
1:1595378:     protected ActiveMQDestination createDestination() {
1:1595378:         return new ActiveMQQueue("test,special");
1:1595378:     }
1:1595378: 
1:1595378: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
/////////////////////////////////////////////////////////////////////////
1: 
author:Gary Tully
-------------------------------------------------------------------------------
commit:1595378
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker;
1: 
1: import java.util.LinkedList;
1: import java.util.List;
0: import javax.jms.JMSException;
0: import javax.management.InstanceNotFoundException;
0: import javax.management.MalformedObjectNameException;
0: import javax.management.ObjectName;
1: import junit.framework.Test;
0: import org.apache.activemq.broker.jmx.RecoveredXATransactionViewMBean;
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.ActiveMQQueue;
0: import org.apache.activemq.command.ConnectionInfo;
0: import org.apache.activemq.command.ConsumerInfo;
0: import org.apache.activemq.command.DataArrayResponse;
0: import org.apache.activemq.command.Message;
0: import org.apache.activemq.command.MessageAck;
0: import org.apache.activemq.command.ProducerInfo;
0: import org.apache.activemq.command.Response;
0: import org.apache.activemq.command.SessionInfo;
0: import org.apache.activemq.command.TransactionId;
0: import org.apache.activemq.command.TransactionInfo;
0: import org.apache.activemq.command.XATransactionId;
1: import org.apache.activemq.store.kahadb.FilteredKahaDBPersistenceAdapter;
1: import org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter;
1: import org.apache.activemq.store.kahadb.MultiKahaDBPersistenceAdapter;
0: import org.apache.activemq.util.JMXSupport;
1: 
1: public class mKahaDBXARecoveryBrokerTest extends XARecoveryBrokerTest {
1: 
1:     @Override
1:     protected void configureBroker(BrokerService broker) throws Exception {
1:         super.configureBroker(broker);
1: 
1:         MultiKahaDBPersistenceAdapter mKahaDB = new MultiKahaDBPersistenceAdapter();
1:         List adapters = new LinkedList<FilteredKahaDBPersistenceAdapter>();
1:         FilteredKahaDBPersistenceAdapter defaultEntry = new FilteredKahaDBPersistenceAdapter();
1:         defaultEntry.setPersistenceAdapter(new KahaDBPersistenceAdapter());
1:         adapters.add(defaultEntry);
1: 
1:         FilteredKahaDBPersistenceAdapter special = new FilteredKahaDBPersistenceAdapter();
1:         special.setDestination(new ActiveMQQueue("special"));
1:         special.setPersistenceAdapter(new KahaDBPersistenceAdapter());
1:         adapters.add(special);
1: 
1:         mKahaDB.setFilteredPersistenceAdapters(adapters);
1:         broker.setPersistenceAdapter(mKahaDB);
1:     }
1: 
1:     public static Test suite() {
1:         return suite(mKahaDBXARecoveryBrokerTest.class);
1:     }
1: 
1:     public static void main(String[] args) {
1:         junit.textui.TestRunner.run(suite());
1:     }
1: 
1:     protected ActiveMQDestination createDestination() {
1:         return new ActiveMQQueue("test,special");
1:     }
1: 
1: }
============================================================================