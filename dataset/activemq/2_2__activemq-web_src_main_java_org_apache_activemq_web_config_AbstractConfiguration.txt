1:b514d3f: /*
1:b514d3f:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:b514d3f:  * contributor license agreements.  See the NOTICE file distributed with
1:b514d3f:  * this work for additional information regarding copyright ownership.
1:b514d3f:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:b514d3f:  * (the "License"); you may not use this file except in compliance with
1:b514d3f:  * the License.  You may obtain a copy of the License at
1:b514d3f:  *
1:b514d3f:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b514d3f:  *
1:b514d3f:  * Unless required by applicable law or agreed to in writing, software
1:b514d3f:  * distributed under the License is distributed on an "AS IS" BASIS,
1:b514d3f:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:b514d3f:  * See the License for the specific language governing permissions and
1:b514d3f:  * limitations under the License.
1:b514d3f:  */
1:b514d3f: package org.apache.activemq.web.config;
1:b514d3f: 
1:b514d3f: import java.net.MalformedURLException;
1:b514d3f: import java.util.ArrayList;
1:b514d3f: import java.util.Collection;
1:b514d3f: 
1:b514d3f: import javax.jms.ConnectionFactory;
1:b514d3f: import javax.management.remote.JMXServiceURL;
1:b514d3f: 
1:b514d3f: import org.apache.activemq.ActiveMQConnectionFactory;
1:b514d3f: 
1:b514d3f: /**
1:b514d3f:  * Base class for configurations.
1:b0c2a40:  * 
1:b514d3f:  * 
1:b514d3f:  */
1:b514d3f: public abstract class AbstractConfiguration implements WebConsoleConfiguration {
1:b514d3f: 
1:b514d3f: 	public ConnectionFactory getConnectionFactory() {
1:b514d3f: 		return null;
1:b514d3f: 	}
1:b514d3f: 
1:b514d3f: 	public String getJmxPassword() {
1:b514d3f: 		return null;
1:b514d3f: 	}
1:b514d3f: 
1:b514d3f: 	public Collection<JMXServiceURL> getJmxUrls() {
1:b514d3f: 		return null;
1:b514d3f: 	}
1:b514d3f: 
1:b514d3f: 	public String getJmxUser() {
1:b514d3f: 		return null;
1:b514d3f: 	}
1:b514d3f: 
1:b514d3f: 	/**
1:b514d3f: 	 * Creates the ActiveMQ-ConnectionFactory.
1:b514d3f: 	 * 
1:b514d3f: 	 * @param jmsUrl
1:b514d3f: 	 *            not <code>null</code>
1:b514d3f: 	 * @param jmsUser
1:b514d3f: 	 *            <code>null</code> if no authentication
1:b514d3f: 	 * @param jmsPassword
1:b514d3f: 	 *            <code>null</code> is ok
1:b514d3f: 	 * @return not <code>null</code>
1:b514d3f: 	 */
1:b514d3f: 	protected ConnectionFactory makeConnectionFactory(String jmsUrl, String jmsUser,
1:b514d3f: 			String jmsPassword) {
1:b514d3f: 				if (jmsUser != null && jmsUser.length() > 0)
1:b514d3f: 					return new ActiveMQConnectionFactory(jmsUser, jmsPassword, jmsUrl);
1:b514d3f: 				else
1:b514d3f: 					return new ActiveMQConnectionFactory(jmsUrl);
1:b514d3f: 			}
1:b514d3f: 
1:b514d3f: 	/**
1:b514d3f: 	 * Splits the JMX-Url string into a series of JMSServiceURLs.
1:b514d3f: 	 * 
1:b514d3f: 	 * @param jmxUrls
1:b514d3f: 	 *            the JMX-url, multiple URLs are separated by commas.
1:b514d3f: 	 * @return not <code>null</code>, contains at least one element.
1:b514d3f: 	 */
1:b514d3f: 	protected Collection<JMXServiceURL> makeJmxUrls(String jmxUrls) {
1:b514d3f: 		String[] urls = jmxUrls.split(",");
1:b514d3f: 		if (urls == null || urls.length == 0) {
1:b514d3f: 			urls = new String[] { jmxUrls };
1:b514d3f: 		}
1:b514d3f: 	
1:b514d3f: 		try {
1:b514d3f: 			Collection<JMXServiceURL> result = new ArrayList<JMXServiceURL>(
1:b514d3f: 					jmxUrls.length());
1:b514d3f: 			for (String url : urls) {
1:b514d3f: 				result.add(new JMXServiceURL(url));
1:b514d3f: 			}
1:b514d3f: 			return result;
1:b514d3f: 		} catch (MalformedURLException e) {
1:b514d3f: 			throw new IllegalArgumentException("Invalid JMX-url", e);
1:b514d3f: 		}
1:b514d3f: 	}
1:b514d3f: 
1:b514d3f: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:b514d3f
/////////////////////////////////////////////////////////////////////////
1: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.web.config;
1: 
1: import java.net.MalformedURLException;
1: import java.util.ArrayList;
1: import java.util.Collection;
1: 
1: import javax.jms.ConnectionFactory;
1: import javax.management.remote.JMXServiceURL;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: 
1: /**
1:  * Base class for configurations.
1:  * 
0:  * @version $Revision: $
1:  */
1: public abstract class AbstractConfiguration implements WebConsoleConfiguration {
1: 
1: 	public ConnectionFactory getConnectionFactory() {
1: 		return null;
1: 	}
1: 
1: 	public String getJmxPassword() {
1: 		return null;
1: 	}
1: 
1: 	public Collection<JMXServiceURL> getJmxUrls() {
1: 		return null;
1: 	}
1: 
1: 	public String getJmxUser() {
1: 		return null;
1: 	}
1: 
1: 	/**
1: 	 * Creates the ActiveMQ-ConnectionFactory.
1: 	 * 
1: 	 * @param jmsUrl
1: 	 *            not <code>null</code>
1: 	 * @param jmsUser
1: 	 *            <code>null</code> if no authentication
1: 	 * @param jmsPassword
1: 	 *            <code>null</code> is ok
1: 	 * @return not <code>null</code>
1: 	 */
1: 	protected ConnectionFactory makeConnectionFactory(String jmsUrl, String jmsUser,
1: 			String jmsPassword) {
1: 				if (jmsUser != null && jmsUser.length() > 0)
1: 					return new ActiveMQConnectionFactory(jmsUser, jmsPassword, jmsUrl);
1: 				else
1: 					return new ActiveMQConnectionFactory(jmsUrl);
1: 			}
1: 
1: 	/**
1: 	 * Splits the JMX-Url string into a series of JMSServiceURLs.
1: 	 * 
1: 	 * @param jmxUrls
1: 	 *            the JMX-url, multiple URLs are separated by commas.
1: 	 * @return not <code>null</code>, contains at least one element.
1: 	 */
1: 	protected Collection<JMXServiceURL> makeJmxUrls(String jmxUrls) {
1: 		String[] urls = jmxUrls.split(",");
1: 		if (urls == null || urls.length == 0) {
1: 			urls = new String[] { jmxUrls };
1: 		}
1: 	
1: 		try {
1: 			Collection<JMXServiceURL> result = new ArrayList<JMXServiceURL>(
1: 					jmxUrls.length());
1: 			for (String url : urls) {
1: 				result.add(new JMXServiceURL(url));
1: 			}
1: 			return result;
1: 		} catch (MalformedURLException e) {
1: 			throw new IllegalArgumentException("Invalid JMX-url", e);
1: 		}
1: 	}
1: 
1: }
============================================================================