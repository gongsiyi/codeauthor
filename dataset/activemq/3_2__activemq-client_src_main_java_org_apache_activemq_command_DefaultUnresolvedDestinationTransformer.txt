1:713dcaa: /**
1:713dcaa:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:713dcaa:  * contributor license agreements.  See the NOTICE file distributed with
1:713dcaa:  * this work for additional information regarding copyright ownership.
1:713dcaa:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:713dcaa:  * (the "License"); you may not use this file except in compliance with
1:713dcaa:  * the License.  You may obtain a copy of the License at
1:713dcaa:  *
1:713dcaa:  *      http://www.apache.org/licenses/LICENSE-2.0
1:713dcaa:  *
1:713dcaa:  * Unless required by applicable law or agreed to in writing, software
1:713dcaa:  * distributed under the License is distributed on an "AS IS" BASIS,
1:713dcaa:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:713dcaa:  * See the License for the specific language governing permissions and
1:713dcaa:  * limitations under the License.
1:713dcaa:  */
1:713dcaa: package org.apache.activemq.command;
1:713dcaa: 
1:713dcaa: import javax.jms.Destination;
1:713dcaa: import javax.jms.JMSException;
1:713dcaa: import javax.jms.Queue;
1:713dcaa: import javax.jms.Topic;
1:713dcaa: import java.lang.reflect.Method;
1:713dcaa: 
1:713dcaa: public class DefaultUnresolvedDestinationTransformer implements UnresolvedDestinationTransformer {
1:713dcaa: 
1:713dcaa:     @Override
1:713dcaa:     public ActiveMQDestination transform(Destination dest) throws JMSException {
1:713dcaa:         String queueName = ((Queue) dest).getQueueName();
1:713dcaa:         String topicName = ((Topic) dest).getTopicName();
1:713dcaa: 
1:713dcaa:         if (queueName == null && topicName == null) {
1:713dcaa:             throw new JMSException("Unresolvable destination: Both queue and topic names are null: " + dest);
1:713dcaa:         }
1:713dcaa:         try {
1:713dcaa:             Method isQueueMethod = dest.getClass().getMethod("isQueue");
1:713dcaa:             Method isTopicMethod = dest.getClass().getMethod("isTopic");
1:713dcaa:             Boolean isQueue = (Boolean) isQueueMethod.invoke(dest);
1:713dcaa:             Boolean isTopic = (Boolean) isTopicMethod.invoke(dest);
1:713dcaa:             if (isQueue) {
1:713dcaa:                 return new ActiveMQQueue(queueName);
1:713dcaa:             } else if (isTopic) {
1:713dcaa:                 return new ActiveMQTopic(topicName);
1:713dcaa:             } else {
1:713dcaa:                 throw new JMSException("Unresolvable destination: Neither Queue nor Topic: " + dest);
1:713dcaa:             }
1:713dcaa:         } catch (Exception e)  {
1:713dcaa:             throw new JMSException("Unresolvable destination: "  + e.getMessage() + ": " + dest);
1:713dcaa:         }
1:713dcaa:     }
1:68a8b6d: 
1:68a8b6d:     @Override
1:68a8b6d:     public ActiveMQDestination transform(String dest) throws JMSException {
1:68a8b6d:         return new ActiveMQQueue(dest);
1:68a8b6d:     }
1:713dcaa: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
author:Gary Tully
-------------------------------------------------------------------------------
commit:68a8b6d
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
1:     public ActiveMQDestination transform(String dest) throws JMSException {
1:         return new ActiveMQQueue(dest);
1:     }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:713dcaa
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: import javax.jms.Destination;
1: import javax.jms.JMSException;
1: import javax.jms.Queue;
1: import javax.jms.Topic;
1: import java.lang.reflect.Method;
1: 
1: public class DefaultUnresolvedDestinationTransformer implements UnresolvedDestinationTransformer {
1: 
1:     @Override
1:     public ActiveMQDestination transform(Destination dest) throws JMSException {
1:         String queueName = ((Queue) dest).getQueueName();
1:         String topicName = ((Topic) dest).getTopicName();
1: 
1:         if (queueName == null && topicName == null) {
1:             throw new JMSException("Unresolvable destination: Both queue and topic names are null: " + dest);
1:         }
1:         try {
1:             Method isQueueMethod = dest.getClass().getMethod("isQueue");
1:             Method isTopicMethod = dest.getClass().getMethod("isTopic");
1:             Boolean isQueue = (Boolean) isQueueMethod.invoke(dest);
1:             Boolean isTopic = (Boolean) isTopicMethod.invoke(dest);
1:             if (isQueue) {
1:                 return new ActiveMQQueue(queueName);
1:             } else if (isTopic) {
1:                 return new ActiveMQTopic(topicName);
1:             } else {
1:                 throw new JMSException("Unresolvable destination: Neither Queue nor Topic: " + dest);
1:             }
1:         } catch (Exception e)  {
1:             throw new JMSException("Unresolvable destination: "  + e.getMessage() + ": " + dest);
1:         }
1:     }
1: }
============================================================================