1:1236bbf: /**
1:1236bbf:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1236bbf:  * contributor license agreements.  See the NOTICE file distributed with
1:1236bbf:  * this work for additional information regarding copyright ownership.
1:1236bbf:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1236bbf:  * (the "License"); you may not use this file except in compliance with
1:1236bbf:  * the License.  You may obtain a copy of the License at
1:1236bbf:  *
1:1236bbf:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1236bbf:  *
1:1236bbf:  * Unless required by applicable law or agreed to in writing, software
1:1236bbf:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1236bbf:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1236bbf:  * See the License for the specific language governing permissions and
1:1236bbf:  * limitations under the License.
1:1236bbf:  */
1:1236bbf: package org.apache.activemq.transport.stomp.util;
1:1236bbf: 
1:1236bbf: import java.util.HashMap;
1:1236bbf: import java.util.Map;
1:1236bbf: 
1:1236bbf: import org.apache.activemq.broker.BrokerContext;
1:1236bbf: import org.apache.activemq.transport.stomp.SamplePojo;
1:1236bbf: 
1:1236bbf: import com.thoughtworks.xstream.XStream;
1:a7e2a44: import org.apache.activemq.transport.stomp.XStreamSupport;
1:1236bbf: 
1:1236bbf: public class XStreamBrokerContext implements BrokerContext {
1:1236bbf: 
1:1236bbf:     private final Map<String, XStream> beansMap = new HashMap<String, XStream>();
1:1236bbf: 
1:1236bbf:     public XStreamBrokerContext() {
1:1236bbf: 
1:a7e2a44:         XStream stream = XStreamSupport.createXStream();
1:1236bbf:         stream.processAnnotations(SamplePojo.class);
1:1236bbf: 
1:1236bbf:         beansMap.put("xstream", stream);
1:1236bbf:     }
1:1236bbf: 
1:1236bbf:     @Override
1:1236bbf:     public Object getBean(String name) {
1:1236bbf:         return this.beansMap.get(name);
1:1236bbf:     }
1:1236bbf: 
1:1236bbf:     @SuppressWarnings("rawtypes")
1:1236bbf:     @Override
1:1236bbf:     public Map getBeansOfType(Class type) {
1:1236bbf: 
1:1236bbf:         if (type.equals(XStream.class)) {
1:1236bbf:             return this.beansMap;
1:1236bbf:         }
1:1236bbf: 
1:1236bbf:         return null;
1:1236bbf:     }
1:1236bbf: 
1:634a818:     @Override
1:634a818:     public String getConfigurationUrl() {
1:634a818:         return null;
1:634a818:     }
1:634a818: 
1:1236bbf: }
============================================================================
author:Dejan Bosanac
-------------------------------------------------------------------------------
commit:a7e2a44
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.transport.stomp.XStreamSupport;
/////////////////////////////////////////////////////////////////////////
1:         XStream stream = XStreamSupport.createXStream();
author:gtully
-------------------------------------------------------------------------------
commit:634a818
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     public String getConfigurationUrl() {
1:         return null;
1:     }
1: 
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:1236bbf
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.stomp.util;
1: 
1: import java.util.HashMap;
1: import java.util.Map;
1: 
1: import org.apache.activemq.broker.BrokerContext;
1: import org.apache.activemq.transport.stomp.SamplePojo;
1: 
1: import com.thoughtworks.xstream.XStream;
1: 
1: public class XStreamBrokerContext implements BrokerContext {
1: 
1:     private final Map<String, XStream> beansMap = new HashMap<String, XStream>();
1: 
1:     public XStreamBrokerContext() {
1: 
0:         XStream stream = new XStream();
1:         stream.processAnnotations(SamplePojo.class);
1: 
1:         beansMap.put("xstream", stream);
1:     }
1: 
1:     @Override
1:     public Object getBean(String name) {
1:         return this.beansMap.get(name);
1:     }
1: 
1:     @SuppressWarnings("rawtypes")
1:     @Override
1:     public Map getBeansOfType(Class type) {
1: 
1:         if (type.equals(XStream.class)) {
1:             return this.beansMap;
1:         }
1: 
1:         return null;
1:     }
1: 
1: }
============================================================================