1:d97f28c: /**
1:d97f28c:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:d97f28c:  * contributor license agreements.  See the NOTICE file distributed with
1:d97f28c:  * this work for additional information regarding copyright ownership.
1:d97f28c:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:d97f28c:  * (the "License"); you may not use this file except in compliance with
1:d97f28c:  * the License.  You may obtain a copy of the License at
1:d97f28c:  *
1:d97f28c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d97f28c:  *
1:d97f28c:  * Unless required by applicable law or agreed to in writing, software
1:d97f28c:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d97f28c:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d97f28c:  * See the License for the specific language governing permissions and
1:d97f28c:  * limitations under the License.
1:d97f28c:  */
1:d97f28c: 
1:d97f28c: package org.apache.activemq;
1:d97f28c: 
1:d97f28c: import static org.junit.Assert.assertFalse;
1:d97f28c: import static org.junit.Assert.assertTrue;
1:d97f28c: 
1:d97f28c: import org.apache.activemq.command.ConnectionId;
1:d97f28c: import org.apache.activemq.command.MessageId;
1:d97f28c: import org.apache.activemq.command.ProducerId;
1:d97f28c: import org.apache.activemq.command.SessionId;
1:d97f28c: import org.apache.activemq.util.IdGenerator;
1:d97f28c: import org.apache.activemq.util.LongSequenceGenerator;
1:d97f28c: import org.junit.After;
1:d97f28c: import org.junit.Before;
1:d97f28c: import org.junit.Test;
1:d97f28c: 
1:d97f28c: public class ActiveMQMessageAuditNotSyncTest {
1:d97f28c: 
1:d97f28c:     private final IdGenerator connectionIdGenerator = new IdGenerator();
1:d97f28c:     private final LongSequenceGenerator sessionIdGenerator = new LongSequenceGenerator();
1:d97f28c:     private final LongSequenceGenerator producerIdGenerator = new LongSequenceGenerator();
1:d97f28c:     private final LongSequenceGenerator sequenceIdGenerator = new LongSequenceGenerator();
1:d97f28c: 
1:d97f28c:     @Before
1:d97f28c:     public void setUp() throws Exception {
1:d97f28c:     }
1:d97f28c: 
1:d97f28c:     @After
1:d97f28c:     public void tearDown() throws Exception {
1:d97f28c:     }
1:d97f28c: 
1:d97f28c:     @Test
1:d97f28c:     public void testAuditDepth() {
1:d97f28c: 
1:a0cc2af:         int maxAuditDepth = Short.MAX_VALUE;
1:d97f28c: 
1:d97f28c:         ConnectionId connectionId = new ConnectionId(connectionIdGenerator.generateId());
1:d97f28c:         SessionId sessionId = new SessionId(connectionId, sessionIdGenerator.getNextSequenceId());
1:d97f28c:         ProducerId producerId = new ProducerId(sessionId, producerIdGenerator.getNextSequenceId());
1:d97f28c: 
1:d97f28c:         ActiveMQMessageAuditNoSync audit = new ActiveMQMessageAuditNoSync();
1:d97f28c:         audit.setAuditDepth(maxAuditDepth);
1:d97f28c: 
1:d97f28c:         MessageId msgId = new MessageId(producerId, 0);
1:d97f28c:         for (int i = 0; i < maxAuditDepth; i++) {
1:d97f28c:             msgId.setProducerSequenceId(sequenceIdGenerator.getNextSequenceId());
1:d97f28c:             assertFalse(audit.isDuplicate(msgId));
1:d97f28c:         }
1:d97f28c: 
1:d97f28c:         for (int i = 0; i < maxAuditDepth; i++) {
1:d97f28c:             assertTrue(audit.isDuplicate(msgId));
1:d97f28c:         }
1:d97f28c:     }
1:d97f28c: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:a0cc2af
/////////////////////////////////////////////////////////////////////////
1:         int maxAuditDepth = Short.MAX_VALUE;
commit:d97f28c
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq;
1: 
1: import static org.junit.Assert.assertFalse;
1: import static org.junit.Assert.assertTrue;
1: 
1: import org.apache.activemq.command.ConnectionId;
1: import org.apache.activemq.command.MessageId;
1: import org.apache.activemq.command.ProducerId;
1: import org.apache.activemq.command.SessionId;
1: import org.apache.activemq.util.IdGenerator;
1: import org.apache.activemq.util.LongSequenceGenerator;
1: import org.junit.After;
1: import org.junit.Before;
1: import org.junit.Test;
1: 
1: public class ActiveMQMessageAuditNotSyncTest {
1: 
1:     private final IdGenerator connectionIdGenerator = new IdGenerator();
1:     private final LongSequenceGenerator sessionIdGenerator = new LongSequenceGenerator();
1:     private final LongSequenceGenerator producerIdGenerator = new LongSequenceGenerator();
1:     private final LongSequenceGenerator sequenceIdGenerator = new LongSequenceGenerator();
1: 
1:     @Before
1:     public void setUp() throws Exception {
1:     }
1: 
1:     @After
1:     public void tearDown() throws Exception {
1:     }
1: 
1:     @Test
1:     public void testAuditDepth() {
1: 
0:         int maxAuditDepth = Integer.MAX_VALUE;
1: 
1:         ConnectionId connectionId = new ConnectionId(connectionIdGenerator.generateId());
1:         SessionId sessionId = new SessionId(connectionId, sessionIdGenerator.getNextSequenceId());
1:         ProducerId producerId = new ProducerId(sessionId, producerIdGenerator.getNextSequenceId());
1: 
1:         ActiveMQMessageAuditNoSync audit = new ActiveMQMessageAuditNoSync();
1:         audit.setAuditDepth(maxAuditDepth);
1: 
1:         MessageId msgId = new MessageId(producerId, 0);
1:         for (int i = 0; i < maxAuditDepth; i++) {
1:             msgId.setProducerSequenceId(sequenceIdGenerator.getNextSequenceId());
1:             assertFalse(audit.isDuplicate(msgId));
1:         }
1: 
1:         for (int i = 0; i < maxAuditDepth; i++) {
1:             assertTrue(audit.isDuplicate(msgId));
1:         }
1:     }
1: }
============================================================================