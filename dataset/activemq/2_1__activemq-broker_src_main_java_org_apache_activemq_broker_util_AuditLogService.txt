1:1f9cc43: /**
1:1f9cc43:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1f9cc43:  * contributor license agreements.  See the NOTICE file distributed with
1:1f9cc43:  * this work for additional information regarding copyright ownership.
1:1f9cc43:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1f9cc43:  * (the "License"); you may not use this file except in compliance with
1:1f9cc43:  * the License.  You may obtain a copy of the License at
1:1f9cc43:  *
1:1f9cc43:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1f9cc43:  *
1:1f9cc43:  * Unless required by applicable law or agreed to in writing, software
1:1f9cc43:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1f9cc43:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1f9cc43:  * See the License for the specific language governing permissions and
1:1f9cc43:  * limitations under the License.
1:1f9cc43:  */
1:1f9cc43: package org.apache.activemq.broker.util;
4:1f9cc43: 
1:1f9cc43: public class AuditLogService {
1:1f9cc43: 
1:7b1cdbc:     private AuditLogFactory factory;
1:7b1cdbc: 
1:7b1cdbc:     private static AuditLogService auditLog;
1:7b1cdbc: 
1:7b1cdbc:     public static AuditLogService getAuditLog() {
1:7b1cdbc:         if (auditLog == null) {
1:7b1cdbc:             auditLog = new AuditLogService();
3:1f9cc43:         }
1:7b1cdbc:         return auditLog;
1:7b1cdbc:     }
1:5f01344: 
1:7b1cdbc:     private AuditLogService() {
1:5f01344:         factory = new DefaultAuditLogFactory();
1:1f9cc43:     }
1:7b1cdbc: 
1:b026971:     public void log(AuditLogEntry entry) {
1:7b1cdbc:         for (AuditLog log : factory.getAuditLogs()) {
1:b026971:             log.log(entry);
1:1f9cc43:         }
1:1f9cc43:     }
1:7b1cdbc: 
1:5f01344:     public void setFactory(AuditLogFactory factory) {
1:5f01344:         this.factory = factory;
1:5f01344:     }
1:5f01344: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:b026971
/////////////////////////////////////////////////////////////////////////
1:     public void log(AuditLogEntry entry) {
1:             log.log(entry);
commit:5f01344
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         factory = new DefaultAuditLogFactory();
/////////////////////////////////////////////////////////////////////////
1: 
1:     public void setFactory(AuditLogFactory factory) {
1:         this.factory = factory;
1:     }
1: }
commit:7b1cdbc
/////////////////////////////////////////////////////////////////////////
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
0:     private static final Log LOG = LogFactory.getLog(AuditLogService.class);
1:     private AuditLogFactory factory;
1: 
1:     private static AuditLogService auditLog;
1: 
1:     public static AuditLogService getAuditLog() {
1:         if (auditLog == null) {
1:             auditLog = new AuditLogService();
1:         return auditLog;
1:     }
1: 
1:     private AuditLogService() {
0: 	   String auditLogFactory = System.getProperty("org.apache.activemq.audit.factory", "org.apache.activemq.broker.util.DefaultAuditLogFactory");
0:        try {
0:            factory = (AuditLogFactory) Class.forName(auditLogFactory).newInstance();
0:        } catch (Exception e) {
0:            LOG.warn("Cannot instantiate audit log factory '" + auditLogFactory + "', using default audit log factory", e);
0:            factory = new DefaultAuditLogFactory();
1: 
1:         for (AuditLog log : factory.getAuditLogs()) {
commit:1f9cc43
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.util;
1: 
0: import java.util.ArrayList;
0: import java.util.ServiceLoader;
1: 
1: public class AuditLogService {
1: 
0:     private ArrayList<AuditLog> auditLogs = new ArrayList<AuditLog>();
1: 
0:     public AuditLogService() {
0:         ServiceLoader<AuditLog> logs = ServiceLoader.load(AuditLog.class);
0:         for (AuditLog log : logs) {
0:             auditLogs.add(log);
1:         }
0:         // add default audit log if non was found
0:         if (auditLogs.size() == 0) {
0:             auditLogs.add(new DefaultAuditLog());
1:         }
1:     }
1: 
0:     public void log(String message) {
0:         for (AuditLog log : auditLogs) {
0:             log.log(message);
1:         }
1:     }
1: }
============================================================================