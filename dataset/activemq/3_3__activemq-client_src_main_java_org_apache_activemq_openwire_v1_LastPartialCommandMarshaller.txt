1:8704338: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:8704338:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:8704338:  *
1:8704338:  * Unless required by applicable law or agreed to in writing, software
1:8704338:  * distributed under the License is distributed on an "AS IS" BASIS,
1:8704338:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:8704338:  * See the License for the specific language governing permissions and
1:8704338:  * limitations under the License.
1:8704338:  */
1:8704338: 
1:8704338: package org.apache.activemq.openwire.v1;
1:8704338: 
1:4821b9d: import java.io.DataInput;
1:4821b9d: import java.io.DataOutput;
1:8704338: import java.io.IOException;
1:8704338: 
1:74a7a8b: import org.apache.activemq.command.DataStructure;
1:74a7a8b: import org.apache.activemq.command.LastPartialCommand;
1:74a7a8b: import org.apache.activemq.openwire.BooleanStream;
1:74a7a8b: import org.apache.activemq.openwire.OpenWireFormat;
1:8704338: 
1:8704338: 
1:8704338: 
1:8704338: /**
1:8704338:  * Marshalling code for Open Wire Format for LastPartialCommandMarshaller
1:8704338:  *
1:8704338:  *
1:8704338:  * NOTE!: This file is auto generated - do not modify!
1:8704338:  *        if you need to make a change, please see the modify the groovy scripts in the
1:8704338:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:8704338:  *        this file.
1:0bbc0ac:  *
1:8704338:  * 
1:8704338:  */
1:f3ef1a9: public class LastPartialCommandMarshaller extends PartialCommandMarshaller {
1:8704338: 
1:8704338:     /**
1:8704338:      * Return the type of Data Structure we marshal
1:8704338:      * @return short representation of the type data structure
1:8704338:      */
1:8704338:     public byte getDataStructureType() {
1:8704338:         return LastPartialCommand.DATA_STRUCTURE_TYPE;
1:8704338:     }
1:8704338:     
1:8704338:     /**
1:8704338:      * @return a new object instance
1:8704338:      */
1:8704338:     public DataStructure createObject() {
1:8704338:         return new LastPartialCommand();
1:8704338:     }
1:8704338: 
1:8704338:     /**
1:8704338:      * Un-marshal an object instance from the data input stream
1:8704338:      *
1:8704338:      * @param o the object to un-marshal
1:8704338:      * @param dataIn the data input stream to build the object from
1:8704338:      * @throws IOException
1:8704338:      */
1:4821b9d:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
1:8704338:         super.tightUnmarshal(wireFormat, o, dataIn, bs);
1:8704338: 
1:8704338:     }
1:8704338: 
1:8704338: 
1:8704338:     /**
1:8704338:      * Write the booleans that this object uses to a BooleanStream
1:8704338:      */
1:8704338:     public int tightMarshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1:8704338: 
1:8704338:         int rc = super.tightMarshal1(wireFormat, o, bs);
1:8704338: 
1:8704338:         return rc + 0;
1:8704338:     }
1:8704338: 
1:8704338:     /**
1:8704338:      * Write a object instance to data output stream
1:8704338:      *
1:8704338:      * @param o the instance to be marshaled
1:8704338:      * @param dataOut the output stream
1:8704338:      * @throws IOException thrown if an error occurs
1:8704338:      */
1:4821b9d:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs) throws IOException {
1:8704338:         super.tightMarshal2(wireFormat, o, dataOut, bs);
1:8704338: 
1:8704338:     }
1:8704338: 
1:8704338:     /**
1:8704338:      * Un-marshal an object instance from the data input stream
1:8704338:      *
1:8704338:      * @param o the object to un-marshal
1:8704338:      * @param dataIn the data input stream to build the object from
1:8704338:      * @throws IOException
1:8704338:      */
1:4821b9d:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn) throws IOException {
1:8704338:         super.looseUnmarshal(wireFormat, o, dataIn);
1:8704338: 
1:8704338:     }
1:8704338: 
1:8704338: 
1:8704338:     /**
1:8704338:      * Write the booleans that this object uses to a BooleanStream
1:8704338:      */
1:4821b9d:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutput dataOut) throws IOException {
1:8704338: 
1:8704338:         super.looseMarshal(wireFormat, o, dataOut);
1:8704338: 
1:8704338:     }
1:8704338: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.DataStructure;
1: import org.apache.activemq.command.LastPartialCommand;
1: import org.apache.activemq.openwire.BooleanStream;
1: import org.apache.activemq.openwire.OpenWireFormat;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Robert Davies
-------------------------------------------------------------------------------
commit:4821b9d
/////////////////////////////////////////////////////////////////////////
1: import java.io.DataInput;
1: import java.io.DataOutput;
/////////////////////////////////////////////////////////////////////////
1:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn) throws IOException {
/////////////////////////////////////////////////////////////////////////
1:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutput dataOut) throws IOException {
author:James Strachan
-------------------------------------------------------------------------------
commit:f3ef1a9
/////////////////////////////////////////////////////////////////////////
1: public class LastPartialCommandMarshaller extends PartialCommandMarshaller {
commit:c2fc820
/////////////////////////////////////////////////////////////////////////
0: public class LastPartialCommandMarshaller extends BaseCommandMarshaller {
commit:8704338
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.openwire.v1;
1: 
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
1: import java.io.IOException;
1: 
0: import org.apache.activemq.openwire.*;
0: import org.apache.activemq.command.*;
1: 
1: 
1: 
1: /**
1:  * Marshalling code for Open Wire Format for LastPartialCommandMarshaller
1:  *
1:  *
1:  * NOTE!: This file is auto generated - do not modify!
1:  *        if you need to make a change, please see the modify the groovy scripts in the
1:  *        under src/gram/script and then use maven openwire:generate to regenerate 
1:  *        this file.
1:  *
0:  * @version $Revision$
1:  */
0: public class LastPartialCommandMarshaller extends PartialCommandMarshaller {
1: 
1:     /**
1:      * Return the type of Data Structure we marshal
1:      * @return short representation of the type data structure
1:      */
1:     public byte getDataStructureType() {
1:         return LastPartialCommand.DATA_STRUCTURE_TYPE;
1:     }
1:     
1:     /**
1:      * @return a new object instance
1:      */
1:     public DataStructure createObject() {
1:         return new LastPartialCommand();
1:     }
1: 
1:     /**
1:      * Un-marshal an object instance from the data input stream
1:      *
1:      * @param o the object to un-marshal
1:      * @param dataIn the data input stream to build the object from
1:      * @throws IOException
1:      */
0:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInputStream dataIn, BooleanStream bs) throws IOException {
1:         super.tightUnmarshal(wireFormat, o, dataIn, bs);
1: 
1:     }
1: 
1: 
1:     /**
1:      * Write the booleans that this object uses to a BooleanStream
1:      */
1:     public int tightMarshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1: 
1:         int rc = super.tightMarshal1(wireFormat, o, bs);
1: 
1:         return rc + 0;
1:     }
1: 
1:     /**
1:      * Write a object instance to data output stream
1:      *
1:      * @param o the instance to be marshaled
1:      * @param dataOut the output stream
1:      * @throws IOException thrown if an error occurs
1:      */
0:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutputStream dataOut, BooleanStream bs) throws IOException {
1:         super.tightMarshal2(wireFormat, o, dataOut, bs);
1: 
1:     }
1: 
1:     /**
1:      * Un-marshal an object instance from the data input stream
1:      *
1:      * @param o the object to un-marshal
1:      * @param dataIn the data input stream to build the object from
1:      * @throws IOException
1:      */
0:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInputStream dataIn) throws IOException {
1:         super.looseUnmarshal(wireFormat, o, dataIn);
1: 
1:     }
1: 
1: 
1:     /**
1:      * Write the booleans that this object uses to a BooleanStream
1:      */
0:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutputStream dataOut) throws IOException {
1: 
1:         super.looseMarshal(wireFormat, o, dataOut);
1: 
1:     }
1: }
============================================================================