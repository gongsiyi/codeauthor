1:4f108ce: /**
1:4f108ce:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4f108ce:  * contributor license agreements.  See the NOTICE file distributed with
1:4f108ce:  * this work for additional information regarding copyright ownership.
1:4f108ce:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4f108ce:  * (the "License"); you may not use this file except in compliance with
1:4f108ce:  * the License.  You may obtain a copy of the License at
1:4f108ce:  *
1:4f108ce:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4f108ce:  *
1:4f108ce:  * Unless required by applicable law or agreed to in writing, software
1:4f108ce:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4f108ce:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4f108ce:  * See the License for the specific language governing permissions and
1:4f108ce:  * limitations under the License.
1:4f108ce:  */
1:6e5f231: package org.apache.activemq.broker.region.policy;
1:6e5f231: 
1:6e5f231: import org.apache.activemq.command.Message;
1:6e5f231: import org.slf4j.Logger;
1:6e5f231: import org.slf4j.LoggerFactory;
1:6e5f231: 
1:6e5f231: /**
1:6e5f231:  * A {@link DeadLetterStrategy} where each destination has its own individual
1:6e5f231:  * DLQ using the subject naming hierarchy.
1:6e5f231:  *
1:6e5f231:  * @org.apache.xbean.XBean element="discarding" description="Dead Letter Strategy that discards all messages"
1:6e5f231:  *
1:6e5f231:  */
1:6e5f231: public class DiscardingDeadLetterStrategy extends SharedDeadLetterStrategy {
1:6e5f231: 
1:6e5f231:     private static final Logger LOG = LoggerFactory.getLogger(DiscardingDeadLetterStrategy.class);
1:6e5f231: 
1:6e5f231:     @Override
1:6e5f231:     public boolean isSendToDeadLetterQueue(Message message) {
1:6e5f231:         boolean result = false;
1:e1bbde7:         LOG.debug("Discarding message sent to DLQ: {}, dest: {}", message.getMessageId(), message.getDestination());
1:6e5f231:         return result;
2:6e5f231:     }
1:6e5f231: }
============================================================================
author:gtully
-------------------------------------------------------------------------------
commit:4f108ce
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Timothy Bish
-------------------------------------------------------------------------------
commit:e1bbde7
/////////////////////////////////////////////////////////////////////////
1:         LOG.debug("Discarding message sent to DLQ: {}, dest: {}", message.getMessageId(), message.getDestination());
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:6e5f231
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.broker.region.policy;
1: 
1: import org.apache.activemq.command.Message;
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: /**
1:  * A {@link DeadLetterStrategy} where each destination has its own individual
1:  * DLQ using the subject naming hierarchy.
1:  *
1:  * @org.apache.xbean.XBean element="discarding" description="Dead Letter Strategy that discards all messages"
1:  *
1:  */
1: public class DiscardingDeadLetterStrategy extends SharedDeadLetterStrategy {
1: 
1:     private static final Logger LOG = LoggerFactory.getLogger(DiscardingDeadLetterStrategy.class);
1: 
1:     @Override
1:     public boolean isSendToDeadLetterQueue(Message message) {
1:         boolean result = false;
0:         if (LOG.isDebugEnabled()) {
0:             LOG.debug("Discarding message sent to DLQ: " + message.getMessageId() + ", dest: " + message.getDestination());
1:         }
1:         return result;
1:     }
1: }
============================================================================