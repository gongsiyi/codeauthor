1:583d849: /**
1:583d849:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:583d849:  * contributor license agreements.  See the NOTICE file distributed with
1:583d849:  * this work for additional information regarding copyright ownership.
1:583d849:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:583d849:  * (the "License"); you may not use this file except in compliance with
1:583d849:  * the License.  You may obtain a copy of the License at
1:583d849:  *
1:583d849:  *      http://www.apache.org/licenses/LICENSE-2.0
1:583d849:  *
1:583d849:  * Unless required by applicable law or agreed to in writing, software
1:583d849:  * distributed under the License is distributed on an "AS IS" BASIS,
1:583d849:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:583d849:  * See the License for the specific language governing permissions and
1:583d849:  * limitations under the License.
1:583d849:  */
1:2844322: package org.apache.activemq.bugs;
2:2844322: 
1:2844322: 
1:2844322: import static org.junit.Assert.*;
1:2844322: 
1:2844322: import javax.jms.Connection;
1:2844322: import javax.jms.ConnectionFactory;
1:2844322: import javax.jms.Destination;
1:2844322: import javax.jms.MessageConsumer;
1:2844322: import javax.jms.MessageProducer;
1:2844322: import javax.jms.Session;
1:2844322: import javax.jms.TextMessage;
1:2844322: 
1:2844322: import org.apache.activemq.ActiveMQConnectionFactory;
1:2844322: import org.apache.activemq.command.ActiveMQQueue;
1:2844322: import org.junit.Test;
1:2844322: 
1:2844322: public class AMQ2383Test {
1:2844322: 
1:2844322:     @Test
1:2844322:     public void activeMQTest() throws Exception {
1:2844322:         Destination dest = ActiveMQQueue.createDestination("testQueue", ActiveMQQueue.QUEUE_TYPE);
1:2844322:         ConnectionFactory factory = new ActiveMQConnectionFactory(
1:2844322:                 "vm://localhost?broker.useJmx=false&broker.persistent=false");
1:2844322:         Connection producerConnection = factory.createConnection();
1:2844322:         producerConnection.start();
1:2844322:         Connection consumerConnection = factory.createConnection();
1:2844322:         consumerConnection.start();
1:2844322: 
1:2844322:         Session producerSession = producerConnection.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:2844322:         MessageProducer producer = producerSession.createProducer(dest);
1:2844322:         TextMessage sentMsg = producerSession.createTextMessage("test...");
1:2844322:         producer.send(sentMsg);
1:2844322:         producerSession.close();
1:2844322: 
1:2844322:         Session consumerSession = consumerConnection.createSession(true, Session.SESSION_TRANSACTED);
1:2844322:         MessageConsumer consumer = consumerSession.createConsumer(dest);
1:2844322:         TextMessage receivedMsg = (TextMessage)consumer.receive();
1:2844322:         consumerSession.rollback();
1:2844322:         consumerSession.close();
1:2844322: 
1:2844322:         assertEquals(sentMsg, receivedMsg);
1:2844322: 
1:2844322:         producerConnection.close();
1:2844322:         consumerConnection.close();
1:2844322:     }
1:2844322: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
commit:f0ed5d0
/////////////////////////////////////////////////////////////////////////
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:583d849
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
author:Gary Tully
-------------------------------------------------------------------------------
commit:2844322
/////////////////////////////////////////////////////////////////////////
1: package org.apache.activemq.bugs;
1: 
1: 
1: import static org.junit.Assert.*;
1: 
1: import javax.jms.Connection;
1: import javax.jms.ConnectionFactory;
1: import javax.jms.Destination;
1: import javax.jms.MessageConsumer;
1: import javax.jms.MessageProducer;
1: import javax.jms.Session;
1: import javax.jms.TextMessage;
1: 
1: import org.apache.activemq.ActiveMQConnectionFactory;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.junit.Test;
1: 
1: public class AMQ2383Test {
1: 
1:     @Test
1:     public void activeMQTest() throws Exception {
1:         Destination dest = ActiveMQQueue.createDestination("testQueue", ActiveMQQueue.QUEUE_TYPE);
1:         ConnectionFactory factory = new ActiveMQConnectionFactory(
1:                 "vm://localhost?broker.useJmx=false&broker.persistent=false");
1:         Connection producerConnection = factory.createConnection();
1:         producerConnection.start();
1:         Connection consumerConnection = factory.createConnection();
1:         consumerConnection.start();
1: 
1:         Session producerSession = producerConnection.createSession(false, Session.AUTO_ACKNOWLEDGE);
1:         MessageProducer producer = producerSession.createProducer(dest);
1:         TextMessage sentMsg = producerSession.createTextMessage("test...");
1:         producer.send(sentMsg);
1:         producerSession.close();
1: 
1:         Session consumerSession = consumerConnection.createSession(true, Session.SESSION_TRANSACTED);
1:         MessageConsumer consumer = consumerSession.createConsumer(dest);
1:         TextMessage receivedMsg = (TextMessage)consumer.receive();
1:         consumerSession.rollback();
1:         consumerSession.close();
1: 
1:         assertEquals(sentMsg, receivedMsg);
1: 
0:         Thread.sleep(10000);
1: 
1:         producerConnection.close();
1:         consumerConnection.close();
1:     }
1: }
============================================================================