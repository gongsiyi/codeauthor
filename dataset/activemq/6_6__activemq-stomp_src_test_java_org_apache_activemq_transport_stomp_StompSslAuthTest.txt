2:f866f77: /**
1:f866f77:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f866f77:  * contributor license agreements.  See the NOTICE file distributed with
1:f866f77:  * this work for additional information regarding copyright ownership.
1:f866f77:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f866f77:  * (the "License"); you may not use this file except in compliance with
1:f866f77:  * the License.  You may obtain a copy of the License at
1:e0d2641:  *
1:f866f77:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0bbc0ac:  *
1:f866f77:  * Unless required by applicable law or agreed to in writing, software
1:f866f77:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f866f77:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f866f77:  * See the License for the specific language governing permissions and
1:f866f77:  * limitations under the License.
2:f866f77:  */
1:f866f77: package org.apache.activemq.transport.stomp;
13:f866f77: 
1:f866f77: import java.io.IOException;
1:f866f77: import java.net.Socket;
1:03349fe: 
1:f866f77: import javax.net.SocketFactory;
1:f866f77: import javax.net.ssl.SSLSocketFactory;
1:f866f77: 
1:540a66b: import org.apache.activemq.ActiveMQConnectionFactory;
1:1236bbf: import org.apache.activemq.broker.BrokerPlugin;
1:1236bbf: import org.apache.activemq.broker.TransportConnector;
1:1236bbf: import org.apache.activemq.security.JaasCertificateAuthenticationPlugin;
1:f866f77: 
1:f866f77: public class StompSslAuthTest extends StompTest {
1:4bff78d: 
1:1236bbf:     @Override
1:540a66b:     protected boolean isUseTcpConnector() {
1:540a66b:         return false;
1:540a66b:     }
1:4bff78d: 
1:540a66b:     @Override
1:540a66b:     protected boolean isUseSslConnector() {
1:540a66b:         return true;
1:f866f77:     }
1:4bff78d: 
1:1236bbf:     @Override
1:1236bbf:     protected BrokerPlugin configureAuthentication() throws Exception {
1:1236bbf:         JaasCertificateAuthenticationPlugin plugin = new JaasCertificateAuthenticationPlugin();
1:1236bbf:         plugin.setConfiguration("cert-login");
1:1236bbf:         return plugin;
1:1236bbf:     }
1:1236bbf: 
1:1236bbf:     @Override
1:1236bbf:     protected Socket createSocket() throws IOException {
1:f866f77:         SocketFactory factory = SSLSocketFactory.getDefault();
1:1236bbf:         return factory.createSocket("127.0.0.1", this.sslPort);
1:1236bbf:     }
1:1236bbf: 
1:1236bbf:     @Override
1:540a66b:     public void addOpenWireConnector() throws Exception {
1:1e31df9:         TransportConnector connector = brokerService.addConnector("ssl://0.0.0.0:0?transport.needClientAuth=true");
1:69fad2a:         cf = new ActiveMQConnectionFactory(connector.getPublishableConnectString() + "?socket.verifyHostName=false");
1:1236bbf:     }
1:1236bbf: 
1:1236bbf:     @Override
1:540a66b:     protected String getAdditionalConfig() {
1:69fad2a:         return "?needClientAuth=true&transport.verifyHostName=false";
1:f866f77:     }
1:4bff78d: 
1:f866f77:     // NOOP - These operations handled by jaas cert login module
1:1236bbf:     @Override
1:e0d2641:     public void testSubscribeWithReceiptNotAuthorized() throws Exception {
1:e0d2641:     }
1:e0d2641: 
1:1236bbf:     @Override
1:f866f77:     public void testConnectNotAuthenticatedWrongUser() throws Exception {
1:f866f77:     }
1:4bff78d: 
1:1236bbf:     @Override
1:f866f77:     public void testConnectNotAuthenticatedWrongPassword() throws Exception {
1:f866f77:     }
1:4bff78d: 
1:1236bbf:     @Override
1:f866f77:     public void testSendNotAuthorized() throws Exception {
1:f866f77:     }
1:4bff78d: 
1:1236bbf:     @Override
1:f866f77:     public void testSubscribeNotAuthorized() throws Exception {
1:f866f77:     }
1:4bff78d: 
1:1236bbf:     @Override
1:4bff78d:     public void testJMSXUserIDIsSetInMessage() throws Exception {
1:4bff78d:     }
1:4bff78d: 
1:1236bbf:     @Override
1:4bff78d:     public void testJMSXUserIDIsSetInStompMessage() throws Exception {
1:4bff78d:     }
1:e0d2641: 
1:1236bbf:     @Override
1:03349fe:     public void testClientSetMessageIdIsIgnored() throws Exception {
1:03349fe:     }
1:f866f77: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:1e31df9
/////////////////////////////////////////////////////////////////////////
1:         TransportConnector connector = brokerService.addConnector("ssl://0.0.0.0:0?transport.needClientAuth=true");
commit:69fad2a
/////////////////////////////////////////////////////////////////////////
0:         TransportConnector connector = brokerService.addConnector("ssl://0.0.0.0:0?transport.needClientAuth=true&transport.verifyHostName=false");
1:         cf = new ActiveMQConnectionFactory(connector.getPublishableConnectString() + "?socket.verifyHostName=false");
1:         return "?needClientAuth=true&transport.verifyHostName=false";
author:Timothy Bish
-------------------------------------------------------------------------------
commit:540a66b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.ActiveMQConnectionFactory;
/////////////////////////////////////////////////////////////////////////
1:     protected boolean isUseTcpConnector() {
1:         return false;
1:     }
1:     @Override
1:     protected boolean isUseSslConnector() {
1:         return true;
/////////////////////////////////////////////////////////////////////////
1:     public void addOpenWireConnector() throws Exception {
0:         TransportConnector connector = brokerService.addConnector("ssl://0.0.0.0:0?needClientAuth=true");
0:         cf = new ActiveMQConnectionFactory(connector.getPublishableConnectString());
1:     protected String getAdditionalConfig() {
0:         return "?needClientAuth=true";
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:1236bbf
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.BrokerPlugin;
1: import org.apache.activemq.broker.TransportConnector;
1: import org.apache.activemq.security.JaasCertificateAuthenticationPlugin;
1:     @Override
0:     public void setUp() throws Exception {
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     protected BrokerPlugin configureAuthentication() throws Exception {
1:         JaasCertificateAuthenticationPlugin plugin = new JaasCertificateAuthenticationPlugin();
1:         plugin.setConfiguration("cert-login");
1:         return plugin;
1:     }
1: 
1:     @Override
1:     protected Socket createSocket() throws IOException {
1:         return factory.createSocket("127.0.0.1", this.sslPort);
1:     }
1: 
1:     @Override
0:     protected void addOpenWireConnector() throws Exception {
0:         TransportConnector connector = brokerService.addConnector(
0:                 "ssl://0.0.0.0:0?needClientAuth=true");
0:         jmsUri = connector.getPublishableConnectString();
1:     }
1: 
1:     @Override
0:     protected void addStompConnector() throws Exception {
0:         TransportConnector connector = brokerService.addConnector(
0:                 "stomp+ssl://0.0.0.0:"+port+"?needClientAuth=true");
0:         sslPort = connector.getConnectUri().getPort();
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1:     @Override
1:     @Override
commit:e0d2641
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:     public void testSubscribeWithReceiptNotAuthorized() throws Exception {
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
commit:4bff78d
/////////////////////////////////////////////////////////////////////////
1: 
1: 
0:         // Test mutual authentication on both stomp and standard ssl transports
0:         bindAddress = "stomp+ssl://localhost:61612";
1: 
0:         System.setProperty("javax.net.ssl.keyStoreType", "jks");
/////////////////////////////////////////////////////////////////////////
1: 
1: 
1: 
1: 
1: 
1:     public void testJMSXUserIDIsSetInMessage() throws Exception {
1:     }
1: 
1:     public void testJMSXUserIDIsSetInStompMessage() throws Exception {
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:03349fe
/////////////////////////////////////////////////////////////////////////
1:     
1:     public void testClientSetMessageIdIsIgnored() throws Exception {
1:     }
author:Robert Davies
-------------------------------------------------------------------------------
commit:f866f77
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
0:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.stomp;
1: 
1: import java.io.IOException;
1: import java.net.Socket;
0: import java.net.URI;
1: 
1: import javax.net.SocketFactory;
1: import javax.net.ssl.SSLSocketFactory;
1: 
1: 
1: 
1: /**
0:  * @version $Revision: 1461 $
1:  */
1: public class StompSslAuthTest extends StompTest {
1: 
1:     
0:     protected void setUp() throws Exception {
1:     	
0:     	// Test mutual authentication on both stomp and standard ssl transports    	   
0:     	bindAddress = "stomp+ssl://localhost:61612";
0:         confUri = "xbean:org/apache/activemq/transport/stomp/sslstomp-mutual-auth-broker.xml";
0:         jmsUri="ssl://localhost:61617";
1:         
0:         System.setProperty("javax.net.ssl.trustStore", "src/test/resources/client.keystore");
0:         System.setProperty("javax.net.ssl.trustStorePassword", "password");
0:         System.setProperty("javax.net.ssl.trustStoreType", "jks");
0:         System.setProperty("javax.net.ssl.keyStore", "src/test/resources/server.keystore");
0:         System.setProperty("javax.net.ssl.keyStorePassword", "password");
0:         System.setProperty("javax.net.ssl.keyStoreType", "jks");  
0:         //System.setProperty("javax.net.debug","ssl,handshake");
0:         super.setUp();
1:     }
1: 
0:     protected Socket createSocket(URI connectUri) throws IOException {
1:         SocketFactory factory = SSLSocketFactory.getDefault();
0:         return factory.createSocket("127.0.0.1", connectUri.getPort());
1:     }
1:    
1:     // NOOP - These operations handled by jaas cert login module
1:     public void testConnectNotAuthenticatedWrongUser() throws Exception {
1:     }
1:     
1:     public void testConnectNotAuthenticatedWrongPassword() throws Exception {
1:     }
1:     
1:     public void testSendNotAuthorized() throws Exception {
1:     }
1:     
1:     public void testSubscribeNotAuthorized() throws Exception {
1:     }
1:     
1: }
============================================================================