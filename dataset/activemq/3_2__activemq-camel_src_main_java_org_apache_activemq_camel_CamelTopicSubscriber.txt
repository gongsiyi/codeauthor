1:fc00993: /**
1:4102acc:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4102acc:  * contributor license agreements.  See the NOTICE file distributed with
1:4102acc:  * this work for additional information regarding copyright ownership.
1:4102acc:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4102acc:  * (the "License"); you may not use this file except in compliance with
1:4102acc:  * the License.  You may obtain a copy of the License at
1:4102acc:  *
1:4102acc:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4102acc:  *
1:4102acc:  * Unless required by applicable law or agreed to in writing, software
1:4102acc:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4102acc:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4102acc:  * See the License for the specific language governing permissions and
1:4102acc:  * limitations under the License.
1:4102acc:  */
1:4102acc: package org.apache.activemq.camel;
2:4102acc: 
1:4102acc: import javax.jms.JMSException;
1:4102acc: import javax.jms.Topic;
1:4102acc: import javax.jms.TopicSubscriber;
1:4102acc: 
1:74a7a8b: import org.apache.activemq.ActiveMQSession;
1:74a7a8b: import org.apache.camel.Endpoint;
1:74a7a8b: 
1:4102acc: /**
1:4102acc:  * A JMS {@link javax.jms.TopicSubscriber} which consumes message exchanges from a
1:4102acc:  * Camel {@link Endpoint}
1:b0c2a40:  *
1:4102acc:  * 
1:4102acc:  */
1:4102acc: public class CamelTopicSubscriber extends CamelMessageConsumer implements TopicSubscriber {
1:4102acc: 
1:4102acc:     public CamelTopicSubscriber(CamelTopic destination, Endpoint endpoint, ActiveMQSession session, String name, String messageSelector, boolean noLocal) {
1:4102acc:         super(destination, endpoint, session, messageSelector, noLocal);
1:4102acc:     }
1:4102acc: 
1:4102acc:     /**
1:4102acc:      * Gets the <CODE>Topic</CODE> associated with this subscriber.
1:4102acc:      *
1:4102acc:      * @return this subscriber's <CODE>Topic</CODE>
1:4102acc:      * @throws javax.jms.JMSException if the JMS provider fails to get the topic for this topic
1:4102acc:      *                                subscriber due to some internal error.
1:4102acc:      */
1:4102acc: 
1:4102acc:     public Topic getTopic() throws JMSException {
1:4102acc:         checkClosed();
1:4102acc:         return (Topic) super.getDestination();
1:4102acc:     }
1:4102acc: 
1:4102acc:     /**
1:4102acc:      * Gets the <CODE>NoLocal</CODE> attribute for this subscriber. The
1:4102acc:      * default value for this attribute is false.
1:4102acc:      *
1:4102acc:      * @return true if locally published messages are being inhibited
1:4102acc:      * @throws JMSException if the JMS provider fails to get the <CODE>NoLocal
1:4102acc:      *                      </CODE> attribute for this topic subscriber due to some
1:4102acc:      *                      internal error.
1:4102acc:      */
1:4102acc: 
1:4102acc:     public boolean getNoLocal() throws JMSException {
1:4102acc:         checkClosed();
1:4102acc:         return super.isNoLocal();
1:4102acc:     }
1:4102acc: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: /**
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.ActiveMQSession;
1: import org.apache.camel.Endpoint;
1: 
author:Guillaume Nodet
-------------------------------------------------------------------------------
commit:702e2a0
author:James Strachan
-------------------------------------------------------------------------------
commit:4102acc
/////////////////////////////////////////////////////////////////////////
0: /*
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.camel;
1: 
0: import org.apache.activemq.ActiveMQSession;
0: import org.apache.camel.Endpoint;
1: 
1: import javax.jms.JMSException;
1: import javax.jms.Topic;
1: import javax.jms.TopicSubscriber;
1: 
1: /**
1:  * A JMS {@link javax.jms.TopicSubscriber} which consumes message exchanges from a
1:  * Camel {@link Endpoint}
1:  *
0:  * @version $Revision: $
1:  */
1: public class CamelTopicSubscriber extends CamelMessageConsumer implements TopicSubscriber {
1: 
1:     public CamelTopicSubscriber(CamelTopic destination, Endpoint endpoint, ActiveMQSession session, String name, String messageSelector, boolean noLocal) {
1:         super(destination, endpoint, session, messageSelector, noLocal);
1:     }
1: 
1:     /**
1:      * Gets the <CODE>Topic</CODE> associated with this subscriber.
1:      *
1:      * @return this subscriber's <CODE>Topic</CODE>
1:      * @throws javax.jms.JMSException if the JMS provider fails to get the topic for this topic
1:      *                                subscriber due to some internal error.
1:      */
1: 
1:     public Topic getTopic() throws JMSException {
1:         checkClosed();
1:         return (Topic) super.getDestination();
1:     }
1: 
1:     /**
1:      * Gets the <CODE>NoLocal</CODE> attribute for this subscriber. The
1:      * default value for this attribute is false.
1:      *
1:      * @return true if locally published messages are being inhibited
1:      * @throws JMSException if the JMS provider fails to get the <CODE>NoLocal
1:      *                      </CODE> attribute for this topic subscriber due to some
1:      *                      internal error.
1:      */
1: 
1:     public boolean getNoLocal() throws JMSException {
1:         checkClosed();
1:         return super.isNoLocal();
1:     }
1: }
============================================================================