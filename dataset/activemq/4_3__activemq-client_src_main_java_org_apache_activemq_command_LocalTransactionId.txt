1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.command;
6:d29ca2a: 
1:d29ca2a: /**
1:4afa5d6:  * @openwire:marshaller code="111"
1:b0c2a40:  * 
1:d29ca2a:  */
1:230a86c: public class LocalTransactionId extends TransactionId implements Comparable<LocalTransactionId> {
1:d29ca2a: 
1:230a86c:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.ACTIVEMQ_LOCAL_TRANSACTION_ID;
1:d29ca2a: 
1:d29ca2a:     protected ConnectionId connectionId;
1:c59246d:     protected long value;
1:d29ca2a: 
1:d29ca2a:     private transient String transactionKey;
1:d29ca2a:     private transient int hashCode;
1:d29ca2a: 
1:230a86c:     public LocalTransactionId() {
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     public LocalTransactionId(ConnectionId connectionId, long transactionId) {
1:230a86c:         this.connectionId = connectionId;
1:230a86c:         this.value = transactionId;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public byte getDataStructureType() {
1:d29ca2a:         return DATA_STRUCTURE_TYPE;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public boolean isXATransaction() {
1:d29ca2a:         return false;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public boolean isLocalTransaction() {
1:d29ca2a:         return true;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public String getTransactionKey() {
1:230a86c:         if (transactionKey == null) {
1:230a86c:             transactionKey = "TX:" + connectionId + ":" + value;
1:d29ca2a:         }
1:d29ca2a:         return transactionKey;
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     public String toString() {
1:d29ca2a:         return getTransactionKey();
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public int hashCode() {
1:230a86c:         if (hashCode == 0) {
1:c59246d:             hashCode = connectionId.hashCode() ^ (int)value;
1:d29ca2a:         }
1:d29ca2a:         return hashCode;
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     public boolean equals(Object o) {
1:ecf89a6:         if (this == o) {
1:d29ca2a:             return true;
1:ecf89a6:         }
1:ecf89a6:         if (o == null || o.getClass() != LocalTransactionId.class) {
1:d29ca2a:             return false;
1:ecf89a6:         }
1:230a86c:         LocalTransactionId tx = (LocalTransactionId)o;
1:230a86c:         return value == tx.value && connectionId.equals(tx.connectionId);
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     /**
1:0859f30:      * @param o
1:0859f30:      * @return
1:0859f30:      * @see java.lang.Comparable#compareTo(java.lang.Object)
1:0859f30:      */
1:230a86c:     public int compareTo(LocalTransactionId o) {
1:0859f30:         int result = connectionId.compareTo(o.connectionId);
1:230a86c:         if (result == 0) {
1:230a86c:             result = (int)(value - o.value);
1:0859f30:         }
1:0859f30:         return result;
1:0859f30:     }
1:230a86c: 
1:0859f30:     /**
1:d29ca2a:      * @openwire:property version=1
1:d29ca2a:      */
1:c59246d:     public long getValue() {
1:c59246d:         return value;
1:d29ca2a:     }
1:230a86c: 
1:c59246d:     public void setValue(long transactionId) {
1:c59246d:         this.value = transactionId;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @openwire:property version=1 cache=true
1:d29ca2a:      */
1:d29ca2a:     public ConnectionId getConnectionId() {
1:d29ca2a:         return connectionId;
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     public void setConnectionId(ConnectionId connectionId) {
1:d29ca2a:         this.connectionId = connectionId;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:ecf89a6
/////////////////////////////////////////////////////////////////////////
1:         if (this == o) {
1:         }
1:         if (o == null || o.getClass() != LocalTransactionId.class) {
1:         }
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: public class LocalTransactionId extends TransactionId implements Comparable<LocalTransactionId> {
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.ACTIVEMQ_LOCAL_TRANSACTION_ID;
/////////////////////////////////////////////////////////////////////////
1:     public LocalTransactionId() {
1: 
1:         this.connectionId = connectionId;
1:         this.value = transactionId;
/////////////////////////////////////////////////////////////////////////
1:         if (transactionKey == null) {
1:             transactionKey = "TX:" + connectionId + ":" + value;
1: 
1:         if (hashCode == 0) {
1: 
0:         if (this == o)
0:         if (o == null || o.getClass() != LocalTransactionId.class)
1:         LocalTransactionId tx = (LocalTransactionId)o;
1:         return value == tx.value && connectionId.equals(tx.connectionId);
1: 
1:     public int compareTo(LocalTransactionId o) {
1:         if (result == 0) {
1:             result = (int)(value - o.value);
1: 
1: 
/////////////////////////////////////////////////////////////////////////
1: 
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:c59246d
/////////////////////////////////////////////////////////////////////////
1:     protected long value;
/////////////////////////////////////////////////////////////////////////
0:         this.value=transactionId;
/////////////////////////////////////////////////////////////////////////
0:             transactionKey = "TX:"+connectionId+":"+value;
/////////////////////////////////////////////////////////////////////////
1:             hashCode = connectionId.hashCode() ^ (int)value;
/////////////////////////////////////////////////////////////////////////
0:         return value==tx.value 
1:     public long getValue() {
1:         return value;
1:     public void setValue(long transactionId) {
1:         this.value = transactionId;
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: /**
0:  * @openwire:marshaller
0:  * @version $Revision: 1.11 $
1:  */
0: public class LocalTransactionId extends TransactionId {
1: 
0:     public static final byte DATA_STRUCTURE_TYPE=CommandTypes.ACTIVEMQ_LOCAL_TRANSACTION_ID;
1: 
1:     protected ConnectionId connectionId;
0:     protected long transactionId;
1: 
1:     private transient String transactionKey;
1:     private transient int hashCode;
1: 
0:     public LocalTransactionId() {        
1:     }
1:     
1:     public LocalTransactionId(ConnectionId connectionId, long transactionId) {
0:         this.connectionId=connectionId;
0:         this.transactionId=transactionId;
1:     }
1: 
1:     public byte getDataStructureType() {
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
1:     public boolean isXATransaction() {
1:         return false;
1:     }
1: 
1:     public boolean isLocalTransaction() {
1:         return true;
1:     }
1: 
1:     public String getTransactionKey() {
0:         if( transactionKey==null ) {
0:             transactionKey = "TX:"+connectionId+":"+transactionId;
1:         }
1:         return transactionKey;
1:     }
1:     
1:     public String toString() {
1:         return getTransactionKey();
1:     }
1: 
1:     public int hashCode() {
0:         if( hashCode == 0 ) {
0:             hashCode = connectionId.hashCode() ^ (int)transactionId;
1:         }
1:         return hashCode;
1:     }
1:     
1:     public boolean equals(Object o) {
0:         if( this == o )
1:             return true;
0:         if( o == null || o.getClass()!=LocalTransactionId.class )
1:             return false;
0:         LocalTransactionId tx = (LocalTransactionId) o;
0:         return transactionId==tx.transactionId 
0:                 && connectionId.equals(tx.connectionId);
1:     }
1:     
1:     /**
1:      * @openwire:property version=1
1:      */
0:     public long getTransactionId() {
0:         return transactionId;
1:     }
0:     public void setTransactionId(long transactionId) {
0:         this.transactionId = transactionId;
1:     }
1: 
1:     /**
1:      * @openwire:property version=1 cache=true
1:      */
1:     public ConnectionId getConnectionId() {
1:         return connectionId;
1:     }
1:     public void setConnectionId(ConnectionId connectionId) {
1:         this.connectionId = connectionId;
1:     }
1: 
1: 
1: }
author:Robert Davies
-------------------------------------------------------------------------------
commit:0859f30
/////////////////////////////////////////////////////////////////////////
0: public class LocalTransactionId extends TransactionId implements Comparable<LocalTransactionId>{
/////////////////////////////////////////////////////////////////////////
0:     
1:     /**
1:      * @param o
1:      * @return
1:      * @see java.lang.Comparable#compareTo(java.lang.Object)
1:      */
0:     public int compareTo(LocalTransactionId o){
1:         int result = connectionId.compareTo(o.connectionId);
0:         if (result==0) {
0:             result = (int) (value - o.value);
1:         }
1:         return result;
1:     }
/////////////////////////////////////////////////////////////////////////
0:     
0: 
author:James Strachan
-------------------------------------------------------------------------------
commit:4afa5d6
/////////////////////////////////////////////////////////////////////////
1:  * @openwire:marshaller code="111"
============================================================================