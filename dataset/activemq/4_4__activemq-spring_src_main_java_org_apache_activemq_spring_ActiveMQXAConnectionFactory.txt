1:fc00993: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:09fab74:  *
1:0094ff7:  *      http://www.apache.org/licenses/LICENSE-2.0
1:b0c2a40:  *
1:0094ff7:  * Unless required by applicable law or agreed to in writing, software
1:0094ff7:  * distributed under the License is distributed on an "AS IS" BASIS,
1:0094ff7:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:0094ff7:  * See the License for the specific language governing permissions and
1:0094ff7:  * limitations under the License.
1:0094ff7:  */
1:0094ff7: package org.apache.activemq.spring;
3:0094ff7: 
1:09fab74: import javax.annotation.PostConstruct;
1:174fe15: 
1:0094ff7: import org.springframework.beans.factory.BeanNameAware;
1:0094ff7: 
1:0094ff7: /**
1:0094ff7:  * A <a href="http://www.springframework.org/">Spring</a> enhanced XA connection
1:0094ff7:  * factory which will automatically use the Spring bean name as the clientIDPrefix property
1:0094ff7:  * so that connections created have client IDs related to your Spring.xml file for
1:3013c20:  * easier comprehension from <a href="http://activemq.apache.org/jmx.html">JMX</a>.
1:174fe15:  *
1:b3001f2:  * @org.apache.xbean.XBean element="xaConnectionFactory"
1:0094ff7:  */
1:09fab74: public class ActiveMQXAConnectionFactory extends org.apache.activemq.ActiveMQXAConnectionFactory implements BeanNameAware {
1:0094ff7: 
1:0094ff7:     private String beanName;
1:0094ff7:     private boolean useBeanNameAsClientIdPrefix;
1:174fe15: 
1:174fe15:     /**
1:174fe15:      * JSR-250 callback wrapper; converts checked exceptions to runtime exceptions
1:174fe15:      *
1:174fe15:      * delegates to afterPropertiesSet, done to prevent backwards incompatible signature change.
1:174fe15:      */
1:174fe15:     @PostConstruct
1:174fe15:     private void postConstruct() {
1:174fe15:         try {
1:174fe15:             afterPropertiesSet();
1:174fe15:         } catch (Exception ex) {
1:174fe15:             throw new RuntimeException(ex);
1:174fe15:         }
1:174fe15:     }
1:174fe15: 
1:09fab74:     /**
1:b3001f2:      *
1:09fab74:      * @throws Exception
1:09fab74:      * @org.apache.xbean.InitMethod
1:09fab74:      */
1:0094ff7:     public void afterPropertiesSet() throws Exception {
1:0094ff7:         if (isUseBeanNameAsClientIdPrefix() && getClientIDPrefix() == null) {
1:0094ff7:             setClientIDPrefix(getBeanName());
1:0094ff7:         }
1:0094ff7:     }
1:0094ff7: 
1:0094ff7:     public String getBeanName() {
1:0094ff7:         return beanName;
1:0094ff7:     }
1:174fe15: 
1:174fe15:     @Override
1:0094ff7:     public void setBeanName(String beanName) {
1:0094ff7:         this.beanName = beanName;
1:0094ff7:     }
1:0094ff7: 
1:0094ff7:     public boolean isUseBeanNameAsClientIdPrefix() {
1:0094ff7:         return useBeanNameAsClientIdPrefix;
1:0094ff7:     }
1:0094ff7: 
1:0094ff7:     public void setUseBeanNameAsClientIdPrefix(boolean useBeanNameAsClientIdPrefix) {
1:0094ff7:         this.useBeanNameAsClientIdPrefix = useBeanNameAsClientIdPrefix;
1:0094ff7:     }
1:0094ff7: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:174fe15
/////////////////////////////////////////////////////////////////////////
1: 
/////////////////////////////////////////////////////////////////////////
1:  *
1: 
1:     /**
1:      * JSR-250 callback wrapper; converts checked exceptions to runtime exceptions
1:      *
1:      * delegates to afterPropertiesSet, done to prevent backwards incompatible signature change.
1:      */
1:     @PostConstruct
1:     private void postConstruct() {
1:         try {
1:             afterPropertiesSet();
1:         } catch (Exception ex) {
1:             throw new RuntimeException(ex);
1:         }
1:     }
1: 
/////////////////////////////////////////////////////////////////////////
1: 
1:     @Override
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:cd19db2
commit:58aca86
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: /**
commit:b3001f2
/////////////////////////////////////////////////////////////////////////
1:  * @org.apache.xbean.XBean element="xaConnectionFactory"
1:  * 
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:David Jencks
-------------------------------------------------------------------------------
commit:09fab74
/////////////////////////////////////////////////////////////////////////
1: import javax.annotation.PostConstruct;
/////////////////////////////////////////////////////////////////////////
1: public class ActiveMQXAConnectionFactory extends org.apache.activemq.ActiveMQXAConnectionFactory implements BeanNameAware {
1:     /**
1:      *
1:      * @throws Exception
1:      * @org.apache.xbean.InitMethod
1:      */
0:     @PostConstruct
author:James Strachan
-------------------------------------------------------------------------------
commit:3013c20
/////////////////////////////////////////////////////////////////////////
1:  * easier comprehension from <a href="http://activemq.apache.org/jmx.html">JMX</a>.
commit:0094ff7
/////////////////////////////////////////////////////////////////////////
0: /*
0:  * Copyright 2005-2006 The Apache Software Foundation.
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.spring;
1: 
1: import org.springframework.beans.factory.BeanNameAware;
0: import org.springframework.beans.factory.InitializingBean;
1: 
1: /**
1:  * A <a href="http://www.springframework.org/">Spring</a> enhanced XA connection
1:  * factory which will automatically use the Spring bean name as the clientIDPrefix property
1:  * so that connections created have client IDs related to your Spring.xml file for
0:  * easier comprehension from <a href="http://incubator.apache.org/activemq/jmx.html">JMX</a>.
0:  * 
0:  * @version $Revision: $
1:  */
0: public class ActiveMQXAConnectionFactory extends org.apache.activemq.ActiveMQXAConnectionFactory implements InitializingBean, BeanNameAware {
1: 
1:     private String beanName;
1:     private boolean useBeanNameAsClientIdPrefix;
1:     
1:     public void afterPropertiesSet() throws Exception {
1:         if (isUseBeanNameAsClientIdPrefix() && getClientIDPrefix() == null) {
1:             setClientIDPrefix(getBeanName());
1:         }
1:     }
1: 
1:     public String getBeanName() {
1:         return beanName;
1:     }
1:     
1:     public void setBeanName(String beanName) {
1:         this.beanName = beanName;
1:     }
1: 
1:     public boolean isUseBeanNameAsClientIdPrefix() {
1:         return useBeanNameAsClientIdPrefix;
1:     }
1: 
1:     public void setUseBeanNameAsClientIdPrefix(boolean useBeanNameAsClientIdPrefix) {
1:         this.useBeanNameAsClientIdPrefix = useBeanNameAsClientIdPrefix;
1:     }
1: }
============================================================================