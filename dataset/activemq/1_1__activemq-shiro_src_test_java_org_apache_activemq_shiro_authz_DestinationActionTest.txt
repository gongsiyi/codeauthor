1:f9451e5: /**
1:f9451e5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f9451e5:  * contributor license agreements.  See the NOTICE file distributed with
1:f9451e5:  * this work for additional information regarding copyright ownership.
1:f9451e5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f9451e5:  * (the "License"); you may not use this file except in compliance with
1:f9451e5:  * the License.  You may obtain a copy of the License at
1:f9451e5:  *
1:f9451e5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f9451e5:  *
1:f9451e5:  * Unless required by applicable law or agreed to in writing, software
1:f9451e5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f9451e5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f9451e5:  * See the License for the specific language governing permissions and
1:f9451e5:  * limitations under the License.
1:f9451e5:  */
1:f9451e5: package org.apache.activemq.shiro.authz;
1:f9451e5: 
1:f9451e5: import org.apache.activemq.broker.ConnectionContext;
1:f9451e5: import org.apache.activemq.command.ActiveMQQueue;
1:f9451e5: import org.junit.Test;
1:f9451e5: 
1:f9451e5: import static org.junit.Assert.*;
1:f9451e5: 
1:f9451e5: /**
1:f9451e5:  * @since 5.10.0
1:f9451e5:  */
1:f9451e5: public class DestinationActionTest {
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalArgumentException.class)
1:f9451e5:     public void testNullConnectionContext() {
1:f9451e5:         new DestinationAction(null, new ActiveMQQueue("foo"), "create");
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalArgumentException.class)
1:f9451e5:     public void testNullDestination() {
1:f9451e5:         new DestinationAction(new ConnectionContext(), null, "create");
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test(expected = IllegalArgumentException.class)
1:f9451e5:     public void testNullVerb() {
1:f9451e5:         new DestinationAction(new ConnectionContext(), new ActiveMQQueue("foo"), null);
1:f9451e5:     }
1:f9451e5: 
1:f9451e5:     @Test
1:f9451e5:     public void testDefault() {
1:f9451e5:         ConnectionContext ctx = new ConnectionContext();
1:f9451e5:         ActiveMQQueue queue = new ActiveMQQueue("foo");
1:f9451e5:         String verb = "create";
1:f9451e5: 
1:f9451e5:         DestinationAction action = new DestinationAction(ctx, queue, verb);
1:f9451e5:         assertSame(ctx, action.getConnectionContext());
1:f9451e5:         assertSame(queue, action.getDestination());
1:f9451e5:         assertEquals(verb, action.getVerb());
1:f9451e5:         assertEquals("create destination: queue://foo", action.toString());
1:f9451e5:     }
1:f9451e5: 
1:f9451e5: }
============================================================================
author:Les Hazlewood
-------------------------------------------------------------------------------
commit:f9451e5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.shiro.authz;
1: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.junit.Test;
1: 
1: import static org.junit.Assert.*;
1: 
1: /**
1:  * @since 5.10.0
1:  */
1: public class DestinationActionTest {
1: 
1:     @Test(expected = IllegalArgumentException.class)
1:     public void testNullConnectionContext() {
1:         new DestinationAction(null, new ActiveMQQueue("foo"), "create");
1:     }
1: 
1:     @Test(expected = IllegalArgumentException.class)
1:     public void testNullDestination() {
1:         new DestinationAction(new ConnectionContext(), null, "create");
1:     }
1: 
1:     @Test(expected = IllegalArgumentException.class)
1:     public void testNullVerb() {
1:         new DestinationAction(new ConnectionContext(), new ActiveMQQueue("foo"), null);
1:     }
1: 
1:     @Test
1:     public void testDefault() {
1:         ConnectionContext ctx = new ConnectionContext();
1:         ActiveMQQueue queue = new ActiveMQQueue("foo");
1:         String verb = "create";
1: 
1:         DestinationAction action = new DestinationAction(ctx, queue, verb);
1:         assertSame(ctx, action.getConnectionContext());
1:         assertSame(queue, action.getDestination());
1:         assertEquals(verb, action.getVerb());
1:         assertEquals("create destination: queue://foo", action.toString());
1:     }
1: 
1: }
============================================================================