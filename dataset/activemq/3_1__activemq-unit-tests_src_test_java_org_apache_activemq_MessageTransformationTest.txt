1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
14:d29ca2a: 
1:d29ca2a: package org.apache.activemq;
1:d29ca2a: 
1:d29ca2a: import javax.jms.BytesMessage;
1:d29ca2a: import javax.jms.MapMessage;
1:d29ca2a: import javax.jms.ObjectMessage;
1:d29ca2a: import javax.jms.Queue;
1:d29ca2a: import javax.jms.StreamMessage;
1:d29ca2a: import javax.jms.TemporaryQueue;
1:d29ca2a: import javax.jms.TemporaryTopic;
1:d29ca2a: import javax.jms.TextMessage;
1:d29ca2a: import javax.jms.Topic;
1:d29ca2a: 
1:d29ca2a: import junit.framework.TestCase;
1:d29ca2a: import org.apache.activemq.command.ActiveMQBytesMessage;
1:d29ca2a: import org.apache.activemq.command.ActiveMQDestination;
1:d29ca2a: import org.apache.activemq.command.ActiveMQMapMessage;
1:d29ca2a: import org.apache.activemq.command.ActiveMQMessage;
1:d29ca2a: import org.apache.activemq.command.ActiveMQObjectMessage;
1:d29ca2a: import org.apache.activemq.command.ActiveMQQueue;
1:d29ca2a: import org.apache.activemq.command.ActiveMQStreamMessage;
1:d29ca2a: import org.apache.activemq.command.ActiveMQTempQueue;
1:d29ca2a: import org.apache.activemq.command.ActiveMQTempTopic;
1:d29ca2a: import org.apache.activemq.command.ActiveMQTextMessage;
1:d29ca2a: import org.apache.activemq.command.ActiveMQTopic;
1:d29ca2a: 
1:d29ca2a: public class MessageTransformationTest extends TestCase {
1:230a86c: 
1:d29ca2a:     /**
1:d29ca2a:      * Sets up the resources of the unit test.
1:230a86c:      * 
1:d29ca2a:      * @throws Exception
1:d29ca2a:      */
1:d29ca2a:     protected void setUp() throws Exception {
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * Clears up the resources used in the unit test.
1:d29ca2a:      */
1:d29ca2a:     protected void tearDown() throws Exception {
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     /**
1:230a86c:      * Tests transforming destinations into ActiveMQ's destination
1:230a86c:      * implementation.
1:d29ca2a:      */
1:d29ca2a:     public void testTransformDestination() throws Exception {
1:230a86c:         assertTrue("Transforming a TempQueue destination to an ActiveMQTempQueue",
1:230a86c:                    ActiveMQMessageTransformation.transformDestination((TemporaryQueue)new ActiveMQTempQueue()) instanceof ActiveMQTempQueue);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a TempTopic destination to an ActiveMQTempTopic",
1:230a86c:                    ActiveMQMessageTransformation.transformDestination((TemporaryTopic)new ActiveMQTempTopic()) instanceof ActiveMQTempTopic);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a Queue destination to an ActiveMQQueue", ActiveMQMessageTransformation.transformDestination((Queue)new ActiveMQQueue()) instanceof ActiveMQQueue);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a Topic destination to an ActiveMQTopic", ActiveMQMessageTransformation.transformDestination((Topic)new ActiveMQTopic()) instanceof ActiveMQTopic);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a Destination to an ActiveMQDestination",
1:230a86c:                    ActiveMQMessageTransformation.transformDestination((ActiveMQDestination)new ActiveMQTopic()) instanceof ActiveMQDestination);
1:d29ca2a:     }
1:230a86c: 
1:d29ca2a:     /**
1:230a86c:      * Tests transforming messages into ActiveMQ's message implementation.
1:d29ca2a:      */
1:d29ca2a:     public void testTransformMessage() throws Exception {
1:230a86c:         assertTrue("Transforming a BytesMessage message into an ActiveMQBytesMessage", ActiveMQMessageTransformation.transformMessage((BytesMessage)new ActiveMQBytesMessage(),
1:230a86c:                                                                                                                                       null) instanceof ActiveMQBytesMessage);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a MapMessage message to an ActiveMQMapMessage",
1:230a86c:                    ActiveMQMessageTransformation.transformMessage((MapMessage)new ActiveMQMapMessage(), null) instanceof ActiveMQMapMessage);
1:230a86c: 
1:230a86c:         assertTrue("Transforming an ObjectMessage message to an ActiveMQObjectMessage", ActiveMQMessageTransformation.transformMessage((ObjectMessage)new ActiveMQObjectMessage(),
1:230a86c:                                                                                                                                        null) instanceof ActiveMQObjectMessage);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a StreamMessage message to an ActiveMQStreamMessage", ActiveMQMessageTransformation.transformMessage((StreamMessage)new ActiveMQStreamMessage(),
1:230a86c:                                                                                                                                       null) instanceof ActiveMQStreamMessage);
1:230a86c: 
1:230a86c:         assertTrue("Transforming a TextMessage message to an ActiveMQTextMessage",
1:230a86c:                    ActiveMQMessageTransformation.transformMessage((TextMessage)new ActiveMQTextMessage(), null) instanceof ActiveMQTextMessage);
1:230a86c: 
1:230a86c:         assertTrue("Transforming an ActiveMQMessage message to an ActiveMQMessage",
1:230a86c:                    ActiveMQMessageTransformation.transformMessage(new ActiveMQMessage(), null) instanceof ActiveMQMessage);
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:f9bec8f
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1: 
1:      * 
/////////////////////////////////////////////////////////////////////////
1: 
1:      * Tests transforming destinations into ActiveMQ's destination
1:      * implementation.
1:         assertTrue("Transforming a TempQueue destination to an ActiveMQTempQueue",
1:                    ActiveMQMessageTransformation.transformDestination((TemporaryQueue)new ActiveMQTempQueue()) instanceof ActiveMQTempQueue);
1: 
1:         assertTrue("Transforming a TempTopic destination to an ActiveMQTempTopic",
1:                    ActiveMQMessageTransformation.transformDestination((TemporaryTopic)new ActiveMQTempTopic()) instanceof ActiveMQTempTopic);
1: 
1:         assertTrue("Transforming a Queue destination to an ActiveMQQueue", ActiveMQMessageTransformation.transformDestination((Queue)new ActiveMQQueue()) instanceof ActiveMQQueue);
1: 
1:         assertTrue("Transforming a Topic destination to an ActiveMQTopic", ActiveMQMessageTransformation.transformDestination((Topic)new ActiveMQTopic()) instanceof ActiveMQTopic);
1: 
1:         assertTrue("Transforming a Destination to an ActiveMQDestination",
1:                    ActiveMQMessageTransformation.transformDestination((ActiveMQDestination)new ActiveMQTopic()) instanceof ActiveMQDestination);
1: 
1:      * Tests transforming messages into ActiveMQ's message implementation.
1:         assertTrue("Transforming a BytesMessage message into an ActiveMQBytesMessage", ActiveMQMessageTransformation.transformMessage((BytesMessage)new ActiveMQBytesMessage(),
1:                                                                                                                                       null) instanceof ActiveMQBytesMessage);
1: 
1:         assertTrue("Transforming a MapMessage message to an ActiveMQMapMessage",
1:                    ActiveMQMessageTransformation.transformMessage((MapMessage)new ActiveMQMapMessage(), null) instanceof ActiveMQMapMessage);
1: 
1:         assertTrue("Transforming an ObjectMessage message to an ActiveMQObjectMessage", ActiveMQMessageTransformation.transformMessage((ObjectMessage)new ActiveMQObjectMessage(),
1:                                                                                                                                        null) instanceof ActiveMQObjectMessage);
1: 
1:         assertTrue("Transforming a StreamMessage message to an ActiveMQStreamMessage", ActiveMQMessageTransformation.transformMessage((StreamMessage)new ActiveMQStreamMessage(),
1:                                                                                                                                       null) instanceof ActiveMQStreamMessage);
1: 
1:         assertTrue("Transforming a TextMessage message to an ActiveMQTextMessage",
1:                    ActiveMQMessageTransformation.transformMessage((TextMessage)new ActiveMQTextMessage(), null) instanceof ActiveMQTextMessage);
1: 
1:         assertTrue("Transforming an ActiveMQMessage message to an ActiveMQMessage",
1:                    ActiveMQMessageTransformation.transformMessage(new ActiveMQMessage(), null) instanceof ActiveMQMessage);
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq;
1: 
1: import javax.jms.BytesMessage;
1: import javax.jms.MapMessage;
1: import javax.jms.ObjectMessage;
1: import javax.jms.Queue;
1: import javax.jms.StreamMessage;
1: import javax.jms.TemporaryQueue;
1: import javax.jms.TemporaryTopic;
1: import javax.jms.TextMessage;
1: import javax.jms.Topic;
1: 
1: import junit.framework.TestCase;
1: 
0: import org.apache.activemq.ActiveMQMessageTransformation;
1: import org.apache.activemq.command.ActiveMQBytesMessage;
1: import org.apache.activemq.command.ActiveMQDestination;
1: import org.apache.activemq.command.ActiveMQMapMessage;
1: import org.apache.activemq.command.ActiveMQMessage;
1: import org.apache.activemq.command.ActiveMQObjectMessage;
1: import org.apache.activemq.command.ActiveMQQueue;
1: import org.apache.activemq.command.ActiveMQStreamMessage;
1: import org.apache.activemq.command.ActiveMQTempQueue;
1: import org.apache.activemq.command.ActiveMQTempTopic;
1: import org.apache.activemq.command.ActiveMQTextMessage;
1: import org.apache.activemq.command.ActiveMQTopic;
1: 
1: public class MessageTransformationTest extends TestCase {
1: 	
1:     /**
1:      * Sets up the resources of the unit test.
1:      *
1:      * @throws Exception
1:      */
1:     protected void setUp() throws Exception {
1:     }
1: 
1:     /**
1:      * Clears up the resources used in the unit test.
1:      */
1:     protected void tearDown() throws Exception {
1:     }
1:     
1:     /**
0:      * Tests transforming destinations into ActiveMQ's destination implementation. 
1:      */
1:     public void testTransformDestination() throws Exception {
0:     	assertTrue("Transforming a TempQueue destination to an ActiveMQTempQueue", ActiveMQMessageTransformation.transformDestination((TemporaryQueue)new ActiveMQTempQueue()) instanceof ActiveMQTempQueue);
1:     	
0:     	assertTrue("Transforming a TempTopic destination to an ActiveMQTempTopic", ActiveMQMessageTransformation.transformDestination((TemporaryTopic)new ActiveMQTempTopic()) instanceof ActiveMQTempTopic);
1:     	
0:     	assertTrue("Transforming a Queue destination to an ActiveMQQueue", ActiveMQMessageTransformation.transformDestination((Queue)new ActiveMQQueue()) instanceof ActiveMQQueue);
1:     	
0:     	assertTrue("Transforming a Topic destination to an ActiveMQTopic", ActiveMQMessageTransformation.transformDestination((Topic)new ActiveMQTopic()) instanceof ActiveMQTopic);
1:     	
0:     	assertTrue("Transforming a Destination to an ActiveMQDestination", ActiveMQMessageTransformation.transformDestination((ActiveMQDestination)new ActiveMQTopic()) instanceof ActiveMQDestination);
1:     }
1:     
1:     /**
0:      * Tests transforming messages into ActiveMQ's message implementation. 
1:      */
1:     public void testTransformMessage() throws Exception {
0:     	assertTrue("Transforming a BytesMessage message into an ActiveMQBytesMessage",ActiveMQMessageTransformation.transformMessage((BytesMessage)new ActiveMQBytesMessage(), null) instanceof ActiveMQBytesMessage);
1:     	
0:     	assertTrue("Transforming a MapMessage message to an ActiveMQMapMessage",ActiveMQMessageTransformation.transformMessage((MapMessage)new ActiveMQMapMessage(), null) instanceof ActiveMQMapMessage);
1:     	
0:     	assertTrue("Transforming an ObjectMessage message to an ActiveMQObjectMessage",ActiveMQMessageTransformation.transformMessage((ObjectMessage)new ActiveMQObjectMessage(), null) instanceof ActiveMQObjectMessage);
1:     	
0:     	assertTrue("Transforming a StreamMessage message to an ActiveMQStreamMessage",ActiveMQMessageTransformation.transformMessage((StreamMessage)new ActiveMQStreamMessage(), null) instanceof ActiveMQStreamMessage);
1:     	
0:     	assertTrue("Transforming a TextMessage message to an ActiveMQTextMessage",ActiveMQMessageTransformation.transformMessage((TextMessage)new ActiveMQTextMessage(), null) instanceof ActiveMQTextMessage);
1:     	
0:         assertTrue("Transforming an ActiveMQMessage message to an ActiveMQMessage",ActiveMQMessageTransformation.transformMessage(new ActiveMQMessage(), null) instanceof ActiveMQMessage);
1:     }
1: }
============================================================================