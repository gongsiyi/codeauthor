1:a2d4eb5: /**
1:a2d4eb5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:a2d4eb5:  * contributor license agreements.  See the NOTICE file distributed with
1:a2d4eb5:  * this work for additional information regarding copyright ownership.
1:a2d4eb5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:a2d4eb5:  * (the "License"); you may not use this file except in compliance with
1:a2d4eb5:  * the License.  You may obtain a copy of the License at
1:a2d4eb5:  *
1:a2d4eb5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a2d4eb5:  *
1:a2d4eb5:  * Unless required by applicable law or agreed to in writing, software
1:a2d4eb5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a2d4eb5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a2d4eb5:  * See the License for the specific language governing permissions and
1:a2d4eb5:  * limitations under the License.
1:a2d4eb5:  */
1:a2d4eb5: package org.apache.activemq.web;
1:a2d4eb5: 
1:b026971: import org.apache.activemq.broker.util.AuditLogEntry;
1:1f9cc43: import org.apache.activemq.broker.util.AuditLogService;
1:8bf987b: import org.slf4j.Logger;
1:8bf987b: import org.slf4j.LoggerFactory;
1:a2d4eb5: 
1:a2d4eb5: import javax.servlet.*;
1:a2d4eb5: import javax.servlet.http.HttpServletRequest;
1:a2d4eb5: import java.io.IOException;
1:a2d4eb5: 
1:a2d4eb5: public class AuditFilter implements Filter {
1:a2d4eb5: 
1:8bf987b:     private static final Logger LOG = LoggerFactory.getLogger("org.apache.activemq.audit");
1:a2d4eb5: 
1:a2d4eb5:     private boolean audit;
1:1f9cc43:     private AuditLogService auditLog;
1:a2d4eb5: 
1:a2d4eb5:     public void init(FilterConfig filterConfig) throws ServletException {
1:10a403b:         audit = "true".equalsIgnoreCase(System.getProperty("org.apache.activemq.audit"));
1:7b1cdbc:         if (audit) {
1:7b1cdbc:             auditLog = AuditLogService.getAuditLog();
1:7b1cdbc:         }
2:a2d4eb5:     }
1:a2d4eb5: 
1:a2d4eb5:     public void destroy() {
1:a2d4eb5:     }
1:a2d4eb5: 
1:a2d4eb5:     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
1:a2d4eb5:         if (audit && request instanceof HttpServletRequest) {
1:a2d4eb5: 
1:a2d4eb5:             HttpServletRequest http = (HttpServletRequest)request;
1:b026971:             AuditLogEntry entry = new HttpAuditLogEntry();
1:a2d4eb5:             if (http.getRemoteUser() != null) {
1:b026971:                 entry.setUser(http.getRemoteUser());
1:a2d4eb5:             }
1:b026971:             entry.setTimestamp(System.currentTimeMillis());
1:b026971:             entry.setOperation(http.getRequestURI());
1:b026971:             entry.setRemoteAddr(http.getRemoteAddr());
1:b026971:             entry.getParameters().put("params", http.getParameterMap());
1:b026971:             auditLog.log(entry);
1:a2d4eb5:         }
1:a2d4eb5:         chain.doFilter(request, response);
1:a2d4eb5:     }
1:a2d4eb5: }
============================================================================
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:8bf987b
/////////////////////////////////////////////////////////////////////////
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
/////////////////////////////////////////////////////////////////////////
1:     private static final Logger LOG = LoggerFactory.getLogger("org.apache.activemq.audit");
commit:b026971
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.util.AuditLogEntry;
/////////////////////////////////////////////////////////////////////////
1:             AuditLogEntry entry = new HttpAuditLogEntry();
1:                 entry.setUser(http.getRemoteUser());
1:             entry.setTimestamp(System.currentTimeMillis());
1:             entry.setOperation(http.getRequestURI());
1:             entry.setRemoteAddr(http.getRemoteAddr());
1:             entry.getParameters().put("params", http.getParameterMap());
1:             auditLog.log(entry);
commit:7b1cdbc
/////////////////////////////////////////////////////////////////////////
1:         if (audit) {
1:             auditLog = AuditLogService.getAuditLog();
1:         }
commit:1f9cc43
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.broker.util.AuditLogService;
/////////////////////////////////////////////////////////////////////////
1:     private AuditLogService auditLog;
0:         auditLog = new AuditLogService();
commit:10a403b
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.broker.util.AuditLog;
0: import org.apache.activemq.broker.util.DefaultAuditLog;
/////////////////////////////////////////////////////////////////////////
0:     private AuditLog auditLog;
1:         audit = "true".equalsIgnoreCase(System.getProperty("org.apache.activemq.audit"));
0:         auditLog = DefaultAuditLog.getAuditLog();
/////////////////////////////////////////////////////////////////////////
0:             auditLog.log(user + " requested " + http.getRequestURI() + " [" + formattedParams + "] from " + http.getRemoteAddr());
commit:a2d4eb5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.web;
1: 
0: import org.apache.commons.logging.Log;
0: import org.apache.commons.logging.LogFactory;
1: 
1: import javax.servlet.*;
1: import javax.servlet.http.HttpServletRequest;
1: import java.io.IOException;
0: import java.util.Arrays;
0: import java.util.Enumeration;
1: 
1: public class AuditFilter implements Filter {
1: 
0:     private static final Log LOG = LogFactory.getLog("org.apache.activemq.audit");
1: 
1:     private boolean audit;
1: 
1:     public void init(FilterConfig filterConfig) throws ServletException {
0:        audit = "true".equalsIgnoreCase(System.getProperty("org.apache.activemq.audit"));
1:     }
1: 
1:     public void destroy() {
1:     }
1: 
1:     public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
1:         if (audit && request instanceof HttpServletRequest) {
1: 
1:             HttpServletRequest http = (HttpServletRequest)request;
0:             Enumeration params = http.getParameterNames();
0:             String formattedParams = "";
0:             while (params.hasMoreElements()) {
0:                 String paramName = (String)params.nextElement();
0:                 String paramValue = http.getParameter(paramName);
0:                 formattedParams += paramName + "='" + paramValue + "' ";
1:             }
0:             String user = "anonymous";
1:             if (http.getRemoteUser() != null) {
0:                 user = http.getRemoteUser();
1:             }
0:             LOG.info(user + " requested " + http.getRequestURI() + " [" + formattedParams + "] from " + http.getRemoteAddr());
1:         }
1:         chain.doFilter(request, response);
1:     }
1: }
============================================================================