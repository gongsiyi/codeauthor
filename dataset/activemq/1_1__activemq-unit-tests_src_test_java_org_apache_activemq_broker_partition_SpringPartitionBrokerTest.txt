1:21edf2b: /**
1:21edf2b:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:21edf2b:  * contributor license agreements.  See the NOTICE file distributed with
1:21edf2b:  * this work for additional information regarding copyright ownership.
1:21edf2b:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:21edf2b:  * (the "License"); you may not use this file except in compliance with
1:21edf2b:  * the License.  You may obtain a copy of the License at
1:21edf2b:  *
1:21edf2b:  *      http://www.apache.org/licenses/LICENSE-2.0
1:21edf2b:  *
1:21edf2b:  * Unless required by applicable law or agreed to in writing, software
1:21edf2b:  * distributed under the License is distributed on an "AS IS" BASIS,
1:21edf2b:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:21edf2b:  * See the License for the specific language governing permissions and
1:21edf2b:  * limitations under the License.
1:21edf2b:  */
1:21edf2b: package org.apache.activemq.broker.partition;
1:21edf2b: 
1:21edf2b: import junit.framework.TestCase;
1:21edf2b: import org.apache.activemq.broker.BrokerFactory;
1:21edf2b: import org.apache.activemq.broker.BrokerService;
1:21edf2b: import org.apache.activemq.partition.PartitionBrokerPlugin;
1:21edf2b: import org.apache.activemq.partition.dto.Partitioning;
1:21edf2b: 
1:21edf2b: /**
1:21edf2b:  */
1:21edf2b: public class SpringPartitionBrokerTest extends TestCase {
1:21edf2b: 
1:21edf2b:     public void testCreatePartitionBroker() throws Exception {
1:21edf2b: 
1:21edf2b:         BrokerService broker = BrokerFactory.createBroker("xbean:activemq-partition.xml");
1:21edf2b:         assertEquals(1, broker.getPlugins().length);
1:21edf2b:         PartitionBrokerPlugin plugin = (PartitionBrokerPlugin)broker.getPlugins()[0];
1:21edf2b:         Partitioning config = plugin.getConfig();
1:21edf2b:         assertEquals(2,  config.getBrokers().size());
1:21edf2b: 
1:21edf2b:         Object o;
1:21edf2b:         String json = "{\n" +
1:21edf2b:         "  \"by_client_id\":{\n" +
1:21edf2b:         "    \"client1\":{\"ids\":[\"broker1\"]},\n" +
1:21edf2b:         "    \"client2\":{\"ids\":[\"broker1\",\"broker2\"]}\n" +
1:21edf2b:         "  },\n" +
1:21edf2b:         "  \"brokers\":{\n" +
1:21edf2b:         "    \"broker1\":\"tcp://localhost:61616\",\n" +
1:21edf2b:         "    \"broker2\":\"tcp://localhost:61616\"\n" +
1:21edf2b:         "  }\n" +
1:21edf2b:         "}";
1:21edf2b:         Partitioning expected = Partitioning.MAPPER.readValue(json, Partitioning.class);
1:21edf2b:         assertEquals(expected.toString(), config.toString());
1:21edf2b: 
1:21edf2b:     }
1:21edf2b: 
1:21edf2b: }
============================================================================
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:21edf2b
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.partition;
1: 
1: import junit.framework.TestCase;
1: import org.apache.activemq.broker.BrokerFactory;
1: import org.apache.activemq.broker.BrokerService;
1: import org.apache.activemq.partition.PartitionBrokerPlugin;
1: import org.apache.activemq.partition.dto.Partitioning;
1: 
1: /**
1:  */
1: public class SpringPartitionBrokerTest extends TestCase {
1: 
1:     public void testCreatePartitionBroker() throws Exception {
1: 
1:         BrokerService broker = BrokerFactory.createBroker("xbean:activemq-partition.xml");
1:         assertEquals(1, broker.getPlugins().length);
1:         PartitionBrokerPlugin plugin = (PartitionBrokerPlugin)broker.getPlugins()[0];
1:         Partitioning config = plugin.getConfig();
1:         assertEquals(2,  config.getBrokers().size());
1: 
1:         Object o;
1:         String json = "{\n" +
1:         "  \"by_client_id\":{\n" +
1:         "    \"client1\":{\"ids\":[\"broker1\"]},\n" +
1:         "    \"client2\":{\"ids\":[\"broker1\",\"broker2\"]}\n" +
1:         "  },\n" +
1:         "  \"brokers\":{\n" +
1:         "    \"broker1\":\"tcp://localhost:61616\",\n" +
1:         "    \"broker2\":\"tcp://localhost:61616\"\n" +
1:         "  }\n" +
1:         "}";
1:         Partitioning expected = Partitioning.MAPPER.readValue(json, Partitioning.class);
1:         assertEquals(expected.toString(), config.toString());
1: 
1:     }
1: 
1: }
============================================================================