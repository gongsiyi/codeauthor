1:f81a790: /**
1:f81a790:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:f81a790:  * contributor license agreements.  See the NOTICE file distributed with
1:f81a790:  * this work for additional information regarding copyright ownership.
1:f81a790:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:f81a790:  * (the "License"); you may not use this file except in compliance with
1:f81a790:  * the License.  You may obtain a copy of the License at
1:f81a790:  *
1:f81a790:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f81a790:  *
1:f81a790:  * Unless required by applicable law or agreed to in writing, software
1:f81a790:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f81a790:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f81a790:  * See the License for the specific language governing permissions and
1:f81a790:  * limitations under the License.
1:f81a790:  */
1:f81a790: package org.apache.activemq.jndi;
2:f81a790: 
1:f81a790: import java.util.Hashtable;
1:f81a790: 
1:f81a790: import javax.naming.Context;
1:f81a790: 
1:f81a790: public class ActiveMQWASInitialContextFactoryTest extends JNDITestSupport {
1:f81a790: 
1:f81a790:     @SuppressWarnings("unchecked")
1:f81a790:     public void testTransformEnvironment() {
1:f81a790:         Hashtable<Object, Object> originalEnvironment = new Hashtable<Object, Object>();
1:f81a790:         originalEnvironment.put("java.naming.connectionFactoryNames", "ConnectionFactory");
1:f81a790:         originalEnvironment.put("java.naming.topic.jms.systemMessageTopic", "jms/systemMessageTopic");
1:f81a790:         originalEnvironment.put(Context.PROVIDER_URL, "tcp://localhost:61616;tcp://localhost:61617");
1:f81a790:         originalEnvironment.put("non-string", Integer.valueOf(43));
1:b6347ee:         originalEnvironment.put("java.naming.queue", "jms/systemMessageQueue");
1:f81a790: 
1:f81a790:         Hashtable<Object, Object> transformedEnvironment = new ActiveMQWASInitialContextFactory().transformEnvironment(originalEnvironment);
1:f81a790:         assertEquals("ConnectionFactory", "ConnectionFactory", transformedEnvironment.get("connectionFactoryNames"));
1:f81a790:         assertEquals("topic.jm", "jms/systemMessageTopic", transformedEnvironment.get("topic.jms/systemMessageTopic"));
1:f81a790:         assertEquals("java.naming.provider.url", "tcp://localhost:61616,tcp://localhost:61617", transformedEnvironment.get("java.naming.provider.url"));
1:f81a790:         assertNull("non-string", transformedEnvironment.get("non-string"));
1:f81a790: 
1:b6347ee:         assertEquals("queue", "jms/systemMessageQueue", transformedEnvironment.get("java.naming.queue"));
1:f81a790:     }
1:f81a790: 
1:f81a790: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
commit:f81a790
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.jndi;
1: 
1: import java.util.Hashtable;
1: 
1: import javax.naming.Context;
1: 
1: public class ActiveMQWASInitialContextFactoryTest extends JNDITestSupport {
1: 
1:     public void testTransformEnvironment() {
1: 
1:         Hashtable<Object, Object> originalEnvironment = new Hashtable<Object, Object>();
1:         originalEnvironment.put("java.naming.connectionFactoryNames", "ConnectionFactory");
1:         originalEnvironment.put("java.naming.topic.jms.systemMessageTopic", "jms/systemMessageTopic");
1:         originalEnvironment.put(Context.PROVIDER_URL, "tcp://localhost:61616;tcp://localhost:61617");
1:         originalEnvironment.put("non-string", Integer.valueOf(43));
1: 
1:         @SuppressWarnings("unchecked")
1:         Hashtable<Object, Object> transformedEnvironment = new ActiveMQWASInitialContextFactory().transformEnvironment(originalEnvironment);
1:         assertEquals("ConnectionFactory", "ConnectionFactory", transformedEnvironment.get("connectionFactoryNames"));
1:         assertEquals("topic.jm", "jms/systemMessageTopic", transformedEnvironment.get("topic.jms/systemMessageTopic"));
1:         assertEquals("java.naming.provider.url", "tcp://localhost:61616,tcp://localhost:61617", transformedEnvironment.get("java.naming.provider.url"));
1:         assertNull("non-string", transformedEnvironment.get("non-string"));
1:     }
1: 
1: }
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:b6347ee
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:     @SuppressWarnings("unchecked")
1:         originalEnvironment.put("java.naming.queue", "jms/systemMessageQueue");
0: 
1:         assertEquals("queue", "jms/systemMessageQueue", transformedEnvironment.get("java.naming.queue"));
============================================================================