1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
4:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.memory;
8:d29ca2a: 
1:d29ca2a: public class CacheEntry {
1:f812e34: 
1:f812e34:     public final Object key;
1:d29ca2a:     public final Object value;
1:f812e34: 
1:d29ca2a:     public CacheEntry next;
1:d29ca2a:     public CacheEntry previous;
1:d29ca2a:     public CacheEntryList owner;
1:f812e34: 
1:d29ca2a:     public CacheEntry(Object key, Object value) {
1:f812e34:         this.key = key;
1:d29ca2a:         this.value = value;
2:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     /**
1:d29ca2a:      * @return false if you are trying to remove the tail pointer.
1:d29ca2a:      */
1:d29ca2a:     public boolean remove() {
1:f812e34: 
1:d29ca2a:         // Cannot remove if this is a tail pointer.
1:d29ca2a:         // Or not linked.
1:ecf89a6:         if (owner == null || this.key == null || this.next == null) {
1:d29ca2a:             return false;
1:ecf89a6:         }
1:f812e34: 
1:f812e34:         synchronized (owner.tail) {
1:d29ca2a:             this.next.previous = this.previous;
1:d29ca2a:             this.previous.next = this.next;
1:d29ca2a:             this.owner = null;
1:ecf89a6:             this.next = null;
1:ecf89a6:             this.previous = null;
1:d29ca2a:         }
1:f812e34: 
1:d29ca2a:         return true;
1:86cbdfd:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Timothy Bish
-------------------------------------------------------------------------------
commit:5e05df1
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:ecf89a6
/////////////////////////////////////////////////////////////////////////
1:         if (owner == null || this.key == null || this.next == null) {
1:         }
1:             this.next = null;
1:             this.previous = null;
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1: 
1:     public final Object key;
1: 
1: 
1:         this.key = key;
/////////////////////////////////////////////////////////////////////////
1: 
0:         if (owner == null || this.key == null || this.next == null)
1: 
1:         synchronized (owner.tail) {
1: 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: }
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.memory;
1: 
1: public class CacheEntry {
1:     
0:     public final Object key;    
1:     public final Object value;
1:     
1:     public CacheEntry next;
1:     public CacheEntry previous;
1:     public CacheEntryList owner;
1:     
1:     public CacheEntry(Object key, Object value) {
0:         this.key=key;
1:         this.value = value;
1:     }
1: 
1:     /**
1:      * 
0:      * @param entry
1:      * @return false if you are trying to remove the tail pointer.
1:      */
1:     public boolean remove() {
1:                 
1:         // Cannot remove if this is a tail pointer.
1:         // Or not linked.
0:         if( owner==null || this.key==null || this.next==null )
1:             return false;
1:         
0:         synchronized( owner.tail ) {            
1:             this.next.previous = this.previous;
1:             this.previous.next = this.next;
1:             this.owner = null;
0:             this.next = this.previous = null;
1:         }
1:         
1:         return true;
1:     }
1: 
1: }
============================================================================