1:90b66ce: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
5:90b66ce:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0bbc0ac:  *
1:90b66ce:  * Unless required by applicable law or agreed to in writing, software
1:90b66ce:  * distributed under the License is distributed on an "AS IS" BASIS,
1:90b66ce:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:90b66ce:  * See the License for the specific language governing permissions and
1:90b66ce:  * limitations under the License.
1:90b66ce:  */
1:02538ed: 
1:90b66ce: package org.apache.activemq.web.tool;
5:90b66ce: 
1:f44c3d2: import org.apache.activemq.web.config.JspConfigurer;
1:e8a06c4: import org.eclipse.jetty.server.Server;
1:f44c3d2: import org.eclipse.jetty.server.handler.ContextHandlerCollection;
1:e8a06c4: import org.eclipse.jetty.webapp.WebAppContext;
1:90b66ce: 
1:90b66ce: /**
1:540dd5c:  * A simple bootstrap class for starting Jetty in your IDE using the local web
1:540dd5c:  * application.
1:f44c3d2:  *
1:f44c3d2:  *
1:90b66ce:  */
1:540dd5c: public final class Main {
1:540dd5c: 
1:90b66ce:     public static final int PORT = 8080;
1:90b66ce: 
1:90b66ce:     public static final String WEBAPP_DIR = "src/main/webapp";
1:90b66ce: 
1:90b66ce:     public static final String WEBAPP_CTX = "/";
1:90b66ce: 
1:540dd5c:     private Main() {
1:540dd5c:     }
1:540dd5c: 
1:90b66ce:     public static void main(String[] args) throws Exception {
1:540dd5c:         // now lets start the web server
1:90b66ce:         int port = PORT;
1:90b66ce:         if (args.length > 0) {
1:90b66ce:             String text = args[0];
1:90b66ce:             port = Integer.parseInt(text);
1:90b66ce:         }
1:f44c3d2: 
1:90b66ce:         System.out.println("Starting Web Server on port: " + port);
1:84c4b9d:         System.setProperty("jetty.port", "" + port);
1:bc2e2d9:         Server server = new Server(port);
1:90b66ce: 
1:02538ed:         //System.setProperty("webconsole.type","properties");
1:02538ed:         //System.setProperty("webconsole.jms.url","tcp://localhost:61616");
1:02538ed:         //System.setProperty("webconsole.jmx.url","service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root");
1:02538ed: 
1:90b66ce:         WebAppContext context = new WebAppContext();
1:f44c3d2:         ContextHandlerCollection handlers = new ContextHandlerCollection();
1:f44c3d2:         handlers.setHandlers(new WebAppContext[] {context});
1:f44c3d2: 
1:f44c3d2:         JspConfigurer.configureJetty(server, handlers);
1:f44c3d2: 
1:540dd5c: 
1:90b66ce:         context.setResourceBase(WEBAPP_DIR);
1:90b66ce:         context.setContextPath(WEBAPP_CTX);
1:90b66ce:         context.setServer(server);
1:f44c3d2:         server.setHandler(handlers);
1:90b66ce:         server.start();
1:540dd5c: 
1:90b66ce:         System.out.println();
1:90b66ce:         System.out.println("==============================================================================");
1:90b66ce:         System.out.println("Started the ActiveMQ Console: point your web browser at http://localhost:" + port + "/");
1:90b66ce:         System.out.println("==============================================================================");
1:90b66ce:         System.out.println();
1:90b66ce:     }
1:f44c3d2: 
1:f44c3d2: 
1:90b66ce: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:27a0743
/////////////////////////////////////////////////////////////////////////
commit:f44c3d2
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.web.config.JspConfigurer;
1: import org.eclipse.jetty.server.handler.ContextHandlerCollection;
1:  *
1:  *
/////////////////////////////////////////////////////////////////////////
1: 
0:         System.setProperty("activemq.conf", "/home/clshann/dev/git/apache-activemq/assembly/target/apache-activemq-5.13-SNAPSHOT/conf");
/////////////////////////////////////////////////////////////////////////
1:         ContextHandlerCollection handlers = new ContextHandlerCollection();
1:         handlers.setHandlers(new WebAppContext[] {context});
1: 
1:         JspConfigurer.configureJetty(server, handlers);
1: 
1:         server.setHandler(handlers);
/////////////////////////////////////////////////////////////////////////
1: 
1: 
author:Daniel Kulp
-------------------------------------------------------------------------------
commit:bc2e2d9
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:         Server server = new Server(port);
/////////////////////////////////////////////////////////////////////////
author:Claus Ibsen
-------------------------------------------------------------------------------
commit:84c4b9d
/////////////////////////////////////////////////////////////////////////
1:         System.setProperty("jetty.port", "" + port);
author:Gary Tully
-------------------------------------------------------------------------------
commit:02538ed
/////////////////////////////////////////////////////////////////////////
1: 
1:         //System.setProperty("webconsole.type","properties");
1:         //System.setProperty("webconsole.jms.url","tcp://localhost:61616");
1:         //System.setProperty("webconsole.jmx.url","service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root");
1: 
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:540dd5c
/////////////////////////////////////////////////////////////////////////
1:  * A simple bootstrap class for starting Jetty in your IDE using the local web
1:  * application.
1: public final class Main {
1: 
1:     private Main() {
1:     }
1: 
1:         // now lets start the web server
/////////////////////////////////////////////////////////////////////////
1: 
0:         server.setHandlers(new Handler[] {
0:             context
0:         });
0:         server.setConnectors(new Connector[] {
0:             connector
0:         });
1: 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:5dd95ea
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:         server.setHandler(context);
commit:e8a06c4
/////////////////////////////////////////////////////////////////////////
0: import org.eclipse.jetty.server.Connector;
0: import org.eclipse.jetty.server.Handler;
1: import org.eclipse.jetty.server.Server;
0: import org.eclipse.jetty.server.nio.SelectChannelConnector;
1: import org.eclipse.jetty.webapp.WebAppContext;
/////////////////////////////////////////////////////////////////////////
0:         /*server.setHandlers(new Handler[] {
0:         });*/
author:James Strachan
-------------------------------------------------------------------------------
commit:90b66ce
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.web.tool;
1: 
0: import org.mortbay.jetty.Connector;
0: import org.mortbay.jetty.Handler;
0: import org.mortbay.jetty.Server;
0: import org.mortbay.jetty.nio.SelectChannelConnector;
0: import org.mortbay.jetty.webapp.WebAppContext;
1: 
1: 
1: /**
0:  * A simple bootstrap class for starting Jetty in your IDE using the local web application.
1:  * 
0:  * @version $Revision$
1:  */
0: public class Main {
1:     
1:     public static final int PORT = 8080;
1: 
1:     public static final String WEBAPP_DIR = "src/main/webapp";
1: 
1:     public static final String WEBAPP_CTX = "/";
1: 
1:     public static void main(String[] args) throws Exception {
0:         // now lets start the web server        
1:         int port = PORT;
1:         if (args.length > 0) {
1:             String text = args[0];
1:             port = Integer.parseInt(text);
1:         }
1:         System.out.println("Starting Web Server on port: " + port);
0:         Server server = new Server();
0:         SelectChannelConnector connector = new SelectChannelConnector();
0:         connector.setPort(port);
0:         connector.setServer(server);
1:         WebAppContext context = new WebAppContext();
1:         
1:         context.setResourceBase(WEBAPP_DIR);
1:         context.setContextPath(WEBAPP_CTX);
1:         context.setServer(server);
0:         server.setHandlers(new Handler[]{context});
0:         server.setConnectors(new Connector[]{connector});
1:         server.start();
1:         
1:         System.out.println();
1:         System.out.println("==============================================================================");
1:         System.out.println("Started the ActiveMQ Console: point your web browser at http://localhost:" + port + "/");
1:         System.out.println("==============================================================================");
1:         System.out.println();
1:     }
1: }
============================================================================