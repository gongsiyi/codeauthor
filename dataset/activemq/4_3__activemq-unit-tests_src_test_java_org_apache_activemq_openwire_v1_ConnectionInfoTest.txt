1:f680f3a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
6:f680f3a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:f680f3a:  *
1:f680f3a:  * Unless required by applicable law or agreed to in writing, software
1:f680f3a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:f680f3a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:f680f3a:  * See the License for the specific language governing permissions and
1:f680f3a:  * limitations under the License.
1:f680f3a:  */
1:f680f3a: package org.apache.activemq.openwire.v1;
6:f680f3a: 
1:74a7a8b: import org.apache.activemq.command.BrokerId;
1:74a7a8b: import org.apache.activemq.command.ConnectionInfo;
1:f680f3a: 
1:f680f3a: /**
1:230a86c:  * Test case for the OpenWire marshalling for ConnectionInfo NOTE!: This file is
1:230a86c:  * auto generated - do not modify! if you need to make a change, please see the
1:230a86c:  * modify the groovy scripts in the under src/gram/script and then use maven
1:230a86c:  * openwire:generate to regenerate this file.
1:0bbc0ac:  * 
1:230a86c:  * 
1:f680f3a:  */
1:f680f3a: public class ConnectionInfoTest extends BaseCommandTestSupport {
1:f680f3a: 
1:fc00993:     public static final ConnectionInfoTest SINGLETON = new ConnectionInfoTest();
1:f680f3a: 
1:f680f3a:     public Object createObject() throws Exception {
1:230a86c:         ConnectionInfo info = new ConnectionInfo();
1:230a86c:         populateObject(info);
1:230a86c:         return info;
4:f680f3a:     }
1:f680f3a: 
1:f680f3a:     protected void populateObject(Object object) throws Exception {
1:230a86c:         super.populateObject(object);
1:230a86c:         ConnectionInfo info = (ConnectionInfo)object;
1:f680f3a:         info.setConnectionId(createConnectionId("ConnectionId:1"));
1:f680f3a:         info.setClientId("ClientId:2");
1:f680f3a:         info.setPassword("Password:3");
1:f680f3a:         info.setUserName("UserName:4");
1:230a86c: 
1:230a86c:         {
1:230a86c:             BrokerId value[] = new BrokerId[2];
1:230a86c:             for (int i = 0; i < 2; i++) {
1:230a86c:                 value[i] = createBrokerId("BrokerPath:5");
1:f680f3a:             }
1:230a86c:             info.setBrokerPath(value);
1:230a86c:         }
1:ef0734b:         info.setBrokerMasterConnector(true);
1:ef0734b:         info.setManageable(false);
1:f680f3a: 
1:230a86c:     }
1:230a86c: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1:     public static final ConnectionInfoTest SINGLETON = new ConnectionInfoTest();
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.BrokerId;
1: import org.apache.activemq.command.ConnectionInfo;
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1:  * Test case for the OpenWire marshalling for ConnectionInfo NOTE!: This file is
1:  * auto generated - do not modify! if you need to make a change, please see the
1:  * modify the groovy scripts in the under src/gram/script and then use maven
1:  * openwire:generate to regenerate this file.
1:  * 
1:         ConnectionInfo info = new ConnectionInfo();
1:         populateObject(info);
1:         return info;
1:         super.populateObject(object);
1:         ConnectionInfo info = (ConnectionInfo)object;
1: 
1:         {
1:             BrokerId value[] = new BrokerId[2];
1:             for (int i = 0; i < 2; i++) {
1:                 value[i] = createBrokerId("BrokerPath:5");
1:             info.setBrokerPath(value);
1:         }
1:     }
1: }
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:6583ef1
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
author:Robert Davies
-------------------------------------------------------------------------------
commit:ef0734b
/////////////////////////////////////////////////////////////////////////
1:         info.setBrokerMasterConnector(true);
1:         info.setManageable(false);
author:James Strachan
-------------------------------------------------------------------------------
commit:f3ef1a9
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
commit:15550b8
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:fd2fa9d
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
commit:8704338
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:2cd1437
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:5ece545
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision$
commit:6ce83ac
/////////////////////////////////////////////////////////////////////////
0:  * @version $Revision: $
commit:f680f3a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.openwire.v1;
1: 
0: import java.io.DataInputStream;
0: import java.io.DataOutputStream;
0: import java.io.IOException;
1: 
0: import org.apache.activemq.openwire.*;
0: import org.apache.activemq.command.*;
1: 
1: 
1: /**
0:  * Test case for the OpenWire marshalling for ConnectionInfo
1:  *
1:  *
0:  * NOTE!: This file is auto generated - do not modify!
0:  *        if you need to make a change, please see the modify the groovy scripts in the
0:  *        under src/gram/script and then use maven openwire:generate to regenerate 
0:  *        this file.
1:  *
0:  * @version $Revision$
1:  */
1: public class ConnectionInfoTest extends BaseCommandTestSupport {
1: 
1: 
0:     public static ConnectionInfoTest SINGLETON = new ConnectionInfoTest();
1: 
1:     public Object createObject() throws Exception {
0:     		ConnectionInfo info = new ConnectionInfo();
0:     		populateObject(info);
0:     		return info;
1:     }
1: 
1:     
1:     protected void populateObject(Object object) throws Exception {
0:     		super.populateObject(object);
0:     		ConnectionInfo info = (ConnectionInfo) object;
1:         info.setConnectionId(createConnectionId("ConnectionId:1"));
1:         info.setClientId("ClientId:2");
1:         info.setPassword("Password:3");
1:         info.setUserName("UserName:4");
1:         
0:     		    {
0: 	            BrokerId value[] = new BrokerId[2];
0: 	            for( int i=0; i < 2; i++ ) {
0: 	                value[i] = createBrokerId("BrokerPath:5");
1: 	            }
0: 	            info.setBrokerPath(value);
1:             }
1: 
1:             }
1:         }
============================================================================