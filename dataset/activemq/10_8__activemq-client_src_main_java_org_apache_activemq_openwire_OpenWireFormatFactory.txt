1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:b0c2a40:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
4:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.openwire;
1:ef0c0e1: 
1:8d5e84b: import org.apache.activemq.ActiveMQConnectionMetaData;
1:6583ef1: import org.apache.activemq.command.WireFormatInfo;
1:88acb0e: import org.apache.activemq.wireformat.WireFormat;
1:88acb0e: import org.apache.activemq.wireformat.WireFormatFactory;
1:6583ef1: 
1:d29ca2a: /**
1:5fa0bbd:  *
1:d29ca2a:  */
1:d29ca2a: public class OpenWireFormatFactory implements WireFormatFactory {
1:6583ef1: 
1:f812e34:     //
1:f812e34:     // The default values here are what the wire format changes to after a
1:f812e34:     // default negotiation.
1:f812e34:     //
1:f812e34: 
1:eb22a02:     private int version = OpenWireFormat.DEFAULT_WIRE_VERSION;
1:f812e34:     private boolean stackTraceEnabled = true;
1:f812e34:     private boolean tcpNoDelayEnabled = true;
1:f812e34:     private boolean cacheEnabled = true;
1:f812e34:     private boolean tightEncodingEnabled = true;
1:933eb2f:     private boolean sizePrefixDisabled;
1:f559236:     private long maxInactivityDuration = 30*1000;
1:f559236:     private long maxInactivityDurationInitalDelay = 10*1000;
1:f812e34:     private int cacheSize = 1024;
1:e5e99d7:     private long maxFrameSize = OpenWireFormat.DEFAULT_MAX_FRAME_SIZE;
1:190a44b:     private String host=null;
1:8d5e84b:     private String providerName = ActiveMQConnectionMetaData.PROVIDER_NAME;
1:8d5e84b:     private String providerVersion = ActiveMQConnectionMetaData.PROVIDER_VERSION;
1:5fa0bbd:     private String platformDetails = ActiveMQConnectionMetaData.DEFAULT_PLATFORM_DETAILS;
1:5fa0bbd:     private boolean includePlatformDetails = false;
1:f812e34: 
1:5fa0bbd:     @Override
1:d29ca2a:     public WireFormat createWireFormat() {
1:f812e34:         WireFormatInfo info = new WireFormatInfo();
1:f812e34:         info.setVersion(version);
1:f812e34: 
1:6583ef1:         try {
1:f812e34:             info.setStackTraceEnabled(stackTraceEnabled);
1:f812e34:             info.setCacheEnabled(cacheEnabled);
1:f812e34:             info.setTcpNoDelayEnabled(tcpNoDelayEnabled);
1:f812e34:             info.setTightEncodingEnabled(tightEncodingEnabled);
1:f812e34:             info.setSizePrefixDisabled(sizePrefixDisabled);
1:f559236:             info.setMaxInactivityDuration(maxInactivityDuration);
1:f559236:             info.setMaxInactivityDurationInitalDelay(maxInactivityDurationInitalDelay);
1:aa54a8b:             info.setCacheSize(cacheSize);
1:e5e99d7:             info.setMaxFrameSize(maxFrameSize);
1:190a44b:             if( host!=null ) {
1:190a44b:                 info.setHost(host);
1:190a44b:             }
1:8d5e84b:             info.setProviderName(providerName);
1:8d5e84b:             info.setProviderVersion(providerVersion);
1:5fa0bbd:             if (includePlatformDetails) {
1:5fa0bbd:                 platformDetails = ActiveMQConnectionMetaData.PLATFORM_DETAILS;
1:5fa0bbd:             }
1:8d5e84b:             info.setPlatformDetails(platformDetails);
1:f812e34:         } catch (Exception e) {
1:f812e34:             IllegalStateException ise = new IllegalStateException("Could not configure WireFormatInfo");
1:db9a709:             ise.initCause(e);
1:db9a709:             throw ise;
1:f812e34:         }
1:f812e34: 
1:8443bd1:         OpenWireFormat f = new OpenWireFormat(version);
1:e5e99d7:         f.setMaxFrameSize(maxFrameSize);
1:6583ef1:         f.setPreferedWireFormatInfo(info);
1:6583ef1:         return f;
1:6583ef1:     }
1:6583ef1: 
1:d29ca2a:     public boolean isStackTraceEnabled() {
1:d29ca2a:         return stackTraceEnabled;
4:d29ca2a:     }
2:d29ca2a: 
1:d29ca2a:     public void setStackTraceEnabled(boolean stackTraceEnabled) {
1:d29ca2a:         this.stackTraceEnabled = stackTraceEnabled;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public boolean isTcpNoDelayEnabled() {
1:d29ca2a:         return tcpNoDelayEnabled;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setTcpNoDelayEnabled(boolean tcpNoDelayEnabled) {
1:d29ca2a:         this.tcpNoDelayEnabled = tcpNoDelayEnabled;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public int getVersion() {
1:d29ca2a:         return version;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setVersion(int version) {
1:d29ca2a:         this.version = version;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public boolean isCacheEnabled() {
1:d29ca2a:         return cacheEnabled;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public void setCacheEnabled(boolean cacheEnabled) {
1:d29ca2a:         this.cacheEnabled = cacheEnabled;
1:b665f18:     }
1:b665f18: 
1:b665f18:     public boolean isTightEncodingEnabled() {
1:b665f18:         return tightEncodingEnabled;
1:b665f18:     }
1:b665f18: 
1:b665f18:     public void setTightEncodingEnabled(boolean tightEncodingEnabled) {
1:b665f18:         this.tightEncodingEnabled = tightEncodingEnabled;
1:6583ef1:     }
1:b665f18: 
1:f812e34:     public boolean isSizePrefixDisabled() {
1:f812e34:         return sizePrefixDisabled;
1:f812e34:     }
1:b665f18: 
1:f812e34:     public void setSizePrefixDisabled(boolean sizePrefixDisabled) {
1:f812e34:         this.sizePrefixDisabled = sizePrefixDisabled;
1:f812e34:     }
1:ef0c0e1: 
1:ef0c0e1:     public long getMaxInactivityDuration() {
1:ef0c0e1:         return maxInactivityDuration;
1:ef0c0e1:     }
1:ef0c0e1: 
1:ef0c0e1:     public void setMaxInactivityDuration(long maxInactivityDuration) {
1:ef0c0e1:         this.maxInactivityDuration = maxInactivityDuration;
1:aa54a8b:     }
1:aa54a8b: 
1:f812e34:     public int getCacheSize() {
1:f812e34:         return cacheSize;
1:f812e34:     }
1:aa54a8b: 
1:f812e34:     public void setCacheSize(int cacheSize) {
1:f812e34:         this.cacheSize = cacheSize;
1:f812e34:     }
1:d29ca2a: 
1:f559236:     public long getMaxInactivityDurationInitalDelay() {
1:f559236:         return maxInactivityDurationInitalDelay;
1:aa54a8b:     }
1:d29ca2a: 
1:f559236:     public void setMaxInactivityDurationInitalDelay(
1:f559236:             long maxInactivityDurationInitalDelay) {
1:f559236:         this.maxInactivityDurationInitalDelay = maxInactivityDurationInitalDelay;
1:ef0c0e1:     }
1:d29ca2a: 
1:e5e99d7:     public long getMaxFrameSize() {
1:e5e99d7:         return maxFrameSize;
1:6583ef1:     }
1:d29ca2a: 
1:e5e99d7:     public void setMaxFrameSize(long maxFrameSize) {
1:e5e99d7:         this.maxFrameSize = maxFrameSize;
1:b665f18:     }
1:190a44b: 
1:190a44b:     public String getHost() {
1:190a44b:         return host;
1:190a44b:     }
1:190a44b: 
1:190a44b:     public void setHost(String host) {
1:190a44b:         this.host = host;
1:190a44b:     }
1:8d5e84b: 
1:8d5e84b:     public String getProviderName() {
1:8d5e84b:         return providerName;
1:8d5e84b:     }
1:8d5e84b: 
1:8d5e84b:     public void setProviderName(String providerName) {
1:8d5e84b:         this.providerName = providerName;
1:8d5e84b:     }
1:8d5e84b: 
1:8d5e84b:     public String getProviderVersion() {
1:8d5e84b:         return providerVersion;
1:8d5e84b:     }
1:8d5e84b: 
1:8d5e84b:     public void setProviderVersion(String providerVersion) {
1:8d5e84b:         this.providerVersion = providerVersion;
1:8d5e84b:     }
1:8d5e84b: 
1:8d5e84b:     public String getPlatformDetails() {
1:8d5e84b:         return platformDetails;
1:8d5e84b:     }
1:8d5e84b: 
1:8d5e84b:     public void setPlatformDetails(String platformDetails) {
1:8d5e84b:         this.platformDetails = platformDetails;
1:8d5e84b:     }
1:5fa0bbd: 
1:5fa0bbd:     public boolean isIncludePlatformDetails() {
1:5fa0bbd:         return includePlatformDetails;
1:5fa0bbd:     }
1:5fa0bbd: 
1:5fa0bbd:     public void setIncludePlatformDetails(boolean includePlatformDetails) {
1:5fa0bbd:         this.includePlatformDetails = includePlatformDetails;
1:5fa0bbd:     }
1:b665f18: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:5fa0bbd
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
1:     private String platformDetails = ActiveMQConnectionMetaData.DEFAULT_PLATFORM_DETAILS;
1:     private boolean includePlatformDetails = false;
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:             if (includePlatformDetails) {
1:                 platformDetails = ActiveMQConnectionMetaData.PLATFORM_DETAILS;
1:             }
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean isIncludePlatformDetails() {
1:         return includePlatformDetails;
1:     }
1: 
1:     public void setIncludePlatformDetails(boolean includePlatformDetails) {
1:         this.includePlatformDetails = includePlatformDetails;
1:     }
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Michael L. Bloom
-------------------------------------------------------------------------------
commit:8d5e84b
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.ActiveMQConnectionMetaData;
/////////////////////////////////////////////////////////////////////////
1:     private String providerName = ActiveMQConnectionMetaData.PROVIDER_NAME;
1:     private String providerVersion = ActiveMQConnectionMetaData.PROVIDER_VERSION;
0:     private String platformDetails = ActiveMQConnectionMetaData.PLATFORM_DETAILS;
/////////////////////////////////////////////////////////////////////////
1:             info.setProviderName(providerName);
1:             info.setProviderVersion(providerVersion);
1:             info.setPlatformDetails(platformDetails);
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String getProviderName() {
1:         return providerName;
1:     }
1: 
1:     public void setProviderName(String providerName) {
1:         this.providerName = providerName;
1:     }
1: 
1:     public String getProviderVersion() {
1:         return providerVersion;
1:     }
1: 
1:     public void setProviderVersion(String providerVersion) {
1:         this.providerVersion = providerVersion;
1:     }
1: 
1:     public String getPlatformDetails() {
1:         return platformDetails;
1:     }
1: 
1:     public void setPlatformDetails(String platformDetails) {
1:         this.platformDetails = platformDetails;
1:     }
author:Hiram Chirino
-------------------------------------------------------------------------------
commit:190a44b
/////////////////////////////////////////////////////////////////////////
1:     private String host=null;
/////////////////////////////////////////////////////////////////////////
1:             if( host!=null ) {
1:                 info.setHost(host);
1:             }
/////////////////////////////////////////////////////////////////////////
1: 
1:     public String getHost() {
1:         return host;
1:     }
1: 
1:     public void setHost(String host) {
1:         this.host = host;
1:     }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:     private boolean sizePrefixDisabled;
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1:     //
1:     // The default values here are what the wire format changes to after a
1:     // default negotiation.
1:     //
1: 
0:     private int version = OpenWireFormat.DEFAULT_VERSION;
1:     private boolean stackTraceEnabled = true;
1:     private boolean tcpNoDelayEnabled = true;
1:     private boolean cacheEnabled = true;
1:     private boolean tightEncodingEnabled = true;
0:     private boolean sizePrefixDisabled = false;
0:     private long maxInactivityDuration = 30 * 1000;
1:     private int cacheSize = 1024;
1: 
1:         WireFormatInfo info = new WireFormatInfo();
1:         info.setVersion(version);
1: 
1:             info.setStackTraceEnabled(stackTraceEnabled);
1:             info.setCacheEnabled(cacheEnabled);
1:             info.setTcpNoDelayEnabled(tcpNoDelayEnabled);
1:             info.setTightEncodingEnabled(tightEncodingEnabled);
1:             info.setSizePrefixDisabled(sizePrefixDisabled);
1:         } catch (Exception e) {
1:             IllegalStateException ise = new IllegalStateException("Could not configure WireFormatInfo");
1:         }
1: 
/////////////////////////////////////////////////////////////////////////
1:     public boolean isSizePrefixDisabled() {
1:         return sizePrefixDisabled;
1:     }
1:     public void setSizePrefixDisabled(boolean sizePrefixDisabled) {
1:         this.sizePrefixDisabled = sizePrefixDisabled;
1:     }
/////////////////////////////////////////////////////////////////////////
1:     public int getCacheSize() {
1:         return cacheSize;
1:     }
1:     public void setCacheSize(int cacheSize) {
1:         this.cacheSize = cacheSize;
1:     }
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:aa54a8b
/////////////////////////////////////////////////////////////////////////
0:     private int cacheSize=1024;
/////////////////////////////////////////////////////////////////////////
1:             info.setCacheSize(cacheSize);
/////////////////////////////////////////////////////////////////////////
1: 
0: 	public int getCacheSize() {
0: 		return cacheSize;
1: 	}
1: 
0: 	public void setCacheSize(int cacheSize) {
0: 		this.cacheSize = cacheSize;
1: 	}
commit:88acb0e
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.wireformat.WireFormat;
1: import org.apache.activemq.wireformat.WireFormatFactory;
commit:c26d8a9
/////////////////////////////////////////////////////////////////////////
0:     private int version=2;
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:e264e6f
/////////////////////////////////////////////////////////////////////////
0: 	// The default values here are what the wire format changes to after a default negotiation.
commit:f451ad0
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activeio.command.WireFormat;
0: import org.apache.activeio.command.WireFormatFactory;
commit:ef0c0e1
/////////////////////////////////////////////////////////////////////////
0:     private long maxInactivityDuration=30*1000;
1:     
/////////////////////////////////////////////////////////////////////////
0:             info.seMaxInactivityDuration(maxInactivityDuration);
/////////////////////////////////////////////////////////////////////////
1: 
1:     public long getMaxInactivityDuration() {
1:         return maxInactivityDuration;
1:     }
1: 
1:     public void setMaxInactivityDuration(long maxInactivityDuration) {
1:         this.maxInactivityDuration = maxInactivityDuration;
1:     }
commit:6583ef1
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.WireFormatInfo;
0: 	//
0: 	// The default values here are what the wireformat chanages to after a default negociation.
0: 	//
1: 	
0:     private boolean tcpNoDelayEnabled=true;
0:     private boolean sizePrefixDisabled=false;
0: 		WireFormatInfo info = new WireFormatInfo();
0: 		info.setVersion(version);
1: 		
1:         try {
0: 			info.setStackTraceEnabled(stackTraceEnabled);
0: 			info.setCacheEnabled(cacheEnabled);
0: 			info.setTcpNoDelayEnabled(tcpNoDelayEnabled);
0: 			info.setTightEncodingEnabled(tightEncodingEnabled);
0: 			info.setSizePrefixDisabled(sizePrefixDisabled);
0: 		} catch (Exception e) {
0: 			throw new IllegalStateException("Could not configure WireFormatInfo", e);
1: 		}
1: 		
0:         OpenWireFormat f = new OpenWireFormat();
1:         f.setPreferedWireFormatInfo(info);
1:         return f;
/////////////////////////////////////////////////////////////////////////
0: 	public boolean isSizePrefixDisabled() {
0: 		return sizePrefixDisabled;
1: 	}
0: 	public void setSizePrefixDisabled(boolean sizePrefixDisabled) {
0: 		this.sizePrefixDisabled = sizePrefixDisabled;
1: 	}
commit:b665f18
/////////////////////////////////////////////////////////////////////////
0:     private boolean tightEncodingEnabled=true;
0:     private boolean prefixPacketSize=true;
/////////////////////////////////////////////////////////////////////////
0:         format.setTightEncodingEnabled(tightEncodingEnabled);
0:         format.setPrefixPacketSize(prefixPacketSize);
/////////////////////////////////////////////////////////////////////////
1: 
1:     public boolean isTightEncodingEnabled() {
1:         return tightEncodingEnabled;
1:     }
1: 
1:     public void setTightEncodingEnabled(boolean tightEncodingEnabled) {
1:         this.tightEncodingEnabled = tightEncodingEnabled;
1:     }
1: 
0:     public boolean isPrefixPacketSize() {
0:         return prefixPacketSize;
1:     }
1: 
0:     public void setPrefixPacketSize(boolean prefixPacketSize) {
0:         this.prefixPacketSize = prefixPacketSize;
1:     }
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.openwire;
1: 
0: import org.activeio.command.WireFormat;
0: import org.activeio.command.WireFormatFactory;
1: 
1: /**
0:  * @version $Revision$
1:  */
1: public class OpenWireFormatFactory implements WireFormatFactory {
1: 
0:     private int version=1;
0:     private boolean stackTraceEnabled=true;
0:     private boolean tcpNoDelayEnabled=false;
0:     private boolean cacheEnabled=true;
1: 
1:     public WireFormat createWireFormat() {
0:         OpenWireFormat format = new OpenWireFormat();
0:         format.setVersion(version);
0:         format.setStackTraceEnabled(stackTraceEnabled);
0:         format.setCacheEnabled(cacheEnabled);
0:         format.setTcpNoDelayEnabled(tcpNoDelayEnabled);
0:         return format;
1:     }
1: 
1:     public boolean isStackTraceEnabled() {
1:         return stackTraceEnabled;
1:     }
1: 
1:     public void setStackTraceEnabled(boolean stackTraceEnabled) {
1:         this.stackTraceEnabled = stackTraceEnabled;
1:     }
1: 
1:     public boolean isTcpNoDelayEnabled() {
1:         return tcpNoDelayEnabled;
1:     }
1: 
1:     public void setTcpNoDelayEnabled(boolean tcpNoDelayEnabled) {
1:         this.tcpNoDelayEnabled = tcpNoDelayEnabled;
1:     }
1: 
1:     public int getVersion() {
1:         return version;
1:     }
1: 
1:     public void setVersion(int version) {
1:         this.version = version;
1:     }
1: 
1:     public boolean isCacheEnabled() {
1:         return cacheEnabled;
1:     }
1: 
1:     public void setCacheEnabled(boolean cacheEnabled) {
1:         this.cacheEnabled = cacheEnabled;
1:     }
1: }
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:e5e99d7
/////////////////////////////////////////////////////////////////////////
1:     private long maxFrameSize = OpenWireFormat.DEFAULT_MAX_FRAME_SIZE;
/////////////////////////////////////////////////////////////////////////
1:             info.setMaxFrameSize(maxFrameSize);
/////////////////////////////////////////////////////////////////////////
1:         f.setMaxFrameSize(maxFrameSize);
/////////////////////////////////////////////////////////////////////////
0: 
1:     public long getMaxFrameSize() {
1:         return maxFrameSize;
0:     }
0: 
1:     public void setMaxFrameSize(long maxFrameSize) {
1:         this.maxFrameSize = maxFrameSize;
0:     }
author:Gary Tully
-------------------------------------------------------------------------------
commit:eb22a02
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     private int version = OpenWireFormat.DEFAULT_WIRE_VERSION;
commit:8443bd1
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.command.CommandTypes;
/////////////////////////////////////////////////////////////////////////
0:     private int version = CommandTypes.PROTOCOL_VERSION;
/////////////////////////////////////////////////////////////////////////
1:         OpenWireFormat f = new OpenWireFormat(version);
author:Robert Davies
-------------------------------------------------------------------------------
commit:f559236
/////////////////////////////////////////////////////////////////////////
1:     private long maxInactivityDuration = 30*1000;
1:     private long maxInactivityDurationInitalDelay = 10*1000;
/////////////////////////////////////////////////////////////////////////
1:             info.setMaxInactivityDuration(maxInactivityDuration);
1:             info.setMaxInactivityDurationInitalDelay(maxInactivityDurationInitalDelay);
/////////////////////////////////////////////////////////////////////////
0: 
1:     public long getMaxInactivityDurationInitalDelay() {
1:         return maxInactivityDurationInitalDelay;
0:     }
0: 
1:     public void setMaxInactivityDurationInitalDelay(
1:             long maxInactivityDurationInitalDelay) {
1:         this.maxInactivityDurationInitalDelay = maxInactivityDurationInitalDelay;
0:     }
author:James Strachan
-------------------------------------------------------------------------------
commit:8cf4795
/////////////////////////////////////////////////////////////////////////
0:     private int version=OpenWireFormat.DEFAULT_VERSION;
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:db9a709
/////////////////////////////////////////////////////////////////////////
0: 			IllegalStateException ise = new IllegalStateException("Could not configure WireFormatInfo");
1:             ise.initCause(e);
1:             throw ise;
============================================================================