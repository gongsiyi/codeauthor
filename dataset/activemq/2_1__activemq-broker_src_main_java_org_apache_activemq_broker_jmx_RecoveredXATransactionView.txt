1:1d242a2: /**
1:1d242a2:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:1d242a2:  * contributor license agreements.  See the NOTICE file distributed with
1:1d242a2:  * this work for additional information regarding copyright ownership.
1:1d242a2:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:1d242a2:  * (the "License"); you may not use this file except in compliance with
1:1d242a2:  * the License.  You may obtain a copy of the License at
1:1d242a2:  *
1:1d242a2:  *      http://www.apache.org/licenses/LICENSE-2.0
1:1d242a2:  *
1:1d242a2:  * Unless required by applicable law or agreed to in writing, software
1:1d242a2:  * distributed under the License is distributed on an "AS IS" BASIS,
1:1d242a2:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:1d242a2:  * See the License for the specific language governing permissions and
1:1d242a2:  * limitations under the License.
1:1d242a2:  */
1:1d242a2: package org.apache.activemq.broker.jmx;
1:1d242a2: 
1:1d242a2: import org.apache.activemq.transaction.Synchronization;
1:1d242a2: import org.apache.activemq.transaction.XATransaction;
1:1d242a2: 
1:1d242a2: public class RecoveredXATransactionView implements RecoveredXATransactionViewMBean {
1:1d242a2: 
1:1d242a2:     private final XATransaction transaction;
1:1d242a2: 
1:1d242a2:     public RecoveredXATransactionView(final ManagedRegionBroker managedRegionBroker, final XATransaction transaction) {
1:1d242a2:         this.transaction = transaction;
1:1d242a2:         transaction.addSynchronization(new Synchronization() {
1:1d242a2:             @Override
1:1d242a2:             public void afterCommit() throws Exception {
1:1d242a2:                 managedRegionBroker.unregister(transaction);
1:1d242a2:             }
1:1d242a2: 
1:1d242a2:             @Override
1:1d242a2:             public void afterRollback() throws Exception {
1:1d242a2:                 managedRegionBroker.unregister(transaction);
1:1d242a2:             }
1:1d242a2:         });
1:1d242a2:     }
1:1d242a2: 
1:1d242a2:     @Override
1:1d242a2:     public int getFormatId() {
1:1d242a2:         return transaction.getXid().getFormatId();
1:1d242a2:     }
1:1d242a2: 
1:1d242a2:     @Override
1:1d242a2:     public byte[] getBranchQualifier() {
1:1d242a2:         return transaction.getXid().getBranchQualifier();
1:1d242a2:     }
1:1d242a2: 
1:1d242a2:     @Override
1:1d242a2:     public byte[] getGlobalTransactionId() {
1:1d242a2:         return transaction.getXid().getGlobalTransactionId();
1:1d242a2:     }
1:1d242a2: 
1:1d242a2:     @Override
1:1d242a2:     public void heuristicCommit() throws Exception {
1:1d242a2:         transaction.commit(false);
1:1d242a2:     }
1:1d242a2: 
1:1d242a2:     @Override
1:1d242a2:     public void heuristicRollback() throws Exception {
1:1d242a2:         transaction.rollback();
1:1d242a2:     }
1:1d242a2: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
author:Gary Tully
-------------------------------------------------------------------------------
commit:1d242a2
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.broker.jmx;
1: 
1: import org.apache.activemq.transaction.Synchronization;
1: import org.apache.activemq.transaction.XATransaction;
1: 
1: public class RecoveredXATransactionView implements RecoveredXATransactionViewMBean {
1: 
1:     private final XATransaction transaction;
1: 
1:     public RecoveredXATransactionView(final ManagedRegionBroker managedRegionBroker, final XATransaction transaction) {
1:         this.transaction = transaction;
1:         transaction.addSynchronization(new Synchronization() {
1:             @Override
1:             public void afterCommit() throws Exception {
1:                 managedRegionBroker.unregister(transaction);
1:             }
1: 
1:             @Override
1:             public void afterRollback() throws Exception {
1:                 managedRegionBroker.unregister(transaction);
1:             }
1:         });
1:     }
1: 
1:     @Override
1:     public int getFormatId() {
1:         return transaction.getXid().getFormatId();
1:     }
1: 
1:     @Override
1:     public byte[] getBranchQualifier() {
1:         return transaction.getXid().getBranchQualifier();
1:     }
1: 
1:     @Override
1:     public byte[] getGlobalTransactionId() {
1:         return transaction.getXid().getGlobalTransactionId();
1:     }
1: 
1:     @Override
1:     public void heuristicCommit() throws Exception {
1:         transaction.commit(false);
1:     }
1: 
1:     @Override
1:     public void heuristicRollback() throws Exception {
1:         transaction.rollback();
1:     }
1: }
============================================================================