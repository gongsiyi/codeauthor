1:3f32507: /**
1:3f32507:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3f32507:  * contributor license agreements.  See the NOTICE file distributed with
1:3f32507:  * this work for additional information regarding copyright ownership.
1:3f32507:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3f32507:  * (the "License"); you may not use this file except in compliance with
1:3f32507:  * the License.  You may obtain a copy of the License at
1:3f32507:  *
1:3f32507:  *      http://www.apache.org/licenses/LICENSE-2.0
1:3f32507:  *
1:3f32507:  * Unless required by applicable law or agreed to in writing, software
1:3f32507:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3f32507:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3f32507:  * See the License for the specific language governing permissions and
1:3f32507:  * limitations under the License.
1:3f32507:  */
1:3f32507: package org.apache.activemq.transport.failover;
1:3f32507: 
1:3f32507: import junit.framework.Test;
1:3f32507: 
1:3f32507: import org.apache.activemq.transport.tcp.TransportUriTest;
1:3f32507: 
1:3f32507: public class FailoverUriTest extends TransportUriTest {
1:3f32507: 
1:3f32507:     @Override
1:3f32507:     public void initCombosForTestUriOptionsWork() {
1:3f32507:         addCombinationValues("prefix", new Object[]{"failover:(", "failover://("});
1:3f32507:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"
1:3f32507:                 , "?wireFormat.tightEncodingEnabled=false)?jms.useAsyncSend=true&jms.copyMessageOnSend=false"
1:3f32507:                 , "?wireFormat.maxInactivityDuration=0&keepAlive=true)?jms.prefetchPolicy.all=500&initialReconnectDelay=10000&useExponentialBackOff=false&maxReconnectAttempts=0&randomize=false"});
1:3f32507:     }
1:3f32507: 
1:3f32507:     @Override
1:3f32507:     public void initCombosForTestBadVersionNumberDoesNotWork() {
1:3f32507:         addCombinationValues("prefix", new Object[]{"failover:("});
1:3f32507:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
1:3f32507:     }
1:3f32507: 
1:3f32507:     @Override
1:3f32507:     public void initCombosForTestBadPropertyNameFails() {
1:3f32507:         addCombinationValues("prefix", new Object[]{"failover:("});
1:3f32507:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
1:3f32507:     }
1:3f32507: 
1:3f32507:     public static Test suite() {
1:3f32507:         return suite(FailoverUriTest.class);
1:3f32507:     }
1:3f32507: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:3f32507
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.failover;
1: 
1: import junit.framework.Test;
1: 
1: import org.apache.activemq.transport.tcp.TransportUriTest;
1: 
1: public class FailoverUriTest extends TransportUriTest {
1: 
1:     @Override
1:     public void initCombosForTestUriOptionsWork() {
1:         addCombinationValues("prefix", new Object[]{"failover:(", "failover://("});
1:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"
1:                 , "?wireFormat.tightEncodingEnabled=false)?jms.useAsyncSend=true&jms.copyMessageOnSend=false"
1:                 , "?wireFormat.maxInactivityDuration=0&keepAlive=true)?jms.prefetchPolicy.all=500&initialReconnectDelay=10000&useExponentialBackOff=false&maxReconnectAttempts=0&randomize=false"});
1:     }
1: 
1:     @Override
1:     public void initCombosForTestBadVersionNumberDoesNotWork() {
1:         addCombinationValues("prefix", new Object[]{"failover:("});
1:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
1:     }
1: 
1:     @Override
1:     public void initCombosForTestBadPropertyNameFails() {
1:         addCombinationValues("prefix", new Object[]{"failover:("});
1:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
1:     }
1: 
1:     public static Test suite() {
1:         return suite(FailoverUriTest.class);
1:     }
1: }
author:Timothy Bish
-------------------------------------------------------------------------------
commit:e6e7ba7
/////////////////////////////////////////////////////////////////////////
0:     @Override
0:         addCombinationValues("prefix", new Object[]{"failover:(", "failover://("});
0:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"
0:                 , "?wireFormat.tightEncodingEnabled=false)?jms.useAsyncSend=true&jms.copyMessageOnSend=false"
0:                 , "?wireFormat.maxInactivityDuration=0&keepAlive=true)?jms.prefetchPolicy.all=500&initialReconnectDelay=10000&useExponentialBackOff=false&maxReconnectAttempts=0&randomize=false"});
0:     }
0:     @Override
0:     public void initCombosForTestBadVersionNumberDoesNotWork() {
0:         addCombinationValues("prefix", new Object[]{"failover:("});
0:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0:     }
0:     @Override
0:     public void initCombosForTestBadPropertyNameFails() {
0:         addCombinationValues("prefix", new Object[]{"failover:("});
0:         addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0:     }
0:         return suite(FailoverUriTest.class);
commit:1bc5504
/////////////////////////////////////////////////////////////////////////
0: 
0: 		addCombinationValues("prefix", new Object[]{"failover:(", "failover://("});
0: 
0: 		addCombinationValues("prefix", new Object[]{"failover:("});
0: 		// TODO uncomment after fixing https://issues.apache.org/jira/browse/AMQ-4725
0: 		// addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0: 
0: 		addCombinationValues("prefix", new Object[]{"failover:("});
0:         // TODO uncomment after fixing https://issues.apache.org/jira/browse/AMQ-4725
0: 		//addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0: 
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Bosanac Dejan
-------------------------------------------------------------------------------
commit:3a6a56c
/////////////////////////////////////////////////////////////////////////
0: 		addCombinationValues("prefix", new Object[] {"failover:(", "failover://("});
commit:32d6841
/////////////////////////////////////////////////////////////////////////
0: 		addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"
0: 				, "?wireFormat.tightEncodingEnabled=false)?jms.useAsyncSend=true&jms.copyMessageOnSend=false"
0: 				, "?wireFormat.maxInactivityDuration=0&keepAlive=true)?jms.prefetchPolicy.all=500&initialReconnectDelay=10000&useExponentialBackOff=false&maxReconnectAttempts=0&randomize=false"});
commit:049b43c
/////////////////////////////////////////////////////////////////////////
0: import junit.framework.Test;
0: 
0: 	
0:     public void initCombosForTestUriOptionsWork() {
0: 		addCombinationValues("prefix", new Object[] {"failover:("});
0: 		addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0: 				//, "?jms.useAsyncSend=true&jms.copyMessageOnSend=false &wireFormat.tightEncodingEnabled=false"});
0: 	}
0: 	
0: 	public void initCombosForTestBadVersionNumberDoesNotWork() {
0: 		addCombinationValues("prefix", new Object[] {"failover:("});
0: 		addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0: 	}
0: 	
0: 	public void initCombosForTestBadPropertyNameFails() {
0: 		addCombinationValues("prefix", new Object[] {"failover:("});
0: 		addCombinationValues("postfix", new Object[] {")?initialReconnectDelay=1000&maxReconnectDelay=1000"});
0: 	}
0: 	
0:     public static Test suite() {
0:     	return suite(FailoverUriTest.class);
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *      http://www.apache.org/licenses/LICENSE-2.0
author:Adrian T. Co
-------------------------------------------------------------------------------
commit:fae5c5f
/////////////////////////////////////////////////////////////////////////
0: /**
0:  *
0:  * Licensed to the Apache Software Foundation (ASF) under one or more
0:  * contributor license agreements.  See the NOTICE file distributed with
0:  * this work for additional information regarding copyright ownership.
0:  * The ASF licenses this file to You under the Apache License, Version 2.0
0:  * (the "License"); you may not use this file except in compliance with
0:  * the License.  You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
0:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS,
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
0:  * See the License for the specific language governing permissions and
0:  * limitations under the License.
0:  */
0: package org.apache.activemq.transport.failover;
0: 
0: import org.apache.activemq.transport.tcp.TransportUriTest;
0: 
0: public class FailoverUriTest extends TransportUriTest {
0: 
0:     protected void setUp() throws Exception {
0:         super.setUp();
0:         prefix = "failover:(";
0:         postfix = ")?initialReconnectDelay=1000&maxReconnectDelay=1000";
0:     }
0: }
============================================================================