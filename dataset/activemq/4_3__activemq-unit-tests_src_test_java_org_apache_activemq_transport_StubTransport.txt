2:c2fc820: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
1:f812e34:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:0bbc0ac:  *
1:c2fc820:  * Unless required by applicable law or agreed to in writing, software
1:c2fc820:  * distributed under the License is distributed on an "AS IS" BASIS,
1:c2fc820:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:c2fc820:  * See the License for the specific language governing permissions and
1:c2fc820:  * limitations under the License.
2:c2fc820:  */
1:c2fc820: package org.apache.activemq.transport;
4:c2fc820: 
1:f812e34: import java.io.IOException;
1:31c55f7: import java.security.cert.X509Certificate;
1:86cbdfd: import java.util.Queue;
1:86cbdfd: import java.util.concurrent.ConcurrentLinkedQueue;
1:c2fc820: 
1:c2fc820: import org.apache.activemq.util.ServiceStopper;
1:31c55f7: import org.apache.activemq.wireformat.WireFormat;
1:c2fc820: 
1:c2fc820: public class StubTransport extends TransportSupport {
1:f812e34: 
1:933eb2f:     private Queue<Object> queue = new ConcurrentLinkedQueue<Object>();
1:8978ac0:     private volatile int receiveCounter;
1:c2fc820: 
1:31c55f7:     @Override
1:c2fc820:     protected void doStop(ServiceStopper stopper) throws Exception {
2:c2fc820:     }
1:c2fc820: 
1:31c55f7:     @Override
1:c2fc820:     protected void doStart() throws Exception {
1:c2fc820:     }
1:c2fc820: 
1:31c55f7:     @Override
1:9ca56a0:     public void oneway(Object command) throws IOException {
1:8978ac0:         receiveCounter++;
1:c2fc820:         queue.add(command);
1:c2fc820:     }
1:c2fc820: 
1:933eb2f:     public Queue<Object> getQueue() {
1:c2fc820:         return queue;
1:0f1dcce:     }
1:c2fc820: 
1:31c55f7:     @Override
1:f812e34:     public String getRemoteAddress() {
1:f812e34:         return null;
1:f812e34:     }
1:0f1dcce: 
1:31c55f7:     @Override
1:8978ac0:     public int getReceiveCounter() {
1:8978ac0:         return receiveCounter;
1:8978ac0:     }
1:8978ac0: 
1:31c55f7:     @Override
1:31c55f7:     public X509Certificate[] getPeerCertificates() {
1:31c55f7:         return null;
1:31c55f7:     }
1:31c55f7: 
1:31c55f7:     @Override
1:31c55f7:     public void setPeerCertificates(X509Certificate[] certificates) {
1:31c55f7: 
1:31c55f7:     }
1:31c55f7: 
1:31c55f7:     @Override
1:31c55f7:     public WireFormat getWireFormat() {
1:31c55f7:         return null;
1:31c55f7:     }
1:c2fc820: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:31c55f7
/////////////////////////////////////////////////////////////////////////
1: import java.security.cert.X509Certificate;
1: import org.apache.activemq.wireformat.WireFormat;
1:     @Override
1:     @Override
1:     @Override
/////////////////////////////////////////////////////////////////////////
1:     @Override
1:     @Override
1:     @Override
1:     public X509Certificate[] getPeerCertificates() {
1:         return null;
1:     }
1: 
1:     @Override
1:     public void setPeerCertificates(X509Certificate[] certificates) {
1: 
1:     }
1: 
1:     @Override
1:     public WireFormat getWireFormat() {
1:         return null;
1:     }
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:ef24cc9
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:8978ac0
/////////////////////////////////////////////////////////////////////////
1:     private volatile int receiveCounter;
/////////////////////////////////////////////////////////////////////////
1:         receiveCounter++;
/////////////////////////////////////////////////////////////////////////
1:     public int getReceiveCounter() {
1:         return receiveCounter;
1:     }
1: 
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:     private Queue<Object> queue = new ConcurrentLinkedQueue<Object>();
/////////////////////////////////////////////////////////////////////////
1:     public Queue<Object> getQueue() {
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1: import java.io.IOException;
1:  * 
1: 
/////////////////////////////////////////////////////////////////////////
1:     public String getRemoteAddress() {
1:         return null;
1:     }
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:86cbdfd
/////////////////////////////////////////////////////////////////////////
1: import java.util.Queue;
1: import java.util.concurrent.ConcurrentLinkedQueue;
commit:9ca56a0
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:     public void oneway(Object command) throws IOException {
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:0f1dcce
/////////////////////////////////////////////////////////////////////////
0: 	public String getRemoteAddress() {
0: 		return null;
1: 	}
1: 
commit:c2fc820
/////////////////////////////////////////////////////////////////////////
1: /**
0:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
0:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport;
1: 
0: import edu.emory.mathcs.backport.java.util.Queue;
0: import edu.emory.mathcs.backport.java.util.concurrent.ConcurrentLinkedQueue;
1: 
0: import org.apache.activemq.command.Command;
1: import org.apache.activemq.util.ServiceStopper;
1: 
0: import java.io.IOException;
1: 
1: /**
0:  *
0:  * @version $Revision$
1:  */
1: public class StubTransport extends TransportSupport {
1: 
0:     private Queue queue = new ConcurrentLinkedQueue();
1:     
1:     protected void doStop(ServiceStopper stopper) throws Exception {
1:     }
1: 
1:     protected void doStart() throws Exception {
1:     }
1: 
0:     public void oneway(Command command) throws IOException {
1:         queue.add(command);
1:     }
1: 
0:     public Queue getQueue() {
1:         return queue;
1:     }
1: 
1:     
1: }
============================================================================