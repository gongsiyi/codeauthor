1:278d29d: /**
1:278d29d:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:278d29d:  * contributor license agreements.  See the NOTICE file distributed with
1:278d29d:  * this work for additional information regarding copyright ownership.
1:278d29d:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:278d29d:  * (the "License"); you may not use this file except in compliance with
1:278d29d:  * the License.  You may obtain a copy of the License at
1:278d29d:  *
1:278d29d:  *      http://www.apache.org/licenses/LICENSE-2.0
1:278d29d:  *
1:278d29d:  * Unless required by applicable law or agreed to in writing, software
1:278d29d:  * distributed under the License is distributed on an "AS IS" BASIS,
1:278d29d:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:278d29d:  * See the License for the specific language governing permissions and
1:278d29d:  * limitations under the License.
1:278d29d:  */
1:278d29d: package org.apache.activemq.plugin;
2:278d29d: 
1:278d29d: import static org.junit.Assert.assertEquals;
1:f3ecc29: 
1:f3ecc29: import org.junit.Test;
1:278d29d: 
1:278d29d: /**
1:278d29d:  * Tests that presence of wildcard characters is correctly identified by SubQueueSelectorCacheBroker
1:278d29d:  */
1:278d29d: public class SubQueueSelectorCacheBrokerWildcardTest {
1:278d29d:     @Test
1:278d29d:     public void testSimpleWildcardEvaluation()  {
1:278d29d:         assertWildcard(true, "modelInstanceId = '170' AND modelClassId LIKE 'com.whatever.something.%'");
1:278d29d:         assertWildcard(true, "JMSMessageId LIKE '%'");
1:278d29d:         assertWildcard(false, "modelClassId = 'com.whatever.something.%'");
1:278d29d:     }
1:278d29d: 
1:278d29d:     @Test
1:278d29d:     public void testEscapedWildcardEvaluation() {
1:278d29d:         assertWildcard(true, "foo LIKE '!_%' ESCAPE '!'");
1:278d29d:         assertWildcard(false, "_foo__ LIKE '!_!%' ESCAPE '!'");
1:278d29d:         assertWildcard(true, "_foo_ LIKE '_%' ESCAPE '.'");
1:278d29d:         assertWildcard(true, "JMSMessageId LIKE '%' ESCAPE '.'");
1:278d29d:         assertWildcard(false, "_foo_ LIKE '\\_\\%' ESCAPE '\\'");
1:278d29d:     }
1:278d29d: 
1:278d29d:     @Test
1:278d29d:     public void testNonWildard() {
1:278d29d:         assertWildcard(false, "type = 'UPDATE_ENTITY'");
1:278d29d:         assertWildcard(false, "a_property = 1");
1:278d29d:         assertWildcard(false, "percentage = '100%'");
1:278d29d:     }
1:278d29d: 
1:278d29d:     @Test
1:278d29d:     public void testApostrophes() {
1:278d29d:         assertWildcard(true, "quote LIKE '''In G_d We Trust'''");
1:278d29d:         assertWildcard(true, "quote LIKE '''In Gd We Trust''' OR quote not like '''In G_d We Trust'''");
1:278d29d:     }
1:278d29d: 
1:278d29d:     static void assertWildcard(boolean expected, String selector) {
1:278d29d:         assertEquals("Wildcard should "+(!expected ? " NOT ":"")+" be found in "+selector, expected, SubQueueSelectorCacheBroker.hasWildcards(selector));
1:278d29d:     }
1:278d29d: }
============================================================================
author:Timothy Bish
-------------------------------------------------------------------------------
commit:f3ecc29
/////////////////////////////////////////////////////////////////////////
1: 
1: import org.junit.Test;
author:Patrik Dudits
-------------------------------------------------------------------------------
commit:278d29d
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.plugin;
1: 
0: import org.junit.Test;
1: 
1: import static org.junit.Assert.assertEquals;
0: import static org.junit.Assert.assertTrue;
1: 
1: /**
1:  * Tests that presence of wildcard characters is correctly identified by SubQueueSelectorCacheBroker
1:  */
1: public class SubQueueSelectorCacheBrokerWildcardTest {
1:     @Test
1:     public void testSimpleWildcardEvaluation()  {
1:         assertWildcard(true, "modelInstanceId = '170' AND modelClassId LIKE 'com.whatever.something.%'");
1:         assertWildcard(true, "JMSMessageId LIKE '%'");
1:         assertWildcard(false, "modelClassId = 'com.whatever.something.%'");
1:     }
1: 
1:     @Test
1:     public void testEscapedWildcardEvaluation() {
1:         assertWildcard(true, "foo LIKE '!_%' ESCAPE '!'");
1:         assertWildcard(false, "_foo__ LIKE '!_!%' ESCAPE '!'");
1:         assertWildcard(true, "_foo_ LIKE '_%' ESCAPE '.'");
1:         assertWildcard(true, "JMSMessageId LIKE '%' ESCAPE '.'");
1:         assertWildcard(false, "_foo_ LIKE '\\_\\%' ESCAPE '\\'");
1:     }
1: 
1:     @Test
1:     public void testNonWildard() {
1:         assertWildcard(false, "type = 'UPDATE_ENTITY'");
1:         assertWildcard(false, "a_property = 1");
1:         assertWildcard(false, "percentage = '100%'");
1:     }
1: 
1:     @Test
1:     public void testApostrophes() {
1:         assertWildcard(true, "quote LIKE '''In G_d We Trust'''");
1:         assertWildcard(true, "quote LIKE '''In Gd We Trust''' OR quote not like '''In G_d We Trust'''");
1:     }
1: 
1:     static void assertWildcard(boolean expected, String selector) {
1:         assertEquals("Wildcard should "+(!expected ? " NOT ":"")+" be found in "+selector, expected, SubQueueSelectorCacheBroker.hasWildcards(selector));
1:     }
1: }
============================================================================