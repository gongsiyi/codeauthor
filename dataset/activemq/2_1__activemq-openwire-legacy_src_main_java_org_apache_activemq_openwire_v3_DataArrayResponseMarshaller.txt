1:885c379: /**
1:885c379:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:885c379:  * contributor license agreements.  See the NOTICE file distributed with
1:885c379:  * this work for additional information regarding copyright ownership.
1:885c379:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:885c379:  * (the "License"); you may not use this file except in compliance with
1:885c379:  * the License.  You may obtain a copy of the License at
1:a2033b3:  *
1:b3ee59d:  *      http://www.apache.org/licenses/LICENSE-2.0
3:a2033b3:  *
1:885c379:  * Unless required by applicable law or agreed to in writing, software
1:885c379:  * distributed under the License is distributed on an "AS IS" BASIS,
1:885c379:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:885c379:  * See the License for the specific language governing permissions and
1:885c379:  * limitations under the License.
1:885c379:  */
12:885c379: 
1:885c379: package org.apache.activemq.openwire.v3;
1:885c379: 
1:885c379: import java.io.DataInput;
1:885c379: import java.io.DataOutput;
1:885c379: import java.io.IOException;
1:a2033b3: 
1:b3ee59d: import org.apache.activemq.command.DataArrayResponse;
1:b3ee59d: import org.apache.activemq.command.DataStructure;
1:b3ee59d: import org.apache.activemq.openwire.BooleanStream;
1:b3ee59d: import org.apache.activemq.openwire.OpenWireFormat;
1:a2033b3: 
1:885c379: /**
1:885c379:  * Marshalling code for Open Wire Format for DataArrayResponseMarshaller
1:b3ee59d:  * 
1:b3ee59d:  * 
1:b3ee59d:  * NOTE!: This file is auto generated - do not modify! if you need to make a
1:b3ee59d:  * change, please see the modify the groovy scripts in the under src/gram/script
1:b3ee59d:  * and then use maven openwire:generate to regenerate this file.
1:b0c2a40:  * 
1:b3ee59d:  * 
1:885c379:  */
1:885c379: public class DataArrayResponseMarshaller extends ResponseMarshaller {
1:885c379: 
1:885c379:     /**
1:885c379:      * Return the type of Data Structure we marshal
1:b3ee59d:      * 
1:885c379:      * @return short representation of the type data structure
1:885c379:      */
1:885c379:     public byte getDataStructureType() {
1:885c379:         return DataArrayResponse.DATA_STRUCTURE_TYPE;
5:885c379:     }
1:b3ee59d: 
1:885c379:     /**
1:885c379:      * @return a new object instance
1:885c379:      */
1:885c379:     public DataStructure createObject() {
1:885c379:         return new DataArrayResponse();
1:885c379:     }
1:a2033b3: 
1:885c379:     /**
1:885c379:      * Un-marshal an object instance from the data input stream
1:b3ee59d:      * 
1:885c379:      * @param o the object to un-marshal
1:885c379:      * @param dataIn the data input stream to build the object from
1:885c379:      * @throws IOException
1:885c379:      */
1:b3ee59d:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs)
1:b3ee59d:         throws IOException {
1:885c379:         super.tightUnmarshal(wireFormat, o, dataIn, bs);
1:f812e34: 
1:885c379:         DataArrayResponse info = (DataArrayResponse)o;
1:885c379: 
1:885c379:         if (bs.readBoolean()) {
1:885c379:             short size = dataIn.readShort();
1:885c379:             org.apache.activemq.command.DataStructure value[] = new org.apache.activemq.command.DataStructure[size];
1:b3ee59d:             for (int i = 0; i < size; i++) {
1:b3ee59d:                 value[i] = (org.apache.activemq.command.DataStructure)tightUnmarsalNestedObject(wireFormat,
1:b3ee59d:                                                                                                 dataIn, bs);
1:885c379:             }
1:885c379:             info.setData(value);
1:b3ee59d:         } else {
1:885c379:             info.setData(null);
1:a2033b3:         }
1:a2033b3: 
1:885c379:     }
1:885c379: 
1:885c379:     /**
1:885c379:      * Write the booleans that this object uses to a BooleanStream
1:885c379:      */
1:885c379:     public int tightMarshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1:885c379: 
1:885c379:         DataArrayResponse info = (DataArrayResponse)o;
1:885c379: 
1:885c379:         int rc = super.tightMarshal1(wireFormat, o, bs);
1:885c379:         rc += tightMarshalObjectArray1(wireFormat, info.getData(), bs);
1:885c379: 
1:885c379:         return rc + 0;
1:885c379:     }
1:885c379: 
1:885c379:     /**
1:885c379:      * Write a object instance to data output stream
1:b3ee59d:      * 
1:885c379:      * @param o the instance to be marshaled
1:885c379:      * @param dataOut the output stream
1:885c379:      * @throws IOException thrown if an error occurs
1:885c379:      */
1:b3ee59d:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs)
1:b3ee59d:         throws IOException {
1:885c379:         super.tightMarshal2(wireFormat, o, dataOut, bs);
1:885c379: 
1:885c379:         DataArrayResponse info = (DataArrayResponse)o;
1:885c379:         tightMarshalObjectArray2(wireFormat, info.getData(), dataOut, bs);
1:885c379: 
1:885c379:     }
1:885c379: 
1:885c379:     /**
1:885c379:      * Un-marshal an object instance from the data input stream
1:b3ee59d:      * 
1:885c379:      * @param o the object to un-marshal
1:885c379:      * @param dataIn the data input stream to build the object from
1:885c379:      * @throws IOException
1:885c379:      */
1:885c379:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn) throws IOException {
1:885c379:         super.looseUnmarshal(wireFormat, o, dataIn);
1:885c379: 
1:885c379:         DataArrayResponse info = (DataArrayResponse)o;
1:885c379: 
1:885c379:         if (dataIn.readBoolean()) {
1:885c379:             short size = dataIn.readShort();
1:885c379:             org.apache.activemq.command.DataStructure value[] = new org.apache.activemq.command.DataStructure[size];
1:b3ee59d:             for (int i = 0; i < size; i++) {
1:b3ee59d:                 value[i] = (org.apache.activemq.command.DataStructure)looseUnmarsalNestedObject(wireFormat,
1:b3ee59d:                                                                                                 dataIn);
1:a2033b3:             }
1:885c379:             info.setData(value);
1:b3ee59d:         } else {
1:885c379:             info.setData(null);
1:885c379:         }
1:a2033b3: 
1:885c379:     }
1:885c379: 
1:885c379:     /**
1:885c379:      * Write the booleans that this object uses to a BooleanStream
1:885c379:      */
1:885c379:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutput dataOut) throws IOException {
1:885c379: 
1:885c379:         DataArrayResponse info = (DataArrayResponse)o;
1:885c379: 
1:885c379:         super.looseMarshal(wireFormat, o, dataOut);
1:885c379:         looseMarshalObjectArray(wireFormat, info.getData(), dataOut);
1:885c379: 
1:885c379:     }
1:885c379: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9c39f4e
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:b3ee59d
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
1: import org.apache.activemq.command.DataArrayResponse;
1: import org.apache.activemq.command.DataStructure;
1: import org.apache.activemq.openwire.BooleanStream;
1: import org.apache.activemq.openwire.OpenWireFormat;
1:  * 
1:  * 
1:  * NOTE!: This file is auto generated - do not modify! if you need to make a
1:  * change, please see the modify the groovy scripts in the under src/gram/script
1:  * and then use maven openwire:generate to regenerate this file.
1:  * 
1:      * 
1: 
/////////////////////////////////////////////////////////////////////////
1:      * 
1:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs)
1:         throws IOException {
/////////////////////////////////////////////////////////////////////////
1:             for (int i = 0; i < size; i++) {
1:                 value[i] = (org.apache.activemq.command.DataStructure)tightUnmarsalNestedObject(wireFormat,
1:                                                                                                 dataIn, bs);
1:         } else {
/////////////////////////////////////////////////////////////////////////
1:      * 
1:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs)
1:         throws IOException {
/////////////////////////////////////////////////////////////////////////
1:      * 
/////////////////////////////////////////////////////////////////////////
1:             for (int i = 0; i < size; i++) {
1:                 value[i] = (org.apache.activemq.command.DataStructure)looseUnmarsalNestedObject(wireFormat,
1:                                                                                                 dataIn);
1:         } else {
commit:a2033b3
/////////////////////////////////////////////////////////////////////////
1:  *
/////////////////////////////////////////////////////////////////////////
0:  * http://www.apache.org/licenses/LICENSE-2.0
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.openwire.*;
0: import org.apache.activemq.command.*;
1: 
1: 
1:  *
1:  *
0:  * NOTE!: This file is auto generated - do not modify!
0:  *        if you need to make a change, please see the modify the groovy scripts in the
0:  *        under src/gram/script and then use maven openwire:generate to regenerate 
0:  *        this file.
1:  *
1:     
/////////////////////////////////////////////////////////////////////////
0:      *
0:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
/////////////////////////////////////////////////////////////////////////
0:             for( int i=0; i < size; i++ ) {
0:                 value[i] = (org.apache.activemq.command.DataStructure) tightUnmarsalNestedObject(wireFormat,dataIn, bs);
1:         }
0:         else {
1: 
/////////////////////////////////////////////////////////////////////////
0:      *
0:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs) throws IOException {
/////////////////////////////////////////////////////////////////////////
0:      *
/////////////////////////////////////////////////////////////////////////
0:             for( int i=0; i < size; i++ ) {
0:                 value[i] = (org.apache.activemq.command.DataStructure) looseUnmarsalNestedObject(wireFormat,dataIn);
1:         }
0:         else {
1: 
commit:74a7a8b
/////////////////////////////////////////////////////////////////////////
0: import org.apache.activemq.command.DataArrayResponse;
0: import org.apache.activemq.command.DataStructure;
0: import org.apache.activemq.openwire.BooleanStream;
0: import org.apache.activemq.openwire.OpenWireFormat;
commit:f812e34
/////////////////////////////////////////////////////////////////////////
0:  * 
0:  * 
0:  * NOTE!: This file is auto generated - do not modify! if you need to make a
0:  * change, please see the modify the groovy scripts in the under src/gram/script
0:  * and then use maven openwire:generate to regenerate this file.
0:  * 
0:      * 
1: 
/////////////////////////////////////////////////////////////////////////
0:      * 
0:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs)
0:         throws IOException {
/////////////////////////////////////////////////////////////////////////
0:             for (int i = 0; i < size; i++) {
0:                 value[i] = (org.apache.activemq.command.DataStructure)tightUnmarsalNestedObject(wireFormat,
0:                                                                                                 dataIn, bs);
0:         } else {
/////////////////////////////////////////////////////////////////////////
0:      * 
0:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs)
0:         throws IOException {
/////////////////////////////////////////////////////////////////////////
0:      * 
/////////////////////////////////////////////////////////////////////////
0:             for (int i = 0; i < size; i++) {
0:                 value[i] = (org.apache.activemq.command.DataStructure)looseUnmarsalNestedObject(wireFormat,
0:                                                                                                 dataIn);
0:         } else {
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
0:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:885c379
/////////////////////////////////////////////////////////////////////////
1: /**
0:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
0:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: 
1: package org.apache.activemq.openwire.v3;
1: 
1: import java.io.DataInput;
1: import java.io.DataOutput;
1: import java.io.IOException;
1: 
0: import org.apache.activemq.openwire.*;
0: import org.apache.activemq.command.*;
1: 
1: 
1: 
1: /**
1:  * Marshalling code for Open Wire Format for DataArrayResponseMarshaller
0:  *
0:  *
0:  * NOTE!: This file is auto generated - do not modify!
0:  *        if you need to make a change, please see the modify the groovy scripts in the
0:  *        under src/gram/script and then use maven openwire:generate to regenerate 
0:  *        this file.
0:  *
0:  * @version $Revision$
1:  */
1: public class DataArrayResponseMarshaller extends ResponseMarshaller {
1: 
1:     /**
1:      * Return the type of Data Structure we marshal
1:      * @return short representation of the type data structure
1:      */
1:     public byte getDataStructureType() {
1:         return DataArrayResponse.DATA_STRUCTURE_TYPE;
1:     }
1:     
1:     /**
1:      * @return a new object instance
1:      */
1:     public DataStructure createObject() {
1:         return new DataArrayResponse();
1:     }
1: 
1:     /**
1:      * Un-marshal an object instance from the data input stream
0:      *
1:      * @param o the object to un-marshal
1:      * @param dataIn the data input stream to build the object from
1:      * @throws IOException
1:      */
0:     public void tightUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn, BooleanStream bs) throws IOException {
1:         super.tightUnmarshal(wireFormat, o, dataIn, bs);
1: 
1:         DataArrayResponse info = (DataArrayResponse)o;
1: 
1:         if (bs.readBoolean()) {
1:             short size = dataIn.readShort();
1:             org.apache.activemq.command.DataStructure value[] = new org.apache.activemq.command.DataStructure[size];
0:             for( int i=0; i < size; i++ ) {
0:                 value[i] = (org.apache.activemq.command.DataStructure) tightUnmarsalNestedObject(wireFormat,dataIn, bs);
1:             }
1:             info.setData(value);
1:         }
0:         else {
1:             info.setData(null);
1:         }
1: 
1:     }
1: 
1: 
1:     /**
1:      * Write the booleans that this object uses to a BooleanStream
1:      */
1:     public int tightMarshal1(OpenWireFormat wireFormat, Object o, BooleanStream bs) throws IOException {
1: 
1:         DataArrayResponse info = (DataArrayResponse)o;
1: 
1:         int rc = super.tightMarshal1(wireFormat, o, bs);
1:         rc += tightMarshalObjectArray1(wireFormat, info.getData(), bs);
1: 
1:         return rc + 0;
1:     }
1: 
1:     /**
1:      * Write a object instance to data output stream
0:      *
1:      * @param o the instance to be marshaled
1:      * @param dataOut the output stream
1:      * @throws IOException thrown if an error occurs
1:      */
0:     public void tightMarshal2(OpenWireFormat wireFormat, Object o, DataOutput dataOut, BooleanStream bs) throws IOException {
1:         super.tightMarshal2(wireFormat, o, dataOut, bs);
1: 
1:         DataArrayResponse info = (DataArrayResponse)o;
1:         tightMarshalObjectArray2(wireFormat, info.getData(), dataOut, bs);
1: 
1:     }
1: 
1:     /**
1:      * Un-marshal an object instance from the data input stream
0:      *
1:      * @param o the object to un-marshal
1:      * @param dataIn the data input stream to build the object from
1:      * @throws IOException
1:      */
1:     public void looseUnmarshal(OpenWireFormat wireFormat, Object o, DataInput dataIn) throws IOException {
1:         super.looseUnmarshal(wireFormat, o, dataIn);
1: 
1:         DataArrayResponse info = (DataArrayResponse)o;
1: 
1:         if (dataIn.readBoolean()) {
1:             short size = dataIn.readShort();
1:             org.apache.activemq.command.DataStructure value[] = new org.apache.activemq.command.DataStructure[size];
0:             for( int i=0; i < size; i++ ) {
0:                 value[i] = (org.apache.activemq.command.DataStructure) looseUnmarsalNestedObject(wireFormat,dataIn);
1:             }
1:             info.setData(value);
1:         }
0:         else {
1:             info.setData(null);
1:         }
1: 
1:     }
1: 
1: 
1:     /**
1:      * Write the booleans that this object uses to a BooleanStream
1:      */
1:     public void looseMarshal(OpenWireFormat wireFormat, Object o, DataOutput dataOut) throws IOException {
1: 
1:         DataArrayResponse info = (DataArrayResponse)o;
1: 
1:         super.looseMarshal(wireFormat, o, dataOut);
1:         looseMarshalObjectArray(wireFormat, info.getData(), dataOut);
1: 
1:     }
1: }
author:James Strachan
-------------------------------------------------------------------------------
commit:8cf4795
/////////////////////////////////////////////////////////////////////////
0: /**
============================================================================