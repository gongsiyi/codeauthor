1:4a270fe: /**
1:4a270fe:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:4a270fe:  * contributor license agreements.  See the NOTICE file distributed with
1:4a270fe:  * this work for additional information regarding copyright ownership.
1:4a270fe:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:4a270fe:  * (the "License"); you may not use this file except in compliance with
1:4a270fe:  * the License.  You may obtain a copy of the License at
1:4a270fe:  *
1:4a270fe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:4a270fe:  *
1:4a270fe:  * Unless required by applicable law or agreed to in writing, software
1:4a270fe:  * distributed under the License is distributed on an "AS IS" BASIS,
1:4a270fe:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:4a270fe:  * See the License for the specific language governing permissions and
1:4a270fe:  * limitations under the License.
1:4a270fe:  */
1:4a270fe: package org.apache.activemq.transport.amqp;
1:4a270fe: 
1:4a270fe: import java.security.cert.CertificateException;
1:4a270fe: import java.security.cert.X509Certificate;
1:4a270fe: 
1:4a270fe: import javax.net.ssl.X509TrustManager;
1:4a270fe: 
1:4a270fe: import org.slf4j.Logger;
1:4a270fe: import org.slf4j.LoggerFactory;
1:4a270fe: 
1:4a270fe: public class DefaultTrustManager implements X509TrustManager {
1:4a270fe: 
1:4a270fe:     protected static final Logger LOG = LoggerFactory.getLogger(DefaultTrustManager.class);
1:4a270fe: 
1:4a270fe:     @Override
1:4a270fe:     public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
1:4a270fe:     }
1:4a270fe: 
1:4a270fe:     @Override
1:4a270fe:     public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
1:4a270fe:     }
1:4a270fe: 
1:4a270fe:     @Override
1:4a270fe:     public X509Certificate[] getAcceptedIssuers() {
1:4a270fe:         return new X509Certificate[0];
1:4a270fe:     }
1:4a270fe: }
============================================================================
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:4a270fe
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.transport.amqp;
1: 
1: import java.security.cert.CertificateException;
1: import java.security.cert.X509Certificate;
1: 
1: import javax.net.ssl.X509TrustManager;
1: 
1: import org.slf4j.Logger;
1: import org.slf4j.LoggerFactory;
1: 
1: public class DefaultTrustManager implements X509TrustManager {
1: 
1:     protected static final Logger LOG = LoggerFactory.getLogger(DefaultTrustManager.class);
1: 
1:     @Override
1:     public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
1:     }
1: 
1:     @Override
1:     public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
1:     }
1: 
1:     @Override
1:     public X509Certificate[] getAcceptedIssuers() {
1:         return new X509Certificate[0];
1:     }
1: }
============================================================================