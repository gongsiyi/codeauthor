1:3953b9a: /**
1:3953b9a:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:3953b9a:  * contributor license agreements.  See the NOTICE file distributed with
1:3953b9a:  * this work for additional information regarding copyright ownership.
1:3953b9a:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:3953b9a:  * (the "License"); you may not use this file except in compliance with
1:3953b9a:  * the License.  You may obtain a copy of the License at
1:3953b9a:  *
1:3953b9a:  *      http://www.apache.org/licenses/LICENSE-2.0
1:3953b9a:  *
1:3953b9a:  * Unless required by applicable law or agreed to in writing, software
1:3953b9a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:3953b9a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:3953b9a:  * See the License for the specific language governing permissions and
1:3953b9a:  * limitations under the License.
1:3953b9a:  */
1:3953b9a: package org.apache.activemq.command;
1:3953b9a: 
1:3953b9a: import org.apache.activemq.state.CommandVisitor;
1:3953b9a: 
1:3953b9a: /**
1:eb9c584:  * Used to represent the durable subscriptions contained by the broker
1:eb9c584:  * This is used to synchronize durable subs on bridge creation
1:3953b9a:  *
1:3953b9a:  * @openwire:marshaller code="92"
1:3953b9a:  *
1:3953b9a:  */
1:3953b9a: public class BrokerSubscriptionInfo extends BaseCommand {
1:3953b9a: 
1:3953b9a:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.BROKER_SUBSCRIPTION_INFO;
1:3953b9a: 
1:3953b9a:     BrokerId brokerId;
1:3953b9a:     String brokerName;
1:3953b9a:     ConsumerInfo subscriptionInfos[];
1:3953b9a: 
1:3953b9a:     public BrokerSubscriptionInfo() {
1:3953b9a: 
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     public BrokerSubscriptionInfo(String brokerName) {
1:3953b9a:         this.brokerName = brokerName;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     public BrokerSubscriptionInfo copy() {
1:3953b9a:         BrokerSubscriptionInfo copy = new BrokerSubscriptionInfo();
1:3953b9a:         copy(copy);
1:3953b9a:         return copy;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     private void copy(BrokerSubscriptionInfo copy) {
1:3953b9a:         super.copy(copy);
1:3953b9a:         copy.subscriptionInfos = this.subscriptionInfos;
1:3953b9a:         copy.brokerName = this.brokerName;
1:3953b9a:         copy.brokerId = this.brokerId;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     @Override
1:3953b9a:     public Response visit(CommandVisitor visitor) throws Exception {
1:3953b9a:         return visitor.processBrokerSubscriptionInfo(this);
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     @Override
1:3953b9a:     public byte getDataStructureType() {
1:3953b9a:         return DATA_STRUCTURE_TYPE;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     /**
1:3953b9a:      * @openwire:property version=12
1:3953b9a:      */
1:3953b9a:     public BrokerId getBrokerId() {
1:3953b9a:         return brokerId;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     public void setBrokerId(BrokerId brokerId) {
1:3953b9a:         this.brokerId = brokerId;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     /**
1:3953b9a:      * @openwire:property version=12
1:3953b9a:      */
1:3953b9a:     public String getBrokerName() {
1:3953b9a:         return brokerName;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     public void setBrokerName(String brokerName) {
1:3953b9a:         this.brokerName = brokerName;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     /**
1:3953b9a:      * @openwire:property version=12
1:3953b9a:      */
1:3953b9a:     public ConsumerInfo[] getSubscriptionInfos() {
1:3953b9a:         return subscriptionInfos;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a:     public void setSubscriptionInfos(ConsumerInfo[] subscriptionInfos) {
1:3953b9a:         this.subscriptionInfos = subscriptionInfos;
1:3953b9a:     }
1:3953b9a: 
1:3953b9a: }
============================================================================
author:Christopher L. Shannon (cshannon)
-------------------------------------------------------------------------------
commit:eb9c584
/////////////////////////////////////////////////////////////////////////
1:  * Used to represent the durable subscriptions contained by the broker
1:  * This is used to synchronize durable subs on bridge creation
commit:3953b9a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.command;
1: 
1: import org.apache.activemq.state.CommandVisitor;
1: 
1: /**
0:  * Used to represent a durable subscription.
1:  *
1:  * @openwire:marshaller code="92"
1:  *
1:  */
1: public class BrokerSubscriptionInfo extends BaseCommand {
1: 
1:     public static final byte DATA_STRUCTURE_TYPE = CommandTypes.BROKER_SUBSCRIPTION_INFO;
1: 
1:     BrokerId brokerId;
1:     String brokerName;
1:     ConsumerInfo subscriptionInfos[];
1: 
1:     public BrokerSubscriptionInfo() {
1: 
1:     }
1: 
1:     public BrokerSubscriptionInfo(String brokerName) {
1:         this.brokerName = brokerName;
1:     }
1: 
1:     public BrokerSubscriptionInfo copy() {
1:         BrokerSubscriptionInfo copy = new BrokerSubscriptionInfo();
1:         copy(copy);
1:         return copy;
1:     }
1: 
1:     private void copy(BrokerSubscriptionInfo copy) {
1:         super.copy(copy);
1:         copy.subscriptionInfos = this.subscriptionInfos;
1:         copy.brokerName = this.brokerName;
1:         copy.brokerId = this.brokerId;
1:     }
1: 
1:     @Override
1:     public Response visit(CommandVisitor visitor) throws Exception {
1:         return visitor.processBrokerSubscriptionInfo(this);
1:     }
1: 
1:     @Override
1:     public byte getDataStructureType() {
1:         return DATA_STRUCTURE_TYPE;
1:     }
1: 
1:     /**
1:      * @openwire:property version=12
1:      */
1:     public BrokerId getBrokerId() {
1:         return brokerId;
1:     }
1: 
1:     public void setBrokerId(BrokerId brokerId) {
1:         this.brokerId = brokerId;
1:     }
1: 
1:     /**
1:      * @openwire:property version=12
1:      */
1:     public String getBrokerName() {
1:         return brokerName;
1:     }
1: 
1:     public void setBrokerName(String brokerName) {
1:         this.brokerName = brokerName;
1:     }
1: 
1:     /**
1:      * @openwire:property version=12
1:      */
1:     public ConsumerInfo[] getSubscriptionInfos() {
1:         return subscriptionInfos;
1:     }
1: 
1:     public void setSubscriptionInfos(ConsumerInfo[] subscriptionInfos) {
1:         this.subscriptionInfos = subscriptionInfos;
1:     }
1: 
1: }
============================================================================