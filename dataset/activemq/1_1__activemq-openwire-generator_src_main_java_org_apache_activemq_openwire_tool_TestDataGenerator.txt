1:fcb5d9e: /**
1:7f883f6:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:7f883f6:  * contributor license agreements.  See the NOTICE file distributed with
1:7f883f6:  * this work for additional information regarding copyright ownership.
1:7f883f6:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:7f883f6:  * (the "License"); you may not use this file except in compliance with
1:7f883f6:  * the License.  You may obtain a copy of the License at
1:7f883f6:  *
1:5f1adbe:  *      http://www.apache.org/licenses/LICENSE-2.0
1:7f883f6:  *
1:fcb5d9e:  * Unless required by applicable law or agreed to in writing, software
1:7f883f6:  * distributed under the License is distributed on an "AS IS" BASIS,
1:7f883f6:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:7f883f6:  * See the License for the specific language governing permissions and
1:7f883f6:  * limitations under the License.
1:7f883f6:  */
1:fcb5d9e: package org.apache.activemq.openwire.tool;
1:fcb5d9e: 
1:fcb5d9e: /**
1:fcb5d9e:  * A simple helper class to help auto-generate test data when code generating test cases
1:b0c2a40:  * 
1:7f883f6:  * 
1:fcb5d9e:  */
1:fcb5d9e: public class TestDataGenerator {
1:fcb5d9e:     private int stringCounter;
1:fcb5d9e: 
1:fcb5d9e:     private boolean boolCounter;
1:fcb5d9e:     private byte byteCounter;
1:fcb5d9e:     private char charCounter = 'a';
1:fcb5d9e:     private short shortCounter;
1:fcb5d9e:     private int intCounter;
1:fcb5d9e:     private long longCounter;
1:fcb5d9e:     
1:fcb5d9e:     public String createByte() {
1:fcb5d9e:         return "(byte) " + (++byteCounter);
1:fcb5d9e:     }
1:fcb5d9e:     
1:fcb5d9e:     public String createChar() {
1:fcb5d9e:         return "'" + (charCounter++) + "'";
1:fcb5d9e:     }
1:fcb5d9e:     
1:fcb5d9e:     public String createShort() {
1:fcb5d9e:         return "(short) " + (++shortCounter);
1:fcb5d9e:     }
1:fcb5d9e: 
1:fcb5d9e:     public int createInt() {
1:fcb5d9e:         return ++intCounter;
1:fcb5d9e:     }
1:fcb5d9e: 
1:fcb5d9e:     public long createLong() {
1:fcb5d9e:         return ++longCounter;
1:fcb5d9e:     }
1:fcb5d9e: 
1:fcb5d9e:     public String createString(String property) {
1:fcb5d9e:         return property + ":" + (++stringCounter);
1:fcb5d9e:     }
1:fcb5d9e: 
1:fcb5d9e:     public boolean createBool() {
1:fcb5d9e:         boolCounter = !boolCounter;
1:fcb5d9e:         return boolCounter;
1:fcb5d9e:     }
1:fcb5d9e:     
1:fcb5d9e:     public String createByteArray(String property) {
1:fcb5d9e:         return "\"" + createString(property) + "\".getBytes()";
1:fcb5d9e:     }
1:fcb5d9e: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:5f1adbe
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:7f883f6
/////////////////////////////////////////////////////////////////////////
1:  *
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
commit:fcb5d9e
/////////////////////////////////////////////////////////////////////////
1: /**
0:  * 
0:  * Copyright 2005 LogicBlaze, Inc. http://www.logicblaze.com
0:  * 
0:  * Licensed under the Apache License, Version 2.0 (the "License"); 
0:  * you may not use this file except in compliance with the License. 
0:  * You may obtain a copy of the License at 
0:  * 
0:  * http://www.apache.org/licenses/LICENSE-2.0
0:  * 
1:  * Unless required by applicable law or agreed to in writing, software
0:  * distributed under the License is distributed on an "AS IS" BASIS, 
0:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
0:  * See the License for the specific language governing permissions and 
0:  * limitations under the License. 
0:  * 
0:  **/
1: package org.apache.activemq.openwire.tool;
1: 
1: /**
1:  * A simple helper class to help auto-generate test data when code generating test cases
0:  * 
0:  * @version $Revision: 1.1 $
1:  */
1: public class TestDataGenerator {
1:     private int stringCounter;
1: 
1:     private boolean boolCounter;
1:     private byte byteCounter;
1:     private char charCounter = 'a';
1:     private short shortCounter;
1:     private int intCounter;
1:     private long longCounter;
1:     
1:     public String createByte() {
1:         return "(byte) " + (++byteCounter);
1:     }
1:     
1:     public String createChar() {
1:         return "'" + (charCounter++) + "'";
1:     }
1:     
1:     public String createShort() {
1:         return "(short) " + (++shortCounter);
1:     }
1: 
1:     public int createInt() {
1:         return ++intCounter;
1:     }
1: 
1:     public long createLong() {
1:         return ++longCounter;
1:     }
1: 
1:     public String createString(String property) {
1:         return property + ":" + (++stringCounter);
1:     }
1: 
1:     public boolean createBool() {
1:         boolCounter = !boolCounter;
1:         return boolCounter;
1:     }
1:     
1:     public String createByteArray(String property) {
1:         return "\"" + createString(property) + "\".getBytes()";
1:     }
1: }
============================================================================