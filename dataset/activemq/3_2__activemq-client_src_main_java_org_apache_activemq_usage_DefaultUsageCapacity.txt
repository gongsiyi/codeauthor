1:6d8e2c5: /**
1:6d8e2c5:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:6d8e2c5:  * contributor license agreements.  See the NOTICE file distributed with
1:6d8e2c5:  * this work for additional information regarding copyright ownership.
1:6d8e2c5:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:6d8e2c5:  * (the "License"); you may not use this file except in compliance with
1:6d8e2c5:  * the License.  You may obtain a copy of the License at
1:6d8e2c5:  *
1:6d8e2c5:  *      http://www.apache.org/licenses/LICENSE-2.0
1:6d8e2c5:  *
1:6d8e2c5:  * Unless required by applicable law or agreed to in writing, software
1:6d8e2c5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:6d8e2c5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:6d8e2c5:  * See the License for the specific language governing permissions and
1:6d8e2c5:  * limitations under the License.
1:6d8e2c5:  */
1:6d8e2c5: package org.apache.activemq.usage;
1:6d8e2c5: 
1:6d8e2c5: 
1:6d8e2c5: 
1:6d8e2c5: /**
1:6d8e2c5:  Identify if a limit has been reached
1:6d8e2c5:  * 
1:6d8e2c5:  * @org.apache.xbean.XBean
1:b0c2a40:  * 
1:6d8e2c5:  * 
1:6d8e2c5:  */
1:6d8e2c5: public class DefaultUsageCapacity implements UsageCapacity{
1:6d8e2c5: 
1:6d8e2c5:     private long limit;
1:6d8e2c5:     
1:6d8e2c5:     /**
1:6d8e2c5:      * @param size
1:6d8e2c5:      * @return true if the limit is reached
1:6d8e2c5:      * @see org.apache.activemq.usage.UsageCapacity#isLimit(long)
1:6d8e2c5:      */
1:6d8e2c5:     public boolean isLimit(long size) {
1:6d8e2c5:         return size >= limit;
1:6d8e2c5:     }
1:6d8e2c5: 
1:6d8e2c5:     
1:6d8e2c5:     /**
1:6d8e2c5:      * @return the limit
1:6d8e2c5:      */
1:6d8e2c5:     public final long getLimit(){
1:6d8e2c5:         return this.limit;
1:6d8e2c5:     }
1:6d8e2c5: 
1:6d8e2c5:     
1:6d8e2c5:     /**
1:6d8e2c5:      * @param limit the limit to set
1:6d8e2c5:      */
1:6d8e2c5:     public final void setLimit(long limit){
1:6d8e2c5:         this.limit=limit;
1:6d8e2c5:     }
1:6d8e2c5: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:b0c2a40
/////////////////////////////////////////////////////////////////////////
1:  * 
author:Robert Davies
-------------------------------------------------------------------------------
commit:6d8e2c5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
1:  *
1:  *      http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.usage;
1: 
1: 
1: 
1: /**
1:  Identify if a limit has been reached
1:  * 
1:  * @org.apache.xbean.XBean
1:  * 
0:  * @version $Revision: 1.3 $
1:  */
1: public class DefaultUsageCapacity implements UsageCapacity{
1: 
1:     private long limit;
1:     
1:     /**
1:      * @param size
1:      * @return true if the limit is reached
1:      * @see org.apache.activemq.usage.UsageCapacity#isLimit(long)
1:      */
1:     public boolean isLimit(long size) {
1:         return size >= limit;
1:     }
1: 
1:     
1:     /**
1:      * @return the limit
1:      */
1:     public final long getLimit(){
1:         return this.limit;
1:     }
1: 
1:     
1:     /**
1:      * @param limit the limit to set
1:      */
1:     public final void setLimit(long limit){
1:         this.limit=limit;
1:     }
1: }
============================================================================