1:a640ff5: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:a640ff5:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:a640ff5:  *
1:a640ff5:  * Unless required by applicable law or agreed to in writing, software
1:a640ff5:  * distributed under the License is distributed on an "AS IS" BASIS,
1:a640ff5:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:a640ff5:  * See the License for the specific language governing permissions and
1:a640ff5:  * limitations under the License.
1:a640ff5:  */
1:a640ff5: package org.apache.activemq.security;
1:a640ff5: 
1:a640ff5: import org.apache.activemq.broker.ConnectionContext;
1:a640ff5: import org.apache.activemq.command.Message;
1:a640ff5: 
1:a640ff5: /**
1:a640ff5:  * A plugin to allow custom message-level security checks to be performed before
1:a640ff5:  * a message is consumed.
1:0bbc0ac:  * 
1:a640ff5:  * 
1:a640ff5:  */
1:a640ff5: public interface MessageAuthorizationPolicy {
1:a640ff5: 
1:a640ff5:     /**
1:a640ff5:      * Returns true if the given message is able to be dispatched to the connection
1:a640ff5:      * performing any user
1:a640ff5:      * 
1:a640ff5:      * @return true if the context is allowed to consume the message
1:a640ff5:      */
1:a640ff5:     boolean isAllowedToConsume(ConnectionContext context, Message message);
1:a640ff5: 
1:a640ff5: }
============================================================================
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:58aca86
commit:0bbc0ac
/////////////////////////////////////////////////////////////////////////
1:  * 
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
author:James Strachan
-------------------------------------------------------------------------------
commit:a640ff5
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2005-2006 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.security;
1: 
1: import org.apache.activemq.broker.ConnectionContext;
1: import org.apache.activemq.command.Message;
1: 
1: /**
1:  * A plugin to allow custom message-level security checks to be performed before
1:  * a message is consumed.
1:  * 
0:  * @version $Revision$
1:  */
1: public interface MessageAuthorizationPolicy {
1: 
1:     /**
1:      * Returns true if the given message is able to be dispatched to the connection
1:      * performing any user
1:      * 
1:      * @return true if the context is allowed to consume the message
1:      */
1:     boolean isAllowedToConsume(ConnectionContext context, Message message);
1: 
1: }
============================================================================