1:d29ca2a: /**
1:57b4941:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:57b4941:  * contributor license agreements.  See the NOTICE file distributed with
1:57b4941:  * this work for additional information regarding copyright ownership.
1:57b4941:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:57b4941:  * (the "License"); you may not use this file except in compliance with
1:57b4941:  * the License.  You may obtain a copy of the License at
3:d29ca2a:  *
1:230a86c:  *      http://www.apache.org/licenses/LICENSE-2.0
1:d29ca2a:  *
1:d29ca2a:  * Unless required by applicable law or agreed to in writing, software
1:d29ca2a:  * distributed under the License is distributed on an "AS IS" BASIS,
1:d29ca2a:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:d29ca2a:  * See the License for the specific language governing permissions and
1:d29ca2a:  * limitations under the License.
1:d29ca2a:  */
1:d29ca2a: package org.apache.activemq.util;
3:d29ca2a: 
1:d29ca2a: import javax.jms.JMSException;
1:f87f562: import javax.jms.JMSSecurityException;
1:d29ca2a: import javax.jms.MessageEOFException;
1:d29ca2a: import javax.jms.MessageFormatException;
1:d29ca2a: 
1:fc00993: public final class JMSExceptionSupport {
1:d29ca2a: 
1:933eb2f:     private JMSExceptionSupport() {
1:933eb2f:     }
1:933eb2f: 
1:d29ca2a:     public static JMSException create(String msg, Throwable cause) {
3:d29ca2a:         JMSException exception = new JMSException(msg);
1:d29ca2a:         exception.initCause(cause);
1:d29ca2a:         return exception;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public static JMSException create(String msg, Exception cause) {
1:d29ca2a:         JMSException exception = new JMSException(msg);
1:d29ca2a:         exception.setLinkedException(cause);
1:d29ca2a:         exception.initCause(cause);
1:d29ca2a:         return exception;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public static JMSException create(Throwable cause) {
1:d29ca2a:         if (cause instanceof JMSException) {
1:f812e34:             return (JMSException)cause;
1:d29ca2a:         }
1:d29ca2a:         String msg = cause.getMessage();
1:fc00993:         if (msg == null || msg.length() == 0) {
1:d29ca2a:             msg = cause.toString();
1:fc00993:         }
1:f87f562:         JMSException exception;
1:f87f562:         if (cause instanceof SecurityException) {
1:f87f562:             exception = new JMSSecurityException(msg);
1:f87f562:         } else {
1:f87f562:             exception = new JMSException(msg);
1:f87f562:         }
1:d29ca2a:         exception.initCause(cause);
1:d29ca2a:         return exception;
1:f87f562:     }
1:d29ca2a: 
1:d29ca2a:     public static JMSException create(Exception cause) {
1:d29ca2a:         if (cause instanceof JMSException) {
1:f812e34:             return (JMSException)cause;
1:fc00993:         }
1:d29ca2a:         String msg = cause.getMessage();
1:fc00993:         if (msg == null || msg.length() == 0) {
1:d29ca2a:             msg = cause.toString();
1:d29ca2a:         }
1:f87f562:         JMSException exception;
1:f87f562:         if (cause instanceof SecurityException) {
1:f87f562:             exception = new JMSSecurityException(msg);
1:f87f562:         } else {
1:f87f562:             exception = new JMSException(msg);
1:d29ca2a:         }
1:d29ca2a:         exception.setLinkedException(cause);
1:d29ca2a:         exception.initCause(cause);
1:d29ca2a:         return exception;
1:d29ca2a:     }
1:d29ca2a: 
1:d29ca2a:     public static MessageEOFException createMessageEOFException(Exception cause) {
1:d29ca2a:         String msg = cause.getMessage();
1:fc00993:         if (msg == null || msg.length() == 0) {
1:d29ca2a:             msg = cause.toString();
1:fc00993:         }
1:d29ca2a:         MessageEOFException exception = new MessageEOFException(msg);
1:d29ca2a:         exception.setLinkedException(cause);
1:d29ca2a:         exception.initCause(cause);
1:d29ca2a:         return exception;
1:d29ca2a:     }
1:f812e34: 
1:d29ca2a:     public static MessageFormatException createMessageFormatException(Exception cause) {
1:d29ca2a:         String msg = cause.getMessage();
1:fc00993:         if (msg == null || msg.length() == 0) {
1:d29ca2a:             msg = cause.toString();
1:fc00993:         }
1:d29ca2a:         MessageFormatException exception = new MessageFormatException(msg);
1:d29ca2a:         exception.setLinkedException(cause);
1:d29ca2a:         exception.initCause(cause);
1:d29ca2a:         return exception;
1:d29ca2a:     }
1:d29ca2a: }
============================================================================
author:Hadrian Zbarcea
-------------------------------------------------------------------------------
commit:d54d046
author:Timothy A. Bish
-------------------------------------------------------------------------------
commit:f87f562
/////////////////////////////////////////////////////////////////////////
1: import javax.jms.JMSSecurityException;
/////////////////////////////////////////////////////////////////////////
1:         JMSException exception;
1:         if (cause instanceof SecurityException) {
1:             exception = new JMSSecurityException(msg);
1:         } else {
1:             exception = new JMSException(msg);
1:         }
/////////////////////////////////////////////////////////////////////////
1:         JMSException exception;
1:         if (cause instanceof SecurityException) {
1:             exception = new JMSSecurityException(msg);
1:         } else {
1:             exception = new JMSException(msg);
1:         }
author:Hiram R. Chirino
-------------------------------------------------------------------------------
commit:9a8f6e4
commit:933eb2f
/////////////////////////////////////////////////////////////////////////
1:     private JMSExceptionSupport() {
1:     }
1: 
commit:fc00993
/////////////////////////////////////////////////////////////////////////
1: public final class JMSExceptionSupport {
/////////////////////////////////////////////////////////////////////////
1:         if (msg == null || msg.length() == 0) {
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (msg == null || msg.length() == 0) {
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (msg == null || msg.length() == 0) {
1:         }
/////////////////////////////////////////////////////////////////////////
1:         if (msg == null || msg.length() == 0) {
1:         }
commit:f812e34
/////////////////////////////////////////////////////////////////////////
1: 
1:             return (JMSException)cause;
0:         if (msg == null || msg.length() == 0)
/////////////////////////////////////////////////////////////////////////
1:             return (JMSException)cause;
0:         if (msg == null || msg.length() == 0)
/////////////////////////////////////////////////////////////////////////
0:         if (msg == null || msg.length() == 0)
1: 
0:         if (msg == null || msg.length() == 0)
commit:230a86c
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
1:  *      http://www.apache.org/licenses/LICENSE-2.0
commit:57b4941
/////////////////////////////////////////////////////////////////////////
1:  * Licensed to the Apache Software Foundation (ASF) under one or more
1:  * contributor license agreements.  See the NOTICE file distributed with
1:  * this work for additional information regarding copyright ownership.
1:  * The ASF licenses this file to You under the Apache License, Version 2.0
1:  * (the "License"); you may not use this file except in compliance with
1:  * the License.  You may obtain a copy of the License at
commit:48b4869
/////////////////////////////////////////////////////////////////////////
0:  * Copyright 2005-2006 The Apache Software Foundation
commit:d29ca2a
/////////////////////////////////////////////////////////////////////////
1: /**
1:  *
0:  * Copyright 2004 The Apache Software Foundation
1:  *
0:  * Licensed under the Apache License, Version 2.0 (the "License");
0:  * you may not use this file except in compliance with the License.
0:  * You may obtain a copy of the License at
1:  *
0:  * http://www.apache.org/licenses/LICENSE-2.0
1:  *
1:  * Unless required by applicable law or agreed to in writing, software
1:  * distributed under the License is distributed on an "AS IS" BASIS,
1:  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
1:  * See the License for the specific language governing permissions and
1:  * limitations under the License.
1:  */
1: package org.apache.activemq.util;
1: 
1: import javax.jms.JMSException;
1: import javax.jms.MessageEOFException;
1: import javax.jms.MessageFormatException;
1: 
0: final public class JMSExceptionSupport {
1: 
1:     public static JMSException create(String msg, Throwable cause) {
1:         JMSException exception = new JMSException(msg);
1:         exception.initCause(cause);
1:         return exception;
1:     }
1: 
1:     public static JMSException create(String msg, Exception cause) {
1:         JMSException exception = new JMSException(msg);
1:         exception.setLinkedException(cause);
1:         exception.initCause(cause);
1:         return exception;
1:     }
1:     
1:     public static JMSException create(Throwable cause) {
1:         if (cause instanceof JMSException) {
0:             return (JMSException) cause;
1:         }
1:         String msg = cause.getMessage();
0:         if( msg==null || msg.length()==0 )
1:             msg = cause.toString();
1:         JMSException exception = new JMSException(msg);
1:         exception.initCause(cause);
1:         return exception;
1:     }
1: 
1:     public static JMSException create(Exception cause) {
1:         if (cause instanceof JMSException) {
0:             return (JMSException) cause;
1:         }
1:         String msg = cause.getMessage();
0:         if( msg==null || msg.length()==0 )
1:             msg = cause.toString();
1:         JMSException exception = new JMSException(msg);
1:         exception.setLinkedException(cause);
1:         exception.initCause(cause);
1:         return exception;
1:     }
1: 
1:     public static MessageEOFException createMessageEOFException(Exception cause) {
1:         String msg = cause.getMessage();
0:         if( msg==null || msg.length()==0 )
1:             msg = cause.toString();
1:         MessageEOFException exception = new MessageEOFException(msg);
1:         exception.setLinkedException(cause);
1:         exception.initCause(cause);
1:         return exception;
1:     }
1:     
1:     public static MessageFormatException createMessageFormatException(Exception cause) {
1:         String msg = cause.getMessage();
0:         if( msg==null || msg.length()==0 )
1:             msg = cause.toString();
1:         MessageFormatException exception = new MessageFormatException(msg);
1:         exception.setLinkedException(cause);
1:         exception.initCause(cause);
1:         return exception;
1:     }
1: }
============================================================================